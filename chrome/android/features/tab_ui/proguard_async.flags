# Copyright 2019 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

-keep class android.content.res.Resources$Theme { *; }

-keep class android.support.v7.widget.GridLayoutManager { *; }

-keep class android.support.v7.widget.LinearLayoutManager { *; }

-keep class android.support.v7.widget.RecyclerView { *; }

-keep class android.support.v7.widget.RecyclerView$Adapter { *; }

-keep class android.support.v7.widget.RecyclerView$LayoutManager { *; }

-keep class android.support.v7.widget.RecyclerView$ViewHolder { *; }

-keep class android.support.v7.widget.helper.ItemTouchHelper { *; }

-keep class android.support.v7.widget.helper.ItemTouchHelper$Callback { *; }

-keep class android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback { *; }

-keep class android.view.View$OnClickListener { *; }

-keep class android.widget.PopupWindow$OnDismissListener { *; }

-keep class boolean { *; }

-keep class float { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$anim { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$animator { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$array { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$attr { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$bool { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$color { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$dimen { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$drawable { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$font { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$fraction { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$id { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$integer { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$layout { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$menu { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$mipmap { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$plurals { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$string { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$style { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$styleable { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$transition { *; }

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R$xml { *; }

-keep class gen._chrome._android._monochrome_public_bundle__tab_ui_bundle_module__compile_resources.srcjar.R$dimen { *; }

-keep class gen._chrome._android._monochrome_public_bundle__tab_ui_bundle_module__compile_resources.srcjar.R$drawable { *; }

-keep class gen._chrome._android._monochrome_public_bundle__tab_ui_bundle_module__compile_resources.srcjar.R$id { *; }

-keep class gen._chrome._android._monochrome_public_bundle__tab_ui_bundle_module__compile_resources.srcjar.R$layout { *; }

-keep class int { *; }

-keep class int[] { *; }

-keep class long { *; }

-keep class null { *; }

-keep class org.apache.http.conn.scheme.LayeredSocketFactory { *; }

-keep class org.apache.http.conn.scheme.SocketFactory { *; }

-keep class org.apache.http.conn.ssl.AbstractVerifier { *; }

-keep class org.apache.http.conn.ssl.X509HostnameVerifier { *; }

-keep class org.apache.http.params.CoreConnectionPNames { *; }

-keep class org.chromium.base.Callback { *; }

-keep class org.chromium.base.ObserverList { *; }

-keep class org.chromium.base.Supplier { *; }

-keep class org.chromium.base.task.TaskTraits { *; }

-keep class org.chromium.chrome.browser.ThemeColorProvider { *; }

-keep class org.chromium.chrome.browser.ThemeColorProvider$ThemeColorObserver { *; }

-keep class org.chromium.chrome.browser.ThemeColorProvider$TintObserver { *; }

-keep class org.chromium.chrome.browser.compositor.CompositorViewHolder { *; }

-keep class org.chromium.chrome.browser.compositor.layouts.EmptyOverviewModeObserver { *; }

-keep class org.chromium.chrome.browser.compositor.layouts.OverviewModeBehavior { *; }

-keep class org.chromium.chrome.browser.compositor.layouts.OverviewModeBehavior$OverviewModeObserver { *; }

-keep class org.chromium.chrome.browser.compositor.layouts.content.TabContentManager { *; }

-keep class org.chromium.chrome.browser.favicon.FaviconHelper { *; }

-keep class org.chromium.chrome.browser.favicon.FaviconHelper$FaviconImageCallback { *; }

-keep class org.chromium.chrome.browser.fullscreen.ChromeFullscreenManager { *; }

-keep class org.chromium.chrome.browser.fullscreen.ChromeFullscreenManager$FullscreenListener { *; }

-keep class org.chromium.chrome.browser.gesturenav.HistoryNavigationDelegate { *; }

-keep class org.chromium.chrome.browser.lifecycle.ActivityLifecycleDispatcher { *; }

-keep class org.chromium.chrome.browser.lifecycle.Destroyable { *; }

-keep class org.chromium.chrome.browser.lifecycle.LifecycleObserver { *; }

-keep class org.chromium.chrome.browser.lifecycle.PauseResumeWithNativeObserver { *; }

-keep class org.chromium.chrome.browser.profiles.Profile { *; }

-keep class org.chromium.chrome.browser.tab.EmptyTabObserver { *; }

-keep class org.chromium.chrome.browser.tab.Tab { *; }

-keep class org.chromium.chrome.browser.tab.TabObserver { *; }

-keep class org.chromium.chrome.browser.tabmodel.EmptyTabModelObserver { *; }

-keep class org.chromium.chrome.browser.tabmodel.EmptyTabModelSelectorObserver { *; }

-keep class org.chromium.chrome.browser.tabmodel.TabCreatorManager { *; }

-keep class org.chromium.chrome.browser.tabmodel.TabList { *; }

-keep class org.chromium.chrome.browser.tabmodel.TabModel { *; }

-keep class org.chromium.chrome.browser.tabmodel.TabModelObserver { *; }

-keep class org.chromium.chrome.browser.tabmodel.TabModelSelector { *; }

-keep class org.chromium.chrome.browser.tabmodel.TabModelSelectorObserver { *; }

-keep class org.chromium.chrome.browser.tabmodel.TabModelSelectorTabObserver { *; }

-keep class org.chromium.chrome.browser.tasks.tab_groups.TabGroupUtils$1 { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcher { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcher$GridController { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator$ResetHandler { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator$ResetHandler { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridSheetMediator$ResetHandler { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridSheetViewBinder$ViewHolder { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGroupUi { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator$ResetHandler { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListMediator$CreateGroupButtonProvider { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListMediator$GridCardOnClickListenerProvider { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListMediator$IphProvider { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListMediator$TabActionListener { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListMediator$ThumbnailProvider { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListMediator$TitleProvider { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView$VisibilityListener { *; }

-keep class org.chromium.chrome.browser.tasks.tab_management.TabManagementDelegate { *; }

-keep class org.chromium.chrome.browser.toolbar.ToolbarManager { *; }

-keep class org.chromium.chrome.browser.toolbar.bottom.BottomControlsCoordinator$BottomControlsVisibilityController { *; }

-keep class org.chromium.chrome.browser.widget.ScrimView { *; }

-keep class org.chromium.chrome.browser.widget.ScrimView$ScrimObserver { *; }

-keep class org.chromium.chrome.browser.widget.ScrimView$ScrimParams { *; }

-keep class org.chromium.chrome.browser.widget.ScrimView$StatusBarScrimDelegate { *; }

-keep class org.chromium.chrome.browser.widget.bottomsheet.BottomSheet$BottomSheetContent { *; }

-keep class org.chromium.chrome.browser.widget.bottomsheet.BottomSheetController { *; }

-keep class org.chromium.chrome.browser.widget.bottomsheet.BottomSheetObserver { *; }

-keep class org.chromium.chrome.browser.widget.bottomsheet.EmptyBottomSheetObserver { *; }

-keep class org.chromium.chrome.browser.widget.textbubble.TextBubble { *; }

-keep class org.chromium.components.feature_engagement.Tracker { *; }

-keep class org.chromium.content_public.browser.LoadUrlParams { *; }

-keep class org.chromium.ui.modelutil.ListModelBase { *; }

-keep class org.chromium.ui.modelutil.PropertyKey { *; }

-keep class org.chromium.ui.modelutil.PropertyKey[] { *; }

-keep class org.chromium.ui.modelutil.PropertyListModel { *; }

-keep class org.chromium.ui.modelutil.PropertyModel { *; }

-keep class org.chromium.ui.modelutil.PropertyModel$Builder { *; }

-keep class org.chromium.ui.modelutil.PropertyModel$ReadableBooleanPropertyKey { *; }

-keep class org.chromium.ui.modelutil.PropertyModel$ReadableFloatPropertyKey { *; }

-keep class org.chromium.ui.modelutil.PropertyModel$ReadableIntPropertyKey { *; }

-keep class org.chromium.ui.modelutil.PropertyModel$ReadableObjectPropertyKey { *; }

-keep class org.chromium.ui.modelutil.PropertyModel$WritableBooleanPropertyKey { *; }

-keep class org.chromium.ui.modelutil.PropertyModel$WritableFloatPropertyKey { *; }

-keep class org.chromium.ui.modelutil.PropertyModel$WritableIntPropertyKey { *; }

-keep class org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey { *; }

-keep class org.chromium.ui.modelutil.PropertyModelChangeProcessor$ViewBinder { *; }

-keep class org.chromium.ui.modelutil.PropertyObservable { *; }

-keep class org.chromium.ui.modelutil.RecyclerViewAdapter { *; }

-keep class org.chromium.ui.modelutil.RecyclerViewAdapter$Delegate { *; }

-keep class org.chromium.ui.modelutil.RecyclerViewAdapter$ViewHolderFactory { *; }

-keep class org.chromium.ui.modelutil.SimpleRecyclerViewMcpBase { *; }

-keep class org.chromium.ui.modelutil.SimpleRecyclerViewMcpBase$ItemViewTypeCallback { *; }

-keep class org.chromium.ui.modelutil.SimpleRecyclerViewMcpBase$ViewBinder { *; }

-keep class org.chromium.ui.resources.dynamics.DynamicResource { *; }

-keep class org.chromium.ui.resources.dynamics.DynamicResourceLoader { *; }

-keep class org.chromium.ui.resources.dynamics.ViewResourceAdapter { *; }

-keep class org.chromium.ui.widget.RectProvider { *; }

-keep class org.chromium.ui.widget.ViewRectProvider { *; }

-keep class android.support.v4.content.ContextCompat {
  int getColor(android.content.Context, int);
}

-keep class android.support.v4.content.res.ResourcesCompat {
  android.graphics.drawable.Drawable getDrawable(android.content.res.Resources, int, android.content.res.Resources$Theme);
}

-keep class android.support.v7.content.res.AppCompatResources {
  android.graphics.drawable.Drawable getDrawable(android.content.Context, int);
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator {
  void setAddDuration(long);
  long getAddDuration();
}

-keep class gen._chrome._android._features._tab_ui._java_resources.srcjar.R {
  void onResourcesLoaded(int);
  void onResourcesLoadedString(int);
  void onResourcesLoadedDrawable(int);
  void onResourcesLoadedMipmap(int);
  void onResourcesLoadedStyleable(int);
  void onResourcesLoadedInteger(int);
  void onResourcesLoadedColor(int);
  boolean sResourcesDidLoad;
  void onResourcesLoadedMenu(int);
  void onResourcesLoadedDimen(int);
  void onResourcesLoadedXml(int);
  void onResourcesLoadedLayout(int);
  void onResourcesLoadedTransition(int);
  void onResourcesLoadedBool(int);
  void onResourcesLoadedFont(int);
  void onResourcesLoadedAnim(int);
  void onResourcesLoadedAnimator(int);
  void onResourcesLoadedArray(int);
  void onResourcesLoadedStyle(int);
  void onResourcesLoadedFraction(int);
  void onResourcesLoadedAttr(int);
  void onResourcesLoadedId(int);
  void onResourcesLoadedPlurals(int);
}

-keep class org.apache.http.conn.ssl.SSLSocketFactory {
  org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER;
  org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER;
  org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER;
}

-keep class org.chromium.base.ApiCompatibilityUtils {
  void setImageTintList(android.widget.ImageView, android.content.res.ColorStateList);
  int getColor(android.content.res.Resources, int);
}

-keep class org.chromium.base.ApplicationStatus {
  android.app.Activity getLastTrackedFocusedActivity();
}

-keep class org.chromium.base.ContextUtils {
  android.content.Context getApplicationContext();
}

-keep class org.chromium.base.Log {
  void w(java.lang.String, java.lang.String, java.lang.Object[]);
}

-keep class org.chromium.base.metrics.RecordHistogram {
  void recordSparseHistogram(java.lang.String, int);
  void recordCountHistogram(java.lang.String, int);
}

-keep class org.chromium.base.metrics.RecordUserAction {
  void record(java.lang.String);
}

-keep class org.chromium.base.task.PostTask {
  void postTask(org.chromium.base.task.TaskTraits, java.lang.Runnable);
}

-keep class org.chromium.chrome.R$color {
  int modern_grey_100;
  int modern_grey_800_alpha_38;
  int modern_primary_color;
  int default_text_color_dark;
  int modern_grey_300;
}

-keep class org.chromium.chrome.R$dimen {
  int toolbar_height_no_shadow;
  int control_container_height;
  int compositor_tab_title_text_size;
  int default_favicon_size;
}

-keep class org.chromium.chrome.R$drawable {
  int btn_close;
  int ic_globe_24dp;
  int chromelogo16;
}

-keep class org.chromium.chrome.R$plurals {
  int bottom_tab_grid_title_placeholder;
}

-keep class org.chromium.chrome.R$string {
  int iph_tab_groups_your_tabs_together_text;
  int bottom_tab_grid_opened_full;
  int accessibility_tabstrip_tab;
  int iph_tab_groups_quickly_compare_pages_text;
  int iph_tab_groups_tap_to_see_another_tab_text;
  int bottom_tab_grid_opened_half;
  int iph_tab_groups_tap_to_see_another_tab_accessibility_text;
  int accessibility_tabstrip_btn_close_tab;
  int bottom_tab_grid_description;
  int bottom_tab_grid_closed;
}

-keep class org.chromium.chrome.browser.ChromeActivity {
  org.chromium.chrome.browser.lifecycle.ActivityLifecycleDispatcher getLifecycleDispatcher();
  org.chromium.chrome.browser.compositor.layouts.OverviewModeBehavior getOverviewModeBehavior();
  org.chromium.chrome.browser.toolbar.ToolbarManager getToolbarManager();
  void onBackPressed();
  org.chromium.chrome.browser.compositor.layouts.content.TabContentManager getTabContentManager();
  org.chromium.chrome.browser.fullscreen.ChromeFullscreenManager getFullscreenManager();
  boolean isWarmOnResume();
  org.chromium.chrome.browser.tabmodel.TabModelSelector getTabModelSelector();
  org.chromium.chrome.browser.widget.bottomsheet.BottomSheetController getBottomSheetController();
  org.chromium.chrome.browser.compositor.CompositorViewHolder getCompositorViewHolder();
}

-keep class org.chromium.chrome.browser.ChromeFeatureList {
  boolean isInitialized();
  boolean isEnabled(java.lang.String);
}

-keep class org.chromium.chrome.browser.ChromeTabbedActivity {
  org.chromium.chrome.browser.tabmodel.TabModelSelector getTabModelSelector();
  org.chromium.chrome.browser.compositor.layouts.OverviewModeBehavior getOverviewModeBehavior();
}

-keep class org.chromium.chrome.browser.feature_engagement.TrackerFactory {
  org.chromium.components.feature_engagement.Tracker getTrackerForProfile(org.chromium.chrome.browser.profiles.Profile);
}

-keep class org.chromium.chrome.browser.gesturenav.HistoryNavigationLayout {
  void setNavigationDelegate(org.chromium.chrome.browser.gesturenav.HistoryNavigationDelegate);
}

-keep class org.chromium.chrome.browser.metrics.UmaSessionStats {
  void registerSyntheticFieldTrial(java.lang.String, java.lang.String);
}

-keep class org.chromium.chrome.browser.native_page.NativePageFactory {
  boolean isNativePageUrl(java.lang.String, boolean);
}

-keep class org.chromium.chrome.browser.tabmodel.TabCreatorManager$TabCreator {
  org.chromium.chrome.browser.tab.Tab createNewTab(org.chromium.content_public.browser.LoadUrlParams, int, org.chromium.chrome.browser.tab.Tab);
}

-keep class org.chromium.chrome.browser.tabmodel.TabModelFilter {
  int index();
  int indexOf(org.chromium.chrome.browser.tab.Tab);
  boolean isIncognito();
  java.util.List getRelatedTabList(int);
}

-keep class org.chromium.chrome.browser.tabmodel.TabModelFilterProvider {
  void removeTabModelFilterObserver(org.chromium.chrome.browser.tabmodel.TabModelObserver);
  org.chromium.chrome.browser.tabmodel.TabModelFilter getTabModelFilter(boolean);
  org.chromium.chrome.browser.tabmodel.TabModelFilter getCurrentTabModelFilter();
  void addTabModelFilterObserver(org.chromium.chrome.browser.tabmodel.TabModelObserver);
}

-keep class org.chromium.chrome.browser.tabmodel.TabModelUtils {
  int getTabIndexById(org.chromium.chrome.browser.tabmodel.TabList, int);
  org.chromium.chrome.browser.tab.Tab getTabById(org.chromium.chrome.browser.tabmodel.TabList, int);
}

-keep class org.chromium.chrome.browser.tasks.ReturnToChromeExperimentsUtil {
  boolean shouldShowOmniboxOnTabSwitcher();
}

-keep class org.chromium.chrome.browser.tasks.tab_groups.TabGroupUtils {
  boolean isMoveInSameGroup(org.chromium.chrome.browser.tabmodel.TabModel, int, int);
  boolean $assertionsDisabled;
  void lambda$maybeShowIPH$0(org.chromium.components.feature_engagement.Tracker, java.lang.String);
  void startObservingForTabGroupsIPH(org.chromium.chrome.browser.tabmodel.TabModelSelector);
  void maybeShowIPH(java.lang.String, android.view.View);
  org.chromium.chrome.browser.tabmodel.TabModelSelectorTabObserver access$000();
  int getLastTabModelIndexForList(org.chromium.chrome.browser.tabmodel.TabModelSelector, java.util.List);
  org.chromium.chrome.browser.tabmodel.TabModelSelectorTabObserver sTabModelSelectorTabObserver;
  int getFirstTabModelIndexForList(org.chromium.chrome.browser.tabmodel.TabModelSelector, java.util.List);
  org.chromium.chrome.browser.tab.Tab getSelectedTabInGroupForTab(org.chromium.chrome.browser.tabmodel.TabModelSelector, org.chromium.chrome.browser.tab.Tab);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherCoordinator {
  org.chromium.chrome.browser.tasks.tab_management.TabListCoordinator mTabGridCoordinator;
  java.lang.String lambda$new$0(org.chromium.chrome.browser.tabmodel.TabModelSelector, android.content.Context, org.chromium.chrome.browser.tab.Tab);
  org.chromium.ui.modelutil.PropertyModelChangeProcessor mContainerViewChangeProcessor;
  org.chromium.chrome.browser.tasks.tab_management.TabGridDialogCoordinator mTabGridDialogCoordinator;
  org.chromium.chrome.browser.lifecycle.ActivityLifecycleDispatcher mLifecycleDispatcher;
  org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator mMediator;
  org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider mMultiThumbnailCardProvider;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator {
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$TabActionListener getGridCardOnClickListener(org.chromium.chrome.browser.tab.Tab);
  java.util.List getRelatedTabs(int);
  org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator$ResetHandler access$300(org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator);
  boolean mShouldIgnoreNextSelect;
  org.chromium.chrome.browser.fullscreen.ChromeFullscreenManager$FullscreenListener mFullscreenListener;
  void lambda$getCreateGroupButtonOnClickListener$1(int);
  org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator$ResetHandler mTabGridDialogResetHandler;
  org.chromium.chrome.browser.tabmodel.TabModelSelector mTabModelSelector;
  void prepareOverview();
  org.chromium.chrome.browser.tabmodel.TabModelObserver mTabModelObserver;
  boolean ableToCreateGroup(org.chromium.chrome.browser.tab.Tab);
  void setContentOverlayVisibility(boolean);
  org.chromium.ui.modelutil.PropertyModel access$000(org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator);
  org.chromium.chrome.browser.fullscreen.ChromeFullscreenManager mFullscreenManager;
  boolean access$102(org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator, boolean);
  org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator$ResetHandler mResetHandler;
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$TabActionListener getCreateGroupButtonOnClickListener(org.chromium.chrome.browser.tab.Tab);
  void destroy();
  org.chromium.base.ObserverList mObservers;
  boolean access$100(org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator);
  void setVisibility(boolean);
  boolean ableToOpenDialog(org.chromium.chrome.browser.tab.Tab);
  org.chromium.chrome.browser.tabmodel.TabModelSelectorObserver mTabModelSelectorObserver;
  void access$400(org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator, boolean);
  void lambda$getGridCardOnClickListener$0(int);
  org.chromium.ui.modelutil.PropertyModel mContainerViewModel;
  org.chromium.chrome.browser.compositor.CompositorViewHolder mCompositorViewHolder;
  org.chromium.chrome.browser.tabmodel.TabModelSelector access$200(org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider {
  android.graphics.Paint access$1000(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  org.chromium.chrome.browser.tasks.tab_management.TabListFaviconProvider access$1200(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  org.chromium.chrome.browser.tasks.tab_management.TabListFaviconProvider mTabListFaviconProvider;
  java.util.List mThumbnailRects;
  float access$900(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  android.graphics.Paint mTextPaint;
  java.util.List access$800(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  java.util.List mFaviconRects;
  android.graphics.Paint mEmptyThumbnailPaint;
  java.util.List access$1100(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  float access$500(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  java.util.List mFaviconBackgroundRects;
  int mSize;
  android.graphics.Paint access$700(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  org.chromium.chrome.browser.tabmodel.TabModelSelector access$100(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  org.chromium.chrome.browser.tabmodel.TabModelSelector mTabModelSelector;
  android.graphics.Paint mThumbnailFramePaint;
  org.chromium.chrome.browser.compositor.layouts.content.TabContentManager access$200(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  android.graphics.Paint access$400(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  java.util.List access$300(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  float mRadius;
  float mFaviconCirclePadding;
  android.graphics.Paint mFaviconBackgroundPaint;
  android.graphics.Paint access$600(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
  org.chromium.chrome.browser.compositor.layouts.content.TabContentManager mTabContentManager;
  int access$000(org.chromium.chrome.browser.tasks.tab_management.MultiThumbnailCardProvider);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridContainerViewBinder {
  void bind(org.chromium.ui.modelutil.PropertyModel, org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView, org.chromium.ui.modelutil.PropertyKey);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridDialogCoordinator {
  org.chromium.ui.modelutil.PropertyModel mToolbarPropertyModel;
  android.content.Context mContext;
  org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator mMediator;
  void updateDialogContent(java.util.List);
  org.chromium.chrome.browser.tasks.tab_management.TabGridSheetToolbarCoordinator mToolbarCoordinator;
  org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator$ResetHandler getResetHandler();
  org.chromium.chrome.browser.tasks.tab_management.TabListCoordinator mTabListCoordinator;
  void resetWithListOfTabs(java.util.List);
  org.chromium.chrome.browser.tasks.tab_management.TabGridDialogParent mParentLayout;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator {
  void setupToolbarClickHandlers();
  org.chromium.chrome.browser.tabmodel.TabModelSelector mTabModelSelector;
  void onReset(java.lang.Integer);
  android.view.View$OnClickListener getCollapseButtonClickListener();
  java.util.List getRelatedTabs(int);
  void updateGridTabSwitcher();
  org.chromium.ui.modelutil.PropertyModel mModel;
  org.chromium.chrome.browser.tabmodel.TabModelObserver mTabModelObserver;
  void lambda$getAddButtonClickListener$1(android.view.View);
  void setupScrimViewObserver();
  android.content.Context mContext;
  void updateDialog();
  org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator$ResetHandler mDialogResetHandler;
  org.chromium.chrome.browser.tabmodel.TabCreatorManager mTabCreatorManager;
  boolean $assertionsDisabled;
  void access$100(org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator);
  int access$400(org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator);
  int access$402(org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator, int);
  org.chromium.chrome.browser.tasks.tab_management.GridTabSwitcherMediator$ResetHandler mGridTabSwitcherResetHandler;
  java.util.List access$300(org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator, int);
  org.chromium.ui.modelutil.PropertyModel access$200(org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator);
  void lambda$getCollapseButtonClickListener$0(android.view.View);
  android.view.View$OnClickListener getAddButtonClickListener();
  void access$000(org.chromium.chrome.browser.tasks.tab_management.TabGridDialogMediator);
  int mCurrentTabId;
  void destroy();
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridDialogParent {
  void showDialog();
  org.chromium.chrome.browser.widget.ScrimView$ScrimParams mScrimParams;
  android.widget.PopupWindow mPopupWindow;
  void setupDialogAnimation();
  void destroy();
  int mSideMargin;
  void updateDialogWithOrientation(android.content.Context, int);
  android.content.ComponentCallbacks mComponentCallbacks;
  android.widget.LinearLayout mDialogContainerView;
  void access$000(org.chromium.chrome.browser.tasks.tab_management.TabGridDialogParent, android.content.Context, int);
  org.chromium.chrome.browser.widget.ScrimView mScrimView;
  android.animation.Animator access$102(org.chromium.chrome.browser.tasks.tab_management.TabGridDialogParent, android.animation.Animator);
  void hideDialog();
  android.animation.ValueAnimator mDialogFadeOut;
  android.view.ViewGroup mParent;
  android.animation.Animator mCurrentAnimator;
  int mTopMargin;
  void setupDialogContent(android.content.Context);
  void resetDialog(android.view.View, android.view.View);
  android.widget.PopupWindow access$200(org.chromium.chrome.browser.tasks.tab_management.TabGridDialogParent);
  android.animation.ValueAnimator mDialogFadeIn;
  int mStatusBarHeight;
  android.widget.FrameLayout$LayoutParams mContainerParams;
  void setScrimViewObserver(org.chromium.chrome.browser.widget.ScrimView$ScrimObserver);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridSheetContent {
  android.view.View mToolbarView;
  void destroy();
  org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView mRecyclerView;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridSheetCoordinator {
  void updateBottomSheetContent(java.util.List);
  org.chromium.chrome.browser.tasks.tab_management.TabGridSheetToolbarCoordinator mToolbarCoordinator;
  org.chromium.ui.modelutil.PropertyModel mToolbarPropertyModel;
  org.chromium.chrome.browser.tasks.tab_management.TabGridSheetContent mBottomSheetContent;
  org.chromium.chrome.browser.tasks.tab_management.TabGridSheetMediator mMediator;
  void destroy();
  org.chromium.chrome.browser.tasks.tab_management.TabListCoordinator mTabGridCoordinator;
  void resetWithListOfTabs(java.util.List);
  android.content.Context mContext;
  void startObservingForCreationIPH();
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridSheetMediator {
  android.view.View$OnClickListener getAddButtonClickListener();
  org.chromium.chrome.browser.tabmodel.TabCreatorManager mTabCreatorManager;
  void lambda$getAddButtonClickListener$3(android.view.View);
  org.chromium.chrome.browser.tasks.tab_management.TabGridSheetMediator$ResetHandler mResetHandler;
  org.chromium.chrome.browser.tabmodel.TabModelObserver mTabModelObserver;
  void lambda$new$1(android.content.res.ColorStateList, boolean);
  org.chromium.chrome.browser.ThemeColorProvider$ThemeColorObserver mThemeColorObserver;
  void lambda$new$0(int, boolean);
  void onReset(org.chromium.chrome.browser.tasks.tab_management.TabGridSheetContent);
  void lambda$getCollapseButtonClickListener$2(android.view.View);
  org.chromium.chrome.browser.widget.bottomsheet.BottomSheet$BottomSheetContent getCurrentSheetContent();
  boolean $assertionsDisabled;
  void setupToolbarClickHandlers();
  android.content.Context mContext;
  android.view.View$OnClickListener getCollapseButtonClickListener();
  void destroy();
  void showTabGridSheet(org.chromium.chrome.browser.tasks.tab_management.TabGridSheetContent);
  void updateBottomSheet();
  org.chromium.chrome.browser.widget.bottomsheet.BottomSheetController mBottomSheetController;
  org.chromium.chrome.browser.ThemeColorProvider mThemeColorProvider;
  void access$000(org.chromium.chrome.browser.tasks.tab_management.TabGridSheetMediator);
  org.chromium.ui.modelutil.PropertyModel mModel;
  org.chromium.chrome.browser.widget.bottomsheet.BottomSheetObserver mSheetObserver;
  org.chromium.chrome.browser.ThemeColorProvider$TintObserver mTintObserver;
  org.chromium.chrome.browser.tabmodel.TabModelSelector mTabModelSelector;
  void hideTabGridSheet();
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridSheetProperties {
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey SCRIMVIEW_OBSERVER;
  org.chromium.ui.modelutil.PropertyModel$WritableIntPropertyKey PRIMARY_COLOR;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey TINT;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey ADD_CLICK_LISTENER;
  org.chromium.ui.modelutil.PropertyModel$WritableIntPropertyKey CONTENT_TOP_MARGIN;
  org.chromium.ui.modelutil.PropertyModel$WritableBooleanPropertyKey IS_DIALOG_VISIBLE;
  org.chromium.ui.modelutil.PropertyKey[] ALL_KEYS;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey COLLAPSE_CLICK_LISTENER;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey HEADER_TITLE;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridSheetToolbarCoordinator {
  android.view.View getView();
  org.chromium.chrome.browser.tasks.tab_management.TabGroupUiToolbarView mToolbarView;
  org.chromium.ui.modelutil.PropertyModelChangeProcessor mModelChangeProcessor;
  void destroy();
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridSheetViewBinder {
  void bind(org.chromium.ui.modelutil.PropertyModel, org.chromium.chrome.browser.tasks.tab_management.TabGridSheetViewBinder$ViewHolder, org.chromium.ui.modelutil.PropertyKey);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridViewBinder {
  void lambda$onBindViewHolder$3(org.chromium.chrome.browser.tasks.tab_management.TabListMediator$TabActionListener, org.chromium.chrome.browser.tasks.tab_management.TabGridViewHolder, android.view.View);
  void lambda$onBindViewHolder$2(org.chromium.chrome.browser.tasks.tab_management.TabGridViewHolder, android.graphics.Bitmap);
  void lambda$onBindViewHolder$0(org.chromium.ui.modelutil.PropertyModel, org.chromium.chrome.browser.tasks.tab_management.TabGridViewHolder, android.view.View);
  void lambda$onBindViewHolder$1(org.chromium.ui.modelutil.PropertyModel, org.chromium.chrome.browser.tasks.tab_management.TabGridViewHolder, android.view.View);
  void onBindViewHolder(org.chromium.chrome.browser.tasks.tab_management.TabGridViewHolder, org.chromium.ui.modelutil.PropertyModel);
  void onBindViewHolder(org.chromium.chrome.browser.tasks.tab_management.TabGridViewHolder, org.chromium.ui.modelutil.PropertyModel, org.chromium.ui.modelutil.PropertyKey);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGridViewHolder {
  android.widget.ImageView favicon;
  int getTabId();
  org.chromium.ui.widget.ButtonCompat createGroupButton;
  android.widget.TextView title;
  android.view.View backgroundView;
  android.view.View itemView;
  org.chromium.chrome.browser.tasks.tab_management.TabGridViewHolder create(android.view.ViewGroup, int);
  void setTabId(int);
  int mTabId;
  java.lang.ref.WeakReference sCloseButtonBitmapWeakRef;
  void resetThumbnail();
  android.widget.ImageView thumbnail;
  android.widget.ImageView closeButton;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGroupUiCoordinator {
  org.chromium.ui.modelutil.PropertyModel mTabStripToolbarModel;
  org.chromium.chrome.browser.ThemeColorProvider mThemeColorProvider;
  android.content.Context mContext;
  org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator mMediator;
  org.chromium.chrome.browser.ChromeActivity mActivity;
  org.chromium.chrome.browser.tasks.tab_management.TabGridSheetCoordinator mTabGridSheetCoordinator;
  void recordSessionCount();
  org.chromium.chrome.browser.lifecycle.ActivityLifecycleDispatcher mActivityLifecycleDispatcher;
  org.chromium.chrome.browser.tasks.tab_management.TabListCoordinator mTabStripCoordinator;
  boolean $assertionsDisabled;
  org.chromium.chrome.browser.tasks.tab_management.TabStripToolbarCoordinator mTabStripToolbarCoordinator;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator {
  org.chromium.chrome.browser.compositor.layouts.OverviewModeBehavior mOverviewModeBehavior;
  boolean mIsTabGroupUiVisible;
  org.chromium.chrome.browser.tabmodel.TabModelSelectorTabObserver mTabModelSelectorTabObserver;
  org.chromium.chrome.browser.tabmodel.TabModelSelector access$400(org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator);
  org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator$ResetHandler access$500(org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator);
  java.util.List getRelatedTabsForId(int);
  org.chromium.chrome.browser.compositor.layouts.OverviewModeBehavior$OverviewModeObserver mOverviewModeObserver;
  org.chromium.chrome.browser.tabmodel.TabModelSelectorObserver mTabModelSelectorObserver;
  boolean access$100(org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator);
  org.chromium.ui.modelutil.PropertyModel mToolbarPropertyModel;
  org.chromium.chrome.browser.ThemeColorProvider$ThemeColorObserver mThemeColorObserver;
  void lambda$setupToolbarClickHandlers$3(android.view.View);
  org.chromium.chrome.browser.ThemeColorProvider mThemeColorProvider;
  void lambda$setupToolbarClickHandlers$2(android.view.View);
  void setupToolbarClickHandlers();
  void lambda$new$1(android.content.res.ColorStateList, boolean);
  void resetTabStripWithRelatedTabsForId(int);
  org.chromium.chrome.browser.toolbar.bottom.BottomControlsCoordinator$BottomControlsVisibilityController mVisibilityController;
  void destroy();
  boolean $assertionsDisabled;
  void lambda$new$0(int, boolean);
  org.chromium.chrome.browser.tabmodel.TabModelObserver mTabModelObserver;
  org.chromium.chrome.browser.ThemeColorProvider$TintObserver mTintObserver;
  void access$300(org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator, int);
  boolean mIsClosingAGroup;
  org.chromium.chrome.browser.tabmodel.TabCreatorManager mTabCreatorManager;
  org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator$ResetHandler mResetHandler;
  org.chromium.chrome.browser.tabmodel.TabModelSelector mTabModelSelector;
  boolean access$102(org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator, boolean);
  java.util.List access$200(org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator, int);
  boolean access$000(org.chromium.chrome.browser.tasks.tab_management.TabGroupUiMediator);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGroupUiToolbarView {
  android.view.View mMainContent;
  void setTint(android.content.res.ColorStateList);
  android.view.ViewGroup mContainerView;
  org.chromium.ui.widget.ChromeImageView mLeftButton;
  void setMainContentVisibility(boolean);
  void setTitle(java.lang.String);
  org.chromium.ui.widget.ChromeImageView mRightButton;
  android.view.View findViewById(int);
  android.widget.TextView mTitleTextView;
  void setLeftButtonOnClickListener(android.view.View$OnClickListener);
  android.view.ViewGroup getViewContainer();
  void setRightButtonOnClickListener(android.view.View$OnClickListener);
  void setPrimaryColor(int);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabGroupUiToolbarViewBinder {
  void bind(org.chromium.ui.modelutil.PropertyModel, org.chromium.chrome.browser.tasks.tab_management.TabGroupUiToolbarView, org.chromium.ui.modelutil.PropertyKey);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListContainerProperties {
  org.chromium.ui.modelutil.PropertyModel$WritableIntPropertyKey TOP_PADDING;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey VISIBILITY_LISTENER;
  org.chromium.ui.modelutil.PropertyModel$WritableIntPropertyKey INITIAL_SCROLL_INDEX;
  org.chromium.ui.modelutil.PropertyModel$WritableBooleanPropertyKey ANIMATE_VISIBILITY_CHANGES;
  org.chromium.ui.modelutil.PropertyKey[] ALL_KEYS;
  org.chromium.ui.modelutil.PropertyModel$WritableIntPropertyKey BOTTOM_CONTROLS_HEIGHT;
  org.chromium.ui.modelutil.PropertyModel$WritableBooleanPropertyKey IS_INCOGNITO;
  org.chromium.ui.modelutil.PropertyModel$WritableBooleanPropertyKey IS_VISIBLE;
  org.chromium.ui.modelutil.PropertyModel$WritableIntPropertyKey TOP_CONTROLS_HEIGHT;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListCoordinator {
  void updateThumbnailLocation();
  org.chromium.chrome.browser.tabmodel.TabModelSelector mTabModelSelector;
  android.graphics.Rect mThumbnailLocationOfCurrentTab;
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator mMediator;
  org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView mRecyclerView;
  int getResourceId();
  android.graphics.Rect getThumbnailLocationOfCurrentTab();
  int mMode;
  void destroy();
  org.chromium.ui.modelutil.SimpleRecyclerViewMcpBase mModelChangeProcessor;
  org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView getContainerView();
  void resetWithListOfTabs(java.util.List);
  void prepareOverview();
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListFaviconProvider {
  android.graphics.drawable.Drawable getDefaultFaviconDrawable();
  android.graphics.drawable.Drawable getFaviconForUrlSync(java.lang.String, boolean, android.graphics.Bitmap);
  android.graphics.drawable.Drawable sRoundedGlobeDrawable;
  android.graphics.drawable.Drawable processBitmap(android.graphics.Bitmap);
  int mFaviconSize;
  void lambda$getFaviconForUrlAsync$0(org.chromium.base.Callback, android.graphics.Bitmap, java.lang.String);
  android.graphics.drawable.Drawable sRoundedChromeDrawable;
  org.chromium.chrome.browser.profiles.Profile mProfile;
  void getFaviconForUrlAsync(java.lang.String, boolean, org.chromium.base.Callback);
  org.chromium.chrome.browser.favicon.FaviconHelper mFaviconHelper;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListMediator {
  void addTabInfoToModel(org.chromium.chrome.browser.tab.Tab, int, boolean);
  boolean isValidMovePosition(int);
  android.content.ComponentCallbacks mComponentCallbacks;
  org.chromium.chrome.browser.tasks.tab_management.TabListFaviconProvider mTabListFaviconProvider;
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$GridCardOnClickListenerProvider mGridCardOnClickListenerProvider;
  boolean mShownIPH;
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$TabActionListener access$1300(org.chromium.chrome.browser.tasks.tab_management.TabListMediator);
  java.util.Map access$800();
  org.chromium.chrome.browser.tabmodel.TabModelSelector access$100(org.chromium.chrome.browser.tasks.tab_management.TabListMediator);
  boolean access$600(org.chromium.chrome.browser.tasks.tab_management.TabListMediator);
  java.util.List access$1000(org.chromium.chrome.browser.tasks.tab_management.TabListMediator, int);
  void access$900(org.chromium.chrome.browser.tasks.tab_management.TabListMediator, org.chromium.chrome.browser.tab.Tab, int, int);
  void registerOrientationListener(android.support.v7.widget.GridLayoutManager);
  java.lang.String mComponentName;
  boolean mCloseAllRelatedTabs;
  java.lang.String access$200(org.chromium.chrome.browser.tasks.tab_management.TabListMediator);
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$TitleProvider mTitleProvider;
  android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback getItemTouchHelperCallback(float);
  void access$700(org.chromium.chrome.browser.tasks.tab_management.TabListMediator, org.chromium.chrome.browser.tab.Tab, boolean);
  void onTabClosedFrom(int, java.lang.String);
  boolean access$002(org.chromium.chrome.browser.tasks.tab_management.TabListMediator, boolean);
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$IphProvider mIphProvider;
  java.util.Map sTabClosedFromMapTabClosedFromMap;
  void onTabAdded(org.chromium.chrome.browser.tab.Tab, boolean);
  org.chromium.chrome.browser.tab.TabObserver mTabObserver;
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$CreateGroupButtonProvider mCreateGroupButtonProvider;
  java.util.List getRelatedTabsForId(int);
  org.chromium.chrome.browser.tasks.tab_management.TabListFaviconProvider access$400(org.chromium.chrome.browser.tasks.tab_management.TabListMediator);
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$TabActionListener mTabSelectedListener;
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$TabActionListener mTabClosedListener;
  void resetWithListOfTabs(java.util.List);
  org.chromium.chrome.browser.tabmodel.TabModelSelector mTabModelSelector;
  boolean access$000(org.chromium.chrome.browser.tasks.tab_management.TabListMediator);
  void lambda$addTabInfoToModel$0(org.chromium.chrome.browser.tab.Tab, android.graphics.drawable.Drawable);
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$ThumbnailProvider mThumbnailProvider;
  void onGroupClosedFrom(int);
  org.chromium.chrome.browser.tasks.tab_management.TabListModel mModel;
  org.chromium.chrome.browser.tabmodel.TabModelObserver mTabModelObserver;
  void onTabMoved(org.chromium.chrome.browser.tab.Tab, int, int);
  void access$1200(org.chromium.chrome.browser.tasks.tab_management.TabListMediator, int, java.lang.String);
  org.chromium.chrome.browser.tasks.tab_management.TabListModel access$300(org.chromium.chrome.browser.tasks.tab_management.TabListMediator);
  org.chromium.chrome.browser.tasks.tab_management.TabListMediator$TitleProvider access$500(org.chromium.chrome.browser.tasks.tab_management.TabListMediator);
  void access$1100(org.chromium.chrome.browser.tasks.tab_management.TabListMediator, int);
  void destroy();
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListModel {
  void add(int, org.chromium.ui.modelutil.PropertyObservable);
  int size();
  void add(org.chromium.ui.modelutil.PropertyObservable);
  java.lang.Object get(int);
  org.chromium.ui.modelutil.PropertyObservable removeAt(int);
  void set(java.util.Collection);
  int indexFromId(int);
  void move(int, int);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView {
  int getId();
  long access$200(org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView);
  android.graphics.Rect getRectOfCurrentThumbnail(int);
  void setHasFixedSize(boolean);
  android.animation.ValueAnimator mFadeInAnimator;
  int getPaddingLeft();
  int getPaddingBottom();
  void endAllAnimations();
  long mOriginalAddDuration;
  int getResourceId();
  org.chromium.ui.resources.dynamics.ViewResourceAdapter access$300(org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView);
  org.chromium.ui.resources.dynamics.ViewResourceAdapter mDynamicView;
  int computeVerticalScrollOffset();
  org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView$VisibilityListener mListener;
  void startShowing(boolean);
  android.animation.ValueAnimator access$002(org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView, android.animation.ValueAnimator);
  void setBackgroundColor(int);
  void setAlpha(float);
  void setVisibilityListener(org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView$VisibilityListener);
  android.animation.ValueAnimator mFadeOutAnimator;
  void setVisibility(int);
  android.view.ViewTreeObserver getViewTreeObserver();
  void setPadding(int, int, int, int);
  android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager();
  boolean $assertionsDisabled;
  void createDynamicView(org.chromium.ui.resources.dynamics.DynamicResourceLoader);
  android.content.res.Resources getResources();
  android.animation.ValueAnimator access$402(org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView, android.animation.ValueAnimator);
  void prepareOverview();
  void setAdapter(android.support.v7.widget.RecyclerView$Adapter);
  android.support.v7.widget.RecyclerView$ItemAnimator getItemAnimator();
  void requestLayout();
  android.view.ViewGroup$LayoutParams getLayoutParams();
  android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int);
  void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager);
  void getLocationInWindow(int[]);
  void startHiding(boolean);
  int getPaddingRight();
  org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView$VisibilityListener access$100(org.chromium.chrome.browser.tasks.tab_management.TabListRecyclerView);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabProperties {
  org.chromium.ui.modelutil.PropertyModel$ReadableIntPropertyKey TAB_ID;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey IPH_PROVIDER;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey CREATE_GROUP_LISTENER;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey TAB_SELECTED_LISTENER;
  org.chromium.ui.modelutil.PropertyKey[] ALL_KEYS_TAB_GRID;
  org.chromium.ui.modelutil.PropertyKey[] ALL_KEYS_TAB_STRIP;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey FAVICON;
  org.chromium.ui.modelutil.PropertyModel$WritableBooleanPropertyKey IS_SELECTED;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey TITLE;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey TAB_CLOSED_LISTENER;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey THUMBNAIL_FETCHER;
  org.chromium.ui.modelutil.PropertyModel$WritableFloatPropertyKey ALPHA;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabStripToolbarCoordinator {
  android.view.ViewGroup getTabListContainerView();
  org.chromium.ui.modelutil.PropertyModel mModel;
  org.chromium.ui.modelutil.PropertyModelChangeProcessor mModelChangeProcessor;
  org.chromium.chrome.browser.tasks.tab_management.TabGroupUiToolbarView mToolbarView;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabStripToolbarViewProperties {
  org.chromium.ui.modelutil.PropertyModel$WritableIntPropertyKey PRIMARY_COLOR;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey ADD_CLICK_LISTENER;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey TINT;
  org.chromium.ui.modelutil.PropertyKey[] ALL_KEYS;
  org.chromium.ui.modelutil.PropertyModel$WritableObjectPropertyKey EXPAND_CLICK_LISTENER;
  org.chromium.ui.modelutil.PropertyModel$WritableBooleanPropertyKey IS_MAIN_CONTENT_VISIBLE;
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabStripViewBinder {
  void lambda$onBindViewHolder$1(org.chromium.ui.modelutil.PropertyModel, org.chromium.chrome.browser.tasks.tab_management.TabStripViewHolder, android.view.View);
  void lambda$onBindViewHolder$0(org.chromium.ui.modelutil.PropertyModel, org.chromium.chrome.browser.tasks.tab_management.TabStripViewHolder, android.view.View);
  void onBindViewHolder(org.chromium.chrome.browser.tasks.tab_management.TabStripViewHolder, org.chromium.ui.modelutil.PropertyModel, org.chromium.ui.modelutil.PropertyKey);
  void onBindViewHolder(org.chromium.chrome.browser.tasks.tab_management.TabStripViewHolder, org.chromium.ui.modelutil.PropertyModel);
}

-keep class org.chromium.chrome.browser.tasks.tab_management.TabStripViewHolder {
  android.widget.ImageButton button;
  int mTabId;
  android.view.View itemView;
  org.chromium.chrome.browser.tasks.tab_management.TabStripViewHolder create(android.view.ViewGroup, int);
  void setTabId(int);
  int getTabId();
}

-keep class org.chromium.chrome.browser.tasks.tabgroup.TabGroupModelFilter {
  int indexOf(org.chromium.chrome.browser.tab.Tab);
  int getTabGroupCount();
  void recordSessionsCount(org.chromium.chrome.browser.tab.Tab);
  void moveRelatedTabs(int, int);
  org.chromium.chrome.browser.tab.Tab getTabAt(int);
}

-keep class org.chromium.chrome.browser.util.ColorUtils {
  int getPrimaryBackgroundColor(android.content.res.Resources, boolean);
}

-keep class org.chromium.chrome.browser.util.FeatureUtilities {
  boolean isTabGroupsAndroidEnabled();
  boolean isTabGroupsAndroidUiImprovementsEnabled();
}

-keep class org.chromium.chrome.browser.util.ViewUtils {
  android.support.v4.graphics.drawable.RoundedBitmapDrawable createRoundedBitmapDrawable(android.graphics.Bitmap, int);
  int DEFAULT_FAVICON_CORNER_RADIUS;
}

-keep class org.chromium.chrome.browser.widget.bottomsheet.BottomSheet {
  void addObserver(org.chromium.chrome.browser.widget.bottomsheet.BottomSheetObserver);
  void removeObserver(org.chromium.chrome.browser.widget.bottomsheet.BottomSheetObserver);
  org.chromium.chrome.browser.widget.bottomsheet.BottomSheet$BottomSheetContent getCurrentSheetContent();
}

-keep class org.chromium.content_public.browser.NavigationHandle {
  boolean isSameDocument();
  boolean isValidSearchFormUrl();
  boolean isInMainFrame();
  java.lang.Integer pageTransition();
}

-keep class org.chromium.content_public.browser.UiThreadTaskTraits {
  org.chromium.base.task.TaskTraits USER_VISIBLE;
}

-keep class org.chromium.ui.interpolators.BakedBezierInterpolator {
  org.chromium.ui.interpolators.BakedBezierInterpolator FADE_IN_CURVE;
  org.chromium.ui.interpolators.BakedBezierInterpolator FADE_OUT_CURVE;
}

-keep class org.chromium.ui.modelutil.PropertyModelChangeProcessor {
  void destroy();
  org.chromium.ui.modelutil.PropertyModelChangeProcessor create(org.chromium.ui.modelutil.PropertyObservable, java.lang.Object, org.chromium.ui.modelutil.PropertyModelChangeProcessor$ViewBinder);
}

-keep class org.chromium.ui.widget.ButtonCompat {
  void setVisibility(int);
  void setOnClickListener(android.view.View$OnClickListener);
}

-keep class org.chromium.ui.widget.ChromeImageView {
  void setOnClickListener(android.view.View$OnClickListener);
}

-keep class org.json.JSONObject {
  java.lang.Object NULL;
}

