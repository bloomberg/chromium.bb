# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//base/android/linker/config.gni")
import("//build/config/android/rules.gni")
import("//device/vr/buildflags/buildflags.gni")

assert(enable_vr)

template("vr_module_tmpl") {
  assert(defined(invoker.manifest_package))
  assert(defined(invoker.module_name))

  _manifest = "$target_gen_dir/$target_name/AndroidManifest.xml"
  _manifest_target = "${target_name}__manifest"
  jinja_template(_manifest_target) {
    input = "//chrome/android/modules/vr/AndroidManifest.xml"
    output = _manifest
    variables = [
      "target_sdk_version=$android_sdk_version",
      "manifest_package=${invoker.manifest_package}",
    ]
  }

  android_app_bundle_module(target_name) {
    if (defined(invoker.base_module_target)) {
      _base_module_target = invoker.base_module_target
    } else {
      # TODO(tiborg): This is here to not break the downstream bots. Remove once
      # we have set the flag for downstream as well.
      _base_module_target = "//clank/java:chrome_modern_base_module"
    }

    forward_variables_from(invoker,
                           [
                             "module_name",
                             "version_code",
                           ])
    android_manifest = _manifest
    android_manifest_dep = ":${_manifest_target}"
    base_module_target = _base_module_target
    deps = [
      "//chrome/browser/android/vr:java",
    ]
    proguard_enabled = !is_java_debug
    uncompress_shared_libraries = chromium_linker_supported
  }
}
