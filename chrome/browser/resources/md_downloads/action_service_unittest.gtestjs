// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

/**
 * @param {!Array<string>} list
 * @return {string}
 */
function str(list) {
  return JSON.stringify(list);
}

var ActionServiceUnitTest = class extends testing.Test {
  /** @override */
  get extraLibraries() {
    return [
      '../../../../ui/webui/resources/js/cr.js',
      'browser_proxy.js',
      'action_service.js',
    ];
  }
}

TEST_F('ActionServiceUnitTest', 'splitTerms', function() {
  const ActionService = downloads.ActionService;
  assertEquals(str([]), str(ActionService.splitTerms('')));
  assertEquals(str([]), str(ActionService.splitTerms('  ')));
  assertEquals(str(['a']), str(ActionService.splitTerms('a')));
  assertEquals(str(['a b']), str(ActionService.splitTerms('a b')));
  assertEquals(str(['a', 'b']), str(ActionService.splitTerms('a "b"')));
  assertEquals(str(['a', 'b', 'c']), str(ActionService.splitTerms('a "b" c')));
  assertEquals(str(['a', 'b b', 'c']),
               str(ActionService.splitTerms('a "b b" c')));
});

TEST_F('ActionServiceUnitTest', 'searchWithSimilarTerms', function() {
  class TestActionService extends downloads.ActionService {
    loadMore() { /* No chrome.send() for you! */ }
  }

  const actionService = new TestActionService();

  assertTrue(actionService.search('a'));
  assertFalse(actionService.search('a '));  // Same term + space should no-op.
});
