// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package media_feeds;

// Chrome requires this.
option optimize_for = LITE_RUNTIME;

// The protos in this file are committed to storage so do not change the
// numbering.

// Official rating for a piece of content (e.g. MPAA PG-13).
// https://schema.org/contentRating
message ContentRating {
  // The rating agency (e.g. MPAA).
  string agency = 1;

  // The content rating.
  string value = 2;
};

// Set of content ratings associated with an entity.
message ContentRatingSet {
  repeated ContentRating rating = 1;
};

message GenreSet {
  repeated string genre = 1;
}

// A counter for a type of interaction e.g. how many likes or dislikes.
// https://schema.org/InteractionCounter
message InteractionCounter {
  enum Type {
    WATCH = 0;
    LIKE = 1;
    DISLIKE = 2;
  };

  Type type = 1;
  uint64 count = 2;
};

// Set of interaction counters with one for each type.
message InteractionCounterSet {
  repeated InteractionCounter counter = 1;
}

// The author of the content.
// https://schema.org/author
message Author {
  // A displayable name for the author.
  string name = 1;

  // The URL of the author.
  string url = 2;
}

// A third party identifier for a piece of content.
// https://schema.org/identifier
message Identifier {
  enum Type {
    TMS_ROOT_ID = 0;
    TMS_ID = 1;
    PARTNER_ID = 2;
  };

  Type type = 1;
  string value = 2;
}

// A set of identifiers with up to one of each type.
message IdentifierSet {
  repeated Identifier identifier = 1;
}

// An action to start watching a piece of content.
// https://schema.org/WatchAction
message Action {
  // The URL to watch the content.
  string url = 1;

  // The time the content will start playing in seconds.
  int64 start_time_secs = 2;
}

// Details specific to live content.
// https://wicg.github.io/media-feeds/#media-item-live-metadata
message LiveDetails {
  int64 start_time_secs = 1;
  int64 end_time_secs = 2;
}

// The content that should be suggested to play next if the user has finished
// watching the current content.
message PlayNextCandidate {
  // A displayable name of the play next content.
  string name = 1;

  // The season and episode number of the content.
  int64 season_number = 2;
  int64 episode_number = 3;

  // The action to launch the content.
  Action action = 4;

  // The duration of the content in seconds.
  int64 duration_secs = 5;

  // The identifiers for the content. We will store up to one of each type.
  repeated Identifier identifier = 6;

  // Images for this episode.
  repeated Image image = 7;
}

// https://schema.org/TVEpisode
message TVEpisode {
  // The displayable name of the episode.
  string name = 1;

  // The season and episode number of the episode.
  int64 episode_number = 2;
  int64 season_number = 3;

  // The identifiers for the episode. We will store up to one of each type.
  repeated Identifier identifier = 4;

  // The duration of the content in seconds.
  int64 duration_secs = 5;

  // Images for this episode.
  repeated Image image = 6;

  // Details specific to live content.
  LiveDetails live_details = 7;
}

// A reference to an image along with the width and height in px. Only stores
// the URL and not the image data.
// https://wicg.github.io/media-feeds/index.html#media-image
message Image {
  string url = 1;
  int64 width = 2;
  int64 height = 3;

  // Content attributes describe the image's type and defines its suggested
  // usages.
  enum ContentAttribute {
    CONTENT_ATTRIBUTE_UNSPECIFIED = 0;
    ICONIC = 1;
    SCENE_STILL = 2;
    POSTER = 3;
    BACKGROUND = 4;
    FOR_DARK_BACKGROUND = 5;
    FOR_LIGHT_BACKGROUND = 6;
    CENTERED = 7;
    RIGHT_CENTERED = 8;
    LEFT_CENTERED = 9;
    HAS_TRANSPARENT_BACKGROUND = 10;
    HAS_TITLE = 11;
    NO_TITLE = 12;
  };

  repeated ContentAttribute content_attribute = 4;
}

// Stores up to 5 images of different sizes.
// https://wicg.github.io/media-feeds/index.html#media-feed-document
// https://wicg.github.io/media-feeds/index.html#media-feed-item
message ImageSet {
  repeated Image image = 1;
}

// The //base/unguessable_token.h converted to a protobuf.
message FeedResetToken {
  uint64 high = 1;
  uint64 low = 2;
}

// This is returned by the Media Feed so the user can see which account
// and/or profile they are currently signed into.
// https://wicg.github.io/media-feeds/#dfn-currently-logged-in-user
message UserIdentifier {
  // The name of the user’s account.
  string name = 1;

  // The email address of the users’ account.
  string email = 2;

  // The image of the user’s account.
  Image image = 3;
}
