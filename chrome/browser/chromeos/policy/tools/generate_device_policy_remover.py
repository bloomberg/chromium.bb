# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

"""Create function which removes the specified device policies
from ChromeDeviceSettingsProto.
This function is primarily intended to be used
for the implementation of the DeviceOffHours policy.
"""

from optparse import OptionParser
import sys


def main():
  parser = OptionParser(usage=__doc__)
  (opts, args) = parser.parse_args()
  off_hours_cleaner_path = args[0]
  descriptor_pool_path = args[1]
  symbol_database_path = args[2]
  chrome_device_policy_pb2_path = args[3]
  sys.path.insert(0, descriptor_pool_path)
  sys.path.append(symbol_database_path)
  sys.path.append(chrome_device_policy_pb2_path)
  from chrome_device_policy_pb2 import ChromeDeviceSettingsProto
  with open(off_hours_cleaner_path, 'wt') as file:
    file.write('//\n'
               '// DO NOT MODIFY THIS FILE DIRECTLY!\n'
               '// IT IS GENERATED BY generate_device_policy_remover.py\n'
               '// FROM chrome_device_policy_pb2.py\n'
               '//\n\n'
               '#include <algorithm>\n\n'
               '#include "chrome/browser/chromeos/policy/'
               'device_policy_remover.h"\n\n'
               'namespace policy {\n\n'
               'namespace em = enterprise_management;\n\n'
               'void RemovePolicies(\n'
               '    em::ChromeDeviceSettingsProto* policies,\n'
               '    const std::vector<std::string>& '
               'input_policies_to_remove) {\n'
               '  std::vector<std::string> policies_to_remove'
               '(input_policies_to_remove);\n'
               '  std::sort(policies_to_remove.begin(),'
               ' policies_to_remove.end());\n')
    for field in ChromeDeviceSettingsProto.DESCRIPTOR.fields:
      file.write('  if (std::binary_search(policies_to_remove.begin(),\n'
                 '                         policies_to_remove.end(),\n'
                 '                         "{name}"))\n'
                 '    policies->clear_{name}();\n'.format(name=field.name))
    file.write('}\n}\n')
  return 0

if __name__ == '__main__':
  sys.exit(main())
