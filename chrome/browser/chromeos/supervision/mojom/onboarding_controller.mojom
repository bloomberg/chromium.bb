// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module chromeos.supervision.mojom;

// Represents user actions that the OnboardingController can handle.
enum OnboardingFlowAction {
  // The user has expressed intent to skip the remaining screens of the flow.
  // When receiving this we will most likely perform cleanup functions and
  // order the WebviewHost to exit the flow.
  kSkipFlow,

  // The user wants to go back/forward in the flow.
  kShowNextPage,
  kShowPreviousPage,
};


// Represents a webview host, responsible for displaying supervision
// onboarding pages. This will usually be a WebUI page that contains a
// webview tag and manages its properties.
// TODO(958995): Complete this interface.
interface OnboardingWebviewHost {
  // Requests that the webview load the page with the given url.
  LoadPage(string url);

  // Requests that the host exit the flow immediately. This might mean
  // different things depending on the type of host. If we are running in the
  // OOBE we will exit the supervision screen and move the the next OOBE step,
  // if we are running in a custom WebUI, we should close it.
  ExitFlow();
};

// Interface responsible for managing the whole onboarding flow.
// TODO(958995): Complete this interface.
interface OnboardingController {
  // Binds the given webview host to this controller. The host will start
  // receiving commands as soon as this is called.
  BindWebviewHost(OnboardingWebviewHost webview_host);

  // Requests the controller to handle the given action.
  // The controller will decide the next step to continue/end the flow.
  HandleAction(OnboardingFlowAction action);
};
