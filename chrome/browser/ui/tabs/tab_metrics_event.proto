// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto2";

option optimize_for = LITE_RUNTIME;

package metrics;

// Defines specialized fields used by the TabManager.TabMetrics UKM event.
message TabMetricsEvent {
  // Represents the MIME type of content.
  // MIME type strings have the format "<type>/<subtype>". The values for
  // ContentType reflect just the top-level type (e.g., AUDIO is used for both
  // "audio/mp3" and "audio/ogg").
  // The exception is "text/html", since it's treated quite differently than
  // other text.
  enum ContentType {
    // Could not be determined or not available.
    CONTENT_TYPE_UNKNOWN = 0;

    // Not one of the types below.
    CONTENT_TYPE_OTHER = 1;

    // The "application/*" type. Supported application sub-types are enumerated
    // in Chrome's PluginType.
    CONTENT_TYPE_APPLICATION = 2;

    // The "audio/*" type.
    CONTENT_TYPE_AUDIO = 3;

    // The "image/*" type.
    CONTENT_TYPE_IMAGE = 4;

    // The "text/*" type. For "text/html", TEXT_HTML is used instead.
    CONTENT_TYPE_TEXT = 5;

    // The "text/html" type, representing web pages.
    CONTENT_TYPE_TEXT_HTML = 6;

    // The "video/*" type.
    CONTENT_TYPE_VIDEO = 7;
  }

  optional ContentType content_type = 1;

  // URI schemes that can be handled by a protocol handler.
  enum ProtocolHandlerScheme {
    option allow_alias = true;  // Allow LAST alias for static assertions.

    // Not one of the below, including custom handlers.
    PROTOCOL_HANDLER_SCHEME_OTHER = 0;

    // Schemes whitelisted for registerProtocolHandler.
    PROTOCOL_HANDLER_SCHEME_BITCOIN = 1;
    PROTOCOL_HANDLER_SCHEME_GEO = 2;
    PROTOCOL_HANDLER_SCHEME_IM = 3;
    PROTOCOL_HANDLER_SCHEME_IRC = 4;
    PROTOCOL_HANDLER_SCHEME_IRCS = 5;
    PROTOCOL_HANDLER_SCHEME_MAGNET = 6;
    PROTOCOL_HANDLER_SCHEME_MAILTO = 7;
    PROTOCOL_HANDLER_SCHEME_MMS = 8;
    PROTOCOL_HANDLER_SCHEME_NEWS = 9;
    PROTOCOL_HANDLER_SCHEME_NNTP = 10;
    PROTOCOL_HANDLER_SCHEME_OPENPGP4FPR = 11;
    PROTOCOL_HANDLER_SCHEME_SIP = 12;
    PROTOCOL_HANDLER_SCHEME_SMS = 13;
    PROTOCOL_HANDLER_SCHEME_SMSTO = 14;
    PROTOCOL_HANDLER_SCHEME_SSH = 15;
    PROTOCOL_HANDLER_SCHEME_TEL = 16;
    PROTOCOL_HANDLER_SCHEME_URN = 17;
    PROTOCOL_HANDLER_SCHEME_WEBCAL = 18;
    PROTOCOL_HANDLER_SCHEME_WTAI = 19;
    PROTOCOL_HANDLER_SCHEME_XMPP = 20;

    PROTOCOL_HANDLER_SCHEME_LAST = 20;
  }

  repeated ProtocolHandlerScheme enabled_protocol_handlers = 2;
}
