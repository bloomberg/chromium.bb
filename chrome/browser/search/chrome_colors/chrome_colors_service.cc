// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "chrome/browser/search/chrome_colors/chrome_colors_service.h"

#include "chrome/browser/themes/theme_service_factory.h"

namespace chrome_colors {

ChromeColorsService::ChromeColorsService(Profile* profile)
    : theme_service_(ThemeServiceFactory::GetForProfile(profile)) {}

ChromeColorsService::~ChromeColorsService() = default;

void ChromeColorsService::ApplyDefaultTheme() {
  if (revert_theme_changes_.is_null())
    revert_theme_changes_ = theme_service_->GetRevertThemeCallback();
  theme_service_->UseDefaultTheme();
}

void ChromeColorsService::ApplyAutogeneratedTheme(SkColor color) {
  if (revert_theme_changes_.is_null())
    revert_theme_changes_ = theme_service_->GetRevertThemeCallback();
  theme_service_->BuildFromColor(color);
}

void ChromeColorsService::RevertThemeChanges() {
  if (!revert_theme_changes_.is_null()) {
    std::move(revert_theme_changes_).Run();
    revert_theme_changes_.Reset();
  }
}

void ChromeColorsService::ConfirmThemeChanges() {
  revert_theme_changes_.Reset();
}

void ChromeColorsService::Shutdown() {}

}  // namespace chrome_colors
