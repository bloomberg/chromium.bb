# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/locales.gni")
import("//build/config/ui.gni")
import("//chrome/common/features.gni")
import("//components/gwp_asan/buildflags/buildflags.gni")
import("//components/nacl/features.gni")
import("//ppapi/buildflags/buildflags.gni")
import("//tools/grit/grit_rule.gni")
import("//tools/ipc_fuzzer/ipc_fuzzer.gni")

if (is_android) {
  import("//build/config/android/rules.gni")
}

# This target is for dependency tracking for the command ID header.
source_set("command_ids") {
  sources = [
    "chrome_command_ids.h",
  ]
}

# TODO: put back in chrome/browser if necessary. http://crbug.com/771801.
source_set("shutdown_signal_handlers") {
  if (is_posix || is_fuchsia) {
    sources = [
      "shutdown_signal_handlers_posix.cc",
      "shutdown_signal_handlers_posix.h",
    ]
  }
  deps = [
    "//base",
  ]
}

# On Windows, links chrome_dll.rc. On other platforms, does nothing so you can
# unconditionally depend on it.
source_set("chrome_dll_resources") {
  # This source is added unconditionally for include checking on non-Windows
  # platforms.
  sources = [
    "chrome_dll_resource.h",
  ]

  deps = [
    ":command_ids",
  ]

  if (is_win) {
    sources += [
      "chrome_dll.rc",
      "etw_events/chrome_events_win.rc",
    ]

    deps += [
      "//build:branding_buildflags",
      "//printing/buildflags",
    ]
  }
}

if (is_android) {
  import("//build/config/android/rules.gni")
  android_generated_java_resources =
      [ "java/res/values/generated_resources.xml" ] +
      process_file_template(
          android_bundle_locales_as_resources,
          [ "java/res/values-{{source_name_part}}/generated_resources.xml" ])
}

grit("generated_resources") {
  source = "generated_resources.grd"
  defines = chrome_grit_defines
  output_dir = "$root_gen_dir/chrome"
  outputs = [
    "grit/generated_resources.h",
    "generated_resources_am.pak",
    "generated_resources_ar.pak",
    "generated_resources_bg.pak",
    "generated_resources_bn.pak",
    "generated_resources_ca.pak",
    "generated_resources_cs.pak",
    "generated_resources_da.pak",
    "generated_resources_de.pak",
    "generated_resources_el.pak",
    "generated_resources_en-GB.pak",
    "generated_resources_en-US.pak",
    "generated_resources_es.pak",
    "generated_resources_es-419.pak",
    "generated_resources_et.pak",
    "generated_resources_fa.pak",
    "generated_resources_fake-bidi.pak",
    "generated_resources_fi.pak",
    "generated_resources_fil.pak",
    "generated_resources_fr.pak",
    "generated_resources_gu.pak",
    "generated_resources_he.pak",
    "generated_resources_hi.pak",
    "generated_resources_hr.pak",
    "generated_resources_hu.pak",
    "generated_resources_id.pak",
    "generated_resources_it.pak",
    "generated_resources_ja.pak",
    "generated_resources_kn.pak",
    "generated_resources_ko.pak",
    "generated_resources_lt.pak",
    "generated_resources_lv.pak",
    "generated_resources_ml.pak",
    "generated_resources_mr.pak",
    "generated_resources_ms.pak",
    "generated_resources_nl.pak",
    "generated_resources_nb.pak",
    "generated_resources_pl.pak",
    "generated_resources_pt-BR.pak",
    "generated_resources_pt-PT.pak",
    "generated_resources_ro.pak",
    "generated_resources_ru.pak",
    "generated_resources_sk.pak",
    "generated_resources_sl.pak",
    "generated_resources_sr.pak",
    "generated_resources_sv.pak",
    "generated_resources_sw.pak",
    "generated_resources_ta.pak",
    "generated_resources_te.pak",
    "generated_resources_th.pak",
    "generated_resources_tr.pak",
    "generated_resources_uk.pak",
    "generated_resources_vi.pak",
    "generated_resources_zh-CN.pak",
    "generated_resources_zh-TW.pak",
  ]

  if (is_android) {
    outputs += android_generated_java_resources
  }
}

if (is_android) {
  java_strings_grd_prebuilt("java_strings_grd") {
    grit_output_dir = "$root_gen_dir/chrome/java/res"
    generated_files =
        rebase_path(android_generated_java_resources, "java/res", ".")
    deps = [
      ":generated_resources",
    ]
  }
}

grit("google_chrome_strings") {
  source = "google_chrome_strings.grd"
  defines = chrome_grit_defines
  output_dir = "$root_gen_dir/chrome"
  outputs = [
    "grit/google_chrome_strings.h",
    "google_chrome_strings_am.pak",
    "google_chrome_strings_ar.pak",
    "google_chrome_strings_bg.pak",
    "google_chrome_strings_bn.pak",
    "google_chrome_strings_ca.pak",
    "google_chrome_strings_cs.pak",
    "google_chrome_strings_da.pak",
    "google_chrome_strings_de.pak",
    "google_chrome_strings_el.pak",
    "google_chrome_strings_en-GB.pak",
    "google_chrome_strings_en-US.pak",
    "google_chrome_strings_es.pak",
    "google_chrome_strings_es-419.pak",
    "google_chrome_strings_et.pak",
    "google_chrome_strings_fa.pak",
    "google_chrome_strings_fi.pak",
    "google_chrome_strings_fil.pak",
    "google_chrome_strings_fr.pak",
    "google_chrome_strings_gu.pak",
    "google_chrome_strings_he.pak",
    "google_chrome_strings_hi.pak",
    "google_chrome_strings_hr.pak",
    "google_chrome_strings_hu.pak",
    "google_chrome_strings_id.pak",
    "google_chrome_strings_it.pak",
    "google_chrome_strings_ja.pak",
    "google_chrome_strings_kn.pak",
    "google_chrome_strings_ko.pak",
    "google_chrome_strings_lt.pak",
    "google_chrome_strings_lv.pak",
    "google_chrome_strings_ml.pak",
    "google_chrome_strings_mr.pak",
    "google_chrome_strings_ms.pak",
    "google_chrome_strings_nl.pak",
    "google_chrome_strings_nb.pak",
    "google_chrome_strings_pl.pak",
    "google_chrome_strings_pt-BR.pak",
    "google_chrome_strings_pt-PT.pak",
    "google_chrome_strings_ro.pak",
    "google_chrome_strings_ru.pak",
    "google_chrome_strings_sk.pak",
    "google_chrome_strings_sl.pak",
    "google_chrome_strings_sr.pak",
    "google_chrome_strings_sv.pak",
    "google_chrome_strings_sw.pak",
    "google_chrome_strings_ta.pak",
    "google_chrome_strings_te.pak",
    "google_chrome_strings_th.pak",
    "google_chrome_strings_tr.pak",
    "google_chrome_strings_uk.pak",
    "google_chrome_strings_vi.pak",
    "google_chrome_strings_zh-CN.pak",
    "google_chrome_strings_zh-TW.pak",
    "google_chrome_strings_fake-bidi.pak",
  ]
}

grit("chromium_strings") {
  source = "chromium_strings.grd"
  defines = chrome_grit_defines
  output_dir = "$root_gen_dir/chrome"
  outputs = [
    "grit/chromium_strings.h",
    "chromium_strings_am.pak",
    "chromium_strings_ar.pak",
    "chromium_strings_bg.pak",
    "chromium_strings_bn.pak",
    "chromium_strings_ca.pak",
    "chromium_strings_cs.pak",
    "chromium_strings_da.pak",
    "chromium_strings_de.pak",
    "chromium_strings_el.pak",
    "chromium_strings_en-GB.pak",
    "chromium_strings_en-US.pak",
    "chromium_strings_es.pak",
    "chromium_strings_es-419.pak",
    "chromium_strings_et.pak",
    "chromium_strings_fa.pak",
    "chromium_strings_fake-bidi.pak",
    "chromium_strings_fi.pak",
    "chromium_strings_fil.pak",
    "chromium_strings_fr.pak",
    "chromium_strings_gu.pak",
    "chromium_strings_he.pak",
    "chromium_strings_hi.pak",
    "chromium_strings_hr.pak",
    "chromium_strings_hu.pak",
    "chromium_strings_id.pak",
    "chromium_strings_it.pak",
    "chromium_strings_ja.pak",
    "chromium_strings_kn.pak",
    "chromium_strings_ko.pak",
    "chromium_strings_lt.pak",
    "chromium_strings_lv.pak",
    "chromium_strings_ml.pak",
    "chromium_strings_mr.pak",
    "chromium_strings_ms.pak",
    "chromium_strings_nl.pak",
    "chromium_strings_nb.pak",
    "chromium_strings_pl.pak",
    "chromium_strings_pt-BR.pak",
    "chromium_strings_pt-PT.pak",
    "chromium_strings_ro.pak",
    "chromium_strings_ru.pak",
    "chromium_strings_sk.pak",
    "chromium_strings_sl.pak",
    "chromium_strings_sr.pak",
    "chromium_strings_sv.pak",
    "chromium_strings_sw.pak",
    "chromium_strings_ta.pak",
    "chromium_strings_te.pak",
    "chromium_strings_th.pak",
    "chromium_strings_tr.pak",
    "chromium_strings_uk.pak",
    "chromium_strings_vi.pak",
    "chromium_strings_zh-CN.pak",
    "chromium_strings_zh-TW.pak",
  ]
}

static_library("test_support") {
  testonly = true
  visibility = [ "//chrome/test:test_support" ]

  sources = [
    "chrome_main_delegate.cc",
    "chrome_main_delegate.h",
  ]

  deps = [
    "//base",
    "//chrome/app:shutdown_signal_handlers",
    "//chrome/browser",
    "//chrome/browser/policy:path_parser",
    "//chrome/child",
    "//chrome/common",
    "//chrome/gpu",
    "//chrome/renderer",
    "//chrome/utility",
    "//components/gwp_asan/buildflags",
    "//components/nacl/common:buildflags",
    "//components/startup_metric_utils/browser:lib",
    "//content/public/app:both",
    "//content/public/common",
    "//content/public/common:service_names",
    "//pdf",
    "//ppapi/buildflags",
    "//printing/buildflags",
    "//services/service_manager/embedder",
    "//services/tracing/public/cpp",
    "//ui/base",
    "//v8:v8_headers",
  ]

  if (!is_fuchsia) {
    # TODO(crbug.com/753619): Enable crash reporting on Fuchsia.
    deps += [
      "//components/crash/content/app",
      "//components/crash/content/app:test_support",
    ]
  }

  if (is_mac) {
    sources += [ "chrome_main_mac.mm" ]

    deps += [ "//chrome:chrome_framework" ]
  }

  if (is_win) {
    deps += [
      "//chrome:chrome_initial",
      "//chrome/chrome_elf:test_stubs",
      "//chrome/install_static:install_static_util",
      "//sandbox/win:sandbox",
    ]
  }

  if (is_chromeos) {
    deps += [
      "//chrome/browser/chromeos",
      "//chromeos",
    ]
  }

  if (enable_plugins && enable_nacl) {
    deps += [
      "//components/nacl/browser",
      "//components/nacl/renderer/plugin:nacl_trusted_plugin",
    ]
  }

  if (enable_gwp_asan) {
    deps += [ "//components/gwp_asan/client" ]
  }
}

source_set("chrome_content_browser_overlay_manifest") {
  sources = [
    "chrome_content_browser_overlay_manifest.cc",
    "chrome_content_browser_overlay_manifest.h",
  ]

  deps = [
    "//base",
    "//chrome/browser/engagement:mojo_bindings",
    "//chrome/browser/media:mojo_bindings",
    "//chrome/browser/ui/webui/bluetooth_internals:mojo_bindings",
    "//chrome/browser/ui/webui/downloads:mojo_bindings",
    "//chrome/browser/ui/webui/feed_internals:mojo_bindings",
    "//chrome/browser/ui/webui/interventions_internals:mojo_bindings",
    "//chrome/browser/ui/webui/new_tab_page:mojo_bindings",
    "//chrome/browser/ui/webui/omnibox:mojo_bindings",
    "//chrome/browser/ui/webui/reset_password:mojo_bindings",
    "//chrome/browser/ui/webui/snippets_internals:mojo_bindings",
    "//chrome/browser/ui/webui/usb_internals:mojo_bindings",
    "//chrome/common:available_offline_content_mojom",
    "//chrome/common:mojo_bindings",
    "//chrome/common:offline_page_auto_fetcher_mojom",
    "//chrome/common/media_router/mojom:media_router",
    "//chrome/test/data:web_ui_test_bindings",
    "//components/autofill/content/common/mojom",
    "//components/contextual_search/content/common/mojom",
    "//components/data_reduction_proxy/core/common:interfaces",
    "//components/metrics/public/mojom:call_stack_mojo_bindings",
    "//components/page_load_metrics/common:page_load_metrics_mojom",
    "//components/rappor/public/mojom",
    "//components/safe_browsing/common:interfaces",
    "//components/services/heap_profiling/public/mojom",
    "//components/translate/content/common",
    "//extensions/buildflags",
    "//services/service_manager/public/cpp",
    "//third_party/blink/public/common",
  ]

  if (enable_extensions) {
    deps += [
      "//extensions/common:mojom",
      "//extensions/common/api:mojom",
    ]
  }

  if (is_chromeos) {
    deps += [
      "//chrome/browser/ui/webui/chromeos/add_supervision:mojo_bindings",
      "//chrome/browser/ui/webui/chromeos/crostini_installer:mojo_bindings",
      "//chrome/browser/ui/webui/chromeos/crostini_upgrader:mojo_bindings",
      "//chrome/browser/ui/webui/chromeos/machine_learning:mojo_bindings",
      "//chromeos/services/cellular_setup/public/mojom",
      "//chromeos/services/ime/public/mojom",
      "//chromeos/services/media_perception/public/mojom",
      "//chromeos/services/multidevice_setup/public/mojom",
      "//chromeos/services/network_config/public/mojom",
      "//components/chromeos_camera/common:camera_app_helper",
      "//media/capture/video/chromeos/mojom:cros_camera",
    ]
  }

  if (is_android) {
    deps +=
        [ "//chrome/browser/ui/webui/explore_sites_internals:mojo_bindings" ]
  } else {
    deps += [ "//chrome/browser/ui/webui/app_management:mojo_bindings" ]
  }

  if (is_win || is_mac || is_desktop_linux || is_chromeos) {
    deps += [
      "//chrome/browser/ui/webui/discards:mojo_bindings",
      "//services/resource_coordinator/public/mojom",
    ]
  }

  if (is_android && notouch_build) {
    configs += [ "//chrome/browser:notouch_config" ]
  }
}

source_set("builtin_service_manifests") {
  sources = [
    "builtin_service_manifests.cc",
    "builtin_service_manifests.h",
  ]

  deps = [
    "//base",
    "//chrome/common:buildflags",
    "//chrome/common:mojo_bindings",
    "//components/startup_metric_utils/common:interfaces",
    "//device/vr/buildflags",
    "//extensions/buildflags",
    "//printing/buildflags",
    "//services/service_manager/public/cpp",
  ]

  if (is_chromeos) {
    deps += [ "//ash/public/cpp:manifest" ]
  }
}

source_set("chrome_service_manifests") {
  public_deps = [
    ":builtin_service_manifests",
    ":chrome_content_browser_overlay_manifest",
  ]
}
