# Feed proguard flags should only target and affect Feed classes. Any app-wide
# specific flags should be added to each host's proguard specs and overall
# should be avoided.

-assumenosideeffects class com.google.android.libraries.feed.common.logging.Logger {
  public static boolean isDebugEnabled(java.lang.String);
  public static boolean isVerboseEnabled(java.lang.String);

  public static void v(...);
  public static void vWithStackTrace(...);
  public static void d(...);
  public static void dWithStackTrace(...);

  # Protocol buffers are large. Only allow spamming a developer's device.
  public static void debugLogRawProto(...);

  private static boolean shouldWtfCrash();
}

# The options that control replacing function invocation with constant
# expression differ between proguard and R8 (crbug.com/992568). In proguard
# function should be specified in assumevalues and assumenosideeffects. In R8
# function should be listed in assumenosideeffects with "return <value>" clause.
# This file specifies proguard options. Corresponding configuration for R8 is in
# r8_release.flags. When modifying below entries make sure to make corresponding
# changes in r8_release.flags.
# LINT.IfChange
-assumevalues class com.google.android.libraries.feed.common.logging.Logger {
  public static boolean isDebugEnabled(java.lang.String) return false;
  public static boolean isVerboseEnabled(java.lang.String) return false;
  private static boolean shouldWtfCrash() return false;
}
# LINT.ThenChange
