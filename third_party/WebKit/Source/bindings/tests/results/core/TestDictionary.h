// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format off
#ifndef TestDictionary_h
#define TestDictionary_h

#include "bindings/core/v8/Dictionary.h"
#include "bindings/core/v8/DoubleOrString.h"
#include "bindings/core/v8/FloatOrBoolean.h"
#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/core/v8/LongOrBoolean.h"
#include "bindings/core/v8/ScriptValue.h"
#include "bindings/core/v8/TestInterface2OrUint8Array.h"
#include "bindings/tests/idls/core/TestInterface2.h"
#include "core/CoreExport.h"
#include "core/testing/InternalDictionary.h"
#include "core/typed_arrays/ArrayBufferViewHelpers.h"
#include "core/typed_arrays/DOMTypedArray.h"
#include "platform/heap/Handle.h"
#include "platform/wtf/Vector.h"
#include "platform/wtf/text/WTFString.h"

namespace blink {

class EventTarget;
class TestInterfaceGarbageCollected;
class TestObject;
class TestInterfaceImplementation;
class Element;

class CORE_EXPORT TestDictionary : public IDLDictionaryBase {
  DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
 public:
  TestDictionary();
  virtual ~TestDictionary();
  TestDictionary(const TestDictionary&);
  TestDictionary& operator=(const TestDictionary&);

  bool hasAnyInRecordMember() const;
  const Vector<std::pair<String, ScriptValue>>& anyInRecordMember() const;
  void setAnyInRecordMember(const Vector<std::pair<String, ScriptValue>>&);

  bool hasAnyMember() const;
  ScriptValue anyMember() const;
  void setAnyMember(ScriptValue);

  bool hasBooleanMember() const;
  bool booleanMember() const;
  void setBooleanMember(bool);

  bool hasCreateMember() const;
  bool createMember() const;
  void setCreateMember(bool);

  bool hasDictionaryMember() const;
  Dictionary dictionaryMember() const;
  void setDictionaryMember(Dictionary);

  bool hasDoubleOrNullMember() const;
  double doubleOrNullMember() const;
  void setDoubleOrNullMember(double);
  void setDoubleOrNullMemberToNull();

  bool hasDoubleOrStringMember() const;
  const DoubleOrString& doubleOrStringMember() const;
  void setDoubleOrStringMember(const DoubleOrString&);

  bool hasDoubleOrStringSequenceMember() const;
  const HeapVector<DoubleOrString>& doubleOrStringSequenceMember() const;
  void setDoubleOrStringSequenceMember(const HeapVector<DoubleOrString>&);

  bool hasElementOrNullMember() const;
  Element* elementOrNullMember() const;
  void setElementOrNullMember(Element*);
  void setElementOrNullMemberToNull();

  bool hasEnumMember() const;
  const String& enumMember() const;
  void setEnumMember(const String&);

  bool hasEnumSequenceMember() const;
  const Vector<String>& enumSequenceMember() const;
  void setEnumSequenceMember(const Vector<String>&);

  bool hasEventTargetMember() const;
  EventTarget* eventTargetMember() const;
  void setEventTargetMember(EventTarget*);

  bool hasGarbageCollectedRecordMember() const;
  const HeapVector<std::pair<String, Member<TestObject>>>& garbageCollectedRecordMember() const;
  void setGarbageCollectedRecordMember(const HeapVector<std::pair<String, Member<TestObject>>>&);

  bool hasInternalDictionarySequenceMember() const;
  const HeapVector<InternalDictionary>& internalDictionarySequenceMember() const;
  void setInternalDictionarySequenceMember(const HeapVector<InternalDictionary>&);

  bool hasIsPublic() const;
  bool isPublic() const;
  void setIsPublic(bool);

  bool hasLongMember() const;
  int32_t longMember() const;
  void setLongMember(int32_t);

  bool hasObjectMember() const;
  ScriptValue objectMember() const;
  void setObjectMember(ScriptValue);

  bool hasObjectOrNullMember() const;
  ScriptValue objectOrNullMember() const;
  void setObjectOrNullMember(ScriptValue);
  void setObjectOrNullMemberToNull();

  bool hasOtherDoubleOrStringMember() const;
  const DoubleOrString& otherDoubleOrStringMember() const;
  void setOtherDoubleOrStringMember(const DoubleOrString&);

  bool hasPrefixGetMember() const;
  ScriptValue getPrefixGetMember() const;
  void setPrefixGetMember(ScriptValue);

  bool hasRecordMember() const;
  const Vector<std::pair<String, int8_t>>& recordMember() const;
  void setRecordMember(const Vector<std::pair<String, int8_t>>&);

  bool hasRestrictedDoubleMember() const;
  double restrictedDoubleMember() const;
  void setRestrictedDoubleMember(double);

  bool hasRuntimeMember() const;
  bool runtimeMember() const;
  void setRuntimeMember(bool);

  bool hasStringMember() const;
  const String& stringMember() const;
  void setStringMember(const String&);

  bool hasStringOrNullMember() const;
  const String& stringOrNullMember() const;
  void setStringOrNullMember(const String&);
  void setStringOrNullMemberToNull();

  bool hasStringSequenceMember() const;
  const Vector<String>& stringSequenceMember() const;
  void setStringSequenceMember(const Vector<String>&);

  bool hasTestInterface2OrUint8ArrayMember() const;
  const TestInterface2OrUint8Array& testInterface2OrUint8ArrayMember() const;
  void setTestInterface2OrUint8ArrayMember(const TestInterface2OrUint8Array&);

  bool hasTestInterfaceGarbageCollectedMember() const;
  TestInterfaceGarbageCollected* testInterfaceGarbageCollectedMember() const;
  void setTestInterfaceGarbageCollectedMember(TestInterfaceGarbageCollected*);

  bool hasTestInterfaceGarbageCollectedOrNullMember() const;
  TestInterfaceGarbageCollected* testInterfaceGarbageCollectedOrNullMember() const;
  void setTestInterfaceGarbageCollectedOrNullMember(TestInterfaceGarbageCollected*);
  void setTestInterfaceGarbageCollectedOrNullMemberToNull();

  bool hasTestInterfaceGarbageCollectedSequenceMember() const;
  const HeapVector<Member<TestInterfaceGarbageCollected>>& testInterfaceGarbageCollectedSequenceMember() const;
  void setTestInterfaceGarbageCollectedSequenceMember(const HeapVector<Member<TestInterfaceGarbageCollected>>&);

  bool hasTestInterfaceMember() const;
  TestInterfaceImplementation* testInterfaceMember() const;
  void setTestInterfaceMember(TestInterfaceImplementation*);

  bool hasTestInterfaceOrNullMember() const;
  TestInterfaceImplementation* testInterfaceOrNullMember() const;
  void setTestInterfaceOrNullMember(TestInterfaceImplementation*);
  void setTestInterfaceOrNullMemberToNull();

  bool hasTestInterfaceSequenceMember() const;
  const HeapVector<Member<TestInterfaceImplementation>>& testInterfaceSequenceMember() const;
  void setTestInterfaceSequenceMember(const HeapVector<Member<TestInterfaceImplementation>>&);

  bool hasTestObjectSequenceMember() const;
  const HeapVector<Member<TestObject>>& testObjectSequenceMember() const;
  void setTestObjectSequenceMember(const HeapVector<Member<TestObject>>&);

  bool hasUint8ArrayMember() const;
  NotShared<DOMUint8Array> uint8ArrayMember() const;
  void setUint8ArrayMember(NotShared<DOMUint8Array>);

  bool hasUnionInRecordMember() const;
  const HeapVector<std::pair<String, LongOrBoolean>>& unionInRecordMember() const;
  void setUnionInRecordMember(const HeapVector<std::pair<String, LongOrBoolean>>&);

  bool hasUnionWithTypedefs() const;
  const FloatOrBoolean& unionWithTypedefs() const;
  void setUnionWithTypedefs(const FloatOrBoolean&);

  bool hasUnrestrictedDoubleMember() const;
  double unrestrictedDoubleMember() const;
  void setUnrestrictedDoubleMember(double);

  v8::Local<v8::Value> ToV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
  DECLARE_VIRTUAL_TRACE();

 private:
  bool has_any_in_record_member_ = false;
  bool has_boolean_member_ = false;
  bool has_create_member_ = false;
  bool has_double_or_null_member_ = false;
  bool has_double_or_string_sequence_member_ = false;
  bool has_enum_sequence_member_ = false;
  bool has_garbage_collected_record_member_ = false;
  bool has_internal_dictionary_sequence_member_ = false;
  bool has_is_public_ = false;
  bool has_long_member_ = false;
  bool has_record_member_ = false;
  bool has_restricted_double_member_ = false;
  bool has_runtime_member_ = false;
  bool has_string_sequence_member_ = false;
  bool has_test_interface_garbage_collected_sequence_member_ = false;
  bool has_test_interface_sequence_member_ = false;
  bool has_test_object_sequence_member_ = false;
  bool has_union_in_record_member_ = false;
  bool has_unrestricted_double_member_ = false;

  Vector<std::pair<String, ScriptValue>> any_in_record_member_;
  ScriptValue any_member_;
  bool boolean_member_;
  bool create_member_;
  Dictionary dictionary_member_;
  double double_or_null_member_;
  DoubleOrString double_or_string_member_;
  HeapVector<DoubleOrString> double_or_string_sequence_member_;
  Member<Element> element_or_null_member_;
  String enum_member_;
  Vector<String> enum_sequence_member_;
  Member<EventTarget> event_target_member_;
  HeapVector<std::pair<String, Member<TestObject>>> garbage_collected_record_member_;
  HeapVector<InternalDictionary> internal_dictionary_sequence_member_;
  bool is_public_;
  int32_t long_member_;
  ScriptValue object_member_;
  ScriptValue object_or_null_member_;
  DoubleOrString other_double_or_string_member_;
  ScriptValue prefix_get_member_;
  Vector<std::pair<String, int8_t>> record_member_;
  double restricted_double_member_;
  bool runtime_member_;
  String string_member_;
  String string_or_null_member_;
  Vector<String> string_sequence_member_;
  TestInterface2OrUint8Array test_interface_2_or_uint8_array_member_;
  Member<TestInterfaceGarbageCollected> test_interface_garbage_collected_member_;
  Member<TestInterfaceGarbageCollected> test_interface_garbage_collected_or_null_member_;
  HeapVector<Member<TestInterfaceGarbageCollected>> test_interface_garbage_collected_sequence_member_;
  Member<TestInterfaceImplementation> test_interface_member_;
  Member<TestInterfaceImplementation> test_interface_or_null_member_;
  HeapVector<Member<TestInterfaceImplementation>> test_interface_sequence_member_;
  HeapVector<Member<TestObject>> test_object_sequence_member_;
  Member<DOMUint8Array> uint8_array_member_;
  HeapVector<std::pair<String, LongOrBoolean>> union_in_record_member_;
  FloatOrBoolean union_with_typedefs_;
  double unrestricted_double_member_;

  friend class V8TestDictionary;
};

}  // namespace blink

#endif  // TestDictionary_h
