{% filter format_blink_cpp_source_code %}

{% include 'copyright_block.txt' %}

#ifndef {{cpp_class}}_h
#define {{cpp_class}}_h

{% for filename in header_includes %}
#include "{{filename}}"
{% endfor %}

namespace blink {

{% for forward_declaration in forward_declarations %}
class {{forward_declaration}};
{% endfor %}

class {{exported}}{{cpp_class}} final : public CallbackFunctionBase {
 public:
  static {{cpp_class}}* Create(v8::Local<v8::Function> callback_function) {
    return new {{cpp_class}}(callback_function);
  }

  ~{{cpp_class}}() override = default;

  {# TODO(yukishiino): Change the return type to v8::Maybe<T> so that the
     function returns a return value or throws an exception. #}
  // Performs "invoke".
  // https://heycam.github.io/webidl/#es-invoking-callback-functions
  bool call({{argument_declarations | join(', ')}});

 private:
  explicit {{cpp_class}}(v8::Local<v8::Function> callback_function)
      : CallbackFunctionBase(callback_function) {}
};

}  // namespace blink

#endif  // {{cpp_class}}_h

{% endfilter %}{# format_blink_cpp_source_code #}
