# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/jumbo.gni")
import("//third_party/WebKit/Source/build/scripts/scripts.gni")
import("//third_party/WebKit/Source/platform/platform.gni")
import("//third_party/WebKit/Source/platform/platform_generated.gni")

make_names("http_names") {
  in_files = [ "http_names.json5" ]
  output_dir = "$blink_platform_output_dir/network"
}

group("make_generated") {
  visibility = [
    ":*",
    "//third_party/WebKit/Source/platform:*",
  ]

  public_deps = [
    ":http_names",
  ]
}

blink_platform_sources("network") {
  sources = [
    "ContentSecurityPolicyParsers.cpp",
    "ContentSecurityPolicyParsers.h",
    "ContentSecurityPolicyResponseHeaders.cpp",
    "ContentSecurityPolicyResponseHeaders.h",
    "EncodedFormData.cpp",
    "EncodedFormData.h",
    "FormDataEncoder.cpp",
    "FormDataEncoder.h",
    "HTTPHeaderMap.cpp",
    "HTTPHeaderMap.h",
    "HTTPParsers.cpp",
    "HTTPParsers.h",
    "HeaderFieldTokenizer.cpp",
    "HeaderFieldTokenizer.h",
    "NetworkHints.cpp",
    "NetworkHints.h",
    "NetworkInstrumentation.cpp",
    "NetworkInstrumentation.h",
    "NetworkLog.h",
    "NetworkStateNotifier.cpp",
    "NetworkStateNotifier.h",
    "NetworkUtils.cpp",
    "NetworkUtils.h",
    "ParsedContentDisposition.cpp",
    "ParsedContentDisposition.h",
    "ParsedContentHeaderFieldParameters.cpp",
    "ParsedContentHeaderFieldParameters.h",
    "ParsedContentType.cpp",
    "ParsedContentType.h",
    "ServerTimingHeader.cpp",
    "ServerTimingHeader.h",
    "WebSocketHandshakeRequest.cpp",
    "WebSocketHandshakeRequest.h",
    "WebSocketHandshakeResponse.cpp",
    "WebSocketHandshakeResponse.h",
    "mime/ContentType.cpp",
    "mime/ContentType.h",
    "mime/MIMETypeFromURL.cpp",
    "mime/MIMETypeFromURL.h",
    "mime/MIMETypeRegistry.cpp",
    "mime/MIMETypeRegistry.h",
  ]

  sources += get_target_outputs(":http_names")

  deps = [
    "//media",
  ]
}

jumbo_source_set("unit_tests") {
  visibility = [ "//third_party/WebKit/Source/platform:*" ]
  testonly = true

  sources = [
    "EncodedFormDataTest.cpp",
    "HTTPParsersTest.cpp",
    "NetworkStateNotifierTest.cpp",
    "NetworkUtilsTest.cpp",
    "ParsedContentDispositionTest.cpp",
    "ParsedContentHeaderFieldParametersTest.cpp",
    "ParsedContentTypeTest.cpp",
    "mime/MIMETypeRegistryTest.cpp",
  ]

  configs += [ "//third_party/WebKit/Source/platform:blink_platform_config" ]

  deps = [
    "//testing/gtest",
    "//third_party/WebKit/Source/platform:platform",
  ]
}

jumbo_source_set("test_support") {
  visibility = [ "//third_party/WebKit/Source/platform:test_support" ]
  testonly = true

  sources = [
    "mime/MockMimeRegistry.h",
  ]

  configs += [
    "//third_party/WebKit/Source:non_test_config",
    "//third_party/WebKit/Source/platform:blink_platform_config",
  ]

  public_deps = [
    "//net",
    "//third_party/WebKit/Source/platform/blob:generator",
  ]
}
