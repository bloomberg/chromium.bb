# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//third_party/WebKit/Source/modules/modules.gni")

blink_modules_sources("serviceworkers") {
  sources = [
    "ExtendableEvent.cpp",
    "ExtendableEvent.h",
    "ExtendableMessageEvent.cpp",
    "ExtendableMessageEvent.h",
    "FetchEvent.cpp",
    "FetchEvent.h",
    "FetchRespondWithObserver.cpp",
    "FetchRespondWithObserver.h",
    "ForeignFetchEvent.cpp",
    "ForeignFetchEvent.h",
    "ForeignFetchRespondWithObserver.cpp",
    "ForeignFetchRespondWithObserver.h",
    "InstallEvent.cpp",
    "InstallEvent.h",
    "NavigationPreloadCallbacks.cpp",
    "NavigationPreloadCallbacks.h",
    "NavigationPreloadManager.cpp",
    "NavigationPreloadManager.h",
    "NavigatorServiceWorker.cpp",
    "NavigatorServiceWorker.h",
    "RespondWithObserver.cpp",
    "RespondWithObserver.h",
    "ServiceWorker.cpp",
    "ServiceWorker.h",
    "ServiceWorkerClient.cpp",
    "ServiceWorkerClient.h",
    "ServiceWorkerClients.cpp",
    "ServiceWorkerClients.h",
    "ServiceWorkerContainer.cpp",
    "ServiceWorkerContainer.h",
    "ServiceWorkerContainerClient.cpp",
    "ServiceWorkerContainerClient.h",
    "ServiceWorkerContentSettingsProxy.cpp",
    "ServiceWorkerContentSettingsProxy.h",
    "ServiceWorkerError.cpp",
    "ServiceWorkerError.h",
    "ServiceWorkerGlobalScope.cpp",
    "ServiceWorkerGlobalScope.h",
    "ServiceWorkerGlobalScopeClient.cpp",
    "ServiceWorkerGlobalScopeClient.h",
    "ServiceWorkerGlobalScopeProxy.cpp",
    "ServiceWorkerGlobalScopeProxy.h",
    "ServiceWorkerInstalledScriptsManager.cpp",
    "ServiceWorkerInstalledScriptsManager.h",
    "ServiceWorkerLinkResource.cpp",
    "ServiceWorkerLinkResource.h",
    "ServiceWorkerRegistration.cpp",
    "ServiceWorkerRegistration.h",
    "ServiceWorkerScriptCachedMetadataHandler.cpp",
    "ServiceWorkerScriptCachedMetadataHandler.h",
    "ServiceWorkerThread.cpp",
    "ServiceWorkerThread.h",
    "ServiceWorkerWindowClient.cpp",
    "ServiceWorkerWindowClient.h",
    "ServiceWorkerWindowClientCallback.cpp",
    "ServiceWorkerWindowClientCallback.h",
    "WaitUntilObserver.cpp",
    "WaitUntilObserver.h",
  ]
}
