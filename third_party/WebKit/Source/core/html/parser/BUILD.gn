# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//testing/libfuzzer/fuzzer_test.gni")
import("//third_party/WebKit/Source/core/core.gni")

blink_core_sources("parser") {
  sources = [
    "AtomicHTMLToken.cpp",
    "AtomicHTMLToken.h",
    "BackgroundHTMLInputStream.cpp",
    "BackgroundHTMLInputStream.h",
    "BackgroundHTMLParser.cpp",
    "BackgroundHTMLParser.h",
    "CSSPreloadScanner.cpp",
    "CSSPreloadScanner.h",
    "CompactHTMLToken.cpp",
    "CompactHTMLToken.h",
    "HTMLConstructionSite.cpp",
    "HTMLConstructionSite.h",
    "HTMLDocumentParser.cpp",
    "HTMLDocumentParser.h",
    "HTMLElementStack.cpp",
    "HTMLElementStack.h",
    "HTMLEntityParser.cpp",
    "HTMLEntityParser.h",
    "HTMLEntitySearch.cpp",
    "HTMLEntitySearch.h",
    "HTMLEntityTable.h",
    "HTMLFormattingElementList.cpp",
    "HTMLFormattingElementList.h",
    "HTMLInputStream.h",
    "HTMLMetaCharsetParser.cpp",
    "HTMLMetaCharsetParser.h",
    "HTMLParserIdioms.cpp",
    "HTMLParserIdioms.h",
    "HTMLParserOptions.cpp",
    "HTMLParserOptions.h",
    "HTMLParserReentryPermit.cpp",
    "HTMLParserReentryPermit.h",
    "HTMLParserScheduler.cpp",
    "HTMLParserScheduler.h",
    "HTMLPreloadScanner.cpp",
    "HTMLPreloadScanner.h",
    "HTMLResourcePreloader.cpp",
    "HTMLResourcePreloader.h",
    "HTMLSourceTracker.cpp",
    "HTMLSourceTracker.h",
    "HTMLSrcsetParser.cpp",
    "HTMLSrcsetParser.h",
    "HTMLStackItem.h",
    "HTMLToken.h",
    "HTMLTokenizer.cpp",
    "HTMLTokenizer.h",
    "HTMLTreeBuilder.cpp",
    "HTMLTreeBuilder.h",
    "HTMLTreeBuilderSimulator.cpp",
    "HTMLTreeBuilderSimulator.h",
    "HTMLViewSourceParser.cpp",
    "HTMLViewSourceParser.h",
    "InputStreamPreprocessor.h",
    "MarkupTokenizerInlines.h",
    "NestingLevelIncrementer.h",
    "ParserSynchronizationPolicy.h",
    "PreloadRequest.cpp",
    "PreloadRequest.h",
    "ResourcePreloader.cpp",
    "ResourcePreloader.h",
    "TextDocumentParser.cpp",
    "TextDocumentParser.h",
    "TextResourceDecoder.cpp",
    "TextResourceDecoder.h",
    "TokenizedChunkQueue.cpp",
    "TokenizedChunkQueue.h",
    "XSSAuditor.cpp",
    "XSSAuditor.h",
    "XSSAuditorDelegate.cpp",
    "XSSAuditorDelegate.h",
  ]

  # Optimizing the HTML parser for speed yields significant gains in performance
  # in parser-heavy scenarios. See https://crbug.com/787512.
  # Windows builds already override the default optimization in core.gni.
  if (!is_debug && !is_win) {
    configs -= [ "//build/config/compiler:default_optimization" ]
    configs += [ "//build/config/compiler:optimize_max" ]
  }
}

fuzzer_test("blink_html_tokenizer_fuzzer") {
  sources = [
    "HTMLTokenizerFuzzer.cpp",
  ]
  deps = [
    "../../:core",
    "../../../platform:blink_fuzzer_test_support",
  ]
}
