/*
 * Copyright (C) 2006, 2007, 2009, 2010 Apple Inc. All rights reserved.
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

// https://html.spec.whatwg.org/#the-iframe-element
[HTMLConstructor]
interface HTMLIFrameElement : HTMLElement {
    [CEReactions, Reflect, URL] attribute USVString src;
    [CEReactions, Reflect] attribute DOMString srcdoc;
    [CEReactions, Reflect] attribute DOMString name;
    [CEReactions, PutForwards=value] readonly attribute DOMTokenList sandbox;
    // Note: The seamless attribute was once supported, but was removed.
    [CEReactions, Reflect] attribute boolean allowFullscreen;
    [CEReactions, Reflect] attribute DOMString width;
    [CEReactions, Reflect] attribute DOMString height;

    [CheckSecurity=ReturnValue] readonly attribute Document? contentDocument;
    readonly attribute Window? contentWindow;
    [CheckSecurity=ReturnValue, RaisesException] Document? getSVGDocument();
    [CEReactions, Reflect, ReflectOnly=("","no-referrer","origin","no-referrer-when-downgrade","origin-when-cross-origin","unsafe-url"), ReflectMissing="", ReflectInvalid=""] attribute DOMString referrerPolicy;
    // https://w3c.github.io/webappsec-csp/embedded/#dom-htmliframeelement-csp
    [RuntimeEnabled=EmbedderCSPEnforcement, CEReactions, Reflect] attribute DOMString csp;

    // Feature Policy
    // https://wicg.github.io/feature-policy/
    [CEReactions, Reflect] attribute DOMString allow;
    // TODO(iclelland): add spec for JS exposure in the spec for Feature Policy.
    // Please refer to this doc for more details for now:
    // https://docs.google.com/a/chromium.org/document/d/1wvk3cXkblNnbkMcsKayseK-k0SMGiP9b9fQFgfpqQpc/edit?usp=sharing
    [RuntimeEnabled=FeaturePolicyJavaScriptInterface] readonly attribute Policy policy;

    // obsolete members
    // https://html.spec.whatwg.org/#HTMLIFrameElement-partial
    [CEReactions, Reflect] attribute DOMString align;
    [CEReactions, Reflect] attribute DOMString scrolling;
    [CEReactions, Reflect] attribute DOMString frameBorder;
    [CEReactions, Reflect, URL] attribute USVString longDesc;

    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString marginHeight;
    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString marginWidth;
};
