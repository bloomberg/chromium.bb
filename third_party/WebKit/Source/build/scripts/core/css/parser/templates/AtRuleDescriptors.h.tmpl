// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef AtRuleDescriptors_h
#define AtRuleDescriptors_h

#include "core/CSSPropertyNames.h"
#include "platform/wtf/text/StringView.h"
#include <string.h>

namespace blink {

enum class AtRuleDescriptorID {
  Invalid = 0,
{% for descriptor in descriptors %}
  {{descriptor.upper_camel_name}} = {{descriptor.enum_value}},
{% endfor %}
};

struct AtRuleDescriptorIDHash {
  STATIC_ONLY(AtRuleDescriptorIDHash);
  static unsigned GetHash(AtRuleDescriptorID id) {
    return WTF::HashInt(static_cast<unsigned>(id));
  }
  static bool Equal(AtRuleDescriptorID a, AtRuleDescriptorID b) {
    return a == b;
  }
  static const bool safe_to_compare_to_empty_or_deleted = true;
};

const int numAtRuleDescriptors = {{descriptors_count}};

const char* GetDescriptorName(AtRuleDescriptorID);

AtRuleDescriptorID AsAtRuleDescriptorID(StringView string);

CSSPropertyID AtRuleDescriptorIDAsCSSPropertyID(AtRuleDescriptorID);
AtRuleDescriptorID CSSPropertyIDAsAtRuleDescriptor(CSSPropertyID id);

} // namespace blink

namespace WTF {
template <>
struct DefaultHash<blink::AtRuleDescriptorID> {
  using Hash = blink::AtRuleDescriptorIDHash;
};
} // namespace WTF

#endif  // AtRuleDescriptors_h
