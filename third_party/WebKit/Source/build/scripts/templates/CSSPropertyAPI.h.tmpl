// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CSSPropertyAPI_h
#define CSSPropertyAPI_h

#include "core/CSSPropertyNames.h"
#include "platform/wtf/Allocator.h"

namespace blink {

class CSSValue;
class CSSParserContext;
class CSSParserTokenRange;

// Base class for property APIs that contain logic for handling individual
// properties.
// The methods declared here are standard methods among property APIs, and can
// be called on a particular property API through a CSSPropertyDescriptor
// object.
// Note that not all methods are implemented by all property APIs. Methods that
// are not implemented on a property API will return nullptr when accessed
// through a CSSPropertyDescriptor.
// See the api_methods field on properties defined in CSSProperties.json5 for a
// definition of which methods are implemented on a property.
//
// Status (5th May 2017): Eventually, all property specific logic will be
// contained within property APIs that inherit from CSSPropertyAPI.
// Currently, the code base is in a transitional state and property specific
// logic is still scattered around the code base.
class CSSPropertyAPI {
  STATIC_ONLY(CSSPropertyAPI);

 public:
  {% for api_method_name in ordered_api_method_names %}
  {% set api_method = all_api_methods[api_method_name] %}
  {% if api_method.description %}
  // {{api_method.description}}
  {% endif %}
  static {{api_method.return_type}} {{api_method_name}}{{api_method.parameters}};
  {% endfor %}
};

} // namespace blink

#endif // CSSPropertyAPI_h
