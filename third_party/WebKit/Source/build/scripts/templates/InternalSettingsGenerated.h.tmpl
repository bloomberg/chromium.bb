{% from "templates/macros.tmpl" import license, source_files_for_generated_file %}
{{ license() }}

{{source_files_for_generated_file(template_file, input_files)}}

#ifndef InternalSettingsGenerated_h
#define InternalSettingsGenerated_h

#include "platform/bindings/ScriptWrappable.h"
#include "platform/heap/Handle.h"
#include "platform/wtf/RefCounted.h"
#include "base/memory/scoped_refptr.h"
#include "platform/wtf/text/WTFString.h"

namespace blink {

class Page;

class InternalSettingsGenerated : public ScriptWrappable {
  DEFINE_WRAPPERTYPEINFO();

 public:
  explicit InternalSettingsGenerated(Page*);
  virtual ~InternalSettingsGenerated();
  void resetToConsistentState();
  {% for setting in settings if setting.type|to_idl_type %}
  void set{{setting.name|upper_first}}({{setting.type|to_passing_type}} {{setting.name}});
  {% endfor %}

  virtual void Trace(Visitor*);

 private:
  Member<Page> m_page;

  {% for setting in settings if setting.type|to_idl_type %}
  {{setting.type}} m_{{setting.name}};
  {% endfor %}
};

} // namespace blink

#endif // InternalSettingsGenerated_h
