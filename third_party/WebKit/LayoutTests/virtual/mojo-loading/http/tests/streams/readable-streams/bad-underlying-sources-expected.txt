This is a testharness.js-based test.
Harness Error. harness_status.status = 1 , harness_status.message = 21 duplicate test names: "Underlying source start: throwing getter", "Underlying source start: throwing method", "Underlying source: throwing pull getter (initial pull)", "Underlying source: throwing pull method (initial pull)", "Underlying source pull: throwing getter (second pull)", "Underlying source pull: throwing method (second pull)", "Underlying source cancel: throwing getter", "Underlying source cancel: throwing method", "Underlying source: calling enqueue on an empty canceled stream should throw", "Underlying source: calling enqueue on a non-empty canceled stream should throw", "Underlying source: calling enqueue on a closed stream should throw", "Underlying source: calling enqueue on an errored stream should throw", "Underlying source: calling close twice on an empty stream should throw the second time", "Underlying source: calling close twice on a non-empty stream should throw the second time", "Underlying source: calling close on an empty canceled stream should throw", "Underlying source: calling close on a non-empty canceled stream should throw", "Underlying source: calling close after error should throw", "Underlying source: calling error twice should throw the second time", "Underlying source: calling error after close should throw", "Underlying source: calling error and returning a rejected promise from start should cause the stream to error with the first error", "Underlying source: calling error and returning a rejected promise from pull should cause the stream to error with the first error"
PASS Underlying source start: throwing getter
PASS Underlying source start: throwing method
PASS Underlying source: throwing pull getter (initial pull)
PASS Underlying source: throwing pull method (initial pull)
PASS Underlying source pull: throwing getter (second pull)
PASS Underlying source pull: throwing method (second pull)
PASS Underlying source cancel: throwing getter
PASS Underlying source cancel: throwing method
PASS Underlying source: calling enqueue on an empty canceled stream should throw
PASS Underlying source: calling enqueue on a non-empty canceled stream should throw
PASS Underlying source: calling enqueue on a closed stream should throw
PASS Underlying source: calling enqueue on an errored stream should throw
PASS Underlying source: calling close twice on an empty stream should throw the second time
PASS Underlying source: calling close twice on a non-empty stream should throw the second time
PASS Underlying source: calling close on an empty canceled stream should throw
PASS Underlying source: calling close on a non-empty canceled stream should throw
PASS Underlying source: calling close after error should throw
PASS Underlying source: calling error twice should throw the second time
PASS Underlying source: calling error after close should throw
PASS Underlying source: calling error and returning a rejected promise from start should cause the stream to error with the first error
PASS Underlying source: calling error and returning a rejected promise from pull should cause the stream to error with the first error
PASS Untitled
PASS Underlying source start: throwing getter
PASS Underlying source start: throwing method
PASS Underlying source: throwing pull getter (initial pull)
PASS Underlying source: throwing pull method (initial pull)
PASS Underlying source pull: throwing getter (second pull)
PASS Underlying source pull: throwing method (second pull)
PASS Underlying source cancel: throwing getter
PASS Underlying source cancel: throwing method
PASS Underlying source: calling enqueue on an empty canceled stream should throw
PASS Underlying source: calling enqueue on a non-empty canceled stream should throw
PASS Underlying source: calling enqueue on a closed stream should throw
PASS Underlying source: calling enqueue on an errored stream should throw
PASS Underlying source: calling close twice on an empty stream should throw the second time
PASS Underlying source: calling close twice on a non-empty stream should throw the second time
PASS Underlying source: calling close on an empty canceled stream should throw
PASS Underlying source: calling close on a non-empty canceled stream should throw
PASS Underlying source: calling close after error should throw
PASS Underlying source: calling error twice should throw the second time
PASS Underlying source: calling error after close should throw
PASS Underlying source: calling error and returning a rejected promise from start should cause the stream to error with the first error
PASS Underlying source: calling error and returning a rejected promise from pull should cause the stream to error with the first error
PASS Underlying source start: throwing getter
PASS Underlying source start: throwing method
PASS Underlying source: throwing pull getter (initial pull)
PASS Underlying source: throwing pull method (initial pull)
PASS Underlying source pull: throwing getter (second pull)
PASS Underlying source pull: throwing method (second pull)
PASS Underlying source cancel: throwing getter
PASS Underlying source cancel: throwing method
PASS Underlying source: calling enqueue on an empty canceled stream should throw
PASS Underlying source: calling enqueue on a non-empty canceled stream should throw
PASS Underlying source: calling enqueue on a closed stream should throw
PASS Underlying source: calling enqueue on an errored stream should throw
PASS Underlying source: calling close twice on an empty stream should throw the second time
PASS Underlying source: calling close twice on a non-empty stream should throw the second time
PASS Underlying source: calling close on an empty canceled stream should throw
PASS Underlying source: calling close on a non-empty canceled stream should throw
PASS Underlying source: calling close after error should throw
PASS Underlying source: calling error twice should throw the second time
PASS Underlying source: calling error after close should throw
PASS Underlying source: calling error and returning a rejected promise from start should cause the stream to error with the first error
PASS Underlying source: calling error and returning a rejected promise from pull should cause the stream to error with the first error
PASS Underlying source start: throwing getter
PASS Underlying source start: throwing method
PASS Underlying source: throwing pull getter (initial pull)
PASS Underlying source: throwing pull method (initial pull)
PASS Underlying source pull: throwing getter (second pull)
PASS Underlying source pull: throwing method (second pull)
PASS Underlying source cancel: throwing getter
PASS Underlying source cancel: throwing method
PASS Underlying source: calling enqueue on an empty canceled stream should throw
PASS Underlying source: calling enqueue on a non-empty canceled stream should throw
PASS Underlying source: calling enqueue on a closed stream should throw
PASS Underlying source: calling enqueue on an errored stream should throw
PASS Underlying source: calling close twice on an empty stream should throw the second time
PASS Underlying source: calling close twice on a non-empty stream should throw the second time
PASS Underlying source: calling close on an empty canceled stream should throw
PASS Underlying source: calling close on a non-empty canceled stream should throw
PASS Underlying source: calling close after error should throw
PASS Underlying source: calling error twice should throw the second time
PASS Underlying source: calling error after close should throw
PASS Underlying source: calling error and returning a rejected promise from start should cause the stream to error with the first error
PASS Underlying source: calling error and returning a rejected promise from pull should cause the stream to error with the first error
Harness: the test ran to completion.

