This is a testharness.js-based test.
Found 7087 tests; 6958 PASS, 129 FAIL, 0 TIMEOUT, 0 NOTRUN.
PASS picture.title: 32 tests
PASS picture.lang: 32 tests
PASS picture.dir: 62 tests
PASS picture.className (<picture class>): 32 tests
PASS picture.hidden: 33 tests
PASS picture.accessKey: 32 tests
PASS picture.tabIndex: 24 tests
PASS img.title: 32 tests
PASS img.lang: 32 tests
PASS img.dir: 62 tests
PASS img.className (<img class>): 32 tests
PASS img.hidden: 33 tests
PASS img.accessKey: 32 tests
PASS img.tabIndex: 24 tests
PASS img.alt: 32 tests
PASS img.src: 38 tests
PASS img.srcset: 32 tests
PASS img.crossOrigin: 52 tests
PASS img.useMap: 32 tests
PASS img.isMap: 33 tests
PASS img.width: 9 tests
PASS img.height: 9 tests
PASS img.referrerPolicy: 27 tests
FAIL img.referrerPolicy: setAttribute() to "same-origin" assert_equals: IDL get expected "same-origin" but got ""
PASS img.referrerPolicy: 3 tests
FAIL img.referrerPolicy: setAttribute() to "SAME-ORIGIN" assert_equals: IDL get expected "same-origin" but got ""
PASS img.referrerPolicy: 5 tests
FAIL img.referrerPolicy: setAttribute() to "strict-origin" assert_equals: IDL get expected "strict-origin" but got ""
PASS img.referrerPolicy: 3 tests
FAIL img.referrerPolicy: setAttribute() to "STRICT-ORIGIN" assert_equals: IDL get expected "strict-origin" but got ""
PASS img.referrerPolicy: 5 tests
FAIL img.referrerPolicy: setAttribute() to "strict-origin-when-cross-origin" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS img.referrerPolicy: 3 tests
FAIL img.referrerPolicy: setAttribute() to "STRICT-ORIGIN-WHEN-CROSS-ORIGIN" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS img.referrerPolicy: 30 tests
FAIL img.referrerPolicy: IDL set to "same-origin" assert_equals: IDL get expected "same-origin" but got ""
PASS img.referrerPolicy: 3 tests
FAIL img.referrerPolicy: IDL set to "SAME-ORIGIN" assert_equals: IDL get expected "same-origin" but got ""
PASS img.referrerPolicy: 5 tests
FAIL img.referrerPolicy: IDL set to "strict-origin" assert_equals: IDL get expected "strict-origin" but got ""
PASS img.referrerPolicy: 3 tests
FAIL img.referrerPolicy: IDL set to "STRICT-ORIGIN" assert_equals: IDL get expected "strict-origin" but got ""
PASS img.referrerPolicy: 5 tests
FAIL img.referrerPolicy: IDL set to "strict-origin-when-cross-origin" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS img.referrerPolicy: 3 tests
FAIL img.referrerPolicy: IDL set to "STRICT-ORIGIN-WHEN-CROSS-ORIGIN" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS img.referrerPolicy: 5 tests
PASS img.decoding: 60 tests
PASS img.name: 32 tests
PASS img.lowsrc: 38 tests
PASS img.align: 32 tests
PASS img.hspace: 62 tests
PASS img.vspace: 62 tests
PASS img.longDesc: 38 tests
PASS img.border: 32 tests
PASS iframe.title: 32 tests
PASS iframe.lang: 32 tests
PASS iframe.dir: 62 tests
PASS iframe.className (<iframe class>): 32 tests
PASS iframe.hidden: 33 tests
PASS iframe.accessKey: 32 tests
PASS iframe.tabIndex: 24 tests
PASS iframe.src: 38 tests
PASS iframe.srcdoc: 32 tests
PASS iframe.name: 32 tests
PASS iframe.allowFullscreen: 33 tests
FAIL iframe.allowUserMedia: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL iframe.allowUserMedia: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to "" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to " foo " assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to undefined assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to null assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to 7 assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to 1.5 assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to true assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to false assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to object "[object Object]" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to NaN assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to Infinity assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to -Infinity assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to "\0" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to object "test-toString" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to object "test-valueOf" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: setAttribute() to "allowUserMedia" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL iframe.allowUserMedia: IDL set to "" assert_equals: hasAttribute() expected false but got true
FAIL iframe.allowUserMedia: IDL set to " foo " assert_equals: IDL get expected (boolean) true but got (string) " foo "
FAIL iframe.allowUserMedia: IDL set to undefined assert_equals: hasAttribute() expected false but got true
FAIL iframe.allowUserMedia: IDL set to null assert_equals: hasAttribute() expected false but got true
FAIL iframe.allowUserMedia: IDL set to 7 assert_equals: IDL get expected (boolean) true but got (number) 7
FAIL iframe.allowUserMedia: IDL set to 1.5 assert_equals: IDL get expected (boolean) true but got (number) 1.5
PASS iframe.allowUserMedia: IDL set to true
FAIL iframe.allowUserMedia: IDL set to false assert_equals: hasAttribute() expected false but got true
FAIL iframe.allowUserMedia: IDL set to object "[object Object]" assert_equals: IDL get expected (boolean) true but got (object) object "[object Object]"
FAIL iframe.allowUserMedia: IDL set to NaN assert_equals: hasAttribute() expected false but got true
FAIL iframe.allowUserMedia: IDL set to Infinity assert_equals: IDL get expected (boolean) true but got (number) Infinity
FAIL iframe.allowUserMedia: IDL set to -Infinity assert_equals: IDL get expected (boolean) true but got (number) -Infinity
FAIL iframe.allowUserMedia: IDL set to "\0" assert_equals: IDL get expected (boolean) true but got (string) "\0"
FAIL iframe.allowUserMedia: IDL set to object "test-toString" assert_equals: IDL get expected (boolean) true but got (object) object "test-toString"
FAIL iframe.allowUserMedia: IDL set to object "test-valueOf" assert_equals: IDL get expected (boolean) true but got (object) object "test-valueOf"
PASS iframe.allowPaymentRequest: 33 tests
PASS iframe.width: 32 tests
PASS iframe.height: 32 tests
PASS iframe.referrerPolicy: 27 tests
FAIL iframe.referrerPolicy: setAttribute() to "same-origin" assert_equals: IDL get expected "same-origin" but got ""
PASS iframe.referrerPolicy: 3 tests
FAIL iframe.referrerPolicy: setAttribute() to "SAME-ORIGIN" assert_equals: IDL get expected "same-origin" but got ""
PASS iframe.referrerPolicy: 5 tests
FAIL iframe.referrerPolicy: setAttribute() to "strict-origin" assert_equals: IDL get expected "strict-origin" but got ""
PASS iframe.referrerPolicy: 3 tests
FAIL iframe.referrerPolicy: setAttribute() to "STRICT-ORIGIN" assert_equals: IDL get expected "strict-origin" but got ""
PASS iframe.referrerPolicy: 5 tests
FAIL iframe.referrerPolicy: setAttribute() to "strict-origin-when-cross-origin" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS iframe.referrerPolicy: 3 tests
FAIL iframe.referrerPolicy: setAttribute() to "STRICT-ORIGIN-WHEN-CROSS-ORIGIN" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS iframe.referrerPolicy: 30 tests
FAIL iframe.referrerPolicy: IDL set to "same-origin" assert_equals: IDL get expected "same-origin" but got ""
PASS iframe.referrerPolicy: 3 tests
FAIL iframe.referrerPolicy: IDL set to "SAME-ORIGIN" assert_equals: IDL get expected "same-origin" but got ""
PASS iframe.referrerPolicy: 5 tests
FAIL iframe.referrerPolicy: IDL set to "strict-origin" assert_equals: IDL get expected "strict-origin" but got ""
PASS iframe.referrerPolicy: 3 tests
FAIL iframe.referrerPolicy: IDL set to "STRICT-ORIGIN" assert_equals: IDL get expected "strict-origin" but got ""
PASS iframe.referrerPolicy: 5 tests
FAIL iframe.referrerPolicy: IDL set to "strict-origin-when-cross-origin" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS iframe.referrerPolicy: 3 tests
FAIL iframe.referrerPolicy: IDL set to "STRICT-ORIGIN-WHEN-CROSS-ORIGIN" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS iframe.referrerPolicy: 5 tests
FAIL iframe.delegateStickyUserActivation: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL iframe.delegateStickyUserActivation: setAttribute() to "vibration" assert_equals: IDL get expected (string) "vibration" but got (undefined) undefined
FAIL iframe.delegateStickyUserActivation: setAttribute() to "VIBRATION" assert_equals: IDL get expected (string) "vibration" but got (undefined) undefined
FAIL iframe.delegateStickyUserActivation: setAttribute() to "media" assert_equals: IDL get expected (string) "media" but got (undefined) undefined
FAIL iframe.delegateStickyUserActivation: setAttribute() to "MEDIA" assert_equals: IDL get expected (string) "media" but got (undefined) undefined
FAIL iframe.delegateStickyUserActivation: IDL set to "" assert_equals: getAttribute() expected "" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " assert_equals: getAttribute() expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to undefined assert_equals: getAttribute() expected "undefined" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to 7 assert_equals: getAttribute() expected "7" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to 1.5 assert_equals: getAttribute() expected "1.5" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to true assert_equals: getAttribute() expected "true" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to false assert_equals: getAttribute() expected "false" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to object "[object Object]" assert_equals: getAttribute() expected "[object Object]" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to NaN assert_equals: getAttribute() expected "NaN" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to Infinity assert_equals: getAttribute() expected "Infinity" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to -Infinity assert_equals: getAttribute() expected "-Infinity" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "\0" assert_equals: getAttribute() expected "\0" but got "MEDIA"
PASS iframe.delegateStickyUserActivation: IDL set to null
FAIL iframe.delegateStickyUserActivation: IDL set to object "test-toString" assert_equals: getAttribute() expected "test-toString" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to object "test-valueOf" assert_equals: getAttribute() expected "test-valueOf" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "vibration" assert_equals: getAttribute() expected "vibration" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "xvibration" assert_equals: getAttribute() expected "xvibration" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "vibration\0" assert_equals: getAttribute() expected "vibration\0" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "ibration" assert_equals: getAttribute() expected "ibration" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "VIBRATION" assert_equals: getAttribute() expected "VIBRATION" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "media" assert_equals: getAttribute() expected "media" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "xmedia" assert_equals: getAttribute() expected "xmedia" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "media\0" assert_equals: getAttribute() expected "media\0" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "edia" assert_equals: getAttribute() expected "edia" but got "MEDIA"
FAIL iframe.delegateStickyUserActivation: IDL set to "MEDIA" assert_equals: IDL get expected "media" but got "MEDIA"
PASS iframe.align: 32 tests
PASS iframe.scrolling: 32 tests
PASS iframe.frameBorder: 32 tests
PASS iframe.longDesc: 38 tests
PASS iframe.marginHeight: 32 tests
PASS iframe.marginWidth: 32 tests
PASS embed.title: 32 tests
PASS embed.lang: 32 tests
PASS embed.dir: 62 tests
PASS embed.className (<embed class>): 32 tests
PASS embed.hidden: 33 tests
PASS embed.accessKey: 32 tests
PASS embed.tabIndex: 24 tests
PASS embed.src: 38 tests
PASS embed.type: 32 tests
PASS embed.width: 32 tests
PASS embed.height: 32 tests
PASS embed.align: 32 tests
PASS embed.name: 32 tests
PASS object.title: 32 tests
PASS object.lang: 32 tests
PASS object.dir: 62 tests
PASS object.className (<object class>): 32 tests
PASS object.hidden: 33 tests
PASS object.accessKey: 32 tests
PASS object.tabIndex: 24 tests
PASS object.data: 38 tests
PASS object.type: 32 tests
FAIL object.typeMustMatch: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL object.typeMustMatch: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to "" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to " foo " assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to undefined assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to null assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to 7 assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to 1.5 assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to true assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to false assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to object "[object Object]" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to NaN assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to Infinity assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to -Infinity assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to "\0" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to object "test-toString" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to object "test-valueOf" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: setAttribute() to "typeMustMatch" assert_equals: IDL get expected (boolean) true but got (undefined) undefined
FAIL object.typeMustMatch: IDL set to "" assert_equals: hasAttribute() expected false but got true
FAIL object.typeMustMatch: IDL set to " foo " assert_equals: IDL get expected (boolean) true but got (string) " foo "
FAIL object.typeMustMatch: IDL set to undefined assert_equals: hasAttribute() expected false but got true
FAIL object.typeMustMatch: IDL set to null assert_equals: hasAttribute() expected false but got true
FAIL object.typeMustMatch: IDL set to 7 assert_equals: IDL get expected (boolean) true but got (number) 7
FAIL object.typeMustMatch: IDL set to 1.5 assert_equals: IDL get expected (boolean) true but got (number) 1.5
PASS object.typeMustMatch: IDL set to true
FAIL object.typeMustMatch: IDL set to false assert_equals: hasAttribute() expected false but got true
FAIL object.typeMustMatch: IDL set to object "[object Object]" assert_equals: IDL get expected (boolean) true but got (object) object "[object Object]"
FAIL object.typeMustMatch: IDL set to NaN assert_equals: hasAttribute() expected false but got true
FAIL object.typeMustMatch: IDL set to Infinity assert_equals: IDL get expected (boolean) true but got (number) Infinity
FAIL object.typeMustMatch: IDL set to -Infinity assert_equals: IDL get expected (boolean) true but got (number) -Infinity
FAIL object.typeMustMatch: IDL set to "\0" assert_equals: IDL get expected (boolean) true but got (string) "\0"
FAIL object.typeMustMatch: IDL set to object "test-toString" assert_equals: IDL get expected (boolean) true but got (object) object "test-toString"
FAIL object.typeMustMatch: IDL set to object "test-valueOf" assert_equals: IDL get expected (boolean) true but got (object) object "test-valueOf"
PASS object.name: 32 tests
PASS object.useMap: 32 tests
PASS object.width: 32 tests
PASS object.height: 32 tests
PASS object.align: 32 tests
PASS object.archive: 32 tests
PASS object.code: 32 tests
PASS object.declare: 33 tests
PASS object.hspace: 62 tests
PASS object.standby: 32 tests
PASS object.vspace: 62 tests
PASS object.codeBase: 38 tests
PASS object.codeType: 32 tests
PASS object.border: 32 tests
PASS param.title: 32 tests
PASS param.lang: 32 tests
PASS param.dir: 62 tests
PASS param.className (<param class>): 32 tests
PASS param.hidden: 33 tests
PASS param.accessKey: 32 tests
PASS param.tabIndex: 24 tests
PASS param.name: 32 tests
PASS param.value: 32 tests
PASS param.type: 32 tests
PASS param.valueType: 32 tests
PASS video.title: 32 tests
PASS video.lang: 32 tests
PASS video.dir: 62 tests
PASS video.className (<video class>): 32 tests
PASS video.hidden: 33 tests
PASS video.accessKey: 32 tests
PASS video.tabIndex: 24 tests
PASS video.src: 38 tests
PASS video.crossOrigin: 52 tests
PASS video.preload: 37 tests
PASS video.autoplay: 33 tests
PASS video.loop: 33 tests
PASS video.controls: 33 tests
PASS video.defaultMuted (<video muted>): 33 tests
PASS video.width: 62 tests
PASS video.height: 62 tests
PASS video.poster: 38 tests
PASS audio.title: 32 tests
PASS audio.lang: 32 tests
PASS audio.dir: 62 tests
PASS audio.className (<audio class>): 32 tests
PASS audio.hidden: 33 tests
PASS audio.accessKey: 32 tests
PASS audio.tabIndex: 24 tests
PASS audio.src: 38 tests
PASS audio.crossOrigin: 52 tests
PASS audio.preload: 37 tests
PASS audio.autoplay: 33 tests
PASS audio.loop: 33 tests
PASS audio.controls: 33 tests
PASS audio.defaultMuted (<audio muted>): 33 tests
PASS source.title: 32 tests
PASS source.lang: 32 tests
PASS source.dir: 62 tests
PASS source.className (<source class>): 32 tests
PASS source.hidden: 33 tests
PASS source.accessKey: 32 tests
PASS source.tabIndex: 24 tests
PASS source.src: 38 tests
PASS source.type: 32 tests
PASS source.srcset: 32 tests
PASS source.sizes: 32 tests
PASS source.media: 32 tests
PASS track.title: 32 tests
PASS track.lang: 32 tests
PASS track.dir: 62 tests
PASS track.className (<track class>): 32 tests
PASS track.hidden: 33 tests
PASS track.accessKey: 32 tests
PASS track.tabIndex: 24 tests
PASS track.kind: 82 tests
PASS track.src: 38 tests
PASS track.srclang: 32 tests
PASS track.label: 32 tests
PASS track.default: 33 tests
PASS canvas.title: 32 tests
PASS canvas.lang: 32 tests
PASS canvas.dir: 62 tests
PASS canvas.className (<canvas class>): 32 tests
PASS canvas.hidden: 33 tests
PASS canvas.accessKey: 32 tests
PASS canvas.tabIndex: 24 tests
PASS canvas.width: 60 tests
PASS canvas.height: 60 tests
PASS map.title: 32 tests
PASS map.lang: 32 tests
PASS map.dir: 62 tests
PASS map.className (<map class>): 32 tests
PASS map.hidden: 33 tests
PASS map.accessKey: 32 tests
PASS map.tabIndex: 24 tests
PASS map.name: 32 tests
PASS area.title: 32 tests
PASS area.lang: 32 tests
PASS area.dir: 62 tests
PASS area.className (<area class>): 32 tests
PASS area.hidden: 33 tests
PASS area.accessKey: 32 tests
PASS area.tabIndex: 24 tests
PASS area.alt: 32 tests
PASS area.coords: 32 tests
PASS area.shape: 32 tests
PASS area.target: 32 tests
PASS area.download: 32 tests
PASS area.ping: 32 tests
PASS area.rel: 32 tests
PASS area.referrerPolicy: 27 tests
FAIL area.referrerPolicy: setAttribute() to "same-origin" assert_equals: IDL get expected "same-origin" but got ""
PASS area.referrerPolicy: 3 tests
FAIL area.referrerPolicy: setAttribute() to "SAME-ORIGIN" assert_equals: IDL get expected "same-origin" but got ""
PASS area.referrerPolicy: 5 tests
FAIL area.referrerPolicy: setAttribute() to "strict-origin" assert_equals: IDL get expected "strict-origin" but got ""
PASS area.referrerPolicy: 3 tests
FAIL area.referrerPolicy: setAttribute() to "STRICT-ORIGIN" assert_equals: IDL get expected "strict-origin" but got ""
PASS area.referrerPolicy: 5 tests
FAIL area.referrerPolicy: setAttribute() to "strict-origin-when-cross-origin" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS area.referrerPolicy: 3 tests
FAIL area.referrerPolicy: setAttribute() to "STRICT-ORIGIN-WHEN-CROSS-ORIGIN" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS area.referrerPolicy: 30 tests
FAIL area.referrerPolicy: IDL set to "same-origin" assert_equals: IDL get expected "same-origin" but got ""
PASS area.referrerPolicy: 3 tests
FAIL area.referrerPolicy: IDL set to "SAME-ORIGIN" assert_equals: IDL get expected "same-origin" but got ""
PASS area.referrerPolicy: 5 tests
FAIL area.referrerPolicy: IDL set to "strict-origin" assert_equals: IDL get expected "strict-origin" but got ""
PASS area.referrerPolicy: 3 tests
FAIL area.referrerPolicy: IDL set to "STRICT-ORIGIN" assert_equals: IDL get expected "strict-origin" but got ""
PASS area.referrerPolicy: 5 tests
FAIL area.referrerPolicy: IDL set to "strict-origin-when-cross-origin" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS area.referrerPolicy: 3 tests
FAIL area.referrerPolicy: IDL set to "STRICT-ORIGIN-WHEN-CROSS-ORIGIN" assert_equals: IDL get expected "strict-origin-when-cross-origin" but got ""
PASS area.referrerPolicy: 5 tests
PASS area.href: 38 tests
PASS area.noHref: 33 tests
Harness: the test ran to completion.

