This is a testharness.js-based test.
FAIL Reversing an animation inverts the playback rate assert_equals: Playback rate should not have changed expected 1 but got -1
PASS Reversing an animation plays a pausing animation
PASS Reversing an animation maintains the same current time
FAIL Reversing an animation does not cause it to leave the pending state assert_true: The animation is pending before we call reverse expected true got undefined
PASS Reversing an animation does not cause it to resolve the ready promise
PASS Reversing an animation when playbackRate > 0 and currentTime > effect end should make it play from the end
PASS Reversing an animation when playbackRate > 0 and currentTime < 0 should make it play from the end
PASS Reversing an animation when playbackRate < 0 and currentTime < 0 should make it play from the start
PASS Reversing an animation when playbackRate < 0 and currentTime > effect end should make it play from the start
PASS Reversing an animation when playbackRate > 0 and currentTime < 0 and the target effect end is positive infinity should throw an exception
FAIL When reversing throws an exception, the playback rate remains unchanged assert_equals: playbackRate is unchanged expected 1 but got -1
PASS Reversing animation when playbackRate = 0 and currentTime < 0 and the target effect end is positive infinity should NOT throw an exception
PASS Reversing an animation when playbackRate < 0 and currentTime < 0 and the target effect end is positive infinity should make it play from the start
PASS Reversing when when playbackRate == 0 should preserve the current time and playback rate
FAIL Reversing an animation without an active timeline throws an InvalidStateError assert_throws: function "() => { animation.reverse(); }" did not throw
FAIL Reversing should use the negative pending playback rate promise_test: Unhandled rejection with value: object "TypeError: animation.updatePlaybackRate is not a function"
FAIL When reversing fails, it should restore any previous pending playback rate promise_test: Unhandled rejection with value: object "TypeError: animation.updatePlaybackRate is not a function"
Harness: the test ran to completion.

