This is a testharness.js-based test.
PASS Slots fallback: Basic. 
PASS Slots fallback: Slots in Slots. 
PASS Slots fallback: Fallback contents should not be used if a node is assigned. 
PASS Slots fallback: Slots in Slots: Assinged nodes should be used as fallback contents of another slot 
PASS Slots fallback: Complex case. 
PASS Slots fallback: Mutation. Append fallback contents. 
PASS Slots fallback: Mutation. Remove fallback contents. 
PASS Slots fallback: Mutation. Assign a node to a slot so that fallback contens are no longer used. 
PASS Slots fallback: Mutation. Remove an assigned node from a slot so that fallback contens will be used. 
FAIL Slots fallback: Mutation.  Remove a slot which is a fallback content of another slot. assert_array_equals: fall back contents should be empty because s1 is not in a shadow tree. lengths differ, expected 0 got 1
Harness: the test ran to completion.

