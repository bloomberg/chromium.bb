This is a testharness.js-based test.
FAIL Aborting rejects with AbortErrorpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Aborting rejects with AbortError - no-corspromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
PASS TypeError from request constructor takes priority - RequestInit's window is not null
FAIL TypeError from request constructor takes priority - Input URL is not validpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL TypeError from request constructor takes priority - Input URL has credentialspromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL TypeError from request constructor takes priority - RequestInit's mode is navigatepromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL TypeError from request constructor takes priority - RequestInit's referrer is invalidpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL TypeError from request constructor takes priority - RequestInit's method is invalidpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL TypeError from request constructor takes priority - RequestInit's method is forbiddenpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL TypeError from request constructor takes priority - RequestInit's mode is no-cors and method is not simplepromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL TypeError from request constructor takes priority - RequestInit's mode is no-cors and integrity is not emptypromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
PASS TypeError from request constructor takes priority - RequestInit's cache mode is only-if-cached and mode is not same-origin
PASS TypeError from request constructor takes priority - Request with cache mode: only-if-cached and fetch mode cors
PASS TypeError from request constructor takes priority - Request with cache mode: only-if-cached and fetch mode no-cors
FAIL TypeError from request constructor takes priority - Bad referrerPolicy init parameter valuepromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
PASS TypeError from request constructor takes priority - Bad mode init parameter value
PASS TypeError from request constructor takes priority - Bad credentials init parameter value
PASS TypeError from request constructor takes priority - Bad cache init parameter value
PASS TypeError from request constructor takes priority - Bad redirect init parameter value
FAIL Request objects have a signal propertyassert_true: Signal member is present & truthy expected true got false
FAIL Signal on request objectpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Signal on request object created from request objectpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Signal on request object created from request object, with signal on second requestpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Signal on request object created from request object, with signal on second request overriding anotherpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Signal retained after unrelated properties are overridden by fetchpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Signal removed by setting to nullpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Already aborted signal rejects immediatelypromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Request is still 'used' if signal is aborted before fetchingpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL response.arrayBuffer() rejects if already abortedpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL response.blob() rejects if already abortedpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL response.formData() rejects if already abortedpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL response.json() rejects if already abortedpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL response.text() rejects if already abortedpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Already aborted signal does not make requestpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Already aborted signal can be used for many fetchespromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Signal can be used to abort other fetches, even if another fetch succeeded before abortingpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Underlying connection is closed when aborting after receiving responsepromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Underlying connection is closed when aborting after receiving response - no-corspromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Fetch aborted & connection closed when aborted after calling response.arrayBuffer()promise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Fetch aborted & connection closed when aborted after calling response.blob()promise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Fetch aborted & connection closed when aborted after calling response.formData()promise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Fetch aborted & connection closed when aborted after calling response.json()promise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Fetch aborted & connection closed when aborted after calling response.text()promise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Stream errors once aborted. Underlying connection closed.promise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Stream errors once aborted, after reading. Underlying connection closed.promise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Stream will not error if body is empty. It's closed with an empty queue before it errors.promise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Readable stream synchronously cancels with AbortError if aborted before readingpromise_test: Unhandled rejection with value: object "ReferenceError: AbortController is not defined"
FAIL Signal state is clonedAbortController is not defined
FAIL Clone aborts with original controllerAbortController is not defined
Harness: the test ran to completion.

