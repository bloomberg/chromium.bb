This is a testharness.js-based test.
PASS RelativeOrientationSensor.quaternion return a four-element FrozenArray.
PASS RelativeOrientationSensor.populateMatrix() method works correctly.
PASS RelativeOrientationSensor: Test that 'onreading' is called and sensor reading is valid
PASS RelativeOrientationSensor: sensor reading is correct
PASS RelativeOrientationSensor: sensor timestamp is updated when time passes
PASS RelativeOrientationSensor: Test that sensor can be successfully created and its states are correct.
PASS RelativeOrientationSensor: sensor.start() returns undefined
PASS RelativeOrientationSensor: no exception is thrown when calling start() on already started sensor
PASS RelativeOrientationSensor: sensor.stop() returns undefined
PASS RelativeOrientationSensor: no exception is thrown when calling stop() on already stopped sensor
PASS RelativeOrientationSensor: Test that fresh reading is fetched on start()
PASS RelativeOrientationSensor: frequency hint works
PASS RelativeOrientationSensor: sensor receives suspend / resume notifications when  cross-origin subframe is focused
FAIL RelativeOrientationSensor: throw 'TypeError' if frequency is invalid assert_throws: when freq is undefined function "() => { new sensorType({frequency: freq}) }" did not throw
PASS RelativeOrientationSensor: sensor reading is correct when options.referenceFrame is 'screen'
PASS RelativeOrientationSensor: throw 'TypeError' if referenceFrame is not one of enumeration values
Harness: the test ran to completion.

