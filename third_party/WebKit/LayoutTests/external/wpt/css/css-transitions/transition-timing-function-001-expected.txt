This is a testharness.js-based test.
PASS parse 'ease'
PASS parse 'linear'
PASS parse 'ease-in'
PASS parse 'ease-out'
PASS parse 'ease-in-out'
FAIL parse 'step-start' assert_equals: Expected computed value expected "steps(1, start)" but got "step-start"
FAIL parse 'step-end' assert_equals: Expected computed value expected "steps(1)" but got "step-end"
PASS parse 'cubic-bezier(0.1, 0.2, 0.3, 0.4)'
PASS parse 'cubic-bezier(0.1, -0.2, 0.3, -0.4)'
PASS parse 'cubic-bezier(0.1, 1.2, 0.3, 1.4)'
PASS parse 'steps(3, start)'
FAIL parse 'steps(3, end)' assert_equals: Expected computed value expected "steps(3)" but got "steps(3, end)"
FAIL parse 'steps(3)' assert_equals: Expected computed value expected "steps(3)" but got "steps(3, end)"
FAIL parse 'steps(3, jump-start)' assert_equals: Expected computed value expected "steps(3, jump-start)" but got "ease"
FAIL parse 'steps(3, jump-end)' assert_equals: Expected computed value expected "steps(3)" but got "ease"
FAIL parse 'steps(3, jump-both)' assert_equals: Expected computed value expected "steps(3, jump-both)" but got "ease"
FAIL parse 'steps(3, jump-none)' assert_equals: Expected computed value expected "steps(3, jump-none)" but got "ease"
PASS parse 'cubic-bezier(foobar)'
PASS parse 'steps(foobar)'
PASS parse 'steps(3.3, end)'
PASS parse 'steps(3, top)'
PASS parse 'steps(-3, top)'
PASS parse 'steps(0, jump-start)'
PASS parse 'steps(0, jump-end)'
PASS parse 'steps(0, jump-both)'
PASS parse 'steps(1, jump-none)'
PASS parse 'cubic-bezier(-0.1, -0.2, -0.3, -0.4)'
PASS parse 'cubic-bezier(1.1, 1.2, 1.3, 1.4)'
Harness: the test ran to completion.

