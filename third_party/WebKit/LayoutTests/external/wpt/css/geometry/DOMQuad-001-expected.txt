This is a testharness.js-based test.
PASS testConstructor0: points
PASS testConstructor0: bounds
PASS testConstructor1
PASS testConstructor2
PASS testConstructor3
PASS testConstructor4
FAIL testConstructor5: points assert_equals: Expected value for p2.x is 110 expected 110 but got 0
FAIL testConstructor5: bounds assert_equals: Expected value for getBounds().x is 10 expected 10 but got 0
FAIL testConstructor6: points assert_equals: Expected value for p2.x is -90 expected -90 but got 0
FAIL testConstructor6: bounds assert_equals: Expected value for getBounds().x is -90 expected -90 but got 0
FAIL testConstructor7: points assert_equals: Expected value for p2.x is NaN expected NaN but got 0
FAIL testConstructor7: bounds assert_equals: Expected value for getBounds().width is NaN expected NaN but got Infinity
PASS testConstructor8: points
PASS testConstructor8: bounds
PASS testConstructor9: points
PASS testConstructor9: bounds
PASS testConstructor10: points
PASS testConstructor10: bounds
PASS testConstructor11: points
PASS testConstructor11: bounds
PASS testConstructor12: points
PASS testConstructor12: bounds
PASS testConstructor13: points
PASS testConstructor13: bounds
PASS testConstructor14: points
PASS testConstructor14: bounds
PASS testConstructor15
PASS testConstructor16: points
PASS testConstructor16: bounds
PASS p1Top4Attributes0: points
PASS p1Top4Attributes0: bounds
PASS p1Top4Attributes1: points
FAIL p1Top4Attributes1: bounds assert_equals: Expected value for getBounds().x is 2 expected 2 but got 0
PASS boundsAttribute0: points
PASS boundsAttribute0: bounds
Harness: the test ran to completion.

