This is a testharness.js-based test.
FAIL a TextEncoderStream object should be associated with the realm the constructor came from promise_test: Unhandled rejection with value: object "TypeError: Cannot read property 'constructor' of undefined"
FAIL TextEncoderStream's readable and writable attributes should come from the same realm as the constructor definition promise_test: Unhandled rejection with value: object "TypeError: Cannot read property 'prototype' of undefined"
FAIL the output chunks when read is called after write should come from the same realm as the constructor of TextEncoderStream promise_test: Unhandled rejection with value: object "TypeError: Cannot read property 'constructor' of undefined"
FAIL the output chunks when write is called with a pending read should come from the same realm as the constructor of TextEncoderStream promise_test: Unhandled rejection with value: object "TypeError: Cannot read property 'constructor' of undefined"
FAIL TypeError for unconvertable chunk should come from constructor realm of TextEncoderStream assert_false: write should fail expected false got true
FAIL a TextDecoderStream object should be associated with the realm the constructor came from promise_test: Unhandled rejection with value: object "TypeError: Cannot read property 'constructor' of undefined"
FAIL TextDecoderStream's readable and writable attributes should come from the same realm as the constructor definition promise_test: Unhandled rejection with value: object "TypeError: Cannot read property 'prototype' of undefined"
FAIL the result object when read is called after write should come from the same realm as the constructor of TextDecoderStream promise_test: Unhandled rejection with value: object "TypeError: Cannot read property 'constructor' of undefined"
FAIL the result object when write is called with a pending read should come from the same realm as the constructor of TextDecoderStream promise_test: Unhandled rejection with value: object "TypeError: Cannot read property 'constructor' of undefined"
FAIL TypeError for chunk with the wrong type should come from constructor realm of TextDecoderStream assert_false: write should fail expected false got true
FAIL TypeError for invalid chunk should come from constructor realm of TextDecoderStream assert_false: write should fail expected false got true
FAIL TypeError for incomplete input should come from constructor realm of TextDecoderStream assert_false: close should fail expected false got true
Harness: the test ran to completion.

