This is a testharness.js-based test.
FAIL createOffer() with no argument from newly created RTCPeerConnection should succeed assert_false: Expect offer to not be instance of RTCSessionDescription expected false got true
FAIL createOffer() and then setLocalDescription() should succeed assert_not_equals: Expect session description to be defined got disallowed value undefined
PASS createOffer() after connection is closed should reject with InvalidStateError
FAIL When media stream is added when createOffer() is running in parallel, the result offer should contain the new media stream pc.addTransceiver is not a function
FAIL createOffer() with offerToReceiveAudio should add audio line to all subsequent created offers assert_equals: Expect audio line to remain in created offer expected 1 but got 0
FAIL createOffer() with offerToReceiveVideo should add video line to all subsequent created offers assert_equals: Expect video line to remain in created offer expected 1 but got 0
FAIL createOffer() with offerToReceiveAudio:true then offerToReceiveVideo:true should have result offer with both audio and video line assert_equals: Expect audio line to remain in created offer expected 1 but got 0
PASS Test onsignalingstatechange event for createOffer() and then setLocalDescription() should succeed
Harness: the test ran to completion.

