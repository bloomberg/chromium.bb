This is a testharness.js-based test.
Found 59 tests; 48 PASS, 11 FAIL, 0 TIMEOUT, 0 NOTRUN.
PASS RTCPeerConnection.length 
PASS new RTCPeerConnection() 
PASS new RTCPeerConnection(null) 
PASS new RTCPeerConnection(undefined) 
PASS new RTCPeerConnection({}) 
PASS new RTCPeerConnection({ iceServers: null }) 
PASS new RTCPeerConnection({ iceServers: undefined }) 
PASS new RTCPeerConnection({ iceServers: [] }) 
PASS new RTCPeerConnection({ iceServers: [{}] }) 
PASS new RTCPeerConnection({ iceServers: [null] }) 
PASS new RTCPeerConnection({ iceServers: [undefined] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "stun:stun1.example.net" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: [] }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: ["stun:stun1.example.net"] }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: ["stun:stun1.example.net", "stun:stun2.example.net"] }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "turns:turn.example.org", username: "user", credential: "cred" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "turn:turn.example.net", username: "user", credential: "cred" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "turns:turn.example.org", username: "", credential: "" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "turn:turn.example.net", username: "", credential: "" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: ["turns:turn.example.org", "turn:turn.example.net"], username: "user", credential: "cred" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "stun:stun1.example.net", credentialType: "password" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "stun:stun1.example.net", credentialType: "token" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "turn:turn.example.net" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "turn:turn.example.net", username: "user" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "turn:turn.example.net", credential: "cred" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "turns:turn.example.org" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "turns:turn.example.org", username: "user" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "turns:turn.example.org", credential: "cred" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: "relative-url" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: ["stun:stun1.example.net", "relative-url"] }] }) 
FAIL new RTCPeerConnection({ iceServers: [{ urls: "http://example.com" }] }) assert_throws: function "function () {
        eval(expr);
      }" threw object "SyntaxError: Failed to construct 'RTCPeerConnection': 'http' is not one of the supported URL schemes 'stun', 'turn' or 'turns'." that is not a DOMException NotSupportedError: property "code" is equal to 12, expected 9
FAIL new RTCPeerConnection({ iceServers: [{ urls: ["stun:stun1.example.net", "http://example.com"] }] }) assert_throws: function "function () {
        eval(expr);
      }" threw object "SyntaxError: Failed to construct 'RTCPeerConnection': 'http' is not one of the supported URL schemes 'stun', 'turn' or 'turns'." that is not a DOMException NotSupportedError: property "code" is equal to 12, expected 9
PASS new RTCPeerConnection({ iceServers: [{ urls: [], credentialType: "password" }] }) 
PASS new RTCPeerConnection({ iceServers: [{ urls: [], credentialType: "token" }] }) 
FAIL new RTCPeerConnection({ iceServers: [{ urls: [], credentialType: "invalid" }] }) assert_throws: function "function () {
        eval(expr);
      }" did not throw
FAIL new RTCPeerConnection({ iceServers: [{ url: "stun:stun1.example.net" }] }) assert_throws: function "function () {
        eval(expr);
      }" did not throw
PASS new RTCPeerConnection({ rtcpMuxPolicy: null }) 
PASS new RTCPeerConnection({ rtcpMuxPolicy: undefined }) 
PASS new RTCPeerConnection({ rtcpMuxPolicy: "negotiate" }) 
PASS new RTCPeerConnection({ rtcpMuxPolicy: "require" }) 
PASS new RTCPeerConnection({ rtcpMuxPolicy: "invalid" }) 
FAIL new RTCPeerConnection({ peerIdentity: toStringThrows }) assert_throws: function "function () {
        eval(expr);
      }" did not throw
PASS new RTCPeerConnection({ certificates: null }) 
PASS new RTCPeerConnection({ certificates: undefined }) 
PASS new RTCPeerConnection({ certificates: [] }) 
PASS new RTCPeerConnection({ certificates: [null] }) 
PASS new RTCPeerConnection({ certificates: [undefined] }) 
PASS new RTCPeerConnection({ iceCandidatePoolSize: toNumberThrows }) 
PASS localDescription initial value 
FAIL currentLocalDescription initial value assert_equals: expected (object) null but got (undefined) undefined
FAIL pendingLocalDescription initial value assert_equals: expected (object) null but got (undefined) undefined
PASS remoteDescription initial value 
FAIL currentRemoteDescription initial value assert_equals: expected (object) null but got (undefined) undefined
FAIL pendingRemoteDescription initial value assert_equals: expected (object) null but got (undefined) undefined
PASS signalingState initial value 
PASS iceGatheringState initial value 
PASS iceConnectionState initial value 
FAIL connectionState initial value assert_equals: expected (string) "new" but got (undefined) undefined
FAIL canTrickleIceCandidates initial value assert_equals: expected (object) null but got (undefined) undefined
Harness: the test ran to completion.

