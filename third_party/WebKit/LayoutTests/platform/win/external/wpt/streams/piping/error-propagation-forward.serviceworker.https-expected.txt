This is a testharness.js-based test.
PASS Service worker test setup
PASS Errors must be propagated forward: starts errored; preventAbort = false; fulfilled abort promise
PASS Errors must be propagated forward: starts errored; preventAbort = false; rejected abort promise
PASS Errors must be propagated forward: starts errored; preventAbort = undefined (falsy); fulfilled abort promise
PASS Errors must be propagated forward: starts errored; preventAbort = null (falsy); fulfilled abort promise
PASS Errors must be propagated forward: starts errored; preventAbort = false (falsy); fulfilled abort promise
PASS Errors must be propagated forward: starts errored; preventAbort = 0 (falsy); fulfilled abort promise
PASS Errors must be propagated forward: starts errored; preventAbort = -0 (falsy); fulfilled abort promise
PASS Errors must be propagated forward: starts errored; preventAbort = NaN (falsy); fulfilled abort promise
PASS Errors must be propagated forward: starts errored; preventAbort =  (falsy); fulfilled abort promise
PASS Errors must be propagated forward: starts errored; preventAbort = true (truthy)
PASS Errors must be propagated forward: starts errored; preventAbort = a (truthy)
PASS Errors must be propagated forward: starts errored; preventAbort = 1 (truthy)
PASS Errors must be propagated forward: starts errored; preventAbort = Symbol() (truthy)
PASS Errors must be propagated forward: starts errored; preventAbort = [object Object] (truthy)
PASS Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true
PASS Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true, preventClose = true
PASS Errors must be propagated forward: becomes errored while empty; preventAbort = false; fulfilled abort promise
PASS Errors must be propagated forward: becomes errored while empty; preventAbort = false; rejected abort promise
PASS Errors must be propagated forward: becomes errored while empty; preventAbort = true
PASS Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; fulfilled abort promise
PASS Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; rejected abort promise
PASS Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = true
PASS Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; fulfilled abort promise
PASS Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; rejected abort promise
PASS Errors must be propagated forward: becomes errored after one chunk; preventAbort = true
PASS Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; fulfilled abort promise
PASS Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; rejected abort promise
PASS Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = true
PASS Errors must be propagated forward: shutdown must not occur until the final write completes
FAIL Errors must be propagated forward: abort should not happen until all queued writes complete assert_array_equals: abort should not be called before the second write completes property 2, expected "write" but got "abort"
Harness: the test ran to completion.

