// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

import "mojo/public/mojom/base/string16.mojom";
import "third_party/WebKit/public/platform/modules/notifications/notification.mojom";
import "third_party/WebKit/public/platform/modules/permissions/permission_status.mojom";

// Interface for receiving events relating to non-persistent notifications.
interface NonPersistentNotificationListener {
  // Called when the notification has been shown.
  OnShow();

  // Called when the notification was clicked upon.
  OnClick();

  // Called when the notification was closed; either programatically, or by the
  // developer calling Notification.close().
  OnClose();
};

// Service through which Blink can request notifications to be shown, closed or
// retrieved from the embedder.
interface NotificationService {
  // Synchronously retrieves the permission status for the origin associated
  // with the interface connection. Required to be synchronous due to the
  // Notification.permission JavaScript getter.
  [Sync] GetPermissionStatus() => (PermissionStatus status);

  // Shows a notification that is not associated with a service worker.
  // Notifies |event_listener| when the notification is shown/clicked/closed.
  // Calling this again with the same |token| from the same origin will cause
  // the original notification to be replaced with the new data and resources.
  // |token| must be non-empty, and the same token should be passed to
  // CloseNonPersistentNotification to close this notification programmatically.
  DisplayNonPersistentNotification(
        string token,
        NotificationData notification_data,
        NotificationResources notification_resources,
        NonPersistentNotificationListener event_listener);

  // Closes a notification that is not associated with a service worker.
  // |token| identifies which notification should be closed (must be non-empty).
  // Calling this without previously calling DisplayNonPersistentNotification
  // with the same token is a no-op.
  CloseNonPersistentNotification(string token);
};
