// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

import "third_party/WebKit/common/service_worker/service_worker_error_type.mojom";
import "third_party/WebKit/common/service_worker/service_worker_client.mojom";
import "url/mojo/url.mojom";

// Host for a running service worker execution context. Implemented in the
// browser process. The service worker running in the renderer process uses this
// interface to ask the browser process to do operations needed for
// ServiceWorkerGlobalScope functionalities.
interface ServiceWorkerHost {
  // Sets V8 code cache |data| for the given service worker script |url|, which
  // may be the main script or an imported script.
  SetCachedMetadata(url.mojom.Url url, array<uint8> data);

  // Clears V8 code cache for |url| set by the above |SetCachedMetadata| before.
  ClearCachedMetadata(url.mojom.Url url);

  // Corresponds to Clients#matchAll(options). Gets information of all service
  // worker clients matching |options|.
  GetClients(ServiceWorkerClientQueryOptions options)
    => (array<ServiceWorkerClientInfo> clients);

  // TODO(leonhsl): Impl all methods.
  // GetClient();
  // OpenNewTab();
  // OpenNewPopup();
  // PostMessageToClient();
  // FocusClient();
  // NavigateClient();
  // SkipWaiting();

  // Corresponds to Clients#claim(). Allows an active service worker to set
  // itself as the controller for all clients within its scope.
  // On success, |error| is kNone without |error_msg| set.
  // Otherwise, |error| and |error_msg| describe the failure.
  ClaimClients() => (ServiceWorkerErrorType error, string? error_msg);
};
