Verifies JavaScript pretty-printing functionality.


Running: emptyClass
====== 8< ------
class Test {
}

------ >8 ======
Correct mapping for <Test>
Correct mapping for <class>

Running: emptyConstructor
====== 8< ------
class Test {
    constructor() {}
}

------ >8 ======
Correct mapping for <Test>
Correct mapping for <class>
Correct mapping for <constructor>

Running: simpleClass
====== 8< ------
class Test {
    constructor() {
        this.bar = 10;
    }
    givemebar() {
        return this.bar;
    }
}

------ >8 ======
Correct mapping for <Test>
Correct mapping for <class>
Correct mapping for <constructor>

Running: extendedClass
====== 8< ------
class Foo extends Bar {
    constructor(name) {
        super(name);
    }
    getName() {
        return super.getName();
    }
}

------ >8 ======
Correct mapping for <Foo>
Correct mapping for <Bar>
Correct mapping for <extends>
Correct mapping for <super>
Correct mapping for <name>

Running: twoConsecutiveClasses
====== 8< ------
class A {
}
class B extends A {
    constructor() {
        super();
    }
}

------ >8 ======
Correct mapping for <B>
Correct mapping for <extends>
Correct mapping for <constructor>
Correct mapping for <super>

Running: staticMethod
====== 8< ------
class Employer {
    static count() {
        this._counter = (this._counter || 0) + 1;
        return this._counter;
    }
}

------ >8 ======
Correct mapping for <Employer>
Correct mapping for <static>
Correct mapping for <1>
Correct mapping for <return>

Running: classExpression
====== 8< ------
new (class {
    constructor() {
        debugger
    }
}
)

------ >8 ======
Correct mapping for <new>
Correct mapping for <class>
Correct mapping for <constructor>
Correct mapping for <debugger>

