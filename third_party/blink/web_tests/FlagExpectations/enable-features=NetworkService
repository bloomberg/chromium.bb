# These tests currently fail when run with --enable-features=NetworkService
# See https://crbug.com/729849

# Only passes with Network Servce enabled (unfortunately these expectations still
# allow Failure or Timeout from the top-level expectations though).
crbug.com/800898 external/wpt/FileAPI/url/url-in-tags-revoke.window.html [ Pass ]
crbug.com/800898 external/wpt/workers/shared-worker-from-blob-url.window.html [ Pass ]
crbug.com/595993 external/wpt/service-workers/service-worker/request-end-to-end.https.html [ Pass ]
crbug.com/862886 external/wpt/service-workers/service-worker/navigation-preload/broken-chunked-encoding.https.html [ Pass ]
crbug.com/896924 http/tests/inspector-protocol/network/interception-multiclient.js [ Pass ]
crbug.com/899303 http/tests/inspector-protocol/fetch/fetch-basic.js [ Pass ]
crbug.com/899303 http/tests/inspector-protocol/fetch/fetch-renderer.js [ Pass ]
crbug.com/917284 external/wpt/service-workers/service-worker/claim-fetch-with-appcache.https.html [ Pass ]

# This passes in content_shell but not in chrome with network service disabled,
# because content_shell does not add the about: handler. With network service
# enabled this fails in both content_shell and chrome.
Bug(none) http/tests/misc/redirect-to-about-blank.html [ Timeout ]

# Skip virtual/outofblink-cors when NetworkService is on, since it's only
# intended to be run with NetworkService off.
Bug(none) virtual/outofblink-cors [ Skip ]

# Skip virtual/outofblink-cors-ns on this bot, since when run normally it
# already forces NetworkService on, so there is no need to run it again here.
Bug(none) virtual/outofblink-cors-ns [ Skip ]

# NetworkService needs S13nServiceWorker. Running these test with
# NetworkService doesn't make sense.
Bug(none) virtual/disabled-service-worker-servicification [ Skip ]

# DO NOT ADD ANY ENTRIES! Network service is about to ship to stable.
# Please reach out to network-service-dev@ if you have any questions.
