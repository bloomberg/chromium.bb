This is a testharness.js-based test.
PASS setRemoteDescription(rollback) in have-remote-offer state should revert to stable state
PASS setRemoteDescription(rollback) from stable state should reject with InvalidStateError
PASS setRemoteDescription(rollback) should ignore invalid sdp content and succeed
PASS local offer created before setRemoteDescription(remote offer) then rollback should still be usable
PASS local offer created before setRemoteDescription(remote offer) with different transceiver level assignments then rollback should still be usable
PASS rollback of a remote offer should remove a transceiver
FAIL rollback of a remote offer should remove touched transceiver assert_equals: expected 0 but got 1
PASS rollback of a remote offer should keep a transceiver
FAIL rollback of a remote offer should keep a transceiver without tracks assert_equals: expected 1 but got 0
PASS rollback local offer explicitly
PASS implicit rollback of a local offer should visit stable state and fire negotiationneeded
PASS rollback of a remote offer to negotiated stable state should enable applying of a local offer
PASS rollback of a local offer to negotiated stable state should enable applying of a remote offer
PASS rollback a local offer with audio direction change to negotiated stable state and then add video receiver
PASS two transceivers with same mids
PASS onremovetrack fires during remote rollback
FAIL rollback of a remote offer with stream changes assert_equals: expected 1 but got 0
Harness: the test ran to completion.

