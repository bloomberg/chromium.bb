This is a testharness.js-based test.
FAIL respondWithMinimalUI(0) causes hasEnrolledInstrument() to return "false" promise_test: Unhandled rejection with value: object "NotAllowedError: Not allowed to install this payment handler"
FAIL respondWithMinimalUI({}) causes hasEnrolledInstrument() to return "false" promise_test: Unhandled rejection with value: object "NotAllowedError: Not allowed to install this payment handler"
FAIL respondWithMinimalUI({canMakePayment: true}) causes hasEnrolledInstrument() to return "true" promise_test: Unhandled rejection with value: object "NotAllowedError: Not allowed to install this payment handler"
FAIL respondWithMinimalUI({canMakePayment: false}) causes hasEnrolledInstrument() to return "false" promise_test: Unhandled rejection with value: object "NotAllowedError: Not allowed to install this payment handler"
FAIL respondWithMinimalUI({canMakePayment: true, readyForMinimalUI: true}) does not crash promise_test: Unhandled rejection with value: object "NotAllowedError: Not allowed to install this payment handler"
FAIL respondWithMinimalUI({canMakePayment: true, readyForMinimalUI: true, accountBalance: ""}) does not crash promise_test: Unhandled rejection with value: object "NotAllowedError: Not allowed to install this payment handler"
FAIL respondWithMinimalUI({canMakePayment: true, readyForMinimalUI: true, accountBalance: "--"}) does not crash promise_test: Unhandled rejection with value: object "NotAllowedError: Not allowed to install this payment handler"
FAIL respondWithMinimalUI({canMakePayment: true, readyForMinimalUI: true, accountBalance: "6.78"}) does not crash promise_test: Unhandled rejection with value: object "NotAllowedError: Not allowed to install this payment handler"
Harness: the test ran to completion.

