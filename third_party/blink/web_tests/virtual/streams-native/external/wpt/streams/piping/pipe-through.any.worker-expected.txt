This is a testharness.js-based test.
FAIL Piping through a duck-typed pass-through transform stream should work Failed to execute 'pipeThrough' on 'ReadableStream': pipeThrough disabled because StreamsNative feature is enabled
FAIL Piping through a transform errored on the writable end does not cause an unhandled promise rejection Failed to execute 'pipeThrough' on 'ReadableStream': pipeThrough disabled because StreamsNative feature is enabled
FAIL pipeThrough should not call pipeTo on this Failed to execute 'pipeThrough' on 'ReadableStream': pipeThrough disabled because StreamsNative feature is enabled
FAIL pipeThrough should not call pipeTo on the ReadableStream prototype Failed to execute 'pipeThrough' on 'ReadableStream': pipeThrough disabled because StreamsNative feature is enabled
PASS pipeThrough should brand-check this and not allow 'null'
PASS pipeThrough should brand-check readable and not allow 'null'
PASS pipeThrough should brand-check this and not allow 'undefined'
PASS pipeThrough should brand-check readable and not allow 'undefined'
PASS pipeThrough should brand-check this and not allow '0'
PASS pipeThrough should brand-check readable and not allow '0'
PASS pipeThrough should brand-check this and not allow 'NaN'
PASS pipeThrough should brand-check readable and not allow 'NaN'
PASS pipeThrough should brand-check this and not allow 'true'
PASS pipeThrough should brand-check readable and not allow 'true'
PASS pipeThrough should brand-check this and not allow 'ReadableStream'
PASS pipeThrough should brand-check readable and not allow 'ReadableStream'
PASS pipeThrough should brand-check this and not allow '[object ReadableStream]'
PASS pipeThrough should brand-check readable and not allow '[object ReadableStream]'
PASS pipeThrough should brand-check writable and not allow 'null'
PASS pipeThrough should brand-check writable and not allow 'undefined'
PASS pipeThrough should brand-check writable and not allow '0'
PASS pipeThrough should brand-check writable and not allow 'NaN'
PASS pipeThrough should brand-check writable and not allow 'true'
PASS pipeThrough should brand-check writable and not allow 'WritableStream'
PASS pipeThrough should brand-check writable and not allow '[object WritableStream]'
PASS pipeThrough should rethrow errors from accessing readable or writable
PASS invalid values of signal should throw; specifically 'null'
PASS invalid values of signal should throw; specifically '0'
PASS invalid values of signal should throw; specifically 'NaN'
PASS invalid values of signal should throw; specifically 'true'
PASS invalid values of signal should throw; specifically 'AbortSignal'
PASS invalid values of signal should throw; specifically '[object AbortSignal]'
FAIL pipeThrough should accept a real AbortSignal Failed to execute 'pipeThrough' on 'ReadableStream': pipeThrough disabled because StreamsNative feature is enabled
PASS pipeThrough should throw if this is locked
PASS pipeThrough should throw if writable is locked
FAIL pipeThrough should not care if readable is locked Failed to execute 'pipeThrough' on 'ReadableStream': pipeThrough disabled because StreamsNative feature is enabled
FAIL preventCancel should work Failed to execute 'pipeThrough' on 'ReadableStream': pipeThrough disabled because StreamsNative feature is enabled
FAIL preventClose should work Failed to execute 'pipeThrough' on 'ReadableStream': pipeThrough disabled because StreamsNative feature is enabled
FAIL preventAbort should work Failed to execute 'pipeThrough' on 'ReadableStream': pipeThrough disabled because StreamsNative feature is enabled
Harness: the test ran to completion.

