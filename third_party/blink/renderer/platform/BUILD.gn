# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/buildflag_header.gni")
import("//build/compiled_action.gni")
import("//build/config/features.gni")
import("//build/config/jumbo.gni")
import("//build/config/ui.gni")
import("//testing/libfuzzer/fuzzer_test.gni")
import("//testing/test.gni")
import("//third_party/blink/public/public_features.gni")
import("//third_party/blink/renderer/build/scripts/scripts.gni")
import("//third_party/blink/renderer/config.gni")
import("//third_party/blink/renderer/platform/platform_generated.gni")

# Most targets in this file are private actions so use that as the default.
visibility = [ ":*" ]

blink_platform_avx_files = [
  "audio/cpu/x86/vector_math_avx.cc",
  "audio/cpu/x86/vector_math_avx.h",
]

blink_platform_neon_files = [
  "audio/cpu/arm/vector_math_neon.h",
  "graphics/cpu/arm/webgl_image_conversion_neon.h",
]

blink_platform_msa_files = [
  "audio/cpu/mips/vector_math_msa.h",
  "graphics/cpu/mips/webgl_image_conversion_msa.h",
]

blink_platform_sse_files = [
  "audio/cpu/x86/vector_math_sse.h",
  "graphics/cpu/x86/webgl_image_conversion_sse.h",
]

make_names("font_family_names") {
  in_files = [ "fonts/font_family_names.json5" ]
  output_dir = blink_platform_output_dir
}

action("runtime_enabled_features") {
  script = "../build/scripts/make_runtime_features.py"

  runtime_enabled_features_json5 = "runtime_enabled_features.json5"
  inputs = scripts_for_json5_files + [
             runtime_enabled_features_json5,
             "../build/scripts/templates/runtime_enabled_features.cc.tmpl",
             "../build/scripts/templates/runtime_enabled_features.h.tmpl",
             "../build/scripts/templates/runtime_enabled_features_test_helpers.h.tmpl",
           ]

  outputs = [
    "$blink_platform_output_dir/runtime_enabled_features.cc",
    "$blink_platform_output_dir/runtime_enabled_features.h",
    "$blink_platform_output_dir/testing/runtime_enabled_features_test_helpers.h",
  ]

  args = [
    rebase_path(runtime_enabled_features_json5, root_build_dir),
    "--output_dir",
    rebase_path(blink_platform_output_dir, root_build_dir),
  ]
}

action("color_data") {
  script = "../build/scripts/gperf.py"

  color_data_gperf = "color_data.gperf"
  inputs = [
    color_data_gperf,
  ]

  output_file = "$blink_platform_output_dir/color_data.cc"
  outputs = [
    output_file,
  ]

  args = []
  if (is_mac && !use_system_xcode) {
    args += [
      "--developer_dir",
      hermetic_xcode_path,
    ]
  }

  args += [
    gperf_exe,
    "--key-positions=*",
    "-D",
    "-s",
    "2",
    rebase_path(color_data_gperf, root_build_dir),
    "--output-file=" + rebase_path(output_file, root_build_dir),
  ]
}

compiled_action("character_data") {
  tool = ":character_data_generator"
  outputs = [
    "$blink_platform_output_dir/character_property_data.cc",
  ]
  args = rebase_path(outputs, root_build_dir)
}

action("instrumentation_probes") {
  script = "../build/scripts/make_instrumenting_probes.py"

  input_file = "probe/PlatformProbes.pidl"
  inputs = [
    input_file,
    "probe/PlatformProbes.json5",
    "../build/scripts/templates/InstrumentingProbesImpl.cpp.tmpl",
    "../build/scripts/templates/InstrumentingProbesInl.h.tmpl",
    "../build/scripts/templates/ProbeSink.h.tmpl",
  ]

  outputs = [
    "$blink_platform_output_dir/PlatformProbeSink.h",
    "$blink_platform_output_dir/PlatformProbesImpl.cpp",
    "$blink_platform_output_dir/PlatformProbesInl.h",
  ]

  args = [
    rebase_path(inputs[0], root_build_dir),
    "--config",
    rebase_path("probe/PlatformProbes.json5", root_build_dir),
    "--output_dir",
    rebase_path(blink_platform_output_dir, root_build_dir),
  ]
}

executable("character_data_generator") {
  sources = [
    "text/character_property_data_generator.cc",
    "text/character_property_data_generator.h",
  ]
  configs += [ "//third_party/blink/renderer:config" ]
  deps = [
    # Default manifest on Windows (a no-op elsewhere).
    "//build/win:default_exe_manifest",
    "//third_party/icu",
  ]
}

# This isn't strictly necessary since we can just add the deps to "platform",
# but it helps to have the targets match the GYP build.
group("make_platform_generated") {
  visibility = []  # Allow re-assignment of list.
  visibility = [ "//third_party/blink/renderer/*" ]
  public_deps = [
    ":character_data",
    ":color_data",
    ":font_family_names",
    ":instrumentation_probes",
    ":runtime_enabled_features",
    "//third_party/blink/renderer/platform/network:make_generated",
  ]
}

import("//build/config/pch.gni")

config("blink_platform_config") {
  configs = [
    "//third_party/blink/renderer:config",
    "//third_party/blink/renderer:inside_blink",

    # TODO(jschuh): crbug.com/167187 fix size_t to int truncations.
    "//build/config/compiler:no_size_t_to_int_warning",
  ]
}

# Deps and configs required to include platform headers. Applied to all
# platform constituent targets and exported to dependents.
group("blink_platform_public_deps") {
  visibility = []  # Allow re-assignment of list.
  visibility = [ "//third_party/blink/renderer/platform/*" ]
  public_deps = [
    ":make_platform_generated",
    ":rcs_count_everything_buildflags",
    "//base",
    "//cc",
    "//cc/animation",
    "//cc/paint",
    "//gpu/command_buffer/client:client",
    "//gpu/command_buffer/client:gles2_interface",
    "//gpu/command_buffer/common:common",
    "//net",
    "//services/device/public/mojom:generic_sensor_blink",
    "//services/device/public/mojom:mojom_blink",
    "//services/network/public/cpp:cpp",
    "//services/network/public/mojom",
    "//services/network/public/mojom:mojom_blink",
    "//services/resource_coordinator/public/cpp:resource_coordinator_cpp",
    "//services/resource_coordinator/public/mojom:mojom_blink",
    "//services/service_manager/public/mojom:mojom_blink",
    "//skia",
    "//third_party:jpeg",
    "//third_party/blink/public:blink_headers",
    "//third_party/blink/public:mojo_bindings_blink",
    "//third_party/blink/public/common",
    "//third_party/blink/public/mojom:mojom_platform_blink",
    "//third_party/blink/renderer/platform/heap:blink_heap_buildflags",
    "//third_party/blink/renderer/platform/network:make_generated",
    "//third_party/blink/renderer/platform/wtf",
    "//third_party/iccjpeg",
    "//third_party/libpng",
    "//third_party/libwebp",
    "//third_party/ots",
    "//url",
    "//v8",
  ]
  public_configs = [ "//third_party/blink/renderer:features" ]
}

declare_args() {
  runtime_call_stats_count_everything = false
}

buildflag_header("rcs_count_everything_buildflags") {
  header = "runtime_call_stats_count_everything_buildflags.h"

  header_dir = "third_party/blink/renderer/platform/bindings"

  flags = [ "RCS_COUNT_EVERYTHING=$runtime_call_stats_count_everything" ]
}

config("blink_platform_implementation") {
  defines = [ "BLINK_PLATFORM_IMPLEMENTATION=1" ]
}

config("blink_platform_pch") {
  if (enable_precompiled_headers) {
    if (is_win) {
      # This is a string rather than a file GN knows about. It has to match
      # exactly what's in the /FI flag below, and what might appear in the
      # source code in quotes for an #include directive.
      precompiled_header = rebase_path("precompile_platform.h", root_build_dir)

      # This is a file that GN will compile with the above header. It will be
      # implicitly added to the sources (potentially multiple times, with one
      # variant for each language used in the target).
      precompiled_source =
          "//third_party/blink/renderer/platform/win/precompile_platform.cc"

      # Force include the header.
      cflags = [ "/FI$precompiled_header" ]
    } else if (is_mac) {
      precompiled_source =
          "//third_party/blink/renderer/platform/precompile_platform.h"
    }
  }
}

source_set("platform_export") {
  sources = [
    "platform_export.h",
  ]

  visibility = []  # Allow re-assignment of list.
  visibility = [
    ":platform",
    "//mojo/public/cpp/bindings:wtf_support",
  ]
}

jumbo_component("platform") {
  visibility = []  # Allow re-assignment of list.
  visibility = [
    "//components/pdf/common:interfaces_blink",
    "//services/device/public/mojom:mojom_blink",
    "//third_party/blink/*",
    "//url/mojom:url_mojom_origin_blink",
    "//url/mojom:url_mojom_gurl_blink",
  ]
  output_name = "blink_platform"

  sources = [
    "InstanceCountersMemoryDumpProvider.cc",
    "animation/animation_translation_util.cc",
    "animation/animation_translation_util.h",
    "animation/animation_utilities.h",
    "animation/compositor_animation.cc",
    "animation/compositor_animation.h",
    "animation/compositor_animation_client.cc",
    "animation/compositor_animation_client.h",
    "animation/compositor_animation_curve.h",
    "animation/compositor_animation_delegate.h",
    "animation/compositor_animation_host.cc",
    "animation/compositor_animation_host.h",
    "animation/compositor_animation_timeline.cc",
    "animation/compositor_animation_timeline.h",
    "animation/compositor_filter_animation_curve.cc",
    "animation/compositor_filter_animation_curve.h",
    "animation/compositor_filter_keyframe.cc",
    "animation/compositor_filter_keyframe.h",
    "animation/compositor_float_animation_curve.cc",
    "animation/compositor_float_animation_curve.h",
    "animation/compositor_float_keyframe.cc",
    "animation/compositor_float_keyframe.h",
    "animation/compositor_keyframe.cc",
    "animation/compositor_keyframe.h",
    "animation/compositor_keyframe_model.cc",
    "animation/compositor_keyframe_model.h",
    "animation/compositor_scroll_offset_animation_curve.cc",
    "animation/compositor_scroll_offset_animation_curve.h",
    "animation/compositor_target_property.h",
    "animation/compositor_transform_animation_curve.cc",
    "animation/compositor_transform_animation_curve.h",
    "animation/compositor_transform_keyframe.cc",
    "animation/compositor_transform_keyframe.h",
    "animation/compositor_transform_operations.cc",
    "animation/compositor_transform_operations.h",
    "animation/timing_function.cc",
    "animation/timing_function.h",
    "async_file_system_callbacks.h",
    "async_method_runner.h",
    "audio/android/fft_frame_open_maxdl_android.cc",
    "audio/audio_array.h",
    "audio/audio_bus.cc",
    "audio/audio_bus.h",
    "audio/audio_channel.cc",
    "audio/audio_channel.h",
    "audio/audio_delay_dsp_kernel.cc",
    "audio/audio_delay_dsp_kernel.h",
    "audio/audio_destination.cc",
    "audio/audio_destination.h",
    "audio/audio_destination_consumer.h",
    "audio/audio_dsp_kernel.cc",
    "audio/audio_dsp_kernel.h",
    "audio/audio_dsp_kernel_processor.cc",
    "audio/audio_dsp_kernel_processor.h",
    "audio/audio_file_reader.h",
    "audio/audio_io_callback.h",
    "audio/audio_processor.cc",
    "audio/audio_processor.h",
    "audio/audio_resampler.cc",
    "audio/audio_resampler.h",
    "audio/audio_resampler_kernel.cc",
    "audio/audio_resampler_kernel.h",
    "audio/audio_source_provider.h",
    "audio/audio_source_provider_client.h",
    "audio/audio_utilities.cc",
    "audio/audio_utilities.h",
    "audio/biquad.cc",
    "audio/biquad.h",
    "audio/cone_effect.cc",
    "audio/cone_effect.h",
    "audio/cpu/arm/vector_math_neon.h",
    "audio/cpu/mips/vector_math_msa.h",
    "audio/cpu/x86/vector_math_avx.cc",
    "audio/cpu/x86/vector_math_avx.h",
    "audio/cpu/x86/vector_math_impl.h",
    "audio/cpu/x86/vector_math_sse.cc",
    "audio/cpu/x86/vector_math_sse.h",
    "audio/cpu/x86/vector_math_x86.h",
    "audio/denormal_disabler.h",
    "audio/direct_convolver.cc",
    "audio/direct_convolver.h",
    "audio/distance_effect.cc",
    "audio/distance_effect.h",
    "audio/down_sampler.cc",
    "audio/down_sampler.h",
    "audio/dynamics_compressor.cc",
    "audio/dynamics_compressor.h",
    "audio/dynamics_compressor_kernel.cc",
    "audio/dynamics_compressor_kernel.h",
    "audio/equal_power_panner.cc",
    "audio/equal_power_panner.h",
    "audio/ffmpeg/fft_frame_ffmpeg.cc",
    "audio/fft_convolver.cc",
    "audio/fft_convolver.h",
    "audio/fft_frame.cc",
    "audio/fft_frame.h",
    "audio/fft_frame_stub.cc",
    "audio/hrtf_database.cc",
    "audio/hrtf_database.h",
    "audio/hrtf_database_loader.cc",
    "audio/hrtf_database_loader.h",
    "audio/hrtf_elevation.cc",
    "audio/hrtf_elevation.h",
    "audio/hrtf_kernel.cc",
    "audio/hrtf_kernel.h",
    "audio/hrtf_panner.cc",
    "audio/hrtf_panner.h",
    "audio/iir_filter.cc",
    "audio/iir_filter.h",
    "audio/mac/fft_frame_mac.cc",
    "audio/mac/vector_math_mac.h",
    "audio/multi_channel_resampler.cc",
    "audio/multi_channel_resampler.h",
    "audio/panner.cc",
    "audio/panner.h",
    "audio/push_pull_fifo.cc",
    "audio/push_pull_fifo.h",
    "audio/reverb.cc",
    "audio/reverb.h",
    "audio/reverb_accumulation_buffer.cc",
    "audio/reverb_accumulation_buffer.h",
    "audio/reverb_convolver.cc",
    "audio/reverb_convolver.h",
    "audio/reverb_convolver_stage.cc",
    "audio/reverb_convolver_stage.h",
    "audio/reverb_input_buffer.cc",
    "audio/reverb_input_buffer.h",
    "audio/simple_fft_convolver.cc",
    "audio/simple_fft_convolver.h",
    "audio/sinc_resampler.cc",
    "audio/sinc_resampler.h",
    "audio/stereo_panner.cc",
    "audio/stereo_panner.h",
    "audio/up_sampler.cc",
    "audio/up_sampler.h",
    "audio/vector_math.cc",
    "audio/vector_math.h",
    "audio/vector_math_scalar.h",
    "bindings/active_script_wrappable_base.cc",
    "bindings/active_script_wrappable_base.h",
    "bindings/callback_function_base.cc",
    "bindings/callback_function_base.h",
    "bindings/callback_interface_base.cc",
    "bindings/callback_interface_base.h",
    "bindings/dom_data_store.h",
    "bindings/dom_wrapper_map.h",
    "bindings/dom_wrapper_world.cc",
    "bindings/dom_wrapper_world.h",
    "bindings/exception_code.h",
    "bindings/exception_messages.cc",
    "bindings/exception_messages.h",
    "bindings/exception_state.cc",
    "bindings/exception_state.h",
    "bindings/microtask.cc",
    "bindings/microtask.h",
    "bindings/name_client.h",
    "bindings/origin_trial_features.cc",
    "bindings/origin_trial_features.h",
    "bindings/runtime_call_stats.cc",
    "bindings/runtime_call_stats.h",
    "bindings/scoped_persistent.h",
    "bindings/script_forbidden_scope.cc",
    "bindings/script_forbidden_scope.h",
    "bindings/script_promise_properties.h",
    "bindings/script_state.cc",
    "bindings/script_state.h",
    "bindings/script_wrappable.cc",
    "bindings/script_wrappable.h",
    "bindings/script_wrappable_marking_visitor.cc",
    "bindings/script_wrappable_marking_visitor.h",
    "bindings/script_wrappable_visitor.h",
    "bindings/script_wrappable_visitor_verifier.h",
    "bindings/shared_persistent.h",
    "bindings/string_resource.cc",
    "bindings/string_resource.h",
    "bindings/to_v8.h",
    "bindings/trace_wrapper_member.h",
    "bindings/trace_wrapper_v8_reference.h",
    "bindings/trace_wrapper_v8_string.cc",
    "bindings/trace_wrapper_v8_string.h",
    "bindings/v0_custom_element_binding.cc",
    "bindings/v0_custom_element_binding.h",
    "bindings/v8_binding.cc",
    "bindings/v8_binding.h",
    "bindings/v8_binding_macros.h",
    "bindings/v8_dom_activity_logger.cc",
    "bindings/v8_dom_activity_logger.h",
    "bindings/v8_dom_wrapper.cc",
    "bindings/v8_dom_wrapper.h",
    "bindings/v8_global_value_map.h",
    "bindings/v8_object_constructor.cc",
    "bindings/v8_object_constructor.h",
    "bindings/v8_per_context_data.cc",
    "bindings/v8_per_context_data.h",
    "bindings/v8_per_isolate_data.cc",
    "bindings/v8_per_isolate_data.h",
    "bindings/v8_private_property.cc",
    "bindings/v8_private_property.h",
    "bindings/v8_throw_exception.cc",
    "bindings/v8_throw_exception.h",
    "bindings/v8_value_cache.cc",
    "bindings/v8_value_cache.h",
    "bindings/wrapper_creation_security_check.cc",
    "bindings/wrapper_creation_security_check.h",
    "bindings/wrapper_type_info.cc",
    "bindings/wrapper_type_info.h",
    "calculation_value.h",
    "content_decryption_module_result.h",
    "content_setting_callbacks.cc",
    "content_setting_callbacks.h",
    "cpu/mips/common_macros_msa.h",
    "cross_origin_attribute_value.h",
    "cross_thread_copier.cc",
    "cross_thread_copier.h",
    "cross_thread_functional.h",
    "crypto.cc",
    "crypto.h",
    "crypto_result.h",
    "cursor.cc",
    "cursor.h",
    "data_resource_helper.cc",
    "data_resource_helper.h",
    "date_components.cc",
    "date_components.h",
    "drag_image.cc",
    "drag_image.h",
    "exported/file_path_conversion.cc",
    "exported/interface_registry.cc",
    "exported/platform.cc",
    "exported/service_registry.cc",
    "exported/url_conversion.cc",
    "exported/web_audio_bus.cc",
    "exported/web_audio_device.cc",
    "exported/web_blob_info.cc",
    "exported/web_cache.cc",
    "exported/web_canonical_cookie.cc",
    "exported/web_canvas_capture_handler.cc",
    "exported/web_coalesced_input_event.cc",
    "exported/web_content_decryption_module.cc",
    "exported/web_content_decryption_module_access.cc",
    "exported/web_content_decryption_module_result.cc",
    "exported/web_content_decryption_module_session.cc",
    "exported/web_content_setting_callbacks.cc",
    "exported/web_cors.cc",
    "exported/web_crypto_algorithm.cc",
    "exported/web_crypto_key.cc",
    "exported/web_crypto_key_algorithm.cc",
    "exported/web_crypto_result.cc",
    "exported/web_cursor_info.cc",
    "exported/web_data.cc",
    "exported/web_data_consumer_handle.cc",
    "exported/web_drag_data.cc",
    "exported/web_encrypted_media_client.cc",
    "exported/web_encrypted_media_key_information.cc",
    "exported/web_encrypted_media_request.cc",
    "exported/web_file_system_callbacks.cc",
    "exported/web_font.cc",
    "exported/web_font_description.cc",
    "exported/web_http_body.cc",
    "exported/web_http_header_map.cc",
    "exported/web_http_load_info.cc",
    "exported/web_image.cc",
    "exported/web_image_generator.cc",
    "exported/web_input_event.cc",
    "exported/web_media_constraints.cc",
    "exported/web_media_player_client.cc",
    "exported/web_media_player_encrypted_media_client.cc",
    "exported/web_media_player_source.cc",
    "exported/web_media_recorder_handler.cc",
    "exported/web_media_stream.cc",
    "exported/web_media_stream_source.cc",
    "exported/web_media_stream_track.cc",
    "exported/web_memory_coordinator.cc",
    "exported/web_mixed_content.cc",
    "exported/web_network_state_notifier.cc",
    "exported/web_prerender.cc",
    "exported/web_prerendering_support.cc",
    "exported/web_rtc_answer_options.cc",
    "exported/web_rtc_offer_options.cc",
    "exported/web_rtc_peer_connection_handler_client.cc",
    "exported/web_rtc_rtp_contributing_source.cc",
    "exported/web_rtc_rtp_receiver.cc",
    "exported/web_rtc_rtp_sender.cc",
    "exported/web_rtc_rtp_transceiver.cc",
    "exported/web_rtc_session_description.cc",
    "exported/web_rtc_session_description_request.cc",
    "exported/web_rtc_stats.cc",
    "exported/web_rtc_stats_request.cc",
    "exported/web_rtc_stats_response.cc",
    "exported/web_rtc_void_request.cc",
    "exported/web_runtime_features.cc",
    "exported/web_security_origin.cc",
    "exported/web_service_worker_installed_scripts_manager.cc",
    "exported/web_service_worker_request.cc",
    "exported/web_service_worker_response.cc",
    "exported/web_service_worker_stream_handle.cc",
    "exported/web_speech_synthesis_utterance.cc",
    "exported/web_speech_synthesis_voice.cc",
    "exported/web_speech_synthesizer_client_impl.cc",
    "exported/web_speech_synthesizer_client_impl.h",
    "exported/web_string.cc",
    "exported/web_surface_layer_bridge.cc",
    "exported/web_text_run.cc",
    "exported/web_thread_safe_data.cc",
    "exported/web_url.cc",
    "exported/web_url_error.cc",
    "exported/web_url_load_timing.cc",
    "exported/web_url_loader_client.cc",
    "exported/web_url_loader_test_delegate.cc",
    "exported/web_url_request.cc",
    "exported/web_url_response.cc",
    "exported/web_video_frame_submitter.cc",
    "exported/wrapped_resource_request.h",
    "exported/wrapped_resource_response.h",
    "feature_policy/feature_policy.cc",
    "feature_policy/feature_policy.h",
    "file_metadata.cc",
    "file_metadata.h",
    "file_system_type.h",
    "fonts/alternate_font_family.h",
    "fonts/android/font_cache_android.cc",
    "fonts/bitmap_glyphs_blacklist.cc",
    "fonts/bitmap_glyphs_blacklist.h",
    "fonts/canvas_rotation_in_vertical.h",
    "fonts/character_range.h",
    "fonts/custom_font_data.h",
    "fonts/fallback_list_composite_key.h",
    "fonts/font.cc",
    "fonts/font.h",
    "fonts/font_baseline.h",
    "fonts/font_cache.cc",
    "fonts/font_cache.h",
    "fonts/font_cache_client.h",
    "fonts/font_cache_key.h",
    "fonts/font_cache_memory_dump_provider.cc",
    "fonts/font_cache_memory_dump_provider.h",
    "fonts/font_custom_platform_data.cc",
    "fonts/font_custom_platform_data.h",
    "fonts/font_data.cc",
    "fonts/font_data.h",
    "fonts/font_data_cache.cc",
    "fonts/font_data_cache.h",
    "fonts/font_data_for_range_set.cc",
    "fonts/font_data_for_range_set.h",
    "fonts/font_description.cc",
    "fonts/font_description.h",
    "fonts/font_face_creation_params.h",
    "fonts/font_fallback_iterator.cc",
    "fonts/font_fallback_iterator.h",
    "fonts/font_fallback_list.cc",
    "fonts/font_fallback_list.h",
    "fonts/font_fallback_priority.cc",
    "fonts/font_fallback_priority.h",
    "fonts/font_family.cc",
    "fonts/font_family.h",
    "fonts/font_global_context.cc",
    "fonts/font_global_context.h",
    "fonts/font_metrics.cc",
    "fonts/font_metrics.h",
    "fonts/font_orientation.cc",
    "fonts/font_orientation.h",
    "fonts/font_platform_data.cc",
    "fonts/font_platform_data.h",
    "fonts/font_selection_algorithm.cc",
    "fonts/font_selection_algorithm.h",
    "fonts/font_selection_types.cc",
    "fonts/font_selection_types.h",
    "fonts/font_selector.cc",
    "fonts/font_selector.h",
    "fonts/font_selector_client.h",
    "fonts/font_smoothing_mode.cc",
    "fonts/font_smoothing_mode.h",
    "fonts/font_variant_east_asian.cc",
    "fonts/font_variant_east_asian.h",
    "fonts/font_variant_numeric.cc",
    "fonts/font_variant_numeric.h",
    "fonts/font_vertical_position_type.h",
    "fonts/font_width_variant.cc",
    "fonts/font_width_variant.h",
    "fonts/generic_font_family_settings.cc",
    "fonts/generic_font_family_settings.h",
    "fonts/glyph_metrics_map.h",
    "fonts/linux/font_cache_linux.cc",
    "fonts/mac/core_text_variations_support.cc",
    "fonts/mac/core_text_variations_support.h",
    "fonts/mac/font_cache_mac.mm",
    "fonts/mac/font_family_matcher_mac.h",
    "fonts/mac/font_family_matcher_mac.mm",
    "fonts/mac/font_platform_data_mac.mm",
    "fonts/ng_text_fragment_paint_info.h",
    "fonts/opentype/font_format_check.cc",
    "fonts/opentype/font_format_check.h",
    "fonts/opentype/font_settings.cc",
    "fonts/opentype/font_settings.h",
    "fonts/opentype/open_type_caps_support.cc",
    "fonts/opentype/open_type_caps_support.h",
    "fonts/opentype/open_type_caps_support_mpl.cc",
    "fonts/opentype/open_type_types.h",
    "fonts/opentype/open_type_vertical_data.cc",
    "fonts/opentype/open_type_vertical_data.h",
    "fonts/orientation_iterator.cc",
    "fonts/orientation_iterator.h",
    "fonts/script_run_iterator.cc",
    "fonts/script_run_iterator.h",
    "fonts/segmented_font_data.cc",
    "fonts/segmented_font_data.h",
    "fonts/shaping/caching_word_shape_iterator.cc",
    "fonts/shaping/caching_word_shape_iterator.h",
    "fonts/shaping/caching_word_shaper.cc",
    "fonts/shaping/caching_word_shaper.h",
    "fonts/shaping/case_mapping_harfbuzz_buffer_filler.cc",
    "fonts/shaping/case_mapping_harfbuzz_buffer_filler.h",
    "fonts/shaping/harfbuzz_face.cc",
    "fonts/shaping/harfbuzz_face.h",
    "fonts/shaping/harfbuzz_font_cache.h",
    "fonts/shaping/harfbuzz_shaper.cc",
    "fonts/shaping/harfbuzz_shaper.h",
    "fonts/shaping/run_segmenter.cc",
    "fonts/shaping/run_segmenter.h",
    "fonts/shaping/shape_cache.cc",
    "fonts/shaping/shape_cache.h",
    "fonts/shaping/shape_result.cc",
    "fonts/shaping/shape_result.h",
    "fonts/shaping/shape_result_bloberizer.cc",
    "fonts/shaping/shape_result_bloberizer.h",
    "fonts/shaping/shape_result_buffer.cc",
    "fonts/shaping/shape_result_buffer.h",
    "fonts/shaping/shape_result_inline_headers.h",
    "fonts/shaping/shape_result_spacing.cc",
    "fonts/shaping/shape_result_spacing.h",
    "fonts/shaping/shape_result_test_info.cc",
    "fonts/shaping/shape_result_test_info.h",
    "fonts/shaping/shaping_line_breaker.cc",
    "fonts/shaping/shaping_line_breaker.h",
    "fonts/simple_font_data.cc",
    "fonts/simple_font_data.h",
    "fonts/skia/font_cache_skia.cc",
    "fonts/skia/skia_text_metrics.cc",
    "fonts/skia/skia_text_metrics.h",
    "fonts/small_caps_iterator.cc",
    "fonts/small_caps_iterator.h",
    "fonts/string_truncator.cc",
    "fonts/string_truncator.h",
    "fonts/symbols_iterator.cc",
    "fonts/symbols_iterator.h",
    "fonts/text_rendering_mode.cc",
    "fonts/text_rendering_mode.h",
    "fonts/text_run_paint_info.h",
    "fonts/typesetting_features.cc",
    "fonts/typesetting_features.h",
    "fonts/unicode_range_set.cc",
    "fonts/unicode_range_set.h",
    "fonts/utf16_text_iterator.cc",
    "fonts/utf16_text_iterator.h",
    "fonts/vdmx_parser.cc",
    "fonts/vdmx_parser.h",
    "fonts/web_font_decoder.cc",
    "fonts/web_font_decoder.h",
    "fonts/web_font_render_style.cc",
    "fonts/web_font_typeface_factory.cc",
    "fonts/web_font_typeface_factory.h",
    "fonts/win/font_cache_skia_win.cc",
    "fonts/win/font_fallback_win.cc",
    "fonts/win/font_fallback_win.h",
    "fonts/win/font_platform_data_win.cc",
    "geometry/cg/float_point_cg.cc",
    "geometry/cg/float_rect_cg.cc",
    "geometry/cg/float_size_cg.cc",
    "geometry/cg/int_point_cg.cc",
    "geometry/cg/int_rect_cg.cc",
    "geometry/cg/int_size_cg.cc",
    "geometry/double_point.cc",
    "geometry/double_point.h",
    "geometry/double_rect.cc",
    "geometry/double_rect.h",
    "geometry/double_size.cc",
    "geometry/double_size.h",
    "geometry/float_box.cc",
    "geometry/float_box.h",
    "geometry/float_point.cc",
    "geometry/float_point.h",
    "geometry/float_point_3d.cc",
    "geometry/float_point_3d.h",
    "geometry/float_polygon.cc",
    "geometry/float_polygon.h",
    "geometry/float_quad.cc",
    "geometry/float_quad.h",
    "geometry/float_rect.cc",
    "geometry/float_rect.h",
    "geometry/float_rect_outsets.cc",
    "geometry/float_rect_outsets.h",
    "geometry/float_rounded_rect.cc",
    "geometry/float_rounded_rect.h",
    "geometry/float_size.cc",
    "geometry/float_size.h",
    "geometry/geometry_as_json.h",
    "geometry/int_point.cc",
    "geometry/int_point.h",
    "geometry/int_rect.cc",
    "geometry/int_rect.h",
    "geometry/int_rect_outsets.h",
    "geometry/int_size.cc",
    "geometry/int_size.h",
    "geometry/layout_point.cc",
    "geometry/layout_point.h",
    "geometry/layout_rect.cc",
    "geometry/layout_rect.h",
    "geometry/layout_rect_outsets.cc",
    "geometry/layout_rect_outsets.h",
    "geometry/layout_size.cc",
    "geometry/layout_size.h",
    "geometry/region.cc",
    "geometry/region.h",
    "graphics/accelerated_static_bitmap_image.cc",
    "graphics/accelerated_static_bitmap_image.h",
    "graphics/begin_frame_provider.cc",
    "graphics/begin_frame_provider.h",
    "graphics/bitmap_image.cc",
    "graphics/bitmap_image.h",
    "graphics/bitmap_image_metrics.cc",
    "graphics/bitmap_image_metrics.h",
    "graphics/box_reflection.cc",
    "graphics/box_reflection.h",
    "graphics/canvas_2d_layer_bridge.cc",
    "graphics/canvas_2d_layer_bridge.h",
    "graphics/canvas_color_params.cc",
    "graphics/canvas_color_params.h",
    "graphics/canvas_heuristic_parameters.h",
    "graphics/canvas_metrics.cc",
    "graphics/canvas_metrics.h",
    "graphics/canvas_resource.cc",
    "graphics/canvas_resource.h",
    "graphics/canvas_resource_dispatcher.cc",
    "graphics/canvas_resource_dispatcher.h",
    "graphics/canvas_resource_host.cc",
    "graphics/canvas_resource_host.h",
    "graphics/canvas_resource_provider.cc",
    "graphics/canvas_resource_provider.h",
    "graphics/color.cc",
    "graphics/color.h",
    "graphics/color_behavior.cc",
    "graphics/color_behavior.h",
    "graphics/color_blend.h",
    "graphics/color_space_gamut.cc",
    "graphics/color_space_gamut.h",
    "graphics/color_space_profile_data.cc",
    "graphics/color_space_profile_data.h",
    "graphics/compositing/chunk_to_layer_mapper.cc",
    "graphics/compositing/chunk_to_layer_mapper.h",
    "graphics/compositing/content_layer_client_impl.cc",
    "graphics/compositing/content_layer_client_impl.h",
    "graphics/compositing/paint_artifact_compositor.cc",
    "graphics/compositing/paint_artifact_compositor.h",
    "graphics/compositing/paint_chunks_to_cc_layer.cc",
    "graphics/compositing/paint_chunks_to_cc_layer.h",
    "graphics/compositing/property_tree_manager.cc",
    "graphics/compositing/property_tree_manager.h",
    "graphics/compositing_reasons.cc",
    "graphics/compositing_reasons.h",
    "graphics/compositor_animators_state.h",
    "graphics/compositor_element_id.cc",
    "graphics/compositor_element_id.h",
    "graphics/compositor_filter_operations.cc",
    "graphics/compositor_filter_operations.h",
    "graphics/compositor_mutator.h",
    "graphics/compositor_mutator_client.cc",
    "graphics/compositor_mutator_client.h",
    "graphics/compositor_mutator_impl.cc",
    "graphics/contiguous_container.cc",
    "graphics/contiguous_container.h",
    "graphics/cpu/arm/webgl_image_conversion_neon.h",
    "graphics/cpu/mips/webgl_image_conversion_msa.h",
    "graphics/cpu/x86/webgl_image_conversion_sse.h",
    "graphics/crossfade_generated_image.cc",
    "graphics/crossfade_generated_image.h",
    "graphics/dash_array.h",
    "graphics/decoding_image_generator.cc",
    "graphics/decoding_image_generator.h",
    "graphics/deferred_image_decoder.cc",
    "graphics/deferred_image_decoder.h",
    "graphics/draw_looper_builder.cc",
    "graphics/draw_looper_builder.h",
    "graphics/filters/distant_light_source.cc",
    "graphics/filters/distant_light_source.h",
    "graphics/filters/fe_blend.cc",
    "graphics/filters/fe_blend.h",
    "graphics/filters/fe_box_reflect.cc",
    "graphics/filters/fe_box_reflect.h",
    "graphics/filters/fe_color_matrix.cc",
    "graphics/filters/fe_color_matrix.h",
    "graphics/filters/fe_component_transfer.cc",
    "graphics/filters/fe_component_transfer.h",
    "graphics/filters/fe_composite.cc",
    "graphics/filters/fe_composite.h",
    "graphics/filters/fe_convolve_matrix.cc",
    "graphics/filters/fe_convolve_matrix.h",
    "graphics/filters/fe_diffuse_lighting.cc",
    "graphics/filters/fe_diffuse_lighting.h",
    "graphics/filters/fe_displacement_map.cc",
    "graphics/filters/fe_displacement_map.h",
    "graphics/filters/fe_drop_shadow.cc",
    "graphics/filters/fe_drop_shadow.h",
    "graphics/filters/fe_flood.cc",
    "graphics/filters/fe_flood.h",
    "graphics/filters/fe_gaussian_blur.cc",
    "graphics/filters/fe_gaussian_blur.h",
    "graphics/filters/fe_lighting.cc",
    "graphics/filters/fe_lighting.h",
    "graphics/filters/fe_merge.cc",
    "graphics/filters/fe_merge.h",
    "graphics/filters/fe_morphology.cc",
    "graphics/filters/fe_morphology.h",
    "graphics/filters/fe_offset.cc",
    "graphics/filters/fe_offset.h",
    "graphics/filters/fe_specular_lighting.cc",
    "graphics/filters/fe_specular_lighting.h",
    "graphics/filters/fe_tile.cc",
    "graphics/filters/fe_tile.h",
    "graphics/filters/fe_turbulence.cc",
    "graphics/filters/fe_turbulence.h",
    "graphics/filters/filter.cc",
    "graphics/filters/filter.h",
    "graphics/filters/filter_effect.cc",
    "graphics/filters/filter_effect.h",
    "graphics/filters/light_source.cc",
    "graphics/filters/light_source.h",
    "graphics/filters/paint_filter_builder.cc",
    "graphics/filters/paint_filter_builder.h",
    "graphics/filters/paint_filter_effect.cc",
    "graphics/filters/paint_filter_effect.h",
    "graphics/filters/point_light_source.cc",
    "graphics/filters/point_light_source.h",
    "graphics/filters/source_alpha.cc",
    "graphics/filters/source_alpha.h",
    "graphics/filters/source_graphic.cc",
    "graphics/filters/source_graphic.h",
    "graphics/filters/spot_light_source.cc",
    "graphics/filters/spot_light_source.h",
    "graphics/generated_image.cc",
    "graphics/generated_image.h",
    "graphics/gpu/drawing_buffer.cc",
    "graphics/gpu/drawing_buffer.h",
    "graphics/gpu/extensions_3d_util.cc",
    "graphics/gpu/extensions_3d_util.h",
    "graphics/gpu/graphics_context_3d_utils.cc",
    "graphics/gpu/graphics_context_3d_utils.h",
    "graphics/gpu/image_layer_bridge.cc",
    "graphics/gpu/image_layer_bridge.h",
    "graphics/gpu/shared_context_rate_limiter.cc",
    "graphics/gpu/shared_context_rate_limiter.h",
    "graphics/gpu/shared_gpu_context.cc",
    "graphics/gpu/shared_gpu_context.h",
    "graphics/gpu/webgl_image_conversion.cc",
    "graphics/gpu/webgl_image_conversion.h",
    "graphics/gpu/xr_frame_transport.cc",
    "graphics/gpu/xr_frame_transport.h",
    "graphics/gpu/xr_webgl_drawing_buffer.cc",
    "graphics/gpu/xr_webgl_drawing_buffer.h",
    "graphics/gpu_memory_buffer_image_copy.cc",
    "graphics/gpu_memory_buffer_image_copy.h",
    "graphics/gradient.cc",
    "graphics/gradient.h",
    "graphics/gradient_generated_image.cc",
    "graphics/gradient_generated_image.h",
    "graphics/graphics_context.cc",
    "graphics/graphics_context.h",
    "graphics/graphics_context_state.cc",
    "graphics/graphics_context_state.h",
    "graphics/graphics_context_state_saver.h",
    "graphics/graphics_layer.cc",
    "graphics/graphics_layer.h",
    "graphics/graphics_layer_client.h",
    "graphics/graphics_types.cc",
    "graphics/graphics_types.h",
    "graphics/graphics_types_3d.h",
    "graphics/high_contrast_image_classifier.cc",
    "graphics/high_contrast_image_classifier.h",
    "graphics/high_contrast_settings.h",
    "graphics/highcontrast/highcontrast_classifier.cc",
    "graphics/highcontrast/highcontrast_classifier.h",
    "graphics/image.cc",
    "graphics/image.h",
    "graphics/image_animation_policy.h",
    "graphics/image_data_buffer.cc",
    "graphics/image_data_buffer.h",
    "graphics/image_decoding_store.cc",
    "graphics/image_decoding_store.h",
    "graphics/image_frame_generator.cc",
    "graphics/image_frame_generator.h",
    "graphics/image_observer.cc",
    "graphics/image_observer.h",
    "graphics/image_orientation.cc",
    "graphics/image_orientation.h",
    "graphics/image_pattern.cc",
    "graphics/image_pattern.h",
    "graphics/intercepting_canvas.cc",
    "graphics/intercepting_canvas.h",
    "graphics/interpolation_space.cc",
    "graphics/interpolation_space.h",
    "graphics/link_highlight.h",
    "graphics/logging_canvas.cc",
    "graphics/logging_canvas.h",
    "graphics/mailbox_texture_holder.cc",
    "graphics/mailbox_texture_holder.h",
    "graphics/offscreen_canvas_placeholder.cc",
    "graphics/offscreen_canvas_placeholder.h",
    "graphics/offscreen_canvas_resource_provider.cc",
    "graphics/offscreen_canvas_resource_provider.h",
    "graphics/paint/clip_paint_property_node.cc",
    "graphics/paint/clip_paint_property_node.h",
    "graphics/paint/cull_rect.cc",
    "graphics/paint/cull_rect.h",
    "graphics/paint/display_item.cc",
    "graphics/paint/display_item.h",
    "graphics/paint/display_item_cache_skipper.h",
    "graphics/paint/display_item_client.cc",
    "graphics/paint/display_item_client.h",
    "graphics/paint/display_item_list.cc",
    "graphics/paint/display_item_list.h",
    "graphics/paint/display_item_raster_invalidator.cc",
    "graphics/paint/display_item_raster_invalidator.h",
    "graphics/paint/drawing_display_item.cc",
    "graphics/paint/drawing_display_item.h",
    "graphics/paint/drawing_recorder.cc",
    "graphics/paint/drawing_recorder.h",
    "graphics/paint/effect_paint_property_node.cc",
    "graphics/paint/effect_paint_property_node.h",
    "graphics/paint/float_clip_rect.h",
    "graphics/paint/foreign_layer_display_item.cc",
    "graphics/paint/foreign_layer_display_item.h",
    "graphics/paint/geometry_mapper.cc",
    "graphics/paint/geometry_mapper.h",
    "graphics/paint/geometry_mapper_clip_cache.cc",
    "graphics/paint/geometry_mapper_clip_cache.h",
    "graphics/paint/geometry_mapper_transform_cache.cc",
    "graphics/paint/geometry_mapper_transform_cache.h",
    "graphics/paint/hit_test_data.cc",
    "graphics/paint/hit_test_data.h",
    "graphics/paint/paint_artifact.cc",
    "graphics/paint/paint_artifact.h",
    "graphics/paint/paint_canvas.h",
    "graphics/paint/paint_chunk.cc",
    "graphics/paint/paint_chunk.h",
    "graphics/paint/paint_chunk_subset.h",
    "graphics/paint/paint_chunker.cc",
    "graphics/paint/paint_chunker.h",
    "graphics/paint/paint_controller.cc",
    "graphics/paint/paint_controller.h",
    "graphics/paint/paint_controller_debug_data.cc",
    "graphics/paint/paint_filter.h",
    "graphics/paint/paint_flags.h",
    "graphics/paint/paint_font.h",
    "graphics/paint/paint_property_node.cc",
    "graphics/paint/paint_property_node.h",
    "graphics/paint/paint_record.h",
    "graphics/paint/paint_record_builder.cc",
    "graphics/paint/paint_record_builder.h",
    "graphics/paint/paint_recorder.h",
    "graphics/paint/paint_shader.h",
    "graphics/paint/paint_text_blob.h",
    "graphics/paint/paint_typeface.h",
    "graphics/paint/property_tree_state.cc",
    "graphics/paint/property_tree_state.h",
    "graphics/paint/raster_invalidation_tracking.cc",
    "graphics/paint/raster_invalidation_tracking.h",
    "graphics/paint/raster_invalidator.cc",
    "graphics/paint/raster_invalidator.h",
    "graphics/paint/ref_counted_property_tree_state.cc",
    "graphics/paint/ref_counted_property_tree_state.h",
    "graphics/paint/scoped_display_item_fragment.h",
    "graphics/paint/scoped_paint_chunk_properties.h",
    "graphics/paint/scroll_hit_test_display_item.cc",
    "graphics/paint/scroll_hit_test_display_item.h",
    "graphics/paint/scroll_paint_property_node.cc",
    "graphics/paint/scroll_paint_property_node.h",
    "graphics/paint/subsequence_recorder.h",
    "graphics/paint/transform_paint_property_node.cc",
    "graphics/paint/transform_paint_property_node.h",
    "graphics/paint_generated_image.cc",
    "graphics/paint_generated_image.h",
    "graphics/paint_invalidation_reason.cc",
    "graphics/paint_invalidation_reason.h",
    "graphics/paint_record_pattern.cc",
    "graphics/paint_record_pattern.h",
    "graphics/path.cc",
    "graphics/path.h",
    "graphics/path_traversal_state.cc",
    "graphics/path_traversal_state.h",
    "graphics/pattern.cc",
    "graphics/pattern.h",
    "graphics/picture_snapshot.cc",
    "graphics/picture_snapshot.h",
    "graphics/placeholder_image.cc",
    "graphics/placeholder_image.h",
    "graphics/profiling_canvas.cc",
    "graphics/profiling_canvas.h",
    "graphics/replaying_canvas.cc",
    "graphics/replaying_canvas.h",
    "graphics/scoped_interpolation_quality.h",
    "graphics/skia/image_pixel_locker.cc",
    "graphics/skia/image_pixel_locker.h",
    "graphics/skia/sk_size_hash.h",
    "graphics/skia/skia_utils.cc",
    "graphics/skia/skia_utils.h",
    "graphics/skia_texture_holder.cc",
    "graphics/skia_texture_holder.h",
    "graphics/squashing_disallowed_reasons.cc",
    "graphics/squashing_disallowed_reasons.h",
    "graphics/static_bitmap_image.cc",
    "graphics/static_bitmap_image.h",
    "graphics/stroke_data.cc",
    "graphics/stroke_data.h",
    "graphics/surface_layer_bridge.cc",
    "graphics/surface_layer_bridge.h",
    "graphics/texture_holder.h",
    "graphics/touch_action.h",
    "graphics/touch_action_rect.cc",
    "graphics/touch_action_rect.h",
    "graphics/unaccelerated_static_bitmap_image.cc",
    "graphics/unaccelerated_static_bitmap_image.h",
    "graphics/video_frame_resource_provider.cc",
    "graphics/video_frame_resource_provider.h",
    "graphics/video_frame_submitter.cc",
    "graphics/video_frame_submitter.h",
    "graphics/web_graphics_context_3d_provider_wrapper.cc",
    "graphics/web_graphics_context_3d_provider_wrapper.h",
    "histogram.cc",
    "histogram.h",
    "image-decoders/bmp/bmp_image_decoder.cc",
    "image-decoders/bmp/bmp_image_decoder.h",
    "image-decoders/bmp/bmp_image_reader.cc",
    "image-decoders/bmp/bmp_image_reader.h",
    "image-decoders/fast_shared_buffer_reader.cc",
    "image-decoders/fast_shared_buffer_reader.h",
    "image-decoders/gif/gif_image_decoder.cc",
    "image-decoders/gif/gif_image_decoder.h",
    "image-decoders/gif/gif_image_reader.cc",
    "image-decoders/gif/gif_image_reader.h",
    "image-decoders/ico/ico_image_decoder.cc",
    "image-decoders/ico/ico_image_decoder.h",
    "image-decoders/image_animation.h",
    "image-decoders/image_decoder.cc",
    "image-decoders/image_decoder.h",
    "image-decoders/image_frame.cc",
    "image-decoders/image_frame.h",
    "image-decoders/jpeg/jpeg_image_decoder.cc",
    "image-decoders/jpeg/jpeg_image_decoder.h",
    "image-decoders/png/png_image_decoder.cc",
    "image-decoders/png/png_image_decoder.h",
    "image-decoders/png/png_image_reader.cc",
    "image-decoders/png/png_image_reader.h",
    "image-decoders/segment_reader.cc",
    "image-decoders/segment_reader.h",
    "image-decoders/webp/webp_image_decoder.cc",
    "image-decoders/webp/webp_image_decoder.h",
    "image-encoders/image_encoder.cc",
    "image-encoders/image_encoder.h",
    "image-encoders/image_encoder_utils.cc",
    "image-encoders/image_encoder_utils.h",
    "instance_counters.cc",
    "instance_counters.h",
    "instance_counters_memory_dump_provider.h",
    "json/json_parser.cc",
    "json/json_parser.h",
    "json/json_values.cc",
    "json/json_values.h",
    "keyboard_codes.h",
    "language.cc",
    "language.h",
    "layout_test_support.cc",
    "layout_test_support.h",
    "layout_unit.cc",
    "layout_unit.h",
    "length.cc",
    "length.h",
    "length_box.h",
    "length_functions.cc",
    "length_functions.h",
    "length_point.h",
    "length_size.h",
    "lifecycle_notifier.h",
    "lifecycle_observer.h",
    "link_hash.cc",
    "link_hash.h",
    "long_task_detector.cc",
    "long_task_detector.h",
    "mac/block_exceptions.h",
    "mac/block_exceptions.mm",
    "mac/color_mac.h",
    "mac/color_mac.mm",
    "mac/graphics_context_canvas.h",
    "mac/graphics_context_canvas.mm",
    "mac/local_current_graphics_context.h",
    "mac/local_current_graphics_context.mm",
    "mac/ns_scroller_imp_details.h",
    "mac/scroll_animator_mac.h",
    "mac/scroll_animator_mac.mm",
    "mac/theme_mac.h",
    "mac/theme_mac.mm",
    "mac/version_util_mac.h",
    "mac/version_util_mac.mm",
    "mac/web_core_ns_cell_extras.h",
    "mac/web_core_ns_cell_extras.mm",
    "mediastream/media_stream_center.cc",
    "mediastream/media_stream_center.h",
    "mediastream/media_stream_component.cc",
    "mediastream/media_stream_component.h",
    "mediastream/media_stream_descriptor.cc",
    "mediastream/media_stream_descriptor.h",
    "mediastream/media_stream_source.cc",
    "mediastream/media_stream_source.h",
    "mediastream/media_stream_web_audio_source.cc",
    "mediastream/media_stream_web_audio_source.h",
    "memory_coordinator.cc",
    "memory_coordinator.h",
    "mhtml/archive_resource.cc",
    "mhtml/archive_resource.h",
    "mhtml/mhtml_archive.cc",
    "mhtml/mhtml_archive.h",
    "mhtml/mhtml_parser.cc",
    "mhtml/mhtml_parser.h",
    "mojo/big_string_mojom_traits.cc",
    "mojo/big_string_mojom_traits.h",
    "mojo/bluetooth_struct_traits.cc",
    "mojo/bluetooth_struct_traits.h",
    "mojo/canonical_cookie_mojom_traits.cc",
    "mojo/canonical_cookie_mojom_traits.h",
    "mojo/fetch_api_request_struct_traits.cc",
    "mojo/interface_invalidator.cc",
    "mojo/interface_invalidator.h",
    "mojo/mojo_helper.h",
    "mojo/notification_struct_traits.cc",
    "mojo/notification_struct_traits.h",
    "mojo/revocable_binding.h",
    "mojo/revocable_interface_ptr.h",
    "mojo/revocable_strong_binding.h",
    "mojo/string16_mojom_traits.cc",
    "mojo/string16_mojom_traits.h",
    "partition_alloc_memory_dump_provider.cc",
    "partition_alloc_memory_dump_provider.h",
    "paste_mode.h",
    "peerconnection/rtc_answer_options_platform.h",
    "peerconnection/rtc_offer_options_platform.h",
    "peerconnection/rtc_session_description_request.h",
    "peerconnection/rtc_stats_request.h",
    "peerconnection/rtc_stats_response_base.h",
    "peerconnection/rtc_void_request.h",
    "platform_chrome_client.h",
    "plugins/plugin_data.cc",
    "plugins/plugin_data.h",
    "plugins/plugin_script_forbidden_scope.cc",
    "plugins/plugin_script_forbidden_scope.h",
    "pod_arena.h",
    "pod_free_list_arena.h",
    "pod_interval.h",
    "pod_interval_tree.h",
    "pod_red_black_tree.h",
    "prerender.cc",
    "prerender.h",
    "prerender_client.h",
    "probe/platform_probes.cc",
    "probe/platform_probes.h",
    "probe/platform_trace_events_agent.cc",
    "probe/platform_trace_events_agent.h",
    "resolution_units.h",
    "scoped_orientation_change_indicator.cc",
    "scoped_orientation_change_indicator.h",
    "scroll/main_thread_scrolling_reason.h",
    "scroll/programmatic_scroll_animator.cc",
    "scroll/programmatic_scroll_animator.h",
    "scroll/scroll_alignment.cc",
    "scroll/scroll_alignment.h",
    "scroll/scroll_animator.cc",
    "scroll/scroll_animator.h",
    "scroll/scroll_animator_base.cc",
    "scroll/scroll_animator_base.h",
    "scroll/scroll_animator_compositor_coordinator.cc",
    "scroll/scroll_animator_compositor_coordinator.h",
    "scroll/scroll_customization.cc",
    "scroll/scroll_customization.h",
    "scroll/scroll_snap_data.h",
    "scroll/scroll_state_data.h",
    "scroll/scroll_types.h",
    "scroll/scrollable_area.cc",
    "scroll/scrollable_area.h",
    "scroll/scrollbar.cc",
    "scroll/scrollbar.h",
    "scroll/scrollbar_layer_delegate.cc",
    "scroll/scrollbar_layer_delegate.h",
    "scroll/scrollbar_theme.cc",
    "scroll/scrollbar_theme.h",
    "scroll/scrollbar_theme_android.cc",
    "scroll/scrollbar_theme_aura.cc",
    "scroll/scrollbar_theme_aura.h",
    "scroll/scrollbar_theme_mac.h",
    "scroll/scrollbar_theme_mac.mm",
    "scroll/scrollbar_theme_mock.cc",
    "scroll/scrollbar_theme_mock.h",
    "scroll/scrollbar_theme_overlay.cc",
    "scroll/scrollbar_theme_overlay.h",
    "scroll/scrollbar_theme_overlay_mock.h",
    "scroll/smooth_scroll_sequencer.cc",
    "scroll/smooth_scroll_sequencer.h",
    "scroll/web_scroll_into_view_params.cc",
    "scroll/web_scrollbar_theme.mm",
    "serialized_resource.h",
    "shared_buffer.cc",
    "shared_buffer.h",
    "shared_buffer_chunk_reader.cc",
    "shared_buffer_chunk_reader.h",
    "speech/platform_speech_synthesis_utterance.cc",
    "speech/platform_speech_synthesis_utterance.h",
    "speech/platform_speech_synthesis_voice.cc",
    "speech/platform_speech_synthesis_voice.h",
    "speech/platform_speech_synthesizer.cc",
    "speech/platform_speech_synthesizer.h",
    "supplementable.cc",
    "supplementable.h",
    "text/bidi_character_run.h",
    "text/bidi_context.cc",
    "text/bidi_context.h",
    "text/bidi_resolver.h",
    "text/bidi_run_list.h",
    "text/bidi_text_run.cc",
    "text/bidi_text_run.h",
    "text/capitalize.cc",
    "text/capitalize.h",
    "text/character.cc",
    "text/character.h",
    "text/character_emoji.cc",
    "text/character_property.h",
    "text/date_time_format.cc",
    "text/date_time_format.h",
    "text/decode_escape_sequences.h",
    "text/hyphenation.cc",
    "text/hyphenation.h",
    "text/icu_error.cc",
    "text/icu_error.h",
    "text/layout_locale.cc",
    "text/layout_locale.h",
    "text/line_ending.cc",
    "text/line_ending.h",
    "text/linux/hyphenation_linux.cc",
    "text/locale_icu.cc",
    "text/locale_icu.h",
    "text/locale_mac.h",
    "text/locale_mac.mm",
    "text/locale_to_script_mapping.cc",
    "text/locale_to_script_mapping.h",
    "text/locale_win.cc",
    "text/locale_win.h",
    "text/mac/hyphenation_mac.cc",
    "text/platform_locale.cc",
    "text/platform_locale.h",
    "text/quoted_printable.cc",
    "text/quoted_printable.h",
    "text/segmented_string.cc",
    "text/segmented_string.h",
    "text/suffix_tree.h",
    "text/text_boundaries.cc",
    "text/text_boundaries.h",
    "text/text_break_iterator.cc",
    "text/text_break_iterator.h",
    "text/text_break_iterator_icu.cc",
    "text/text_break_iterator_internal_icu.cc",
    "text/text_break_iterator_internal_icu.h",
    "text/text_direction.cc",
    "text/text_direction.h",
    "text/text_encoding_detector.cc",
    "text/text_encoding_detector.h",
    "text/text_justify.h",
    "text/text_run.cc",
    "text/text_run.h",
    "text/text_run_iterator.h",
    "text/truncation.h",
    "text/unicode_bidi.h",
    "text/unicode_range.cc",
    "text/unicode_range.h",
    "text/unicode_utilities.cc",
    "text/unicode_utilities.h",
    "text/web_entities.cc",
    "text/web_entities.h",
    "text/win/hyphenation_win.cc",
    "text/writing_mode.h",
    "text/writing_mode_utils.h",
    "theme.cc",
    "theme.h",
    "theme_types.h",
    "time_clamper.cc",
    "time_clamper.h",
    "timer.cc",
    "timer.h",
    "transforms/affine_transform.cc",
    "transforms/affine_transform.h",
    "transforms/identity_transform_operation.h",
    "transforms/interpolated_transform_operation.cc",
    "transforms/interpolated_transform_operation.h",
    "transforms/matrix_3d_transform_operation.cc",
    "transforms/matrix_3d_transform_operation.h",
    "transforms/matrix_transform_operation.cc",
    "transforms/matrix_transform_operation.h",
    "transforms/perspective_transform_operation.cc",
    "transforms/perspective_transform_operation.h",
    "transforms/rotate_transform_operation.cc",
    "transforms/rotate_transform_operation.h",
    "transforms/rotation.cc",
    "transforms/rotation.h",
    "transforms/scale_transform_operation.cc",
    "transforms/scale_transform_operation.h",
    "transforms/skew_transform_operation.cc",
    "transforms/skew_transform_operation.h",
    "transforms/transform_operations.cc",
    "transforms/transform_operations.h",
    "transforms/transform_state.cc",
    "transforms/transform_state.h",
    "transforms/transformation_matrix.cc",
    "transforms/transformation_matrix.h",
    "transforms/translate_transform_operation.cc",
    "transforms/translate_transform_operation.h",
    "ukm_time_aggregator.cc",
    "ukm_time_aggregator.h",
    "uuid.cc",
    "uuid.h",
    "waitable_event.cc",
    "waitable_event.h",
    "web_gesture_event.cc",
    "web_icon_sizes_parser.cc",
    "web_mouse_event.cc",
    "web_mouse_wheel_event.cc",
    "web_pointer_event.cc",
    "web_task_runner.cc",
    "web_task_runner.h",
    "web_text_input_info.cc",
    "web_thread.cc",
    "web_thread_supporting_gc.cc",
    "web_thread_supporting_gc.h",
    "web_thread_type.cc",
    "web_touch_event.cc",
    "weborigin/known_ports.cc",
    "weborigin/known_ports.h",
    "weborigin/kurl.cc",
    "weborigin/kurl.h",
    "weborigin/kurl_hash.h",
    "weborigin/origin_access_entry.cc",
    "weborigin/origin_access_entry.h",
    "weborigin/referrer.h",
    "weborigin/referrer_policy.h",
    "weborigin/scheme_registry.cc",
    "weborigin/scheme_registry.h",
    "weborigin/security_origin.cc",
    "weborigin/security_origin.h",
    "weborigin/security_origin_hash.h",
    "weborigin/security_policy.cc",
    "weborigin/security_policy.h",
    "weborigin/security_violation_reporting_policy.h",
    "weborigin/url_security_origin_map.h",
    "windows_keyboard_codes.h",
  ]

  sources -= blink_platform_avx_files
  sources -= blink_platform_neon_files
  sources -= blink_platform_msa_files
  sources -= blink_platform_sse_files

  # Add in the generated files.
  sources += get_target_outputs(":character_data") +
             get_target_outputs(":color_data") +
             get_target_outputs(":font_family_names") +
             get_target_outputs(":instrumentation_probes") +
             get_target_outputs(":runtime_enabled_features")

  if (is_win) {
    jumbo_excluded_sources = [
      # https://crbug.com/775979 - Uses libjpeg_turbo which uses a
      # "boolean" typedef which is different (int) from the Windows
      # standard "boolean" typedef (unsigned char), resulting in
      # compilation errors when both are joined in a translation unit.
      "image-decoders/jpeg/jpeg_image_decoder.cc",
    ]

    if (is_component_build) {
      # https://crbug.com/764823 - Mixing certain //url/ headers and
      # using url::RawCanonOutputT<char> in one translation unit breaks
      # the Windows component build. These files use RawCanonOutput.
      jumbo_excluded_sources += [
        "link_hash.cc",
        "weborigin/kurl.cc",
        "weborigin/origin_access_entry.cc",
        "weborigin/security_origin.cc",
      ]
    }
  }
  configs += [
    ":blink_platform_pch",
    ":blink_platform_config",
    ":blink_platform_implementation",
    "//third_party/blink/renderer:non_test_config",
  ]

  include_dirs = []

  public_deps = [
    ":blink_platform_public_deps",
    "//third_party/blink/renderer/platform/blob",
    "//third_party/blink/renderer/platform/heap",
    "//third_party/blink/renderer/platform/instrumentation",
    "//third_party/blink/renderer/platform/loader",
    "//third_party/blink/renderer/platform/media",
    "//third_party/blink/renderer/platform/network",
    "//third_party/blink/renderer/platform/scheduler",
  ]
  deps = [
    ":platform_export",
    "//base/allocator:buildflags",
    "//components/viz/client",
    "//components/viz/common",
    "//device/vr/public/mojom:mojom_blink",
    "//gin",
    "//media",
    "//mojo/public/cpp/base",
    "//mojo/public/cpp/bindings",
    "//mojo/public/cpp/bindings:wtf_support",
    "//services/service_manager/public/cpp",
    "//services/ui/public/cpp/gpu",
    "//skia:skcms",
    "//third_party:freetype_harfbuzz",
    "//third_party/blink/public:embedded_frame_sink_mojo_bindings_blink",
    "//third_party/ced",
    "//third_party/icu",
    "//ui/gfx",
    "//ui/gfx/geometry",
  ]

  if (is_mac) {
    sources -= [
      "fonts/skia/font_cache_skia.cc",
      "fonts/web_font_render_style.cc",
      "scroll/scroll_animator.cc",
      "scroll/scroll_animator.h",

      # Uses LocaleMac instead.
      "text/locale_icu.cc",
      "text/locale_icu.h",
    ]

    libs = [
      "AppKit.framework",
      "Accelerate.framework",
      "Carbon.framework",
      "Foundation.framework",
    ]
  } else {
    sources -= [
      "geometry/cg/float_point_cg.cc",
      "geometry/cg/float_rect_cg.cc",
      "geometry/cg/float_size_cg.cc",
      "geometry/cg/int_point_cg.cc",
      "geometry/cg/int_rect_cg.cc",
      "geometry/cg/int_size_cg.cc",
    ]
  }

  if (is_win) {
    sources -= [
      # TODO(https://crbug.com/808221): Use WebFontRenderStyle on Windows.
      "fonts/web_font_render_style.cc",

      # Uses LocaleWin instead.
      "text/locale_icu.cc",
      "text/locale_icu.h",
    ]
    cflags = [
      "/wd4334",  # Result of 32-bit shift implicitly converted to 64 bits.
      "/wd4724",  # Modulo by 0.
    ]
  }

  if (is_fuchsia) {
    sources += [
      "fonts/fuchsia/font_cache_fuchsia.cc",
      "text/fuchsia/hyphenation_fuchsia.cc",
    ]
  }

  if (use_minikin_hyphenation) {
    sources += [
      "text/hyphenation/hyphenation_minikin.cc",
      "text/hyphenation/hyphenation_minikin.h",
      "text/hyphenation/hyphenator_aosp.cc",
      "text/hyphenation/hyphenator_aosp.h",
    ]
  }

  if (!use_default_render_theme) {
    sources -= [
      "scroll/scrollbar_theme_aura.cc",
      "scroll/scrollbar_theme_aura.h",
    ]
  }

  if (current_cpu == "arm") {
    deps += [ ":blink_arm_neon" ]
  }

  if (current_cpu == "mipsel" || current_cpu == "mips64el") {
    deps += [ ":blink_mips_msa" ]
  }

  if (current_cpu == "x86" || current_cpu == "x64") {
    deps += [
      ":blink_x86_avx",
      ":blink_x86_sse",
    ]
  }

  if (use_webaudio_ffmpeg) {
    include_dirs += [ "//third_party/ffmpeg" ]
    deps += [ "//third_party/ffmpeg" ]
  }
  if (use_openmax_dl_fft) {
    include_dirs += [ "//third_party/openmax_dl" ]
    deps += [ "//third_party/openmax_dl/dl" ]
  }

  configs -= [ "//build/config/compiler:default_symbols" ]
  configs += blink_symbols_config
}

jumbo_static_library("test_support") {
  visibility += [ "//third_party/blink/*" ]
  testonly = true

  sources = [
    "graphics/gpu/drawing_buffer_test_helpers.h",
    "scroll/scrollbar_test_suite.h",
    "testing/compositor_test.cc",
    "testing/compositor_test.h",
    "testing/empty_web_media_player.cc",
    "testing/empty_web_media_player.h",
    "testing/fake_display_item_client.h",
    "testing/fake_graphics_layer.h",
    "testing/fake_graphics_layer_client.h",
    "testing/font_test_helpers.cc",
    "testing/font_test_helpers.h",
    "testing/fuzzed_data_provider.cc",
    "testing/fuzzed_data_provider.h",
    "testing/histogram_tester.cc",
    "testing/histogram_tester.h",
    "testing/layer_tree_host_embedder.cc",
    "testing/layer_tree_host_embedder.h",
    "testing/message_loop_for_mojo.h",
    "testing/mock_web_crypto.cc",
    "testing/mock_web_crypto.h",
    "testing/paint_property_test_helpers.h",
    "testing/paint_test_configurations.h",
    "testing/picture_matchers.cc",
    "testing/picture_matchers.h",
    "testing/scoped_fake_plugin_registry.cc",
    "testing/scoped_fake_plugin_registry.h",
    "testing/scoped_mocked_url.cc",
    "testing/scoped_mocked_url.h",
    "testing/stub_graphics_layer_client.h",
    "testing/test_paint_artifact.cc",
    "testing/test_paint_artifact.h",
    "testing/testing_platform_support.cc",
    "testing/testing_platform_support.h",
    "testing/testing_platform_support_with_mock_scheduler.cc",
    "testing/testing_platform_support_with_mock_scheduler.h",
    "testing/testing_platform_support_with_web_rtc.cc",
    "testing/testing_platform_support_with_web_rtc.h",
    "testing/unit_test_helpers.cc",
    "testing/unit_test_helpers.h",
    "testing/url_test_helpers.cc",
    "testing/url_test_helpers.h",
    "testing/use_mock_scrollbar_settings.h",
    "testing/weburl_loader_mock.cc",
    "testing/weburl_loader_mock.h",
    "testing/weburl_loader_mock_factory_impl.cc",
    "testing/weburl_loader_mock_factory_impl.h",
    "testing/wtf/scoped_mock_clock.cc",
    "testing/wtf/scoped_mock_clock.h",
  ]

  configs += [
    ":blink_platform_pch",
    "//third_party/blink/renderer:config",
    "//third_party/blink/renderer:inside_blink",
    "//third_party/blink/renderer:non_test_config",
  ]

  public_deps = [
    ":platform",
    "//cc",
    "//cc:test_support",
    "//components/viz/test:test_support",
    "//testing/gmock",
    "//testing/gtest:gtest",
    "//testing/perf",
  ]

  deps = [
    "//base/test:test_support",
    "//mojo/core/embedder",
    "//mojo/public/cpp/bindings",
    "//services/service_manager/public/cpp",
    "//skia",
    "//third_party/blink/renderer/platform/blob:test_support",
    "//third_party/blink/renderer/platform/loader:test_support",
    "//third_party/blink/renderer/platform/network:test_support",
    "//third_party/blink/renderer/platform/scheduler:test_support",
  ]

  if (is_win) {
    cflags = [ "/wd4267" ]  # Truncation from size_t to int.
  }
}

test("blink_platform_unittests") {
  deps = [
    ":blink_platform_unittests_sources",
  ]
}

jumbo_source_set("blink_platform_unittests_sources") {
  visibility = []  # Allow re-assignment of list.
  visibility = [ "*" ]
  testonly = true

  sources = [
    "animation/animation_translation_util_test.cc",
    "animation/compositor_animation_host_test.cc",
    "animation/compositor_animation_test.cc",
    "animation/compositor_animation_timeline_test.cc",
    "animation/compositor_float_animation_curve_test.cc",
    "animation/compositor_keyframe_model_test.cc",
    "animation/timing_function_test.cc",
    "audio/push_pull_fifo_multithread_test.cc",
    "audio/push_pull_fifo_test.cc",
    "audio/vector_math_test.cc",
    "bindings/runtime_call_stats_test.cc",
    "drag_image_test.cc",
    "exported/file_path_conversion_test.cc",
    "exported/web_canonical_cookie_test.cc",
    "exported/web_cors_test.cc",
    "exported/web_string_test.cc",
    "feature_policy/feature_policy_test.cc",
    "fonts/android/font_cache_android_test.cc",
    "fonts/bitmap_glyphs_blacklist_test.cc",
    "fonts/cursor_position_test.cc",
    "fonts/font_cache_test.cc",
    "fonts/font_description_test.cc",
    "fonts/font_family_test.cc",
    "fonts/font_platform_data_test.cc",
    "fonts/font_selection_types_test.cc",
    "fonts/font_test.cc",
    "fonts/font_test_utilities.cc",
    "fonts/generic_font_family_settings_test.cc",
    "fonts/mac/font_family_matcher_mac_test.mm",
    "fonts/opentype/font_settings_test.cc",
    "fonts/opentype/open_type_vertical_data_test.cc",
    "fonts/orientation_iterator_test.cc",
    "fonts/script_run_iterator_test.cc",
    "fonts/shaping/caching_word_shaper_test.cc",
    "fonts/shaping/harfbuzz_shaper_test.cc",
    "fonts/shaping/run_segmenter_test.cc",
    "fonts/shaping/shape_result_bloberizer_test.cc",
    "fonts/shaping/shaping_line_breaker_test.cc",
    "fonts/small_caps_iterator_test.cc",
    "fonts/symbols_iterator_test.cc",
    "fonts/typesetting_features_test.cc",
    "fonts/unicode_range_set_test.cc",
    "geometry/double_point_test.cc",
    "geometry/double_rect_test.cc",
    "geometry/float_box_test.cc",
    "geometry/float_box_test_helpers.cc",
    "geometry/float_box_test_helpers.h",
    "geometry/float_point_test.cc",
    "geometry/float_polygon_test.cc",
    "geometry/float_quad_test.cc",
    "geometry/float_rect_test.cc",
    "geometry/float_rounded_rect_test.cc",
    "geometry/float_size_test.cc",
    "geometry/geometry_test_helpers.cc",
    "geometry/geometry_test_helpers.h",
    "geometry/int_rect_test.cc",
    "geometry/layout_rect_test.cc",
    "geometry/layout_size_test.cc",
    "geometry/region_test.cc",
    "graphics/accelerated_static_bitmap_image_test.cc",
    "graphics/bitmap_image_test.cc",
    "graphics/compositing/chunk_to_layer_mapper_test.cc",
    "graphics/compositing/paint_artifact_compositor_test.cc",
    "graphics/compositing/paint_chunks_to_cc_layer_test.cc",
    "graphics/compositor_element_id_test.cc",
    "graphics/contiguous_container_test.cc",
    "graphics/decoding_image_generator_test.cc",
    "graphics/deferred_image_decoder_test_wo_platform.cc",
    "graphics/filters/fe_composite_test.cc",
    "graphics/filters/image_filter_builder_test.cc",
    "graphics/gpu/drawing_buffer_test.cc",
    "graphics/gpu/shared_gpu_context_test.cc",
    "graphics/gpu/webgl_image_conversion_test.cc",
    "graphics/graphics_context_test.cc",
    "graphics/high_contrast_image_classifier_test.cc",
    "graphics/paint/cull_rect_test.cc",
    "graphics/paint/display_item_client_test.cc",
    "graphics/paint/display_item_raster_invalidator_test.cc",
    "graphics/paint/display_item_test.cc",
    "graphics/paint/drawing_display_item_test.cc",
    "graphics/paint/drawing_recorder_test.cc",
    "graphics/paint/float_clip_rect_test.cc",
    "graphics/paint/geometry_mapper_test.cc",
    "graphics/paint/paint_chunk_test.cc",
    "graphics/paint/paint_chunker_test.cc",
    "graphics/paint/paint_controller_test.cc",
    "graphics/paint/paint_controller_test.h",
    "graphics/paint/paint_property_node_test.cc",
    "graphics/paint/paint_record_builder_test.cc",
    "graphics/paint/property_tree_state_test.cc",
    "graphics/paint/raster_invalidator_test.cc",
    "graphics/paint_invalidation_reason_test.cc",
    "graphics/path_test.cc",
    "graphics/placeholder_image_test.cc",
    "graphics/skia/skia_utils_test.cc",
    "graphics/static_bitmap_image_test.cc",
    "graphics/video_frame_submitter_test.cc",
    "histogram_test.cc",
    "image-decoders/bmp/bmp_image_decoder_test.cc",
    "image-decoders/fast_shared_buffer_reader_test.cc",
    "image-decoders/gif/gif_image_decoder_test.cc",
    "image-decoders/ico/ico_image_decoder_test.cc",
    "image-decoders/image_decoder_test.cc",
    "image-decoders/image_decoder_test_helpers.cc",
    "image-decoders/image_decoder_test_helpers.h",
    "image-decoders/image_frame_test.cc",
    "image-decoders/jpeg/jpeg_image_decoder_test.cc",
    "image-decoders/png/png_image_decoder_test.cc",
    "image-decoders/webp/webp_image_decoder_test.cc",
    "json/json_parser_test.cc",
    "json/json_values_test.cc",
    "layout_unit_test.cc",
    "lifecycle_context_test.cc",
    "long_task_detector_test.cc",
    "mac/graphics_context_canvas_test.mm",
    "mac/version_util_mac_test.mm",
    "mhtml/mhtml_parser_test.cc",
    "mojo/big_string_mojom_traits_test.cc",
    "mojo/geometry_struct_traits_test.cc",
    "mojo/interface_invalidator_test.cc",
    "mojo/kurl_security_origin_test.cc",
    "mojo/notification_struct_traits_test.cc",
    "mojo/string16_mojom_traits_test.cc",
    "plugins/plugin_data_test.cc",
    "pod_arena_test.cc",
    "pod_free_list_arena_test.cc",
    "pod_interval_tree_test.cc",
    "pod_red_black_tree_test.cc",
    "scoped_orientation_change_indicator_test.cc",
    "scroll/scrollable_area_test.cc",
    "scroll/scrollbar_theme_overlay_test.cc",
    "shared_buffer_test.cc",
    "testing/arena_test_helpers.h",
    "testing/tree_test_helpers.cc",
    "testing/tree_test_helpers.h",
    "text/bidi_resolver_test.cc",
    "text/bidi_test_harness.h",
    "text/capitalize_test.cc",
    "text/character_test.cc",
    "text/date_time_format_test.cc",
    "text/hyphenation_test.cc",
    "text/icu_error_test.cc",
    "text/layout_locale_test.cc",
    "text/line_ending_test.cc",
    "text/platform_locale_test.cc",
    "text/segmented_string_test.cc",
    "text/suffix_tree_test.cc",
    "text/text_boundaries_test.cc",
    "text/text_break_iterator_test.cc",
    "text/text_encoding_detector_test.cc",
    "text/text_run_test.cc",
    "text/unicode_utilities_test.cc",
    "text/writing_mode_utils_test.cc",
    "time_clamper_test.cc",
    "timer_test.cc",
    "transforms/affine_transform_test.cc",
    "transforms/rotation_test.cc",
    "transforms/transform_operations_test.cc",
    "transforms/transformation_matrix_test.cc",
    "ukm_time_aggregator_test.cc",
    "uuid_test.cc",
    "web_icon_sizes_parser_test.cc",
    "web_screen_info_test.cc",
    "web_task_runner_test.cc",
    "web_vector_test.cc",
    "weborigin/known_ports_test.cc",
    "weborigin/kurl_test.cc",
    "weborigin/origin_access_entry_test.cc",
    "weborigin/scheme_registry_test.cc",
    "weborigin/security_origin_test.cc",
    "weborigin/security_policy_test.cc",
  ]

  if (is_win) {
    sources += [ "text/locale_win_test.cc" ]
  } else if (is_mac) {
    sources += [ "text/locale_mac_test.cc" ]
  } else if (is_posix || is_fuchsia) {
    sources += [ "text/locale_icu_test.cc" ]
  }

  if (!is_mac) {
    sources += [ "scroll/scroll_animator_test.cc" ]
  }

  if (use_default_render_theme) {
    sources += [ "scroll/scrollbar_theme_aura_test.cc" ]
  }

  sources += [ "testing/run_all_tests.cc" ]

  configs += [
    ":blink_platform_pch",
    "//third_party/blink/renderer/platform/wtf:wtf_config",
    "//third_party/blink/renderer:config",
  ]

  deps = [
    ":platform",
    ":test_support",
    "//base",
    "//base/test:test_support",
    "//cc",
    "//cc:test_support",
    "//mojo/core/embedder",
    "//mojo/public/cpp/bindings/tests:for_blink_tests",
    "//mojo/public/cpp/test_support:test_utils",
    "//mojo/public/interfaces/bindings/tests:test_interfaces_blink",
    "//services/viz/public/interfaces",
    "//services/viz/public/interfaces:interfaces_blink",
    "//skia",
    "//testing/gmock",
    "//testing/gtest",
    "//third_party:freetype_harfbuzz",
    "//third_party/blink/renderer/platform/blob:unit_tests",
    "//third_party/blink/renderer/platform/instrumentation:unit_tests",
    "//third_party/blink/renderer/platform/loader:unit_tests",
    "//third_party/blink/renderer/platform/network:unit_tests",
    "//third_party/blink/renderer/platform/scheduler:unit_tests",
    "//third_party/blink/renderer/platform/wtf",
    "//ui/gfx",
    "//ui/gfx/geometry",
    "//ui/gfx/geometry/mojo:test_interfaces_blink",
    "//url",
    "//url/mojom:test_url_mojom_gurl_blink",
  ]

  data_deps = [
    ":blink_platform_unittests_data",
  ]

  defines = [ "INSIDE_BLINK" ]
}

executable("image_decode_bench") {
  visibility = []  # Allow re-assignment of list.
  visibility = [ "*" ]

  sources = [
    "testing/image_decode_bench.cc",
  ]

  deps = [
    ":platform",
    "//mojo/core/embedder",
    "//third_party/blink/renderer/platform/wtf",
  ]

  configs += [
    "//third_party/blink/renderer/platform/wtf:wtf_config",
    "//third_party/blink/renderer:config",
  ]

  defines = [ "INSIDE_BLINK" ]
}

test("blink_platform_perftests") {
  sources = [
    "testing/blink_perf_test_suite.cc",
    "testing/blink_perf_test_suite.h",
    "testing/run_all_perf_tests.cc",
    "testing/shape_result_perf_test.cc",
    "testing/shaping_line_breaker_perf_test.cc",
  ]

  configs += [
    # TODO(jschuh): crbug.com/167187 fix size_t to int truncations.
    "//build/config/compiler:no_size_t_to_int_warning",
    "//third_party/blink/renderer/platform/wtf:wtf_config",
    "//third_party/blink/renderer:config",
  ]

  deps = [
    ":platform",
    ":test_support",
    "//base",
    "//base/test:test_support",
    "//mojo/public/cpp/bindings/tests:for_blink_tests",
    "//mojo/public/cpp/test_support:test_utils",
    "//mojo/public/interfaces/bindings/tests:test_interfaces_blink",
    "//services/network/public/cpp:cpp",
    "//testing/gtest",
    "//testing/perf",
    "//third_party:freetype_harfbuzz",
    "//third_party/blink/renderer/platform/scheduler:perf_tests",
  ]
}

group("blink_platform_unittests_data") {
  data = [
    "testing/data/",

    # Required by some image decoder tests.
    "image-decoders/testing/",
    "//third_party/WebKit/LayoutTests/images/resources/",
  ]
}

if (current_cpu == "arm") {
  source_set("blink_arm_neon") {
    sources = blink_platform_neon_files
    # The *NEON.cpp files fail to compile when -mthumb is passed. Force
    # them to build in ARM mode.
    # See https://bugs.webkit.org/show_bug.cgi?id=62916.
    # TODO(GYP)
    #'cflags': ['-marm'],
    #    'conditions': [
    #      ['OS=="android"', {
    #        'cflags!': ['-mthumb'],
    #      }],
    #    ],
  }
}

if (current_cpu == "mipsel" || current_cpu == "mips64el") {
  source_set("blink_mips_msa") {
    sources = blink_platform_msa_files
  }
}

if (current_cpu == "x86" || current_cpu == "x64") {
  source_set("blink_x86_avx") {
    sources = blink_platform_avx_files
    configs += [
      ":blink_platform_config",
      ":blink_platform_implementation",
      "//third_party/blink/renderer:non_test_config",
    ]
    if (!is_clang && is_win) {
      cflags = [ "/arch:AVX" ]
    } else {
      cflags = [ "-mavx" ]
    }
  }
  source_set("blink_x86_sse") {
    sources = blink_platform_sse_files
  }
}

test("blink_fuzzer_unittests") {
  deps = [
    ":test_support",
    "//third_party/blink/public:test_support",
  ]

  sources = [
    "testing/run_all_tests.cc",
  ]

  if (is_linux) {
    deps += [
      "//third_party/blink/renderer/platform/scheduler:scheduler_fuzzer_tests",
    ]
  }
}

# This source set is used for fuzzers that need an environment similar to unit
# tests.
jumbo_source_set("blink_fuzzer_test_support") {
  testonly = true
  visibility = []  # Allow re-assignment of list.
  visibility = [ "*" ]
  sources = [
    "testing/blink_fuzzer_test_support.cc",
    "testing/blink_fuzzer_test_support.h",
  ]
  deps = [
    ":platform",
    ":test_support",
    "//content/test:test_support",
  ]
}

# Fuzzer for blink::MHTMLParser.
fuzzer_test("mhtml_parser_fuzzer") {
  sources = [
    "mhtml/mhtml_fuzzer.cc",
  ]
  deps = [
    ":blink_fuzzer_test_support",
    ":platform",
  ]
  dict = "//testing/libfuzzer/fuzzers/dicts/mhtml.dict"
  seed_corpus = "//third_party/WebKit/LayoutTests/mhtml"
  additional_configs = [
    "//third_party/blink/renderer/platform/wtf:wtf_config",
    "//third_party/blink/renderer:config",
  ]
}

# Fuzzer for blink::WebIconSizesParser.
fuzzer_test("web_icon_sizes_fuzzer") {
  sources = [
    "web_icon_sizes_fuzzer.cc",
  ]
  deps = [
    ":blink_fuzzer_test_support",
    ":platform",
  ]
  dict = "//testing/libfuzzer/fuzzers/dicts/web_icon_sizes.dict"
}

fuzzer_test("blink_png_decoder_fuzzer") {
  sources = [
    "png_fuzzer.cc",
  ]
  deps = [
    ":blink_fuzzer_test_support",
    ":platform",
    "//third_party/libpng",
  ]
  dict = "//testing/libfuzzer/fuzzers/dicts/png.dict"
  seed_corpuses = [
    "//components/viz/test/data",
    "//third_party/WebKit/LayoutTests/images/png-suite/samples",
    "//third_party/WebKit/LayoutTests/images/resources/pngfuzz",
  ]
}

# Fuzzer for blink::JSONParser.
fuzzer_test("blink_json_parser_fuzzer") {
  sources = [
    "json/json_parser_fuzzer.cc",
  ]
  deps = [
    ":blink_fuzzer_test_support",
    ":platform",
  ]
  dict = "//testing/libfuzzer/fuzzers/dicts/json.dict"
}

# Fuzzer for blink::FeaturePolicy.
fuzzer_test("feature_policy_fuzzer") {
  sources = [
    "feature_policy/feature_policy_fuzzer.cc",
  ]
  deps = [
    ":blink_fuzzer_test_support",
    ":platform",
  ]
  dict = "//testing/libfuzzer/fuzzers/dicts/feature_policy.dict"
  seed_corpus = "//testing/libfuzzer/fuzzers/feature_policy_corpus"
}

fuzzer_test("blink_harfbuzz_shaper_fuzzer") {
  sources = [
    "fonts/shaping/harfbuzz_shaper_fuzzer.cc",
  ]
  deps = [
    ":blink_fuzzer_test_support",
    ":platform",
    "//third_party/icu",
  ]
  libfuzzer_options = [ "max_len=256" ]
}

fuzzer_test("blink_http_parsers_fuzzer") {
  sources = [
    "network/http_parsers_fuzzer.cc",
  ]
  deps = [
    ":blink_fuzzer_test_support",
    ":platform",
  ]
  dict = "network/HTTPParsersFuzzer.dict"
}

# Fuzzer template for WTF::TextCodec.
template("blink_text_codec_fuzzer") {
  forward_variables_from(invoker, "*")
  config(target_name + "_config") {
    defines = [ "$target_name" ]
  }
  name = target_name
  fuzzer_test("blink_text_codec_" + name + "_fuzzer") {
    sources = [
      "text_codec_fuzzer.cc",
    ]
    deps = [
      ":blink_fuzzer_test_support",
      ":platform",
    ]
    additional_configs = [ ":" + name + "_config" ]
    seed_corpus = "text_codec_fuzzer_seed_corpus"
  }
}

blink_text_codec_fuzzer("UTF_8") {
}

blink_text_codec_fuzzer("WINDOWS_1252") {
}

# NOTE: These are legacy unit tests and tests that require a Platform
# object. Do not add more unless the test requires a Platform object.
# These tests are a part of the webkit_unit_tests binary.
jumbo_source_set("unit_tests") {
  testonly = true
  visibility = []
  visibility = [ "//third_party/blink/renderer/*" ]
  sources = [
    "graphics/canvas_2d_layer_bridge_test.cc",
    "graphics/canvas_color_params_test.cc",
    "graphics/canvas_resource_test.cc",
    "graphics/color_correction_test_utils.cc",
    "graphics/compositor_mutator_impl_test.cc",
    "graphics/deferred_image_decoder_test.cc",
    "graphics/gpu/drawing_buffer_software_rendering_test.cc",
    "graphics/graphics_layer_test.cc",
    "graphics/image_decoding_store_test.cc",
    "graphics/image_frame_generator_test.cc",
    "graphics/image_layer_chromium_test.cc",
    "graphics/offscreen_canvas_frame_dispatcher_test.cc",
    "graphics/test/fake_canvas_resource_host.h",
    "graphics/test/fake_gles2_interface.h",
    "graphics/test/fake_web_graphics_context_3d_provider.h",
    "graphics/test/mock_image_decoder.h",
    "graphics/test/mock_paint_canvas.h",
    "graphics/test/stub_image.h",

    # Tests migrated from the web/tests directory.
    "exported/web_image_test.cc",
    "exported/web_url_request_test.cc",
    "exported/web_url_response_test.cc",
    "timer_perf_test.cc",
  ]

  configs += [
    ":blink_platform_pch",
    "//third_party/blink/renderer:config",
    "//third_party/blink/renderer:inside_blink",
  ]

  deps = [
    ":test_support",
    "//testing/gmock",
    "//testing/gtest",
  ]
}
