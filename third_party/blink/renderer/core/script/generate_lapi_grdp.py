#!/usr/bin/env python
# Copyright (c) 2019 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import sys
import os
import re


def main():
    core_script_path = os.path.dirname(sys.argv[0])

    # The path to the directory containing layered API files.
    input_path = os.path.join(core_script_path, 'resources/layered_api')

    # Relative path from the main grd file; in this case,
    # third_party/blink/public/blink_resources.grd.
    input_relative_path = '../renderer/core/script/resources/layered_api'

    # Output .grdp file.
    output_grdp_file = open(
        os.path.join(core_script_path, 'resources/layered_api/resources.grdp'),
        'w')

    # Output layered_api_resources.h file.
    output_header_file = open(
        os.path.join(core_script_path, 'layered_api_resources.h'), 'w')

    # Output layered_api_module.h file.
    output_module_header_file = open(
        os.path.join(core_script_path, 'layered_api_module.h'), 'w')

    print >> output_grdp_file, '''<?xml version="1.0" encoding="utf-8"?>
<grit-part>
  <!-- Layered API scripts. This file is generated by
       core/script/generate_lapi_grdp.py and shouldn't modified manually.
       A corresponding header file (layered_api_resources.h) is also generated.
       The paths are relative to the main grd file, i.e.
       third_party/blink/public/blink_resources.grd.
    -->'''

    resource_list_in_header_file = ''
    # A list of (name, path)
    modules = []
    for root, _, filenames in sorted(os.walk(input_path)):
        # A directory represents a built-in module if
        #  - it contains index.mjs (web-exposed module) or
        #  - the directory name is 'internal' (private module)
        if 'index.mjs' in filenames or re.search(r'\binternal$', root):
            # Get e.g. "kKvStorage" for kv-storage.
            module_name = os.path.relpath(root, input_path)
            module_name = "k" + re.sub(r'\W', '', module_name.title())
            modules.append((module_name, root))

    for module_name, module_path in modules:
        for root, _, filenames in sorted(os.walk(module_path)):
            for filename in sorted(filenames):
                if filename.startswith('.') or filename.startswith(
                        'README') or filename.startswith('OWNERS'):
                    continue
                relpath = os.path.relpath(os.path.join(root, filename), input_path)
                relpath = relpath.replace('\\', '/')
                resource_id = relpath
                resource_id = resource_id.replace('/', '_')
                resource_id = resource_id.replace('-', '_')
                resource_id = resource_id.replace('.', '_')
                resource_id = resource_id.upper()
                resource_id = "IDR_LAYERED_API_" + resource_id
                resource_list_in_header_file += \
                    '    {"%s",\n     %s,\n     Module::%s},\n' % (relpath, resource_id, module_name)
                print >> output_grdp_file, (
                    '  <include name="%s" file="%s/%s" type="BINDATA" skip_minify="true" compress="gzip"/>'
                    % (resource_id, input_relative_path, relpath))
            resource_list_in_header_file += '\n'
    print >> output_grdp_file, '</grit-part>'

    module_list_in_header_file = ''
    for module, _ in modules:
        module_list_in_header_file += ('  %s,\n' % module)

    print >> output_module_header_file, '''// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_RENDERER_CORE_SCRIPT_LAYERED_API_MODULE_H_
#define THIRD_PARTY_BLINK_RENDERER_CORE_SCRIPT_LAYERED_API_MODULE_H_

// This file is generated by
// core/script/generate_lapi_grdp.py and shouldn't modified manually.
// A corresponding grdp file (layered_api_resources.grdp) is also generated.

namespace blink {

namespace layered_api {

enum class Module {
%s};

}  // namespace layered_api

}  // namespace blink

#endif  // THIRD_PARTY_BLINK_RENDERER_CORE_SCRIPT_LAYERED_API_MODULE_H_''' % \
        module_list_in_header_file

    print >> output_header_file, '''// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "third_party/blink/public/resources/grit/blink_resources.h"
#include "third_party/blink/renderer/core/script/layered_api_module.h"

#ifndef THIRD_PARTY_BLINK_RENDERER_CORE_SCRIPT_LAYERED_API_RESOURCES_H_
#define THIRD_PARTY_BLINK_RENDERER_CORE_SCRIPT_LAYERED_API_RESOURCES_H_

// This file is generated by
// core/script/generate_lapi_grdp.py and shouldn't modified manually.
// A corresponding grdp file (layered_api_resources.grdp) is also generated.

// This file should be included only once from core/script/layered_api.cc.

namespace blink {

namespace layered_api {

namespace {

struct LayeredAPIResource {
  const char* path;
  int resource_id;
  Module module;
};

const LayeredAPIResource kLayeredAPIResources[] = {
%s};

}  // namespace

}  // namespace layered_api

}  // namespace blink

#endif  // THIRD_PARTY_BLINK_RENDERER_CORE_SCRIPT_LAYERED_API_RESOURCES_H_''' % \
        resource_list_in_header_file

    output_grdp_file.close()
    output_header_file.close()
    output_module_header_file.close()


if __name__ == '__main__':
    main()
