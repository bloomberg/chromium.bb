{% from "templates/macros.tmpl" import license, source_files_for_generated_file %}
{{ license() }}

{{source_files_for_generated_file(template_file, input_files)}}

#ifndef {{header_guard}}
#define {{header_guard}}

{% if export == 'CORE_EXPORT' %}
#include "third_party/blink/renderer/core/core_export.h"
{% endif %}
#include "third_party/blink/renderer/core/dom/qualified_name.h"
#include <memory>

namespace blink {

class {{namespace}}QualifiedName : public QualifiedName { };

namespace {{namespace}}Names {

{% set symbol_export = '%s ' % export if export else '' %}
// Namespace
{{symbol_export}}extern const WTF::AtomicString& {{namespace_prefix}}NamespaceURI;

// Tags
{% for tag in tags|sort %}
{{symbol_export}}extern const blink::{{namespace}}QualifiedName& {{tag|symbol}}Tag;
{% endfor %}

// Attributes
{% for attr in attrs|sort %}
{{symbol_export}}extern const blink::QualifiedName& {{attr|symbol}}Attr;
{% endfor %}

{% if tags %}
const unsigned {{namespace}}TagsCount = {{tags|count}};
{{symbol_export}}std::unique_ptr<const {{namespace}}QualifiedName*[]> get{{namespace}}Tags();
{% endif %}

const unsigned {{namespace}}AttrsCount = {{attrs|count}};
{% if namespace != 'HTML' %}
std::unique_ptr<const QualifiedName*[]> get{{namespace}}Attrs();
{% endif %}

void init();

}  // namespace {{namespace}}Names
}  // namespace blink

#endif  // {{header_guard}}
