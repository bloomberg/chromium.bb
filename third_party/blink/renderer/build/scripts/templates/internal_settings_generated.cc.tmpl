{% from "templates/macros.tmpl" import license, source_files_for_generated_file %}
{{ license() }}

{{source_files_for_generated_file(template_file, input_files)}}

#include "{{primary_header_name}}"

#include "third_party/blink/renderer/core/page/page.h"
#include "third_party/blink/renderer/core/frame/settings.h"

namespace blink {

InternalSettingsGenerated::InternalSettingsGenerated(Page* page)
    : m_page(page)
    {% for setting in settings if setting.type|to_idl_type %}
    , m_{{setting.name}}(page->GetSettings().Get{{setting.name.to_upper_camel_case()}}())
    {% endfor %}
{
}

InternalSettingsGenerated::~InternalSettingsGenerated() {}

void InternalSettingsGenerated::resetToConsistentState() {
  {% for setting in settings if setting.type|to_idl_type %}
  m_page->GetSettings().Set{{setting.name.to_upper_camel_case()}}(m_{{setting.name}});
  {% endfor %}
}
{% for setting in settings if setting.type|to_idl_type %}

void InternalSettingsGenerated::set{{setting.name.to_upper_camel_case()}}({{setting.type|to_passing_type}} {{setting.name}}) {
  m_page->GetSettings().Set{{setting.name.to_upper_camel_case()}}({{setting.name}});
}
{% endfor %}

void InternalSettingsGenerated::Trace(Visitor* visitor) {
  visitor->Trace(m_page);
  ScriptWrappable::Trace(visitor);
}

} // namespace blink
