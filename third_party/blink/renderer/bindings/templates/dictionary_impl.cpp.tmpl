{% from 'dictionary_impl_common.cpp.tmpl' import dictionary_setter_impl with context %}
{% filter format_blink_cpp_source_code %}

{% include 'copyright_block.txt' %}
#include "{{this_include_header_path}}"

{% for filename in cpp_includes %}
#include "{{filename}}"
{% endfor %}

namespace blink {

{# Constructor #}
{{cpp_class}}::{{cpp_class}}() {
  {% for member in members if member.cpp_default_value %}
  {{member.setter_name}}({{member.cpp_default_value}});
  {% endfor %}
}

{{cpp_class}}::~{{cpp_class}}() {}

{{cpp_class}}::{{cpp_class}}(const {{cpp_class}}&) = default;

{{cpp_class}}& {{cpp_class}}::operator=(const {{cpp_class}}&) = default;

{% for member in members if not member.setter_inline %}
{{dictionary_setter_impl(member)}}
{% endfor %}

void {{cpp_class}}::Trace(blink::Visitor* visitor) {
  {% for member in members if member.is_traceable %}
  visitor->Trace({{member.cpp_name}}_);
  {% endfor %}
  {% if parent_cpp_class %}
  {{parent_cpp_class}}::Trace(visitor);
  {% endif %}
}

}  // namespace blink

{% endfilter %}{# format_blink_cpp_source_code #}
