<?xml version="1.0" encoding="UTF-8"?>
<protocol name="color_space_unstable_v1">

  <copyright>
    Copyright 2019 The Chromium Authors.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice (including the next
    paragraph) shall be included in all copies or substantial portions of the
    Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
  </copyright>

  <interface name="zcr_color_space_v1" version="1">
    <description summary="Protocol for setting the color space of a wl_surface">
      This protocol specifies a an interface used to set the color space
      information (primaries, transfer function, range, matrix) for a wl_surface
      to enable correct color output for non-sRGB content.

      Warning! The protocol described in this file is experimental and backward
      incompatible changes may be made. Backward compatible changes may be added
      together with the corresponding interface version bump. Backward
      incompatible changes are done by bumping the version number in the
      protocol and interface names and resetting the interface version. Once the
      protocol is to be declared stable, the 'z' prefix and the version number
      in the protocol and interface names are removed and the interface version
      number is reset.
    </description>

    <request name="destroy" type="destructor">
      <description summary="unbinds the color space interface">
        Informs the server this interface will no longer be used. This does not
        have any effect on wl_surface objects that have been modified through
        this interface.
      </description>
    </request>

    <enum name="error">
      <entry name="invalid_primaries" value="0"
             summary="the specified primaries are invalid"/>
      <entry name="invalid_transfer_function" value="1"
             summary="the specified transfer function is invalid"/>
      <entry name="invalid_range" value="2"
             summary="the specified range is invalid"/>
      <entry name="invalid_matrix" value="3"
             summary="the specified matrix is invalid"/>
    </enum>

    <enum name="primaries">
      <entry name="bt709" value="0"
             summary="BT.709, sRGB (HDTV)"/>
      <entry name="bt470m" value="1"
             summary="NTSC (Original, replaced by smpte170m)"/>
      <entry name="bt470bg" value="2"
             summary="PAL/SECAM (Original, replaced by smpte170m)"/>
      <entry name="smpte170m" value="3"
             summary="NTSC/PAL (SDTV)"/>
      <entry name="smpte240m" value="4"
             summary="HDTV (Original, replaced by bt709)"/>
      <entry name="film" value="5"
             summary="Generic film (color filters using Illuminant C)"/>
      <entry name="bt2020" value="6"
             summary="UHDTV"/>
      <entry name="smptest428_1" value="7"
             summary="D-Cinema"/>
      <entry name="smptest431_2" value="8"
             summary="DCI-P3"/>
      <entry name="smptest432_1" value="9"
             summary="Display P3"/>
      <entry name="xyz_d50" value="10"
             summary="XYZ color space with D50 white point"/>
      <entry name="adobe_rgb" value="11"
             summary="Adobe RGB"/>
    </enum>

    <enum name="transfer_function">
      <entry name="bt709" value="0"
             summary="BT.709, sRGB (HDTV)"/>
      <entry name="gamma18" value="1"
             summary="Gamma curve 1.8"/>
      <entry name="gamma22" value="2"
             summary="Gamma curve 2.2"/>
      <entry name="gamma24" value="3"
             summary="Gamma curve 2.4"/>
      <entry name="gamma28" value="4"
             summary="Gamma curve 2.8"/>
      <entry name="smpte170m" value="5"
             summary="NTSC/PAL (SDTV)"/>
      <entry name="smpte240m" value="6"
             summary="HDTV (Original, replaced by bt709)"/>
      <entry name="linear" value="7"
             summary="Linear transfer function"/>
      <entry name="log" value="8"
             summary="Logarithmic transfer function"/>
      <entry name="log_sqrt" value="9"
             summary="Logarithmic square root transfer function"/>
      <entry name="iec61966_2_4" value="10"
             summary="IEC 61966-2-4 transfer function"/>
      <entry name="bt1361_ecg" value="11"
             summary="ITU-BT.1361 ECG"/>
      <entry name="iec61966_2_1" value="12"
             summary="sRGB, IEC 61966-2-1 transfer function"/>
      <entry name="bt2020_10" value="13"
             summary="BT.2020 10 bit transfer function"/>
      <entry name="bt2020_12" value="14"
             summary="BT.2020 12 bit transfer function"/>
      <entry name="smptest2084" value="15"
             summary="SMPTE ST 2084 (PQ)"/>
      <entry name="smptest428_1" value="16"
             summary="D-Cinema transfer function"/>
      <entry name="arib_std_b67" value="17"
             summary="HLG transfer function"/>
      <entry name="smptest2084_non_hdr" value="18"
             summary="This is an ad-hoc transfer function that decodes SMPTE
                      2084 content into a [0, 1] range more or less suitable for
                      viewing on a non-hdr display"/>
      <entry name="iec61966_2_1_hdr" value="19"
             summary="The same as IEC61966_2_1 on the interval [0, 1], with the
                      nonlinear segment continuing beyond 1 and point symmetry
                      defining values below 0"/>
      <entry name="linear_hdr" value="20"
             summary="The same as linear but is defined for all real values"/>
    </enum>

    <enum name="matrix">
      <entry name="rgb" value="0"
             summary="Standard RGB components"/>
      <entry name="bt709" value="1"
             summary="BT.709 (HDTV) YUV"/>
      <entry name="fcc" value="2"
             summary="NTSC (Original, replaced by smpte170m) YUV"/>
      <entry name="bt470bg" value="3"
             summary="PAL/SECAM (Original, replaced by smpte170m) YUV"/>
      <entry name="smpte170m" value="4"
             summary="NTSC/PAL (SDTV) YUV"/>
      <entry name="smpte240m" value="5"
             summary="HDTV (Original, replaced by bt709) YUV"/>
      <entry name="ycocg" value="6"
             summary="YCoCg components"/>
      <entry name="bt2020_ncl" value="7"
             summary="BT.2020 YUV"/>
      <entry name="bt2020_cl" value="8"
             summary="BT.2020 RYB"/>
      <entry name="ydzdx" value="9"
             summary="YDZDX components"/>
      <entry name="gbr" value="10"
             summary="GBR component layout"/>
    </enum>

    <enum name="range">
      <entry name="limited" value="0"
             summary="Limited (16-235 for 8-bit)"/>
      <entry name="full" value="1"
             summary="Full (0-255 for 8-bit)"/>
    </enum>

    <request name="set_color_space">
      <description summary="sets the color space for a surface">
        This sets the full set of color space properties for a surface to enable
        proper color conversion for compositing.  If any of these are invalid
        then an error is raised.  This is double-buffered and takes effect on
        the next commit of the surface.  It's the responsibility of the
        compositor to do the necessary color conversions.
      </description>
      <arg name="surface" type="object" interface="wl_surface"
           summary="surface"/>
      <arg name="primaries" type="uint"
           summary="primaries and white point"/>
      <arg name="transfer_function" type="uint"
           summary="electro-optical transfer function"/>
      <arg name="matrix" type="uint"
           summary="matrix for conversion to rgb" />
      <arg name="range" type="uint"
           summary="value range used by the pixels"/>
    </request>

  </interface>

</protocol>
