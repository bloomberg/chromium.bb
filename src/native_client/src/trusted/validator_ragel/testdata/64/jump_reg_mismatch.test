@hex:
  # Models a jump where the mask and the jump registers don't match.
  # and %ebx, $~0x1f
  83 e3 e0
  # add %rbx, %r15
  4c 01 fb
  # jmp %rax
  ff e0
@dis:
     0:	83 e3 e0                                     	and    $0xffffffe0,%ebx
     3:	4c 01 fb                                     	add    %r15,%rbx
     6:	ff e0                                        	jmpq   *%rax
@rdfa_output:
  6: unrecognized instruction
  return code: 1
@spec:
  0: ('nacljump64/naclcall64: registers do not match (%rbx, %rbx, %rax)', [Instruction(0x0: 83 e3 e0  and $0xffffffe0,%ebx), Instruction(0x3: 4c 01 fb  add %r15,%rbx), Instruction(0x6: ff e0  jmpq *%rax)])
  6: unrecognized instruction 'jmpq *%rax'
