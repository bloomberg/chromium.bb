@hex:
  # test 4: a big chunk of code whose origin is not clear.
  8d 4c 24 04
  83 e4 f0
  ff 71 fc
  55
  89 e5
  51
  66 90
  83 ec 24
  89 4d e8
  c7 45 f4 0a 00 00 00
  8b 45 e8
  83 38 01
  7f 2b
  8b 55 e8
  8b 42 04
  8b 00
  8d 76 00
  89 44 24 04
  c7 04 24 54 14 00 08
  e8 c0 02 00 00
  c7 04 24 01 00 00 00
  8d 74 26 00
  e8 c0 01 00 00
  8b 55 e8
  8b 42 04
  83 c0 04
  8b 00
  89 04 24
  66 90
  8d 74 26 00
  8d bc 27 00 00 00 00
  e8 90 09 00 00
  89 45 f8
  8b 45 e8
  83 38 02
  7e 25
  8b 55 e8
  66 90
  8b 42 04
  83 c0 08
  8b 00
  89 04 24
  e8 70 09 00 00
  89 45 f4
  8d b6 00 00 00 00
  8d bc 27 00 00 00 00
  8b 45 f4
  a3 28 2f 00 08
  eb 26
  8d b6 00 00 00 00
  c7 44 24 08 03 00 00 00
  c7 44 24 04 01 00 00 00
  8b 45 f4
  89 04 24
  90
  8d 74 26 00
  e8 20 00 00 00
  83 7d f8 00
  0f 9f c0
  83 6d f8 01
  84 c0
  8d 76 00
  75 ce
  c7 04 24 00 00 00 00
  66 90
  e8 20 01 00 00
  55
  89 e5
  83 ec 1c
  83 7d 08 01
  75 44
  8b 55 0c
  90
  8b 04 95 24 2f 00 08
  83 e8 01
  8d b6 00 00 00 00
  89 04 95 24 2f 00 08
  8b 55 10
  8d b6 00 00 00 00
  8b 04 95 24 2f 00 08
  83 c0 01
  8d b6 00 00 00 00
  89 04 95 24 2f 00 08
  eb 77
  8d b4 26 00 00 00 00
  8b 45 10
  8b 55 0c
  01 c2
  b8 06 00 00 00
  29 d0
  f4
@dis:
     0:	8d 4c 24 04                                  	lea    0x4(%esp),%ecx
     4:	83 e4 f0                                     	and    $0xfffffff0,%esp
     7:	ff 71 fc                                     	pushl  -0x4(%ecx)
     a:	55                                           	push   %ebp
     b:	89 e5                                        	mov    %esp,%ebp
     d:	51                                           	push   %ecx
     e:	66 90                                        	xchg   %ax,%ax
    10:	83 ec 24                                     	sub    $0x24,%esp
    13:	89 4d e8                                     	mov    %ecx,-0x18(%ebp)
    16:	c7 45 f4 0a 00 00 00                         	movl   $0xa,-0xc(%ebp)
    1d:	8b 45 e8                                     	mov    -0x18(%ebp),%eax
    20:	83 38 01                                     	cmpl   $0x1,(%eax)
    23:	7f 2b                                        	jg     0x50
    25:	8b 55 e8                                     	mov    -0x18(%ebp),%edx
    28:	8b 42 04                                     	mov    0x4(%edx),%eax
    2b:	8b 00                                        	mov    (%eax),%eax
    2d:	8d 76 00                                     	lea    0x0(%esi),%esi
    30:	89 44 24 04                                  	mov    %eax,0x4(%esp)
    34:	c7 04 24 54 14 00 08                         	movl   $0x8001454,(%esp)
    3b:	e8 c0 02 00 00                               	call   0x300
    40:	c7 04 24 01 00 00 00                         	movl   $0x1,(%esp)
    47:	8d 74 26 00                                  	lea    0x0(%esi,%eiz,1),%esi
    4b:	e8 c0 01 00 00                               	call   0x210
    50:	8b 55 e8                                     	mov    -0x18(%ebp),%edx
    53:	8b 42 04                                     	mov    0x4(%edx),%eax
    56:	83 c0 04                                     	add    $0x4,%eax
    59:	8b 00                                        	mov    (%eax),%eax
    5b:	89 04 24                                     	mov    %eax,(%esp)
    5e:	66 90                                        	xchg   %ax,%ax
    60:	8d 74 26 00                                  	lea    0x0(%esi,%eiz,1),%esi
    64:	8d bc 27 00 00 00 00                         	lea    0x0(%edi,%eiz,1),%edi
    6b:	e8 90 09 00 00                               	call   0xa00
    70:	89 45 f8                                     	mov    %eax,-0x8(%ebp)
    73:	8b 45 e8                                     	mov    -0x18(%ebp),%eax
    76:	83 38 02                                     	cmpl   $0x2,(%eax)
    79:	7e 25                                        	jle    0xa0
    7b:	8b 55 e8                                     	mov    -0x18(%ebp),%edx
    7e:	66 90                                        	xchg   %ax,%ax
    80:	8b 42 04                                     	mov    0x4(%edx),%eax
    83:	83 c0 08                                     	add    $0x8,%eax
    86:	8b 00                                        	mov    (%eax),%eax
    88:	89 04 24                                     	mov    %eax,(%esp)
    8b:	e8 70 09 00 00                               	call   0xa00
    90:	89 45 f4                                     	mov    %eax,-0xc(%ebp)
    93:	8d b6 00 00 00 00                            	lea    0x0(%esi),%esi
    99:	8d bc 27 00 00 00 00                         	lea    0x0(%edi,%eiz,1),%edi
    a0:	8b 45 f4                                     	mov    -0xc(%ebp),%eax
    a3:	a3 28 2f 00 08                               	mov    %eax,0x8002f28
    a8:	eb 26                                        	jmp    0xd0
    aa:	8d b6 00 00 00 00                            	lea    0x0(%esi),%esi
    b0:	c7 44 24 08 03 00 00 00                      	movl   $0x3,0x8(%esp)
    b8:	c7 44 24 04 01 00 00 00                      	movl   $0x1,0x4(%esp)
    c0:	8b 45 f4                                     	mov    -0xc(%ebp),%eax
    c3:	89 04 24                                     	mov    %eax,(%esp)
    c6:	90                                           	nop
    c7:	8d 74 26 00                                  	lea    0x0(%esi,%eiz,1),%esi
    cb:	e8 20 00 00 00                               	call   0xf0
    d0:	83 7d f8 00                                  	cmpl   $0x0,-0x8(%ebp)
    d4:	0f 9f c0                                     	setg   %al
    d7:	83 6d f8 01                                  	subl   $0x1,-0x8(%ebp)
    db:	84 c0                                        	test   %al,%al
    dd:	8d 76 00                                     	lea    0x0(%esi),%esi
    e0:	75 ce                                        	jne    0xb0
    e2:	c7 04 24 00 00 00 00                         	movl   $0x0,(%esp)
    e9:	66 90                                        	xchg   %ax,%ax
    eb:	e8 20 01 00 00                               	call   0x210
    f0:	55                                           	push   %ebp
    f1:	89 e5                                        	mov    %esp,%ebp
    f3:	83 ec 1c                                     	sub    $0x1c,%esp
    f6:	83 7d 08 01                                  	cmpl   $0x1,0x8(%ebp)
    fa:	75 44                                        	jne    0x140
    fc:	8b 55 0c                                     	mov    0xc(%ebp),%edx
    ff:	90                                           	nop
   100:	8b 04 95 24 2f 00 08                         	mov    0x8002f24(,%edx,4),%eax
   107:	83 e8 01                                     	sub    $0x1,%eax
   10a:	8d b6 00 00 00 00                            	lea    0x0(%esi),%esi
   110:	89 04 95 24 2f 00 08                         	mov    %eax,0x8002f24(,%edx,4)
   117:	8b 55 10                                     	mov    0x10(%ebp),%edx
   11a:	8d b6 00 00 00 00                            	lea    0x0(%esi),%esi
   120:	8b 04 95 24 2f 00 08                         	mov    0x8002f24(,%edx,4),%eax
   127:	83 c0 01                                     	add    $0x1,%eax
   12a:	8d b6 00 00 00 00                            	lea    0x0(%esi),%esi
   130:	89 04 95 24 2f 00 08                         	mov    %eax,0x8002f24(,%edx,4)
   137:	eb 77                                        	jmp    0x1b0
   139:	8d b4 26 00 00 00 00                         	lea    0x0(%esi,%eiz,1),%esi
   140:	8b 45 10                                     	mov    0x10(%ebp),%eax
   143:	8b 55 0c                                     	mov    0xc(%ebp),%edx
   146:	01 c2                                        	add    %eax,%edx
   148:	b8 06 00 00 00                               	mov    $0x6,%eax
   14d:	29 d0                                        	sub    %edx,%eax
   14f:	f4                                           	hlt    
@rdfa_output:
  4b: direct jump out of range
  eb: direct jump out of range
  137: direct jump out of range
  return code: 1
@spec:
  4b: jump into a middle of instruction (0x210)
  eb: jump into a middle of instruction (0x210)
  137: jump into a middle of instruction (0x1b0)
