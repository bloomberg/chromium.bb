# Copyright (c) 2014 The Native ClientAuthors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

assert(current_os == "nacl", "This file contains untrusted code only.")

static_library("nacl_dyncode_private") {
  cflags_c = []
  sources = [
    "dyncode_private.c",
  ]

  if (current_cpu == "pnacl") {
    cflags_c += [
      "-Wno-self-assign",
    ]
  }
  deps = [
    "//build/config/nacl:nacl_base",
  ]
}
static_library("nacl_sys_private") {
  cflags_c = []
  sources = [
    "null.c",
    "sysbrk.c",
  ]

  if (current_cpu == "pnacl") {
    cflags_c += [
      "-Wno-self-assign",
    ]
  }
  deps = [
    "//build/config/nacl:nacl_base",
  ]
}
static_library("imc_syscalls") {
  cflags_c = []
  sources = [
    "imc_accept.c",
    "imc_connect.c",
    "imc_makeboundsock.c",
    "imc_mem_obj_create.c",
    "imc_recvmsg.c",
    "imc_sendmsg.c",
    "imc_socketpair.c",
  ]

  if (current_cpu == "pnacl") {
    cflags_c += [
      "-Wno-self-assign",
    ]
  }
  deps = [
    "//build/config/nacl:nacl_base",
  ]
}
static_library("nacl_exception_private") {
  cflags_c = []
  sources = [
    "nacl_exception_private.c",
  ]

  if (current_cpu == "pnacl") {
    cflags_c += [
      "-Wno-self-assign",
    ]
  }
  deps = [
    "//build/config/nacl:nacl_base",
  ]
}
static_library("nacl_list_mappings_private") {
  cflags_c = []
  sources = [
    "list_mappings_private.c",
  ]

  if (current_cpu == "pnacl") {
    cflags_c += [
      "-Wno-self-assign",
    ]
  }
  deps = [
    "//build/config/nacl:nacl_base",
  ]
}
static_library("nacl_dyncode") {
  cflags_c = []
  sources = [
    "dyncode.c",
  ]

  if (current_cpu == "pnacl") {
    cflags_c += [
      "-Wno-self-assign",
    ]
  }
  deps = [
    "//build/config/nacl:nacl_base",
  ]
}
static_library("nacl") {
  cflags_c = [ "-std=c99" ]
  sources = [
    "gc_hooks.c",
    "nacl_irt.c",
    "nacl_irt_init.c",
    "nacl_random.c",
    "nacl_tls_get.c",
    "nacl_tls_init.c",
  ]

  if (current_os != "glibc") {
    sources += [
      "_exit.c",
      "abort.c",
      "access.c",
      "chdir.c",
      "chmod.c",
      "clock.c",
      "clock_getres.c",
      "clock_gettime.c",
      "close.c",
      "dup.c",
      "eaccess.c",
      "fchdir.c",
      "fchmod.c",
      "fdatasync.c",
      "fstat.c",
      "fsync.c",
      "ftruncate.c",
      "getcwd.c",
      "getcwd_without_malloc.c",
      "getdents.c",
      "gethostname.c",
      "getpagesize.c",
      "getpid.c",
      "gettimeofday.c",
      "htonl.c",
      "htons.c",
      "isatty.c",
      "link.c",
      "lock.c",
      "lseek.c",
      "lstat.c",
      "malloc.c",
      "mkdir.c",
      "mmap.c",
      "mprotect.c",
      "munmap.c",
      "nacl_add_tp.c",
      "nacl_ext_supply.c",
      "nacl_interface_query.c",
      "nacl_irt_fdio.c",
      "nacl_irt_filename.c",
      "nacl_read_tp.c",
      "nanosleep.c",
      "ntohl.c",
      "ntohs.c",
      "open.c",
      "pthread_initialize_minimal.c",
      "pthread_stubs.c",
      "random.c",
      "read.c",
      "readlink.c",
      "rename.c",
      "rmdir.c",
      "sbrk.c",
      "sched_yield.c",
      "sigblock.c",
      "siggetmask.c",
      "sigmask.c",
      "sigprocmask.c",
      "sigsetmask.c",
      "srandom.c",
      "stacktrace.c",
      "start.c",
      "stat.c",
      "stubs/_execve.c",
      "stubs/accept.c",
      "stubs/addmntent.c",
      "stubs/bind.c",
      "stubs/chown.c",
      "stubs/closelog.c",
      "stubs/connect.c",
      "stubs/endgrent.c",
      "stubs/endmntent.c",
      "stubs/endpwent.c",
      "stubs/environ.c",
      "stubs/execvpe.c",
      "stubs/fchown.c",
      "stubs/fcntl.c",
      "stubs/fork.c",
      "stubs/freeaddrinfo.c",
      "stubs/fstatvfs.c",
      "stubs/gai_strerror.c",
      "stubs/get_current_dir_name.c",
      "stubs/getaddrinfo.c",
      "stubs/getdtablesize.c",
      "stubs/getegid.c",
      "stubs/geteuid.c",
      "stubs/getgid.c",
      "stubs/getgrent.c",
      "stubs/getgrgid.c",
      "stubs/getgrgid_r.c",
      "stubs/getgrnam.c",
      "stubs/getgroups.c",
      "stubs/gethostbyaddr.c",
      "stubs/gethostbyname.c",
      "stubs/getlogin.c",
      "stubs/getmntent.c",
      "stubs/getnameinfo.c",
      "stubs/getpeername.c",
      "stubs/getpgrp.c",
      "stubs/getppid.c",
      "stubs/getpwent.c",
      "stubs/getpwnam.c",
      "stubs/getpwnam_r.c",
      "stubs/getpwuid.c",
      "stubs/getpwuid_r.c",
      "stubs/getrlimit.c",
      "stubs/getrusage.c",
      "stubs/getservbyname.c",
      "stubs/getservbyport.c",
      "stubs/getsockname.c",
      "stubs/getsockopt.c",
      "stubs/getuid.c",
      "stubs/getwd.c",
      "stubs/hasmntopt.c",
      "stubs/if_freenameindex.c",
      "stubs/if_indextoname.c",
      "stubs/if_nameindex.c",
      "stubs/if_nametoindex.c",
      "stubs/inet_ntoa.c",
      "stubs/inet_ntop.c",
      "stubs/initgroups.c",
      "stubs/ioctl.c",
      "stubs/issetugid.c",
      "stubs/kill.c",
      "stubs/lchown.c",
      "stubs/listen.c",
      "stubs/llseek.c",
      "stubs/major.c",
      "stubs/makedev.c",
      "stubs/minor.c",
      "stubs/mkfifo.c",
      "stubs/mknod.c",
      "stubs/msync.c",
      "stubs/openlog.c",
      "stubs/pipe.c",
      "stubs/poll.c",
      "stubs/pselect.c",
      "stubs/pthread_sigmask.c",
      "stubs/readv.c",
      "stubs/recv.c",
      "stubs/recvfrom.c",
      "stubs/recvmsg.c",
      "stubs/sched_get_priority_max.c",
      "stubs/sched_get_priority_min.c",
      "stubs/sched_setparam.c",
      "stubs/sched_setscheduler.c",
      "stubs/select.c",
      "stubs/send.c",
      "stubs/sendmsg.c",
      "stubs/sendto.c",
      "stubs/setegid.c",
      "stubs/seteuid.c",
      "stubs/setgid.c",
      "stubs/setgrent.c",
      "stubs/setgroups.c",
      "stubs/setmntent.c",
      "stubs/setpgid.c",
      "stubs/setpwent.c",
      "stubs/setrlimit.c",
      "stubs/setsid.c",
      "stubs/setsockopt.c",
      "stubs/settimeofday.c",
      "stubs/setuid.c",
      "stubs/shutdown.c",
      "stubs/sigaction.c",
      "stubs/signal.c",
      "stubs/sigsuspend.c",
      "stubs/sigvec.c",
      "stubs/socket.c",
      "stubs/socketpair.c",
      "stubs/statvfs.c",
      "stubs/syslog.c",
      "stubs/tcdrain.c",
      "stubs/tcflow.c",
      "stubs/tcflush.c",
      "stubs/tcgetattr.c",
      "stubs/tcsendbreak.c",
      "stubs/tcsetattr.c",
      "stubs/times.c",
      "stubs/ttyname.c",
      "stubs/ttyname_r.c",
      "stubs/umask.c",
      "stubs/vfork.c",
      "stubs/wait.c",
      "stubs/waitpid.c",
      "symlink.c",
      "sysconf.c",
      "tls.c",
      "truncate.c",
      "uname.c",
      "unlink.c",
      "utime.c",
      "utimes.c",
      "write.c",
    ]
  }

  if (current_os != "glibc" && current_cpu == "arm") {
    sources += [ "aeabi_read_tp.S" ]
  }

  if (current_cpu == "pnacl") {
    cflags_c += [
      "-Wno-self-assign",
    ]
  }

  deps = [
    "//build/config/nacl:nacl_base",
  ]
}

source_set("irt_random") {
  cflags_c = []
  sources = [
    "../../untrusted/irt/irt_random.c",
  ]

  if (current_cpu == "pnacl") {
    cflags_c += [
      "-Wno-self-assign",
    ]
  }

  deps = [
    "//build/config/nacl:nacl_base",
  ]
}
static_library("nacl_exception") {
  cflags_c = []
  sources = [
    "nacl_exception.c",
  ]

  if (current_cpu == "pnacl") {
    cflags_c += [
      "-Wno-self-assign",
    ]
  }

  deps = [
    "//build/config/nacl:nacl_base",
  ]
}
static_library("nacl_list_mappings") {
  cflags_c = []
  sources = [
    "list_mappings.c",
  ]

  if (current_cpu == "pnacl") {
    cflags_c += [
      "-Wno-self-assign",
    ]
  }

  deps = [
    "//build/config/nacl:nacl_base",
  ]
}

if (current_os != "glibc") {
  source_set("sys_private") {
    cflags_c = []
    sources = [
      "sys_private.c",
    ]

    if (current_cpu == "pnacl") {
      cflags_c += [
        "-Wno-self-assign",
      ]
    }

    deps = [
      "//build/config/nacl:nacl_base",
    ]
  }
  source_set("gc_hooks_private") {
    cflags_c = []
    sources = [
      "gc_hooks_private.c",
    ]

    if (current_cpu == "pnacl") {
      cflags_c += [
        "-Wno-self-assign",
      ]
    }
    deps = [
      "//build/config/nacl:nacl_base",
    ]
  }
  source_set("private_blockhook") {
    cflags_c = []
    sources = [
      "../../untrusted/irt/irt_blockhook.c",
    ]

    if (current_cpu == "pnacl") {
      cflags_c += [
        "-Wno-self-assign",
      ]
    }

    deps = [
      "//build/config/nacl:nacl_base",
    ]
  }
}
