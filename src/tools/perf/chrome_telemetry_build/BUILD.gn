# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/compiler/compiler.gni")
if (is_android) {
  # Pull in enable_chrome_android_internal and public_android_sdk
  import("//build/config/android/config.gni")
}
if (is_chromeos) {
  import("//build/config/chromeos/rules.gni")
}

group("telemetry_chrome_test") {
  testonly = true

  data_deps = [
    ":telemetry_chrome_test_without_chrome",
    "//third_party/perfetto/src/trace_processor:trace_processor_shell",
  ]
  data = []

  if (is_android) {
    data_deps += [
      ":telemetry_weblayer_apks",
      "//android_webview:system_webview_apk",
      "//android_webview/test:webview_instrumentation_apk",
      "//android_webview/tools/system_webview_shell:system_webview_shell_apk",
      "//chrome/android:chrome_public_apk",
      "//chrome/android:monochrome_public_apk",
      "//chrome/android:monochrome_public_bundle",
      "//chrome/android/webapk/shell_apk:maps_go_webapk",
    ]

    if (enable_chrome_android_internal) {
      data_deps += [ "//clank:telemetry_clank_test" ]
    }
  } else if (!is_fuchsia) {
    data_deps += [ "//chrome" ]
  }

  if (is_win) {
    data_deps += [ "//chrome:reorder_imports" ]
  }

  if (is_linux || is_chromeos) {
    data_deps += [ "//third_party/breakpad:dump_syms($host_toolchain)" ]

    # CrOS currently has issues with the locally compiled version of
    # crashpad_database_util, so only include it on traditional Linux
    # platforms.
    if (is_linux) {
      data_deps +=
          [ "//third_party/crashpad/crashpad/tools:crashpad_database_util" ]
    }
  }

  if (is_mac) {
    data_deps += [
      "//chrome:chrome_framework",
      "//chrome:chrome_helper_app_default",
      "//third_party/breakpad:dump_syms",
      "//third_party/crashpad/crashpad/tools:crashpad_database_util",
    ]
  }

  if (is_chromeos && is_chromeos_device) {
    data_deps += [
      "//:chromiumos_preflight",
      "//chromeos:cros_chrome_deploy",
      "//chromeos:cros_test_wrapper",
    ]
  }

  if (is_win && (symbol_level == 1 || symbol_level == 2)) {
    data_deps += [
      "//build/win:copy_cdb_to_output",
      "//third_party/crashpad/crashpad/tools:crashpad_database_util",
    ]
  }
}

group("telemetry_weblayer_apks") {
  testonly = true

  data_deps = []
  if (is_android) {
    data_deps += [
      "//weblayer/shell/android:weblayer_shell_system_webview_apk",

      # TODO(crbug.com/1022823): Remove the following two deps once our tooling
      # is configured to use weblayer_shell_system_webview_apk.
      "//weblayer/shell/android:weblayer_shell_apk",
      "//weblayer/shell/android:weblayer_support_apk",
    ]
  }
}

group("telemetry_chrome_test_without_chrome") {
  testonly = true

  data = [
    "//components/crash/content/tools/generate_breakpad_symbols.py",
    "//testing/scripts/common.py",
    "//testing/xvfb.py",
    "//tools/perf/chrome_telemetry_build/",
    "//tools/perf/core/",  # chrome_telemetry_build/ depends on core/
  ]
  data_deps = [
    "//third_party/catapult:telemetry_chrome_test_support",
    "//tools/metrics:metrics_python_tests",
  ]

  # Cr-Fuchsia doesn't support breakpad.
  if (!is_win && !is_fuchsia) {
    data_deps += [
      # This is defined for Windows, but is unused by Telemetry on
      # Windows, and including it can have issues when cross-compiling
      # for Arm-based Windows.
      "//third_party/breakpad:dump_syms",

      # These explicitly not defined for Windows builds in Breakpad.
      "//third_party/breakpad:minidump_dump",
      "//third_party/breakpad:minidump_stackwalk",
    ]
  }

  if (is_mac) {
    data += [
      # Required for the hermetic otool binary, which is required for
      # symbolizing minidumps on Mac.
      "//build/mac_files/xcode_binaries/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/",
    ]
  }

  if (is_android) {
    data += [
      # TODO(httpss://crbug.com/833808): Remove this once bots always set
      # CHROMIUM_OUTPUT_DIR correctly. Currently, this is necessary in order
      # for //build/android/pylib/constants/__init__.py to detect the output
      # directory, which tombstones.py depends on.
      "$root_out_dir/build.ninja",

      # These dependencies are necessary for running Telemetry tests in an
      # Android emulator.
      "//third_party/android_ndk/simpleperf/",
      "//third_party/android_sdk/public/",
      "//tools/android/avd/proto/",
    ]
    data_deps += [
      "//build/android:devil_chromium_py",
      "//build/android:stack_tools",
    ]
  } else if (!is_fuchsia) {
    data_deps += [ "//third_party/catapult/telemetry:bitmaptools" ]
  }
}
