# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a .pyl, or "Python Literal", file. You can treat it just like a
# .json file, with the following exceptions:
# * all keys must be quoted (use single quotes, please);
# * comments are allowed, using '#' syntax; and
# * trailing commas are allowed.

{
  # This is a map of builder group names -> builder names -> config names
  # (where each config name is a key in the 'configs' dict, below). MB uses
  # this dict to look up which config to use for a given bot.
  'builder_groups': {
    'chrome': {
      'chromeos-arm-generic-cfi-thin-lto-chrome': 'chromeos_arm-generic_cfi_thin_lto_official',
      'chromeos-betty-pi-arc-cfi-thin-lto-chrome': 'chromeos_betty-pi-arc_cfi_thin_lto_official',
      'chromeos-betty-pi-arc-chrome': 'chromeos_betty-pi-arc_include_unwind_tables_official_use_fake_dbus_clients',
      'chromeos-betty-pi-arc-chrome-beta': 'chromeos_betty-pi-arc_include_unwind_tables_official_use_fake_dbus_clients',
      'chromeos-betty-pi-arc-chrome-ltc': 'chromeos_betty-pi-arc_include_unwind_tables_official_use_fake_dbus_clients',
      'chromeos-betty-pi-arc-chrome-lts': 'chromeos_betty-pi-arc_include_unwind_tables_official_use_fake_dbus_clients',
      'chromeos-betty-pi-arc-chrome-stable': 'chromeos_betty-pi-arc_include_unwind_tables_official_use_fake_dbus_clients',
      'chromeos-eve-chrome': 'chromeos_eve_include_unwind_tables_official',
      'chromeos-eve-chrome-beta': 'chromeos_eve_include_unwind_tables_official',
      'chromeos-eve-chrome-ltc': 'chromeos_eve_include_unwind_tables_official',
      'chromeos-eve-chrome-lts': 'chromeos_eve_include_unwind_tables_official',
      'chromeos-eve-chrome-stable': 'chromeos_eve_include_unwind_tables_official',
      'chromeos-kevin-chrome': 'chromeos_kevin_include_unwind_tables_official',
      'chromeos-kevin-chrome-beta': 'chromeos_kevin_include_unwind_tables_official',
      'chromeos-kevin-chrome-ltc': 'chromeos_kevin_include_unwind_tables_official',
      'chromeos-kevin-chrome-lts': 'chromeos_kevin_include_unwind_tables_official',
      'chromeos-kevin-chrome-stable': 'chromeos_kevin_include_unwind_tables_official',
      'lacros-amd64-generic-chrome': 'chromeos_amd64-generic_lacros_official',
      # Don't include unwind tables for linux-/mac-/win-/win64-chrome builders.
      # They monitor binary size growth, which may be affected by the tables.
      'linux-chrome': 'official_goma',
      'linux64-trunk': 'official_goma',
      'linux-chrome-beta': 'official_goma',
      'linux-chrome-stable': 'official_goma',
      'linux-chromeos-chrome': 'official_goma_chromeos_include_unwind_tables',
      'linux-chromeos-beta': 'official_goma_chromeos_include_unwind_tables',
      'linux-chromeos-ltc': 'official_goma_chromeos_include_unwind_tables',
      'linux-chromeos-lts': 'official_goma_chromeos_include_unwind_tables',
      'linux-chromeos-stable': 'official_goma_chromeos_include_unwind_tables',
      'mac-chrome': 'official_goma_mac',
      'mac-chrome-beta': 'official_goma_mac',
      'mac-chrome-stable': 'official_goma_mac',
      'win-chrome': 'official_goma_x86',
      'win-chrome-beta': 'official_goma_x86',
      'win-chrome-stable': 'official_goma_x86',
      'win64-chrome': 'official_goma_x64',
      'win64-chrome-beta': 'official_goma_x64',
      'win64-chrome-stable': 'official_goma_x64',
    },
    'chrome.pgo': {
      'linux-pgo': 'official_goma_linux_pgo',
      'linux-pgo-beta': 'official_goma_linux_pgo',
      'linux-pgo-stable': 'official_goma_linux_pgo',
      'mac-pgo': 'official_goma_mac_pgo',
      'mac-pgo-beta': 'official_goma_mac_pgo',
      'mac-pgo-stable': 'official_goma_mac_pgo',
      'win32-pgo': 'official_goma_x86_pgo',
      'win32-pgo-beta': 'official_goma_x86_pgo',
      'win32-pgo-stable': 'official_goma_x86_pgo',
      'win64-pgo': 'official_goma_x64_pgo',
      'win64-pgo-beta': 'official_goma_x64_pgo',
      'win64-pgo-stable': 'official_goma_x64_pgo',
    },
    # Take care when changing any of these builders to ensure that you do not
    # include a configuration with 'chrome_with_codecs' since these builders
    # generate publicly advertised non-Official builds which are not allowed
    # to have proprietary codecs enabled.
    'chromium': {
      'android-archive-rel': 'android_without_codecs_release_bot_minimal_symbols',
      'android-archive-dbg': 'android_without_codecs_debug_bot',
      'android-official': 'android_official_optimize_goma',
      'fuchsia-official': 'fuchsia_official_optimize_goma',
      'linux-archive-rel': 'release_bot',
      'linux-archive-dbg': 'debug_bot',
      'linux-official': 'official_optimize_goma',
      'mac-archive-rel': 'release_bot_mac_strip_minimal_symbols',
      'mac-archive-dbg': 'debug_bot',
      'mac-official': 'official_optimize_goma',
      'win32-official': 'x86_official_optimize_goma',
      'win32-archive-rel': 'release_bot_x86_minimal_symbols_enable_archive_compression',
      'win32-archive-dbg': 'debug_bot_x86',
      'win-archive-rel': 'release_bot_minimal_symbols_enable_archive_compression',
      'win-archive-dbg': 'debug_bot',
      'win-official': 'official_optimize_goma',
    },

    'chromium.android': {
      'Android ASAN (dbg)': 'android_clang_asan_debug_bot',
      'Android arm Builder (dbg)': 'android_webview_google_debug_static_bot',
      'Android arm64 Builder (dbg)': 'android_webview_google_debug_static_bot_arm64',
      'Android x64 Builder (dbg)': 'android_debug_static_bot_x64',
      'Android x86 Builder (dbg)': 'android_debug_static_bot_x86',
      'Cast Android (dbg)': 'android_cast_debug_static_bot',
      'Deterministic Android': 'android_without_codecs_release_bot_minimal_symbols',
      'Deterministic Android (dbg)': 'android_debug_bot',

      'android-arm64-proguard-rel': 'android_release_bot_minimal_symbols_arm64_webview_google',
      'android-bfcache-rel': 'android_release_bot_minimal_symbols',
      'android-binary-size-generator': 'android_binary_size',
      'android-cronet-arm-dbg': 'android_cronet_debug_static_bot_arm_no_neon',
      'android-cronet-arm-rel': 'android_cronet_release_bot_minimal_symbols_arm_no_neon',
      'android-cronet-arm64-dbg': 'android_cronet_debug_static_bot_arm64',
      'android-cronet-arm64-rel': 'android_cronet_release_bot_minimal_symbols_arm64',
      'android-cronet-asan-arm-rel': 'android_cronet_release_bot_minimal_symbols_arm_no_neon_clang_asan',
      'android-cronet-marshmallow-arm64-perf-rel': 'android_cronet_release_bot_minimal_symbols_arm64',
      'android-cronet-x86-dbg': 'android_cronet_debug_static_bot_x86',
      'android-cronet-x86-rel': 'android_cronet_release_bot_minimal_symbols_x86',
      'android-incremental-dbg': 'android_incremental_debug_bot',
      'android-lollipop-arm-rel': 'android_release_bot_minimal_symbols_webview_google',

      # This bot must use the gpu_tests mixin to match 'Android FYI Release (Nexus 5X)'
      # on the chromium.gpu waterfall, which it mirrors via trybots.pyl.
      'android-marshmallow-arm64-rel': 'gpu_tests_android_release_bot_minimal_symbols_arm64_fastbuild',

      'android-marshmallow-x86-rel': 'android_release_bot_minimal_symbols_x86_fastbuild_resource_whitelisting_webview_google',
      'android-marshmallow-x86-rel-non-cq': 'android_release_bot_minimal_symbols_x86_fastbuild_resource_whitelisting_webview_google',
      'android-nougat-arm64-rel': 'android_release_bot_minimal_symbols_arm64_fastbuild_webview_google',
      'android-pie-arm64-rel': 'android_release_bot_minimal_symbols_arm64_webview_google',
      'android-pie-x86-rel': 'android_release_bot_minimal_symbols_x86_fastbuild_webview_google',
      'android-10-arm64-rel': 'android_release_bot_minimal_symbols_arm64_fastbuild_webview_google',
    },

    'chromium.android.fyi': {
      'Android WebView P FYI (rel)': 'android_release_bot_minimal_symbols_arm64_webview_google',
      'android-11-x86-fyi-rel': 'android_release_bot_minimal_symbols_x86_fastbuild_webview_google',
      'android-pie-arm64-wpt-rel-non-cq': 'android_release_bot_minimal_symbols_arm64_webview_google',
      'android-weblayer-x86-fyi-rel': 'android_release_bot_minimal_symbols_x86_fastbuild_webview_google',
      'android-weblayer-pie-x86-wpt-fyi-rel': 'android_release_bot_minimal_symbols_x86_fastbuild_webview_google',
      'android-weblayer-with-aosp-webview-x86-fyi-rel': 'android_release_bot_minimal_symbols_x86_fastbuild',
    },

    'chromium.angle': {
      'android-angle-arm64-builder': 'angle_specific_no_trace_android_release_trybot_arm64',
      'android-angle-chromium-arm64-builder': 'gpu_tests_android_release_trybot_arm64_fastbuild',
      'android-angle-perf-arm64-builder': 'angle_specific_android_vulkan_ndk_release_trybot_dcheck_off_arm64',
      'android-angle-vk-arm-builder': 'angle_specific_android_vulkan_ndk_release_trybot',
      'android-angle-vk-arm64-builder': 'angle_specific_android_vulkan_ndk_release_trybot_arm64',
      'fuchsia-angle-builder': 'angle_specific_release_trybot_fuchsia',
      'ios-angle-builder': 'angle_specific_release_trybot_ios',
      'linux-angle-builder': 'angle_specific_release_trybot',
      'linux-angle-chromium-builder': 'gpu_tests_release_trybot',
      'linux-ozone-angle-builder': 'angle_specific_ozone_linux_system_gbm_libdrm_release_trybot',
      'mac-angle-builder': 'angle_specific_release_trybot',
      'mac-angle-chromium-builder': 'gpu_tests_release_trybot_deterministic_mac',
      'win-angle-chromium-x64-builder': 'gpu_tests_release_trybot',
      'win-angle-chromium-x86-builder': 'gpu_tests_release_trybot_x86',
      'win-angle-x64-builder': 'angle_specific_release_trybot',
      'win-angle-x86-builder': 'angle_specific_release_trybot_x86',
    },

    'chromium.chromiumos': {
      'Linux ChromiumOS Full': 'chromeos_with_codecs_release_bot',

      'chromeos-amd64-generic-asan-rel': 'chromeos_amd64-generic_asan',
      'chromeos-amd64-generic-cfi-thin-lto-rel': 'chromeos_amd64-generic_cfi_thin_lto',
      'chromeos-amd64-generic-dbg': 'chromeos_amd64-generic_dbg',
      'chromeos-amd64-generic-lacros-dbg': 'chromeos_amd64-generic_lacros_dbg',
      'chromeos-amd64-generic-rel': 'chromeos_amd64-generic_use_fake_dbus_clients',
      'chromeos-arm-generic-dbg': 'chromeos_arm-generic_dbg',
      'chromeos-arm-generic-rel': 'chromeos_arm-generic',
      'chromeos-kevin-rel': 'chromeos_kevin',
      'lacros-amd64-generic-binary-size-rel': 'chromeos_amd64-generic_lacros_rel',
      'lacros-amd64-generic-rel': 'chromeos_amd64-generic_lacros_rel',
      'linux-chromeos-rel': 'chromeos_with_codecs_release_bot',
      'linux-chromeos-dbg': 'chromeos_with_codecs_debug_bot',
      'linux-lacros-builder-rel': 'lacros_on_linux_release_bot',
      'linux-lacros-tester-rel': 'lacros_on_linux_release_bot',
      'linux-cfm-rel': 'linux_cfm_release_bot',
    },

    'chromium.clang': {
      'CFI Linux CF': 'cfi_full_cfi_icall_cfi_diag_recover_release_static',
      'CFI Linux ToT': 'clang_tot_cfi_full_cfi_icall_cfi_diag_thin_lto_release_static_dcheck_always_on',
      'CrWinAsan': 'asan_clang_fuzzer_static_v8_heap_minimal_symbols_release_tot',
      'CrWinAsan(dll)': 'asan_clang_shared_v8_heap_minimal_symbols_release_tot',

      'linux-win_cross-rel': 'clang_tot_win_release_cross',
      'ToTAndroid': 'android_clang_tot_release_minimal_symbols',
      'ToTAndroid64': 'android_clang_tot_release_arm64',
      'ToTAndroidASan': 'android_clang_tot_asan',
      'ToTAndroid (dbg)': 'android_clang_tot_dbg',
      'ToTAndroidCFI': 'android_clang_tot_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on',
      'ToTAndroidOfficial': 'android_clang_tot_official_arm64',
      'ToTAndroid64': 'android_clang_tot_release_arm64',
      'ToTAndroid x64': 'android_clang_tot_x64',
      'ToTLinuxOfficial': 'clang_tot_official',
      'ToTLinux': 'clang_tot_linux_full_symbols_shared_release',
      'ToTLinuxCoverage': 'clang_tot_coverage_minimal_symbols_release',
      'ToTLinux (dbg)': 'clang_tot_shared_debug',
      'ToTLinuxASan': 'clang_tot_asan_lsan_static_release',
      'ToTLinuxASanLibfuzzer': 'libfuzzer_asan_clang_tot_release',
      'ToTLinuxMSan': 'clang_tot_msan_release',
      'ToTLinuxTSan': 'clang_tot_tsan_release',
      'ToTLinuxThinLTO': 'clang_tot_release_minimal_symbols_thin_lto_opt_static',
      'ToTLinuxUBSanVptr': 'clang_tot_ubsan_no_recover_hack_static_release',
      'ToTMac': 'clang_tot_minimal_symbols_shared_release',
      'ToTMacOfficial': 'mac_clang_tot_official',
      'ToTMacCoverage': 'clang_tot_coverage_minimal_symbols_release',
      'ToTMac (dbg)': 'clang_tot_shared_debug',
      'ToTMacASan': 'asan_disable_nacl_clang_tot_minimal_symbols_static_release',
      'ToTWin': 'clang_tot_official_minimal_symbols_static_release_x86',
      'ToTWin(dbg)': 'clang_tot_shared_debug_x86',
      'ToTWin(dll)': 'clang_tot_minimal_symbols_shared_release_x86_dcheck',
      'ToTWinOfficial': 'clang_tot_win_official_full_symbols_thin_lto_static_x86',
      'ToTWin64': 'clang_tot_official_minimal_symbols_static_release',
      'ToTWin64(dbg)': 'clang_tot_shared_debug',
      'ToTWin64(dll)': 'clang_tot_shared_release_dcheck',
      'ToTWinASanLibfuzzer': 'libfuzzer_windows_asan_clang_tot_release_bot',
      'ToTWinCFI': 'clang_tot_win_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on_x86',
      'ToTWinCFI64': 'clang_tot_win_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on',
      'ToTWindowsCoverage': 'clang_tot_coverage_minimal_symbols_release',
      'ToTWinThinLTO64': 'clang_tot_win_official_full_symbols_thin_lto_static',
      'ToTiOS': 'ios_clang_tot_xctest',
      'ToTiOSDevice': 'ios_clang_device_tot_xctest',
    },

    'chromium.dawn': {
      'Dawn Linux x64 Builder': 'dawn_tests_release_trybot',
      'Dawn Linux x64 DEPS Builder': 'dawn_tests_release_trybot',

      'Dawn Mac x64 Builder': 'dawn_tests_release_trybot',
      'Dawn Mac x64 DEPS Builder': 'dawn_tests_release_trybot',

      'Dawn Win10 x86 Builder': 'dawn_tests_release_trybot_x86',
      'Dawn Win10 x64 Builder': 'dawn_tests_release_trybot',
      'Dawn Win10 x86 DEPS Builder': 'dawn_tests_release_trybot_x86',
      'Dawn Win10 x64 DEPS Builder': 'dawn_tests_release_trybot',

      'Dawn Win10 x64 ASAN Release': 'dawn_tests_asan_release_trybot',
    },

    'chromium.devtools-frontend': {
      'DevTools Linux (chromium)': 'release_trybot_blink',
    },

    'chromium.fuzz': {
      'ASAN Debug': 'asan_lsan_debug_bot',
      'ASAN Release Media': 'asan_lsan_fuzzer_v8_heap_chromeos_codecs_release_bot',
      'ASAN Release': 'asan_lsan_fuzzer_v8_heap_release_bot',
      'ASan Debug (32-bit x86 with V8-ARM)': 'asan_v8_heap_debug_bot_hybrid',
      'ASan Release (32-bit x86 with V8-ARM)': 'asan_fuzzer_v8_heap_release_bot_hybrid',
      'ASan Release Media (32-bit x86 with V8-ARM)': 'asan_fuzzer_v8_heap_chromeos_codecs_release_bot_hybrid',
      'Afl Upload Linux ASan': 'afl_asan_shared_release_bot',
      'ChromiumOS ASAN Release': 'chromeos_asan_lsan_fuzzer_v8_heap_release_bot',
      'Libfuzzer Upload Chrome OS ASan': 'libfuzzer_chromeos_asan_release_bot',
      'Libfuzzer Upload Linux32 ASan': 'libfuzzer_asan_release_bot_x86',
      'Libfuzzer Upload Linux32 ASan Debug': 'libfuzzer_asan_debug_bot_x86',
      'Libfuzzer Upload Linux32 V8-ARM ASan': 'libfuzzer_asan_release_bot_x86_v8_arm',
      'Libfuzzer Upload Linux32 V8-ARM ASan Debug': 'libfuzzer_asan_debug_bot_x86_v8_arm',
      'Libfuzzer Upload Linux ASan': 'libfuzzer_asan_release_bot',
      'Libfuzzer Upload Linux ASan Debug': 'libfuzzer_asan_debug_bot',
      'Libfuzzer Upload Linux V8-ARM64 ASan': 'libfuzzer_asan_release_bot_v8_arm64',
      'Libfuzzer Upload Linux V8-ARM64 ASan Debug': 'libfuzzer_asan_debug_bot_v8_arm64',
      'Libfuzzer Upload Linux MSan': 'libfuzzer_msan_release_bot',
      'Libfuzzer Upload Linux UBSan': 'libfuzzer_ubsan_release_bot',
      'Libfuzzer Upload Mac ASan': 'libfuzzer_mac_asan_shared_release_bot',
      'Libfuzzer Upload Windows ASan': 'libfuzzer_windows_asan_release_bot',
      'MSAN Release (chained origins)': 'msan_release_bot',
      'MSAN Release (no origins)': 'msan_no_origins_release_bot',
      'Mac ASAN Release Media': 'asan_disable_nacl_fuzzer_v8_heap_chrome_with_codecs_release_bot',
      'Mac ASAN Release': 'asan_disable_nacl_fuzzer_v8_heap_release_bot',
      'TSAN Debug': 'tsan_disable_nacl_debug_bot',
      'TSAN Release': 'tsan_disable_nacl_release_bot',
      'UBSan Release': 'ubsan_release_bot',
      'UBSan vptr Release': 'ubsan_vptr_release_bot',
      'Win ASan Release Media': 'asan_fuzzer_v8_heap_chrome_with_codecs_release_bot',
      'Win ASan Release': 'asan_fuzzer_v8_heap_release_bot',
    },

    'chromium.fyi': {
      'Afl Upload Linux ASan': 'afl_asan_shared_release_bot',

      'Libfuzzer Upload Chrome OS ASan': 'libfuzzer_chromeos_asan_release_bot',
      'Libfuzzer Upload Linux ASan': 'libfuzzer_asan_release_bot',
      'Libfuzzer Upload Linux ASan (reclient)': 'libfuzzer_asan_release_bot_reclient',
      'Libfuzzer Upload Linux ASan Debug': 'libfuzzer_asan_debug_bot',
      'Libfuzzer Upload Linux MSan': 'libfuzzer_msan_release_bot',
      'Libfuzzer Upload Linux UBSan': 'libfuzzer_ubsan_release_bot',
      'Libfuzzer Upload Mac ASan': 'libfuzzer_mac_asan_shared_release_bot',
      'Libfuzzer Upload Windows ASan': 'libfuzzer_windows_asan_release_bot',

      'Linux Builder (reclient)': 'gpu_tests_release_bot_reclient',
      'Linux TSan Builder (goma cache silo)': 'tsan_disable_nacl_release_bot',
      'Linux TSan Builder (reclient)': 'tsan_disable_nacl_release_bot_reclient',
      
      'Linux Viz': 'release_trybot',
      'lacros-amd64-generic-rel-fyi': 'chromeos_amd64-generic_lacros_rel',
      'linux-ash-chromium-builder-fyi-rel': 'chromeos_with_codecs_release_bot',
      'linux-lacros-builder-fyi-rel': 'lacros_on_linux_release_bot',
      'linux-lacros-tester-fyi-rel': 'lacros_on_linux_release_bot',
      'Mac Builder Next': 'gpu_tests_release_bot_minimal_symbols',
      'Mac deterministic': 'release_bot_mac_strip_minimal_symbols_deterministic',
      'Mac deterministic (dbg)': 'debug_bot_deterministic',

      'Site Isolation Android': 'android_release_bot_minimal_symbols_arm64',
      'TSAN Debug (reclient)': 'tsan_disable_nacl_debug_bot_reclient',
      'TSAN Release (reclient)':  'tsan_disable_nacl_release_bot_reclient',
      'VR Linux': 'vr_release_bot',
      'Win 10 Fast Ring': 'release_trybot',
      'android-code-coverage': 'gpu_tests_android_release_bot_minimal_symbols_arm64_fastbuild_java_coverage',
      'android-code-coverage-native': 'gpu_tests_android_release_bot_no_symbols_arm64_fastbuild_native_coverage',
      'android-paeverywhere-arm-fyi-dbg': 'debug_bot_paeverywhere_arm',
      'android-paeverywhere-arm-fyi-rel': 'release_trybot_paeverywhere_arm',
      'android-paeverywhere-arm64-fyi-dbg': 'debug_bot_paeverywhere_arm64',
      'android-paeverywhere-arm64-fyi-rel': 'release_trybot_paeverywhere_arm64',
      'fuchsia-code-coverage': 'fuchsia_clang_code_coverage',
      'fuchsia-fyi-arm64-dbg': 'debug_bot_fuchsia_arm64',
      'fuchsia-fyi-arm64-rel': 'release_bot_fuchsia_arm64',
      'fuchsia-fyi-arm64-size': 'fuchsia_official_arm64_size',
      'fuchsia-fyi-x64-dbg': 'debug_bot_fuchsia',
      'fuchsia-fyi-x64-rel': 'release_bot_fuchsia',
      'ios13-beta-simulator': 'ios_simulator_debug_static_bot_xctest',
      'ios13-sdk-device': 'ios_device_release_static_bot_xctest',
      'ios13-sdk-simulator': 'ios_simulator_debug_static_bot_xctest',
      'ios14-beta-simulator': 'ios_simulator_debug_static_bot_xctest',
      'ios14-sdk-simulator': 'ios_simulator_debug_static_bot_xctest',
      'ios-asan': 'ios_simulator_release_static_asan_bot_xctest',
      'ios-simulator': 'ios_error',
      'ios-simulator-code-coverage': 'clang_code_coverage_ios_xctest',
      'ios-simulator-cr-recipe': 'ios_simulator_debug_static_bot_xctest',
      'ios-simulator-cronet': 'ios_cronet_xctest',
      'ios-simulator-multi-window': 'ios_simulator_debug_static_bot_multi_window_xctest',
      'ios-webkit-tot': 'ios_simulator_debug_static_bot_xctest',
      'linux-annotator-rel': 'release_bot',
      'linux-blink-animation-use-time-delta': 'debug_bot_enable_blink_animation_use_time_delta',
      'linux-blink-heap-concurrent-marking-tsan-rel': 'release_trybot_tsan',
      'linux-blink-heap-verification': 'release_bot_enable_blink_heap_verification_dcheck_always_on',
      'linux-blink-v8-oilpan': 'release_bot_enable_v8_oilpan_dcheck_always_on',
      'linux-chromeos-code-coverage': 'chromeos_with_codecs_release_bot_coverage',
      'linux-chromeos-js-code-coverage': 'chromeos_with_codecs_release_bot_javascript_coverage',
      'linux-chromium-tests-staging-builder': 'release_bot',
      'linux-code-coverage': 'clang_code_coverage',
      'linux-example-builder': 'release_bot',
      'linux-fieldtrial-rel': 'release_bot_minimal_symbols',
      'linux-paeverywhere-x64-fyi-dbg': 'debug_bot_paeverywhere_x64',
      'linux-paeverywhere-x64-fyi-rel': 'release_trybot_paeverywhere_x64',
      'linux-perfetto-rel': 'perfetto_release_bot',
      'linux-upload-perfetto': 'release_bot',
      'linux-wpt-fyi-rel': 'release_bot_minimal_symbols',
      'linux-wpt-identity-fyi-rel': 'release_bot_minimal_symbols',
      'linux-wpt-input-fyi-rel': 'release_bot_minimal_symbols',
      'mac-code-coverage': 'clang_code_coverage',
      'mac-hermetic-upgrade-rel': 'release_bot',
      'mac-paeverywhere-x64-fyi-dbg': 'debug_bot_paeverywhere_x64',
      'mac-paeverywhere-x64-fyi-rel': 'release_trybot_paeverywhere_x64',
      'mac-upload-perfetto': 'release_bot',
      'win-annotator-rel': 'release_bot',
      'win-celab-builder-rel': 'release_bot_minimal_symbols',
      'win-paeverywhere-x86-fyi-dbg': 'debug_bot_paeverywhere_x86',
      'win-paeverywhere-x86-fyi-rel': 'release_trybot_paeverywhere_x86',
      'win-paeverywhere-x64-fyi-dbg': 'debug_bot_paeverywhere_x64',
      'win-paeverywhere-x64-fyi-rel': 'release_trybot_paeverywhere_x64',
      'win-pixel-builder-rel': 'release_bot',
      'win-upload-perfetto': 'release_bot',
      'win10-code-coverage': 'clang_code_coverage',
      'win32-archive-rel-goma-rbe-canary': 'release_bot_x86_minimal_symbols_enable_archive_compression',
      'win32-archive-rel-goma-rbe-latest': 'release_bot_x86_minimal_symbols_enable_archive_compression',
      'win32-arm64-rel': 'win32_arm64_release_bot',
    },

    'chromium.goma.fyi': {
      'Linux Builder Goma RBE Canary': 'gpu_tests_release_bot',
      'Linux Builder Goma RBE Latest Client': 'gpu_tests_release_bot',

      'Win Builder (dbg) Goma RBE Latest Client': 'gpu_tests_debug_bot_x86_no_symbols',
      'Win Builder Goma RBE Latest Client': 'gpu_tests_release_bot_x86_minimal_symbols',


      'Mac Builder (dbg) Goma RBE Canary (clobber)': 'gpu_tests_debug_bot',
      'Mac Builder (dbg) Goma RBE Latest Client (clobber)': 'gpu_tests_debug_bot',
      'mac-archive-rel-goma-rbe-canary': 'release_bot_mac_strip_minimal_symbols',
      'mac-archive-rel-goma-rbe-latest': 'release_bot_mac_strip_minimal_symbols',


      'chromeos-amd64-generic-rel-goma-rbe-canary': 'chromeos_amd64-generic',
      'chromeos-amd64-generic-rel-goma-rbe-latest': 'chromeos_amd64-generic',
      'android-archive-dbg-goma-rbe-ats-canary': 'android_without_codecs_debug_bot',
      'android-archive-dbg-goma-rbe-ats-latest': 'android_without_codecs_debug_bot',
      'android-archive-dbg-goma-rbe-canary': 'android_without_codecs_debug_bot',
      'android-archive-dbg-goma-rbe-latest': 'android_without_codecs_debug_bot',

      'ios-device-goma-rbe-canary-clobber': 'ios_device_release_compile_only',
      'ios-device-goma-rbe-latest-clobber': 'ios_device_release_compile_only',
      'linux-archive-rel-goma-rbe-ats-canary': 'release_bot',
      'linux-archive-rel-goma-rbe-ats-latest': 'release_bot',
      'linux-archive-rel-goma-rbe-canary': 'release_bot',
      'linux-archive-rel-goma-rbe-latest': 'release_bot',
    },

    'chromium.goma': {
      'Chromium Linux Goma Staging': 'release_bot',
      'Chromium Mac Goma Staging': 'release_bot',
      'CrWinGomaStaging': 'release_bot_x86_minimal_symbols',
      'Chromium iOS Goma RBE ToT': 'ios_device_release_compile_only',
      'Chromium Linux Goma RBE ToT': 'release_bot',
      'Chromium Linux Goma RBE ToT (ATS)': 'release_bot',
      'Chromium Linux Goma RBE Staging (clobber)': 'release_bot',
      'Chromium Linux Goma RBE Staging': 'release_bot',
      'Chromium Linux Goma RBE Staging (dbg) (clobber)': 'debug_bot',
      'Chromium Linux Goma RBE Staging (dbg)': 'debug_bot',
      'Chromium Mac Goma RBE ToT': 'release_bot',
      'Chromium Mac Goma RBE Staging (clobber)': 'release_bot',
      'Chromium Mac Goma RBE Staging': 'release_bot',
      'Chromium Mac Goma RBE Staging (dbg)': 'debug_bot',

      # Same as CrWinGomaStaging.
      'Chromium Win Goma RBE ToT': 'release_bot_x86_minimal_symbols',
      'Chromium Win Goma RBE Staging': 'release_bot_x86_minimal_symbols',
      'Chromium Win Goma RBE Staging (clobber)': 'release_bot_x86_minimal_symbols',

      'Chromium Android ARM 32-bit Goma RBE ToT': 'android_release_bot_minimal_symbols',
      # TODO(b/167942918): re-enable java goma?
      'Chromium Android ARM 32-bit Goma RBE ToT (ATS)': 'android_release_bot_minimal_symbols',
      'Chromium Android ARM 32-bit Goma RBE Staging': 'android_release_bot_minimal_symbols',

      'chromeos-amd64-generic-rel-goma-rbe-tot': 'chromeos_amd64-generic',
      'chromeos-amd64-generic-rel-goma-rbe-staging': 'chromeos_amd64-generic',
    },

    'chromium.gpu': {
      # These all use the 'trybot' mixins to ensure that dcheck is on.
      'GPU Mac Builder': 'gpu_tests_release_trybot_deterministic_mac',
      'GPU Mac Builder (dbg)': 'gpu_tests_debug_bot',
      'GPU Linux Builder': 'gpu_tests_release_trybot',
      'GPU Linux Builder (dbg)': 'gpu_tests_debug_bot',
      'GPU Win x64 Builder': 'gpu_tests_release_trybot_resource_whitelisting',
      'GPU Win x64 Builder Code Coverage': 'gpu_tests_release_trybot_resource_whitelisting_code_coverage',
      'GPU Win x64 Builder (dbg)': 'gpu_tests_debug_bot',
      'Android Release (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64_fastbuild',
    },

    'chromium.gpu.fyi': {
      # These all use the 'trybot' mixins to ensure that dcheck is on.
      'ANGLE GPU Android Release (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI dEQP Release (Nexus 5X)': 'angle_deqp_android_release_trybot_arm64',
      'Android FYI Release (Nexus 5)': 'gpu_tests_android_release_trybot',
      'Android FYI Release (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI Release (Nexus 6)': 'gpu_tests_android_release_trybot',
      'Android FYI Release (Nexus 9)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI Release (NVIDIA Shield TV)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI Release (Pixel 2)': 'gpu_tests_android_release_trybot',
      'Android FYI Release (Pixel 4)': 'gpu_tests_android_release_trybot',
      'Android FYI 32 Vk Release (Pixel 2)': 'gpu_fyi_tests_android_vulkan_ndk_release_trybot',
      'Android FYI 64 Vk Release (Pixel 2)': 'gpu_fyi_tests_android_vulkan_ndk_release_trybot_arm64',
      'Android FYI 32 dEQP Vk Release (Pixel 2)': 'angle_deqp_android_vulkan_ndk_release_trybot',
      'Android FYI 64 dEQP Vk Release (Pixel 2)': 'angle_deqp_android_vulkan_ndk_release_trybot_arm64',
      'Android FYI SkiaRenderer GL (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI SkiaRenderer Vulkan (Pixel 2)': 'gpu_tests_android_release_trybot',
      'ChromeOS FYI Release (amd64-generic)': 'gpu_tests_chromeos_amd64_release_trybot_dcheck_off_no_symbols',
      'ChromeOS FYI Release (kevin)': 'gpu_tests_chromeos_kevin_release_trybot_dcheck_off_no_symbols',
      'GPU FYI Lacros x64 Builder': 'gpu_tests_ozone_linux_non_x11_release_trybot',
      'GPU FYI Linux Builder': 'gpu_fyi_tests_release_trybot',
      'GPU FYI Linux Ozone Builder': 'angle_ozone_linux_system_gbm_libdrm_release_trybot',
      'GPU FYI Linux Builder (dbg)': 'gpu_fyi_tests_debug_trybot',
      'GPU FYI Linux dEQP Builder': 'angle_deqp_release_trybot',
      'GPU FYI Mac Builder': 'gpu_fyi_tests_release_trybot',
      'GPU FYI Mac Builder (dbg)': 'gpu_fyi_tests_debug_trybot',
      'GPU FYI Mac dEQP Builder': 'angle_deqp_release_trybot',
      'GPU FYI Perf Android 64 Builder': 'gpu_fyi_tests_android_vulkan_ndk_release_trybot_dcheck_off_arm64',
      'GPU FYI Win Builder': 'gpu_fyi_tests_release_trybot_x86',
      'GPU FYI Win Builder (dbg)': 'gpu_fyi_tests_debug_trybot_x86',
      'GPU FYI Win dEQP Builder': 'angle_deqp_release_trybot_x86',
      'GPU FYI Win x64 Builder': 'gpu_fyi_tests_release_trybot',
      'GPU FYI Win x64 Builder (dbg)': 'gpu_fyi_tests_debug_trybot',
      'GPU FYI Win x64 dEQP Builder': 'angle_deqp_release_trybot',
      'GPU FYI Win x64 DX12 Vulkan Builder': 'gpu_fyi_tests_dx12vk_release_trybot',
      'GPU FYI Win x64 DX12 Vulkan Builder (dbg)': 'gpu_fyi_tests_dx12vk_debug_trybot',
      'GPU FYI XR Win x64 Builder': 'gpu_fyi_tests_release_trybot',
      'Linux FYI GPU TSAN Release': 'gpu_fyi_tests_release_trybot_tsan',
      'Linux FYI SkiaRenderer Dawn Release (Intel HD 630)': 'gpu_tests_sk_dawn_release_trybot',
      'Mac FYI arm64 Release (Apple DTK)': 'gpu_fyi_tests_release_trybot_arm64',
      'Mac FYI GPU ASAN Release': 'gpu_fyi_tests_release_trybot_asan',
      'Optional Android Release (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
      'Win10 FYI x64 SkiaRenderer Dawn Release (NVIDIA)': 'gpu_tests_sk_dawn_release_trybot',
    },

    'chromium.infra.codesearch': {
      'codesearch-gen-chromium-android': 'codesearch_gen_chromium_android_bot',
      'codesearch-gen-chromium-chromiumos': 'codesearch_gen_chromium_chromiumos_bot',
      'codesearch-gen-chromium-fuchsia': 'codesearch_gen_chromium_fuchsia_bot',
      'codesearch-gen-chromium-lacros': 'codesearch_gen_chromium_lacros_bot',
      'codesearch-gen-chromium-linux': 'codesearch_gen_chromium_bot',
      'codesearch-gen-chromium-win': 'codesearch_gen_chromium_bot',
    },

    'chromium.linux': {
      'Cast Audio Linux': 'cast_audio_release_bot',
      'Cast Linux': 'cast_release_bot',
      'Deterministic Fuchsia (dbg)': 'debug_bot_fuchsia',
      'Deterministic Linux (dbg)': {
        'local': 'debug_bot_local_build',
        'goma': 'debug_bot',
      },
      'Deterministic Linux': 'release_bot_minimal_symbols',
      'Fuchsia ARM64': 'release_bot_fuchsia_arm64',
      'Fuchsia x64': 'release_bot_fuchsia',
      'Leak Detection Linux': 'release_bot',
      'Linux Builder (dbg)': 'gpu_tests_debug_bot',
      'Linux Builder (dbg)(32)': 'gpu_tests_debug_bot_x86',
      'Linux Builder': 'gpu_tests_release_bot',
      'Network Service Linux': 'release_bot',
      'fuchsia-arm64-cast': 'release_bot_fuchsia_arm64_cast',
      'fuchsia-x64-cast': 'release_bot_fuchsia_cast',
      'fuchsia-x64-dbg': 'debug_bot_fuchsia_compile_only',
      'linux-bfcache-rel': 'release_bot_blink',
      'linux-extended-tracing-rel': 'release_bot_extended_tracing',
      'linux-gcc-rel': 'release_bot_x86_minimal_symbols_no_clang_cxx11',
      'linux-ozone-rel': 'ozone_linux_release_bot',
      'linux-trusty-rel': 'gpu_tests_release_bot',
    },

    'chromium.mac': {
      'Mac Builder': 'gpu_tests_release_bot_minimal_symbols_no_nacl',
      'Mac Builder (dbg)': 'gpu_tests_debug_bot',
      'ios-device': 'ios_device_release_compile_only',
      'ios-simulator': 'ios_simulator_debug_static_bot_xctest',
      'ios-simulator-full-configs': 'ios_simulator_debug_static_bot_xctest',
      'ios-simulator-noncq': 'ios_simulator_debug_static_bot_xctest',
      'mac-arm64-rel': 'mac_arm64_release_bot',
    },

    'chromium.memory': {
      'Android CFI': 'android_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on_goma',
      'Linux ASan LSan Builder': 'asan_lsan_release_trybot',
      'Linux CFI': 'cfi_full_cfi_icall_cfi_diag_thin_lto_release_static_dcheck_always_on_goma',
      'Linux Chromium OS ASan LSan Builder': 'asan_lsan_chromeos_release_trybot',
      'Linux ChromiumOS MSan Builder': 'chromeos_msan_release_bot',
      'Linux MSan Builder': 'msan_release_bot',
      'Linux TSan Builder': 'tsan_disable_nacl_release_bot',
      'Mac ASan 64 Builder': 'asan_minimal_symbols_disable_nacl_release_bot_dcheck_always_on',
      'WebKit Linux ASAN': 'asan_lsan_release_bot_blink',
      'WebKit Linux Leak': 'release_bot_blink',
      'WebKit Linux MSAN': 'msan_release_bot_blink',
      'android-asan': 'android_clang_asan_release_bot',
      'linux-ubsan-vptr': 'ubsan_vptr_release_bot',
      'win-asan': 'asan_clang_fuzzer_static_v8_heap_minimal_symbols_release',
    },

    'chromium.mojo': {
      'Mojo Android': 'android_release_bot_minimal_symbols_arm64',
      'Mojo ChromiumOS': 'chromeos_with_codecs_release_trybot',
      'Mojo Linux': 'release_trybot',
      'Mojo Windows': 'release_bot_x86_minimal_symbols',
      'mac-mojo-rel': 'release_trybot',
    },

    'chromium.perf': {
      'Android Builder Perf': 'official_goma_minimal_symbols_android',
      'Android arm64 Builder Perf': 'official_goma_minimal_symbols_android_arm64',
      'android_arm64-builder-perf': 'official_goma_minimal_symbols_android_arm64',
      'android-builder-perf': 'official_goma_minimal_symbols_android',
      'chromeos-amd64-generic-lacros-builder-perf': 'chromeos_amd64-generic_lacros_official',
      'linux-builder-perf': 'official_goma_linux_perf',
      'linux-builder-perf-rel': 'official_goma_linux_perf',
      'mac-builder-perf': 'official_goma_mac_perf',
      'mac-arm-builder-perf': 'official_goma_mac_arm_perf',
      'win32-builder-perf': 'official_goma_x86_perf',
      'win64-builder-perf': 'official_goma_perf',
    },

    'chromium.perf.fyi': {
      'android-cfi-builder-perf-fyi': 'official_goma_minimal_symbols_android_thin_lto_opt',
      'android_arm64-cfi-builder-perf-fyi': 'official_goma_minimal_symbols_android_thin_lto_opt_arm64',
      'chromeos-kevin-builder-perf-fyi': 'chromeos_kevin_include_unwind_tables_official',
      'fuchsia-builder-perf-fyi': 'official_goma_fuchsia_arm64_perf',
    },

    'chromium.swangle': {
      'linux-swangle-chromium-x64': 'gpu_tests_release_trybot',
      'linux-swangle-tot-angle-x64': 'angle_deqp_release_trybot',
      'linux-swangle-tot-angle-x86': 'angle_deqp_release_trybot_x86',
      'linux-swangle-tot-swiftshader-x64': 'angle_deqp_release_trybot',
      'linux-swangle-tot-swiftshader-x86': 'angle_deqp_release_trybot_x86',
      'linux-swangle-x64': 'angle_deqp_release_trybot',
      'linux-swangle-x86': 'angle_deqp_release_trybot_x86',
      'mac-swangle-chromium-x64': 'gpu_tests_release_trybot_deterministic_mac',
      'win-swangle-chromium-x86': 'gpu_tests_release_trybot_x86_resource_whitelisting',
      'win-swangle-tot-angle-x64': 'angle_deqp_release_trybot',
      'win-swangle-tot-angle-x86': 'angle_deqp_release_trybot_x86',
      'win-swangle-tot-swiftshader-x64': 'angle_deqp_release_trybot',
      'win-swangle-tot-swiftshader-x86': 'angle_deqp_release_trybot_x86',
      'win-swangle-x64': 'angle_deqp_release_trybot',
      'win-swangle-x86': 'angle_deqp_release_trybot_x86',
    },

    'chromium.dev': {
      # This should be the same with 'android-lollipop-arm-rel'.
      'android-lollipop-arm-rel-swarming': 'android_release_bot_minimal_symbols_webview_google',

      # This should be the same with 'android-marshmallow-arm64-rel'.
      'android-marshmallow-arm64-rel-swarming':  'gpu_tests_android_release_bot_minimal_symbols_arm64_fastbuild',

      # These should be the same with 'Linux Builder'.
      'linux-rel-swarming': 'gpu_tests_release_bot',
      'linux-rel-swarming-staging': 'gpu_tests_release_bot',

      # This should be the same with 'Mac Builder'.
      'mac-rel-swarming': 'gpu_tests_release_bot_minimal_symbols',

      # This should be the same with 'Win x64 Builder'.
      'win-rel-swarming': 'gpu_tests_release_bot_minimal_symbols',
      'win-rel-swarming-staging': 'gpu_tests_release_bot_minimal_symbols',
    },

    'client.nacl.sdk': {
      'linux-sdk-asan-multi': 'release_bot',
      'linux-sdk-multi': 'release_bot',
      'linux-sdk-multirel': 'release_bot',
      'mac-sdk-multi': 'release_bot',
      'mac-sdk-multirel': 'release_bot',
      'windows-sdk-multi': 'release_bot_x86_minimal_symbols',
      'windows-sdk-multirel': 'release_bot_x86_minimal_symbols',
    },

    'client.devtools-frontend.integration': {
      'DevTools Linux': 'release_trybot_blink',
    },

    'client.openscreen.chromium': {
      'chromium_linux64_debug': 'debug_bot',
      'chromium_mac_debug': 'debug_bot',
    },

    'client.v8.chromium': {
      'Linux - Future': 'v8_future_release_bot',
      'Linux - Future (dbg)': 'v8_future_debug_bot',
      'Linux V8 API Stability': 'release_bot',
    },

    'client.v8.fyi': {
      'Android V8 FYI Release (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
      'Linux ASAN Builder': 'asan_lsan_release_trybot',
      'Linux Debug Builder': 'debug_bot_blink',
      'Linux V8 FYI Release (NVIDIA)': 'gpu_tests_release_trybot',
      'Linux V8 FYI Release - pointer compression (NVIDIA)': 'gpu_tests_release_trybot_ptr_comp',
      'Mac V8 FYI Release (Intel)': 'gpu_tests_release_trybot',
      'V8 Android GN (dbg)': 'android_debug_bot',
      'V8 Blink Linux': 'release_bot_blink',
      'V8 Blink Linux Debug': 'release_bot_blink_v8_debug',
      'V8 Blink Linux Future': 'release_bot_blink',
      'V8 Blink Linux Layout NG': 'release_bot_blink',
      'V8 Blink Mac': 'release_bot_blink',
      'V8 Blink Win': 'release_bot_blink',
      'V8 Linux GN': 'release_bot',
      'Win V8 FYI Release (NVIDIA)': 'gpu_tests_release_trybot_x86_resource_whitelisting',
    },

    'chromium.updater': {
      'mac-updater-builder-dbg': 'updater_debug_bot',
      'mac-updater-builder-rel': 'updater_release_bot',
      'win-updater-builder-dbg': 'updater_debug_bot',
      'win-updater-builder-rel': 'updater_release_bot',
      'win32-updater-builder-dbg': 'updater_debug_bot_x86',
      'win32-updater-builder-rel': 'updater_release_bot_x86',
    },

    # TODO(crbug.com/818301): This group is going away.
    'chromium.webkit': {
      'WebKit Linux Trusty ASAN': 'asan_lsan_release_bot',
      'WebKit Linux Trusty Leak': 'release_bot',
      'WebKit Linux Trusty MSAN': 'msan_release_bot',
      'WebKit Mac Builder': 'release_bot',
      'WebKit Win Builder': 'release_bot_x86_minimal_symbols',
    },

    'chromium.webrtc': {
      'WebRTC Chromium Android Builder': 'android_debug_static_bot_arm64',
      'WebRTC Chromium Linux Builder': 'gpu_tests_release_bot',
      'WebRTC Chromium Mac Builder': 'gpu_tests_release_bot',
      'WebRTC Chromium Win Builder': 'release_bot_x86_minimal_symbols_no_com_init_hooks_with_codecs',
    },

    'chromium.webrtc.fyi': {
      'WebRTC Chromium FYI Android Builder': 'android_release_bot_minimal_symbols',
      'WebRTC Chromium FYI Android Builder (dbg)': 'android_debug_static_bot',
      'WebRTC Chromium FYI Android Builder ARM64 (dbg)': 'android_debug_static_bot_arm64',
      'WebRTC Chromium FYI Linux Builder': 'gpu_tests_release_bot',
      'WebRTC Chromium FYI Linux Builder (dbg)': 'debug_bot',
      'WebRTC Chromium FYI Mac Builder': 'gpu_tests_release_bot',
      'WebRTC Chromium FYI Mac Builder (dbg)': 'debug_bot',
      'WebRTC Chromium FYI Win Builder': 'release_bot_x86_minimal_symbols_no_com_init_hooks_with_codecs',
      'WebRTC Chromium FYI Win Builder (dbg)': 'debug_bot_x86_no_com_init_hooks_with_codecs',
    },

    'chromium.win': {
      # Windows bots take too long to link w/ full symbols and time out.
      'Win Builder': 'gpu_tests_release_bot_x86_no_symbols',
      'Win Builder (dbg)': 'gpu_tests_debug_bot_x86_no_symbols',
      'Win x64 Builder': 'gpu_tests_release_bot_minimal_symbols',
      'Win x64 Builder Code Coverage': 'gpu_tests_release_bot_minimal_symbols_code_coverage',
      'Win x64 Builder (dbg)': 'gpu_tests_debug_bot',
      'Windows deterministic': 'release_bot_x86_minimal_symbols',
    },

    'internal.chrome.fyi': {
      'chromeos-amd64-generic-lacros-internal-rel': 'chromeos_amd64-generic_lacros_rel',
      'linux-autofill-captured-sites-rel': 'release_bot',
      'linux-password-manager-captured-sites-rel': 'release_bot',
      'lorenz-graph-dbg': 'android_debug_static_external_bot',
      'mac-autofill-captured-sites-rel': 'release_bot',
      'win-autofill-captured-sites-rel': 'release_bot',
      'win-celab-rel': 'official_celab_release_bot',
      'win-password-manager-captured-sites-rel': 'release_bot',
    },

    'internal.chromeos.fyi': {
      'chromeos-betty-arc-r-chrome': 'chromeos_betty-arc-r_include_unwind_tables_official_use_fake_dbus_clients',
      'chromeos-betty-pi-arc-chrome-dchecks': 'chromeos_betty-pi-arc_dchecks',
      'chromeos-eve-arc-r-chrome': 'chromeos_eve-arc-r_include_unwind_tables_official',
      'lacros-amd64-generic-chrome-fyi': 'chromeos_amd64-generic_lacros_official',
    },

    'internal.client.kitchensync': {
      'Linux Canary': 'debug_bot',
      'Linux Dev': 'debug_bot',
      'Mac Dev': 'debug_bot',
      'Windows Dev': 'debug_bot',
    },

    # Manually triggered internal builders running on LUCI.
    'luci.infra-internal.prod': {
      'gn-builder-linux': 'gn_linux_upload',
      'gn-builder-mac': 'release_bot',
      'gn-builder-win': 'release_bot_x86_minimal_symbols',
    },

    'official.chrome': {
      'fuchsia-arm64': 'official_fuchsia_arm64',
      'fuchsia-x64': 'official_fuchsia_x64',
      'lacros64': 'chromeos_amd64-generic_lacros_official',
    },

    'official.chrome.continuous': {
      'chromeos-amd64-generic-lacros-internal': 'chromeos_amd64-generic_lacros_official',
    },

    'tryserver.blink': {
      # Most tryservers should have '_trybot' in their config names, but
      # 'release_trybot' includes 'dcheck_always_on', and the blink
      # release trybots must *not* enable dchecks, because that could
      # cause them to produce different baselines than the release
      # waterfall bots, and run_web_tests.py can't handle that (by design).
      'linux-blink-rel': 'release_bot_blink_minimal_symbols',
      'linux-blink-optional-highdpi-rel': 'release_bot_blink_minimal_symbols',
      'mac10.12-blink-rel': 'release_bot_blink_minimal_symbols',
      'mac10.13-blink-rel': 'release_bot_blink_minimal_symbols',
      'mac10.14-blink-rel': 'release_bot_blink_minimal_symbols',
      'mac10.15-blink-rel': 'release_bot_blink_minimal_symbols_no_nacl',
      'mac11.0-blink-rel': 'release_bot_blink_minimal_symbols',
      'win7-blink-rel': 'release_bot_blink_x86_minimal_symbols',
      'win10-blink-rel': 'release_bot_blink_x86_minimal_symbols',
    },

    'tryserver.chromium': {
      'android-official': 'android_official_optimize_goma_trybot',
      'fuchsia-official': 'fuchsia_official_optimize_goma_trybot',
      'linux-official': 'official_optimize_goma_trybot',
      'mac-official': 'official_optimize_goma_trybot',
      'win-official': 'official_optimize_goma_trybot',
      'win32-official': 'x86_official_optimize_goma_trybot',
    },

    'tryserver.chromium.android': {
      'android-asan': 'android_clang_asan_release_trybot',
      'android-bfcache-rel': 'android_release_trybot',
      'android-opus-arm-rel': 'android_release_trybot',
      # TODO(crbug/597596): Switch this back to debug_trybot when cronet's
      # shared library loading is fixed.
      'android-cronet-arm-dbg': 'android_cronet_debug_static_bot_arm_no_neon',
      'android-cronet-marshmallow-arm64-rel': 'android_cronet_release_trybot_arm64',
      'android-inverse-fieldtrials-pie-x86-fyi-rel': 'android_release_trybot_x86_fastbuild_webview_google_invert_fieldtrials',
      'android-lollipop-arm-rel': 'android_release_trybot_webview_google',
      'android-marshmallow-arm64-rel': 'gpu_tests_android_release_trybot_arm64_resource_whitelisting_fastbuild_java_coverage',
      'android-marshmallow-x86-rel': 'android_release_trybot_x86_fastbuild_resource_whitelisting_webview_google',
      'android-marshmallow-x86-rel-non-cq': 'android_release_trybot_x86_fastbuild_resource_whitelisting_webview_google',
      'android-nougat-arm64-rel': 'android_release_trybot_arm64_fastbuild_webview_google',
      'android-oreo-arm64-cts-networkservice-dbg': 'android_debug_trybot_arm64',
      'android-pie-arm64-coverage-rel': 'android_release_trybot_arm64_webview_google_native_coverage',
      'android-pie-arm64-rel': 'android_release_trybot_arm64_webview_google_expectations',
      'android-pie-arm64-wpt-rel-non-cq': 'android_release_trybot_arm64_webview_google',
      'android-pie-x86-rel': 'android_release_trybot_x86_fastbuild_webview_google',
      'android-weblayer-pie-x86-fyi-rel': 'android_release_trybot_x86_fastbuild_webview_google',
      'android-weblayer-pie-x86-wpt-fyi-rel': 'android_release_trybot_x86_fastbuild_webview_google',
      'android-webview-pie-arm64-fyi-rel': 'android_release_trybot_arm64_webview_google',
      'android-10-arm64-rel': 'android_release_trybot_arm64_fastbuild_webview_google',
      'android-11-x86-fyi-rel': 'android_release_trybot_x86_fastbuild_webview_google',
      'android-webview-marshmallow-arm64-dbg': 'android_release_trybot_arm64_webview_google',
      'android-webview-nougat-arm64-dbg': 'android_release_trybot_arm64_webview_google',
      'android-webview-oreo-arm64-dbg': 'android_release_trybot_arm64_webview_google',
      'android-webview-pie-arm64-dbg': 'android_release_trybot_arm64_webview_google',
      'android_archive_rel_ng': 'android_release_trybot',
      'android_arm64_dbg_recipe': 'android_debug_trybot_compile_only_arm64_fastbuild',
      'android-binary-size': 'android_binary_size',
      'android_blink_rel': 'android_release_trybot',
      'android_cfi_rel_ng': 'android_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on_goma',
      'android_clang_dbg_recipe': 'android_clang_asan_debug_trybot_compile_only_fastbuild',
      'android_compile_dbg': 'android_debug_trybot_compile_only',
      'android_compile_x64_dbg': 'android_debug_trybot_compile_only_x64',
      'android_compile_x86_dbg': 'android_debug_trybot_compile_only_x86',
      'android_coverage': 'android_debug_trybot_java_coverage',
      'android_cronet': 'android_cronet_release_trybot_arm_no_neon',
      'android_mojo': 'android_release_trybot_arm64',
      'android_n5x_swarming_dbg': 'android_debug_trybot_arm64',
      'android_optional_gpu_tests_rel': 'gpu_tests_android_release_trybot_arm64',
      'android_unswarmed_pixel_aosp': 'android_debug_trybot_arm64',
      'android-deterministic-dbg': 'android_debug_bot',
      'android-deterministic-rel': 'android_without_codecs_release_trybot',
      'cast_shell_android': 'android_cast_debug_static_bot_compile_only',
      'gpu-fyi-try-android-l-nexus-5-32': 'gpu_tests_android_release_trybot',
      'gpu-fyi-try-android-l-nexus-6-32': 'gpu_tests_android_release_trybot',
      'gpu-fyi-try-android-m-nexus-5x-64': 'gpu_tests_android_release_trybot_arm64',
      'gpu-fyi-try-android-m-nexus-5x-deqp-64': 'angle_deqp_android_release_trybot_arm64',
      'gpu-fyi-try-android-m-nexus-5x-skgl-64': 'gpu_tests_android_release_trybot_arm64',
      'gpu-fyi-try-android-m-nexus-9-64': 'gpu_tests_android_release_trybot_arm64',
      'gpu-fyi-try-android-n-nvidia-shield-tv-64': 'gpu_tests_android_release_trybot_arm64',
      'gpu-fyi-try-android-p-pixel-2-32': 'gpu_tests_android_release_trybot',
      'gpu-fyi-try-android-p-pixel-2-skv-32': 'gpu_tests_android_release_trybot',
      'gpu-fyi-try-android-q-pixel-2-deqp-vk-32': 'angle_deqp_android_vulkan_ndk_release_trybot',
      'gpu-fyi-try-android-q-pixel-2-deqp-vk-64': 'angle_deqp_android_vulkan_ndk_release_trybot_arm64',
      'gpu-fyi-try-android-q-pixel-2-vk-32': 'gpu_fyi_tests_android_vulkan_ndk_release_trybot',
      'gpu-fyi-try-android-q-pixel-2-vk-64': 'gpu_fyi_tests_android_vulkan_ndk_release_trybot_arm64',
      'gpu-fyi-try-android-r-pixel-4-32': 'gpu_tests_android_release_trybot',
      'gpu-try-android-m-nexus-5x-64': 'gpu_tests_android_release_trybot_arm64',
      'linux_android_dbg_ng': 'android_debug_bot',
      'try-nougat-phone-tester': 'android_debug_trybot_arm64',
      'android-oreo-arm64-dbg': 'android_debug_trybot_arm64',
      'android-pie-arm64-dbg': 'android_debug_trybot_arm64',
    },

    # TODO(jmadill/ynovikov): Migrate these to angle waterfall. http://anglebug.com/4483
    'tryserver.chromium.angle': {
      'android_angle_rel_ng': 'gpu_tests_android_release_trybot_arm64',
      'android_angle_vk32_rel_ng': 'gpu_fyi_tests_android_vulkan_ndk_release_trybot',
      'android_angle_vk64_rel_ng': 'gpu_fyi_tests_android_vulkan_ndk_release_trybot_arm64',
      'android_angle_deqp_rel_ng': 'angle_deqp_android_release_trybot_arm64',
      'android_angle_vk32_deqp_rel_ng': 'angle_deqp_android_vulkan_ndk_release_trybot',
      'android_angle_vk64_deqp_rel_ng': 'angle_deqp_android_vulkan_ndk_release_trybot_arm64',
      'fuchsia-angle-rel': 'gpu_fyi_tests_release_trybot_fuchsia',
      'ios-angle-try-intel': 'angle_specific_release_trybot_ios',
      'linux-angle-rel': 'gpu_fyi_tests_release_trybot',
      'linux_angle_ozone_rel_ng': 'angle_ozone_linux_system_gbm_libdrm_release_trybot',
      'linux_angle_deqp_rel_ng': 'angle_deqp_release_trybot',
      'mac-angle-chromium-try': 'gpu_tests_release_trybot_deterministic_mac',
      'mac-angle-rel': 'gpu_fyi_tests_release_trybot',
      'mac-angle-try': 'angle_specific_release_trybot',
      'win-angle-rel-32': 'gpu_fyi_tests_release_trybot_x86',
      'win-angle-rel-64': 'gpu_fyi_tests_release_trybot',
      'win-angle-deqp-rel-32': 'angle_deqp_release_trybot_x86',
      'win-angle-deqp-rel-64': 'angle_deqp_release_trybot',
      'win-angle-chromium-x64-try': 'gpu_tests_release_trybot',
      'win-angle-x64-try': 'angle_specific_release_trybot',
    },

    'tryserver.chrome': {
      'chromeos-arm-generic-cfi-thin-lto-chrome': 'chromeos_arm-generic_cfi_thin_lto_official',
      'chromeos-betty-arc-r-chrome': 'chromeos_betty-arc-r_include_unwind_tables_official_use_fake_dbus_clients',
      'chromeos-betty-pi-arc-cfi-thin-lto-chrome': 'chromeos_betty-pi-arc_cfi_thin_lto_official',
      'chromeos-betty-pi-arc-chrome': 'chromeos_betty-pi-arc_include_unwind_tables_official_use_fake_dbus_clients',
      'chromeos-betty-pi-arc-chrome-dchecks': 'chromeos_betty-pi-arc_dchecks',
      'chromeos-eve-arc-r-chrome': 'chromeos_eve-arc-r_include_unwind_tables_official',
      'chromeos-eve-chrome': 'chromeos_eve_include_unwind_tables_official',
      'chromeos-eve-compile-chrome': 'chromeos_eve_include_unwind_tables_official',
      'chromeos-kevin-chrome': 'chromeos_kevin_include_unwind_tables_official',
      'chromeos-kevin-compile-chrome': 'chromeos_kevin_include_unwind_tables_official',
      'lacros-amd64-generic-chrome': 'chromeos_amd64-generic_lacros_official',
      'linux-chrome': 'official_goma',
      'linux-chrome-beta': 'official_goma',
      'linux-chrome-stable': 'official_goma',
      'linux-chromeos-chrome': 'official_goma_chromeos_include_unwind_tables',
      'mac-chrome': 'official_goma_mac',
      'mac-chrome-beta': 'official_goma_mac',
      'mac-chrome-stable': 'official_goma_mac',
      'win-celab-try-rel': 'official_celab_release_bot',
      'win-chrome': 'official_goma_x86',
      'win-chrome-beta': 'official_goma_x86',
      'win-chrome-stable': 'official_goma_x86',
      'win64-chrome': 'official_goma_x64',
      'win64-chrome-beta': 'official_goma_x64',
      'win64-chrome-stable': 'official_goma_x64',
    },

    'tryserver.chrome.pgo': {
      'linux-pgo': 'official_goma_linux_pgo',
      'mac-pgo': 'official_goma_mac_pgo',
      'win32-pgo': 'official_goma_x86_pgo',
      'win64-pgo': 'official_goma_x64_pgo',
    },

    'tryserver.chromium.chromiumos': {
      # TODO(crbug.com/913750): Enable DCHECKS on the two amd64-generic bots
      # and two kevin bots when the PFQ has it enabled.
      'chromeos-amd64-generic-cfi-thin-lto-rel': 'chromeos_amd64-generic_cfi_thin_lto',
      'chromeos-amd64-generic-dbg': 'chromeos_amd64-generic_dbg',
      'chromeos-amd64-generic-rel': 'chromeos_amd64-generic_use_fake_dbus_clients',
      'chromeos-arm-generic-dbg': 'chromeos_arm-generic_dbg',
      'chromeos-arm-generic-rel': 'chromeos_arm-generic_dcheck_always_on',
      'chromeos-kevin-compile-rel': 'chromeos_kevin',
      'chromeos-kevin-rel': 'chromeos_kevin',
      'gpu-fyi-try-chromeos-amd64-generic': 'gpu_tests_chromeos_amd64_release_trybot_dcheck_off_no_symbols',
      'gpu-fyi-try-chromeos-kevin': 'gpu_tests_chromeos_kevin_release_trybot_dcheck_off_no_symbols',
      'lacros-amd64-generic-rel': 'chromeos_amd64-generic_lacros_rel',
      'linux-chromeos-inverse-fieldtrials-fyi-rel': 'chromeos_with_codecs_release_trybot_invert_fieldtrials',
      'linux-chromeos-rel': 'chromeos_with_codecs_release_trybot_code_coverage',
      'linux-chromeos-js-code-coverage': 'chromeos_with_codecs_release_trybot_js_cpp_code_coverage',
      'linux-chromeos-compile-dbg': 'chromeos_with_codecs_debug_bot',
      'linux-chromeos-dbg': 'chromeos_with_codecs_debug_bot',
      'linux-lacros-rel': 'lacros_on_linux_release_trybot',
      'linux-cfm-rel': 'linux_cfm_release_trybot',
    },

    'tryserver.chromium.codesearch': {
      'gen-android-try': 'codesearch_gen_chromium_android_bot',
      'gen-chromiumos-try': 'codesearch_gen_chromium_chromiumos_bot',
      'gen-fuchsia-try': 'codesearch_gen_chromium_fuchsia_bot',
      'gen-lacros-try': 'codesearch_gen_chromium_lacros_bot',
      'gen-linux-try': 'codesearch_gen_chromium_bot',
      'gen-win-try': 'codesearch_gen_chromium_bot',
    },

    'tryserver.chromium.dawn': {
      'dawn-linux-x64-deps-rel': 'dawn_tests_release_trybot',
      'dawn-mac-x64-deps-rel': 'dawn_tests_release_trybot',
      'dawn-win10-x86-deps-rel': 'dawn_tests_release_trybot_x86',
      'dawn-win10-x64-deps-rel': 'dawn_tests_release_trybot',
      'linux-dawn-rel': 'dawn_tests_release_trybot',
      'mac-dawn-rel': 'dawn_tests_release_trybot',
      'win-dawn-rel': 'dawn_tests_release_trybot',
      'dawn-try-win10-x86-rel': 'dawn_tests_release_trybot_x86',
      'dawn-try-win10-x64-asan-rel': 'dawn_tests_asan_release_trybot',
    },

    'tryserver.chromium.linux': {
      'cast_shell_audio_linux': 'cast_audio_release_trybot',
      'cast_shell_linux': 'cast_release_trybot',
      'cast-binary-size': 'cast_binary_size',
      'chromium_presubmit': 'presubmit',
      'fuchsia_arm64': 'release_trybot_fuchsia_arm64',
      'fuchsia-arm64-cast': 'release_trybot_fuchsia_arm64_cast',
      'fuchsia-compile-x64-dbg': 'debug_bot_fuchsia_compile_only',
      'fuchsia-deterministic-dbg': 'debug_bot_fuchsia',
      'fuchsia-fyi-arm64-dbg': 'debug_bot_fuchsia_arm64',
      'fuchsia-fyi-arm64-rel': 'release_trybot_fuchsia_arm64',
      'fuchsia-fyi-x64-dbg': 'debug_bot_fuchsia',
      'fuchsia-fyi-x64-rel': 'release_trybot_fuchsia',
      'fuchsia_x64': 'release_trybot_fuchsia',
      'fuchsia-x64-cast': 'release_trybot_fuchsia_cast',
      'gpu-fyi-try-lacros-amd-rel': 'gpu_tests_ozone_linux_non_x11_release_trybot',
      'gpu-fyi-try-lacros-intel-rel': 'gpu_tests_ozone_linux_non_x11_release_trybot',
      'gpu-fyi-try-linux-amd-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-intel-dqp': 'angle_deqp_release_trybot',
      'gpu-fyi-try-linux-intel-exp': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-intel-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-intel-sk-dawn-rel': 'gpu_tests_sk_dawn_release_trybot',
      'gpu-fyi-try-linux-intel-skv': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-nvidia-dbg': 'gpu_fyi_tests_debug_trybot',
      'gpu-fyi-try-linux-nvidia-dqp': 'angle_deqp_release_trybot',
      'gpu-fyi-try-linux-nvidia-exp': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-nvidia-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-nvidia-skv': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-nvidia-tsn': 'gpu_fyi_tests_release_trybot_tsan',
      'gpu-try-linux-nvidia-dbg': 'gpu_tests_debug_bot',
      'gpu-try-linux-nvidia-rel': 'gpu_tests_release_trybot',
      'layout_test_leak_detection': 'release_trybot',
      'leak_detection_linux': 'release_trybot',
      'linux-annotator-rel': 'release_trybot',
      'linux-autofill-assistant': 'autofill_assistant_release_trybot',
      'linux-blink-heap-concurrent-marking-tsan-rel': 'release_trybot_tsan',
      'linux-blink-heap-verification-try': 'release_trybot_enable_blink_heap_verification',
      'linux-blink-v8-oilpan': 'release_trybot_enable_v8_oilpan',
      'linux-bfcache-rel': 'release_bot_blink',
      'linux-clang-tidy-dbg': 'debug_bot',
      'linux-clang-tidy-rel': 'release_trybot',
      'linux-dcheck-off-rel': 'release_trybot_dcheck_off',
      'linux-example-builder': 'release_trybot',
      'linux-extended-tracing-rel': 'release_trybot_extended_tracing',
      'linux-inverse-fieldtrials-fyi-rel': 'gpu_tests_release_trybot_no_symbols_use_dummy_lastchange_invert_fieldtrials',
      'linux-gcc-rel': 'release_bot_x86_minimal_symbols_no_clang_cxx11',
      'linux-lacros-fyi-rel': 'lacros_on_linux_release_trybot',
      'linux-libfuzzer-asan-rel': 'libfuzzer_asan_release_trybot',
      'linux-mbi-mode-per-render-process-host-rel': 'gpu_tests_release_trybot_mbi_mode_per_render_process_host',
      'linux-mbi-mode-per-site-instance-rel': 'gpu_tests_release_trybot_mbi_mode_per_site_instance',
      'linux-ozone-rel': 'ozone_linux_release_trybot',
      'linux-perfetto-rel': 'perfetto_release_trybot',
      'linux-rel': 'gpu_tests_release_trybot_no_symbols_use_dummy_lastchange_code_coverage',
      'linux-trusty-rel': 'gpu_tests_release_trybot_no_symbols_use_dummy_lastchange',
      'linux-viz-rel': 'release_trybot',
      'linux-wpt-fyi-rel': 'release_trybot',
      'linux-wpt-identity-fyi-rel': 'release_trybot',
      'linux-wpt-input-fyi-rel': 'release_trybot',
      'linux-webkit-msan-rel': 'msan_release_bot',
      'linux_chromium_archive_rel_ng': 'release_bot',
      'linux_chromium_asan_rel_ng': 'asan_lsan_release_trybot',
      'linux_chromium_cfi_rel_ng': 'cfi_full_cfi_icall_cfi_diag_thin_lto_release_static_dcheck_always_on_goma',
      'linux_chromium_chromeos_asan_rel_ng': 'asan_lsan_chromeos_release_trybot',
      'linux_chromium_chromeos_msan_rel_ng': 'chromeos_msan_release_bot',
      'linux_chromium_clobber_deterministic': 'release_trybot',
      'linux_chromium_clobber_rel_ng': 'release_trybot',
      'linux_chromium_compile_dbg_32_ng': 'debug_bot_x86',
      'linux_chromium_compile_dbg_ng': 'debug_bot',
      'linux_chromium_compile_rel_ng': 'release_trybot',
      'linux_chromium_dbg_ng': 'gpu_tests_debug_bot',

      # This is intentionally a release_bot and not a release_trybot;
      # enabling DCHECKs seems to cause flaky failures that don't show up
      # on the continuous builder.
      'linux_chromium_msan_rel_ng': 'msan_release_bot',

      'linux_chromium_tsan_rel_ng': 'tsan_disable_nacl_release_trybot',

      # This is intentionally a release_bot and not a release_trybot to match
      # the CI configuration, where no debug builder exists.
      'linux_chromium_ubsan_rel_ng': 'ubsan_vptr_release_bot',

      'linux_layout_tests_composite_after_paint': 'gpu_tests_release_trybot',
      'linux_layout_tests_layout_ng_disabled': 'release_trybot',
      'linux-layout-tests-edit-ng': 'release_trybot',
      'linux-blink-web-tests-force-accessibility-rel': 'release_trybot',
      'linux_mojo': 'release_trybot',
      'linux_mojo_chromeos': 'chromeos_with_codecs_release_trybot',
      'linux_optional_gpu_tests_rel': 'gpu_fyi_tests_release_trybot',
      'linux_upload_clang': 'release_bot',
      'linux_vr': 'vr_release_trybot',
      'network_service_linux': 'release_trybot',
    },

    'tryserver.chromium.mac': {
      'gpu-fyi-try-mac-amd-dqp': 'angle_deqp_release_trybot',
      'gpu-fyi-try-mac-amd-pro-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-amd-retina-dbg': 'gpu_fyi_tests_debug_trybot',
      'gpu-fyi-try-mac-amd-retina-exp': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-amd-retina-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-arm64-apple-dtk-rel': 'gpu_fyi_tests_release_trybot_arm64',
      'gpu-fyi-try-mac-asan': 'gpu_fyi_tests_release_trybot_asan',
      'gpu-fyi-try-mac-intel-dbg': 'gpu_fyi_tests_debug_trybot',
      'gpu-fyi-try-mac-intel-dqp': 'angle_deqp_release_trybot',
      'gpu-fyi-try-mac-intel-exp': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-intel-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-intel-uhd-630-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-nvidia-retina-dbg': 'gpu_fyi_tests_debug_trybot',
      'gpu-fyi-try-mac-nvidia-retina-exp': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-nvidia-retina-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-try-mac-amd-retina-dbg': 'gpu_tests_debug_bot',
      'gpu-try-mac-intel-dbg': 'gpu_tests_debug_bot',
      'ios-device': 'ios_device_release_compile_only',
      'ios13-beta-simulator': 'ios_simulator_debug_static_bot_xctest',
      'ios13-sdk-simulator': 'ios_simulator_debug_static_bot_xctest',
      'ios14-beta-simulator': 'ios_simulator_debug_static_bot_xctest',
      'ios14-sdk-simulator': 'ios_simulator_debug_static_bot_xctest',
      'ios-simulator': 'ios_simulator_code_coverage_partial_instrumentation_xctest',
      'ios-simulator-full-configs': 'ios_simulator_code_coverage_partial_instrumentation_xctest',
      'ios-simulator-cronet': 'ios_cronet_xctest',
      'ios-simulator-cr-recipe': 'ios_simulator_debug_static_bot_xctest',
      'ios-simulator-inverse-fieldtrials-fyi': 'ios_simulator_debug_static_bot_invert_fieldtrials_xctest',
      'ios-simulator-noncq': 'ios_simulator_debug_static_bot_xctest',
      'ios-simulator-multi-window': 'ios_simulator_debug_static_bot_multi_window_xctest',
      'mac-osxbeta-rel': 'gpu_tests_release_trybot_deterministic_mac',
      'mac_chromium_10.11_rel_ng': 'gpu_tests_release_trybot_deterministic_mac',
      'mac_chromium_10.12_rel_ng': 'gpu_tests_release_trybot_deterministic_mac',
      'mac_chromium_10.13_rel_ng': 'release_trybot',
      'mac_chromium_10.14_rel_ng': 'release_trybot',
      'mac_chromium_10.15_rel_ng': 'release_trybot_no_nacl',
      'mac_chromium_11.0_rel_ng': 'release_trybot',
      'mac_chromium_archive_rel_ng': 'release_bot_mac_strip_minimal_symbols',
      'mac_chromium_asan_rel_ng': 'asan_dcheck_disable_nacl_release_bot',
      'mac_chromium_compile_dbg_ng': 'gpu_tests_debug_bot',
      'mac_chromium_compile_rel_ng': 'gpu_tests_release_trybot_deterministic_mac',
      'mac_chromium_dbg_ng': 'gpu_tests_debug_bot',
      'mac_optional_gpu_tests_rel': 'gpu_fyi_tests_release_trybot',
      'mac_upload_clang': 'release_bot',
      'mac-inverse-fieldtrials-fyi-rel': 'gpu_tests_release_trybot_deterministic_mac_invert_fieldtrials',
      'mac-rel': 'gpu_tests_release_trybot_deterministic_mac_code_coverage',
      'mac-arm64-rel': 'mac_arm64_release_trybot',
    },

    'tryserver.chromium.perf': {
      'Android Compile Perf': 'official_goma_minimal_symbols_android',
      'Android arm64 Compile Perf': 'official_goma_minimal_symbols_android_arm64',
      'Fuchsia Builder Perf': 'official_goma_fuchsia_arm64_perf',
      'Linux Builder Perf': 'official_goma_linux_perf',
      'Mac Builder Perf': 'official_goma_mac_perf',
      'Mac arm Builder Perf': 'official_goma_mac_arm_perf',
      'Win Builder Perf': 'official_goma_x86_perf',
      'Win x64 Builder Perf': 'official_goma_perf',
    },

    'tryserver.chromium.swangle': {
      'linux-swangle-chromium-try-x64': 'gpu_tests_release_trybot',
      'linux-swangle-try-tot-angle-x64': 'angle_deqp_release_trybot',
      'linux-swangle-try-tot-angle-x86': 'angle_deqp_release_trybot_x86',
      'linux-swangle-try-tot-swiftshader-x64': 'angle_deqp_release_trybot',
      'linux-swangle-try-tot-swiftshader-x86': 'angle_deqp_release_trybot_x86',
      'linux-swangle-try-x64': 'angle_deqp_release_trybot',
      'linux-swangle-try-x86': 'angle_deqp_release_trybot_x86',
      'mac-swangle-chromium-try-x64': 'gpu_tests_release_trybot_deterministic_mac',
      'win-swangle-chromium-try-x86': 'gpu_tests_release_trybot_x86_resource_whitelisting',
      'win-swangle-try-tot-angle-x64': 'angle_deqp_release_trybot',
      'win-swangle-try-tot-angle-x86': 'angle_deqp_release_trybot_x86',
      'win-swangle-try-tot-swiftshader-x64': 'angle_deqp_release_trybot',
      'win-swangle-try-tot-swiftshader-x86': 'angle_deqp_release_trybot_x86',
      'win-swangle-try-x64': 'angle_deqp_release_trybot',
      'win-swangle-try-x86': 'angle_deqp_release_trybot_x86',
    },

    'tryserver.chromium.updater': {
       'mac-updater-try-builder-dbg': 'updater_debug_bot',
       'mac-updater-try-builder-rel': 'updater_release_trybot',
       'win-updater-try-builder-dbg': 'updater_debug_bot',
       'win-updater-try-builder-rel': 'updater_release_trybot',
    },

    'tryserver.chromium.win': {
      'gpu-fyi-try-win7-amd-dbg-32': 'gpu_fyi_tests_debug_trybot_x86',
      'gpu-fyi-try-win7-amd-dqp-32': 'angle_deqp_release_trybot_x86',
      'gpu-fyi-try-win7-amd-rel-32': 'gpu_fyi_tests_release_trybot_x86',
      'gpu-fyi-try-win7-nvidia-dqp-64': 'angle_deqp_release_trybot',
      'gpu-fyi-try-win7-nvidia-rel-32': 'gpu_fyi_tests_release_trybot_x86',
      'gpu-fyi-try-win7-nvidia-rel-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-amd-rel-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-intel-dqp-64': 'angle_deqp_release_trybot',
      'gpu-fyi-try-win10-intel-exp-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-intel-rel-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-nvidia-dbg-64': 'gpu_fyi_tests_debug_trybot',
      'gpu-fyi-try-win10-nvidia-dqp-64': 'angle_deqp_release_trybot',
      'gpu-fyi-try-win10-nvidia-dx12vk-dbg-64': 'gpu_fyi_tests_dx12vk_debug_trybot',
      'gpu-fyi-try-win10-nvidia-dx12vk-rel-64': 'gpu_fyi_tests_dx12vk_release_trybot',
      'gpu-fyi-try-win10-nvidia-exp-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-nvidia-rel-32': 'gpu_fyi_tests_release_trybot_x86',
      'gpu-fyi-try-win10-nvidia-rel-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-nvidia-sk-dawn-rel-64': 'gpu_tests_sk_dawn_release_trybot',
      'win10_chromium_inverse_fieldtrials_x64_fyi_rel_ng': 'gpu_tests_release_trybot_resource_whitelisting_invert_fieldtrials',
      'win10_chromium_x64_dbg_ng': 'gpu_tests_debug_bot',
      'win10_chromium_x64_rel_ng': 'gpu_tests_release_trybot_resource_whitelisting_code_coverage',
      'win10_chromium_x64_rel_ng_exp': 'release_trybot',
      'win-annotator-rel': 'release_trybot',
      'win-asan': 'asan_clang_fuzzer_static_v8_heap_minimal_symbols_release',
      'win-celab-try-rel': 'release_bot_minimal_symbols',
      'win-libfuzzer-asan-rel': 'libfuzzer_windows_asan_release_trybot',
      'win7-rel': 'gpu_tests_release_trybot_x86_resource_whitelisting',
      'win_x64_archive': 'release_trybot',
      'win_archive': 'release_trybot_x86',
      'win_chromium_compile_dbg_ng': 'gpu_tests_debug_bot_x86_no_symbols',
      'win_chromium_compile_rel_ng': 'gpu_tests_release_trybot_x86_resource_whitelisting',
      'win_chromium_dbg_ng': 'gpu_tests_debug_bot_x86_no_symbols',
      'win_chromium_x64_rel_ng': 'gpu_tests_release_trybot',
      'win_mojo': 'release_trybot_x86',
      'win_optional_gpu_tests_rel': 'gpu_fyi_tests_release_trybot',
      'win_upload_clang': 'release_bot',
    },

    'tryserver.devtools-frontend': {
      # Align devtools blink builders with chromium linux-rel
      'devtools_frontend_linux_blink_light_rel': 'release_trybot_blink',
      'devtools_frontend_linux_blink_rel': 'release_trybot_blink',
    },

    'tryserver.v8': {
      'v8_linux_blink_rel': 'release_trybot_blink',
      'v8_linux_chromium_gn_rel': 'release_trybot',
    },

    'tryserver.webrtc': {
      'win_chromium_compile': 'gpu_tests_release_trybot_resource_whitelisting',
      'win_chromium_compile_dbg': 'gpu_tests_debug_bot_x86_no_symbols',
      'mac_chromium_compile': 'gpu_tests_release_trybot',
      'linux_chromium_compile': 'release_trybot',
      'linux_chromium_compile_dbg': 'debug_bot',
      'android_chromium_compile': 'android_release_trybot',
    },
  },


  # This is the list of configs that you can pass to mb; each config
  # represents a particular combination of gn args that
  # we must support. A given config *may* be platform-specific but
  # is not necessarily so (i.e., we might have mac, win, and linux
  # bots all using the 'release_bot' config).
  'configs': {
    'afl_asan_shared_release_bot': [
      'afl', 'asan', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl',
      'optimize_for_fuzzing', 'shared_release_bot', 'disable_seed_corpus',
    ],

    'android_binary_size': [
      'android', 'chrome_with_codecs', 'goma', 'minimal_symbols',
      'official_optimize', 'stable_channel',
    ],

    'android_cast_debug_static_bot': [
      'android', 'cast', 'clang', 'debug_static_bot',
    ],

    'android_cast_debug_static_bot_compile_only': [
      'android', 'cast', 'clang', 'debug_static_bot', 'compile_only',
    ],

    'android_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on_goma': [
      'android', 'cfi_full', 'cfi_diag', 'thin_lto', 'release', 'static', 'dcheck_always_on', 'goma',
    ],

    'android_clang_asan_debug_bot': [
      'android', 'clang', 'asan', 'debug_bot', 'strip_debug_info',
    ],

    'android_clang_asan_debug_trybot_compile_only_fastbuild': [
      'android', 'clang', 'asan', 'debug_bot', 'compile_only',
      'android_fastbuild',
    ],

    'android_clang_asan_release_bot': [
      'android', 'clang', 'asan', 'release_bot', 'strip_debug_info', 'minimal_symbols',
    ],

    'android_clang_asan_release_trybot': [
      'android', 'clang', 'asan', 'release_trybot', 'strip_debug_info', 'minimal_symbols',
    ],

    'android_clang_tot_asan': [
      'android_without_codecs', 'clang_tot', 'asan', 'shared', 'debug', 'minimal_symbols',
      'strip_debug_info',
    ],

    'android_clang_tot_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on': [
      'android_without_codecs', 'clang_tot', 'cfi_full', 'cfi_diag', 'thin_lto', 'release',
      'static', 'dcheck_always_on',
    ],

    'android_clang_tot_dbg': [
      'android_without_codecs', 'clang_tot', 'shared', 'debug',
    ],

    'android_clang_tot_release_arm64': [
      'android_without_codecs', 'clang_tot', 'release', 'arm64',
    ],

    'android_clang_tot_release_minimal_symbols': [
      'android', 'release', 'static', 'minimal_symbols',
      'strip_debug_info', 'clang_tot',
    ],

    'android_clang_tot_official_arm64': [
      'android', 'release', 'static', 'minimal_symbols', 'official_optimize',
      'clang_tot', 'arm64',
    ],

    'android_clang_tot_x64': [
      'android_without_codecs', 'clang_tot', 'shared', 'x64', 'release',
      'dcheck_always_on',
    ],

    'android_cronet_debug_static_bot_arm64': [
      'android', 'cronet_android', 'debug_static_bot', 'arm64',
    ],

    'android_cronet_debug_static_bot_arm_no_neon': [
      'android', 'cronet_android', 'debug_static_bot', 'arm_no_neon', 'release_java',
    ],

    'android_cronet_debug_static_bot_x86': [
      'android', 'cronet_android', 'debug_static_bot', 'x86',
    ],

    'android_cronet_debug_static_bot_arm64': [
      'android', 'cronet_android', 'debug_static_bot', 'arm64',
    ],

    'android_cronet_release_bot_minimal_symbols_arm64': [
      'android', 'cronet_android', 'official_optimize', 'release_bot', 'minimal_symbols', 'arm64',
      'strip_debug_info',
    ],

    'android_cronet_release_bot_minimal_symbols_arm_no_neon': [
      'android', 'cronet_android', 'official_optimize', 'release_bot', 'minimal_symbols', 'arm_no_neon',
      'strip_debug_info',
    ],

    'android_cronet_release_bot_minimal_symbols_arm_no_neon_clang_asan': [
      'android', 'cronet_android', 'release_bot', 'minimal_symbols', 'arm_no_neon', 'clang', 'asan',
      'strip_debug_info',
    ],

    'android_cronet_release_bot_minimal_symbols_x86': [
      'android', 'cronet_android', 'official_optimize', 'release_bot', 'minimal_symbols', 'x86',
      'strip_debug_info',
    ],

    'android_cronet_release_trybot_arm_no_neon': [
      'android', 'cronet_android', 'release_trybot', 'arm_no_neon',
    ],

    'android_cronet_release_trybot_arm64': [
      'android', 'cronet_android', 'official_optimize', 'release_trybot', 'arm64',
      'strip_debug_info',
    ],

    'android_debug_bot': [
      'android', 'debug_bot',
    ],

    'android_debug_static_bot': [
      'android', 'debug_static_bot',
    ],

    'android_debug_static_external_bot': [
      'android', 'debug_static_bot', 'android_external'
    ],

    'android_debug_static_bot_arm64': [
      'android', 'debug_static_bot', 'arm64',
    ],

    'android_debug_static_bot_x64': [
      'android', 'debug_static_bot', 'x64',
    ],

    'android_debug_static_bot_x86': [
      'android', 'debug_static_bot', 'x86',
    ],

    'android_debug_trybot_arm64': [
      'android', 'debug_bot', 'arm64',
    ],

    'android_debug_trybot_compile_only': [
      'android', 'debug_bot', 'compile_only',
    ],

    'android_debug_trybot_compile_only_arm64_fastbuild': [
      'android', 'debug_bot', 'compile_only', 'arm64', 'android_fastbuild'
    ],

    'android_debug_trybot_compile_only_x64': [
      'android', 'debug_bot', 'compile_only', 'x64',
    ],

    'android_debug_trybot_compile_only_x86': [
      'android', 'debug_bot', 'compile_only', 'x86',
    ],

    'android_debug_trybot_java_coverage': [
      'android', 'debug_bot', 'use_java_coverage', 'strip_debug_info',
    ],

    'android_incremental_debug_bot': [
      'android', 'incremental', 'debug_bot',
    ],

    'android_official_optimize_goma': [
      'official_optimize_goma', 'android_without_codecs',
    ],

    'android_official_optimize_goma_trybot': [
      'official_optimize_goma_trybot', 'android_without_codecs',
    ],

    'android_release_bot_minimal_symbols': [
      'android', 'release_bot', 'minimal_symbols', 'strip_debug_info',
    ],

    'android_release_bot_minimal_symbols_arm64': [
      'android', 'release_bot', 'minimal_symbols', 'arm64',
      'strip_debug_info',
    ],

    'android_release_bot_minimal_symbols_arm64_fastbuild_webview_google': [
      'android', 'release_bot', 'minimal_symbols', 'arm64',
      'strip_debug_info', 'android_fastbuild', 'webview_google',
    ],

    'android_release_bot_minimal_symbols_x86_fastbuild': [
      'android', 'release_bot', 'minimal_symbols', 'strip_debug_info',
      'android_fastbuild', 'x86',
    ],

    'android_release_bot_minimal_symbols_arm64_webview_google': [
      'android', 'release_bot', 'minimal_symbols', 'arm64',
      'strip_debug_info', 'webview_google',
    ],

    'android_release_bot_minimal_symbols_webview_google': [
      'android', 'release_bot', 'minimal_symbols', 'strip_debug_info',
      'webview_google',
    ],

    'android_release_bot_minimal_symbols_x86_fastbuild_resource_whitelisting_webview_google': [
      'android', 'release_bot', 'minimal_symbols', 'x86',
      'android_fastbuild', 'resource_whitelisting', 'webview_google',
    ],

    'android_release_bot_minimal_symbols_x86_fastbuild_webview_google': [
      'android', 'release_bot', 'minimal_symbols', 'x86',
      'strip_debug_info', 'android_fastbuild', 'webview_google',
    ],

    'android_release_trybot': [
      'android', 'release_trybot', 'strip_debug_info',
    ],

    'android_release_trybot_arm64': [
      'android', 'release_trybot', 'arm64', 'strip_debug_info',
    ],

    'android_release_trybot_arm64_fastbuild_webview_google': [
      'android', 'release_trybot', 'arm64', 'strip_debug_info',
      'android_fastbuild', 'webview_google',
    ],

    'android_release_trybot_arm64_webview_google': [
      'android', 'release_trybot', 'arm64', 'strip_debug_info',
      'webview_google',
    ],

    'android_release_trybot_arm64_webview_google_expectations': [
      'android', 'release_trybot', 'arm64', 'strip_debug_info',
      'webview_google', 'fail_on_android_expectations',
    ],

    'android_release_trybot_arm64_webview_google_native_coverage': [
      'android', 'release_trybot', 'arm64', 'strip_debug_info',
      'webview_google',
      'use_clang_coverage', 'partial_code_coverage_instrumentation',
    ],

    'android_release_trybot_webview_google': [
      'android', 'release_trybot', 'strip_debug_info', 'android_no_proguard',
      'webview_google',
    ],

    'android_release_trybot_x86_fastbuild_resource_whitelisting_webview_google': [
      'android', 'release_trybot', 'x86', 'android_fastbuild',
      'resource_whitelisting', 'webview_google',
    ],

    'android_release_trybot_x86_fastbuild_webview_google': [
      'android', 'release_trybot', 'strip_debug_info', 'x86',
      'android_fastbuild', 'webview_google',
    ],

    'android_release_trybot_x86_fastbuild_webview_google_invert_fieldtrials': [
      'android', 'release_trybot', 'strip_debug_info', 'x86',
      'android_fastbuild', 'webview_google', 'invert_fieldtrials'
    ],

    'android_webview_google_debug_static_bot': [
      'android', 'debug_static_bot', 'webview_google',
    ],

    'android_webview_google_debug_static_bot_arm64': [
      'android', 'debug_static_bot', 'arm64', 'webview_google',
    ],

    'android_without_codecs_debug_bot': [
      'android_without_codecs', 'debug_bot',
    ],

    'android_without_codecs_release_bot_minimal_symbols': [
      'android_without_codecs', 'release_bot', 'minimal_symbols', 'strip_debug_info',
    ],

    'android_without_codecs_release_trybot': [
      'android_without_codecs', 'release_trybot', 'strip_debug_info',
    ],

    'angle_deqp_android_release_trybot_arm64': [
      'angle_deqp_tests', 'android',  'shared_release_trybot', 'arm64',
    ],

    'angle_deqp_android_vulkan_ndk_release_trybot': [
      'angle_deqp_tests', 'android', 'vulkan_ndk', 'shared_release_trybot',
    ],

    'angle_deqp_android_vulkan_ndk_release_trybot_arm64': [
      'angle_deqp_tests', 'android', 'vulkan_ndk', 'shared_release_trybot', 'arm64',
    ],

    'angle_deqp_release_trybot': [
      'angle_deqp_tests', 'shared_release_trybot',
    ],

    'angle_deqp_release_trybot_x86': [
      'angle_deqp_tests', 'shared_release_trybot', 'x86',
    ],

    'angle_ozone_linux_system_gbm_libdrm_release_trybot': [
      'angle_tests', 'ozone_linux', 'ozone_linux_non_x11', 'system_gbm_libdrm', 'release_trybot',
    ],

    'angle_specific_android_vulkan_ndk_release_trybot': [
      'angle_specific_tests', 'android_without_codecs', 'vulkan_ndk',
      'shared_release_trybot',
    ],

    'angle_specific_android_vulkan_ndk_release_trybot_arm64': [
      'angle_specific_tests', 'android_without_codecs', 'vulkan_ndk',
      'shared_release_trybot', 'arm64',
    ],

    'angle_specific_android_vulkan_ndk_release_trybot_dcheck_off_arm64': [
      'angle_specific_tests', 'android_without_codecs',  'vulkan_ndk',
      'shared_release_trybot_dcheck_off', 'arm64',
    ],

    'angle_specific_no_trace_android_release_trybot_arm64': [
      'angle_specific_no_trace_tests', 'android_without_codecs',
      'shared_release_trybot', 'arm64',
    ],

    'angle_specific_ozone_linux_system_gbm_libdrm_release_trybot': [
      'angle_specific_tests', 'ozone_linux', 'ozone_linux_non_x11',
      'system_gbm_libdrm', 'shared_release_trybot',
    ],

    'angle_specific_release_trybot': [
      'angle_specific_tests', 'shared_release_trybot',
    ],

    'angle_specific_release_trybot_fuchsia': [
      'angle_specific_tests', 'shared_release_trybot', 'fuchsia',
    ],

    'angle_specific_release_trybot_ios': [
      'angle_specific_tests', 'release_trybot', 'ios', 'ios_simulator', 'ios_cpu_x64', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'angle_specific_release_trybot_x86': [
      'angle_specific_tests', 'shared_release_trybot', 'x86',
    ],

    'asan_clang_shared_v8_heap_minimal_symbols_release_tot': [
      'asan', 'clang_tot', 'shared', 'v8_heap', 'minimal_symbols', 'release',
    ],

    'asan_clang_fuzzer_static_v8_heap_minimal_symbols_release': [
      'asan', 'fuzzer', 'static', 'v8_heap', 'minimal_symbols', 'release_bot',
    ],

    'asan_clang_fuzzer_static_v8_heap_minimal_symbols_release_tot': [
      'asan', 'clang_tot', 'fuzzer', 'static', 'v8_heap', 'minimal_symbols', 'release',
    ],

    'asan_dcheck_disable_nacl_release_bot': [
      'asan', 'dcheck_always_on', 'disable_nacl', 'release_bot',
    ],

    'asan_disable_nacl_clang_tot_minimal_symbols_static_release': [
      'asan', 'disable_nacl', 'clang_tot', 'minimal_symbols', 'static', 'release',
    ],

    'asan_disable_nacl_fuzzer_v8_heap_chrome_with_codecs_release_bot': [
      'asan', 'disable_nacl', 'fuzzer', 'v8_heap', 'chrome_with_codecs', 'release_bot',
    ],

    'asan_disable_nacl_fuzzer_v8_heap_release_bot': [
      'asan', 'disable_nacl', 'fuzzer', 'v8_heap', 'release_bot',
    ],

    'asan_fuzzer_v8_heap_chromeos_codecs_release_bot_hybrid': [
      'asan', 'fuzzer', 'v8_heap', 'chromeos_codecs', 'release_bot', 'hybrid',
    ],

    'asan_fuzzer_v8_heap_release_bot_hybrid': [
      'asan', 'fuzzer', 'v8_heap', 'release_bot', 'hybrid',
    ],

    'asan_v8_heap_debug_bot_hybrid': [
      'asan', 'v8_heap', 'debug_bot', 'hybrid',
    ],

    'asan_minimal_symbols_disable_nacl_release_bot_dcheck_always_on': [
      'asan', 'minimal_symbols', 'disable_nacl', 'release_bot', 'dcheck_always_on',
    ],

    'asan_fuzzer_v8_heap_chrome_with_codecs_release_bot': [
      'clang', 'asan', 'fuzzer', 'v8_heap', 'chrome_with_codecs', 'release_bot',
    ],

    'asan_fuzzer_v8_heap_release_bot': [
      'clang', 'asan', 'fuzzer', 'v8_heap', 'release_bot',
    ],

    'asan_lsan_chromeos_release_trybot': [
      'asan', 'lsan', 'chromeos', 'release_trybot',
    ],

    'asan_lsan_debug_bot': [
      'asan', 'lsan', 'debug_bot',
    ],

    'asan_lsan_fuzzer_v8_heap_chromeos_codecs_release_bot': [
      'asan', 'lsan', 'v8_heap', 'chromeos_codecs', 'release_bot',
    ],

    'asan_lsan_fuzzer_v8_heap_release_bot': [
      'asan', 'lsan', 'fuzzer', 'v8_heap', 'release_bot',
    ],

    'asan_lsan_release_bot': [
      'asan', 'lsan', 'release_bot',
    ],

    'asan_lsan_release_bot_blink': [
      'asan', 'lsan', 'release_bot_blink',
    ],

    'asan_lsan_release_trybot': [
      'asan', 'lsan', 'release_trybot',
    ],

    'autofill_assistant_release_trybot': [
      'autofill_assistant_api', 'release_trybot',
    ],

    # Cast Linux takes very long in linking, possibly due to being on GCE
    # (crbug/794423).
    'cast_release_bot': [
      'cast', 'release_bot', 'minimal_symbols',
    ],

    'cast_release_trybot': [
      'cast', 'release_trybot',
    ],

    'cast_binary_size': [
      'cast', 'goma', 'minimal_symbols', 'official_optimize',
    ],

    'cast_audio_release_bot': [
      'cast', 'cast_audio', 'release_bot', 'minimal_symbols',
    ],

    'cast_audio_release_trybot': [
      'cast', 'cast_audio', 'release_trybot',
    ],

    'cfi_full_cfi_icall_cfi_diag_recover_release_static': [
      'cfi_full', 'cfi_icall', 'cfi_diag', 'cfi_recover', 'thin_lto', 'release', 'static', 'goma',
    ],

    'cfi_full_cfi_icall_cfi_diag_thin_lto_release_static_dcheck_always_on_goma': [
      'cfi_full', 'cfi_icall', 'cfi_diag', 'thin_lto', 'release', 'static', 'dcheck_always_on', 'goma',
    ],

    'chromeos_amd64-generic': [
      'chromeos_amd64-generic',
    ],

    'chromeos_amd64-generic_asan': [
      'chromeos_amd64-generic', 'asan',
    ],

    'chromeos_amd64-generic_cfi_thin_lto': [
      'chromeos_amd64-generic', 'cfi_full', 'thin_lto',
    ],

    'chromeos_amd64-generic_lacros_official': [
      'chromeos_amd64-generic', 'amd64-lacros', 'official', 'minimal_symbols', 'cfi', 'thin_lto',
    ],

    'chromeos_amd64-generic_lacros_rel': [
      'chromeos_amd64-generic', 'amd64-lacros',
    ],

    'chromeos_amd64-generic_lacros_dbg': [
      'chromeos_amd64-generic', 'amd64-lacros', 'debug',
    ],

    'chromeos_amd64-generic_dbg': [
      'chromeos_amd64-generic', 'debug',
    ],

    'chromeos_amd64-generic_use_fake_dbus_clients': [
      'chromeos_amd64-generic', 'use_fake_dbus_clients',
    ],

    'chromeos_arm-generic': [
      'chromeos_device', 'arm-generic',
    ],

    'chromeos_arm-generic_cfi_thin_lto_official': [
      'chromeos_device', 'arm-generic', 'cfi_full', 'thin_lto', 'official', 'full_symbols',
    ],

    'chromeos_arm-generic_dcheck_always_on': [
      'chromeos_device', 'arm-generic', 'dcheck_always_on',
    ],

    'chromeos_arm-generic_dbg': [
      'chromeos_device', 'arm-generic', 'debug',
    ],

    'chromeos_asan_lsan_fuzzer_v8_heap_release_bot': [
      'chromeos', 'asan', 'lsan', 'fuzzer', 'v8_heap', 'release_bot',
    ],

    'chromeos_betty-pi-arc_cfi_thin_lto_official': [
      'chromeos_device', 'betty-pi-arc', 'cfi_full', 'thin_lto', 'official', 'full_symbols',
    ],

    'chromeos_betty-arc-r_include_unwind_tables_official_use_fake_dbus_clients': [
      'chromeos_device', 'betty-arc-r', 'include_unwind_tables', 'official', 'use_fake_dbus_clients',
    ],

    'chromeos_betty-pi-arc_include_unwind_tables_official_use_fake_dbus_clients': [
      'chromeos_device', 'betty-pi-arc', 'include_unwind_tables', 'official', 'use_fake_dbus_clients',
    ],

    'chromeos_betty-pi-arc_dchecks': [
      'chromeos_device', 'betty-pi-arc', 'include_unwind_tables', 'official',
      'use_fake_dbus_clients', 'dcheck_always_on',
    ],

    'chromeos_eve-arc-r_include_unwind_tables_official': [
      'chromeos_device', 'eve-arc-r', 'include_unwind_tables', 'official',
    ],

    'chromeos_eve_include_unwind_tables_official': [
      'chromeos_device', 'eve', 'include_unwind_tables', 'official',
    ],

    'chromeos_kevin': [
      'chromeos_kevin'
    ],

    'chromeos_kevin_include_unwind_tables_official': [
      'chromeos_kevin', 'include_unwind_tables', 'official',
    ],

    'chromeos_msan_release_bot': [
      'chromeos', 'msan', 'release_bot',
    ],

    'chromeos_with_codecs_debug_bot': [
      'chromeos_with_codecs', 'debug_bot',
    ],

    'chromeos_with_codecs_release_bot': [
      'chromeos_with_codecs', 'release_bot',
    ],

    'chromeos_with_codecs_release_bot_coverage': [
      'chromeos_with_codecs', 'release_bot', 'use_clang_coverage',
    ],

    'chromeos_with_codecs_release_bot_javascript_coverage': [
      'chromeos_with_codecs', 'release_bot', 'use_javascript_coverage',
    ],

    'chromeos_with_codecs_release_trybot': [
      'chromeos_with_codecs', 'release_trybot', 'no_symbols',
    ],

    # Keep in sync with chromeos_with_codecs_release_trybot.
    'chromeos_with_codecs_release_trybot_code_coverage': [
      'chromeos_with_codecs', 'release_trybot', 'no_symbols',
      'use_clang_coverage', 'partial_code_coverage_instrumentation',
    ],

    'chromeos_with_codecs_release_trybot_js_cpp_code_coverage': [
      'chromeos_with_codecs', 'release_trybot', 'no_symbols',
      'use_clang_coverage', 'partial_code_coverage_instrumentation',
      'use_javascript_coverage', 'no_webui_optimize',
    ],

    'chromeos_with_codecs_release_trybot_invert_fieldtrials': [
      'chromeos_with_codecs', 'release_trybot', 'no_symbols', 'invert_fieldtrials',
    ],

    'clang_code_coverage': [
      'release_bot', 'clang', 'use_clang_coverage', 'no_symbols',
    ],

    'clang_code_coverage_ios_xctest': [
      'use_clang_coverage', 'debug_static_bot', 'x64', 'ios', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'ios_simulator_code_coverage_partial_instrumentation_xctest': [
      'use_clang_coverage', 'debug_static_bot', 'x64', 'ios', 'ios_simulator', 'partial_code_coverage_instrumentation', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'clang_tot_asan_lsan_static_release': [
      'clang_tot', 'asan', 'lsan', 'static', 'release',
    ],

    'clang_tot_cfi_full_cfi_icall_cfi_diag_thin_lto_release_static_dcheck_always_on': [
      'clang_tot', 'cfi_full', 'cfi_icall', 'cfi_diag', 'thin_lto', 'release', 'static', 'dcheck_always_on',
    ],

    'clang_tot_win_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on': [
      'clang_tot', 'cfi_full', 'cfi_diag', 'thin_lto', 'release', 'static',
      'dcheck_always_on', 'win_linker_timing',
    ],

    'clang_tot_win_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on_x86': [
      'clang_tot', 'cfi_full', 'cfi_diag', 'thin_lto', 'release', 'static',
      'dcheck_always_on', 'x86', 'win_linker_timing',
    ],

    'clang_tot_ubsan_no_recover_hack_static_release': [
      'clang_tot', 'ubsan_no_recover_hack', 'static', 'release',
    ],

    'clang_tot_linux_full_symbols_shared_release': [
      # Enable debug info, as on official builders, to catch issues with
      # optimized debug info.
      'clang_tot', 'full_symbols', 'shared', 'release',
    ],

    'clang_tot_official': [
      'clang_tot', 'official',
    ],

    'clang_tot_msan_release': [
      'clang_tot', 'msan', 'release',
    ],

    'clang_tot_minimal_symbols_shared_release': [
      'clang_tot', 'minimal_symbols', 'shared', 'release',
    ],

    'clang_tot_coverage_minimal_symbols_release': [
      'clang_tot', 'use_clang_coverage', 'minimal_symbols', 'release',
    ],

    'clang_tot_shared_release_dcheck': [
      'clang_tot', 'shared', 'release', 'dcheck_always_on',
    ],

    'clang_tot_minimal_symbols_shared_release_x86_dcheck': [
      'clang_tot', 'minimal_symbols', 'shared', 'release', 'x86', 'dcheck_always_on',
    ],

    'clang_tot_win_official_full_symbols_thin_lto_static_x86': [
      'clang_tot', 'official', 'full_symbols', 'thin_lto', 'static', 'x86', 'win_linker_timing',
    ],

    'clang_tot_win_official_full_symbols_thin_lto_static': [
      'clang_tot', 'official', 'full_symbols', 'thin_lto', 'static', 'win_linker_timing',
    ],

    'clang_tot_official_minimal_symbols_static_release': [
      'clang_tot', 'official', 'minimal_symbols', 'static', 'release',
    ],

    'clang_tot_official_minimal_symbols_static_release_x86': [
      'clang_tot', 'official', 'minimal_symbols', 'static', 'release', 'x86',
    ],

    'clang_tot_release_minimal_symbols_thin_lto_opt_static': [
      'clang_tot', 'release', 'minimal_symbols', 'thin_lto_opt', 'static',
    ],

    'clang_tot_shared_debug': [
      'clang_tot', 'shared', 'debug',
    ],

    'clang_tot_shared_debug_x86': [
      'clang_tot', 'shared', 'debug', 'x86',
    ],

    'clang_tot_tsan_release': [
      'clang_tot', 'tsan', 'release',
    ],

    'clang_tot_win_release_cross': [
      'clang_tot', 'win_cross', 'minimal_symbols', 'shared', 'release', 'dcheck_always_on',
    ],

    'codesearch_gen_chromium_android_bot': [
      'codesearch', 'android_without_codecs',
    ],

    'codesearch_gen_chromium_chromiumos_bot': [
      'codesearch', 'chromeos',
    ],

    'codesearch_gen_chromium_fuchsia_bot': [
      'codesearch_release', 'fuchsia',
    ],

    # Lacros uses different gn args to build for chromeOS device vs. Linux. For
    # simplicity, we only generate codesearch x-refs for lacros on Linux.
    'codesearch_gen_chromium_lacros_bot': [
      'codesearch', 'lacros_on_linux', 'static',
    ],

    'codesearch_gen_chromium_bot': [
      'codesearch',
    ],

    'dawn_tests_asan_release_trybot': [
      'dawn_tests', 'asan', 'release_trybot',
    ],

    'dawn_tests_release_trybot': [
      'dawn_tests', 'release_trybot',
    ],

    'dawn_tests_release_trybot_x86': [
      'dawn_tests', 'release_trybot', 'x86',
    ],

    'debug_bot': [
      'debug_bot',
    ],

    'debug_bot_blink': [
      'debug_bot_blink',
    ],

    'debug_bot_deterministic': [
      'debug_bot', 'mac_deterministic_build',
    ],

    'debug_bot_local_build': [
      'debug_bot_local_build',
    ],

    'debug_bot_enable_blink_animation_use_time_delta': [
      'debug_bot', 'enable_blink_animation_use_time_delta',
    ],

    'debug_bot_fuchsia': [
      'debug_bot', 'fuchsia',
    ],

    'debug_bot_fuchsia_arm64': [
      'debug_bot', 'fuchsia', 'arm64',
    ],

    'debug_bot_fuchsia_compile_only': [
      'debug_bot', 'fuchsia', 'compile_only',
    ],

    'debug_bot_paeverywhere_x86': [
      'debug_bot', 'paeverywhere', 'x86',
    ],

    'debug_bot_paeverywhere_x64': [
      'debug_bot', 'paeverywhere', 'x64',
    ],

    'debug_bot_paeverywhere_arm': [
      'debug_bot', 'paeverywhere', 'android_without_codecs', 'arm',
    ],

    'debug_bot_paeverywhere_arm64': [
      'debug_bot', 'paeverywhere', 'android_without_codecs', 'arm64',
    ],

    'debug_bot_x86': [
      'debug_bot', 'x86',
    ],

    'debug_bot_x86_no_com_init_hooks_with_codecs': [
      'debug_bot', 'x86', 'no_com_init_hooks', 'chrome_with_codecs'
    ],

    'fuchsia_clang_code_coverage': [
      'fuchsia', 'release_bot', 'clang', 'use_clang_coverage', 'no_symbols'
    ],

    'fuchsia_official_arm64_size': [
      'official_optimize_goma', 'fuchsia', 'arm64', 'release_bot'
    ],

    'fuchsia_official_optimize_goma': [
      'official_optimize_goma', 'fuchsia',
    ],

    'fuchsia_official_optimize_goma_trybot': [
      'official_optimize_goma_trybot', 'fuchsia',
    ],

    'gpu_fyi_tests_android_vulkan_ndk_release_trybot': [
      'gpu_fyi_android_tests', 'vulkan_ndk', 'release_trybot', 'static_angle',
    ],

    'gpu_fyi_tests_android_vulkan_ndk_release_trybot_arm64': [
      'gpu_fyi_android_tests', 'vulkan_ndk', 'release_trybot', 'arm64',
      'static_angle',
    ],

    'gpu_fyi_tests_android_vulkan_ndk_release_trybot_dcheck_off_arm64': [
      'gpu_fyi_android_tests', 'vulkan_ndk', 'release_trybot_dcheck_off',
      'arm64', 'static_angle',
    ],

    'gpu_fyi_tests_debug_trybot': [
      'gpu_fyi_tests', 'debug_bot', 'disable_nacl',
    ],

    'gpu_fyi_tests_debug_trybot_x86': [
      'gpu_fyi_tests', 'debug_bot', 'x86', 'disable_nacl',
    ],

    'gpu_fyi_tests_dx12vk_debug_trybot': [
      'gpu_fyi_tests', 'dx12vk', 'debug_bot', 'disable_nacl',
    ],

    'gpu_fyi_tests_dx12vk_release_trybot': [
      'gpu_fyi_tests', 'dx12vk', 'release_trybot', 'disable_nacl',
    ],

    'gpu_fyi_tests_release_trybot': [
      'gpu_fyi_tests', 'release_trybot', 'disable_nacl',
    ],

    'gpu_fyi_tests_release_trybot_arm64': [
      'gpu_fyi_tests', 'release_trybot', 'arm64', 'disable_nacl',
    ],

    'gpu_fyi_tests_release_trybot_asan': [
      'gpu_fyi_tests', 'release_trybot', 'asan', 'disable_nacl',
    ],

    'gpu_fyi_tests_release_trybot_fuchsia': [
      'gpu_fyi_tests', 'release_trybot', 'fuchsia', 'disable_nacl',
    ],

    'gpu_fyi_tests_release_trybot_tsan': [
      'gpu_fyi_tests', 'release_trybot', 'tsan', 'disable_nacl',
    ],

    'gpu_fyi_tests_release_trybot_x86': [
      'gpu_fyi_tests', 'release_trybot', 'x86', 'disable_nacl',
    ],

    'gpu_tests_android_release_bot_minimal_symbols_arm64_fastbuild': [
      'gpu_tests', 'android', 'release_bot', 'minimal_symbols', 'arm64',
      'resource_whitelisting', 'static_angle', 'android_fastbuild',
      'webview_google',
    ],

    'gpu_tests_android_release_bot_minimal_symbols_arm64_fastbuild_java_coverage': [
      'gpu_tests', 'android', 'release_bot', 'minimal_symbols', 'arm64',
      'resource_whitelisting', 'static_angle', 'android_fastbuild', 'webview_google',
      'android_no_proguard', 'use_java_coverage',
    ],

    # TODO(crbug/1018431): Add 'resource_whitelisting' back once bug fixed.
    # No symbols to prevent linker file too large error.
    'gpu_tests_android_release_bot_no_symbols_arm64_fastbuild_native_coverage': [
      'gpu_tests', 'android', 'release_bot', 'arm64',
      'static_angle', 'android_fastbuild', 'webview_google',
      'android_no_proguard', 'use_clang_coverage',
    ],

    'gpu_tests_android_release_trybot': [
      'gpu_tests', 'android', 'release_trybot', 'static_angle',
    ],

    'gpu_tests_android_release_trybot_arm64': [
      'gpu_tests', 'android', 'release_trybot', 'arm64', 'static_angle',
    ],

    'gpu_tests_android_release_trybot_arm64_fastbuild': [
      'gpu_tests', 'android', 'release_trybot', 'arm64', 'static_angle',
      'android_fastbuild',
    ],

    'gpu_tests_android_release_trybot_arm64_resource_whitelisting_fastbuild_java_coverage': [
      'gpu_tests', 'android', 'release_trybot', 'arm64', 'static_angle',
      'resource_whitelisting', 'android_fastbuild', 'webview_google',
      'use_java_coverage', 'partial_code_coverage_instrumentation',
    ],

    'gpu_tests_chromeos_amd64_release_trybot_dcheck_off_no_symbols': [
      'gpu_tests', 'chromeos_amd64-generic', 'release_trybot_dcheck_off',
      'no_symbols',
    ],

    'gpu_tests_chromeos_kevin_release_trybot_dcheck_off_no_symbols': [
      'gpu_tests', 'chromeos_kevin', 'release_trybot_dcheck_off', 'no_symbols',
    ],

    'gpu_tests_debug_bot': [
      'gpu_tests', 'debug_bot',
    ],

    'gpu_tests_debug_bot_x86': [
      'gpu_tests', 'debug_bot', 'x86',
    ],

    'gpu_tests_debug_bot_x86_no_symbols': [
      'gpu_tests', 'debug_bot', 'x86', 'no_symbols'
    ],

    'gpu_tests_release_bot': [
      'gpu_tests', 'release_bot',
    ],

    'gpu_tests_release_bot_minimal_symbols': [
      'gpu_tests', 'release_bot', 'minimal_symbols',
    ],

    'gpu_tests_release_bot_minimal_symbols_code_coverage': [
      'gpu_tests', 'release_bot', 'minimal_symbols', 'use_clang_coverage',
      'partial_code_coverage_instrumentation',
    ],

    'gpu_tests_release_bot_minimal_symbols_no_nacl': [
      'gpu_tests', 'release_bot', 'minimal_symbols', 'disable_nacl',
    ],

    'gpu_tests_release_bot_reclient': [
      'gpu_tests', 'release_bot_reclient',
    ],

    'gpu_tests_release_bot_x86_minimal_symbols': [
      'gpu_tests', 'release_bot', 'x86', 'minimal_symbols',
    ],

    'gpu_tests_release_bot_x86_no_symbols': [
      'gpu_tests', 'release_bot', 'x86', 'no_symbols',
    ],

    'gpu_tests_release_trybot': [
      'gpu_tests', 'release_trybot',
    ],

    'gpu_tests_release_trybot_mbi_mode_per_render_process_host': [
      'gpu_tests', 'release_trybot', 'mbi_mode_per_render_process_host'
    ],

    'gpu_tests_release_trybot_mbi_mode_per_site_instance': [
      'gpu_tests', 'release_trybot', 'mbi_mode_per_site_instance'
    ],

    # TODO(https://crbug.com/330262): Once deterministic builds are default on
    # macOS, remove this special case of gpu_tests_release_trybot.
    'gpu_tests_release_trybot_deterministic_mac': [
      'gpu_tests', 'release_trybot', 'mac_deterministic_build',
    ],

    'gpu_tests_release_trybot_deterministic_mac_code_coverage': [
      'gpu_tests', 'release_trybot', 'mac_deterministic_build',
      'use_clang_coverage', 'partial_code_coverage_instrumentation',
    ],

    'gpu_tests_release_trybot_deterministic_mac_invert_fieldtrials': [
      'gpu_tests', 'release_trybot', 'mac_deterministic_build', 'invert_fieldtrials',
    ],

    'gpu_tests_release_trybot_resource_whitelisting': [
      'gpu_tests', 'release_trybot', 'resource_whitelisting',
    ],

    # TODO(crbug.com/1004523) Delete this once coverage mode is enabled on the
    # standard Windows trybot and the dedicated coverage trybot is no longer
    # needed.
    'gpu_tests_release_trybot_resource_whitelisting_code_coverage': [
      'gpu_tests', 'release_trybot', 'resource_whitelisting',
      'use_clang_coverage', 'partial_code_coverage_instrumentation',
    ],

    'gpu_tests_release_trybot_resource_whitelisting_invert_fieldtrials': [
      'gpu_tests', 'release_trybot', 'resource_whitelisting', 'invert_fieldtrials',
    ],

    'gpu_tests_release_trybot_x86': [
      'gpu_tests', 'release_trybot', 'x86',
    ],

    'gpu_tests_release_trybot_no_symbols_use_dummy_lastchange': [
      'gpu_tests', 'release_trybot', 'no_symbols', 'use_dummy_lastchange',
    ],

    # Keep in sync with
    # gpu_tests_release_trybot_no_symbols_use_dummy_lastchange.
    'gpu_tests_release_trybot_no_symbols_use_dummy_lastchange_code_coverage': [
      'gpu_tests', 'release_trybot', 'no_symbols', 'use_dummy_lastchange',
      'use_clang_coverage', 'partial_code_coverage_instrumentation',
    ],

    'gpu_tests_release_trybot_no_symbols_use_dummy_lastchange_invert_fieldtrials': [
      'gpu_tests', 'release_trybot', 'no_symbols', 'use_dummy_lastchange',
      'invert_fieldtrials',
    ],

    'gpu_tests_release_trybot_ptr_comp': [
      'gpu_tests', 'release_trybot', 'v8_pointer_compression',
    ],

    'gpu_tests_release_trybot_x86_resource_whitelisting': [
      'gpu_tests', 'release_trybot', 'x86', 'resource_whitelisting',
    ],

    'gpu_tests_sk_dawn_release_trybot': [
      'gpu_tests', 'sk_dawn', 'release_trybot',
    ],

    'gn_linux_upload': [
      'gn_linux_upload', 'official', 'goma',
    ],

    # The 'ios_error' config is just used for auditing. iOS bots
    # actually use the ios recipes, not the chromium recipe, and look
    # up their GN arguments via files checked in under //ios/build/bots.
    # It is an error to actually use one of these configs to generate the
    # build files.
    'ios_error': [ 'error'],

    'ios_clang_tot_xctest': [
      'clang_tot', 'ios', 'ios_simulator', 'ios_cpu_x64', 'ios_disable_code_signing', 'release', 'static', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'ios_clang_device_tot_xctest': [
      'clang_tot', 'ios', 'ios_device', 'ios_cpu_arm64', 'release', 'ios_chromium_cert', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'ios_cronet_xctest': [
      'cronet_ios', 'debug_static_bot', 'ios_deployment_target_10_0', 'ios', 'ios_simulator', 'ios_cpu_x64_x86', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'ios_device_release_compile_only': [
        'compile_only', 'ios', 'ios_device', 'ios_cpu_arm64', 'ios_google_cert', 'ios_disable_code_signing', 'release_bot', 'ios_disable_xcode_project_generation',
    ],

    # doesn't have symbol_level=0
    'ios_device_release_static_bot_xctest': [
        'ios', 'ios_device', 'ios_cpu_arm64', 'ios_disable_code_signing', 'release_bot', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'ios_simulator_debug_static_bot_xctest': [
        'debug_static_bot', 'ios', 'ios_simulator', 'ios_cpu_x64', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'ios_simulator_debug_static_bot_invert_fieldtrials_xctest': [
        'debug_static_bot', 'ios', 'ios_simulator', 'ios_cpu_x64', 'invert_fieldtrials', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'ios_simulator_debug_static_bot_multi_window_xctest': [
        'debug_static_bot', 'ios_enable_multi_window', 'ios', 'ios_simulator', 'ios_cpu_x64', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'ios_simulator_release_static_asan_bot_xctest': [
        'ios', 'ios_simulator', 'ios_cpu_x64', 'release_bot', 'asan', 'xctest', 'ios_disable_xcode_project_generation',
    ],

    'lacros_on_linux_release_bot': [
      'lacros_on_linux', 'release_bot', 'also_build_ash_chrome',
    ],

    'lacros_on_linux_release_trybot': [
      'lacros_on_linux', 'release_trybot', 'also_build_ash_chrome',
    ],

    'libfuzzer_asan_debug_bot': [
      'libfuzzer', 'asan', 'debug_bot', 'shared', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_debug_bot_v8_arm64': [
      'libfuzzer', 'asan', 'debug_bot', 'shared', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'v8_simulate_arm64', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_debug_bot_x86': [
      'libfuzzer', 'asan', 'debug_bot', 'shared', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'x86', 'x86_host',  'disable_seed_corpus',
    ],

    'libfuzzer_asan_debug_bot_x86_v8_arm': [
      'libfuzzer', 'asan', 'debug_bot', 'shared', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'x86_host', 'v8_simulate_arm',  'disable_seed_corpus',
    ],

    'libfuzzer_chromeos_asan_release_bot': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chromeos_with_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_release_bot': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'mojo_fuzzer',
    ],

    'libfuzzer_asan_release_bot_reclient': [
      'libfuzzer', 'asan', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'mojo_fuzzer', 'shared_release_bot_reclient',
    ],

    'libfuzzer_asan_release_bot_v8_arm64': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'v8_simulate_arm64', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_release_bot_x86': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'x86', 'x86_host', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_release_bot_x86_v8_arm': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'x86_host', 'v8_simulate_arm', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_release_trybot': [
      'libfuzzer', 'asan', 'shared_release_trybot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'mojo_fuzzer',
    ],

    'libfuzzer_asan_clang_tot_release': [
      'libfuzzer', 'asan', 'clang_tot', 'release', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl',
    ],

    'libfuzzer_msan_release_bot': [
      'libfuzzer', 'msan', 'shared_release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'disable_seed_corpus',
    ],

    'libfuzzer_ubsan_release_bot': [
      'libfuzzer', 'ubsan_security', 'release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'disable_seed_corpus',
    ],

    'libfuzzer_mac_asan_shared_release_bot': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chrome_with_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing',
    ],

    # Note that because of optimize_for_fuzzing, Windows cannot share a config
    # with other libFuzzer builds. optimize_for_fuzzing is used by the other
    # libFuzzer build configs but it does not work on Windows.
    'libfuzzer_windows_asan_release_bot': [
      'libfuzzer', 'asan', 'release_bot', 'chrome_with_codecs', 'pdf_xfa', 'disable_nacl', 'minimal_symbols', 'mojo_fuzzer',
    ],

    'libfuzzer_windows_asan_clang_tot_release_bot': [
      'libfuzzer', 'asan', 'clang_tot', 'release', 'chrome_with_codecs', 'pdf_xfa', 'disable_nacl', 'minimal_symbols',
    ],

    'libfuzzer_windows_asan_release_trybot': [
      'libfuzzer', 'asan', 'release_trybot', 'chrome_with_codecs', 'pdf_xfa', 'disable_nacl', 'mojo_fuzzer',
    ],

    'linux_cfm_release_bot': [
      'cfm', 'release_bot', 'chromeos',
    ],

    'linux_cfm_release_trybot': [
      'cfm', 'release_trybot', 'chromeos',
    ],

    'mac_arm64_release_bot': [
      'release_bot', 'arm64',
    ],

    'mac_arm64_release_trybot': [
      'release_trybot', 'arm64',
    ],

    'mac_clang_tot_official': [
      'clang_tot', 'official', 'no_widevine_cdm_host_verification',
    ],

    'msan_no_origins_release_bot': [
      'msan_no_origins', 'release_bot',
    ],

    'msan_release_bot': [
      'msan', 'release_bot',
    ],

    'msan_release_bot_blink': [
      'msan', 'release_bot_blink',
    ],

    'official_celab_release_bot': [
      'official', 'release_bot', 'minimal_symbols',
    ],

    'official_fuchsia_arm64': [
      'arm64', 'fuchsia', 'official', 'custom_args',
    ],

    'official_fuchsia_x64': [
      'fuchsia', 'official', 'x64', 'custom_args',
    ],

    'official_goma': [
      'official', 'goma',
    ],

    'official_goma_mac': [
      'official', 'goma', 'no_widevine_cdm_host_verification',
    ],

    'official_goma_perf': [
      'official', 'goma', 'minimal_symbols', 'pgo_phase_0',
    ],

    'official_goma_mac_perf': [
      'official', 'goma', 'no_keystone_registration_framework', 'no_widevine_cdm_host_verification', 'full_symbols', 'pgo_phase_0',
    ],

    'official_goma_mac_arm_perf': [
      'official', 'goma', 'no_keystone_registration_framework', 'no_widevine_cdm_host_verification', 'full_symbols', 'arm64', 'pgo_phase_0',
    ],

    'official_goma_mac_pgo': [
      'official', 'goma', 'no_keystone_registration_framework', 'no_widevine_cdm_host_verification', 'disable_widevine_signing', 'static', 'no_symbols', 'pgo_phase_1'
    ],

    'official_goma_linux_perf': [
      'official', 'goma', 'no_gnome_keyring', 'minimal_symbols', 'pgo_phase_0',
    ],

    'official_goma_fuchsia_arm64_perf': [
      'official', 'goma', 'minimal_symbols', 'fuchsia', 'fuchsia_include_astro_images', 'arm64', 'ffmpeg_branding_chrome', 'proprietary_codecs'
    ],

    'official_goma_linux_pgo': [
      'official', 'goma', 'static', 'no_symbols', 'pgo_phase_1',
    ],

    'official_goma_chromeos_include_unwind_tables': [
      'official', 'goma', 'chromeos', 'include_unwind_tables',
    ],

    'official_goma_minimal_symbols_android': [
      'official', 'goma', 'minimal_symbols', 'android', 'pgo_phase_0', 'no_default_afdo'
    ],

    'official_goma_minimal_symbols_android_arm64': [
      'official', 'goma', 'minimal_symbols', 'android', 'arm64', 'pgo_phase_0', 'no_default_afdo'
    ],

    'official_goma_minimal_symbols_android_thin_lto_opt': [
      'official', 'goma', 'minimal_symbols', 'android', 'thin_lto_opt', 'no_default_afdo'
    ],

    'official_goma_minimal_symbols_android_thin_lto_opt_arm64': [
      'official', 'goma', 'minimal_symbols', 'android', 'thin_lto_opt', 'arm64', 'no_default_afdo'
    ],

    'official_goma_x64': [
      'official', 'goma', 'x64',
    ],

    'official_goma_x64_pgo': [
      'official', 'goma', 'x64', 'static', 'no_symbols', 'pgo_phase_1', 'no_resource_whitelisting',
    ],

    'official_goma_x86': [
      'official', 'goma', 'x86',
    ],

    'official_goma_x86_perf': [
      'official', 'goma', 'x86', 'minimal_symbols', 'pgo_phase_0',
    ],

    'official_goma_x86_pgo': [
      'official', 'goma', 'x86', 'static', 'no_symbols', 'pgo_phase_1', 'no_resource_whitelisting',
    ],

    'official_optimize_goma': [
      'official_optimize_goma',
    ],

    'official_optimize_goma_trybot': [
      'official_optimize_goma_trybot',
    ],

    'updater_debug_bot': [
      'updater_on_win_mac', 'debug_bot',
    ],

    'updater_debug_bot_x86': [
      'updater_on_win_mac', 'debug_bot', 'x86',
    ],

    'updater_release_bot': [
      'updater_on_win_mac', 'release_bot',
    ],

    'updater_release_bot_x86': [
      'updater_on_win_mac', 'release_bot', 'x86',
    ],

    'updater_release_trybot': [
      'updater_on_win_mac', 'release_trybot',
    ],

    'gpu_tests_ozone_linux_non_x11_release_trybot': [
      'gpu_tests', 'ozone_linux', 'ozone_linux_non_x11', 'release_trybot',
    ],

    'ozone_linux_release_bot': [
      'ozone_linux', 'release_bot',
    ],

    'ozone_linux_release_trybot': [
      'ozone_linux', 'release_trybot',
    ],

    'perfetto_release_bot': [
      'perfetto', 'release_bot',
    ],

    'perfetto_release_trybot': [
      'perfetto', 'release_trybot',
    ],

    'presubmit': [
      # The chromium_presubmit bot does not use mb.
      'error',
    ],

    'release_bot': [
      'release_bot',
    ],

    'release_bot_blink': [
      'release_bot_blink',
    ],

    'release_bot_blink_minimal_symbols': [
      'release_bot_blink', 'minimal_symbols',
    ],

    'release_bot_blink_minimal_symbols_no_nacl': [
      'release_bot_blink',
      'minimal_symbols',
      'disable_nacl',
    ],


    'release_bot_blink_x86_minimal_symbols': [
      'release_bot_blink', 'x86', 'minimal_symbols',
    ],

    'release_bot_blink_v8_debug': [
      'release_bot_blink', 'v8_enable_debugging_features',
    ],

    'release_bot_enable_blink_heap_verification_dcheck_always_on': [
      'release_bot_blink', 'enable_blink_heap_verification', 'dcheck_always_on',
    ],

    'release_bot_enable_v8_oilpan_dcheck_always_on': [
      'release_bot_blink', 'enable_v8_oilpan', 'dcheck_always_on',
    ],

    'release_bot_extended_tracing': [
      'release_bot', 'extended_tracing',
    ],

    'release_bot_fuchsia': [
      'release_bot', 'fuchsia',
    ],

    'release_bot_fuchsia_cast': [
      'release_bot', 'fuchsia', 'cast', 'cast', 'no_symbols',
    ],

    'release_bot_fuchsia_arm64': [
      'release_bot', 'fuchsia', 'arm64',
    ],

    'release_bot_fuchsia_arm64_cast': [
      'release_bot', 'fuchsia', 'arm64', 'cast', 'no_symbols',
    ],

    'release_bot_mac_strip_minimal_symbols': [
      'release_bot', 'mac_strip', 'minimal_symbols',
    ],

    'release_bot_mac_strip_minimal_symbols_deterministic': [
      'release_bot', 'mac_strip', 'minimal_symbols', 'mac_deterministic_build'
    ],

    'release_bot_minimal_symbols': [
      'release_bot', 'minimal_symbols',
    ],

    'release_bot_x86_minimal_symbols': [
      'release_bot', 'x86', 'minimal_symbols',
    ],

    'release_bot_minimal_symbols_enable_archive_compression': [
      'release_bot', 'minimal_symbols', 'enable_archive_compression'
    ],

    'release_bot_x86_minimal_symbols_enable_archive_compression': [
      'release_bot', 'x86', 'minimal_symbols', 'enable_archive_compression'
    ],

    'release_bot_x86_minimal_symbols_no_com_init_hooks_with_codecs': [
      'release_bot', 'x86', 'minimal_symbols', 'no_com_init_hooks', 'chrome_with_codecs'
    ],

    'release_trybot': [
      'release_trybot',
    ],

    'release_trybot_blink': [
      'release_trybot_blink',
    ],

    'release_trybot_dcheck_off': [
      'release_trybot_dcheck_off',
    ],

    'release_trybot_enable_blink_heap_verification': [
      'release_trybot_blink', 'enable_blink_heap_verification',
    ],

    'release_trybot_enable_v8_oilpan': [
      'release_trybot_blink', 'enable_v8_oilpan',
    ],

    'release_trybot_extended_tracing': [
      'release_trybot', 'extended_tracing',
    ],

    'release_trybot_fuchsia': [
      'release_trybot', 'fuchsia',
    ],

    'release_trybot_fuchsia_cast': [
      'release_trybot', 'fuchsia', 'cast',
    ],

    'release_trybot_fuchsia_arm64': [
      'release_trybot', 'fuchsia', 'arm64',
    ],

    'release_trybot_fuchsia_arm64_cast': [
      'release_trybot', 'fuchsia', 'arm64', 'cast',
    ],

    'release_trybot_no_nacl': [
      'release_trybot', 'disable_nacl',
    ],

    'release_trybot_paeverywhere_x86': [
      'release_trybot', 'paeverywhere', 'x86',
    ],

    'release_trybot_paeverywhere_x64': [
      'release_trybot', 'paeverywhere', 'x64',
    ],

    'release_trybot_paeverywhere_arm': [
      'release_trybot', 'paeverywhere', 'android_without_codecs', 'arm',
    ],

    'release_trybot_paeverywhere_arm64': [
      'release_trybot', 'paeverywhere', 'android_without_codecs', 'arm64',
    ],

    'release_trybot_tsan': [
      'release_trybot', 'tsan'
    ],

    'release_trybot_x86': [
      'release_trybot', 'x86',
    ],

    'release_bot_x86_minimal_symbols_no_clang_cxx11': [
      'release_bot', 'x86', 'minimal_symbols', 'no_clang', 'use_cxx11',
      'no_goma',
    ],

    'tsan_disable_nacl_debug_bot': [
      'tsan', 'disable_nacl', 'debug_bot',
    ],

    'tsan_disable_nacl_debug_bot_reclient': [
      'tsan', 'disable_nacl', 'debug_bot_reclient',
    ],

    'tsan_disable_nacl_release_bot': [
      'tsan', 'disable_nacl', 'release_bot',
    ],

    'tsan_disable_nacl_release_bot_reclient': [
      'tsan', 'disable_nacl', 'release_bot_reclient',
    ],

    'tsan_disable_nacl_release_trybot': [
      'tsan', 'disable_nacl', 'release_trybot',
    ],

    'ubsan_release_bot': [
      'ubsan', 'release_bot',
    ],

    'ubsan_vptr_release_bot': [
      'ubsan_vptr', 'release_bot',
    ],

    'ubsan_vptr_release_bot': [
      'ubsan_vptr', 'ubsan_no_recover_hack', 'release_bot',
    ],

    'v8_future_debug_bot': [
      'v8_future', 'debug_bot',
    ],

    'v8_future_release_bot': [
      'v8_future', 'release_bot',
    ],

    'vr_release_bot': [
      'vr', 'release_bot', 'ozone',
    ],

    'vr_release_trybot': [
      'vr', 'release_trybot', 'ozone',
    ],

    'win32_arm64_release_bot': [
      'arm64', 'disable_nacl', 'minimal_symbols', 'release_bot',
    ],

    'x86_official_optimize_goma': [
      'official_optimize_goma', 'x86',
    ],

    'x86_official_optimize_goma_trybot': [
      'official_optimize_goma_trybot', 'x86',
    ],
  },

  # This is a dict mapping a given 'mixin' name to a dict of settings that
  # mb should use. See //tools/mb/docs/user_guide.md for more information.
  'mixins': {
    'afl': { 'gn_args': 'use_afl=true' },

    'amd64-generic': {
      'args_file': '//build/args/chromeos/amd64-generic.gni',
    },

    'amd64-lacros': {
      'gn_args': 'use_ozone=true ozone_platform_wayland=true ozone_platform_x11=false target_os="chromeos" use_evdev_gestures=false use_vaapi=false use_gtk=false use_glib=false enable_linux_installer=false rtc_use_pipewire=false use_gio=false use_v8_context_snapshot=false use_custom_libcxx=false use_pulseaudio=false use_pangocairo=false chromeos_is_browser_only=true use_system_libsync=false cros_host_sysroot="//build/linux/debian_sid_amd64-sysroot" cros_v8_snapshot_sysroot="//build/linux/debian_sid_amd64-sysroot" use_custom_libcxx_for_host=true'
    },

    # We build Android with codecs on most bots to ensure maximum test
    # coverage, but use 'android_without_codecs' on bots responsible for
    # building publicly advertised non-Official Android builds --
    # which are not allowed to have proprietary codecs enabled.
    'android': {
      'mixins': ['android_without_codecs', 'chrome_with_codecs'],
    },

    'android_external': {
      'gn_args': 'enable_chrome_android_internal=false',
    },

    # It's significantly faster to build without lint and errorprone.
    'android_fastbuild': {
      'gn_args': ('use_errorprone_java_compiler=false '
                  'disable_android_lint=true'),
    },

    # TODO(https://crbug.com/1020714): This is temporary. We'd like to run a
    # smoke test on android_binary_sizes to ensure coverage of proguard, at
    # which point we can merge this into android_fastbuild. Until then, only
    # disable proguard on a few bots to gather metrics on the effect on build
    # times.
    'android_no_proguard': {
      'gn_args': 'is_java_debug=true',
    },

    'android_without_codecs': {
      'gn_args': 'target_os="android"',
    },

    'angle_deqp_tests': {
      'gn_args': 'build_angle_deqp_tests=true',
    },

    'angle_gles1_conform_tests': {
      'gn_args': 'build_angle_gles1_conform_tests=true',
    },

    'angle_tests': {
      'mixins': ['angle_trace_perf_tests', 'gpu_tests',
                 'internal_gles_conform_tests'],
    },

    'angle_specific_tests': {
      'mixins': ['angle_gles1_conform_tests', 'angle_deqp_tests',
                 'angle_trace_perf_tests', 'disable_nacl'],
    },

    'angle_specific_no_trace_tests': {
      'mixins': ['angle_gles1_conform_tests', 'angle_deqp_tests'],
    },

    'angle_trace_perf_tests': {
      'gn_args': 'build_angle_trace_perf_tests=true',
    },

    'arm': {
      'gn_args': 'target_cpu="arm"',
    },

    'arm-generic': {
      'args_file': '//build/args/chromeos/arm-generic.gni',
    },

    'arm64': {
      'gn_args': 'target_cpu="arm64"',
    },

    'arm_no_neon': {
      'mixins': ['arm'],
      'gn_args': 'arm_use_neon=false',
    },

    'asan': {
      'gn_args': 'is_asan=true',
    },

    'autofill_assistant_api': {
      'gn_args': 'enable_autofill_assistant_api=true',
    },

    'betty-arc-r': {
      'args_file': '//build/args/chromeos/betty-arc-r.gni',
    },

    'betty-pi-arc': {
      'args_file': '//build/args/chromeos/betty-pi-arc.gni',
    },

    'cast': {
      'gn_args': 'is_chromecast=true'
    },

    'cast_audio': {
      'gn_args': 'is_cast_audio_only=true'
    },

    'cfi': {
      'gn_args': 'is_cfi=true',
    },

    'cfi_full': {
      'mixins': ['cfi'],
      'gn_args': 'use_cfi_cast=true',
    },

    'cfi_icall': {
      'gn_args': 'use_cfi_icall=true',
    },

    'cfi_diag': {
      'gn_args': 'use_cfi_diag=true',
    },

    'cfi_recover': {
      'gn_args': 'use_cfi_recover=true',
    },

    'cfm': {
      'gn_args': 'is_cfm=true',
    },

    'chrome_with_codecs': {
      'mixins': ['ffmpeg_branding_chrome', 'proprietary_codecs'],
    },

    'chromeos': {
      'gn_args': 'target_os="chromeos"',
    },

    'chromeos_codecs': {
      'mixins': ['ffmpeg_branding_chromeos', 'proprietary_codecs'],
    },

    'chromeos_device': {
      'gn_args': 'is_chromeos_device=true ozone_platform_headless=true',
      'mixins': ['goma'],
    },

    'chromeos_amd64-generic': {
      'mixins': ['chromeos_device', 'amd64-generic',]
    },

    'chromeos_kevin': {
      'mixins': ['chromeos_device', 'kevin',]
    },

    'chromeos_with_codecs': {
      'mixins': ['chromeos', 'chromeos_codecs'],
    },

    'clang_tot': {
      'gn_args': 'llvm_force_head_revision=true',
      'mixins': ['clang'],
    },

    'clang': {
      'gn_args': 'is_clang=true',
    },

    # Settings used by the codesearch builders to generate cross-references.
    'codesearch': {
      'gn_args': 'clang_use_chrome_plugins=false enable_kythe_annotations=true',
      'mixins': ['goma', 'clang', 'shared', 'debug', 'minimal_symbols'],
    },
    'codesearch_release': {
      'gn_args': 'clang_use_chrome_plugins=false enable_kythe_annotations=true',
      'mixins': ['release', 'static', 'goma'],
    },

    'compile_only': {
      'mixins': ['no_symbols'],
    },

    'cronet_common': {
      'gn_args': ('disable_file_support=true disable_ftp_support=true '
                  'enable_websockets=false '
                  'include_transport_security_state_preload_list=false '
                  'use_crash_key_stubs=true use_platform_icu_alternatives=true')
    },

    'cronet_android': {
      'mixins': ['cronet_common'],
      'gn_args': ('use_partition_alloc=false enable_reporting=true '
                  'use_hashed_jni_names=true '
                  'default_min_sdk_version=16 '
                  'clang_use_default_sample_profile=false '
                  'use_thin_lto=false '
                  'enable_resource_allowlist_generation=false '
                  'enable_jdk_library_desugaring=false'),
    },

    'cronet_ios': {
      'mixins': ['cronet_common'],
      'gn_args': ('disable_brotli_filter=false is_cronet_build=true enable_remoting=false use_allocator_shim=false'),
    },

    'custom_args': {
      'args_file': '//build/custom_args.gn',
    },

    'dawn_tests': {
      'gn_args': 'use_dawn=true',
    },

    'dcheck_always_on': {
      'gn_args': 'dcheck_always_on=true',
    },

    'dcheck_off': {
      'gn_args': 'dcheck_always_on=false',
    },

    'debug': {
      'gn_args': 'is_debug=true',
    },

    'debug_bot': {
      'mixins': ['debug', 'shared', 'goma', 'minimal_symbols'],
    },

    'debug_bot_reclient': {
      'mixins': ['debug', 'shared', 'reclient', 'minimal_symbols'],
    },

    'debug_bot_blink': {
      'mixins': ['debug', 'shared', 'goma', 'minimal_symbols', 'chrome_with_codecs' ],
    },

    'debug_bot_local_build': {
      'mixins': ['debug', 'shared', 'minimal_symbols'],
    },

    'debug_static_bot': {
      'mixins': ['debug', 'static', 'minimal_symbols', 'goma'],
    },

    'disable_nacl': {
      'gn_args': 'enable_nacl=false',
    },

    'disable_seed_corpus': {
      'gn_args': 'archive_seed_corpus=false',
    },

    'disable_widevine_signing': {
      'gn_args': 'enable_widevine_cdm_host_verification = false'
    },

    'dx12vk': {
      # TODO(https://crbug.com/1010584): Explicitly enable DirectX 12.
      'mixins': ['enable_vulkan'],
    },

    'enable_blink_animation_use_time_delta': {
      'gn_args': 'blink_animation_use_time_delta=true',
    },

    'enable_blink_heap_verification': {
      'gn_args': 'enable_blink_heap_verification=true',
    },

    # This config enable compression on main waterfall win builder to reduce the
    # size of chrome installer which are downloaded by bysecting script many
    # times.
    'enable_archive_compression': {
      'gn_args': 'skip_archive_compression=false',
    },

    'enable_v8_oilpan': {
      'gn_args': 'enable_blink_heap_use_v8_oilpan=true',
    },

    'enable_vulkan': {
      'gn_args': 'enable_vulkan=true',
    },

    'eve': {
      'args_file': '//build/args/chromeos/eve.gni',
    },

    'eve-arc-r': {
      'args_file': '//build/args/chromeos/eve-arc-r.gni',
    },

    'extended_tracing': {
      'gn_args': 'extended_tracing_enabled=true',
    },

    # This mixin is used to force configs that use it to fail. It
    # is used in two cases: when we have bots that we haven't looked
    # at yet and don't know whether they need MB or not, and for bots
    # that are test-only and should never run MB.
    'error': {
      'gn_args': 'error',
    },

    'fail_on_android_expectations': {
      'gn_args': 'fail_on_android_expectations=true',
    },

    'ffmpeg_branding_chrome': {
      'gn_args': 'ffmpeg_branding="Chrome"',
    },

    'ffmpeg_branding_chromeos': {
      'gn_args': 'ffmpeg_branding="ChromeOS"',
    },

    'fuchsia': {
      'gn_args': 'target_os="fuchsia"',
    },

    'fuchsia_include_astro_images': {
      'gn_args': 'fuchsia_additional_boot_images=["//third_party/fuchsia-sdk/images-internal/astro-release/"]',
    },

    'full_symbols': {
      'gn_args': 'symbol_level=2',
    },

    'fuzzer': {
      'gn_args': 'enable_ipc_fuzzer=true',
    },

    'gn_linux_upload': {
      # We don't want to require a runtime dependency on glib in the
      # GN binary; ideally we could just turn glib off, but that doesn't
      # actually work, so we need to pretend to be doing an ozone build
      # in order for the flag to actually take effect.
      'gn_args': 'use_ozone=true',
    },

    'goma': {
      'gn_args': 'use_goma=true',
    },

    'gpu_fyi_android_tests': {
      'mixins': ['android', 'angle_trace_perf_tests', 'gpu_tests'],
    },

    'gpu_fyi_tests': {
      'mixins': ['angle_trace_perf_tests', 'gpu_tests', 'internal_gles_conform_tests'],
    },

    'gpu_tests': {
      'mixins': ['chrome_with_codecs'],
    },

    'hybrid': {
      'gn_args': 'v8_target_cpu="arm" target_cpu="x86"',
      'mixins': ['disable_nacl'],
    },

    'include_unwind_tables': {
      'gn_args': 'exclude_unwind_tables=false',
    },

    'incremental': {
      'gn_args': 'incremental_install=true',
    },

    'internal_gles_conform_tests': {
      'gn_args': 'internal_gles2_conform_tests=true build_angle_gles1_conform_tests=true',
    },

    'invert_fieldtrials': {
      'gn_args': 'invert_fieldtrials=true',
    },

    'ios': {
      'gn_args': 'target_os="ios"',
    },

    'ios_google_cert': {
      'gn_args': 'ios_code_signing_identity_description=\"Apple Development\"',
    },

    'ios_chromium_cert': {
      'gn_args': 'ios_code_signing_identity_description=\"iPhone Developer\"',
    },

    'ios_deployment_target_10_0': {
      'gn_args': 'ios_deployment_target=\"10.0\"',
    },

    'ios_cpu_x64': {
      'gn_args': 'target_cpu="x64"',
    },

    'ios_cpu_x64_x86': {
      'gn_args': 'target_cpu="x64" additional_target_cpus=["x86"]',
    },

    'ios_cpu_arm64': {
      'gn_args': 'target_cpu="arm64"',
    },

    'ios_device': {
      'gn_args': 'target_environment="device"',
    },

    'ios_simulator': {
      'gn_args': 'target_environment="simulator"',
    },

    'ios_disable_code_signing': {
      # defaults to true under ios_sdk.gni
      'gn_args': 'ios_enable_code_signing=false'
    },

    'ios_enable_multi_window': {
      'gn_args': 'ios_enable_multi_window=true'
    },

    'ios_disable_xcode_project_generation': {
      # defaults to true under build/config/ios/rules.gni
      'gn_args': 'ios_set_attributes_for_xcode_project_generation=false',
    },

    'mbi_mode_per_render_process_host': {
      'gn_args': 'mbi_mode=\"per_render_process_host\"',
    },

    'mbi_mode_per_site_instance': {
      'gn_args': 'mbi_mode=\"per_site_instance\"',
    },

    'mojo_fuzzer': {
      'gn_args': 'enable_mojom_fuzzer=true',
    },

    'kevin': {
      'args_file': '//build/args/chromeos/kevin.gni',
    },

    'lacros_on_linux': {
      'gn_args': 'target_os="chromeos" use_ozone=true ozone_platform_wayland=true ozone_platform="wayland" use_gtk=false chromeos_is_browser_only=true'
    },

    'also_build_ash_chrome': {
      'gn_args': 'also_build_ash_chrome=true',
    },

    'libfuzzer': { 'gn_args': 'use_libfuzzer=true' },

    'lsan': {
      'gn_args': 'is_lsan=true',
    },

    'mac_deterministic_build': {
      'gn_args': 'mac_deterministic_build=true',
    },

    'mac_strip': {
      'gn_args': 'enable_stripping=true',
    },

    'minimal_symbols': {
      'gn_args': 'symbol_level=1',
    },

    'msan': {
      'gn_args': 'is_msan=true msan_track_origins=2',
    },

    'msan_no_origins': {
      'gn_args': 'is_msan=true msan_track_origins=0',
    },

    'no_default_afdo': {
      'gn_args': 'clang_use_default_sample_profile=false',
    },

    'no_clang': {
      'gn_args': 'is_clang=false',
    },

    'no_com_init_hooks': {
      'gn_args': 'com_init_check_hook_disabled=true',
    },

    'no_goma': {
      'gn_args': 'use_goma=false',
    },

    'no_gnome_keyring': {
      'gn_args': 'use_gnome_keyring=false',
    },

    'no_keystone_registration_framework': {
      'gn_args': 'enable_keystone_registration_framework=false',
    },

    'no_webui_optimize': {
      'gn_args': 'optimize_webui=false',
    },

    'no_resource_whitelisting': {
      'gn_args': 'enable_resource_allowlist_generation=false',
    },

    'no_symbols': {
      'gn_args': 'symbol_level=0',
    },

    'no_widevine_cdm_host_verification': {
      'gn_args': 'ignore_missing_widevine_signing_cert=true',
    },

    'official': {
      'mixins': ['official_optimize'],
      'gn_args': 'is_chrome_branded=true',
    },

    'official_optimize': {
      'gn_args': 'is_official_build=true',
    },

    'official_optimize_goma': {
      'mixins': ['official_optimize', 'goma'],
    },

    'official_optimize_goma_trybot': {
      'mixins': ['official_optimize_goma', 'minimal_symbols', 'dcheck_always_on'],
    },

    'updater_on_win_mac': {
      'gn_args': 'is_google_branded=true',
    },

    'optimize_for_fuzzing': {
      'gn_args': 'optimize_for_fuzzing=true',
    },

    'ozone': {
      'gn_args': 'use_ozone=true',
    },

    'ozone_linux': {
      'gn_args': 'use_ozone=true ozone_platform="headless" use_bundled_weston=true',
    },

    # TODO(anglebug.com/4977): Make angle understand what platform it should
    # use. Otherwise, the use_x11 && use_ozone config breaks Linux Ozone FYI (Intel) bot
    # that exercises angle + ozone (though, it is ozone/drm in reality. We don't support
    # angle on Linux Ozone/X11/Wayland yet).
    'ozone_linux_non_x11': {
      'gn_args': 'use_x11=false'
    },

    'paeverywhere': {
      'gn_args': 'use_allocator="partition"',
    },

    # Used to pass the list of files to instrument for coverage to the compile
    # wrapper. See:
    # https://cs.chromium.org/chromium/build/scripts/slave/recipe_modules/code_coverage/api.py
    # and
    # https://cs.chromium.org/chromium/src/docs/clang_code_coverage_wrapper.md
    # For Java, see:
    # https://cs.chromium.org/chromium/src/build/android/gyp/jacoco_instr.py
    'partial_code_coverage_instrumentation': {
      'gn_args': 'coverage_instrumentation_input_file="//.code-coverage/files_to_instrument.txt"'
    },

    'pdf_xfa': {
      'gn_args': 'pdf_enable_xfa=true',
    },

    'perfetto': {
      'gn_args': 'use_perfetto_client_library=true',
    },

    'pgo_phase_0': {
      'mixins': ['strip_absolute_paths_from_debug_symbols'],
      'gn_args': 'chrome_pgo_phase=0'
    },

    'pgo_phase_1': {
      'mixins': ['strip_absolute_paths_from_debug_symbols'],
      'gn_args': 'chrome_pgo_phase=1'
    },

    # Note: This is probably not what you want to use. Instead use one of the
    # chrome_with_codecs or chromeos_with_codecs mixins.
    'proprietary_codecs': {
      'gn_args': 'proprietary_codecs=true',
    },

    'reclient': {
      'gn_args': 'use_rbe=true',
    },

    'release': {
      'gn_args': 'is_debug=false',
    },

    'release_bot': {
      'mixins': ['release', 'static', 'goma'],
    },

    # All bots that run the WPT test suite must have H.264 compiled in,
    # in order to give consistent results for WebRTC codec-dependent tests.
    'release_bot_blink': {
      'mixins': ['release', 'static', 'goma', 'chrome_with_codecs'],
    },

    'release_bot_reclient': {
      'mixins': ['release', 'static', 'reclient'],
    },

    'release_java': {
      'gn_args': 'is_java_debug=false',
    },

    'release_trybot': {
      'mixins': ['release_bot', 'minimal_symbols', 'dcheck_always_on'],
    },

    'release_trybot_blink': {
      'mixins': ['release_bot_blink', 'minimal_symbols', 'dcheck_always_on'],
    },

    'release_trybot_dcheck_off': {
      'mixins': ['release_trybot', 'dcheck_off',],
    },

    'resource_whitelisting': {
      'gn_args': 'enable_resource_allowlist_generation=true',
    },

    'shared': {
      'gn_args': 'is_component_build=true',
    },

    'shared_release_bot': {
      'mixins': ['shared', 'release', 'goma'],
    },

    'shared_release_bot_reclient': {
      'mixins': ['shared', 'release', 'reclient']
    },

    'shared_release_trybot': {
      'mixins': ['shared_release_bot', 'minimal_symbols', 'dcheck_always_on'],
    },

    'shared_release_trybot_dcheck_off': {
      'mixins': ['shared_release_bot', 'minimal_symbols', 'dcheck_off'],
    },

    'sk_dawn': {
      'gn_args': 'skia_use_dawn=true enable_skia_dawn_gtests=true',
    },

    'stable_channel': {
      'gn_args': 'android_channel="stable"',
    },

    'static': {
      'gn_args': 'is_component_build=false',
    },

    'static_angle': {
      'gn_args': 'use_static_angle=true',
    },

    'strip_debug_info': {
      'gn_args': 'strip_debug_info=true',
    },

    'strip_absolute_paths_from_debug_symbols': {
      'gn_args': 'strip_absolute_paths_from_debug_symbols=true'
    },

    'system_gbm_libdrm': {
      'gn_args': 'use_system_libdrm=true use_system_minigbm=true',
    },

    'thin_lto': {
      'gn_args': 'use_thin_lto=true',
    },

    'thin_lto_opt': {
      'gn_args': 'use_thin_lto=true thin_lto_enable_optimizations=true',
    },

    'tsan': {
      'gn_args': 'is_tsan=true',
    },

    'ubsan': {
      'gn_args': 'is_ubsan=true',
    },

    'ubsan_no_recover_hack': {
      # TODO(krasin): Remove when https://llvm.org/bugs/show_bug.cgi?id=25569
      # is fixed and just use ubsan_vptr instead.
      'mixins': ['ubsan_vptr'],
      'gn_args': 'is_ubsan_no_recover=true',
    },

    'ubsan_security': { 'gn_args': 'is_ubsan_security=true' },

    'ubsan_vptr': {
      'gn_args': 'is_ubsan_vptr=true',
    },

    'use_clang_coverage': {
      'gn_args': 'use_clang_coverage=true',
    },

    'use_cxx11': {
      'gn_args': 'use_cxx11=true',
    },

    # TODO(crbug.com/869348): Remove this if we set this by default or don't use
    # this feature.
    'use_dummy_lastchange': {
      'gn_args': 'use_dummy_lastchange=true',
    },

    'use_fake_dbus_clients': {
      'gn_args': 'use_real_dbus_clients=false',
    },

    'use_java_coverage': {
      'gn_args': 'use_jacoco_coverage=true',
    },

    'use_javascript_coverage': {
      'gn_args': 'use_javascript_coverage=true',
    },

    'v8_simulate_arm': {
      'gn_args': 'target_cpu="x86" v8_target_cpu="arm"',
    },

    'v8_simulate_arm64': {
      'gn_args': 'target_cpu="x64" v8_target_cpu="arm64"',
    },

    'v8_enable_debugging_features': {
      'gn_args': 'v8_enable_debugging_features=true',
    },

    'v8_future': {
      'gn_args': 'v8_enable_future=true',
    },

    'v8_heap': {
      'gn_args': 'v8_enable_verify_heap=true',
    },

    'v8_pointer_compression': {
      # TODO(machenbach): Temporarily toggle pointer-compression off while it
      # is on by default.
      'gn_args': 'v8_enable_pointer_compression=false',
    },

    'vr': {
      'gn_args': 'enable_vr=true',
    },

    'vulkan_ndk': {
      'gn_args': 'android32_ndk_api_level=29 android64_ndk_api_level=29',
    },

    'webview_google': {
      'gn_args': 'system_webview_package_name="com.google.android.webview"',
    },

    'win_cross': {
      'gn_args': 'target_os="win"',
    },

    'win_linker_timing': {
      'gn_args': 'win_linker_timing=true',
    },

    'xctest' : {
      'gn_args': 'enable_run_ios_unittests_with_xctest=true',
    },

    'x64': {
      'gn_args': 'target_cpu="x64"',
    },

    'x86': {
      'gn_args': 'target_cpu="x86"',
    },

    'x86_host': {
      'gn_args': 'host_cpu="x86"',
    },
  },
}
