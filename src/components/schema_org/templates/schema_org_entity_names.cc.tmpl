// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Generated by running //components/schema_org/generate_schema_org_code.py.
// Do not edit.

#include "components/schema_org/{{ header_file }}.h"
#include "base/hash/hash.h"
#include "base/no_destructor.h"
#include "base/strings/string_piece.h"

namespace schema_org {
namespace entity {

{% for entity in entities %}
const char k{{entity.name[0]|upper}}{{entity.name[1:]}}[] = "{{entity.name}}";
{% endfor %}

bool IsValidEntityName(const std::string& entity_name) {
  switch (base::PersistentHash(entity_name)) {
    {%for entity in entities %}
      case {{entity.name_hash}}:
        // {{ entity.name }}
        return true;
    {% endfor %}
  };

  return false;
}

bool IsDescendedFrom(const std::string& possible_parent,
                     const std::string& possible_child) {
  const auto possible_parent_hash = base::PersistentHash(possible_parent);

  switch (base::PersistentHash(possible_child)) {
    {%for entity in entity_parent_lookup %}
      case {{entity.name_hash}}:
        // {{ entity.name }}
        switch (possible_parent_hash) {
          {%for parent in entity.parents %}
            case {{parent.name_hash}}:
              // {{ parent.name }}
              return true;
          {% endfor %}
        }
        break;
    {% endfor %}
  };

  return false;
}


}  // entity
}  // schema_org
