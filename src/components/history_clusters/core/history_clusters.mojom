// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module history_clusters.mojom;

import "mojo/public/mojom/base/string16.mojom";
import "mojo/public/mojom/base/time.mojom";
import "url/mojom/url.mojom";

// Represents a search query related to a visit to the search results page.
struct SearchQuery {
  // Text of the search query.
  string query;
  // URL of the search query page.
  url.mojom.Url url;
};

// Available annotations for a visit.
enum Annotation {
  // Indicates that the visited URL was added to the bookmarks or was already
  // bookmarked.
  kBookmarked,
  // Indicates that the visited URL was added to a tab group or was already in a
  // tab group.
  kTabGrouped,
  // Indicates that the visited URL was the search results page of the default
  // search provider.
  kSearchResultsPage,
};

// Represents the most recent visit to a URL within a Cluster. Visits for which
// there are more recent visits to the same (or a qualifying near-duplicate) URL
// within the Cluster are omitted.
// However, the time of the least recent visit as well as the raw URLs of those
// duplicative visits are preserved for deletion purposes.
struct URLVisit {
  // Normalized URL of the visited webpage. Only Search Results Page urls will
  // be normalized for now; This is because SRP visits for the same search terms
  // have slightly different URLs due to various query params such as the AQS.
  url.mojom.Url normalized_url;

  // Title of the visited webpage.
  string page_title;

  // Time of the most recent visit in the Cluster to the same (or a qualifying
  // near-duplicate) URL.
  mojo_base.mojom.Time last_visit_time;

  // Time of the least recent visit in the Cluster to the same (or a qualifying
  // near-duplicate) URL. Equals `last_visit_time` if there is only one visit in
  // the Cluster to the same (or a qualifying near-duplicate) URL.
  mojo_base.mojom.Time first_visit_time;

  // List of raw visited URLs for `normalized_url`.
  array<url.mojom.Url> raw_urls;

  // Localized string of approximate `last_visit_time`, e.g., "2 days ago".
  string relative_date;

  // Annotations for this visit.
  array<Annotation> annotations;

  // Search queries related to this visit or one of its related visits, if
  // applicable; typically the highest scoring one.
  array<SearchQuery> related_searches;

  // Related visits to this visit; starting with the highest scoring one, if
  // applicable. Only prominently featured visits have related visits.
  array<URLVisit> related_visits;

  // Whether a related visit is initially hidden. Calculated based on `score`.
  bool below_the_fold;

  // A calculated score (i.e., calculated based on how long the tab was in
  // foreground etc).
  double score;
};

// Represents a cluster of visits generated from device history by the browser
// and displayed in the chrome://memories WebUI. Contains cluster-level metadata
// (e.g., keywords) derived from the metadata of constituent visits.
struct Cluster {
  // Cluster identifier. See //components/history/core/browser/history_types.h
  int64 id;

  // Prominently featured constituent visits; typically the highest scoring
  // one(s).
  array<URLVisit> visits;

  // Time of the most recent visit in the Cluster. Used for extracting Clusters.
  mojo_base.mojom.Time last_visit_time;

  // The content "topics", or keywords, that the memory contains/is related to.
  // These strings should never be exposed to the user directly in case they are
  // offensively wrong, but may be queried over with search terms to find
  // memories.
  array<mojo_base.mojom.String16> keywords;
};
