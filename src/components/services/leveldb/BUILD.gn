# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//services/catalog/public/tools/catalog.gni")
import("//services/service_manager/public/cpp/service.gni")
import("//services/service_manager/public/service_manifest.gni")
import("//testing/test.gni")

static_library("lib") {
  sources = [
    "env_mojo.cc",
    "env_mojo.h",
    "leveldb_database_impl.cc",
    "leveldb_database_impl.h",
    "leveldb_mojo_proxy.cc",
    "leveldb_mojo_proxy.h",
    "leveldb_service_impl.cc",
    "leveldb_service_impl.h",
  ]

  public_deps = [
    "//components/services/filesystem/public/interfaces",
    "//components/services/leveldb/public/cpp",
    "//components/services/leveldb/public/interfaces",
  ]

  deps = [
    "//mojo/public/cpp/system",
    "//services/service_manager/public/cpp",
    "//third_party/leveldatabase",
  ]
}

service("leveldb") {
  sources = [
    "leveldb_app.cc",
    "leveldb_app.h",
    "main.cc",
  ]

  deps = [
    ":lib",
    "//components/services/leveldb/public/interfaces",
    "//mojo/public/cpp/bindings",
    "//mojo/public/cpp/system",
    "//services/service_manager/public/cpp",
  ]
}

service_manifest("manifest") {
  name = "leveldb"
  source = "manifest.json"
}

test("leveldb_service_unittests") {
  sources = [
    "leveldb_mojo_unittest.cc",
    "leveldb_service_unittest.cc",
    "remote_iterator_unittest.cc",
  ]

  deps = [
    ":leveldb_service_unittests_catalog_source",
    "//base",
    "//base/test:test_support",
    "//components/services/filesystem/public/interfaces",
    "//components/services/leveldb/public/cpp",
    "//components/services/leveldb/public/interfaces",
    "//mojo/core/test:run_all_unittests",
    "//mojo/public/cpp/bindings",
    "//mojo/public/cpp/system",
    "//services/service_manager/public/cpp",
    "//services/service_manager/public/cpp/test:test_support",
    "//testing/gtest",
    "//third_party/leveldatabase",
  ]

  data_deps = [
    ":leveldb",
    "//components/services/filesystem:filesystem",
  ]
}

service_manifest("test_manifest") {
  name = "leveldb_service_unittests"
  source = "test_manifest.json"
}

catalog("leveldb_service_unittests_catalog") {
  embedded_services = [ ":test_manifest" ]
  standalone_services = [
    ":manifest",
    "//components/services/filesystem:manifest",
  ]
}

catalog_cpp_source("leveldb_service_unittests_catalog_source") {
  testonly = true
  catalog = ":leveldb_service_unittests_catalog"
  generated_function_name = "leveldb::test::CreateTestCatalog"
}
