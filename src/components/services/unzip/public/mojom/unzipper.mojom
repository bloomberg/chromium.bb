// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module unzip.mojom;

import "components/services/filesystem/public/mojom/directory.mojom";
import "mojo/public/mojom/base/file_path.mojom";
import "mojo/public/mojom/base/read_only_file.mojom";
import "sandbox/policy/mojom/sandbox.mojom";

interface UnzipFilter {
  [Sync]
  ShouldUnzipFile(mojo_base.mojom.FilePath path) => (bool result);
};

// Interface to the out-of-process unzipper. The unzipper unzips a ZIP
// archive, often for the purpose of unpacking software updates.
[ServiceSandbox=sandbox.mojom.Sandbox.kUtility]
interface Unzipper {
  // Unzip |zip_file| into |output_dir|.
  // Returns true on success, false otherwise.
  // If provided, |filter| is called for each entry of the archive (which incurs
  // one IPC for each entry) and only the entries for which it returns true are
  // extracted.
  Unzip(
      mojo_base.mojom.ReadOnlyFile zip_file,
      pending_remote<filesystem.mojom.Directory> output_dir,
      pending_remote<UnzipFilter>? filter) => (bool result);

  // Detects the encoding of filenames stored in the ZIP archive.
  // Returns an Encoding as defined in
  // third_party/ced/src/util/encodings/encodings.pb.h
  // or UNKNOWN_ENCODING in case of error.
  DetectEncoding(mojo_base.mojom.ReadOnlyFile zip_file) => (int32 encoding);
};
