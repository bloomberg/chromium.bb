// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

{
  "manifest_version": 2,

  "name": "Action Recorder Extension",
  "description": "Extension to record user actions and generate automated test recipes.",
  "version": "2.0.0",
  "minimum_chrome_version": "66",

  "icons": {
    "16": "icons/icon_idle16.png",
    "48": "icons/icon_idle48.png",
    "128": "icons/icon_idle128.png"
  },

  "browser_action": {
    "default_icon": {
      "16": "icons/icon_idle16.png",
      "32": "icons/icon_idle32.png"
    },
    "default_title": "Action Recorder (Idle)"
  },
  "background": {
    "scripts": [
      "background/background.js",
      "common_lib.js",
      "constants.js"
    ]
  },
  "content_scripts":
    [{
      "js": [
        "common_lib.js",
        "constants.js",
        "content/action_handler.js"
      ],
      "matches": ["<all_urls>"],
      // The extension should inject the action recorder script into all
      // frames, so that the extension can record user actions on any frame,
      // be it the main document or its iframes.
      "all_frames": true
    }, {
      "js": [
        "content/foreground.js"
      ],
      "matches": ["<all_urls>"]
    }],
  "web_accessible_resources": [
    // panel.html contains the extension's action recorder UI.
    "content/panel.html"
  ],
  "permissions": [
    // The "browsingData" permission allows the extension to clear the browser
    // cache at the start and the end of a web page capture session. The action
    // recorder extension will be integrated with web page capture at a future
    // date. To capture a webpage, the browser must download all of the page's
    // resources from the web. In other words, the browser cannot reach out
    // to the browser's local cache for resources. Therefore the extension must
    // clear the browser cache before starting a web page capture.
    "browsingData",
    // The "downloads" permission allows the extension to download the recorded
    // action recipe as a file.
    "downloads",
    // The "notifications" permission allows the extension to alert the user
    // when the extension malfunctions.
    "notifications",
    // The "storage" permission allows the extension to access local storage.
    // The extension uses non-persistent background scripts, meaning that the
    // extension executes the background scripts only in response to user
    // actions. When there is no user action, the extension unloads the
    // background scripts. Non-persistent background scripts cannot persist
    // local JavaScript variables between two different user actions. Instead,
    // the extension persists any variables the background script needs inside
    // local storage.
    "storage",
    // The "tabs" permission allows the extension to query for tab information.
    // When the user starts an action recording session, the extension needs
    // to access the current active tab, and obtain the following information:
    // * The extension records the active tab's URL as the start point of the
    //   recorded action recipe.
    // * The extension records the active tab's title as the title of the
    //   recorded action recipe.
    "tabs",
    // The "webNavigation" permission allows the extension to perform the
    // following tasks:
    // * Query for a list of all the frames in a web page. When the user starts
    //   a recording session, the extension needs to send a 'start-recording'
    //   message to each frame inside the target tab.
    // * Query for a frame's url and parent frame Id. When the user interacts
    //   with an element inside an iframe, the extension needs to record a
    //   path from the tab's root frame to the iframe that the user is
    //   interacting with. The extension derives this path by traversing a
    //   frames's ancestors.
    // * Receive notifications when a frame completed navigation. During a
    //   recording session, the user can trigger a new page load in the
    //   target tab, or an iframe inside the target tab. Once the tab or iframe
    //   finishes loading, the extension needs to send a message to the tab or
    //   iframe to resume recording.
    "webNavigation"
  ]
}