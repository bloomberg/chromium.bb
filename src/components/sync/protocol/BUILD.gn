# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/jumbo.gni")
import("//third_party/protobuf/proto_library.gni")
import("protocol_sources.gni")

proto_library("protocol") {
  sources = sync_protocol_sources
  extra_configs = [ "//build/config/compiler:wexit_time_destructors" ]
}

jumbo_static_library("util") {
  sources = [
    "proto_enum_conversions.cc",
    "proto_enum_conversions.h",
    "proto_memory_estimations.cc",
    "proto_memory_estimations.h",
    "proto_value_conversions.cc",
    "proto_value_conversions.h",
    "proto_visitors.h",
    "sync_protocol_error.cc",
    "sync_protocol_error.h",
  ]

  configs += [ "//build/config:precompiled_headers" ]

  public_deps = [
    "//base",
    "//components/sync/base",
  ]
}

if (is_android) {
  import("//build/config/android/rules.gni")

  _test_support_prepared_protos_dir =
      "$root_gen_dir/test_support_proto_java_prepare/"
  action("test_support_java_prepare") {
    script = "prepare_protos_for_java_tests.py"
    inputs = sync_protocol_sources
    outputs = process_file_template(
            sync_protocol_sources,
            [ "$_test_support_prepared_protos_dir/{{source_file_part}}" ])
    args = [
      "--output_dir",
      rebase_path(_test_support_prepared_protos_dir, root_build_dir),
    ]
    args += rebase_path(sync_protocol_sources, root_build_dir)
  }

  proto_java_library("test_support_java") {
    proto_path = _test_support_prepared_protos_dir
    sources = get_target_outputs(":test_support_java_prepare")
    deps = [
      ":test_support_java_prepare",
    ]
  }
}
