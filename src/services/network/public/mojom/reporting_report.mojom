// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module network.mojom;

import "url/mojom/url.mojom";
import "mojo/public/mojom/base/time.mojom";
import "mojo/public/mojom/base/values.mojom";
import "mojo/public/mojom/base/unguessable_token.mojom";


// The status of a Reporting API report.
enum ReportingApiReportStatus {
  kQueued,
  kPending,
  kDoomed,
  kSuccess,
};

// A Reporting API report.
struct ReportingApiReport {
  mojo_base.mojom.UnguessableToken id;
  // The URL of the document that triggered the report.
  url.mojom.Url url;
  // The name of the endpoint group that should be used to deliver the report.
  string group;
  // The type of the report (specifies the set of data that is contained
  // in the report body).
  string type;
  // When the report was generated.
  mojo_base.mojom.TimeTicks timestamp;
  // How many uploads deep the related request was.
  int32 depth;
  // The number of delivery attempts made so far, not including an active
  // attempt.
  int32 attempts;
  // The body of the report.
  mojo_base.mojom.DictionaryValue body;
  // The status of the report.
  ReportingApiReportStatus status;
};

// Indirectly listens to changes in the Reporting Service via
// ReportingCacheObserver as intermediate
interface ReportingApiObserver {
  // Called whenever a report is added
  OnReportAdded(ReportingApiReport report);
  // Called whenever a report is updated (status change or attempts incremented)
  OnReportUpdated(ReportingApiReport report);
};