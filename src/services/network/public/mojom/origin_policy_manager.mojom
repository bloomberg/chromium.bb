// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module network.mojom;

import "url/mojom/origin.mojom";
import "url/mojom/url.mojom";

// The state of a returned origin policy.
enum OriginPolicyState {
  // The origin policy was successfully retrieved and its contents is available.
  kLoaded,
  // There has been an error when attempting to retrieve the policy. For example
  // this could mean the server has returned a 404 when attempting to retrieve
  // the origin policy.
  kCannotLoadPolicy,
  // An invalid redirect has been encountered. The only valid redirect is if
  // we requested the default "/.well-known/origin-policy", to which the
  // server MUST respond with a redirect to the latest origin policy. Any
  // other redirect (or more than 1 redirect) is invalid.
  // https://wicg.github.io/origin-policy/#origin-policy-well-known
  kInvalidRedirect,
  // There is no need to apply an origin policy. This could be (for example) if
  // an exception has been added for the requested origin.
  kNoPolicyApplies,
  // Other origin policy state.
  kOther
};

// Contains the parsed result of an origin policy file as a struct of the
// relevant fields.
struct OriginPolicyContents {
  // The feature policy that is dictated by the origin policy. Each feature
  // is one member of the array.
  // https://w3c.github.io/webappsec-feature-policy/
  // array<string> features;

  // These two fields together represent the CSP that should be applied to the
  // origin, based on the origin policy.
  // https://w3c.github.io/webappsec-csp/

  // The "enforced" portion of the CSP. This CSP is to be treated as having
  // an "enforced" disposition.
  // https://w3c.github.io/webappsec-csp/#policy-disposition
  // array<string> content_security_policies;

  // The "report-only" portion of the CSP. This CSP is to be treated as having
  // a "report" disposition.
  // https://w3c.github.io/webappsec-csp/#policy-disposition
  // array<string> content_security_policies_report_only;

  // TODO(andypaicu): remove this when the policy is parsed in the network
  // service.
  // For now the raw contents is the only available part. When the policy file
  // will be parsed in the network service the other (commented) fields will be
  // properly populated.
  string raw_policy;
};

// Represents the result of retrieving an origin policy.
struct OriginPolicy {

  // The state of the origin policy. Possible values are explain in the
  // OriginPolicyState struct comments.
  OriginPolicyState state;

  // The final URL from which the policy has been retrieved. If unsuccessful,
  // it will be the URL from which the policy was attempted to be retrieved.
  // This is useful (for example) for displaying this information to the user
  // as part of an interstitial page.
  url.mojom.Url policy_url;

  // The origin policy contents. If `state` is `kLoaded` this will be populated,
  // otherwise it will be `null`.
  OriginPolicyContents? contents;
};

// An interface for handling all origin policy related operations.
// https://wicg.github.io/origin-policy/
interface OriginPolicyManager {
  // Attempts to retrieve the origin policy for an origin and
  // `Sec-Origin-Policy` HTTP header value. Calls back with the result.
  // https://wicg.github.io/origin-policy/#origin-policy-header
  RetrieveOriginPolicy(url.mojom.Origin origin, string header_value)
      => (OriginPolicy origin_policy);
};
