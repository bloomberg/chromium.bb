# Copyright 2021 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("assistant_client") {
  sources = [
    "assistant_client.cc",
    "assistant_client.h",
    "assistant_client_impl.cc",
    "assistant_client_impl.h",
    "assistant_client_v1.cc",
    "assistant_client_v1.h",
  ]

  deps = [
    ":libassistant_client",
    "external_services:grpc_services_initializer",
    "//base",
    "//chromeos/assistant/internal",
    "//chromeos/services/assistant/public/cpp",
    "//libassistant/shared/internal_api:assistant_manager_internal",
    "//libassistant/shared/public",
  ]
}

source_set("grpc_client") {
  sources = [
    "grpc_client_cq_tag.h",
    "grpc_client_thread.cc",
    "grpc_client_thread.h",
    "grpc_state.h",
  ]

  public_deps = [
    ":grpc_util",
    "//third_party/grpc:grpc++",
  ]

  deps = [
    "//base",
    "//third_party/protobuf:protobuf_lite",
  ]

  # Make grpc_config as all dependent to avoid adding public deps
  # for any top-level targets that are not immediate dependents and
  # indirectly includes headers from grpc through grpc_libassistant_client header.
  all_dependent_configs = [ "//third_party/grpc:grpc_config" ]
}

source_set("grpc_service") {
  sources = [
    "async_service_driver.h",
    "services_initializer_base.cc",
    "services_initializer_base.h",
  ]

  deps = [
    ":grpc_util",
    "//base",
    "//third_party/grpc:grpc++",
  ]
}

source_set("grpc_util") {
  sources = [
    "grpc_util.cc",
    "grpc_util.h",
  ]

  deps = [
    "//base",
    "//third_party/grpc:grpc++",
    "//third_party/protobuf:protobuf_lite",
  ]
}

source_set("libassistant_client") {
  sources = [
    "grpc_libassistant_client.cc",
    "grpc_libassistant_client.h",
  ]

  public_deps = [ "//chromeos/assistant/internal/proto:assistant" ]

  deps = [
    ":grpc_client",
    "//base",
    "//chromeos/assistant/internal:support",
  ]

  # Make grpc_config as all dependent to avoid adding public deps
  # for any top-level targets that are not immediate dependents and
  # indirectly includes headers from grpc through grpc_libassistant_client header.
  all_dependent_configs = [ "//third_party/grpc:grpc_config" ]
}
