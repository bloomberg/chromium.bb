# Copyright 2022 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
import("//build/config/coverage/coverage.gni")
import("//build/config/python.gni")

group("orchestrator_all") {
  data_deps = [
    # blink merge scripts the Orchestrator needs to merge blink test results
    ":blink_merge_web_test_results_py",
    ":blinkpy_merge_results_py",

    # merge scripts the Orchestrator needs to merge test results and coverage
    # profile information
    ":code_coverage_merge_results_py",
    ":code_coverage_merge_steps_py",
    ":standard_gtest_merge_py",
    ":standard_isolated_script_merge_py",
  ]

  data = [
    # Various merge/collect scripts will likely need a venv specified in
    # the root vpython spec files.
    "//.vpython",
    "//.vpython3",

    # Test specs the Orchestrator needs to trigger swarming tests
    "//testing/buildbot/*.json",
  ]

  # Orchestrator will run this script to curl for the coverage tool, which
  # merges and outputs coverage data
  if (use_clang_coverage) {
    data += [ "//tools/clang/scripts/update.py" ]
  }

  if (use_jacoco_coverage) {
    data += [
      "//third_party/jdk/current/bin/java",
      "//third_party/jacoco/lib/jacococli.jar",
    ]
  }
  write_runtime_deps = "$root_out_dir/orchestrator_all.runtime_deps"
}

# blink merge scripts pydeps files for the Orchestrator
python_library("blink_merge_web_test_results_py") {
  pydeps_file = "//third_party/blink/tools/merge_web_test_results.pydeps"
}

python_library("blinkpy_merge_results_py") {
  pydeps_file =
      "//third_party/blink/tools/blinkpy/web_tests/merge_results.pydeps"
}

# pydeps files for merge scripts needed by the Orchestrator
python_library("standard_isolated_script_merge_py") {
  pydeps_file = "//testing/merge_scripts/standard_isolated_script_merge.pydeps"
}

python_library("standard_gtest_merge_py") {
  pydeps_file = "//testing/merge_scripts/standard_gtest_merge.pydeps"
}

python_library("code_coverage_merge_results_py") {
  pydeps_file = "//testing/merge_scripts/code_coverage/merge_results.pydeps"
}

python_library("code_coverage_merge_steps_py") {
  pydeps_file = "//testing/merge_scripts/code_coverage/merge_steps.pydeps"
}
