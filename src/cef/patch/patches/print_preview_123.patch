diff --git chrome/browser/download/download_prefs.cc chrome/browser/download/download_prefs.cc
index a45799d6fc9ee..d884e88e754cc 100644
--- chrome/browser/download/download_prefs.cc
+++ chrome/browser/download/download_prefs.cc
@@ -24,6 +24,7 @@
 #include "base/strings/utf_string_conversions.h"
 #include "build/build_config.h"
 #include "build/chromeos_buildflags.h"
+#include "cef/libcef/features/runtime.h"
 #include "chrome/browser/download/chrome_download_manager_delegate.h"
 #include "chrome/browser/download/download_core_service_factory.h"
 #include "chrome/browser/download/download_core_service_impl.h"
@@ -60,6 +61,10 @@
 #include "chrome/browser/ui/pdf/adobe_reader_info_win.h"
 #endif
 
+#if BUILDFLAG(ENABLE_CEF)
+#include "cef/libcef/browser/alloy/alloy_download_util.h"
+#endif
+
 using content::BrowserContext;
 using content::BrowserThread;
 using content::DownloadManager;
@@ -340,6 +345,11 @@ DownloadPrefs* DownloadPrefs::FromDownloadManager(
 // static
 DownloadPrefs* DownloadPrefs::FromBrowserContext(
     content::BrowserContext* context) {
+#if BUILDFLAG(ENABLE_CEF)
+  if (cef::IsAlloyRuntimeEnabled()) {
+    return alloy::GetDownloadPrefsFromBrowserContext(context);
+  }
+#endif
   return FromDownloadManager(context->GetDownloadManager());
 }
 
diff --git chrome/browser/printing/print_preview_dialog_controller.cc chrome/browser/printing/print_preview_dialog_controller.cc
index 1cf3cbf2a5ed0..09f43d550eebc 100644
--- chrome/browser/printing/print_preview_dialog_controller.cc
+++ chrome/browser/printing/print_preview_dialog_controller.cc
@@ -15,6 +15,7 @@
 #include "build/branding_buildflags.h"
 #include "build/build_config.h"
 #include "build/chromeos_buildflags.h"
+#include "cef/libcef/features/features.h"
 #include "chrome/browser/browser_process.h"
 #include "chrome/browser/printing/print_view_manager.h"
 #include "chrome/browser/task_manager/web_contents_tags.h"
diff --git chrome/browser/printing/print_view_manager_base.cc chrome/browser/printing/print_view_manager_base.cc
index c9f1502da55d8..874c95c2db26c 100644
--- chrome/browser/printing/print_view_manager_base.cc
+++ chrome/browser/printing/print_view_manager_base.cc
@@ -248,12 +248,13 @@ void UpdatePrintSettingsOnIO(
     mojom::PrintManagerHost::UpdatePrintSettingsCallback callback,
     scoped_refptr<PrintQueriesQueue> queue,
     base::Value job_settings,
-    base::WeakPtr<PrintViewManagerBase> manager) {
+    base::WeakPtr<PrintViewManagerBase> manager,
+    int process_id,
+    int routing_id) {
   DCHECK_CURRENTLY_ON(content::BrowserThread::IO);
   std::unique_ptr<PrinterQuery> printer_query = queue->PopPrinterQuery(cookie);
   if (!printer_query) {
-    printer_query = queue->CreatePrinterQuery(
-        content::ChildProcessHost::kInvalidUniqueID, MSG_ROUTING_NONE);
+    printer_query = queue->CreatePrinterQuery(process_id, routing_id);
   }
   auto* printer_query_ptr = printer_query.get();
   printer_query_ptr->SetSettings(
@@ -667,6 +668,7 @@ void PrintViewManagerBase::UpdatePrintSettings(
       job_settings.SetIntKey(kSettingRasterizePdfDpi, value);
   }
 
+  content::RenderFrameHost* render_frame_host = GetCurrentTargetFrame();
   auto callback_wrapper =
       base::BindOnce(&PrintViewManagerBase::UpdatePrintSettingsReply,
                      weak_ptr_factory_.GetWeakPtr(), std::move(callback));
@@ -674,7 +676,9 @@ void PrintViewManagerBase::UpdatePrintSettings(
       FROM_HERE,
       base::BindOnce(&UpdatePrintSettingsOnIO, cookie,
                      std::move(callback_wrapper), queue_,
-                     std::move(job_settings), weak_ptr_factory_.GetWeakPtr()));
+                     std::move(job_settings), weak_ptr_factory_.GetWeakPtr(),
+                     render_frame_host->GetProcess()->GetID(),
+                     render_frame_host->GetRoutingID()));
 }
 #endif  // BUILDFLAG(ENABLE_PRINT_PREVIEW)
 
diff --git chrome/browser/printing/print_view_manager_base.h chrome/browser/printing/print_view_manager_base.h
index 5771a3ebd7614..acec0bea2841b 100644
--- chrome/browser/printing/print_view_manager_base.h
+++ chrome/browser/printing/print_view_manager_base.h
@@ -150,9 +150,6 @@ class PrintViewManagerBase : public PrintManager, public PrintJob::Observer {
   // Manages the low-level talk to the printer.
   scoped_refptr<PrintJob> print_job_;
 
- private:
-  friend class TestPrintViewManager;
-
   // content::WebContentsObserver implementation.
   void RenderFrameHostStateChanged(
       content::RenderFrameHost* render_frame_host,
diff --git chrome/browser/resources/print_preview/ui/destination_dialog.html chrome/browser/resources/print_preview/ui/destination_dialog.html
index 920f646f06484..76c0b5e5ee04b 100644
--- chrome/browser/resources/print_preview/ui/destination_dialog.html
+++ chrome/browser/resources/print_preview/ui/destination_dialog.html
@@ -25,10 +25,7 @@
     </print-preview-destination-list>
   </div>
   <div slot="button-container">
-    <cr-button on-click="onManageButtonClick_">
-      $i18n{manage}
-      <iron-icon icon="cr:open-in-new" id="manageIcon"></iron-icon>
-    </cr-button>
+    <div></div>
     <cr-button class="cancel-button" on-click="onCancelButtonClick_">
       $i18n{cancel}
     </cr-button>
diff --git chrome/browser/ui/webui/constrained_web_dialog_ui.cc chrome/browser/ui/webui/constrained_web_dialog_ui.cc
index 8c5ba47779d24..69dff1ae88000 100644
--- chrome/browser/ui/webui/constrained_web_dialog_ui.cc
+++ chrome/browser/ui/webui/constrained_web_dialog_ui.cc
@@ -26,6 +26,8 @@
 #include "chrome/browser/extensions/tab_helper.h"
 #endif
 
+#include "cef/libcef/features/features.h"
+
 using content::RenderFrameHost;
 using content::WebContents;
 using content::WebUIMessageHandler;
@@ -57,8 +59,10 @@ class ConstrainedWebDialogDelegateUserData
 ConstrainedWebDialogUI::ConstrainedWebDialogUI(content::WebUI* web_ui)
     : WebUIController(web_ui) {
 #if BUILDFLAG(ENABLE_EXTENSIONS)
+#if !BUILDFLAG(ENABLE_CEF)
   extensions::TabHelper::CreateForWebContents(web_ui->GetWebContents());
 #endif
+#endif
 }
 
 ConstrainedWebDialogUI::~ConstrainedWebDialogUI() = default;
diff --git chrome/browser/ui/webui/print_preview/pdf_printer_handler.cc chrome/browser/ui/webui/print_preview/pdf_printer_handler.cc
index c4442eabef9b9..4196fdb4281cd 100644
--- chrome/browser/ui/webui/print_preview/pdf_printer_handler.cc
+++ chrome/browser/ui/webui/print_preview/pdf_printer_handler.cc
@@ -21,6 +21,7 @@
 #include "base/values.h"
 #include "build/build_config.h"
 #include "build/chromeos_buildflags.h"
+#include "cef/libcef/features/runtime.h"
 #include "chrome/browser/app_mode/app_mode_utils.h"
 #include "chrome/browser/browser_process.h"
 #include "chrome/browser/download/download_prefs.h"
@@ -62,6 +63,10 @@
 #include "chromeos/lacros/lacros_service.h"
 #endif
 
+#if BUILDFLAG(ENABLE_CEF)
+#include "cef/libcef/browser/alloy/alloy_dialog_util.h"
+#endif
+
 namespace printing {
 
 namespace {
@@ -414,16 +419,18 @@ void PdfPrinterHandler::SelectFile(const base::FilePath& default_filename,
     service->GetRemote<crosapi::mojom::DriveIntegrationService>()
         ->GetMountPointPath(
             base::BindOnce(&PdfPrinterHandler::OnSaveLocationReady,
-                           weak_ptr_factory_.GetWeakPtr(),
+                           weak_ptr_factory_.GetWeakPtr(), initiator,
                            std::move(default_filename), prompt_user));
     return;
   }
 #endif
 
-  OnSaveLocationReady(default_filename, prompt_user, GetSaveLocation());
+  OnSaveLocationReady(initiator, default_filename, prompt_user,
+                      GetSaveLocation());
 }
 
 void PdfPrinterHandler::OnSaveLocationReady(
+    content::WebContents* initiator,
     const base::FilePath& default_filename,
     bool prompt_user,
     const base::FilePath& path) {
@@ -441,10 +448,27 @@ void PdfPrinterHandler::OnSaveLocationReady(
   // If the directory is empty there is no reason to create it or use the
   // default location.
   if (path.empty()) {
+#if BUILDFLAG(ENABLE_CEF)
+    if (cef::IsAlloyRuntimeEnabled()) {
+      ShowCefSaveAsDialog(initiator, default_filename, path);
+      return;
+    }
+#endif
     OnDirectorySelected(default_filename, path);
     return;
   }
 
+  auto callback = base::BindOnce(&PdfPrinterHandler::OnDirectorySelected,
+                                 weak_ptr_factory_.GetWeakPtr(),
+                                 default_filename);
+#if BUILDFLAG(ENABLE_CEF)
+  if (cef::IsAlloyRuntimeEnabled()) {
+    callback = base::BindOnce(&PdfPrinterHandler::ShowCefSaveAsDialog,
+                              weak_ptr_factory_.GetWeakPtr(), initiator,
+                              default_filename);
+  }
+#endif
+
   // Get default download directory. This will be used as a fallback if the
   // save directory does not exist.
   DownloadPrefs* download_prefs = DownloadPrefs::FromBrowserContext(profile_);
@@ -452,8 +476,7 @@ void PdfPrinterHandler::OnSaveLocationReady(
   base::ThreadPool::PostTaskAndReplyWithResult(
       FROM_HERE, {base::MayBlock(), base::TaskPriority::BEST_EFFORT},
       base::BindOnce(&SelectSaveDirectory, path, default_path),
-      base::BindOnce(&PdfPrinterHandler::OnDirectorySelected,
-                     weak_ptr_factory_.GetWeakPtr(), default_filename));
+      std::move(callback));
 }
 
 void PdfPrinterHandler::PostPrintToPdfTask() {
@@ -499,6 +522,36 @@ void PdfPrinterHandler::OnDirectorySelected(const base::FilePath& filename,
       platform_util::GetTopLevel(preview_web_contents_->GetNativeView()), NULL);
 }
 
+#if BUILDFLAG(ENABLE_CEF)
+
+void PdfPrinterHandler::ShowCefSaveAsDialog(content::WebContents* initiator,
+                                            const base::FilePath& filename,
+                                            const base::FilePath& directory) {
+  base::FilePath path = directory.Append(filename);
+
+  blink::mojom::FileChooserParams params;
+  params.mode = blink::mojom::FileChooserParams::Mode::kSave;
+  params.default_file_name = path;
+  params.accept_types.push_back(
+      alloy::FilePathTypeToString16(path.Extension()));
+
+  alloy::RunFileChooser(initiator, params,
+      base::BindOnce(&PdfPrinterHandler::SaveAsDialogDismissed,
+                     weak_ptr_factory_.GetWeakPtr()));
+}
+
+void PdfPrinterHandler::SaveAsDialogDismissed(
+    int selected_accept_filter,
+    const std::vector<base::FilePath>& file_paths) {
+  if (file_paths.size() == 1) {
+    FileSelected(file_paths[0], 0, nullptr);
+  } else {
+    FileSelectionCanceled(nullptr);
+  }
+}
+
+#endif  // BUILDFLAG(ENABLE_CEF)
+
 base::FilePath PdfPrinterHandler::GetSaveLocation() const {
 #if BUILDFLAG(IS_CHROMEOS_ASH)
   drive::DriveIntegrationService* drive_service =
diff --git chrome/browser/ui/webui/print_preview/pdf_printer_handler.h chrome/browser/ui/webui/print_preview/pdf_printer_handler.h
index 46c8b1d08b075..1ee95cd7c3240 100644
--- chrome/browser/ui/webui/print_preview/pdf_printer_handler.h
+++ chrome/browser/ui/webui/print_preview/pdf_printer_handler.h
@@ -12,6 +12,7 @@
 #include "base/memory/ref_counted.h"
 #include "base/memory/weak_ptr.h"
 #include "build/chromeos_buildflags.h"
+#include "cef/libcef/features/features.h"
 #include "chrome/browser/ui/webui/print_preview/printer_handler.h"
 #include "ui/shell_dialogs/select_file_dialog.h"
 
@@ -95,10 +96,20 @@ class PdfPrinterHandler : public PrinterHandler,
   void OnDirectorySelected(const base::FilePath& filename,
                            const base::FilePath& directory);
 
-  void OnSaveLocationReady(const base::FilePath& default_filename,
+  void OnSaveLocationReady(content::WebContents* initiator,
+                           const base::FilePath& default_filename,
                            bool prompt_user,
                            const base::FilePath& path);
 
+#if BUILDFLAG(ENABLE_CEF)
+  void ShowCefSaveAsDialog(content::WebContents* initiator,
+                           const base::FilePath& filename,
+                           const base::FilePath& directory);
+
+  void SaveAsDialogDismissed(int selected_accept_filter,
+                             const std::vector<base::FilePath>& file_paths);
+#endif
+
   // Return save location as the Drive mount or fetch from Download Preferences.
   base::FilePath GetSaveLocation() const;
 
diff --git chrome/browser/ui/webui/print_preview/print_preview_ui.cc chrome/browser/ui/webui/print_preview/print_preview_ui.cc
index f35a751173b05..0c96bc1d7ce96 100644
--- chrome/browser/ui/webui/print_preview/print_preview_ui.cc
+++ chrome/browser/ui/webui/print_preview/print_preview_ui.cc
@@ -22,6 +22,7 @@
 #include "base/values.h"
 #include "build/build_config.h"
 #include "build/chromeos_buildflags.h"
+#include "cef/libcef/features/runtime.h"
 #include "chrome/browser/browser_process.h"
 #include "chrome/browser/pdf/pdf_extension_util.h"
 #include "chrome/browser/printing/background_printing_manager.h"
@@ -97,6 +98,13 @@ const char16_t kBasicPrintShortcut[] = u"\u0028\u21e7\u2318\u0050\u0029";
 const char16_t kBasicPrintShortcut[] = u"(Ctrl+Shift+P)";
 #endif
 
+const char16_t* GetBasicPrintShortcut() {
+  if (cef::IsAlloyRuntimeEnabled()) {
+    return u"";
+  }
+  return kBasicPrintShortcut;
+}
+
 constexpr char kInvalidArgsForDidStartPreview[] =
     "Invalid arguments for DidStartPreview";
 constexpr char kInvalidPageNumberForDidPreviewPage[] =
@@ -342,7 +350,7 @@ void AddPrintPreviewStrings(content::WebUIDataSource* source) {
                     chrome::kCloudPrintCertificateErrorLearnMoreURL);
 
 #if !defined(OS_CHROMEOS)
-  const std::u16string shortcut_text(kBasicPrintShortcut);
+  const std::u16string shortcut_text(GetBasicPrintShortcut());
   source->AddString("systemDialogOption",
                     l10n_util::GetStringFUTF16(
                         IDS_PRINT_PREVIEW_SYSTEM_DIALOG_OPTION, shortcut_text));
