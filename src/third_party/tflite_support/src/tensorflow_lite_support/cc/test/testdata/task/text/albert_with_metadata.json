{
  "name": "Albert Question and Answerer",
  "description": "Answers questions based on the content of a given passage. To integrate the model into your app, try the `BertQuestionAnswerer` API in the TensorFlow Lite Task library. `BertQuestionAnswerer` takes a passage string and a query string, and returns the answer strings. It encapsulates the processing logic of inputs and outputs and runs the inference with the best practice.",
  "version": "v1",
  "subgraph_metadata": [
    {
      "input_tensor_metadata": [
        {
          "name": "ids",
          "description": "Tokenized ids of input text as concatenated query and passage.",
          "content": {
            "content_properties_type": "FeatureProperties",
            "content_properties": {
            }
          }
        },
        {
          "name": "mask",
          "description": "Mask with 1 for real tokens and 0 for padding tokens.",
          "content": {
            "content_properties_type": "FeatureProperties",
            "content_properties": {
            }
          }
        },
        {
          "name": "segment_ids",
          "description": "0 for query and 1 for passage tokens.",
          "content": {
            "content_properties_type": "FeatureProperties",
            "content_properties": {
            }
          }
        }
      ],
      "output_tensor_metadata": [
        {
          "name": "end_logits",
          "description": "logits over the sequence which indicates the end position of the answer span with closed interval.",
          "content": {
            "content_properties_type": "FeatureProperties",
            "content_properties": {
            }
          }
        },
        {
          "name": "start_logits",
          "description": "logits over the sequence which indicates the start position of the answer span with closed interval.",
          "content": {
            "content_properties_type": "FeatureProperties",
            "content_properties": {
            }
          }
        }
      ],
      "input_process_units": [
        {
          "options_type": "SentencePieceTokenizerOptions",
          "options": {
            "sentencePiece_model": [
              {
                "name": "30k-clean.model",
                "description": "The sentence piece model file."
              }
            ],
            "vocab_file": [
              {
                "name": "30k-clean.vocab",
                "description": "Vocabulary file for the SentencePiece tokenizer. This file is optional during tokenization, while the sentence piece model is mandatory.",
                "type": "VOCABULARY"
              }
            ]
          }
        }
      ]
    }
  ],
  "author": "TensorFlow",
  "license": "Apache License. Version 2.0 http://www.apache.org/licenses/LICENSE-2.0.",
  "min_parser_version": "1.1.0"
}
