/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void PPCInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O) {
  static const char AsmStrs[] = {
  /* 0 */ '#', 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 9, 0,
  /* 16 */ 'b', 'd', 'z', 'l', 'a', '+', 32, 0,
  /* 24 */ 'b', 'd', 'n', 'z', 'l', 'a', '+', 32, 0,
  /* 33 */ 'b', 'd', 'z', 'a', '+', 32, 0,
  /* 40 */ 'b', 'd', 'n', 'z', 'a', '+', 32, 0,
  /* 48 */ 'b', 'd', 'z', 'l', '+', 32, 0,
  /* 55 */ 'b', 'd', 'n', 'z', 'l', '+', 32, 0,
  /* 63 */ 'b', 'd', 'z', '+', 32, 0,
  /* 69 */ 'b', 'd', 'n', 'z', '+', 32, 0,
  /* 76 */ 'b', 'c', 'l', 32, '2', '0', ',', 32, '3', '1', ',', 32, 0,
  /* 89 */ 'b', 'c', 't', 'r', 'l', 10, 9, 'l', 'd', 32, '2', ',', 32, 0,
  /* 103 */ 'b', 'c', 't', 'r', 'l', 10, 9, 'l', 'w', 'z', 32, '2', ',', 32, 0,
  /* 118 */ 'b', 'c', 32, '1', '2', ',', 32, 0,
  /* 126 */ 'b', 'c', 'l', 32, '1', '2', ',', 32, 0,
  /* 135 */ 'b', 'c', 'l', 'r', 'l', 32, '1', '2', ',', 32, 0,
  /* 146 */ 'b', 'c', 'c', 't', 'r', 'l', 32, '1', '2', ',', 32, 0,
  /* 158 */ 'b', 'c', 'l', 'r', 32, '1', '2', ',', 32, 0,
  /* 168 */ 'b', 'c', 'c', 't', 'r', 32, '1', '2', ',', 32, 0,
  /* 179 */ 'b', 'c', 32, '4', ',', 32, 0,
  /* 186 */ 'b', 'c', 'l', 32, '4', ',', 32, 0,
  /* 194 */ 'b', 'c', 'l', 'r', 'l', 32, '4', ',', 32, 0,
  /* 204 */ 'b', 'c', 'c', 't', 'r', 'l', 32, '4', ',', 32, 0,
  /* 215 */ 'b', 'c', 'l', 'r', 32, '4', ',', 32, 0,
  /* 224 */ 'b', 'c', 'c', 't', 'r', 32, '4', ',', 32, 0,
  /* 234 */ 'm', 't', 's', 'p', 'r', 32, '2', '5', '6', ',', 32, 0,
  /* 246 */ 'b', 'd', 'z', 'l', 'a', '-', 32, 0,
  /* 254 */ 'b', 'd', 'n', 'z', 'l', 'a', '-', 32, 0,
  /* 263 */ 'b', 'd', 'z', 'a', '-', 32, 0,
  /* 270 */ 'b', 'd', 'n', 'z', 'a', '-', 32, 0,
  /* 278 */ 'b', 'd', 'z', 'l', '-', 32, 0,
  /* 285 */ 'b', 'd', 'n', 'z', 'l', '-', 32, 0,
  /* 293 */ 'b', 'd', 'z', '-', 32, 0,
  /* 299 */ 'b', 'd', 'n', 'z', '-', 32, 0,
  /* 306 */ 'v', 'c', 'm', 'p', 'n', 'e', 'b', '.', 32, 0,
  /* 316 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'b', '.', 32, 0,
  /* 327 */ 'e', 'x', 't', 's', 'b', '.', 32, 0,
  /* 335 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'b', '.', 32, 0,
  /* 346 */ 'f', 's', 'u', 'b', '.', 32, 0,
  /* 353 */ 'f', 'm', 's', 'u', 'b', '.', 32, 0,
  /* 361 */ 'f', 'n', 'm', 's', 'u', 'b', '.', 32, 0,
  /* 370 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'b', '.', 32, 0,
  /* 381 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'b', '.', 32, 0,
  /* 392 */ 'a', 'd', 'd', 'c', '.', 32, 0,
  /* 399 */ 'a', 'n', 'd', 'c', '.', 32, 0,
  /* 406 */ 't', 'a', 'b', 'o', 'r', 't', 'd', 'c', '.', 32, 0,
  /* 417 */ 's', 'u', 'b', 'f', 'c', '.', 32, 0,
  /* 425 */ 's', 'u', 'b', 'i', 'c', '.', 32, 0,
  /* 433 */ 'a', 'd', 'd', 'i', 'c', '.', 32, 0,
  /* 441 */ 'r', 'l', 'd', 'i', 'c', '.', 32, 0,
  /* 449 */ 'b', 'c', 'd', 't', 'r', 'u', 'n', 'c', '.', 32, 0,
  /* 460 */ 'b', 'c', 'd', 'u', 't', 'r', 'u', 'n', 'c', '.', 32, 0,
  /* 472 */ 'o', 'r', 'c', '.', 32, 0,
  /* 478 */ 't', 'a', 'b', 'o', 'r', 't', 'w', 'c', '.', 32, 0,
  /* 489 */ 's', 'r', 'a', 'd', '.', 32, 0,
  /* 496 */ 'f', 'a', 'd', 'd', '.', 32, 0,
  /* 503 */ 'f', 'm', 'a', 'd', 'd', '.', 32, 0,
  /* 511 */ 'f', 'n', 'm', 'a', 'd', 'd', '.', 32, 0,
  /* 520 */ 'm', 'u', 'l', 'h', 'd', '.', 32, 0,
  /* 528 */ 'f', 'c', 'f', 'i', 'd', '.', 32, 0,
  /* 536 */ 'f', 'c', 't', 'i', 'd', '.', 32, 0,
  /* 544 */ 'm', 'u', 'l', 'l', 'd', '.', 32, 0,
  /* 552 */ 's', 'l', 'd', '.', 32, 0,
  /* 558 */ 'n', 'a', 'n', 'd', '.', 32, 0,
  /* 565 */ 't', 'e', 'n', 'd', '.', 32, 0,
  /* 572 */ 's', 'r', 'd', '.', 32, 0,
  /* 578 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'd', '.', 32, 0,
  /* 589 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'd', '.', 32, 0,
  /* 600 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'd', '.', 32, 0,
  /* 611 */ 'd', 'i', 'v', 'd', '.', 32, 0,
  /* 618 */ 'c', 'n', 't', 'l', 'z', 'd', '.', 32, 0,
  /* 627 */ 'c', 'n', 't', 't', 'z', 'd', '.', 32, 0,
  /* 636 */ 'a', 'd', 'd', 'e', '.', 32, 0,
  /* 643 */ 'd', 'i', 'v', 'd', 'e', '.', 32, 0,
  /* 651 */ 's', 'l', 'b', 'f', 'e', 'e', '.', 32, 0,
  /* 660 */ 's', 'u', 'b', 'f', 'e', '.', 32, 0,
  /* 668 */ 'a', 'd', 'd', 'm', 'e', '.', 32, 0,
  /* 676 */ 's', 'u', 'b', 'f', 'm', 'e', '.', 32, 0,
  /* 685 */ 'f', 'r', 'e', '.', 32, 0,
  /* 691 */ 'f', 'r', 's', 'q', 'r', 't', 'e', '.', 32, 0,
  /* 701 */ 'p', 'a', 's', 't', 'e', '.', 32, 0,
  /* 709 */ 'd', 'i', 'v', 'w', 'e', '.', 32, 0,
  /* 717 */ 'a', 'd', 'd', 'z', 'e', '.', 32, 0,
  /* 725 */ 's', 'u', 'b', 'f', 'z', 'e', '.', 32, 0,
  /* 734 */ 's', 'u', 'b', 'f', '.', 32, 0,
  /* 741 */ 'm', 't', 'f', 's', 'f', '.', 32, 0,
  /* 749 */ 'f', 'n', 'e', 'g', '.', 32, 0,
  /* 756 */ 'v', 'c', 'm', 'p', 'n', 'e', 'h', '.', 32, 0,
  /* 766 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'h', '.', 32, 0,
  /* 777 */ 'e', 'x', 't', 's', 'h', '.', 32, 0,
  /* 785 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'h', '.', 32, 0,
  /* 796 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'h', '.', 32, 0,
  /* 807 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'h', '.', 32, 0,
  /* 818 */ 't', 'a', 'b', 'o', 'r', 't', 'd', 'c', 'i', '.', 32, 0,
  /* 830 */ 't', 'a', 'b', 'o', 'r', 't', 'w', 'c', 'i', '.', 32, 0,
  /* 842 */ 's', 'r', 'a', 'd', 'i', '.', 32, 0,
  /* 850 */ 'c', 'l', 'r', 'l', 's', 'l', 'd', 'i', '.', 32, 0,
  /* 861 */ 'e', 'x', 't', 'l', 'd', 'i', '.', 32, 0,
  /* 870 */ 'a', 'n', 'd', 'i', '.', 32, 0,
  /* 877 */ 'c', 'l', 'r', 'r', 'd', 'i', '.', 32, 0,
  /* 886 */ 'i', 'n', 's', 'r', 'd', 'i', '.', 32, 0,
  /* 895 */ 'r', 'o', 't', 'r', 'd', 'i', '.', 32, 0,
  /* 904 */ 'e', 'x', 't', 'r', 'd', 'i', '.', 32, 0,
  /* 913 */ 'm', 't', 'f', 's', 'f', 'i', '.', 32, 0,
  /* 922 */ 'e', 'x', 't', 's', 'w', 's', 'l', 'i', '.', 32, 0,
  /* 933 */ 'r', 'l', 'd', 'i', 'm', 'i', '.', 32, 0,
  /* 942 */ 'r', 'l', 'w', 'i', 'm', 'i', '.', 32, 0,
  /* 951 */ 's', 'r', 'a', 'w', 'i', '.', 32, 0,
  /* 959 */ 'c', 'l', 'r', 'l', 's', 'l', 'w', 'i', '.', 32, 0,
  /* 970 */ 'i', 'n', 's', 'l', 'w', 'i', '.', 32, 0,
  /* 979 */ 'e', 'x', 't', 'l', 'w', 'i', '.', 32, 0,
  /* 988 */ 'c', 'l', 'r', 'r', 'w', 'i', '.', 32, 0,
  /* 997 */ 'i', 'n', 's', 'r', 'w', 'i', '.', 32, 0,
  /* 1006 */ 'r', 'o', 't', 'r', 'w', 'i', '.', 32, 0,
  /* 1015 */ 'e', 'x', 't', 'r', 'w', 'i', '.', 32, 0,
  /* 1024 */ 'r', 'l', 'd', 'c', 'l', '.', 32, 0,
  /* 1032 */ 'r', 'l', 'd', 'i', 'c', 'l', '.', 32, 0,
  /* 1041 */ 'f', 's', 'e', 'l', '.', 32, 0,
  /* 1048 */ 'f', 'm', 'u', 'l', '.', 32, 0,
  /* 1055 */ 't', 'r', 'e', 'c', 'l', 'a', 'i', 'm', '.', 32, 0,
  /* 1066 */ 'f', 'r', 'i', 'm', '.', 32, 0,
  /* 1073 */ 'r', 'l', 'w', 'i', 'n', 'm', '.', 32, 0,
  /* 1082 */ 'r', 'l', 'w', 'n', 'm', '.', 32, 0,
  /* 1090 */ 'b', 'c', 'd', 'c', 'f', 'n', '.', 32, 0,
  /* 1099 */ 'b', 'c', 'd', 'c', 'p', 's', 'g', 'n', '.', 32, 0,
  /* 1110 */ 'f', 'c', 'p', 's', 'g', 'n', '.', 32, 0,
  /* 1119 */ 'b', 'c', 'd', 's', 'e', 't', 's', 'g', 'n', '.', 32, 0,
  /* 1131 */ 't', 'b', 'e', 'g', 'i', 'n', '.', 32, 0,
  /* 1140 */ 'f', 'r', 'i', 'n', '.', 32, 0,
  /* 1147 */ 'b', 'c', 'd', 'c', 't', 'n', '.', 32, 0,
  /* 1156 */ 'a', 'd', 'd', 'c', 'o', '.', 32, 0,
  /* 1164 */ 's', 'u', 'b', 'f', 'c', 'o', '.', 32, 0,
  /* 1173 */ 'a', 'd', 'd', 'o', '.', 32, 0,
  /* 1180 */ 'm', 'u', 'l', 'l', 'd', 'o', '.', 32, 0,
  /* 1189 */ 'd', 'i', 'v', 'd', 'o', '.', 32, 0,
  /* 1197 */ 'a', 'd', 'd', 'e', 'o', '.', 32, 0,
  /* 1205 */ 'd', 'i', 'v', 'd', 'e', 'o', '.', 32, 0,
  /* 1214 */ 's', 'u', 'b', 'f', 'e', 'o', '.', 32, 0,
  /* 1223 */ 'a', 'd', 'd', 'm', 'e', 'o', '.', 32, 0,
  /* 1232 */ 's', 'u', 'b', 'f', 'm', 'e', 'o', '.', 32, 0,
  /* 1242 */ 'd', 'i', 'v', 'w', 'e', 'o', '.', 32, 0,
  /* 1251 */ 'a', 'd', 'd', 'z', 'e', 'o', '.', 32, 0,
  /* 1260 */ 's', 'u', 'b', 'f', 'z', 'e', 'o', '.', 32, 0,
  /* 1270 */ 's', 'u', 'b', 'f', 'o', '.', 32, 0,
  /* 1278 */ 'n', 'e', 'g', 'o', '.', 32, 0,
  /* 1285 */ 'd', 'i', 'v', 'd', 'u', 'o', '.', 32, 0,
  /* 1294 */ 'd', 'i', 'v', 'd', 'e', 'u', 'o', '.', 32, 0,
  /* 1304 */ 'd', 'i', 'v', 'w', 'e', 'u', 'o', '.', 32, 0,
  /* 1314 */ 'd', 'i', 'v', 'w', 'u', 'o', '.', 32, 0,
  /* 1323 */ 'm', 'u', 'l', 'l', 'w', 'o', '.', 32, 0,
  /* 1332 */ 'd', 'i', 'v', 'w', 'o', '.', 32, 0,
  /* 1340 */ 'x', 'v', 'c', 'm', 'p', 'g', 'e', 'd', 'p', '.', 32, 0,
  /* 1352 */ 'x', 'v', 'c', 'm', 'p', 'e', 'q', 'd', 'p', '.', 32, 0,
  /* 1364 */ 'x', 'v', 'c', 'm', 'p', 'g', 't', 'd', 'p', '.', 32, 0,
  /* 1376 */ 'v', 'c', 'm', 'p', 'b', 'f', 'p', '.', 32, 0,
  /* 1386 */ 'v', 'c', 'm', 'p', 'g', 'e', 'f', 'p', '.', 32, 0,
  /* 1397 */ 'v', 'c', 'm', 'p', 'e', 'q', 'f', 'p', '.', 32, 0,
  /* 1408 */ 'v', 'c', 'm', 'p', 'g', 't', 'f', 'p', '.', 32, 0,
  /* 1419 */ 'f', 'r', 'i', 'p', '.', 32, 0,
  /* 1426 */ 'x', 'v', 'c', 'm', 'p', 'g', 'e', 's', 'p', '.', 32, 0,
  /* 1438 */ 'x', 'v', 'c', 'm', 'p', 'e', 'q', 's', 'p', '.', 32, 0,
  /* 1450 */ 'f', 'r', 's', 'p', '.', 32, 0,
  /* 1457 */ 'x', 'v', 'c', 'm', 'p', 'g', 't', 's', 'p', '.', 32, 0,
  /* 1469 */ 'i', 'c', 'b', 'l', 'q', '.', 32, 0,
  /* 1477 */ 'b', 'c', 'd', 'c', 'f', 's', 'q', '.', 32, 0,
  /* 1487 */ 'b', 'c', 'd', 'c', 't', 's', 'q', '.', 32, 0,
  /* 1497 */ 'r', 'l', 'd', 'c', 'r', '.', 32, 0,
  /* 1505 */ 'r', 'l', 'd', 'i', 'c', 'r', '.', 32, 0,
  /* 1514 */ 'f', 'm', 'r', '.', 32, 0,
  /* 1520 */ 'n', 'o', 'r', '.', 32, 0,
  /* 1526 */ 'x', 'o', 'r', '.', 32, 0,
  /* 1532 */ 'b', 'c', 'd', 's', 'r', '.', 32, 0,
  /* 1540 */ 't', 's', 'r', '.', 32, 0,
  /* 1546 */ 'f', 'a', 'b', 's', '.', 32, 0,
  /* 1553 */ 'f', 'n', 'a', 'b', 's', '.', 32, 0,
  /* 1561 */ 'f', 's', 'u', 'b', 's', '.', 32, 0,
  /* 1569 */ 'f', 'm', 's', 'u', 'b', 's', '.', 32, 0,
  /* 1578 */ 'f', 'n', 'm', 's', 'u', 'b', 's', '.', 32, 0,
  /* 1588 */ 'b', 'c', 'd', 's', '.', 32, 0,
  /* 1595 */ 'f', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 1603 */ 'f', 'm', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 1612 */ 'f', 'n', 'm', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 1622 */ 'f', 'c', 'f', 'i', 'd', 's', '.', 32, 0,
  /* 1631 */ 'f', 'r', 'e', 's', '.', 32, 0,
  /* 1638 */ 'f', 'r', 's', 'q', 'r', 't', 'e', 's', '.', 32, 0,
  /* 1649 */ 'm', 'f', 'f', 's', '.', 32, 0,
  /* 1656 */ 'a', 'n', 'd', 'i', 's', '.', 32, 0,
  /* 1664 */ 'f', 'm', 'u', 'l', 's', '.', 32, 0,
  /* 1672 */ 'f', 's', 'q', 'r', 't', 's', '.', 32, 0,
  /* 1681 */ 'b', 'c', 'd', 'u', 's', '.', 32, 0,
  /* 1689 */ 'f', 'c', 'f', 'i', 'd', 'u', 's', '.', 32, 0,
  /* 1699 */ 'f', 'd', 'i', 'v', 's', '.', 32, 0,
  /* 1707 */ 't', 'a', 'b', 'o', 'r', 't', '.', 32, 0,
  /* 1716 */ 'f', 's', 'q', 'r', 't', '.', 32, 0,
  /* 1724 */ 'm', 'u', 'l', 'h', 'd', 'u', '.', 32, 0,
  /* 1733 */ 'f', 'c', 'f', 'i', 'd', 'u', '.', 32, 0,
  /* 1742 */ 'f', 'c', 't', 'i', 'd', 'u', '.', 32, 0,
  /* 1751 */ 'd', 'i', 'v', 'd', 'u', '.', 32, 0,
  /* 1759 */ 'd', 'i', 'v', 'd', 'e', 'u', '.', 32, 0,
  /* 1768 */ 'd', 'i', 'v', 'w', 'e', 'u', '.', 32, 0,
  /* 1777 */ 'm', 'u', 'l', 'h', 'w', 'u', '.', 32, 0,
  /* 1786 */ 'f', 'c', 't', 'i', 'w', 'u', '.', 32, 0,
  /* 1795 */ 'd', 'i', 'v', 'w', 'u', '.', 32, 0,
  /* 1803 */ 'f', 'd', 'i', 'v', '.', 32, 0,
  /* 1810 */ 'e', 'q', 'v', '.', 32, 0,
  /* 1816 */ 's', 'r', 'a', 'w', '.', 32, 0,
  /* 1823 */ 'v', 'c', 'm', 'p', 'n', 'e', 'w', '.', 32, 0,
  /* 1833 */ 'm', 'u', 'l', 'h', 'w', '.', 32, 0,
  /* 1841 */ 'f', 'c', 't', 'i', 'w', '.', 32, 0,
  /* 1849 */ 'm', 'u', 'l', 'l', 'w', '.', 32, 0,
  /* 1857 */ 's', 'l', 'w', '.', 32, 0,
  /* 1863 */ 's', 'r', 'w', '.', 32, 0,
  /* 1869 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'w', '.', 32, 0,
  /* 1880 */ 'e', 'x', 't', 's', 'w', '.', 32, 0,
  /* 1888 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'w', '.', 32, 0,
  /* 1899 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'w', '.', 32, 0,
  /* 1910 */ 'd', 'i', 'v', 'w', '.', 32, 0,
  /* 1917 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'w', '.', 32, 0,
  /* 1928 */ 'c', 'n', 't', 'l', 'z', 'w', '.', 32, 0,
  /* 1937 */ 'c', 'n', 't', 't', 'z', 'w', '.', 32, 0,
  /* 1946 */ 's', 't', 'b', 'c', 'x', '.', 32, 0,
  /* 1954 */ 's', 't', 'd', 'c', 'x', '.', 32, 0,
  /* 1962 */ 's', 't', 'h', 'c', 'x', '.', 32, 0,
  /* 1970 */ 's', 't', 'w', 'c', 'x', '.', 32, 0,
  /* 1978 */ 't', 'l', 'b', 's', 'x', '.', 32, 0,
  /* 1986 */ 'f', 'c', 't', 'i', 'd', 'z', '.', 32, 0,
  /* 1995 */ 'b', 'c', 'd', 'c', 'f', 'z', '.', 32, 0,
  /* 2004 */ 'f', 'r', 'i', 'z', '.', 32, 0,
  /* 2011 */ 'b', 'c', 'd', 'c', 't', 'z', '.', 32, 0,
  /* 2020 */ 'f', 'c', 't', 'i', 'd', 'u', 'z', '.', 32, 0,
  /* 2030 */ 'f', 'c', 't', 'i', 'w', 'u', 'z', '.', 32, 0,
  /* 2040 */ 'f', 'c', 't', 'i', 'w', 'z', '.', 32, 0,
  /* 2049 */ 'm', 't', 'f', 's', 'b', '0', 32, 0,
  /* 2057 */ 'm', 't', 'f', 's', 'b', '1', 32, 0,
  /* 2065 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 32, 0,
  /* 2087 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 32, 0,
  /* 2109 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'a', '8', 32, 0,
  /* 2123 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'd', '8', 32, 0,
  /* 2137 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'r', '8', 32, 0,
  /* 2151 */ 'U', 'P', 'D', 'A', 'T', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 32, 0,
  /* 2166 */ '#', 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 32, 0,
  /* 2185 */ '#', 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 32, 0,
  /* 2202 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 32, 0,
  /* 2215 */ 'e', 'v', 'm', 'h', 'e', 'g', 's', 'm', 'f', 'a', 'a', 32, 0,
  /* 2228 */ 'e', 'v', 'm', 'h', 'o', 'g', 's', 'm', 'f', 'a', 'a', 32, 0,
  /* 2241 */ 'e', 'v', 'm', 'w', 's', 'm', 'f', 'a', 'a', 32, 0,
  /* 2252 */ 'e', 'v', 'm', 'w', 's', 's', 'f', 'a', 'a', 32, 0,
  /* 2263 */ 'e', 'v', 'm', 'h', 'e', 'g', 's', 'm', 'i', 'a', 'a', 32, 0,
  /* 2276 */ 'e', 'v', 'm', 'h', 'o', 'g', 's', 'm', 'i', 'a', 'a', 32, 0,
  /* 2289 */ 'e', 'v', 'm', 'w', 's', 'm', 'i', 'a', 'a', 32, 0,
  /* 2300 */ 'e', 'v', 'm', 'h', 'e', 'g', 'u', 'm', 'i', 'a', 'a', 32, 0,
  /* 2313 */ 'e', 'v', 'm', 'h', 'o', 'g', 'u', 'm', 'i', 'a', 'a', 32, 0,
  /* 2326 */ 'e', 'v', 'm', 'w', 'u', 'm', 'i', 'a', 'a', 32, 0,
  /* 2337 */ 'd', 'c', 'b', 'a', 32, 0,
  /* 2343 */ 'b', 'c', 'a', 32, 0,
  /* 2348 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'f', 'a', 32, 0,
  /* 2359 */ 'e', 'v', 'm', 'w', 'h', 's', 'm', 'f', 'a', 32, 0,
  /* 2370 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'f', 'a', 32, 0,
  /* 2381 */ 'e', 'v', 'm', 'w', 's', 'm', 'f', 'a', 32, 0,
  /* 2391 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'f', 'a', 32, 0,
  /* 2402 */ 'e', 'v', 'm', 'w', 'h', 's', 's', 'f', 'a', 32, 0,
  /* 2413 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'f', 'a', 32, 0,
  /* 2424 */ 'e', 'v', 'm', 'w', 's', 's', 'f', 'a', 32, 0,
  /* 2434 */ 'l', 'h', 'a', 32, 0,
  /* 2439 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'i', 'a', 32, 0,
  /* 2450 */ 'e', 'v', 'm', 'w', 'h', 's', 'm', 'i', 'a', 32, 0,
  /* 2461 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'i', 'a', 32, 0,
  /* 2472 */ 'e', 'v', 'm', 'w', 's', 'm', 'i', 'a', 32, 0,
  /* 2482 */ 'e', 'v', 'm', 'h', 'e', 'u', 'm', 'i', 'a', 32, 0,
  /* 2493 */ 'e', 'v', 'm', 'w', 'h', 'u', 'm', 'i', 'a', 32, 0,
  /* 2504 */ 'e', 'v', 'm', 'w', 'l', 'u', 'm', 'i', 'a', 32, 0,
  /* 2515 */ 'e', 'v', 'm', 'h', 'o', 'u', 'm', 'i', 'a', 32, 0,
  /* 2526 */ 'e', 'v', 'm', 'w', 'u', 'm', 'i', 'a', 32, 0,
  /* 2536 */ 'q', 'v', 's', 't', 'f', 'c', 'd', 'x', 'i', 'a', 32, 0,
  /* 2548 */ 'q', 'v', 's', 't', 'f', 'd', 'x', 'i', 'a', 32, 0,
  /* 2559 */ 'q', 'v', 's', 't', 'f', 'c', 's', 'x', 'i', 'a', 32, 0,
  /* 2571 */ 'q', 'v', 's', 't', 'f', 's', 'x', 'i', 'a', 32, 0,
  /* 2582 */ 'q', 'v', 's', 't', 'f', 'c', 'd', 'u', 'x', 'i', 'a', 32, 0,
  /* 2595 */ 'q', 'v', 's', 't', 'f', 'd', 'u', 'x', 'i', 'a', 32, 0,
  /* 2607 */ 'q', 'v', 's', 't', 'f', 'c', 's', 'u', 'x', 'i', 'a', 32, 0,
  /* 2620 */ 'q', 'v', 's', 't', 'f', 's', 'u', 'x', 'i', 'a', 32, 0,
  /* 2632 */ 'b', 'l', 'a', 32, 0,
  /* 2637 */ 'b', 'c', 'l', 'a', 32, 0,
  /* 2643 */ 'b', 'd', 'z', 'l', 'a', 32, 0,
  /* 2650 */ 'b', 'd', 'n', 'z', 'l', 'a', 32, 0,
  /* 2658 */ 'e', 'v', 'm', 'r', 'a', 32, 0,
  /* 2665 */ 'l', 'w', 'a', 32, 0,
  /* 2670 */ 'm', 't', 'v', 's', 'r', 'w', 'a', 32, 0,
  /* 2679 */ 'q', 'v', 'l', 'f', 'i', 'w', 'a', 'x', 'a', 32, 0,
  /* 2690 */ 'q', 'v', 'l', 'f', 'c', 'd', 'x', 'a', 32, 0,
  /* 2700 */ 'q', 'v', 's', 't', 'f', 'c', 'd', 'x', 'a', 32, 0,
  /* 2711 */ 'q', 'v', 'l', 'f', 'd', 'x', 'a', 32, 0,
  /* 2720 */ 'q', 'v', 's', 't', 'f', 'd', 'x', 'a', 32, 0,
  /* 2730 */ 'q', 'v', 'l', 'f', 'c', 's', 'x', 'a', 32, 0,
  /* 2740 */ 'q', 'v', 's', 't', 'f', 'c', 's', 'x', 'a', 32, 0,
  /* 2751 */ 'q', 'v', 'l', 'f', 's', 'x', 'a', 32, 0,
  /* 2760 */ 'q', 'v', 's', 't', 'f', 's', 'x', 'a', 32, 0,
  /* 2770 */ 'q', 'v', 'l', 'f', 'c', 'd', 'u', 'x', 'a', 32, 0,
  /* 2781 */ 'q', 'v', 's', 't', 'f', 'c', 'd', 'u', 'x', 'a', 32, 0,
  /* 2793 */ 'q', 'v', 'l', 'f', 'd', 'u', 'x', 'a', 32, 0,
  /* 2803 */ 'q', 'v', 's', 't', 'f', 'd', 'u', 'x', 'a', 32, 0,
  /* 2814 */ 'q', 'v', 'l', 'f', 'c', 's', 'u', 'x', 'a', 32, 0,
  /* 2825 */ 'q', 'v', 's', 't', 'f', 'c', 's', 'u', 'x', 'a', 32, 0,
  /* 2837 */ 'q', 'v', 'l', 'f', 's', 'u', 'x', 'a', 32, 0,
  /* 2847 */ 'q', 'v', 's', 't', 'f', 's', 'u', 'x', 'a', 32, 0,
  /* 2858 */ 'q', 'v', 's', 't', 'f', 'i', 'w', 'x', 'a', 32, 0,
  /* 2869 */ 'q', 'v', 'l', 'f', 'i', 'w', 'z', 'x', 'a', 32, 0,
  /* 2880 */ 'b', 'd', 'z', 'a', 32, 0,
  /* 2886 */ 'b', 'd', 'n', 'z', 'a', 32, 0,
  /* 2893 */ 'v', 's', 'r', 'a', 'b', 32, 0,
  /* 2900 */ 'r', 'f', 'e', 'b', 'b', 32, 0,
  /* 2907 */ 'v', 'c', 'l', 'z', 'l', 's', 'b', 'b', 32, 0,
  /* 2917 */ 'v', 'c', 't', 'z', 'l', 's', 'b', 'b', 32, 0,
  /* 2927 */ 'v', 'c', 'm', 'p', 'n', 'e', 'b', 32, 0,
  /* 2936 */ 'v', 'm', 'r', 'g', 'h', 'b', 32, 0,
  /* 2944 */ 'x', 'x', 's', 'p', 'l', 't', 'i', 'b', 32, 0,
  /* 2954 */ 'v', 'm', 'r', 'g', 'l', 'b', 32, 0,
  /* 2962 */ 'v', 'r', 'l', 'b', 32, 0,
  /* 2968 */ 'v', 's', 'l', 'b', 32, 0,
  /* 2974 */ 'v', 'p', 'm', 's', 'u', 'm', 'b', 32, 0,
  /* 2983 */ 'c', 'm', 'p', 'b', 32, 0,
  /* 2989 */ 'c', 'm', 'p', 'e', 'q', 'b', 32, 0,
  /* 2997 */ 'c', 'm', 'p', 'r', 'b', 32, 0,
  /* 3004 */ 'v', 's', 'r', 'b', 32, 0,
  /* 3010 */ 'v', 'm', 'u', 'l', 'e', 's', 'b', 32, 0,
  /* 3019 */ 'v', 'a', 'v', 'g', 's', 'b', 32, 0,
  /* 3027 */ 'v', 'u', 'p', 'k', 'h', 's', 'b', 32, 0,
  /* 3036 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'b', 32, 0,
  /* 3046 */ 'v', 'u', 'p', 'k', 'l', 's', 'b', 32, 0,
  /* 3055 */ 'v', 'm', 'i', 'n', 's', 'b', 32, 0,
  /* 3063 */ 'v', 'm', 'u', 'l', 'o', 's', 'b', 32, 0,
  /* 3072 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'b', 32, 0,
  /* 3082 */ 'e', 'v', 'e', 'x', 't', 's', 'b', 32, 0,
  /* 3091 */ 'v', 'm', 'a', 'x', 's', 'b', 32, 0,
  /* 3099 */ 's', 'e', 't', 'b', 32, 0,
  /* 3105 */ 'm', 'f', 't', 'b', 32, 0,
  /* 3111 */ 'v', 's', 'p', 'l', 't', 'b', 32, 0,
  /* 3119 */ 'v', 'p', 'o', 'p', 'c', 'n', 't', 'b', 32, 0,
  /* 3129 */ 'v', 'i', 'n', 's', 'e', 'r', 't', 'b', 32, 0,
  /* 3139 */ 's', 't', 'b', 32, 0,
  /* 3144 */ 'v', 'a', 'b', 's', 'd', 'u', 'b', 32, 0,
  /* 3153 */ 'v', 'm', 'u', 'l', 'e', 'u', 'b', 32, 0,
  /* 3162 */ 'v', 'a', 'v', 'g', 'u', 'b', 32, 0,
  /* 3170 */ 'v', 'm', 'i', 'n', 'u', 'b', 32, 0,
  /* 3178 */ 'v', 'm', 'u', 'l', 'o', 'u', 'b', 32, 0,
  /* 3187 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'b', 32, 0,
  /* 3197 */ 'e', 'f', 'd', 's', 'u', 'b', 32, 0,
  /* 3205 */ 'q', 'v', 'f', 's', 'u', 'b', 32, 0,
  /* 3213 */ 'q', 'v', 'f', 'm', 's', 'u', 'b', 32, 0,
  /* 3222 */ 'q', 'v', 'f', 'n', 'm', 's', 'u', 'b', 32, 0,
  /* 3232 */ 'e', 'f', 's', 's', 'u', 'b', 32, 0,
  /* 3240 */ 'e', 'v', 'f', 's', 's', 'u', 'b', 32, 0,
  /* 3249 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'u', 'b', 32, 0,
  /* 3261 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'b', 32, 0,
  /* 3271 */ 'v', 'm', 'a', 'x', 'u', 'b', 32, 0,
  /* 3279 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'b', 32, 0,
  /* 3289 */ 'v', 'c', 'l', 'z', 'b', 32, 0,
  /* 3296 */ 'v', 'c', 't', 'z', 'b', 32, 0,
  /* 3303 */ 'b', 'c', 32, 0,
  /* 3307 */ 'a', 'd', 'd', 'c', 32, 0,
  /* 3313 */ 'x', 'x', 'l', 'a', 'n', 'd', 'c', 32, 0,
  /* 3322 */ 'c', 'r', 'a', 'n', 'd', 'c', 32, 0,
  /* 3330 */ 'e', 'v', 'a', 'n', 'd', 'c', 32, 0,
  /* 3338 */ 's', 'u', 'b', 'f', 'c', 32, 0,
  /* 3345 */ 's', 'u', 'b', 'i', 'c', 32, 0,
  /* 3352 */ 'a', 'd', 'd', 'i', 'c', 32, 0,
  /* 3359 */ 'r', 'l', 'd', 'i', 'c', 32, 0,
  /* 3366 */ 's', 'u', 'b', 'f', 'i', 'c', 32, 0,
  /* 3374 */ 'x', 's', 'r', 'd', 'p', 'i', 'c', 32, 0,
  /* 3383 */ 'x', 'v', 'r', 'd', 'p', 'i', 'c', 32, 0,
  /* 3392 */ 'x', 'v', 'r', 's', 'p', 'i', 'c', 32, 0,
  /* 3401 */ 'i', 'c', 'b', 'l', 'c', 32, 0,
  /* 3408 */ 'b', 'r', 'i', 'n', 'c', 32, 0,
  /* 3415 */ 's', 'y', 'n', 'c', 32, 0,
  /* 3421 */ 'x', 'x', 'l', 'o', 'r', 'c', 32, 0,
  /* 3429 */ 'c', 'r', 'o', 'r', 'c', 32, 0,
  /* 3436 */ 'e', 'v', 'o', 'r', 'c', 32, 0,
  /* 3443 */ 's', 'c', 32, 0,
  /* 3447 */ 'v', 'e', 'x', 't', 's', 'b', '2', 'd', 32, 0,
  /* 3457 */ 'v', 'e', 'x', 't', 's', 'h', '2', 'd', 32, 0,
  /* 3467 */ 'v', 'e', 'x', 't', 's', 'w', '2', 'd', 32, 0,
  /* 3477 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 32, 0,
  /* 3490 */ 'v', 's', 'h', 'a', 's', 'i', 'g', 'm', 'a', 'd', 32, 0,
  /* 3502 */ 'v', 's', 'r', 'a', 'd', 32, 0,
  /* 3509 */ 'v', 'g', 'b', 'b', 'd', 32, 0,
  /* 3516 */ 'v', 'p', 'r', 't', 'y', 'b', 'd', 32, 0,
  /* 3525 */ 'e', 'f', 'd', 'a', 'd', 'd', 32, 0,
  /* 3533 */ 'q', 'v', 'f', 'a', 'd', 'd', 32, 0,
  /* 3541 */ 'q', 'v', 'f', 'm', 'a', 'd', 'd', 32, 0,
  /* 3550 */ 'q', 'v', 'f', 'n', 'm', 'a', 'd', 'd', 32, 0,
  /* 3560 */ 'q', 'v', 'f', 'x', 'x', 'c', 'p', 'n', 'm', 'a', 'd', 'd', 32, 0,
  /* 3574 */ 'q', 'v', 'f', 'x', 'x', 'n', 'p', 'm', 'a', 'd', 'd', 32, 0,
  /* 3587 */ 'q', 'v', 'f', 'x', 'm', 'a', 'd', 'd', 32, 0,
  /* 3597 */ 'q', 'v', 'f', 'x', 'x', 'm', 'a', 'd', 'd', 32, 0,
  /* 3608 */ 'e', 'f', 's', 'a', 'd', 'd', 32, 0,
  /* 3616 */ 'e', 'v', 'f', 's', 'a', 'd', 'd', 32, 0,
  /* 3625 */ 'e', 'v', 'l', 'd', 'd', 32, 0,
  /* 3632 */ 'm', 't', 'v', 's', 'r', 'd', 'd', 32, 0,
  /* 3641 */ 'e', 'v', 's', 't', 'd', 'd', 32, 0,
  /* 3649 */ 'e', 'f', 's', 'c', 'f', 'd', 32, 0,
  /* 3657 */ 'l', 'f', 'd', 32, 0,
  /* 3662 */ 's', 't', 'f', 'd', 32, 0,
  /* 3668 */ 'v', 'n', 'e', 'g', 'd', 32, 0,
  /* 3675 */ 'm', 'a', 'd', 'd', 'h', 'd', 32, 0,
  /* 3683 */ 'm', 'u', 'l', 'h', 'd', 32, 0,
  /* 3690 */ 'q', 'v', 'f', 'c', 'f', 'i', 'd', 32, 0,
  /* 3699 */ 'e', 'f', 'd', 'c', 'f', 's', 'i', 'd', 32, 0,
  /* 3709 */ 'q', 'v', 'f', 'c', 't', 'i', 'd', 32, 0,
  /* 3718 */ 'e', 'f', 'd', 'c', 'f', 'u', 'i', 'd', 32, 0,
  /* 3728 */ 't', 'l', 'b', 'l', 'd', 32, 0,
  /* 3735 */ 'm', 'a', 'd', 'd', 'l', 'd', 32, 0,
  /* 3743 */ 'm', 'u', 'l', 'l', 'd', 32, 0,
  /* 3750 */ 'c', 'm', 'p', 'l', 'd', 32, 0,
  /* 3757 */ 'm', 'f', 'v', 's', 'r', 'l', 'd', 32, 0,
  /* 3766 */ 'v', 'r', 'l', 'd', 32, 0,
  /* 3772 */ 'v', 's', 'l', 'd', 32, 0,
  /* 3778 */ 'v', 'b', 'p', 'e', 'r', 'm', 'd', 32, 0,
  /* 3787 */ 'v', 'p', 'm', 's', 'u', 'm', 'd', 32, 0,
  /* 3796 */ 'x', 'x', 'l', 'a', 'n', 'd', 32, 0,
  /* 3804 */ 'x', 'x', 'l', 'n', 'a', 'n', 'd', 32, 0,
  /* 3813 */ 'c', 'r', 'n', 'a', 'n', 'd', 32, 0,
  /* 3821 */ 'e', 'v', 'n', 'a', 'n', 'd', 32, 0,
  /* 3829 */ 'c', 'r', 'a', 'n', 'd', 32, 0,
  /* 3836 */ 'e', 'v', 'a', 'n', 'd', 32, 0,
  /* 3843 */ 'c', 'm', 'p', 'd', 32, 0,
  /* 3849 */ 'x', 'x', 'b', 'r', 'd', 32, 0,
  /* 3856 */ 'm', 't', 'm', 's', 'r', 'd', 32, 0,
  /* 3864 */ 'm', 'f', 'v', 's', 'r', 'd', 32, 0,
  /* 3872 */ 'm', 't', 'v', 's', 'r', 'd', 32, 0,
  /* 3880 */ 'm', 'o', 'd', 's', 'd', 32, 0,
  /* 3887 */ 'v', 'm', 'i', 'n', 's', 'd', 32, 0,
  /* 3895 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'd', 32, 0,
  /* 3905 */ 'v', 'm', 'a', 'x', 's', 'd', 32, 0,
  /* 3913 */ 'l', 'x', 's', 'd', 32, 0,
  /* 3919 */ 's', 't', 'x', 's', 'd', 32, 0,
  /* 3926 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'd', 32, 0,
  /* 3937 */ 'v', 'p', 'o', 'p', 'c', 'n', 't', 'd', 32, 0,
  /* 3947 */ 'v', 'i', 'n', 's', 'e', 'r', 't', 'd', 32, 0,
  /* 3957 */ 's', 't', 'd', 32, 0,
  /* 3962 */ 'm', 'o', 'd', 'u', 'd', 32, 0,
  /* 3969 */ 'v', 'm', 'i', 'n', 'u', 'd', 32, 0,
  /* 3977 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'd', 32, 0,
  /* 3987 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'd', 32, 0,
  /* 3997 */ 'v', 'm', 'a', 'x', 'u', 'd', 32, 0,
  /* 4005 */ 'd', 'i', 'v', 'd', 32, 0,
  /* 4011 */ 'v', 'c', 'l', 'z', 'd', 32, 0,
  /* 4018 */ 'c', 'n', 't', 'l', 'z', 'd', 32, 0,
  /* 4026 */ 'v', 'c', 't', 'z', 'd', 32, 0,
  /* 4033 */ 'c', 'n', 't', 't', 'z', 'd', 32, 0,
  /* 4041 */ 'm', 'f', 'b', 'h', 'r', 'b', 'e', 32, 0,
  /* 4050 */ 'm', 'f', 'f', 's', 'c', 'e', 32, 0,
  /* 4058 */ 'a', 'd', 'd', 'e', 32, 0,
  /* 4064 */ 'd', 'i', 'v', 'd', 'e', 32, 0,
  /* 4071 */ 's', 'l', 'b', 'm', 'f', 'e', 'e', 32, 0,
  /* 4080 */ 'w', 'r', 't', 'e', 'e', 32, 0,
  /* 4087 */ 's', 'u', 'b', 'f', 'e', 32, 0,
  /* 4094 */ 'e', 'v', 'l', 'w', 'h', 'e', 32, 0,
  /* 4102 */ 'e', 'v', 's', 't', 'w', 'h', 'e', 32, 0,
  /* 4111 */ 's', 'l', 'b', 'i', 'e', 32, 0,
  /* 4118 */ 't', 'l', 'b', 'i', 'e', 32, 0,
  /* 4125 */ 'a', 'd', 'd', 'm', 'e', 32, 0,
  /* 4132 */ 's', 'u', 'b', 'f', 'm', 'e', 32, 0,
  /* 4140 */ 't', 'l', 'b', 'r', 'e', 32, 0,
  /* 4147 */ 'q', 'v', 'f', 'r', 'e', 32, 0,
  /* 4154 */ 's', 'l', 'b', 'm', 't', 'e', 32, 0,
  /* 4162 */ 'q', 'v', 'f', 'r', 's', 'q', 'r', 't', 'e', 32, 0,
  /* 4173 */ 'p', 'a', 's', 't', 'e', 32, 0,
  /* 4180 */ 't', 'l', 'b', 'w', 'e', 32, 0,
  /* 4187 */ 'd', 'i', 'v', 'w', 'e', 32, 0,
  /* 4194 */ 'e', 'v', 's', 't', 'w', 'w', 'e', 32, 0,
  /* 4203 */ 'a', 'd', 'd', 'z', 'e', 32, 0,
  /* 4210 */ 's', 'u', 'b', 'f', 'z', 'e', 32, 0,
  /* 4218 */ 'd', 'c', 'b', 'f', 32, 0,
  /* 4224 */ 's', 'u', 'b', 'f', 32, 0,
  /* 4230 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'f', 32, 0,
  /* 4240 */ 'e', 'v', 'm', 'w', 'h', 's', 'm', 'f', 32, 0,
  /* 4250 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'f', 32, 0,
  /* 4260 */ 'e', 'v', 'm', 'w', 's', 'm', 'f', 32, 0,
  /* 4269 */ 'm', 'c', 'r', 'f', 32, 0,
  /* 4275 */ 'm', 'f', 'o', 'c', 'r', 'f', 32, 0,
  /* 4283 */ 'm', 't', 'o', 'c', 'r', 'f', 32, 0,
  /* 4291 */ 'm', 't', 'c', 'r', 'f', 32, 0,
  /* 4298 */ 'e', 'f', 'd', 'c', 'f', 's', 'f', 32, 0,
  /* 4307 */ 'e', 'f', 's', 'c', 'f', 's', 'f', 32, 0,
  /* 4316 */ 'e', 'v', 'f', 's', 'c', 'f', 's', 'f', 32, 0,
  /* 4326 */ 'm', 't', 'f', 's', 'f', 32, 0,
  /* 4333 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'f', 32, 0,
  /* 4343 */ 'e', 'v', 'm', 'w', 'h', 's', 's', 'f', 32, 0,
  /* 4353 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'f', 32, 0,
  /* 4363 */ 'e', 'v', 'm', 'w', 's', 's', 'f', 32, 0,
  /* 4372 */ 'e', 'f', 'd', 'c', 't', 's', 'f', 32, 0,
  /* 4381 */ 'e', 'f', 's', 'c', 't', 's', 'f', 32, 0,
  /* 4390 */ 'e', 'v', 'f', 's', 'c', 't', 's', 'f', 32, 0,
  /* 4400 */ 'e', 'f', 'd', 'c', 'f', 'u', 'f', 32, 0,
  /* 4409 */ 'e', 'f', 's', 'c', 'f', 'u', 'f', 32, 0,
  /* 4418 */ 'e', 'v', 'f', 's', 'c', 'f', 'u', 'f', 32, 0,
  /* 4428 */ 'e', 'f', 'd', 'c', 't', 'u', 'f', 32, 0,
  /* 4437 */ 'e', 'f', 's', 'c', 't', 'u', 'f', 32, 0,
  /* 4446 */ 's', 'l', 'b', 'i', 'e', 'g', 32, 0,
  /* 4454 */ 'e', 'f', 'd', 'n', 'e', 'g', 32, 0,
  /* 4462 */ 'q', 'v', 'f', 'n', 'e', 'g', 32, 0,
  /* 4470 */ 'e', 'f', 's', 'n', 'e', 'g', 32, 0,
  /* 4478 */ 'e', 'v', 'f', 's', 'n', 'e', 'g', 32, 0,
  /* 4487 */ 'e', 'v', 'n', 'e', 'g', 32, 0,
  /* 4494 */ 'v', 's', 'r', 'a', 'h', 32, 0,
  /* 4501 */ 'e', 'v', 'l', 'd', 'h', 32, 0,
  /* 4508 */ 'e', 'v', 's', 't', 'd', 'h', 32, 0,
  /* 4516 */ 'v', 'c', 'm', 'p', 'n', 'e', 'h', 32, 0,
  /* 4525 */ 'v', 'm', 'r', 'g', 'h', 'h', 32, 0,
  /* 4533 */ 'v', 'm', 'r', 'g', 'l', 'h', 32, 0,
  /* 4541 */ 'v', 'r', 'l', 'h', 32, 0,
  /* 4547 */ 'v', 's', 'l', 'h', 32, 0,
  /* 4553 */ 'v', 'p', 'm', 's', 'u', 'm', 'h', 32, 0,
  /* 4562 */ 'x', 'x', 'b', 'r', 'h', 32, 0,
  /* 4569 */ 'v', 's', 'r', 'h', 32, 0,
  /* 4575 */ 'v', 'm', 'u', 'l', 'e', 's', 'h', 32, 0,
  /* 4584 */ 'v', 'a', 'v', 'g', 's', 'h', 32, 0,
  /* 4592 */ 'v', 'u', 'p', 'k', 'h', 's', 'h', 32, 0,
  /* 4601 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'h', 32, 0,
  /* 4611 */ 'v', 'u', 'p', 'k', 'l', 's', 'h', 32, 0,
  /* 4620 */ 'v', 'm', 'i', 'n', 's', 'h', 32, 0,
  /* 4628 */ 'v', 'm', 'u', 'l', 'o', 's', 'h', 32, 0,
  /* 4637 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'h', 32, 0,
  /* 4647 */ 'e', 'v', 'e', 'x', 't', 's', 'h', 32, 0,
  /* 4656 */ 'v', 'm', 'a', 'x', 's', 'h', 32, 0,
  /* 4664 */ 'v', 's', 'p', 'l', 't', 'h', 32, 0,
  /* 4672 */ 'v', 'p', 'o', 'p', 'c', 'n', 't', 'h', 32, 0,
  /* 4682 */ 'v', 'i', 'n', 's', 'e', 'r', 't', 'h', 32, 0,
  /* 4692 */ 's', 't', 'h', 32, 0,
  /* 4697 */ 'v', 'a', 'b', 's', 'd', 'u', 'h', 32, 0,
  /* 4706 */ 'v', 'm', 'u', 'l', 'e', 'u', 'h', 32, 0,
  /* 4715 */ 'v', 'a', 'v', 'g', 'u', 'h', 32, 0,
  /* 4723 */ 'v', 'm', 'i', 'n', 'u', 'h', 32, 0,
  /* 4731 */ 'v', 'm', 'u', 'l', 'o', 'u', 'h', 32, 0,
  /* 4740 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'h', 32, 0,
  /* 4750 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'u', 'h', 32, 0,
  /* 4762 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'h', 32, 0,
  /* 4772 */ 'v', 'm', 'a', 'x', 'u', 'h', 32, 0,
  /* 4780 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'h', 32, 0,
  /* 4790 */ 'v', 'c', 'l', 'z', 'h', 32, 0,
  /* 4797 */ 'v', 'c', 't', 'z', 'h', 32, 0,
  /* 4804 */ 'd', 'c', 'b', 'i', 32, 0,
  /* 4810 */ 'i', 'c', 'b', 'i', 32, 0,
  /* 4816 */ 's', 'u', 'b', 'i', 32, 0,
  /* 4822 */ 'd', 'c', 'c', 'c', 'i', 32, 0,
  /* 4829 */ 'i', 'c', 'c', 'c', 'i', 32, 0,
  /* 4836 */ 'q', 'v', 'g', 'p', 'c', 'i', 32, 0,
  /* 4844 */ 's', 'r', 'a', 'd', 'i', 32, 0,
  /* 4851 */ 'a', 'd', 'd', 'i', 32, 0,
  /* 4857 */ 'c', 'm', 'p', 'l', 'd', 'i', 32, 0,
  /* 4865 */ 'c', 'l', 'r', 'l', 's', 'l', 'd', 'i', 32, 0,
  /* 4875 */ 'e', 'x', 't', 'l', 'd', 'i', 32, 0,
  /* 4883 */ 'x', 'x', 'p', 'e', 'r', 'm', 'd', 'i', 32, 0,
  /* 4893 */ 'c', 'm', 'p', 'd', 'i', 32, 0,
  /* 4900 */ 'c', 'l', 'r', 'r', 'd', 'i', 32, 0,
  /* 4908 */ 'i', 'n', 's', 'r', 'd', 'i', 32, 0,
  /* 4916 */ 'r', 'o', 't', 'r', 'd', 'i', 32, 0,
  /* 4924 */ 'e', 'x', 't', 'r', 'd', 'i', 32, 0,
  /* 4932 */ 't', 'd', 'i', 32, 0,
  /* 4937 */ 'w', 'r', 't', 'e', 'e', 'i', 32, 0,
  /* 4945 */ 'm', 't', 'f', 's', 'f', 'i', 32, 0,
  /* 4953 */ 'e', 'v', 's', 'p', 'l', 'a', 't', 'f', 'i', 32, 0,
  /* 4964 */ 'e', 'v', 'm', 'e', 'r', 'g', 'e', 'h', 'i', 32, 0,
  /* 4975 */ 'e', 'v', 'm', 'e', 'r', 'g', 'e', 'l', 'o', 'h', 'i', 32, 0,
  /* 4988 */ 't', 'l', 'b', 'l', 'i', 32, 0,
  /* 4995 */ 'm', 'u', 'l', 'l', 'i', 32, 0,
  /* 5002 */ 'e', 'x', 't', 's', 'w', 's', 'l', 'i', 32, 0,
  /* 5012 */ 'v', 'r', 'l', 'd', 'm', 'i', 32, 0,
  /* 5020 */ 'r', 'l', 'd', 'i', 'm', 'i', 32, 0,
  /* 5028 */ 'r', 'l', 'w', 'i', 'm', 'i', 32, 0,
  /* 5036 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'i', 32, 0,
  /* 5046 */ 'e', 'v', 'm', 'w', 'h', 's', 'm', 'i', 32, 0,
  /* 5056 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'i', 32, 0,
  /* 5066 */ 'e', 'v', 'm', 'w', 's', 'm', 'i', 32, 0,
  /* 5075 */ 'e', 'v', 'm', 'h', 'e', 'u', 'm', 'i', 32, 0,
  /* 5085 */ 'e', 'v', 'm', 'w', 'h', 'u', 'm', 'i', 32, 0,
  /* 5095 */ 'e', 'v', 'm', 'w', 'l', 'u', 'm', 'i', 32, 0,
  /* 5105 */ 'e', 'v', 'm', 'h', 'o', 'u', 'm', 'i', 32, 0,
  /* 5115 */ 'e', 'v', 'm', 'w', 'u', 'm', 'i', 32, 0,
  /* 5124 */ 'v', 'r', 'l', 'w', 'm', 'i', 32, 0,
  /* 5132 */ 'q', 'v', 'a', 'l', 'i', 'g', 'n', 'i', 32, 0,
  /* 5142 */ 'm', 'f', 'f', 's', 'c', 'r', 'n', 'i', 32, 0,
  /* 5152 */ 'm', 'f', 'f', 's', 'c', 'd', 'r', 'n', 'i', 32, 0,
  /* 5163 */ 'v', 's', 'l', 'd', 'o', 'i', 32, 0,
  /* 5171 */ 'x', 's', 'r', 'd', 'p', 'i', 32, 0,
  /* 5179 */ 'x', 'v', 'r', 'd', 'p', 'i', 32, 0,
  /* 5187 */ 'x', 's', 'r', 'q', 'p', 'i', 32, 0,
  /* 5195 */ 'x', 'v', 'r', 's', 'p', 'i', 32, 0,
  /* 5203 */ 'x', 'o', 'r', 'i', 32, 0,
  /* 5209 */ 'e', 'f', 'd', 'c', 'f', 's', 'i', 32, 0,
  /* 5218 */ 'e', 'f', 's', 'c', 'f', 's', 'i', 32, 0,
  /* 5227 */ 'e', 'v', 'f', 's', 'c', 'f', 's', 'i', 32, 0,
  /* 5237 */ 'e', 'f', 'd', 'c', 't', 's', 'i', 32, 0,
  /* 5246 */ 'e', 'f', 's', 'c', 't', 's', 'i', 32, 0,
  /* 5255 */ 'e', 'v', 'f', 's', 'c', 't', 's', 'i', 32, 0,
  /* 5265 */ 'q', 'v', 'e', 's', 'p', 'l', 'a', 't', 'i', 32, 0,
  /* 5276 */ 'e', 'v', 's', 'p', 'l', 'a', 't', 'i', 32, 0,
  /* 5286 */ 'e', 'f', 'd', 'c', 'f', 'u', 'i', 32, 0,
  /* 5295 */ 'e', 'f', 's', 'c', 'f', 'u', 'i', 32, 0,
  /* 5304 */ 'e', 'v', 'f', 's', 'c', 'f', 'u', 'i', 32, 0,
  /* 5314 */ 'e', 'f', 'd', 'c', 't', 'u', 'i', 32, 0,
  /* 5323 */ 'e', 'f', 's', 'c', 't', 'u', 'i', 32, 0,
  /* 5332 */ 'e', 'v', 'f', 's', 'c', 't', 'u', 'i', 32, 0,
  /* 5342 */ 's', 'r', 'a', 'w', 'i', 32, 0,
  /* 5349 */ 'x', 'x', 's', 'l', 'd', 'w', 'i', 32, 0,
  /* 5358 */ 'c', 'm', 'p', 'l', 'w', 'i', 32, 0,
  /* 5366 */ 'e', 'v', 'r', 'l', 'w', 'i', 32, 0,
  /* 5374 */ 'c', 'l', 'r', 'l', 's', 'l', 'w', 'i', 32, 0,
  /* 5384 */ 'i', 'n', 's', 'l', 'w', 'i', 32, 0,
  /* 5392 */ 'e', 'v', 's', 'l', 'w', 'i', 32, 0,
  /* 5400 */ 'e', 'x', 't', 'l', 'w', 'i', 32, 0,
  /* 5408 */ 'c', 'm', 'p', 'w', 'i', 32, 0,
  /* 5415 */ 'c', 'l', 'r', 'r', 'w', 'i', 32, 0,
  /* 5423 */ 'i', 'n', 's', 'r', 'w', 'i', 32, 0,
  /* 5431 */ 'r', 'o', 't', 'r', 'w', 'i', 32, 0,
  /* 5439 */ 'e', 'x', 't', 'r', 'w', 'i', 32, 0,
  /* 5447 */ 'l', 's', 'w', 'i', 32, 0,
  /* 5453 */ 's', 't', 's', 'w', 'i', 32, 0,
  /* 5460 */ 't', 'w', 'i', 32, 0,
  /* 5465 */ 'q', 'v', 's', 't', 'f', 'c', 'd', 'x', 'i', 32, 0,
  /* 5476 */ 'q', 'v', 's', 't', 'f', 'd', 'x', 'i', 32, 0,
  /* 5486 */ 'q', 'v', 's', 't', 'f', 'c', 's', 'x', 'i', 32, 0,
  /* 5497 */ 'q', 'v', 's', 't', 'f', 's', 'x', 'i', 32, 0,
  /* 5507 */ 'q', 'v', 's', 't', 'f', 'c', 'd', 'u', 'x', 'i', 32, 0,
  /* 5519 */ 'q', 'v', 's', 't', 'f', 'd', 'u', 'x', 'i', 32, 0,
  /* 5530 */ 'q', 'v', 's', 't', 'f', 'c', 's', 'u', 'x', 'i', 32, 0,
  /* 5542 */ 'q', 'v', 's', 't', 'f', 's', 'u', 'x', 'i', 32, 0,
  /* 5553 */ 't', 'c', 'h', 'e', 'c', 'k', 32, 0,
  /* 5561 */ 'q', 'v', 'f', 'l', 'o', 'g', 'i', 'c', 'a', 'l', 32, 0,
  /* 5573 */ 'b', 'l', 32, 0,
  /* 5577 */ 'b', 'c', 'l', 32, 0,
  /* 5582 */ 'r', 'l', 'd', 'c', 'l', 32, 0,
  /* 5589 */ 'r', 'l', 'd', 'i', 'c', 'l', 32, 0,
  /* 5597 */ 't', 'l', 'b', 'i', 'e', 'l', 32, 0,
  /* 5605 */ 'q', 'v', 'f', 's', 'e', 'l', 32, 0,
  /* 5613 */ 'i', 's', 'e', 'l', 32, 0,
  /* 5619 */ 'v', 's', 'e', 'l', 32, 0,
  /* 5625 */ 'x', 'x', 's', 'e', 'l', 32, 0,
  /* 5632 */ 'd', 'c', 'b', 'f', 'l', 32, 0,
  /* 5639 */ 'l', 'x', 'v', 'l', 'l', 32, 0,
  /* 5646 */ 's', 't', 'x', 'v', 'l', 'l', 32, 0,
  /* 5654 */ 'b', 'c', 'l', 'r', 'l', 32, 0,
  /* 5661 */ 'b', 'c', 'c', 't', 'r', 'l', 32, 0,
  /* 5669 */ 'm', 'f', 'f', 's', 'l', 32, 0,
  /* 5676 */ 'l', 'v', 's', 'l', 32, 0,
  /* 5682 */ 'e', 'f', 'd', 'm', 'u', 'l', 32, 0,
  /* 5690 */ 'q', 'v', 'f', 'm', 'u', 'l', 32, 0,
  /* 5698 */ 'e', 'f', 's', 'm', 'u', 'l', 32, 0,
  /* 5706 */ 'e', 'v', 'f', 's', 'm', 'u', 'l', 32, 0,
  /* 5715 */ 'q', 'v', 'f', 'x', 'm', 'u', 'l', 32, 0,
  /* 5724 */ 'l', 'x', 'v', 'l', 32, 0,
  /* 5730 */ 's', 't', 'x', 'v', 'l', 32, 0,
  /* 5737 */ 'l', 'v', 'x', 'l', 32, 0,
  /* 5743 */ 's', 't', 'v', 'x', 'l', 32, 0,
  /* 5750 */ 'd', 'c', 'b', 'z', 'l', 32, 0,
  /* 5757 */ 'b', 'd', 'z', 'l', 32, 0,
  /* 5763 */ 'b', 'd', 'n', 'z', 'l', 32, 0,
  /* 5770 */ 'v', 'm', 's', 'u', 'm', 'm', 'b', 'm', 32, 0,
  /* 5780 */ 'v', 's', 'u', 'b', 'u', 'b', 'm', 32, 0,
  /* 5789 */ 'v', 'a', 'd', 'd', 'u', 'b', 'm', 32, 0,
  /* 5798 */ 'v', 'm', 's', 'u', 'm', 'u', 'b', 'm', 32, 0,
  /* 5808 */ 'v', 's', 'u', 'b', 'u', 'd', 'm', 32, 0,
  /* 5817 */ 'v', 'a', 'd', 'd', 'u', 'd', 'm', 32, 0,
  /* 5826 */ 'v', 'm', 's', 'u', 'm', 's', 'h', 'm', 32, 0,
  /* 5836 */ 'v', 's', 'u', 'b', 'u', 'h', 'm', 32, 0,
  /* 5845 */ 'v', 'm', 'l', 'a', 'd', 'd', 'u', 'h', 'm', 32, 0,
  /* 5856 */ 'v', 'a', 'd', 'd', 'u', 'h', 'm', 32, 0,
  /* 5865 */ 'v', 'm', 's', 'u', 'm', 'u', 'h', 'm', 32, 0,
  /* 5875 */ 'v', 'r', 'f', 'i', 'm', 32, 0,
  /* 5882 */ 'x', 's', 'r', 'd', 'p', 'i', 'm', 32, 0,
  /* 5891 */ 'x', 'v', 'r', 'd', 'p', 'i', 'm', 32, 0,
  /* 5900 */ 'x', 'v', 'r', 's', 'p', 'i', 'm', 32, 0,
  /* 5909 */ 'q', 'v', 'f', 'r', 'i', 'm', 32, 0,
  /* 5917 */ 'v', 'r', 'l', 'd', 'n', 'm', 32, 0,
  /* 5925 */ 'r', 'l', 'w', 'i', 'n', 'm', 32, 0,
  /* 5933 */ 'v', 'r', 'l', 'w', 'n', 'm', 32, 0,
  /* 5941 */ 'v', 's', 'u', 'b', 'u', 'q', 'm', 32, 0,
  /* 5950 */ 'v', 'a', 'd', 'd', 'u', 'q', 'm', 32, 0,
  /* 5959 */ 'v', 's', 'u', 'b', 'e', 'u', 'q', 'm', 32, 0,
  /* 5969 */ 'v', 'a', 'd', 'd', 'e', 'u', 'q', 'm', 32, 0,
  /* 5979 */ 'q', 'v', 'f', 'p', 'e', 'r', 'm', 32, 0,
  /* 5988 */ 'v', 'p', 'e', 'r', 'm', 32, 0,
  /* 5995 */ 'x', 'x', 'p', 'e', 'r', 'm', 32, 0,
  /* 6003 */ 'v', 'p', 'k', 'u', 'd', 'u', 'm', 32, 0,
  /* 6012 */ 'v', 'p', 'k', 'u', 'h', 'u', 'm', 32, 0,
  /* 6021 */ 'v', 'p', 'k', 'u', 'w', 'u', 'm', 32, 0,
  /* 6030 */ 'v', 's', 'u', 'b', 'u', 'w', 'm', 32, 0,
  /* 6039 */ 'v', 'a', 'd', 'd', 'u', 'w', 'm', 32, 0,
  /* 6048 */ 'v', 'm', 'u', 'l', 'u', 'w', 'm', 32, 0,
  /* 6057 */ 'e', 'v', 'm', 'h', 'e', 'g', 's', 'm', 'f', 'a', 'n', 32, 0,
  /* 6070 */ 'e', 'v', 'm', 'h', 'o', 'g', 's', 'm', 'f', 'a', 'n', 32, 0,
  /* 6083 */ 'e', 'v', 'm', 'w', 's', 'm', 'f', 'a', 'n', 32, 0,
  /* 6094 */ 'e', 'v', 'm', 'w', 's', 's', 'f', 'a', 'n', 32, 0,
  /* 6105 */ 'e', 'v', 'm', 'h', 'e', 'g', 's', 'm', 'i', 'a', 'n', 32, 0,
  /* 6118 */ 'e', 'v', 'm', 'h', 'o', 'g', 's', 'm', 'i', 'a', 'n', 32, 0,
  /* 6131 */ 'e', 'v', 'm', 'w', 's', 'm', 'i', 'a', 'n', 32, 0,
  /* 6142 */ 'e', 'v', 'm', 'h', 'e', 'g', 'u', 'm', 'i', 'a', 'n', 32, 0,
  /* 6155 */ 'e', 'v', 'm', 'h', 'o', 'g', 'u', 'm', 'i', 'a', 'n', 32, 0,
  /* 6168 */ 'e', 'v', 'm', 'w', 'u', 'm', 'i', 'a', 'n', 32, 0,
  /* 6179 */ 'q', 'v', 'f', 't', 's', 't', 'n', 'a', 'n', 32, 0,
  /* 6190 */ 'q', 'v', 'f', 'c', 'p', 's', 'g', 'n', 32, 0,
  /* 6200 */ 'v', 'r', 'f', 'i', 'n', 32, 0,
  /* 6207 */ 'q', 'v', 'f', 'r', 'i', 'n', 32, 0,
  /* 6215 */ 'm', 'f', 's', 'r', 'i', 'n', 32, 0,
  /* 6223 */ 'm', 't', 's', 'r', 'i', 'n', 32, 0,
  /* 6231 */ 'x', 's', 'c', 'v', 's', 'p', 'd', 'p', 'n', 32, 0,
  /* 6242 */ 'x', 's', 'c', 'v', 'd', 'p', 's', 'p', 'n', 32, 0,
  /* 6253 */ 'd', 'a', 'r', 'n', 32, 0,
  /* 6259 */ 'm', 'f', 'f', 's', 'c', 'r', 'n', 32, 0,
  /* 6268 */ 'm', 'f', 'f', 's', 'c', 'd', 'r', 'n', 32, 0,
  /* 6278 */ 'a', 'd', 'd', 'c', 'o', 32, 0,
  /* 6285 */ 's', 'u', 'b', 'f', 'c', 'o', 32, 0,
  /* 6293 */ 'a', 'd', 'd', 'o', 32, 0,
  /* 6299 */ 'm', 'u', 'l', 'l', 'd', 'o', 32, 0,
  /* 6307 */ 'd', 'i', 'v', 'd', 'o', 32, 0,
  /* 6314 */ 'a', 'd', 'd', 'e', 'o', 32, 0,
  /* 6321 */ 'd', 'i', 'v', 'd', 'e', 'o', 32, 0,
  /* 6329 */ 's', 'u', 'b', 'f', 'e', 'o', 32, 0,
  /* 6337 */ 'a', 'd', 'd', 'm', 'e', 'o', 32, 0,
  /* 6345 */ 's', 'u', 'b', 'f', 'm', 'e', 'o', 32, 0,
  /* 6354 */ 'd', 'i', 'v', 'w', 'e', 'o', 32, 0,
  /* 6362 */ 'a', 'd', 'd', 'z', 'e', 'o', 32, 0,
  /* 6370 */ 's', 'u', 'b', 'f', 'z', 'e', 'o', 32, 0,
  /* 6379 */ 's', 'u', 'b', 'f', 'o', 32, 0,
  /* 6386 */ 'n', 'e', 'g', 'o', 32, 0,
  /* 6392 */ 'e', 'v', 's', 't', 'w', 'h', 'o', 32, 0,
  /* 6401 */ 'e', 'v', 'm', 'e', 'r', 'g', 'e', 'l', 'o', 32, 0,
  /* 6412 */ 'e', 'v', 'm', 'e', 'r', 'g', 'e', 'h', 'i', 'l', 'o', 32, 0,
  /* 6425 */ 'v', 's', 'l', 'o', 32, 0,
  /* 6431 */ 'x', 's', 'c', 'v', 'q', 'p', 'd', 'p', 'o', 32, 0,
  /* 6442 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'q', 'p', 'o', 32, 0,
  /* 6454 */ 'x', 's', 'm', 's', 'u', 'b', 'q', 'p', 'o', 32, 0,
  /* 6465 */ 'x', 's', 's', 'u', 'b', 'q', 'p', 'o', 32, 0,
  /* 6475 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'q', 'p', 'o', 32, 0,
  /* 6487 */ 'x', 's', 'm', 'a', 'd', 'd', 'q', 'p', 'o', 32, 0,
  /* 6498 */ 'x', 's', 'a', 'd', 'd', 'q', 'p', 'o', 32, 0,
  /* 6508 */ 'x', 's', 'm', 'u', 'l', 'q', 'p', 'o', 32, 0,
  /* 6518 */ 'x', 's', 's', 'q', 'r', 't', 'q', 'p', 'o', 32, 0,
  /* 6529 */ 'x', 's', 'd', 'i', 'v', 'q', 'p', 'o', 32, 0,
  /* 6539 */ 'v', 's', 'r', 'o', 32, 0,
  /* 6545 */ 'd', 'i', 'v', 'd', 'u', 'o', 32, 0,
  /* 6553 */ 'd', 'i', 'v', 'd', 'e', 'u', 'o', 32, 0,
  /* 6562 */ 'd', 'i', 'v', 'w', 'e', 'u', 'o', 32, 0,
  /* 6571 */ 'd', 'i', 'v', 'w', 'u', 'o', 32, 0,
  /* 6579 */ 'm', 'u', 'l', 'l', 'w', 'o', 32, 0,
  /* 6587 */ 'd', 'i', 'v', 'w', 'o', 32, 0,
  /* 6594 */ 'e', 'v', 's', 't', 'w', 'w', 'o', 32, 0,
  /* 6603 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'a', 'd', 'p', 32, 0,
  /* 6615 */ 'x', 'v', 'n', 'm', 's', 'u', 'b', 'a', 'd', 'p', 32, 0,
  /* 6627 */ 'x', 's', 'm', 's', 'u', 'b', 'a', 'd', 'p', 32, 0,
  /* 6638 */ 'x', 'v', 'm', 's', 'u', 'b', 'a', 'd', 'p', 32, 0,
  /* 6649 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'a', 'd', 'p', 32, 0,
  /* 6661 */ 'x', 'v', 'n', 'm', 'a', 'd', 'd', 'a', 'd', 'p', 32, 0,
  /* 6673 */ 'x', 's', 'm', 'a', 'd', 'd', 'a', 'd', 'p', 32, 0,
  /* 6684 */ 'x', 'v', 'm', 'a', 'd', 'd', 'a', 'd', 'p', 32, 0,
  /* 6695 */ 'x', 's', 's', 'u', 'b', 'd', 'p', 32, 0,
  /* 6704 */ 'x', 'v', 's', 'u', 'b', 'd', 'p', 32, 0,
  /* 6713 */ 'x', 's', 't', 's', 't', 'd', 'c', 'd', 'p', 32, 0,
  /* 6724 */ 'x', 'v', 't', 's', 't', 'd', 'c', 'd', 'p', 32, 0,
  /* 6735 */ 'x', 's', 'm', 'i', 'n', 'c', 'd', 'p', 32, 0,
  /* 6745 */ 'x', 's', 'm', 'a', 'x', 'c', 'd', 'p', 32, 0,
  /* 6755 */ 'x', 's', 'a', 'd', 'd', 'd', 'p', 32, 0,
  /* 6764 */ 'x', 'v', 'a', 'd', 'd', 'd', 'p', 32, 0,
  /* 6773 */ 'x', 's', 'c', 'v', 's', 'x', 'd', 'd', 'p', 32, 0,
  /* 6784 */ 'x', 'v', 'c', 'v', 's', 'x', 'd', 'd', 'p', 32, 0,
  /* 6795 */ 'x', 's', 'c', 'v', 'u', 'x', 'd', 'd', 'p', 32, 0,
  /* 6806 */ 'x', 'v', 'c', 'v', 'u', 'x', 'd', 'd', 'p', 32, 0,
  /* 6817 */ 'x', 's', 'c', 'm', 'p', 'g', 'e', 'd', 'p', 32, 0,
  /* 6828 */ 'x', 'v', 'c', 'm', 'p', 'g', 'e', 'd', 'p', 32, 0,
  /* 6839 */ 'x', 's', 'r', 'e', 'd', 'p', 32, 0,
  /* 6847 */ 'x', 'v', 'r', 'e', 'd', 'p', 32, 0,
  /* 6855 */ 'x', 's', 'r', 's', 'q', 'r', 't', 'e', 'd', 'p', 32, 0,
  /* 6867 */ 'x', 'v', 'r', 's', 'q', 'r', 't', 'e', 'd', 'p', 32, 0,
  /* 6879 */ 'x', 's', 'n', 'e', 'g', 'd', 'p', 32, 0,
  /* 6888 */ 'x', 'v', 'n', 'e', 'g', 'd', 'p', 32, 0,
  /* 6897 */ 'x', 's', 'x', 's', 'i', 'g', 'd', 'p', 32, 0,
  /* 6907 */ 'x', 'v', 'x', 's', 'i', 'g', 'd', 'p', 32, 0,
  /* 6917 */ 'x', 's', 'm', 'i', 'n', 'j', 'd', 'p', 32, 0,
  /* 6927 */ 'x', 's', 'm', 'a', 'x', 'j', 'd', 'p', 32, 0,
  /* 6937 */ 'x', 's', 'm', 'u', 'l', 'd', 'p', 32, 0,
  /* 6946 */ 'x', 'v', 'm', 'u', 'l', 'd', 'p', 32, 0,
  /* 6955 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'm', 'd', 'p', 32, 0,
  /* 6967 */ 'x', 'v', 'n', 'm', 's', 'u', 'b', 'm', 'd', 'p', 32, 0,
  /* 6979 */ 'x', 's', 'm', 's', 'u', 'b', 'm', 'd', 'p', 32, 0,
  /* 6990 */ 'x', 'v', 'm', 's', 'u', 'b', 'm', 'd', 'p', 32, 0,
  /* 7001 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'm', 'd', 'p', 32, 0,
  /* 7013 */ 'x', 'v', 'n', 'm', 'a', 'd', 'd', 'm', 'd', 'p', 32, 0,
  /* 7025 */ 'x', 's', 'm', 'a', 'd', 'd', 'm', 'd', 'p', 32, 0,
  /* 7036 */ 'x', 'v', 'm', 'a', 'd', 'd', 'm', 'd', 'p', 32, 0,
  /* 7047 */ 'x', 's', 'c', 'p', 's', 'g', 'n', 'd', 'p', 32, 0,
  /* 7058 */ 'x', 'v', 'c', 'p', 's', 'g', 'n', 'd', 'p', 32, 0,
  /* 7069 */ 'x', 's', 'm', 'i', 'n', 'd', 'p', 32, 0,
  /* 7078 */ 'x', 'v', 'm', 'i', 'n', 'd', 'p', 32, 0,
  /* 7087 */ 'x', 's', 'c', 'm', 'p', 'o', 'd', 'p', 32, 0,
  /* 7097 */ 'x', 's', 'c', 'v', 'h', 'p', 'd', 'p', 32, 0,
  /* 7107 */ 'x', 's', 'c', 'v', 'q', 'p', 'd', 'p', 32, 0,
  /* 7117 */ 'x', 's', 'c', 'v', 's', 'p', 'd', 'p', 32, 0,
  /* 7127 */ 'x', 'v', 'c', 'v', 's', 'p', 'd', 'p', 32, 0,
  /* 7137 */ 'x', 's', 'i', 'e', 'x', 'p', 'd', 'p', 32, 0,
  /* 7147 */ 'x', 'v', 'i', 'e', 'x', 'p', 'd', 'p', 32, 0,
  /* 7157 */ 'x', 's', 'c', 'm', 'p', 'e', 'x', 'p', 'd', 'p', 32, 0,
  /* 7169 */ 'x', 's', 'x', 'e', 'x', 'p', 'd', 'p', 32, 0,
  /* 7179 */ 'x', 'v', 'x', 'e', 'x', 'p', 'd', 'p', 32, 0,
  /* 7189 */ 'x', 's', 'c', 'm', 'p', 'e', 'q', 'd', 'p', 32, 0,
  /* 7200 */ 'x', 'v', 'c', 'm', 'p', 'e', 'q', 'd', 'p', 32, 0,
  /* 7211 */ 'x', 's', 'n', 'a', 'b', 's', 'd', 'p', 32, 0,
  /* 7221 */ 'x', 'v', 'n', 'a', 'b', 's', 'd', 'p', 32, 0,
  /* 7231 */ 'x', 's', 'a', 'b', 's', 'd', 'p', 32, 0,
  /* 7240 */ 'x', 'v', 'a', 'b', 's', 'd', 'p', 32, 0,
  /* 7249 */ 'x', 's', 'c', 'm', 'p', 'g', 't', 'd', 'p', 32, 0,
  /* 7260 */ 'x', 'v', 'c', 'm', 'p', 'g', 't', 'd', 'p', 32, 0,
  /* 7271 */ 'x', 's', 's', 'q', 'r', 't', 'd', 'p', 32, 0,
  /* 7281 */ 'x', 's', 't', 's', 'q', 'r', 't', 'd', 'p', 32, 0,
  /* 7292 */ 'x', 'v', 't', 's', 'q', 'r', 't', 'd', 'p', 32, 0,
  /* 7303 */ 'x', 'v', 's', 'q', 'r', 't', 'd', 'p', 32, 0,
  /* 7313 */ 'x', 's', 'c', 'm', 'p', 'u', 'd', 'p', 32, 0,
  /* 7323 */ 'x', 's', 'd', 'i', 'v', 'd', 'p', 32, 0,
  /* 7332 */ 'x', 's', 't', 'd', 'i', 'v', 'd', 'p', 32, 0,
  /* 7342 */ 'x', 'v', 't', 'd', 'i', 'v', 'd', 'p', 32, 0,
  /* 7352 */ 'x', 'v', 'd', 'i', 'v', 'd', 'p', 32, 0,
  /* 7361 */ 'x', 'v', 'c', 'v', 's', 'x', 'w', 'd', 'p', 32, 0,
  /* 7372 */ 'x', 'v', 'c', 'v', 'u', 'x', 'w', 'd', 'p', 32, 0,
  /* 7383 */ 'x', 's', 'm', 'a', 'x', 'd', 'p', 32, 0,
  /* 7392 */ 'x', 'v', 'm', 'a', 'x', 'd', 'p', 32, 0,
  /* 7401 */ 'd', 'c', 'b', 'f', 'e', 'p', 32, 0,
  /* 7409 */ 'i', 'c', 'b', 'i', 'e', 'p', 32, 0,
  /* 7417 */ 'd', 'c', 'b', 'z', 'l', 'e', 'p', 32, 0,
  /* 7426 */ 'd', 'c', 'b', 't', 'e', 'p', 32, 0,
  /* 7434 */ 'd', 'c', 'b', 's', 't', 'e', 'p', 32, 0,
  /* 7443 */ 'd', 'c', 'b', 't', 's', 't', 'e', 'p', 32, 0,
  /* 7453 */ 'd', 'c', 'b', 'z', 'e', 'p', 32, 0,
  /* 7461 */ 'v', 'c', 'm', 'p', 'b', 'f', 'p', 32, 0,
  /* 7470 */ 'v', 'n', 'm', 's', 'u', 'b', 'f', 'p', 32, 0,
  /* 7480 */ 'v', 's', 'u', 'b', 'f', 'p', 32, 0,
  /* 7488 */ 'v', 'm', 'a', 'd', 'd', 'f', 'p', 32, 0,
  /* 7497 */ 'v', 'a', 'd', 'd', 'f', 'p', 32, 0,
  /* 7505 */ 'v', 'l', 'o', 'g', 'e', 'f', 'p', 32, 0,
  /* 7514 */ 'v', 'c', 'm', 'p', 'g', 'e', 'f', 'p', 32, 0,
  /* 7524 */ 'v', 'r', 'e', 'f', 'p', 32, 0,
  /* 7531 */ 'v', 'e', 'x', 'p', 't', 'e', 'f', 'p', 32, 0,
  /* 7541 */ 'v', 'r', 's', 'q', 'r', 't', 'e', 'f', 'p', 32, 0,
  /* 7552 */ 'v', 'm', 'i', 'n', 'f', 'p', 32, 0,
  /* 7560 */ 'v', 'c', 'm', 'p', 'e', 'q', 'f', 'p', 32, 0,
  /* 7570 */ 'v', 'c', 'm', 'p', 'g', 't', 'f', 'p', 32, 0,
  /* 7580 */ 'v', 'm', 'a', 'x', 'f', 'p', 32, 0,
  /* 7588 */ 'x', 's', 'c', 'v', 'd', 'p', 'h', 'p', 32, 0,
  /* 7598 */ 'x', 'v', 'c', 'v', 's', 'p', 'h', 'p', 32, 0,
  /* 7608 */ 'v', 'r', 'f', 'i', 'p', 32, 0,
  /* 7615 */ 'x', 's', 'r', 'd', 'p', 'i', 'p', 32, 0,
  /* 7624 */ 'x', 'v', 'r', 'd', 'p', 'i', 'p', 32, 0,
  /* 7633 */ 'x', 'v', 'r', 's', 'p', 'i', 'p', 32, 0,
  /* 7642 */ 'q', 'v', 'f', 'r', 'i', 'p', 32, 0,
  /* 7650 */ 'd', 'c', 'b', 'f', 'l', 'p', 32, 0,
  /* 7658 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'q', 'p', 32, 0,
  /* 7669 */ 'x', 's', 'm', 's', 'u', 'b', 'q', 'p', 32, 0,
  /* 7679 */ 'x', 's', 's', 'u', 'b', 'q', 'p', 32, 0,
  /* 7688 */ 'x', 's', 't', 's', 't', 'd', 'c', 'q', 'p', 32, 0,
  /* 7699 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'q', 'p', 32, 0,
  /* 7710 */ 'x', 's', 'm', 'a', 'd', 'd', 'q', 'p', 32, 0,
  /* 7720 */ 'x', 's', 'a', 'd', 'd', 'q', 'p', 32, 0,
  /* 7729 */ 'x', 's', 'c', 'v', 's', 'd', 'q', 'p', 32, 0,
  /* 7739 */ 'x', 's', 'c', 'v', 'u', 'd', 'q', 'p', 32, 0,
  /* 7749 */ 'x', 's', 'n', 'e', 'g', 'q', 'p', 32, 0,
  /* 7758 */ 'x', 's', 'x', 's', 'i', 'g', 'q', 'p', 32, 0,
  /* 7768 */ 'x', 's', 'm', 'u', 'l', 'q', 'p', 32, 0,
  /* 7777 */ 'x', 's', 'c', 'p', 's', 'g', 'n', 'q', 'p', 32, 0,
  /* 7788 */ 'x', 's', 'c', 'm', 'p', 'o', 'q', 'p', 32, 0,
  /* 7798 */ 'x', 's', 'c', 'v', 'd', 'p', 'q', 'p', 32, 0,
  /* 7808 */ 'x', 's', 'i', 'e', 'x', 'p', 'q', 'p', 32, 0,
  /* 7818 */ 'x', 's', 'c', 'm', 'p', 'e', 'x', 'p', 'q', 'p', 32, 0,
  /* 7830 */ 'x', 's', 'x', 'e', 'x', 'p', 'q', 'p', 32, 0,
  /* 7840 */ 'x', 's', 'n', 'a', 'b', 's', 'q', 'p', 32, 0,
  /* 7850 */ 'x', 's', 'a', 'b', 's', 'q', 'p', 32, 0,
  /* 7859 */ 'x', 's', 's', 'q', 'r', 't', 'q', 'p', 32, 0,
  /* 7869 */ 'x', 's', 'c', 'm', 'p', 'u', 'q', 'p', 32, 0,
  /* 7879 */ 'x', 's', 'd', 'i', 'v', 'q', 'p', 32, 0,
  /* 7888 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'a', 's', 'p', 32, 0,
  /* 7900 */ 'x', 'v', 'n', 'm', 's', 'u', 'b', 'a', 's', 'p', 32, 0,
  /* 7912 */ 'x', 's', 'm', 's', 'u', 'b', 'a', 's', 'p', 32, 0,
  /* 7923 */ 'x', 'v', 'm', 's', 'u', 'b', 'a', 's', 'p', 32, 0,
  /* 7934 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'a', 's', 'p', 32, 0,
  /* 7946 */ 'x', 'v', 'n', 'm', 'a', 'd', 'd', 'a', 's', 'p', 32, 0,
  /* 7958 */ 'x', 's', 'm', 'a', 'd', 'd', 'a', 's', 'p', 32, 0,
  /* 7969 */ 'x', 'v', 'm', 'a', 'd', 'd', 'a', 's', 'p', 32, 0,
  /* 7980 */ 'x', 's', 's', 'u', 'b', 's', 'p', 32, 0,
  /* 7989 */ 'x', 'v', 's', 'u', 'b', 's', 'p', 32, 0,
  /* 7998 */ 'x', 's', 't', 's', 't', 'd', 'c', 's', 'p', 32, 0,
  /* 8009 */ 'x', 'v', 't', 's', 't', 'd', 'c', 's', 'p', 32, 0,
  /* 8020 */ 'x', 's', 'a', 'd', 'd', 's', 'p', 32, 0,
  /* 8029 */ 'x', 'v', 'a', 'd', 'd', 's', 'p', 32, 0,
  /* 8038 */ 'x', 's', 'c', 'v', 's', 'x', 'd', 's', 'p', 32, 0,
  /* 8049 */ 'x', 'v', 'c', 'v', 's', 'x', 'd', 's', 'p', 32, 0,
  /* 8060 */ 'x', 's', 'c', 'v', 'u', 'x', 'd', 's', 'p', 32, 0,
  /* 8071 */ 'x', 'v', 'c', 'v', 'u', 'x', 'd', 's', 'p', 32, 0,
  /* 8082 */ 'x', 'v', 'c', 'm', 'p', 'g', 'e', 's', 'p', 32, 0,
  /* 8093 */ 'x', 's', 'r', 'e', 's', 'p', 32, 0,
  /* 8101 */ 'x', 'v', 'r', 'e', 's', 'p', 32, 0,
  /* 8109 */ 'x', 's', 'r', 's', 'q', 'r', 't', 'e', 's', 'p', 32, 0,
  /* 8121 */ 'x', 'v', 'r', 's', 'q', 'r', 't', 'e', 's', 'p', 32, 0,
  /* 8133 */ 'x', 'v', 'n', 'e', 'g', 's', 'p', 32, 0,
  /* 8142 */ 'x', 'v', 'x', 's', 'i', 'g', 's', 'p', 32, 0,
  /* 8152 */ 'x', 's', 'm', 'u', 'l', 's', 'p', 32, 0,
  /* 8161 */ 'x', 'v', 'm', 'u', 'l', 's', 'p', 32, 0,
  /* 8170 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'm', 's', 'p', 32, 0,
  /* 8182 */ 'x', 'v', 'n', 'm', 's', 'u', 'b', 'm', 's', 'p', 32, 0,
  /* 8194 */ 'x', 's', 'm', 's', 'u', 'b', 'm', 's', 'p', 32, 0,
  /* 8205 */ 'x', 'v', 'm', 's', 'u', 'b', 'm', 's', 'p', 32, 0,
  /* 8216 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'm', 's', 'p', 32, 0,
  /* 8228 */ 'x', 'v', 'n', 'm', 'a', 'd', 'd', 'm', 's', 'p', 32, 0,
  /* 8240 */ 'x', 's', 'm', 'a', 'd', 'd', 'm', 's', 'p', 32, 0,
  /* 8251 */ 'x', 'v', 'm', 'a', 'd', 'd', 'm', 's', 'p', 32, 0,
  /* 8262 */ 'x', 'v', 'c', 'p', 's', 'g', 'n', 's', 'p', 32, 0,
  /* 8273 */ 'x', 'v', 'm', 'i', 'n', 's', 'p', 32, 0,
  /* 8282 */ 'x', 's', 'c', 'v', 'd', 'p', 's', 'p', 32, 0,
  /* 8292 */ 'x', 'v', 'c', 'v', 'd', 'p', 's', 'p', 32, 0,
  /* 8302 */ 'x', 'v', 'c', 'v', 'h', 'p', 's', 'p', 32, 0,
  /* 8312 */ 'x', 'v', 'i', 'e', 'x', 'p', 's', 'p', 32, 0,
  /* 8322 */ 'x', 'v', 'x', 'e', 'x', 'p', 's', 'p', 32, 0,
  /* 8332 */ 'x', 'v', 'c', 'm', 'p', 'e', 'q', 's', 'p', 32, 0,
  /* 8343 */ 'q', 'v', 'f', 'r', 's', 'p', 32, 0,
  /* 8351 */ 'x', 's', 'r', 's', 'p', 32, 0,
  /* 8358 */ 'x', 'v', 'n', 'a', 'b', 's', 's', 'p', 32, 0,
  /* 8368 */ 'x', 'v', 'a', 'b', 's', 's', 'p', 32, 0,
  /* 8377 */ 'l', 'x', 's', 's', 'p', 32, 0,
  /* 8384 */ 's', 't', 'x', 's', 's', 'p', 32, 0,
  /* 8392 */ 'x', 'v', 'c', 'm', 'p', 'g', 't', 's', 'p', 32, 0,
  /* 8403 */ 'x', 's', 's', 'q', 'r', 't', 's', 'p', 32, 0,
  /* 8413 */ 'x', 'v', 't', 's', 'q', 'r', 't', 's', 'p', 32, 0,
  /* 8424 */ 'x', 'v', 's', 'q', 'r', 't', 's', 'p', 32, 0,
  /* 8434 */ 'x', 's', 'd', 'i', 'v', 's', 'p', 32, 0,
  /* 8443 */ 'x', 'v', 't', 'd', 'i', 'v', 's', 'p', 32, 0,
  /* 8453 */ 'x', 'v', 'd', 'i', 'v', 's', 'p', 32, 0,
  /* 8462 */ 'x', 'v', 'c', 'v', 's', 'x', 'w', 's', 'p', 32, 0,
  /* 8473 */ 'x', 'v', 'c', 'v', 'u', 'x', 'w', 's', 'p', 32, 0,
  /* 8484 */ 'x', 'v', 'm', 'a', 'x', 's', 'p', 32, 0,
  /* 8493 */ 'x', 's', 'r', 'q', 'p', 'x', 'p', 32, 0,
  /* 8502 */ 'v', 'p', 'r', 't', 'y', 'b', 'q', 32, 0,
  /* 8511 */ 'e', 'f', 'd', 'c', 'm', 'p', 'e', 'q', 32, 0,
  /* 8521 */ 'q', 'v', 'f', 'c', 'm', 'p', 'e', 'q', 32, 0,
  /* 8531 */ 'e', 'f', 's', 'c', 'm', 'p', 'e', 'q', 32, 0,
  /* 8541 */ 'e', 'v', 'f', 's', 'c', 'm', 'p', 'e', 'q', 32, 0,
  /* 8552 */ 'e', 'v', 'c', 'm', 'p', 'e', 'q', 32, 0,
  /* 8561 */ 'e', 'f', 'd', 't', 's', 't', 'e', 'q', 32, 0,
  /* 8571 */ 'e', 'f', 's', 't', 's', 't', 'e', 'q', 32, 0,
  /* 8581 */ 'e', 'v', 'f', 's', 't', 's', 't', 'e', 'q', 32, 0,
  /* 8592 */ 'v', 'b', 'p', 'e', 'r', 'm', 'q', 32, 0,
  /* 8601 */ 'x', 'x', 'b', 'r', 'q', 32, 0,
  /* 8608 */ 'v', 'm', 'u', 'l', '1', '0', 'u', 'q', 32, 0,
  /* 8618 */ 'v', 'm', 'u', 'l', '1', '0', 'c', 'u', 'q', 32, 0,
  /* 8629 */ 'v', 's', 'u', 'b', 'c', 'u', 'q', 32, 0,
  /* 8638 */ 'v', 'a', 'd', 'd', 'c', 'u', 'q', 32, 0,
  /* 8647 */ 'v', 'm', 'u', 'l', '1', '0', 'e', 'c', 'u', 'q', 32, 0,
  /* 8659 */ 'v', 's', 'u', 'b', 'e', 'c', 'u', 'q', 32, 0,
  /* 8669 */ 'v', 'a', 'd', 'd', 'e', 'c', 'u', 'q', 32, 0,
  /* 8679 */ 'v', 'm', 'u', 'l', '1', '0', 'e', 'u', 'q', 32, 0,
  /* 8690 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 32, 0,
  /* 8703 */ 'm', 'b', 'a', 'r', 32, 0,
  /* 8709 */ 'm', 'f', 'd', 'c', 'r', 32, 0,
  /* 8716 */ 'r', 'l', 'd', 'c', 'r', 32, 0,
  /* 8723 */ 'm', 't', 'd', 'c', 'r', 32, 0,
  /* 8730 */ 'm', 'f', 'c', 'r', 32, 0,
  /* 8736 */ 'r', 'l', 'd', 'i', 'c', 'r', 32, 0,
  /* 8744 */ 'm', 'f', 'v', 's', 'c', 'r', 32, 0,
  /* 8752 */ 'm', 't', 'v', 's', 'c', 'r', 32, 0,
  /* 8760 */ 'v', 'n', 'c', 'i', 'p', 'h', 'e', 'r', 32, 0,
  /* 8770 */ 'v', 'c', 'i', 'p', 'h', 'e', 'r', 32, 0,
  /* 8779 */ 'b', 'c', 'l', 'r', 32, 0,
  /* 8785 */ 'm', 'f', 'l', 'r', 32, 0,
  /* 8791 */ 'm', 't', 'l', 'r', 32, 0,
  /* 8797 */ 'q', 'v', 'f', 'm', 'r', 32, 0,
  /* 8804 */ 'm', 'f', 'p', 'm', 'r', 32, 0,
  /* 8811 */ 'm', 't', 'p', 'm', 'r', 32, 0,
  /* 8818 */ 'v', 'p', 'e', 'r', 'm', 'r', 32, 0,
  /* 8826 */ 'x', 'x', 'p', 'e', 'r', 'm', 'r', 32, 0,
  /* 8835 */ 'x', 'x', 'l', 'o', 'r', 32, 0,
  /* 8842 */ 'x', 'x', 'l', 'n', 'o', 'r', 32, 0,
  /* 8850 */ 'c', 'r', 'n', 'o', 'r', 32, 0,
  /* 8857 */ 'e', 'v', 'n', 'o', 'r', 32, 0,
  /* 8864 */ 'c', 'r', 'o', 'r', 32, 0,
  /* 8870 */ 'e', 'v', 'o', 'r', 32, 0,
  /* 8876 */ 'x', 'x', 'l', 'x', 'o', 'r', 32, 0,
  /* 8884 */ 'v', 'p', 'e', 'r', 'm', 'x', 'o', 'r', 32, 0,
  /* 8894 */ 'c', 'r', 'x', 'o', 'r', 32, 0,
  /* 8901 */ 'e', 'v', 'x', 'o', 'r', 32, 0,
  /* 8908 */ 'm', 'f', 's', 'p', 'r', 32, 0,
  /* 8915 */ 'm', 't', 's', 'p', 'r', 32, 0,
  /* 8922 */ 'm', 'f', 's', 'r', 32, 0,
  /* 8928 */ 'm', 'f', 'm', 's', 'r', 32, 0,
  /* 8935 */ 'm', 't', 'm', 's', 'r', 32, 0,
  /* 8942 */ 'm', 't', 's', 'r', 32, 0,
  /* 8948 */ 'l', 'v', 's', 'r', 32, 0,
  /* 8954 */ 'b', 'c', 'c', 't', 'r', 32, 0,
  /* 8961 */ 'm', 'f', 'c', 't', 'r', 32, 0,
  /* 8968 */ 'm', 't', 'c', 't', 'r', 32, 0,
  /* 8975 */ 'e', 'f', 'd', 'a', 'b', 's', 32, 0,
  /* 8983 */ 'q', 'v', 'f', 'a', 'b', 's', 32, 0,
  /* 8991 */ 'e', 'f', 'd', 'n', 'a', 'b', 's', 32, 0,
  /* 9000 */ 'q', 'v', 'f', 'n', 'a', 'b', 's', 32, 0,
  /* 9009 */ 'e', 'f', 's', 'n', 'a', 'b', 's', 32, 0,
  /* 9018 */ 'e', 'v', 'f', 's', 'n', 'a', 'b', 's', 32, 0,
  /* 9028 */ 'e', 'f', 's', 'a', 'b', 's', 32, 0,
  /* 9036 */ 'e', 'v', 'f', 's', 'a', 'b', 's', 32, 0,
  /* 9045 */ 'e', 'v', 'a', 'b', 's', 32, 0,
  /* 9052 */ 'v', 's', 'u', 'm', '4', 's', 'b', 's', 32, 0,
  /* 9062 */ 'v', 's', 'u', 'b', 's', 'b', 's', 32, 0,
  /* 9071 */ 'v', 'a', 'd', 'd', 's', 'b', 's', 32, 0,
  /* 9080 */ 'v', 's', 'u', 'm', '4', 'u', 'b', 's', 32, 0,
  /* 9090 */ 'v', 's', 'u', 'b', 'u', 'b', 's', 32, 0,
  /* 9099 */ 'v', 'a', 'd', 'd', 'u', 'b', 's', 32, 0,
  /* 9108 */ 'q', 'v', 'f', 's', 'u', 'b', 's', 32, 0,
  /* 9117 */ 'q', 'v', 'f', 'm', 's', 'u', 'b', 's', 32, 0,
  /* 9127 */ 'q', 'v', 'f', 'n', 'm', 's', 'u', 'b', 's', 32, 0,
  /* 9138 */ 'q', 'v', 'f', 'a', 'd', 'd', 's', 32, 0,
  /* 9147 */ 'q', 'v', 'f', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 9157 */ 'q', 'v', 'f', 'n', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 9168 */ 'q', 'v', 'f', 'x', 'x', 'c', 'p', 'n', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 9183 */ 'q', 'v', 'f', 'x', 'x', 'n', 'p', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 9197 */ 'q', 'v', 'f', 'x', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 9208 */ 'q', 'v', 'f', 'x', 'x', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 9220 */ 'q', 'v', 'f', 'c', 'f', 'i', 'd', 's', 32, 0,
  /* 9230 */ 'd', 'c', 'b', 't', 'd', 's', 32, 0,
  /* 9238 */ 'd', 'c', 'b', 't', 's', 't', 'd', 's', 32, 0,
  /* 9248 */ 'x', 's', 'c', 'v', 'd', 'p', 's', 'x', 'd', 's', 32, 0,
  /* 9260 */ 'x', 'v', 'c', 'v', 'd', 'p', 's', 'x', 'd', 's', 32, 0,
  /* 9272 */ 'x', 'v', 'c', 'v', 's', 'p', 's', 'x', 'd', 's', 32, 0,
  /* 9284 */ 'x', 's', 'c', 'v', 'd', 'p', 'u', 'x', 'd', 's', 32, 0,
  /* 9296 */ 'x', 'v', 'c', 'v', 'd', 'p', 'u', 'x', 'd', 's', 32, 0,
  /* 9308 */ 'x', 'v', 'c', 'v', 's', 'p', 'u', 'x', 'd', 's', 32, 0,
  /* 9320 */ 'q', 'v', 'f', 'r', 'e', 's', 32, 0,
  /* 9328 */ 'q', 'v', 'f', 'r', 's', 'q', 'r', 't', 'e', 's', 32, 0,
  /* 9340 */ 'e', 'f', 'd', 'c', 'f', 's', 32, 0,
  /* 9348 */ 'm', 'f', 'f', 's', 32, 0,
  /* 9354 */ 'l', 'f', 's', 32, 0,
  /* 9359 */ 'm', 'c', 'r', 'f', 's', 32, 0,
  /* 9366 */ 's', 't', 'f', 's', 32, 0,
  /* 9372 */ 'v', 's', 'u', 'm', '4', 's', 'h', 's', 32, 0,
  /* 9382 */ 'v', 's', 'u', 'b', 's', 'h', 's', 32, 0,
  /* 9391 */ 'v', 'm', 'h', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 9402 */ 'v', 'm', 'h', 'r', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 9414 */ 'v', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 9423 */ 'v', 'm', 's', 'u', 'm', 's', 'h', 's', 32, 0,
  /* 9433 */ 'v', 's', 'u', 'b', 'u', 'h', 's', 32, 0,
  /* 9442 */ 'v', 'a', 'd', 'd', 'u', 'h', 's', 32, 0,
  /* 9451 */ 'v', 'm', 's', 'u', 'm', 'u', 'h', 's', 32, 0,
  /* 9461 */ 's', 'u', 'b', 'i', 's', 32, 0,
  /* 9468 */ 's', 'u', 'b', 'p', 'c', 'i', 's', 32, 0,
  /* 9477 */ 'a', 'd', 'd', 'p', 'c', 'i', 's', 32, 0,
  /* 9486 */ 'a', 'd', 'd', 'i', 's', 32, 0,
  /* 9493 */ 'l', 'i', 's', 32, 0,
  /* 9498 */ 'x', 'o', 'r', 'i', 's', 32, 0,
  /* 9505 */ 'e', 'v', 's', 'r', 'w', 'i', 's', 32, 0,
  /* 9514 */ 'i', 'c', 'b', 't', 'l', 's', 32, 0,
  /* 9522 */ 'q', 'v', 'f', 'm', 'u', 'l', 's', 32, 0,
  /* 9531 */ 'q', 'v', 'f', 'x', 'm', 'u', 'l', 's', 32, 0,
  /* 9541 */ 'e', 'v', 'l', 'w', 'h', 'o', 's', 32, 0,
  /* 9550 */ 'v', 'p', 'k', 's', 'd', 's', 's', 32, 0,
  /* 9559 */ 'v', 'p', 'k', 's', 'h', 's', 's', 32, 0,
  /* 9568 */ 'v', 'p', 'k', 's', 'w', 's', 's', 32, 0,
  /* 9577 */ 'e', 'v', 'c', 'm', 'p', 'g', 't', 's', 32, 0,
  /* 9587 */ 'e', 'v', 'c', 'm', 'p', 'l', 't', 's', 32, 0,
  /* 9597 */ 'f', 's', 'q', 'r', 't', 's', 32, 0,
  /* 9605 */ 'q', 'v', 'f', 'c', 'f', 'i', 'd', 'u', 's', 32, 0,
  /* 9616 */ 'v', 'p', 'k', 's', 'd', 'u', 's', 32, 0,
  /* 9625 */ 'v', 'p', 'k', 'u', 'd', 'u', 's', 32, 0,
  /* 9634 */ 'v', 'p', 'k', 's', 'h', 'u', 's', 32, 0,
  /* 9643 */ 'v', 'p', 'k', 'u', 'h', 'u', 's', 32, 0,
  /* 9652 */ 'v', 'p', 'k', 's', 'w', 'u', 's', 32, 0,
  /* 9661 */ 'v', 'p', 'k', 'u', 'w', 'u', 's', 32, 0,
  /* 9670 */ 'f', 'd', 'i', 'v', 's', 32, 0,
  /* 9677 */ 'e', 'v', 's', 'r', 'w', 's', 32, 0,
  /* 9685 */ 'm', 't', 'v', 's', 'r', 'w', 's', 32, 0,
  /* 9694 */ 'v', 's', 'u', 'm', '2', 's', 'w', 's', 32, 0,
  /* 9704 */ 'v', 's', 'u', 'b', 's', 'w', 's', 32, 0,
  /* 9713 */ 'v', 'a', 'd', 'd', 's', 'w', 's', 32, 0,
  /* 9722 */ 'v', 's', 'u', 'm', 's', 'w', 's', 32, 0,
  /* 9731 */ 'v', 's', 'u', 'b', 'u', 'w', 's', 32, 0,
  /* 9740 */ 'v', 'a', 'd', 'd', 'u', 'w', 's', 32, 0,
  /* 9749 */ 'e', 'v', 'd', 'i', 'v', 'w', 's', 32, 0,
  /* 9758 */ 'x', 's', 'c', 'v', 'd', 'p', 's', 'x', 'w', 's', 32, 0,
  /* 9770 */ 'x', 'v', 'c', 'v', 'd', 'p', 's', 'x', 'w', 's', 32, 0,
  /* 9782 */ 'x', 'v', 'c', 'v', 's', 'p', 's', 'x', 'w', 's', 32, 0,
  /* 9794 */ 'x', 's', 'c', 'v', 'd', 'p', 'u', 'x', 'w', 's', 32, 0,
  /* 9806 */ 'x', 'v', 'c', 'v', 'd', 'p', 'u', 'x', 'w', 's', 32, 0,
  /* 9818 */ 'x', 'v', 'c', 'v', 's', 'p', 'u', 'x', 'w', 's', 32, 0,
  /* 9830 */ 'v', 'c', 't', 's', 'x', 's', 32, 0,
  /* 9838 */ 'v', 'c', 't', 'u', 'x', 's', 32, 0,
  /* 9846 */ 'l', 'd', 'a', 't', 32, 0,
  /* 9852 */ 's', 't', 'd', 'a', 't', 32, 0,
  /* 9859 */ 'e', 'v', 'l', 'h', 'h', 'e', 's', 'p', 'l', 'a', 't', 32, 0,
  /* 9872 */ 'e', 'v', 'l', 'w', 'h', 's', 'p', 'l', 'a', 't', 32, 0,
  /* 9884 */ 'e', 'v', 'l', 'h', 'h', 'o', 's', 's', 'p', 'l', 'a', 't', 32, 0,
  /* 9898 */ 'e', 'v', 'l', 'h', 'h', 'o', 'u', 's', 'p', 'l', 'a', 't', 32, 0,
  /* 9912 */ 'e', 'v', 'l', 'w', 'w', 's', 'p', 'l', 'a', 't', 32, 0,
  /* 9924 */ 'l', 'w', 'a', 't', 32, 0,
  /* 9930 */ 's', 't', 'w', 'a', 't', 32, 0,
  /* 9937 */ 'd', 'c', 'b', 't', 32, 0,
  /* 9943 */ 'i', 'c', 'b', 't', 32, 0,
  /* 9949 */ 'd', 'c', 'b', 't', 'c', 't', 32, 0,
  /* 9957 */ 'd', 'c', 'b', 't', 's', 't', 'c', 't', 32, 0,
  /* 9967 */ 'e', 'f', 'd', 'c', 'm', 'p', 'g', 't', 32, 0,
  /* 9977 */ 'q', 'v', 'f', 'c', 'm', 'p', 'g', 't', 32, 0,
  /* 9987 */ 'e', 'f', 's', 'c', 'm', 'p', 'g', 't', 32, 0,
  /* 9997 */ 'e', 'v', 'f', 's', 'c', 'm', 'p', 'g', 't', 32, 0,
  /* 10008 */ 'e', 'f', 'd', 't', 's', 't', 'g', 't', 32, 0,
  /* 10018 */ 'e', 'f', 's', 't', 's', 't', 'g', 't', 32, 0,
  /* 10028 */ 'e', 'v', 'f', 's', 't', 's', 't', 'g', 't', 32, 0,
  /* 10039 */ 'w', 'a', 'i', 't', 32, 0,
  /* 10045 */ 'e', 'f', 'd', 'c', 'm', 'p', 'l', 't', 32, 0,
  /* 10055 */ 'q', 'v', 'f', 'c', 'm', 'p', 'l', 't', 32, 0,
  /* 10065 */ 'e', 'f', 's', 'c', 'm', 'p', 'l', 't', 32, 0,
  /* 10075 */ 'e', 'v', 'f', 's', 'c', 'm', 'p', 'l', 't', 32, 0,
  /* 10086 */ 'e', 'f', 'd', 't', 's', 't', 'l', 't', 32, 0,
  /* 10096 */ 'e', 'f', 's', 't', 's', 't', 'l', 't', 32, 0,
  /* 10106 */ 'e', 'v', 'f', 's', 't', 's', 't', 'l', 't', 32, 0,
  /* 10117 */ 'f', 's', 'q', 'r', 't', 32, 0,
  /* 10124 */ 'f', 't', 's', 'q', 'r', 't', 32, 0,
  /* 10132 */ 'p', 'a', 's', 't', 'e', '_', 'l', 'a', 's', 't', 32, 0,
  /* 10144 */ 'v', 'n', 'c', 'i', 'p', 'h', 'e', 'r', 'l', 'a', 's', 't', 32, 0,
  /* 10158 */ 'v', 'c', 'i', 'p', 'h', 'e', 'r', 'l', 'a', 's', 't', 32, 0,
  /* 10171 */ 'd', 'c', 'b', 's', 't', 32, 0,
  /* 10178 */ 'd', 's', 't', 32, 0,
  /* 10183 */ 'c', 'o', 'p', 'y', '_', 'f', 'i', 'r', 's', 't', 32, 0,
  /* 10195 */ 'd', 'c', 'b', 't', 's', 't', 32, 0,
  /* 10203 */ 'd', 's', 't', 's', 't', 32, 0,
  /* 10210 */ 'd', 'c', 'b', 't', 't', 32, 0,
  /* 10217 */ 'd', 's', 't', 't', 32, 0,
  /* 10223 */ 'd', 'c', 'b', 't', 's', 't', 't', 32, 0,
  /* 10232 */ 'd', 's', 't', 's', 't', 't', 32, 0,
  /* 10240 */ 'l', 'h', 'a', 'u', 32, 0,
  /* 10246 */ 's', 't', 'b', 'u', 32, 0,
  /* 10252 */ 'l', 'f', 'd', 'u', 32, 0,
  /* 10258 */ 's', 't', 'f', 'd', 'u', 32, 0,
  /* 10265 */ 'm', 'a', 'd', 'd', 'h', 'd', 'u', 32, 0,
  /* 10274 */ 'm', 'u', 'l', 'h', 'd', 'u', 32, 0,
  /* 10282 */ 'q', 'v', 'f', 'c', 'f', 'i', 'd', 'u', 32, 0,
  /* 10292 */ 'q', 'v', 'f', 'c', 't', 'i', 'd', 'u', 32, 0,
  /* 10302 */ 'l', 'd', 'u', 32, 0,
  /* 10307 */ 's', 't', 'd', 'u', 32, 0,
  /* 10313 */ 'd', 'i', 'v', 'd', 'u', 32, 0,
  /* 10320 */ 'd', 'i', 'v', 'd', 'e', 'u', 32, 0,
  /* 10328 */ 'd', 'i', 'v', 'w', 'e', 'u', 32, 0,
  /* 10336 */ 's', 't', 'h', 'u', 32, 0,
  /* 10342 */ 'e', 'v', 's', 'r', 'w', 'i', 'u', 32, 0,
  /* 10351 */ 'e', 'v', 'l', 'w', 'h', 'o', 'u', 32, 0,
  /* 10360 */ 'f', 'c', 'm', 'p', 'u', 32, 0,
  /* 10367 */ 'l', 'f', 's', 'u', 32, 0,
  /* 10373 */ 's', 't', 'f', 's', 'u', 32, 0,
  /* 10380 */ 'e', 'v', 'c', 'm', 'p', 'g', 't', 'u', 32, 0,
  /* 10390 */ 'e', 'v', 'c', 'm', 'p', 'l', 't', 'u', 32, 0,
  /* 10400 */ 'm', 'u', 'l', 'h', 'w', 'u', 32, 0,
  /* 10408 */ 'q', 'v', 'f', 'c', 't', 'i', 'w', 'u', 32, 0,
  /* 10418 */ 'e', 'v', 's', 'r', 'w', 'u', 32, 0,
  /* 10426 */ 's', 't', 'w', 'u', 32, 0,
  /* 10432 */ 'e', 'v', 'd', 'i', 'v', 'w', 'u', 32, 0,
  /* 10441 */ 'l', 'b', 'z', 'u', 32, 0,
  /* 10447 */ 'l', 'h', 'z', 'u', 32, 0,
  /* 10453 */ 'l', 'w', 'z', 'u', 32, 0,
  /* 10459 */ 's', 'l', 'b', 'm', 'f', 'e', 'v', 32, 0,
  /* 10468 */ 'e', 'f', 'd', 'd', 'i', 'v', 32, 0,
  /* 10476 */ 'f', 'd', 'i', 'v', 32, 0,
  /* 10482 */ 'e', 'f', 's', 'd', 'i', 'v', 32, 0,
  /* 10490 */ 'e', 'v', 'f', 's', 'd', 'i', 'v', 32, 0,
  /* 10499 */ 'f', 't', 'd', 'i', 'v', 32, 0,
  /* 10506 */ 'v', 's', 'l', 'v', 32, 0,
  /* 10512 */ 'x', 'x', 'l', 'e', 'q', 'v', 32, 0,
  /* 10520 */ 'c', 'r', 'e', 'q', 'v', 32, 0,
  /* 10527 */ 'e', 'v', 'e', 'q', 'v', 32, 0,
  /* 10534 */ 'v', 's', 'r', 'v', 32, 0,
  /* 10540 */ 'l', 'x', 'v', 32, 0,
  /* 10545 */ 's', 't', 'x', 'v', 32, 0,
  /* 10551 */ 'v', 'e', 'x', 't', 's', 'b', '2', 'w', 32, 0,
  /* 10561 */ 'v', 'e', 'x', 't', 's', 'h', '2', 'w', 32, 0,
  /* 10571 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'f', 'a', 'a', 'w', 32, 0,
  /* 10584 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'f', 'a', 'a', 'w', 32, 0,
  /* 10597 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'f', 'a', 'a', 'w', 32, 0,
  /* 10610 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'f', 'a', 'a', 'w', 32, 0,
  /* 10623 */ 'e', 'v', 'a', 'd', 'd', 's', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 10636 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 10649 */ 'e', 'v', 's', 'u', 'b', 'f', 's', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 10663 */ 'e', 'v', 'm', 'w', 'l', 's', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 10676 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 10689 */ 'e', 'v', 'a', 'd', 'd', 'u', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 10702 */ 'e', 'v', 'm', 'h', 'e', 'u', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 10715 */ 'e', 'v', 's', 'u', 'b', 'f', 'u', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 10729 */ 'e', 'v', 'm', 'w', 'l', 'u', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 10742 */ 'e', 'v', 'm', 'h', 'o', 'u', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 10755 */ 'e', 'v', 'a', 'd', 'd', 's', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 10768 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 10781 */ 'e', 'v', 's', 'u', 'b', 'f', 's', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 10795 */ 'e', 'v', 'm', 'w', 'l', 's', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 10808 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 10821 */ 'e', 'v', 'a', 'd', 'd', 'u', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 10834 */ 'e', 'v', 'm', 'h', 'e', 'u', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 10847 */ 'e', 'v', 's', 'u', 'b', 'f', 'u', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 10861 */ 'e', 'v', 'm', 'w', 'l', 'u', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 10874 */ 'e', 'v', 'm', 'h', 'o', 'u', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 10887 */ 'v', 's', 'h', 'a', 's', 'i', 'g', 'm', 'a', 'w', 32, 0,
  /* 10899 */ 'v', 's', 'r', 'a', 'w', 32, 0,
  /* 10906 */ 'v', 'p', 'r', 't', 'y', 'b', 'w', 32, 0,
  /* 10915 */ 'e', 'v', 'a', 'd', 'd', 'w', 32, 0,
  /* 10923 */ 'e', 'v', 'l', 'd', 'w', 32, 0,
  /* 10930 */ 'e', 'v', 'r', 'n', 'd', 'w', 32, 0,
  /* 10938 */ 'e', 'v', 's', 't', 'd', 'w', 32, 0,
  /* 10946 */ 'v', 'm', 'r', 'g', 'e', 'w', 32, 0,
  /* 10954 */ 'v', 'c', 'm', 'p', 'n', 'e', 'w', 32, 0,
  /* 10963 */ 'e', 'v', 's', 'u', 'b', 'f', 'w', 32, 0,
  /* 10972 */ 'e', 'v', 's', 'u', 'b', 'i', 'f', 'w', 32, 0,
  /* 10982 */ 'v', 'n', 'e', 'g', 'w', 32, 0,
  /* 10989 */ 'v', 'm', 'r', 'g', 'h', 'w', 32, 0,
  /* 10997 */ 'x', 'x', 'm', 'r', 'g', 'h', 'w', 32, 0,
  /* 11006 */ 'm', 'u', 'l', 'h', 'w', 32, 0,
  /* 11013 */ 'e', 'v', 'a', 'd', 'd', 'i', 'w', 32, 0,
  /* 11022 */ 'q', 'v', 'f', 'c', 't', 'i', 'w', 32, 0,
  /* 11031 */ 'v', 'm', 'r', 'g', 'l', 'w', 32, 0,
  /* 11039 */ 'x', 'x', 'm', 'r', 'g', 'l', 'w', 32, 0,
  /* 11048 */ 'm', 'u', 'l', 'l', 'w', 32, 0,
  /* 11055 */ 'c', 'm', 'p', 'l', 'w', 32, 0,
  /* 11062 */ 'e', 'v', 'r', 'l', 'w', 32, 0,
  /* 11069 */ 'e', 'v', 's', 'l', 'w', 32, 0,
  /* 11076 */ 'l', 'm', 'w', 32, 0,
  /* 11081 */ 's', 't', 'm', 'w', 32, 0,
  /* 11087 */ 'v', 'p', 'm', 's', 'u', 'm', 'w', 32, 0,
  /* 11096 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'f', 'a', 'n', 'w', 32, 0,
  /* 11109 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'f', 'a', 'n', 'w', 32, 0,
  /* 11122 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'f', 'a', 'n', 'w', 32, 0,
  /* 11135 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'f', 'a', 'n', 'w', 32, 0,
  /* 11148 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11161 */ 'e', 'v', 'm', 'w', 'l', 's', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11174 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11187 */ 'e', 'v', 'm', 'h', 'e', 'u', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11200 */ 'e', 'v', 'm', 'w', 'l', 'u', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11213 */ 'e', 'v', 'm', 'h', 'o', 'u', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11226 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 11239 */ 'e', 'v', 'm', 'w', 'l', 's', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 11252 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 11265 */ 'e', 'v', 'm', 'h', 'e', 'u', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 11278 */ 'e', 'v', 'm', 'w', 'l', 'u', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 11291 */ 'e', 'v', 'm', 'h', 'o', 'u', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 11304 */ 'v', 'm', 'r', 'g', 'o', 'w', 32, 0,
  /* 11312 */ 'c', 'm', 'p', 'w', 32, 0,
  /* 11318 */ 'x', 'x', 'b', 'r', 'w', 32, 0,
  /* 11325 */ 'v', 's', 'r', 'w', 32, 0,
  /* 11331 */ 'm', 'o', 'd', 's', 'w', 32, 0,
  /* 11338 */ 'v', 'm', 'u', 'l', 'e', 's', 'w', 32, 0,
  /* 11347 */ 'v', 'a', 'v', 'g', 's', 'w', 32, 0,
  /* 11355 */ 'v', 'u', 'p', 'k', 'h', 's', 'w', 32, 0,
  /* 11364 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'w', 32, 0,
  /* 11374 */ 'v', 'u', 'p', 'k', 'l', 's', 'w', 32, 0,
  /* 11383 */ 'e', 'v', 'c', 'n', 't', 'l', 's', 'w', 32, 0,
  /* 11393 */ 'v', 'm', 'i', 'n', 's', 'w', 32, 0,
  /* 11401 */ 'v', 'm', 'u', 'l', 'o', 's', 'w', 32, 0,
  /* 11410 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'w', 32, 0,
  /* 11420 */ 'e', 'x', 't', 's', 'w', 32, 0,
  /* 11427 */ 'v', 'm', 'a', 'x', 's', 'w', 32, 0,
  /* 11435 */ 'v', 's', 'p', 'l', 't', 'w', 32, 0,
  /* 11443 */ 'x', 'x', 's', 'p', 'l', 't', 'w', 32, 0,
  /* 11452 */ 'v', 'p', 'o', 'p', 'c', 'n', 't', 'w', 32, 0,
  /* 11462 */ 'v', 'i', 'n', 's', 'e', 'r', 't', 'w', 32, 0,
  /* 11472 */ 'x', 'x', 'i', 'n', 's', 'e', 'r', 't', 'w', 32, 0,
  /* 11483 */ 's', 't', 'w', 32, 0,
  /* 11488 */ 'v', 's', 'u', 'b', 'c', 'u', 'w', 32, 0,
  /* 11497 */ 'v', 'a', 'd', 'd', 'c', 'u', 'w', 32, 0,
  /* 11506 */ 'm', 'o', 'd', 'u', 'w', 32, 0,
  /* 11513 */ 'v', 'a', 'b', 's', 'd', 'u', 'w', 32, 0,
  /* 11522 */ 'v', 'm', 'u', 'l', 'e', 'u', 'w', 32, 0,
  /* 11531 */ 'v', 'a', 'v', 'g', 'u', 'w', 32, 0,
  /* 11539 */ 'v', 'm', 'i', 'n', 'u', 'w', 32, 0,
  /* 11547 */ 'v', 'm', 'u', 'l', 'o', 'u', 'w', 32, 0,
  /* 11556 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'w', 32, 0,
  /* 11566 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'u', 'w', 32, 0,
  /* 11578 */ 'x', 'x', 'e', 'x', 't', 'r', 'a', 'c', 't', 'u', 'w', 32, 0,
  /* 11591 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'w', 32, 0,
  /* 11601 */ 'v', 'm', 'a', 'x', 'u', 'w', 32, 0,
  /* 11609 */ 'd', 'i', 'v', 'w', 32, 0,
  /* 11615 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'w', 32, 0,
  /* 11625 */ 'v', 'c', 'l', 'z', 'w', 32, 0,
  /* 11632 */ 'e', 'v', 'c', 'n', 't', 'l', 'z', 'w', 32, 0,
  /* 11642 */ 'v', 'c', 't', 'z', 'w', 32, 0,
  /* 11649 */ 'c', 'n', 't', 't', 'z', 'w', 32, 0,
  /* 11657 */ 'l', 'x', 'v', 'd', '2', 'x', 32, 0,
  /* 11665 */ 's', 't', 'x', 'v', 'd', '2', 'x', 32, 0,
  /* 11674 */ 'l', 'x', 'v', 'w', '4', 'x', 32, 0,
  /* 11682 */ 's', 't', 'x', 'v', 'w', '4', 'x', 32, 0,
  /* 11691 */ 'l', 'x', 'v', 'b', '1', '6', 'x', 32, 0,
  /* 11700 */ 's', 't', 'x', 'v', 'b', '1', '6', 'x', 32, 0,
  /* 11710 */ 'l', 'x', 'v', 'h', '8', 'x', 32, 0,
  /* 11718 */ 's', 't', 'x', 'v', 'h', '8', 'x', 32, 0,
  /* 11727 */ 'l', 'h', 'a', 'x', 32, 0,
  /* 11733 */ 't', 'l', 'b', 'i', 'v', 'a', 'x', 32, 0,
  /* 11742 */ 'q', 'v', 'l', 'f', 'i', 'w', 'a', 'x', 32, 0,
  /* 11752 */ 'l', 'x', 's', 'i', 'w', 'a', 'x', 32, 0,
  /* 11761 */ 'l', 'w', 'a', 'x', 32, 0,
  /* 11767 */ 'l', 'v', 'e', 'b', 'x', 32, 0,
  /* 11774 */ 's', 't', 'v', 'e', 'b', 'x', 32, 0,
  /* 11782 */ 's', 't', 'x', 's', 'i', 'b', 'x', 32, 0,
  /* 11791 */ 's', 't', 'b', 'x', 32, 0,
  /* 11797 */ 'q', 'v', 'l', 'f', 'c', 'd', 'x', 32, 0,
  /* 11806 */ 'q', 'v', 's', 't', 'f', 'c', 'd', 'x', 32, 0,
  /* 11816 */ 'e', 'v', 'l', 'd', 'd', 'x', 32, 0,
  /* 11824 */ 'e', 'v', 's', 't', 'd', 'd', 'x', 32, 0,
  /* 11833 */ 'q', 'v', 'l', 'f', 'd', 'x', 32, 0,
  /* 11841 */ 'q', 'v', 's', 't', 'f', 'd', 'x', 32, 0,
  /* 11850 */ 'q', 'v', 'l', 'p', 'c', 'l', 'd', 'x', 32, 0,
  /* 11860 */ 'q', 'v', 'l', 'p', 'c', 'r', 'd', 'x', 32, 0,
  /* 11870 */ 'l', 'x', 's', 'd', 'x', 32, 0,
  /* 11877 */ 's', 't', 'x', 's', 'd', 'x', 32, 0,
  /* 11885 */ 's', 't', 'd', 'x', 32, 0,
  /* 11891 */ 'e', 'v', 'l', 'w', 'h', 'e', 'x', 32, 0,
  /* 11900 */ 'e', 'v', 's', 't', 'w', 'h', 'e', 'x', 32, 0,
  /* 11910 */ 'e', 'v', 's', 't', 'w', 'w', 'e', 'x', 32, 0,
  /* 11920 */ 'e', 'v', 'l', 'd', 'h', 'x', 32, 0,
  /* 11928 */ 'e', 'v', 's', 't', 'd', 'h', 'x', 32, 0,
  /* 11937 */ 'l', 'v', 'e', 'h', 'x', 32, 0,
  /* 11944 */ 's', 't', 'v', 'e', 'h', 'x', 32, 0,
  /* 11952 */ 's', 't', 'x', 's', 'i', 'h', 'x', 32, 0,
  /* 11961 */ 's', 't', 'h', 'x', 32, 0,
  /* 11967 */ 's', 't', 'b', 'c', 'i', 'x', 32, 0,
  /* 11975 */ 'l', 'd', 'c', 'i', 'x', 32, 0,
  /* 11982 */ 's', 't', 'd', 'c', 'i', 'x', 32, 0,
  /* 11990 */ 's', 't', 'h', 'c', 'i', 'x', 32, 0,
  /* 11998 */ 's', 't', 'w', 'c', 'i', 'x', 32, 0,
  /* 12006 */ 'l', 'b', 'z', 'c', 'i', 'x', 32, 0,
  /* 12014 */ 'l', 'h', 'z', 'c', 'i', 'x', 32, 0,
  /* 12022 */ 'l', 'w', 'z', 'c', 'i', 'x', 32, 0,
  /* 12030 */ 'x', 's', 'r', 'q', 'p', 'i', 'x', 32, 0,
  /* 12039 */ 'v', 'e', 'x', 't', 'u', 'b', 'l', 'x', 32, 0,
  /* 12049 */ 'v', 'e', 'x', 't', 'u', 'h', 'l', 'x', 32, 0,
  /* 12059 */ 'v', 'e', 'x', 't', 'u', 'w', 'l', 'x', 32, 0,
  /* 12069 */ 'l', 'd', 'm', 'x', 32, 0,
  /* 12075 */ 'v', 's', 'b', 'o', 'x', 32, 0,
  /* 12082 */ 'e', 'v', 's', 't', 'w', 'h', 'o', 'x', 32, 0,
  /* 12092 */ 'e', 'v', 's', 't', 'w', 'w', 'o', 'x', 32, 0,
  /* 12102 */ 'l', 'b', 'e', 'p', 'x', 32, 0,
  /* 12109 */ 's', 't', 'b', 'e', 'p', 'x', 32, 0,
  /* 12117 */ 'l', 'f', 'd', 'e', 'p', 'x', 32, 0,
  /* 12125 */ 's', 't', 'f', 'd', 'e', 'p', 'x', 32, 0,
  /* 12134 */ 'l', 'h', 'e', 'p', 'x', 32, 0,
  /* 12141 */ 's', 't', 'h', 'e', 'p', 'x', 32, 0,
  /* 12149 */ 'l', 'w', 'e', 'p', 'x', 32, 0,
  /* 12156 */ 's', 't', 'w', 'e', 'p', 'x', 32, 0,
  /* 12164 */ 'v', 'u', 'p', 'k', 'h', 'p', 'x', 32, 0,
  /* 12173 */ 'v', 'p', 'k', 'p', 'x', 32, 0,
  /* 12180 */ 'v', 'u', 'p', 'k', 'l', 'p', 'x', 32, 0,
  /* 12189 */ 'l', 'x', 's', 's', 'p', 'x', 32, 0,
  /* 12197 */ 's', 't', 'x', 's', 's', 'p', 'x', 32, 0,
  /* 12206 */ 'l', 'b', 'a', 'r', 'x', 32, 0,
  /* 12213 */ 'l', 'd', 'a', 'r', 'x', 32, 0,
  /* 12220 */ 'l', 'h', 'a', 'r', 'x', 32, 0,
  /* 12227 */ 'l', 'w', 'a', 'r', 'x', 32, 0,
  /* 12234 */ 'l', 'd', 'b', 'r', 'x', 32, 0,
  /* 12241 */ 's', 't', 'd', 'b', 'r', 'x', 32, 0,
  /* 12249 */ 'l', 'h', 'b', 'r', 'x', 32, 0,
  /* 12256 */ 's', 't', 'h', 'b', 'r', 'x', 32, 0,
  /* 12264 */ 'v', 'e', 'x', 't', 'u', 'b', 'r', 'x', 32, 0,
  /* 12274 */ 'l', 'w', 'b', 'r', 'x', 32, 0,
  /* 12281 */ 's', 't', 'w', 'b', 'r', 'x', 32, 0,
  /* 12289 */ 'v', 'e', 'x', 't', 'u', 'h', 'r', 'x', 32, 0,
  /* 12299 */ 'v', 'e', 'x', 't', 'u', 'w', 'r', 'x', 32, 0,
  /* 12309 */ 'm', 'c', 'r', 'x', 'r', 'x', 32, 0,
  /* 12317 */ 't', 'l', 'b', 's', 'x', 32, 0,
  /* 12324 */ 'q', 'v', 'l', 'f', 'c', 's', 'x', 32, 0,
  /* 12333 */ 'q', 'v', 's', 't', 'f', 'c', 's', 'x', 32, 0,
  /* 12343 */ 'l', 'x', 'v', 'd', 's', 'x', 32, 0,
  /* 12351 */ 'v', 'c', 'f', 's', 'x', 32, 0,
  /* 12358 */ 'q', 'v', 'l', 'f', 's', 'x', 32, 0,
  /* 12366 */ 'q', 'v', 's', 't', 'f', 's', 'x', 32, 0,
  /* 12375 */ 'q', 'v', 'l', 'p', 'c', 'l', 's', 'x', 32, 0,
  /* 12385 */ 'e', 'v', 'l', 'w', 'h', 'o', 's', 'x', 32, 0,
  /* 12395 */ 'q', 'v', 'l', 'p', 'c', 'r', 's', 'x', 32, 0,
  /* 12405 */ 'l', 'x', 'v', 'w', 's', 'x', 32, 0,
  /* 12413 */ 'e', 'v', 'l', 'h', 'h', 'e', 's', 'p', 'l', 'a', 't', 'x', 32, 0,
  /* 12427 */ 'e', 'v', 'l', 'w', 'h', 's', 'p', 'l', 'a', 't', 'x', 32, 0,
  /* 12440 */ 'e', 'v', 'l', 'h', 'h', 'o', 's', 's', 'p', 'l', 'a', 't', 'x', 32, 0,
  /* 12455 */ 'e', 'v', 'l', 'h', 'h', 'o', 'u', 's', 'p', 'l', 'a', 't', 'x', 32, 0,
  /* 12470 */ 'e', 'v', 'l', 'w', 'w', 's', 'p', 'l', 'a', 't', 'x', 32, 0,
  /* 12483 */ 'l', 'h', 'a', 'u', 'x', 32, 0,
  /* 12490 */ 'l', 'w', 'a', 'u', 'x', 32, 0,
  /* 12497 */ 's', 't', 'b', 'u', 'x', 32, 0,
  /* 12504 */ 'q', 'v', 'l', 'f', 'c', 'd', 'u', 'x', 32, 0,
  /* 12514 */ 'q', 'v', 's', 't', 'f', 'c', 'd', 'u', 'x', 32, 0,
  /* 12525 */ 'q', 'v', 'l', 'f', 'd', 'u', 'x', 32, 0,
  /* 12534 */ 'q', 'v', 's', 't', 'f', 'd', 'u', 'x', 32, 0,
  /* 12544 */ 'l', 'd', 'u', 'x', 32, 0,
  /* 12550 */ 's', 't', 'd', 'u', 'x', 32, 0,
  /* 12557 */ 'v', 'c', 'f', 'u', 'x', 32, 0,
  /* 12564 */ 's', 't', 'h', 'u', 'x', 32, 0,
  /* 12571 */ 'e', 'v', 'l', 'w', 'h', 'o', 'u', 'x', 32, 0,
  /* 12581 */ 'q', 'v', 'l', 'f', 'c', 's', 'u', 'x', 32, 0,
  /* 12591 */ 'q', 'v', 's', 't', 'f', 'c', 's', 'u', 'x', 32, 0,
  /* 12602 */ 'q', 'v', 'l', 'f', 's', 'u', 'x', 32, 0,
  /* 12611 */ 'q', 'v', 's', 't', 'f', 's', 'u', 'x', 32, 0,
  /* 12621 */ 's', 't', 'w', 'u', 'x', 32, 0,
  /* 12628 */ 'l', 'b', 'z', 'u', 'x', 32, 0,
  /* 12635 */ 'l', 'h', 'z', 'u', 'x', 32, 0,
  /* 12642 */ 'l', 'w', 'z', 'u', 'x', 32, 0,
  /* 12649 */ 'l', 'v', 'x', 32, 0,
  /* 12654 */ 's', 't', 'v', 'x', 32, 0,
  /* 12660 */ 'l', 'x', 'v', 'x', 32, 0,
  /* 12666 */ 's', 't', 'x', 'v', 'x', 32, 0,
  /* 12673 */ 'e', 'v', 'l', 'd', 'w', 'x', 32, 0,
  /* 12681 */ 'e', 'v', 's', 't', 'd', 'w', 'x', 32, 0,
  /* 12690 */ 'l', 'v', 'e', 'w', 'x', 32, 0,
  /* 12697 */ 's', 't', 'v', 'e', 'w', 'x', 32, 0,
  /* 12705 */ 'q', 'v', 's', 't', 'f', 'i', 'w', 'x', 32, 0,
  /* 12715 */ 's', 't', 'x', 's', 'i', 'w', 'x', 32, 0,
  /* 12724 */ 's', 't', 'w', 'x', 32, 0,
  /* 12730 */ 'l', 'x', 's', 'i', 'b', 'z', 'x', 32, 0,
  /* 12739 */ 'l', 'b', 'z', 'x', 32, 0,
  /* 12745 */ 'l', 'x', 's', 'i', 'h', 'z', 'x', 32, 0,
  /* 12754 */ 'l', 'h', 'z', 'x', 32, 0,
  /* 12760 */ 'q', 'v', 'l', 'f', 'i', 'w', 'z', 'x', 32, 0,
  /* 12770 */ 'l', 'x', 's', 'i', 'w', 'z', 'x', 32, 0,
  /* 12779 */ 'l', 'w', 'z', 'x', 32, 0,
  /* 12785 */ 'c', 'o', 'p', 'y', 32, 0,
  /* 12791 */ 'd', 'c', 'b', 'z', 32, 0,
  /* 12797 */ 'l', 'b', 'z', 32, 0,
  /* 12802 */ 'b', 'd', 'z', 32, 0,
  /* 12807 */ 'e', 'f', 'd', 'c', 't', 's', 'i', 'd', 'z', 32, 0,
  /* 12818 */ 'q', 'v', 'f', 'c', 't', 'i', 'd', 'z', 32, 0,
  /* 12828 */ 'e', 'f', 'd', 'c', 't', 'u', 'i', 'd', 'z', 32, 0,
  /* 12839 */ 'x', 's', 'c', 'v', 'q', 'p', 's', 'd', 'z', 32, 0,
  /* 12850 */ 'x', 's', 'c', 'v', 'q', 'p', 'u', 'd', 'z', 32, 0,
  /* 12861 */ 'l', 'h', 'z', 32, 0,
  /* 12866 */ 'v', 'r', 'f', 'i', 'z', 32, 0,
  /* 12873 */ 'x', 's', 'r', 'd', 'p', 'i', 'z', 32, 0,
  /* 12882 */ 'x', 'v', 'r', 'd', 'p', 'i', 'z', 32, 0,
  /* 12891 */ 'x', 'v', 'r', 's', 'p', 'i', 'z', 32, 0,
  /* 12900 */ 'q', 'v', 'f', 'r', 'i', 'z', 32, 0,
  /* 12908 */ 'e', 'f', 'd', 'c', 't', 's', 'i', 'z', 32, 0,
  /* 12918 */ 'e', 'f', 's', 'c', 't', 's', 'i', 'z', 32, 0,
  /* 12928 */ 'e', 'v', 'f', 's', 'c', 't', 's', 'i', 'z', 32, 0,
  /* 12939 */ 'e', 'f', 'd', 'c', 't', 'u', 'i', 'z', 32, 0,
  /* 12949 */ 'e', 'f', 's', 'c', 't', 'u', 'i', 'z', 32, 0,
  /* 12959 */ 'b', 'd', 'n', 'z', 32, 0,
  /* 12965 */ 'q', 'v', 'f', 'c', 't', 'i', 'd', 'u', 'z', 32, 0,
  /* 12976 */ 'q', 'v', 'f', 'c', 't', 'i', 'w', 'u', 'z', 32, 0,
  /* 12987 */ 'q', 'v', 'f', 'c', 't', 'i', 'w', 'z', 32, 0,
  /* 12997 */ 'l', 'w', 'z', 32, 0,
  /* 13002 */ 'm', 'f', 'v', 's', 'r', 'w', 'z', 32, 0,
  /* 13011 */ 'm', 't', 'v', 's', 'r', 'w', 'z', 32, 0,
  /* 13020 */ 'x', 's', 'c', 'v', 'q', 'p', 's', 'w', 'z', 32, 0,
  /* 13031 */ 'x', 's', 'c', 'v', 'q', 'p', 'u', 'w', 'z', 32, 0,
  /* 13042 */ 'b', 'd', 'z', 'l', 'r', 'l', '+', 0,
  /* 13050 */ 'b', 'd', 'n', 'z', 'l', 'r', 'l', '+', 0,
  /* 13059 */ 'b', 'd', 'z', 'l', 'r', '+', 0,
  /* 13066 */ 'b', 'd', 'n', 'z', 'l', 'r', '+', 0,
  /* 13074 */ 'e', 'v', 's', 'e', 'l', 32, 'c', 'r', 'D', ',', 0,
  /* 13085 */ 'b', 'd', 'z', 'l', 'r', 'l', '-', 0,
  /* 13093 */ 'b', 'd', 'n', 'z', 'l', 'r', 'l', '-', 0,
  /* 13102 */ 'b', 'd', 'z', 'l', 'r', '-', 0,
  /* 13109 */ 'b', 'd', 'n', 'z', 'l', 'r', '-', 0,
  /* 13117 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'P', 'a', 't', 'c', 'h', 'a', 'b', 'l', 'e', 32, 'R', 'E', 'T', '.', 0,
  /* 13148 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'y', 'p', 'e', 'd', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 13172 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'C', 'u', 's', 't', 'o', 'm', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 13197 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'n', 't', 'e', 'r', '.', 0,
  /* 13220 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'a', 'i', 'l', 32, 'C', 'a', 'l', 'l', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 13243 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 13265 */ 't', 'r', 'e', 'c', 'h', 'k', 'p', 't', '.', 0,
  /* 13275 */ 'o', 'r', 'i', 32, '1', ',', 32, '1', ',', 32, '0', 0,
  /* 13287 */ 'o', 'r', 'i', 32, '2', ',', 32, '2', ',', 32, '0', 0,
  /* 13299 */ '#', 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', '3', '2', 0,
  /* 13316 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 13337 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 13358 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 13380 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 13401 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 13423 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 13444 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 13461 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 13482 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 13502 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 13524 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 13545 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', '3', '2', 0,
  /* 13559 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', '3', '2', 0,
  /* 13573 */ '#', 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 13588 */ '#', 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 13603 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 0,
  /* 13622 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 0,
  /* 13640 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 13658 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 13676 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 13691 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 13704 */ '#', 'D', 'F', 'L', 'O', 'A', 'D', 'f', '3', '2', 0,
  /* 13715 */ '#', 'X', 'F', 'L', 'O', 'A', 'D', 'f', '3', '2', 0,
  /* 13726 */ '#', 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '3', '2', 0,
  /* 13738 */ '#', 'X', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '3', '2', 0,
  /* 13750 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 13771 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 13792 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 13814 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 13836 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 13857 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 13874 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 13895 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 13916 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 13936 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 13958 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 13979 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '6', '4', 0,
  /* 13998 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '6', '4', 0,
  /* 14016 */ '#', 'D', 'F', 'L', 'O', 'A', 'D', 'f', '6', '4', 0,
  /* 14027 */ '#', 'X', 'F', 'L', 'O', 'A', 'D', 'f', '6', '4', 0,
  /* 14038 */ '#', 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '6', '4', 0,
  /* 14050 */ '#', 'X', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '6', '4', 0,
  /* 14062 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'i', '6', '4', 0,
  /* 14083 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'S', 'P', 'E', '4', 0,
  /* 14099 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'S', 'P', 'E', '4', 0,
  /* 14112 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '4', 0,
  /* 14126 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '4', 0,
  /* 14137 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '4', 0,
  /* 14151 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '4', 0,
  /* 14162 */ 'c', 'r', 'x', 'o', 'r', 32, '6', ',', 32, '6', ',', 32, '6', 0,
  /* 14176 */ 'c', 'r', 'e', 'q', 'v', 32, '6', ',', 32, '6', ',', 32, '6', 0,
  /* 14190 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '1', '6', 0,
  /* 14205 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '1', '6', 0,
  /* 14217 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 14238 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 14259 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 14281 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 14302 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 14324 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 14345 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 14362 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 14383 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 14403 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 14425 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 14446 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', '8', 0,
  /* 14459 */ '#', 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', '8', 0,
  /* 14470 */ '#', 'C', 'F', 'E', 'N', 'C', 'E', '8', 0,
  /* 14479 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '8', 0,
  /* 14493 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '8', 0,
  /* 14504 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 14524 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '8', 0,
  /* 14538 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 14558 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 14579 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 14599 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 14620 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 14640 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 14660 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 14679 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 14698 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '8', 0,
  /* 14709 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 14730 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 14750 */ '#', 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', '8', 0,
  /* 14763 */ '#', 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', '8', 0,
  /* 14779 */ '#', 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', '8', 0,
  /* 14799 */ '#', 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', '8', 0,
  /* 14819 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'i', '8', 0,
  /* 14835 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', 0,
  /* 14847 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'g', 'd', 'H', 'A', 0,
  /* 14861 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'l', 'd', 'H', 'A', 0,
  /* 14875 */ '#', 'A', 'D', 'D', 'I', 'S', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 14892 */ '#', 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 14907 */ '#', 'R', 'e', 'a', 'd', 'T', 'B', 0,
  /* 14915 */ '#', 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 14925 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'B', 'R', 'C', 0,
  /* 14941 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'B', 'R', 'C', 0,
  /* 14954 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'R', 'C', 0,
  /* 14970 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'F', 'R', 'C', 0,
  /* 14983 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 15000 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 15014 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'R', 'R', 'C', 0,
  /* 15030 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'R', 'R', 'C', 0,
  /* 15043 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'S', 'R', 'C', 0,
  /* 15059 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'S', 'R', 'C', 0,
  /* 15072 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 15089 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 15103 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'R', 'C', 0,
  /* 15119 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'R', 'C', 0,
  /* 15132 */ '#', 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'L', 'D', 0,
  /* 15147 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 15160 */ '#', 'S', 'E', 'T', 'R', 'N', 'D', 0,
  /* 15168 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 15175 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'S', 'P', 'E', 0,
  /* 15190 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'S', 'P', 'E', 0,
  /* 15202 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 15212 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 15228 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 15242 */ '#', 'L', 'D', 't', 'o', 'c', 'J', 'T', 'I', 0,
  /* 15252 */ 'D', 'B', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 15262 */ '#', 'L', 'D', 't', 'o', 'c', 'L', 0,
  /* 15270 */ '#', 'A', 'D', 'D', 'I', 't', 'o', 'c', 'L', 0,
  /* 15280 */ '#', 'L', 'W', 'Z', 't', 'o', 'c', 'L', 0,
  /* 15289 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 0,
  /* 15301 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 0,
  /* 15313 */ '#', 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', 0,
  /* 15326 */ '#', 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', 0,
  /* 15339 */ '#', 'U', 'N', 'E', 'N', 'C', 'O', 'D', 'E', 'D', '_', 'N', 'O', 'P', 0,
  /* 15354 */ '#', 'U', 'p', 'd', 'a', 't', 'e', 'G', 'B', 'R', 0,
  /* 15365 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 0,
  /* 15377 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 0,
  /* 15387 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 15403 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 15419 */ '#', 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 0,
  /* 15433 */ '#', 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 0,
  /* 15445 */ '#', 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', 0,
  /* 15457 */ '#', 'M', 'o', 'v', 'e', 'G', 'O', 'T', 't', 'o', 'L', 'R', 0,
  /* 15470 */ '#', 'T', 'C', 'H', 'E', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 15482 */ '#', 'T', 'B', 'E', 'G', 'I', 'N', '_', 'R', 'E', 'T', 0,
  /* 15494 */ '#', 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', 0,
  /* 15509 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 15524 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 15537 */ '#', 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', 0,
  /* 15556 */ '#', 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', 0,
  /* 15575 */ '#', 'P', 'P', 'C', '3', '2', 'G', 'O', 'T', 0,
  /* 15585 */ '#', 'P', 'P', 'C', '3', '2', 'P', 'I', 'C', 'G', 'O', 'T', 0,
  /* 15598 */ '#', 'L', 'D', 't', 'o', 'c', 'C', 'P', 'T', 0,
  /* 15608 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 15623 */ '#', 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'S', 'T', 0,
  /* 15638 */ '#', 'L', 'I', 'W', 'A', 'X', 0,
  /* 15645 */ '#', 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'L', 'D', 'X', 0,
  /* 15661 */ '#', 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'S', 'T', 'X', 0,
  /* 15677 */ '#', 'S', 'T', 'I', 'W', 'X', 0,
  /* 15684 */ '#', 'L', 'I', 'W', 'Z', 'X', 0,
  /* 15691 */ 'b', 'c', 'a', 0,
  /* 15695 */ 's', 'l', 'b', 'i', 'a', 0,
  /* 15701 */ 't', 'l', 'b', 'i', 'a', 0,
  /* 15707 */ 'b', 'c', 'l', 'a', 0,
  /* 15712 */ 'c', 'l', 'r', 'b', 'h', 'r', 'b', 0,
  /* 15720 */ 'b', 'c', 0,
  /* 15723 */ 's', 'l', 'b', 's', 'y', 'n', 'c', 0,
  /* 15731 */ 't', 'l', 'b', 's', 'y', 'n', 'c', 0,
  /* 15739 */ 'm', 's', 'g', 's', 'y', 'n', 'c', 0,
  /* 15747 */ 'i', 's', 'y', 'n', 'c', 0,
  /* 15753 */ 'm', 's', 'y', 'n', 'c', 0,
  /* 15759 */ '#', 'L', 'D', 't', 'o', 'c', 0,
  /* 15766 */ '#', 'L', 'W', 'Z', 't', 'o', 'c', 0,
  /* 15774 */ 'h', 'r', 'f', 'i', 'd', 0,
  /* 15780 */ 't', 'l', 'b', 'r', 'e', 0,
  /* 15786 */ 't', 'l', 'b', 'w', 'e', 0,
  /* 15792 */ '#', 'S', 'E', 'T', 'R', 'N', 'D', 'i', 0,
  /* 15801 */ 'r', 'f', 'c', 'i', 0,
  /* 15806 */ 'r', 'f', 'm', 'c', 'i', 0,
  /* 15812 */ 'r', 'f', 'd', 'i', 0,
  /* 15817 */ 'r', 'f', 'i', 0,
  /* 15821 */ 'b', 'c', 'l', 0,
  /* 15825 */ '#', 32, 'F', 'E', 'n', 't', 'r', 'y', 32, 'c', 'a', 'l', 'l', 0,
  /* 15839 */ 'd', 's', 's', 'a', 'l', 'l', 0,
  /* 15846 */ 'b', 'l', 'r', 'l', 0,
  /* 15851 */ 'b', 'd', 'z', 'l', 'r', 'l', 0,
  /* 15858 */ 'b', 'd', 'n', 'z', 'l', 'r', 'l', 0,
  /* 15866 */ 'b', 'c', 't', 'r', 'l', 0,
  /* 15872 */ 'a', 't', 't', 'n', 0,
  /* 15877 */ 'e', 'i', 'e', 'i', 'o', 0,
  /* 15883 */ 'n', 'a', 'p', 0,
  /* 15887 */ 't', 'r', 'a', 'p', 0,
  /* 15892 */ 'n', 'o', 'p', 0,
  /* 15896 */ 's', 't', 'o', 'p', 0,
  /* 15901 */ 'b', 'l', 'r', 0,
  /* 15905 */ 'b', 'd', 'z', 'l', 'r', 0,
  /* 15911 */ 'b', 'd', 'n', 'z', 'l', 'r', 0,
  /* 15918 */ 'b', 'c', 't', 'r', 0,
  /* 15923 */ 'c', 'p', '_', 'a', 'b', 'o', 'r', 't', 0,
  };

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    15203U,	// DBG_VALUE
    15253U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    15169U,	// BUNDLE
    15609U,	// LIFETIME_START
    15148U,	// LIFETIME_END
    0U,	// STACKMAP
    15826U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    13198U,	// PATCHABLE_FUNCTION_ENTER
    13118U,	// PATCHABLE_RET
    13244U,	// PATCHABLE_FUNCTION_EXIT
    13221U,	// PATCHABLE_TAIL_CALL
    13173U,	// PATCHABLE_EVENT_CALL
    13149U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTR_MASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    14471U,	// CFENCE8
    21250U,	// CLRLSLDI
    17235U,	// CLRLSLDI_rec
    21759U,	// CLRLSLWI
    17344U,	// CLRLSLWI_rec
    21285U,	// CLRRDI
    17262U,	// CLRRDI_rec
    21800U,	// CLRRWI
    17373U,	// CLRRWI_rec
    536897480U,	// CP_COPY_FIRST
    536900082U,	// CP_COPYx
    536897429U,	// CP_PASTE_LAST
    536891470U,	// CP_PASTEx
    562689U,	// DCBFL
    564707U,	// DCBFLP
    561275U,	// DCBFx
    553690846U,	// DCBTCT
    553690127U,	// DCBTDS
    553690854U,	// DCBTSTCT
    553690135U,	// DCBTSTDS
    567280U,	// DCBTSTT
    567252U,	// DCBTSTx
    567267U,	// DCBTT
    566994U,	// DCBTx
    13705U,	// DFLOADf32
    14017U,	// DFLOADf64
    13727U,	// DFSTOREf32
    14039U,	// DFSTOREf64
    21260U,	// EXTLDI
    17246U,	// EXTLDI_rec
    21785U,	// EXTLWI
    17364U,	// EXTLWI_rec
    21309U,	// EXTRDI
    17289U,	// EXTRDI_rec
    21824U,	// EXTRWI
    17400U,	// EXTRWI_rec
    21769U,	// INSLWI
    17355U,	// INSLWI_rec
    21293U,	// INSRDI
    17271U,	// INSRDI_rec
    21808U,	// INSRWI
    17382U,	// INSRWI_rec
    33573450U,	// LAx
    15639U,	// LIWAX
    15685U,	// LIWZX
    21413U,	// RLWIMIbm
    17327U,	// RLWIMIbm_rec
    22310U,	// RLWINMbm
    17458U,	// RLWINMbm_rec
    22319U,	// RLWNMbm
    17467U,	// RLWNMbm_rec
    21301U,	// ROTRDI
    17280U,	// ROTRDI_rec
    21816U,	// ROTRWI
    17391U,	// ROTRWI_rec
    21254U,	// SLDI
    17239U,	// SLDI_rec
    21763U,	// SLWI
    17348U,	// SLWI_rec
    15133U,	// SPILLTOVSR_LD
    15646U,	// SPILLTOVSR_LDX
    15624U,	// SPILLTOVSR_ST
    15662U,	// SPILLTOVSR_STX
    21295U,	// SRDI
    17273U,	// SRDI_rec
    21810U,	// SRWI
    17384U,	// SRWI_rec
    15678U,	// STIWX
    21201U,	// SUBI
    19730U,	// SUBIC
    16810U,	// SUBIC_rec
    25846U,	// SUBIS
    50357501U,	// SUBPCIS
    13716U,	// XFLOADf32
    14028U,	// XFLOADf64
    13739U,	// XFSTOREf32
    14051U,	// XFSTOREf64
    19913U,	// ADD4
    22678U,	// ADD4O
    17558U,	// ADD4O_rec
    19913U,	// ADD4TLS
    16882U,	// ADD4_rec
    19913U,	// ADD8
    22678U,	// ADD8O
    17558U,	// ADD8O_rec
    19913U,	// ADD8TLS
    19913U,	// ADD8TLS_
    16882U,	// ADD8_rec
    19692U,	// ADDC
    19692U,	// ADDC8
    22663U,	// ADDC8O
    17541U,	// ADDC8O_rec
    16777U,	// ADDC8_rec
    22663U,	// ADDCO
    17541U,	// ADDCO_rec
    16777U,	// ADDC_rec
    20443U,	// ADDE
    20443U,	// ADDE8
    22699U,	// ADDE8O
    17582U,	// ADDE8O_rec
    17021U,	// ADDE8_rec
    22699U,	// ADDEO
    17582U,	// ADDEO_rec
    17021U,	// ADDE_rec
    21236U,	// ADDI
    21236U,	// ADDI8
    19737U,	// ADDIC
    19737U,	// ADDIC8
    16818U,	// ADDIC_rec
    25871U,	// ADDIS
    25871U,	// ADDIS8
    14893U,	// ADDISdtprelHA
    13300U,	// ADDISdtprelHA32
    14876U,	// ADDISgotTprelHA
    14848U,	// ADDIStlsgdHA
    14862U,	// ADDIStlsldHA
    14836U,	// ADDIStocHA
    14447U,	// ADDIStocHA8
    15327U,	// ADDIdtprelL
    13589U,	// ADDIdtprelL32
    15290U,	// ADDItlsgdL
    13546U,	// ADDItlsgdL32
    15388U,	// ADDItlsgdLADDR
    13641U,	// ADDItlsgdLADDR32
    15302U,	// ADDItlsldL
    13560U,	// ADDItlsldL32
    15404U,	// ADDItlsldLADDR
    13659U,	// ADDItlsldLADDR32
    15271U,	// ADDItocL
    536891422U,	// ADDME
    536891422U,	// ADDME8
    536893634U,	// ADDME8O
    536888520U,	// ADDME8O_rec
    536887965U,	// ADDME8_rec
    536893634U,	// ADDMEO
    536888520U,	// ADDMEO_rec
    536887965U,	// ADDME_rec
    536896774U,	// ADDPCIS
    536891500U,	// ADDZE
    536891500U,	// ADDZE8
    536893659U,	// ADDZE8O
    536888548U,	// ADDZE8O_rec
    536888014U,	// ADDZE8_rec
    536893659U,	// ADDZEO
    536888548U,	// ADDZEO_rec
    536888014U,	// ADDZE_rec
    51319U,	// ADJCALLSTACKDOWN
    51338U,	// ADJCALLSTACKUP
    20184U,	// AND
    20184U,	// AND8
    16944U,	// AND8_rec
    19701U,	// ANDC
    19701U,	// ANDC8
    16784U,	// ANDC8_rec
    16784U,	// ANDC_rec
    17255U,	// ANDI8_rec
    18041U,	// ANDIS8_rec
    18041U,	// ANDIS_rec
    17255U,	// ANDI_rec
    15538U,	// ANDI_rec_1_EQ_BIT
    14780U,	// ANDI_rec_1_EQ_BIT8
    15557U,	// ANDI_rec_1_GT_BIT
    14800U,	// ANDI_rec_1_GT_BIT8
    16944U,	// AND_rec
    1141917736U,	// ATOMIC_CMP_SWAP_I16
    1141917714U,	// ATOMIC_CMP_SWAP_I32
    13875U,	// ATOMIC_CMP_SWAP_I64
    14641U,	// ATOMIC_CMP_SWAP_I8
    14239U,	// ATOMIC_LOAD_ADD_I16
    13338U,	// ATOMIC_LOAD_ADD_I32
    13772U,	// ATOMIC_LOAD_ADD_I64
    14539U,	// ATOMIC_LOAD_ADD_I8
    14282U,	// ATOMIC_LOAD_AND_I16
    13381U,	// ATOMIC_LOAD_AND_I32
    14063U,	// ATOMIC_LOAD_AND_I64
    14580U,	// ATOMIC_LOAD_AND_I8
    14426U,	// ATOMIC_LOAD_MAX_I16
    13525U,	// ATOMIC_LOAD_MAX_I32
    13959U,	// ATOMIC_LOAD_MAX_I64
    14731U,	// ATOMIC_LOAD_MAX_I8
    14325U,	// ATOMIC_LOAD_MIN_I16
    13424U,	// ATOMIC_LOAD_MIN_I32
    13837U,	// ATOMIC_LOAD_MIN_I64
    14621U,	// ATOMIC_LOAD_MIN_I8
    14260U,	// ATOMIC_LOAD_NAND_I16
    13359U,	// ATOMIC_LOAD_NAND_I32
    13793U,	// ATOMIC_LOAD_NAND_I64
    14559U,	// ATOMIC_LOAD_NAND_I8
    14384U,	// ATOMIC_LOAD_OR_I16
    13483U,	// ATOMIC_LOAD_OR_I32
    13917U,	// ATOMIC_LOAD_OR_I64
    14680U,	// ATOMIC_LOAD_OR_I8
    14218U,	// ATOMIC_LOAD_SUB_I16
    13317U,	// ATOMIC_LOAD_SUB_I32
    13751U,	// ATOMIC_LOAD_SUB_I64
    14505U,	// ATOMIC_LOAD_SUB_I8
    14404U,	// ATOMIC_LOAD_UMAX_I16
    13503U,	// ATOMIC_LOAD_UMAX_I32
    13937U,	// ATOMIC_LOAD_UMAX_I64
    14710U,	// ATOMIC_LOAD_UMAX_I8
    14303U,	// ATOMIC_LOAD_UMIN_I16
    13402U,	// ATOMIC_LOAD_UMIN_I32
    13815U,	// ATOMIC_LOAD_UMIN_I64
    14600U,	// ATOMIC_LOAD_UMIN_I8
    14363U,	// ATOMIC_LOAD_XOR_I16
    13462U,	// ATOMIC_LOAD_XOR_I32
    13896U,	// ATOMIC_LOAD_XOR_I64
    14661U,	// ATOMIC_LOAD_XOR_I8
    14346U,	// ATOMIC_SWAP_I16
    13445U,	// ATOMIC_SWAP_I32
    13858U,	// ATOMIC_SWAP_I64
    14820U,	// ATOMIC_SWAP_I8
    15873U,	// ATTN
    592722U,	// B
    608548U,	// BA
    83902583U,	// BC
    1686887U,	// BCC
    2211175U,	// BCCA
    2735463U,	// BCCCTR
    2735463U,	// BCCCTR8
    3259751U,	// BCCCTRL
    3259751U,	// BCCCTRL8
    3784039U,	// BCCL
    4308327U,	// BCCLA
    4832615U,	// BCCLR
    5356903U,	// BCCLRL
    5783721U,	// BCCTR
    5783721U,	// BCCTR8
    5783777U,	// BCCTR8n
    5783699U,	// BCCTRL
    5783699U,	// BCCTRL8
    5783757U,	// BCCTRL8n
    5783757U,	// BCCTRLn
    5783777U,	// BCCTRn
    17475U,	// BCDCFN_rec
    17862U,	// BCDCFSQ_rec
    18380U,	// BCDCFZ_rec
    17484U,	// BCDCPSGN_rec
    536888444U,	// BCDCTN_rec
    536888784U,	// BCDCTSQ_rec
    18396U,	// BCDCTZ_rec
    17504U,	// BCDSETSGN_rec
    17917U,	// BCDSR_rec
    17973U,	// BCDS_rec
    16834U,	// BCDTRUNC_rec
    18066U,	// BCDUS_rec
    16845U,	// BCDUTRUNC_rec
    83902591U,	// BCL
    5783711U,	// BCLR
    5783688U,	// BCLRL
    5783747U,	// BCLRLn
    5783768U,	// BCLRn
    589901U,	// BCLalways
    83902651U,	// BCLn
    15919U,	// BCTR
    15919U,	// BCTR8
    15867U,	// BCTRL
    15867U,	// BCTRL8
    114778U,	// BCTRL8_LDinto_toc
    114792U,	// BCTRL_LWZinto_toc
    83902644U,	// BCn
    602784U,	// BDNZ
    602784U,	// BDNZ8
    609095U,	// BDNZA
    606479U,	// BDNZAm
    606249U,	// BDNZAp
    595588U,	// BDNZL
    608859U,	// BDNZLA
    606463U,	// BDNZLAm
    606233U,	// BDNZLAp
    15912U,	// BDNZLR
    15912U,	// BDNZLR8
    15859U,	// BDNZLRL
    13094U,	// BDNZLRLm
    13051U,	// BDNZLRLp
    13110U,	// BDNZLRm
    13067U,	// BDNZLRp
    590110U,	// BDNZLm
    589880U,	// BDNZLp
    590124U,	// BDNZm
    589894U,	// BDNZp
    602627U,	// BDZ
    602627U,	// BDZ8
    609089U,	// BDZA
    606472U,	// BDZAm
    606242U,	// BDZAp
    595582U,	// BDZL
    608852U,	// BDZLA
    606455U,	// BDZLAm
    606225U,	// BDZLAp
    15906U,	// BDZLR
    15906U,	// BDZLR8
    15852U,	// BDZLRL
    13086U,	// BDZLRLm
    13043U,	// BDZLRLp
    13103U,	// BDZLRm
    13060U,	// BDZLRp
    590103U,	// BDZLm
    589873U,	// BDZLp
    590118U,	// BDZm
    589888U,	// BDZp
    595398U,	// BL
    595398U,	// BL8
    6362566U,	// BL8_NOP
    6428102U,	// BL8_NOP_TLS
    660934U,	// BL8_TLS
    660934U,	// BL8_TLS_
    608841U,	// BLA
    608841U,	// BLA8
    6376009U,	// BLA8_NOP
    15902U,	// BLR
    15902U,	// BLR8
    15847U,	// BLRL
    6362566U,	// BL_NOP
    660934U,	// BL_TLS
    20164U,	// BPERMD
    19793U,	// BRINC
    15713U,	// CLRBHRB
    19368U,	// CMPB
    19368U,	// CMPB8
    20228U,	// CMPD
    21278U,	// CMPDI
    19374U,	// CMPEQB
    20135U,	// CMPLD
    21242U,	// CMPLDI
    27440U,	// CMPLW
    21743U,	// CMPLWI
    100682678U,	// CMPRB
    100682678U,	// CMPRB8
    27697U,	// CMPW
    21793U,	// CMPWI
    536891315U,	// CNTLZD
    536887915U,	// CNTLZD_rec
    536898931U,	// CNTLZW
    536898931U,	// CNTLZW8
    536889225U,	// CNTLZW8_rec
    536889225U,	// CNTLZW_rec
    536891330U,	// CNTTZD
    536887924U,	// CNTTZD_rec
    536898946U,	// CNTTZW
    536898946U,	// CNTTZW8
    536889234U,	// CNTTZW8_rec
    536889234U,	// CNTTZW_rec
    15924U,	// CP_ABORT
    29170U,	// CP_COPY
    29170U,	// CP_COPY8
    20558U,	// CP_PASTE
    20558U,	// CP_PASTE8
    17086U,	// CP_PASTE8_rec
    17086U,	// CP_PASTE_rec
    14177U,	// CR6SET
    14163U,	// CR6UNSET
    20214U,	// CRAND
    19707U,	// CRANDC
    26905U,	// CREQV
    20198U,	// CRNAND
    25235U,	// CRNOR
    25249U,	// CROR
    19814U,	// CRORC
    117467417U,	// CRSET
    117465791U,	// CRUNSET
    25279U,	// CRXOR
    1686887U,	// CTRL_DEP
    536893550U,	// DARN
    559394U,	// DCBA
    151675U,	// DCBF
    564458U,	// DCBFEP
    561861U,	// DCBI
    567228U,	// DCBST
    564491U,	// DCBSTEP
    157394U,	// DCBT
    171267U,	// DCBTEP
    157652U,	// DCBTST
    171284U,	// DCBTSTEP
    569848U,	// DCBZ
    564510U,	// DCBZEP
    562807U,	// DCBZL
    564474U,	// DCBZLEP
    536892119U,	// DCCCI
    20390U,	// DIVD
    20449U,	// DIVDE
    22706U,	// DIVDEO
    17590U,	// DIVDEO_rec
    26705U,	// DIVDEU
    22938U,	// DIVDEUO
    17679U,	// DIVDEUO_rec
    18144U,	// DIVDEU_rec
    17028U,	// DIVDE_rec
    22692U,	// DIVDO
    17574U,	// DIVDO_rec
    26698U,	// DIVDU
    22930U,	// DIVDUO
    17670U,	// DIVDUO_rec
    18136U,	// DIVDU_rec
    16996U,	// DIVD_rec
    27994U,	// DIVW
    20572U,	// DIVWE
    22739U,	// DIVWEO
    17627U,	// DIVWEO_rec
    26713U,	// DIVWEU
    22947U,	// DIVWEUO
    17689U,	// DIVWEUO_rec
    18153U,	// DIVWEU_rec
    17094U,	// DIVWE_rec
    22972U,	// DIVWO
    17717U,	// DIVWO_rec
    26819U,	// DIVWU
    22956U,	// DIVWUO
    17699U,	// DIVWUO_rec
    18180U,	// DIVWU_rec
    18295U,	// DIVW_rec
    714067U,	// DSS
    15840U,	// DSSALL
    1745037251U,	// DST
    1745037251U,	// DST64
    1745037276U,	// DSTST
    1745037276U,	// DSTST64
    1745037305U,	// DSTSTT
    1745037305U,	// DSTSTT64
    1745037290U,	// DSTT
    1745037290U,	// DSTT64
    14916U,	// DYNALLOC
    14460U,	// DYNALLOC8
    15495U,	// DYNAREAOFFSET
    14764U,	// DYNAREAOFFSET8
    536896272U,	// EFDABS
    19910U,	// EFDADD
    536896637U,	// EFDCFS
    536891595U,	// EFDCFSF
    536892506U,	// EFDCFSI
    536890996U,	// EFDCFSID
    536891697U,	// EFDCFUF
    536892583U,	// EFDCFUI
    536891015U,	// EFDCFUID
    24896U,	// EFDCMPEQ
    26352U,	// EFDCMPGT
    26430U,	// EFDCMPLT
    536891669U,	// EFDCTSF
    536892534U,	// EFDCTSI
    536900104U,	// EFDCTSIDZ
    536900205U,	// EFDCTSIZ
    536891725U,	// EFDCTUF
    536892611U,	// EFDCTUI
    536900125U,	// EFDCTUIDZ
    536900236U,	// EFDCTUIZ
    26853U,	// EFDDIV
    22067U,	// EFDMUL
    536896288U,	// EFDNABS
    536891751U,	// EFDNEG
    19582U,	// EFDSUB
    24946U,	// EFDTSTEQ
    26393U,	// EFDTSTGT
    26471U,	// EFDTSTLT
    536896325U,	// EFSABS
    19993U,	// EFSADD
    536890946U,	// EFSCFD
    536891604U,	// EFSCFSF
    536892515U,	// EFSCFSI
    536891706U,	// EFSCFUF
    536892592U,	// EFSCFUI
    24916U,	// EFSCMPEQ
    26372U,	// EFSCMPGT
    26450U,	// EFSCMPLT
    536891678U,	// EFSCTSF
    536892543U,	// EFSCTSI
    536900215U,	// EFSCTSIZ
    536891734U,	// EFSCTUF
    536892620U,	// EFSCTUI
    536900246U,	// EFSCTUIZ
    26867U,	// EFSDIV
    22083U,	// EFSMUL
    536896306U,	// EFSNABS
    536891767U,	// EFSNEG
    19617U,	// EFSSUB
    24956U,	// EFSTSTEQ
    26403U,	// EFSTSTGT
    26481U,	// EFSTSTLT
    13604U,	// EH_SjLj_LongJmp32
    13980U,	// EH_SjLj_LongJmp64
    13623U,	// EH_SjLj_SetJmp32
    13999U,	// EH_SjLj_SetJmp64
    589825U,	// EH_SjLj_Setup
    26900U,	// EQV
    26900U,	// EQV8
    18195U,	// EQV8_rec
    18195U,	// EQV_rec
    536896342U,	// EVABS
    16804614U,	// EVADDIW
    536897920U,	// EVADDSMIAAW
    536898052U,	// EVADDSSIAAW
    536897986U,	// EVADDUMIAAW
    536898118U,	// EVADDUSIAAW
    27300U,	// EVADDW
    20221U,	// EVAND
    19715U,	// EVANDC
    24937U,	// EVCMPEQ
    25962U,	// EVCMPGTS
    26765U,	// EVCMPGTU
    25972U,	// EVCMPLTS
    26775U,	// EVCMPLTU
    536898680U,	// EVCNTLSW
    536898929U,	// EVCNTLZW
    26134U,	// EVDIVWS
    26817U,	// EVDIVWU
    26912U,	// EVEQV
    536890379U,	// EVEXTSB
    536891944U,	// EVEXTSH
    536896333U,	// EVFSABS
    20001U,	// EVFSADD
    536891613U,	// EVFSCFSF
    536892524U,	// EVFSCFSI
    536891715U,	// EVFSCFUF
    536892601U,	// EVFSCFUI
    24926U,	// EVFSCMPEQ
    26382U,	// EVFSCMPGT
    26460U,	// EVFSCMPLT
    536891687U,	// EVFSCTSF
    536892552U,	// EVFSCTSI
    536900225U,	// EVFSCTSIZ
    536891687U,	// EVFSCTUF
    536892629U,	// EVFSCTUI
    536900225U,	// EVFSCTUIZ
    26875U,	// EVFSDIV
    22091U,	// EVFSMUL
    536896315U,	// EVFSNABS
    536891775U,	// EVFSNEG
    19625U,	// EVFSSUB
    24966U,	// EVFSTSTEQ
    26413U,	// EVFSTSTGT
    26491U,	// EVFSTSTLT
    33574442U,	// EVLDD
    604007977U,	// EVLDDX
    33575318U,	// EVLDH
    604008081U,	// EVLDHX
    33581740U,	// EVLDW
    604008834U,	// EVLDWX
    33580676U,	// EVLHHESPLAT
    604008574U,	// EVLHHESPLATX
    33580701U,	// EVLHHOSSPLAT
    604008601U,	// EVLHHOSSPLATX
    33580715U,	// EVLHHOUSPLAT
    604008616U,	// EVLHHOUSPLATX
    33574911U,	// EVLWHE
    604008052U,	// EVLWHEX
    33580358U,	// EVLWHOS
    604008546U,	// EVLWHOSX
    33581168U,	// EVLWHOU
    604008732U,	// EVLWHOUX
    33580689U,	// EVLWHSPLAT
    604008588U,	// EVLWHSPLATX
    33580729U,	// EVLWWSPLAT
    604008631U,	// EVLWWSPLATX
    21349U,	// EVMERGEHI
    22797U,	// EVMERGEHILO
    22786U,	// EVMERGELO
    21360U,	// EVMERGELOHI
    18600U,	// EVMHEGSMFAA
    22442U,	// EVMHEGSMFAN
    18648U,	// EVMHEGSMIAA
    22490U,	// EVMHEGSMIAN
    18685U,	// EVMHEGUMIAA
    22527U,	// EVMHEGUMIAN
    20615U,	// EVMHESMF
    18733U,	// EVMHESMFA
    26956U,	// EVMHESMFAAW
    27481U,	// EVMHESMFANW
    21421U,	// EVMHESMI
    18824U,	// EVMHESMIA
    27021U,	// EVMHESMIAAW
    27533U,	// EVMHESMIANW
    20718U,	// EVMHESSF
    18776U,	// EVMHESSFA
    26982U,	// EVMHESSFAAW
    27507U,	// EVMHESSFANW
    27153U,	// EVMHESSIAAW
    27611U,	// EVMHESSIANW
    21460U,	// EVMHEUMI
    18867U,	// EVMHEUMIA
    27087U,	// EVMHEUMIAAW
    27572U,	// EVMHEUMIANW
    27219U,	// EVMHEUSIAAW
    27650U,	// EVMHEUSIANW
    18613U,	// EVMHOGSMFAA
    22455U,	// EVMHOGSMFAN
    18661U,	// EVMHOGSMIAA
    22503U,	// EVMHOGSMIAN
    18698U,	// EVMHOGUMIAA
    22540U,	// EVMHOGUMIAN
    20635U,	// EVMHOSMF
    18755U,	// EVMHOSMFA
    26969U,	// EVMHOSMFAAW
    27494U,	// EVMHOSMFANW
    21441U,	// EVMHOSMI
    18846U,	// EVMHOSMIA
    27061U,	// EVMHOSMIAAW
    27559U,	// EVMHOSMIANW
    20738U,	// EVMHOSSF
    18798U,	// EVMHOSSFA
    26995U,	// EVMHOSSFAAW
    27520U,	// EVMHOSSFANW
    27193U,	// EVMHOSSIAAW
    27637U,	// EVMHOSSIANW
    21490U,	// EVMHOUMI
    18900U,	// EVMHOUMIA
    27127U,	// EVMHOUMIAAW
    27598U,	// EVMHOUMIANW
    27259U,	// EVMHOUSIAAW
    27676U,	// EVMHOUSIANW
    536889955U,	// EVMRA
    20625U,	// EVMWHSMF
    18744U,	// EVMWHSMFA
    21431U,	// EVMWHSMI
    18835U,	// EVMWHSMIA
    20728U,	// EVMWHSSF
    18787U,	// EVMWHSSFA
    21470U,	// EVMWHUMI
    18878U,	// EVMWHUMIA
    27048U,	// EVMWLSMIAAW
    27546U,	// EVMWLSMIANW
    27180U,	// EVMWLSSIAAW
    27624U,	// EVMWLSSIANW
    21480U,	// EVMWLUMI
    18889U,	// EVMWLUMIA
    27114U,	// EVMWLUMIAAW
    27585U,	// EVMWLUMIANW
    27246U,	// EVMWLUSIAAW
    27663U,	// EVMWLUSIANW
    20645U,	// EVMWSMF
    18766U,	// EVMWSMFA
    18626U,	// EVMWSMFAA
    22468U,	// EVMWSMFAN
    21451U,	// EVMWSMI
    18857U,	// EVMWSMIA
    18674U,	// EVMWSMIAA
    22516U,	// EVMWSMIAN
    20748U,	// EVMWSSF
    18809U,	// EVMWSSFA
    18637U,	// EVMWSSFAA
    22479U,	// EVMWSSFAN
    21500U,	// EVMWUMI
    18911U,	// EVMWUMIA
    18711U,	// EVMWUMIAA
    22553U,	// EVMWUMIAN
    20206U,	// EVNAND
    536891784U,	// EVNEG
    25242U,	// EVNOR
    25255U,	// EVOR
    19821U,	// EVORC
    27447U,	// EVRLW
    21751U,	// EVRLWI
    536898227U,	// EVRNDW
    2154328851U,	// EVSEL
    27454U,	// EVSLW
    21777U,	// EVSLWI
    151016282U,	// EVSPLATFI
    151016605U,	// EVSPLATI
    25890U,	// EVSRWIS
    26727U,	// EVSRWIU
    26062U,	// EVSRWS
    26803U,	// EVSRWU
    33574458U,	// EVSTDD
    604007985U,	// EVSTDDX
    33575325U,	// EVSTDH
    604008089U,	// EVSTDHX
    33581755U,	// EVSTDW
    604008842U,	// EVSTDWX
    33574919U,	// EVSTWHE
    604008061U,	// EVSTWHEX
    33577209U,	// EVSTWHO
    604008243U,	// EVSTWHOX
    33575011U,	// EVSTWWE
    604008071U,	// EVSTWWEX
    33577411U,	// EVSTWWO
    604008253U,	// EVSTWWOX
    536897946U,	// EVSUBFSMIAAW
    536898078U,	// EVSUBFSSIAAW
    536898012U,	// EVSUBFUMIAAW
    536898144U,	// EVSUBFUSIAAW
    27348U,	// EVSUBFW
    167799517U,	// EVSUBIFW
    25286U,	// EVXOR
    536890381U,	// EXTSB
    536890381U,	// EXTSB8
    536890381U,	// EXTSB8_32_64
    536887624U,	// EXTSB8_rec
    536887624U,	// EXTSB_rec
    536891946U,	// EXTSH
    536891946U,	// EXTSH8
    536891946U,	// EXTSH8_32_64
    536888074U,	// EXTSH8_rec
    536888074U,	// EXTSH_rec
    536898717U,	// EXTSW
    21387U,	// EXTSWSLI
    21387U,	// EXTSWSLI_32_64
    17307U,	// EXTSWSLI_32_64_rec
    17307U,	// EXTSWSLI_rec
    536898717U,	// EXTSW_32
    536898717U,	// EXTSW_32_64
    536889177U,	// EXTSW_32_64_rec
    536889177U,	// EXTSW_rec
    15878U,	// EnforceIEIO
    536896282U,	// FABSD
    536888843U,	// FABSD_rec
    536896282U,	// FABSS
    536888843U,	// FABSS_rec
    19920U,	// FADD
    25525U,	// FADDS
    17980U,	// FADDS_rec
    16881U,	// FADD_rec
    0U,	// FADDrtz
    536890989U,	// FCFID
    536896519U,	// FCFIDS
    536888919U,	// FCFIDS_rec
    536897581U,	// FCFIDU
    536896904U,	// FCFIDUS
    536888986U,	// FCFIDUS_rec
    536889030U,	// FCFIDU_rec
    536887825U,	// FCFID_rec
    26745U,	// FCMPUD
    26745U,	// FCMPUS
    22577U,	// FCPSGND
    17495U,	// FCPSGND_rec
    22577U,	// FCPSGNS
    17495U,	// FCPSGNS_rec
    536891008U,	// FCTID
    536897591U,	// FCTIDU
    536900264U,	// FCTIDUZ
    536889317U,	// FCTIDUZ_rec
    536889039U,	// FCTIDU_rec
    536900117U,	// FCTIDZ
    536889283U,	// FCTIDZ_rec
    536887833U,	// FCTID_rec
    536898321U,	// FCTIW
    536897707U,	// FCTIWU
    536900275U,	// FCTIWUZ
    536889327U,	// FCTIWUZ_rec
    536889083U,	// FCTIWU_rec
    536900286U,	// FCTIWZ
    536889337U,	// FCTIWZ_rec
    536889138U,	// FCTIW_rec
    26861U,	// FDIV
    26055U,	// FDIVS
    18084U,	// FDIVS_rec
    18188U,	// FDIV_rec
    19928U,	// FMADD
    25534U,	// FMADDS
    17988U,	// FMADDS_rec
    16888U,	// FMADD_rec
    536896096U,	// FMR
    536888811U,	// FMR_rec
    19600U,	// FMSUB
    25504U,	// FMSUBS
    17954U,	// FMSUBS_rec
    16738U,	// FMSUB_rec
    22077U,	// FMUL
    25909U,	// FMULS
    18049U,	// FMULS_rec
    17433U,	// FMUL_rec
    536896299U,	// FNABSD
    536888850U,	// FNABSD_rec
    536896299U,	// FNABSS
    536888850U,	// FNABSS_rec
    536891761U,	// FNEGD
    536888046U,	// FNEGD_rec
    536891761U,	// FNEGS
    536888046U,	// FNEGS_rec
    19937U,	// FNMADD
    25544U,	// FNMADDS
    17997U,	// FNMADDS_rec
    16896U,	// FNMADD_rec
    19609U,	// FNMSUB
    25514U,	// FNMSUBS
    17963U,	// FNMSUBS_rec
    16746U,	// FNMSUB_rec
    536891446U,	// FRE
    536896619U,	// FRES
    536888928U,	// FRES_rec
    536887982U,	// FRE_rec
    536893208U,	// FRIMD
    536888363U,	// FRIMD_rec
    536893208U,	// FRIMS
    536888363U,	// FRIMS_rec
    536893506U,	// FRIND
    536888437U,	// FRIND_rec
    536893506U,	// FRINS
    536888437U,	// FRINS_rec
    536894941U,	// FRIPD
    536888716U,	// FRIPD_rec
    536894941U,	// FRIPS
    536888716U,	// FRIPS_rec
    536900199U,	// FRIZD
    536889301U,	// FRIZD_rec
    536900199U,	// FRIZS
    536889301U,	// FRIZS_rec
    536895642U,	// FRSP
    536888747U,	// FRSP_rec
    536891461U,	// FRSQRTE
    536896627U,	// FRSQRTES
    536888935U,	// FRSQRTES_rec
    536887988U,	// FRSQRTE_rec
    21992U,	// FSELD
    17426U,	// FSELD_rec
    21992U,	// FSELS
    17426U,	// FSELS_rec
    536897414U,	// FSQRT
    536896894U,	// FSQRTS
    536888969U,	// FSQRTS_rec
    536889013U,	// FSQRT_rec
    19592U,	// FSUB
    25495U,	// FSUBS
    17946U,	// FSUBS_rec
    16731U,	// FSUB_rec
    26884U,	// FTDIV
    536897421U,	// FTSQRT
    15434U,	// GETtlsADDR
    13692U,	// GETtlsADDR32
    15420U,	// GETtlsldADDR
    13677U,	// GETtlsldADDR32
    15775U,	// HRFID
    561867U,	// ICBI
    564466U,	// ICBIEP
    216394U,	// ICBLC
    214462U,	// ICBLQ
    222936U,	// ICBT
    222507U,	// ICBTLS
    536892126U,	// ICCCI
    21998U,	// ISEL
    21998U,	// ISEL8
    15748U,	// ISYNC
    184568394U,	// LA
    604008367U,	// LBARX
    2751492015U,	// LBARXL
    604008263U,	// LBEPX
    33583614U,	// LBZ
    33583614U,	// LBZ8
    28391U,	// LBZCIX
    201353418U,	// LBZU
    201353418U,	// LBZU8
    218132821U,	// LBZUX
    218132821U,	// LBZUX8
    604008900U,	// LBZX
    604008900U,	// LBZX8
    29124U,	// LBZXTLS
    29124U,	// LBZXTLS_
    29124U,	// LBZXTLS_32
    33574548U,	// LD
    604008374U,	// LDARX
    2751492022U,	// LDARXL
    26231U,	// LDAT
    604008395U,	// LDBRX
    28360U,	// LDCIX
    604008230U,	// LDMX
    201353279U,	// LDU
    218132737U,	// LDUX
    604008016U,	// LDX
    28240U,	// LDXTLS
    28240U,	// LDXTLS_
    15314U,	// LDgotTprelL
    13574U,	// LDgotTprelL32
    15760U,	// LDtoc
    15599U,	// LDtocBA
    15599U,	// LDtocCPT
    15243U,	// LDtocJTI
    15263U,	// LDtocL
    33574474U,	// LFD
    604008278U,	// LFDEPX
    201353229U,	// LFDU
    218132720U,	// LFDUX
    604007996U,	// LFDX
    604007905U,	// LFIWAX
    604008923U,	// LFIWZX
    33580171U,	// LFS
    201353344U,	// LFSU
    218132797U,	// LFSUX
    604008521U,	// LFSX
    33573251U,	// LHA
    33573251U,	// LHA8
    604008381U,	// LHARX
    2751492029U,	// LHARXL
    201353217U,	// LHAU
    201353217U,	// LHAU8
    218132676U,	// LHAUX
    218132676U,	// LHAUX8
    604007888U,	// LHAX
    604007888U,	// LHAX8
    604008410U,	// LHBRX
    604008410U,	// LHBRX8
    604008295U,	// LHEPX
    33583678U,	// LHZ
    33583678U,	// LHZ8
    28399U,	// LHZCIX
    201353424U,	// LHZU
    201353424U,	// LHZU8
    218132828U,	// LHZUX
    218132828U,	// LHZUX8
    604008915U,	// LHZX
    604008915U,	// LHZX8
    29139U,	// LHZXTLS
    29139U,	// LHZXTLS_
    29139U,	// LHZXTLS_32
    50353024U,	// LI
    50353024U,	// LI8
    50357526U,	// LIS
    50357526U,	// LIS8
    33581893U,	// LMW
    21832U,	// LSWI
    604007928U,	// LVEBX
    604008098U,	// LVEHX
    604008851U,	// LVEWX
    604001837U,	// LVSL
    604005109U,	// LVSR
    604008810U,	// LVX
    604001898U,	// LVXL
    33573482U,	// LWA
    604008388U,	// LWARX
    2751492036U,	// LWARXL
    26309U,	// LWAT
    218132683U,	// LWAUX
    604007922U,	// LWAX
    604007922U,	// LWAX_32
    33573482U,	// LWA_32
    604008435U,	// LWBRX
    604008435U,	// LWBRX8
    604008310U,	// LWEPX
    33583814U,	// LWZ
    33583814U,	// LWZ8
    28407U,	// LWZCIX
    201353430U,	// LWZU
    201353430U,	// LWZU8
    218132835U,	// LWZUX
    218132835U,	// LWZUX8
    604008940U,	// LWZX
    604008940U,	// LWZX8
    29164U,	// LWZXTLS
    29164U,	// LWZXTLS_
    29164U,	// LWZXTLS_32
    15767U,	// LWZtoc
    15281U,	// LWZtocL
    33574730U,	// LXSD
    604008031U,	// LXSDX
    604008891U,	// LXSIBZX
    604008906U,	// LXSIHZX
    604007913U,	// LXSIWAX
    604008931U,	// LXSIWZX
    33579194U,	// LXSSP
    604008350U,	// LXSSPX
    33581357U,	// LXV
    604007852U,	// LXVB16X
    604007818U,	// LXVD2X
    604008504U,	// LXVDSX
    604007871U,	// LXVH8X
    22109U,	// LXVL
    22024U,	// LXVLL
    604007835U,	// LXVW4X
    604008566U,	// LXVWSX
    604008821U,	// LXVX
    20060U,	// MADDHD
    26650U,	// MADDHDU
    20120U,	// MADDLD
    20120U,	// MADDLD8
    713216U,	// MBAR
    536891566U,	// MCRF
    536896656U,	// MCRFS
    552982U,	// MCRXRX
    234901450U,	// MFBHRBE
    549403U,	// MFCR
    549403U,	// MFCR8
    549634U,	// MFCTR
    549634U,	// MFCTR8
    536896006U,	// MFDCR
    550021U,	// MFFS
    536893565U,	// MFFSCDRN
    251679777U,	// MFFSCDRNI
    544723U,	// MFFSCE
    536893556U,	// MFFSCRN
    268456983U,	// MFFSCRNI
    546342U,	// MFFSL
    542322U,	// MFFS_rec
    549458U,	// MFLR
    549458U,	// MFLR8
    549601U,	// MFMSR
    285233332U,	// MFOCRF
    285233332U,	// MFOCRF8
    536896101U,	// MFPMR
    536896205U,	// MFSPR
    536896205U,	// MFSPR8
    302015195U,	// MFSR
    536893512U,	// MFSRIN
    536890402U,	// MFTB
    7365325U,	// MFTB8
    536891161U,	// MFVRD
    7889613U,	// MFVRSAVE
    7889613U,	// MFVRSAVEv
    536900299U,	// MFVRWZ
    549417U,	// MFVSCR
    536891161U,	// MFVSRD
    536891054U,	// MFVSRLD
    536900299U,	// MFVSRWZ
    20265U,	// MODSD
    27716U,	// MODSW
    20347U,	// MODUD
    27891U,	// MODUW
    15740U,	// MSGSYNC
    15754U,	// MSYNC
    536891588U,	// MTCRF
    536891588U,	// MTCRF8
    549641U,	// MTCTR
    549641U,	// MTCTR8
    549641U,	// MTCTR8loop
    549641U,	// MTCTRloop
    654516756U,	// MTDCR
    706562U,	// MTFSB0
    706570U,	// MTFSB1
    20711U,	// MTFSF
    21330U,	// MTFSFI
    17298U,	// MTFSFI_rec
    17126U,	// MTFSF_rec
    536891623U,	// MTFSFb
    549464U,	// MTLR
    549464U,	// MTLR8
    536896232U,	// MTMSR
    536891153U,	// MTMSRD
    233660U,	// MTOCRF
    233660U,	// MTOCRF8
    536896108U,	// MTPMR
    536896212U,	// MTSPR
    536896212U,	// MTSPR8
    254703U,	// MTSR
    536893520U,	// MTSRIN
    536891169U,	// MTVRD
    540907U,	// MTVRSAVE
    721131U,	// MTVRSAVEv
    536889967U,	// MTVRWA
    536900308U,	// MTVRWZ
    549425U,	// MTVSCR
    536891169U,	// MTVSRD
    20017U,	// MTVSRDD
    536889967U,	// MTVSRWA
    536896982U,	// MTVSRWS
    536900308U,	// MTVSRWZ
    20068U,	// MULHD
    26659U,	// MULHDU
    18109U,	// MULHDU_rec
    16905U,	// MULHD_rec
    27391U,	// MULHW
    26785U,	// MULHWU
    18162U,	// MULHWU_rec
    18218U,	// MULHW_rec
    20128U,	// MULLD
    22684U,	// MULLDO
    17565U,	// MULLDO_rec
    16929U,	// MULLD_rec
    21380U,	// MULLI
    21380U,	// MULLI8
    27433U,	// MULLW
    22964U,	// MULLWO
    17708U,	// MULLWO_rec
    18234U,	// MULLW_rec
    15458U,	// MoveGOTtoLR
    15446U,	// MovePCtoLR
    14751U,	// MovePCtoLR8
    20192U,	// NAND
    20192U,	// NAND8
    16943U,	// NAND8_rec
    16943U,	// NAND_rec
    15884U,	// NAP
    536891754U,	// NEG
    536891754U,	// NEG8
    536893683U,	// NEG8O
    536888575U,	// NEG8O_rec
    536888047U,	// NEG8_rec
    536893683U,	// NEGO
    536888575U,	// NEGO_rec
    536888047U,	// NEG_rec
    15893U,	// NOP
    13276U,	// NOP_GT_PWR6
    13288U,	// NOP_GT_PWR7
    25230U,	// NOR
    25230U,	// NOR8
    17905U,	// NOR8_rec
    17905U,	// NOR_rec
    25223U,	// OR
    25223U,	// OR8
    17906U,	// OR8_rec
    19809U,	// ORC
    19809U,	// ORC8
    16857U,	// ORC8_rec
    16857U,	// ORC_rec
    21589U,	// ORI
    21589U,	// ORI8
    25884U,	// ORIS
    25884U,	// ORIS8
    17906U,	// OR_rec
    536890417U,	// POPCNTB
    536891235U,	// POPCNTD
    536898750U,	// POPCNTW
    15576U,	// PPC32GOT
    15586U,	// PPC32PICGOT
    21517U,	// QVALIGNI
    21517U,	// QVALIGNIb
    21517U,	// QVALIGNIs
    21650U,	// QVESPLATI
    21650U,	// QVESPLATIb
    21650U,	// QVESPLATIs
    536896280U,	// QVFABS
    536896280U,	// QVFABSs
    19918U,	// QVFADD
    25523U,	// QVFADDS
    25523U,	// QVFADDSs
    536890987U,	// QVFCFID
    536896517U,	// QVFCFIDS
    536897579U,	// QVFCFIDU
    536896902U,	// QVFCFIDUS
    536890987U,	// QVFCFIDb
    24906U,	// QVFCMPEQ
    24906U,	// QVFCMPEQb
    24906U,	// QVFCMPEQbs
    26362U,	// QVFCMPGT
    26362U,	// QVFCMPGTb
    26362U,	// QVFCMPGTbs
    26440U,	// QVFCMPLT
    26440U,	// QVFCMPLTb
    26440U,	// QVFCMPLTbs
    22575U,	// QVFCPSGN
    22575U,	// QVFCPSGNs
    536891006U,	// QVFCTID
    536897589U,	// QVFCTIDU
    536900262U,	// QVFCTIDUZ
    536900115U,	// QVFCTIDZ
    536891006U,	// QVFCTIDb
    536898319U,	// QVFCTIW
    536897705U,	// QVFCTIWU
    536900273U,	// QVFCTIWUZ
    536900284U,	// QVFCTIWZ
    21946U,	// QVFLOGICAL
    21946U,	// QVFLOGICALb
    21946U,	// QVFLOGICALs
    19926U,	// QVFMADD
    25532U,	// QVFMADDS
    25532U,	// QVFMADDSs
    536896094U,	// QVFMR
    536896094U,	// QVFMRb
    536896094U,	// QVFMRs
    19598U,	// QVFMSUB
    25502U,	// QVFMSUBS
    25502U,	// QVFMSUBSs
    22075U,	// QVFMUL
    25907U,	// QVFMULS
    25907U,	// QVFMULSs
    536896297U,	// QVFNABS
    536896297U,	// QVFNABSs
    536891759U,	// QVFNEG
    536891759U,	// QVFNEGs
    19935U,	// QVFNMADD
    25542U,	// QVFNMADDS
    25542U,	// QVFNMADDSs
    19607U,	// QVFNMSUB
    25512U,	// QVFNMSUBS
    25512U,	// QVFNMSUBSs
    22364U,	// QVFPERM
    22364U,	// QVFPERMs
    536891444U,	// QVFRE
    536896617U,	// QVFRES
    536896617U,	// QVFRESs
    536893206U,	// QVFRIM
    536893206U,	// QVFRIMs
    536893504U,	// QVFRIN
    536893504U,	// QVFRINs
    536894939U,	// QVFRIP
    536894939U,	// QVFRIPs
    536900197U,	// QVFRIZ
    536900197U,	// QVFRIZs
    536895640U,	// QVFRSP
    536895640U,	// QVFRSPs
    536891459U,	// QVFRSQRTE
    536896625U,	// QVFRSQRTES
    536896625U,	// QVFRSQRTESs
    21990U,	// QVFSEL
    21990U,	// QVFSELb
    21990U,	// QVFSELbb
    21990U,	// QVFSELbs
    19590U,	// QVFSUB
    25493U,	// QVFSUBS
    25493U,	// QVFSUBSs
    22564U,	// QVFTSTNAN
    22564U,	// QVFTSTNANb
    22564U,	// QVFTSTNANbs
    19972U,	// QVFXMADD
    25582U,	// QVFXMADDS
    22100U,	// QVFXMUL
    25916U,	// QVFXMULS
    19945U,	// QVFXXCPNMADD
    25553U,	// QVFXXCPNMADDS
    19982U,	// QVFXXMADD
    25593U,	// QVFXXMADDS
    19959U,	// QVFXXNPMADD
    25568U,	// QVFXXNPMADDS
    318788325U,	// QVGPCI
    604008665U,	// QVLFCDUX
    603998931U,	// QVLFCDUXA
    604007958U,	// QVLFCDX
    603998851U,	// QVLFCDXA
    604008742U,	// QVLFCSUX
    603998975U,	// QVLFCSUXA
    604008485U,	// QVLFCSX
    603998891U,	// QVLFCSXA
    604008485U,	// QVLFCSXs
    218132718U,	// QVLFDUX
    603998954U,	// QVLFDUXA
    604007994U,	// QVLFDX
    603998872U,	// QVLFDXA
    604007994U,	// QVLFDXb
    604007903U,	// QVLFIWAX
    603998840U,	// QVLFIWAXA
    604008921U,	// QVLFIWZX
    603999030U,	// QVLFIWZXA
    218132795U,	// QVLFSUX
    603998998U,	// QVLFSUXA
    604008519U,	// QVLFSX
    603998912U,	// QVLFSXA
    604008519U,	// QVLFSXb
    604008519U,	// QVLFSXs
    604008011U,	// QVLPCLDX
    604008536U,	// QVLPCLSX
    8417368U,	// QVLPCLSXint
    604008021U,	// QVLPCRDX
    604008556U,	// QVLPCRSX
    604008675U,	// QVSTFCDUX
    603998942U,	// QVSTFCDUXA
    604001668U,	// QVSTFCDUXI
    603998743U,	// QVSTFCDUXIA
    604007967U,	// QVSTFCDX
    603998861U,	// QVSTFCDXA
    604001626U,	// QVSTFCDXI
    603998697U,	// QVSTFCDXIA
    604008752U,	// QVSTFCSUX
    603998986U,	// QVSTFCSUXA
    604001691U,	// QVSTFCSUXI
    603998768U,	// QVSTFCSUXIA
    604008494U,	// QVSTFCSX
    603998901U,	// QVSTFCSXA
    604001647U,	// QVSTFCSXI
    603998720U,	// QVSTFCSXIA
    604008494U,	// QVSTFCSXs
    218312951U,	// QVSTFDUX
    603998964U,	// QVSTFDUXA
    604001680U,	// QVSTFDUXI
    603998756U,	// QVSTFDUXIA
    604008002U,	// QVSTFDX
    603998881U,	// QVSTFDXA
    604001637U,	// QVSTFDXI
    603998709U,	// QVSTFDXIA
    604008002U,	// QVSTFDXb
    604008866U,	// QVSTFIWX
    603999019U,	// QVSTFIWXA
    218313028U,	// QVSTFSUX
    603999008U,	// QVSTFSUXA
    604001703U,	// QVSTFSUXI
    603998781U,	// QVSTFSUXIA
    218313028U,	// QVSTFSUXs
    604008527U,	// QVSTFSX
    603998921U,	// QVSTFSXA
    604001658U,	// QVSTFSXI
    603998732U,	// QVSTFSXIA
    604008527U,	// QVSTFSXs
    15366U,	// RESTORE_CR
    15510U,	// RESTORE_CRBIT
    15213U,	// RESTORE_VRSAVE
    15802U,	// RFCI
    15813U,	// RFDI
    265045U,	// RFEBB
    15818U,	// RFI
    15776U,	// RFID
    15807U,	// RFMCI
    21967U,	// RLDCL
    17409U,	// RLDCL_rec
    25101U,	// RLDCR
    17882U,	// RLDCR_rec
    19744U,	// RLDIC
    21974U,	// RLDICL
    21974U,	// RLDICL_32
    21974U,	// RLDICL_32_64
    17417U,	// RLDICL_32_rec
    17417U,	// RLDICL_rec
    25121U,	// RLDICR
    25121U,	// RLDICR_32
    17890U,	// RLDICR_rec
    16826U,	// RLDIC_rec
    3355464605U,	// RLDIMI
    3355460518U,	// RLDIMI_rec
    3892335525U,	// RLWIMI
    3892335525U,	// RLWIMI8
    3892331439U,	// RLWIMI8_rec
    3892331439U,	// RLWIMI_rec
    22310U,	// RLWINM
    22310U,	// RLWINM8
    17458U,	// RLWINM8_rec
    17458U,	// RLWINM_rec
    22319U,	// RLWNM
    22319U,	// RLWNM8
    17467U,	// RLWNM8_rec
    17467U,	// RLWNM_rec
    14908U,	// ReadTB
    544116U,	// SC
    14191U,	// SELECT_CC_F16
    14113U,	// SELECT_CC_F4
    14480U,	// SELECT_CC_F8
    14138U,	// SELECT_CC_I4
    14525U,	// SELECT_CC_I8
    14926U,	// SELECT_CC_QBRC
    14955U,	// SELECT_CC_QFRC
    15044U,	// SELECT_CC_QSRC
    15176U,	// SELECT_CC_SPE
    14084U,	// SELECT_CC_SPE4
    15015U,	// SELECT_CC_VRRC
    14984U,	// SELECT_CC_VSFRC
    15104U,	// SELECT_CC_VSRC
    15073U,	// SELECT_CC_VSSRC
    14206U,	// SELECT_F16
    14127U,	// SELECT_F4
    14494U,	// SELECT_F8
    14152U,	// SELECT_I4
    14699U,	// SELECT_I8
    14942U,	// SELECT_QBRC
    14971U,	// SELECT_QFRC
    15060U,	// SELECT_QSRC
    15191U,	// SELECT_SPE
    14100U,	// SELECT_SPE4
    15031U,	// SELECT_VRRC
    15001U,	// SELECT_VSFRC
    15120U,	// SELECT_VSRC
    15090U,	// SELECT_VSSRC
    536890396U,	// SETB
    536890396U,	// SETB8
    15161U,	// SETRND
    15793U,	// SETRNDi
    536887948U,	// SLBFEE_rec
    15696U,	// SLBIA
    544784U,	// SLBIE
    536891743U,	// SLBIEG
    536891368U,	// SLBMFEE
    536897756U,	// SLBMFEV
    536891451U,	// SLBMTE
    15724U,	// SLBSYNC
    20158U,	// SLD
    16937U,	// SLD_rec
    27456U,	// SLW
    27456U,	// SLW8
    18242U,	// SLW8_rec
    18242U,	// SLW_rec
    33583814U,	// SPELWZ
    604008940U,	// SPELWZX
    33582300U,	// SPESTW
    604008885U,	// SPESTWX
    15378U,	// SPILL_CR
    15525U,	// SPILL_CRBIT
    15229U,	// SPILL_VRSAVE
    19888U,	// SRAD
    21229U,	// SRADI
    21229U,	// SRADI_32
    17227U,	// SRADI_rec
    16874U,	// SRAD_rec
    27285U,	// SRAW
    21727U,	// SRAWI
    17336U,	// SRAWI_rec
    18201U,	// SRAW_rec
    20244U,	// SRD
    16957U,	// SRD_rec
    27711U,	// SRW
    27711U,	// SRW8
    18248U,	// SRW8_rec
    18248U,	// SRW_rec
    33573956U,	// STB
    33573956U,	// STB8
    28352U,	// STBCIX
    603998107U,	// STBCX
    604008270U,	// STBEPX
    201533447U,	// STBU
    201533447U,	// STBU8
    218312914U,	// STBUX
    218312914U,	// STBUX8
    604007952U,	// STBX
    604007952U,	// STBX8
    28176U,	// STBXTLS
    28176U,	// STBXTLS_
    28176U,	// STBXTLS_32
    33574774U,	// STD
    26237U,	// STDAT
    604008402U,	// STDBRX
    28367U,	// STDCIX
    603998115U,	// STDCX
    201533508U,	// STDU
    218312967U,	// STDUX
    604008046U,	// STDX
    28270U,	// STDXTLS
    28270U,	// STDXTLS_
    33574479U,	// STFD
    604008286U,	// STFDEPX
    201533459U,	// STFDU
    218312953U,	// STFDUX
    604008004U,	// STFDX
    604008868U,	// STFIWX
    33580183U,	// STFS
    201533574U,	// STFSU
    218313030U,	// STFSUX
    604008529U,	// STFSX
    33575509U,	// STH
    33575509U,	// STH8
    604008417U,	// STHBRX
    28375U,	// STHCIX
    603998123U,	// STHCX
    604008302U,	// STHEPX
    201533537U,	// STHU
    201533537U,	// STHU8
    218312981U,	// STHUX
    218312981U,	// STHUX8
    604008122U,	// STHX
    604008122U,	// STHX8
    28346U,	// STHXTLS
    28346U,	// STHXTLS_
    28346U,	// STHXTLS_32
    33581898U,	// STMW
    15897U,	// STOP
    21838U,	// STSWI
    604007935U,	// STVEBX
    604008105U,	// STVEHX
    604008858U,	// STVEWX
    604008815U,	// STVX
    604001904U,	// STVXL
    33582300U,	// STW
    33582300U,	// STW8
    26315U,	// STWAT
    604008442U,	// STWBRX
    28383U,	// STWCIX
    603998131U,	// STWCX
    604008317U,	// STWEPX
    201533627U,	// STWU
    201533627U,	// STWU8
    218313038U,	// STWUX
    218313038U,	// STWUX8
    604008885U,	// STWX
    604008885U,	// STWX8
    29109U,	// STWXTLS
    29109U,	// STWXTLS_
    29109U,	// STWXTLS_32
    33574736U,	// STXSD
    604008038U,	// STXSDX
    604007943U,	// STXSIBX
    604007943U,	// STXSIBXv
    604008113U,	// STXSIHX
    604008113U,	// STXSIHXv
    604008876U,	// STXSIWX
    33579201U,	// STXSSP
    604008358U,	// STXSSPX
    33581362U,	// STXV
    604007861U,	// STXVB16X
    604007826U,	// STXVD2X
    604007879U,	// STXVH8X
    22115U,	// STXVL
    22031U,	// STXVLL
    604007843U,	// STXVW4X
    604008827U,	// STXVX
    20609U,	// SUBF
    20609U,	// SUBF8
    22764U,	// SUBF8O
    17655U,	// SUBF8O_rec
    17119U,	// SUBF8_rec
    19723U,	// SUBFC
    19723U,	// SUBFC8
    22670U,	// SUBFC8O
    17549U,	// SUBFC8O_rec
    16802U,	// SUBFC8_rec
    22670U,	// SUBFCO
    17549U,	// SUBFCO_rec
    16802U,	// SUBFC_rec
    20472U,	// SUBFE
    20472U,	// SUBFE8
    22714U,	// SUBFE8O
    17599U,	// SUBFE8O_rec
    17045U,	// SUBFE8_rec
    22714U,	// SUBFEO
    17599U,	// SUBFEO_rec
    17045U,	// SUBFE_rec
    19751U,	// SUBFIC
    19751U,	// SUBFIC8
    536891429U,	// SUBFME
    536891429U,	// SUBFME8
    536893642U,	// SUBFME8O
    536888529U,	// SUBFME8O_rec
    536887973U,	// SUBFME8_rec
    536893642U,	// SUBFMEO
    536888529U,	// SUBFMEO_rec
    536887973U,	// SUBFME_rec
    22764U,	// SUBFO
    17655U,	// SUBFO_rec
    536891507U,	// SUBFZE
    536891507U,	// SUBFZE8
    536893667U,	// SUBFZE8O
    536888557U,	// SUBFZE8O_rec
    536888022U,	// SUBFZE8_rec
    536893667U,	// SUBFZEO
    536888557U,	// SUBFZEO_rec
    536888022U,	// SUBFZE_rec
    17119U,	// SUBF_rec
    544088U,	// SYNC
    542380U,	// TABORT
    180631U,	// TABORTDC
    181043U,	// TABORTDCI
    180703U,	// TABORTWC
    181055U,	// TABORTWCI
    592722U,	// TAILB
    592722U,	// TAILB8
    608548U,	// TAILBA
    608548U,	// TAILBA8
    15919U,	// TAILBCTR
    15919U,	// TAILBCTR8
    263276U,	// TBEGIN
    15483U,	// TBEGIN_RET
    546226U,	// TCHECK
    15471U,	// TCHECK_RET
    538003611U,	// TCRETURNai
    538003518U,	// TCRETURNai8
    537988502U,	// TCRETURNdi
    537987148U,	// TCRETURNdi8
    537944563U,	// TCRETURNri
    537938010U,	// TCRETURNri8
    184158U,	// TD
    185157U,	// TDI
    262710U,	// TEND
    15702U,	// TLBIA
    661327895U,	// TLBIE
    546270U,	// TLBIEL
    536899030U,	// TLBIVAX
    544401U,	// TLBLD
    545661U,	// TLBLI
    15781U,	// TLBRE
    20525U,	// TLBRE2
    536899614U,	// TLBSX
    28702U,	// TLBSX2
    18363U,	// TLBSX2D
    15732U,	// TLBSYNC
    15787U,	// TLBWE
    20565U,	// TLBWE2
    15888U,	// TRAP
    13266U,	// TRECHKPT
    541728U,	// TRECLAIM
    263685U,	// TSR
    191664U,	// TW
    185685U,	// TWI
    15340U,	// UNENCODED_NOP
    536889448U,	// UPDATE_VRSAVE
    15355U,	// UpdateGBR
    19529U,	// VABSDUB
    21082U,	// VABSDUH
    27898U,	// VABSDUW
    25023U,	// VADDCUQ
    27882U,	// VADDCUW
    25054U,	// VADDECUQ
    22354U,	// VADDEUQM
    23882U,	// VADDFP
    25456U,	// VADDSBS
    25799U,	// VADDSHS
    26098U,	// VADDSWS
    22174U,	// VADDUBM
    25484U,	// VADDUBS
    22202U,	// VADDUDM
    22241U,	// VADDUHM
    25827U,	// VADDUHS
    22335U,	// VADDUQM
    22424U,	// VADDUWM
    26125U,	// VADDUWS
    20222U,	// VAND
    19716U,	// VANDC
    19404U,	// VAVGSB
    20969U,	// VAVGSH
    27732U,	// VAVGSW
    19547U,	// VAVGUB
    21100U,	// VAVGUH
    27916U,	// VAVGUW
    20163U,	// VBPERMD
    24977U,	// VBPERMQ
    134246464U,	// VCFSX
    536899648U,	// VCFSX_0
    134246670U,	// VCFUX
    536899854U,	// VCFUX_0
    25155U,	// VCIPHER
    26543U,	// VCIPHERLAST
    536890586U,	// VCLZB
    536891308U,	// VCLZD
    536892087U,	// VCLZH
    536890204U,	// VCLZLSBB
    536898922U,	// VCLZW
    23846U,	// VCMPBFP
    17761U,	// VCMPBFP_rec
    23945U,	// VCMPEQFP
    17782U,	// VCMPEQFP_rec
    19572U,	// VCMPEQUB
    16720U,	// VCMPEQUB_rec
    20362U,	// VCMPEQUD
    16974U,	// VCMPEQUD_rec
    21125U,	// VCMPEQUH
    17170U,	// VCMPEQUH_rec
    27941U,	// VCMPEQUW
    18273U,	// VCMPEQUW_rec
    23899U,	// VCMPGEFP
    17771U,	// VCMPGEFP_rec
    23955U,	// VCMPGTFP
    17793U,	// VCMPGTFP_rec
    19457U,	// VCMPGTSB
    16701U,	// VCMPGTSB_rec
    20280U,	// VCMPGTSD
    16963U,	// VCMPGTSD_rec
    21022U,	// VCMPGTSH
    17151U,	// VCMPGTSH_rec
    27795U,	// VCMPGTSW
    18254U,	// VCMPGTSW_rec
    19646U,	// VCMPGTUB
    16755U,	// VCMPGTUB_rec
    20372U,	// VCMPGTUD
    16985U,	// VCMPGTUD_rec
    21147U,	// VCMPGTUH
    17181U,	// VCMPGTUH_rec
    27976U,	// VCMPGTUW
    18284U,	// VCMPGTUW_rec
    19312U,	// VCMPNEB
    16691U,	// VCMPNEB_rec
    20901U,	// VCMPNEH
    17141U,	// VCMPNEH_rec
    27339U,	// VCMPNEW
    18208U,	// VCMPNEW_rec
    19664U,	// VCMPNEZB
    16766U,	// VCMPNEZB_rec
    21165U,	// VCMPNEZH
    17192U,	// VCMPNEZH_rec
    28000U,	// VCMPNEZW
    18302U,	// VCMPNEZW_rec
    134243943U,	// VCTSXS
    536897127U,	// VCTSXS_0
    134243951U,	// VCTUXS
    536897135U,	// VCTUXS_0
    536890593U,	// VCTZB
    536891323U,	// VCTZD
    536892094U,	// VCTZH
    536890214U,	// VCTZLSBB
    536898939U,	// VCTZW
    26913U,	// VEQV
    536894828U,	// VEXPTEFP
    1207979863U,	// VEXTRACTD
    1207979186U,	// VEXTRACTUB
    1207980687U,	// VEXTRACTUH
    1207987503U,	// VEXTRACTUW
    536890744U,	// VEXTSB2D
    536890744U,	// VEXTSB2Ds
    536897848U,	// VEXTSB2W
    536897848U,	// VEXTSB2Ws
    536890754U,	// VEXTSH2D
    536890754U,	// VEXTSH2Ds
    536897858U,	// VEXTSH2W
    536897858U,	// VEXTSH2Ws
    536890764U,	// VEXTSW2D
    536890764U,	// VEXTSW2Ds
    28424U,	// VEXTUBLX
    28649U,	// VEXTUBRX
    28434U,	// VEXTUHLX
    28674U,	// VEXTUHRX
    28444U,	// VEXTUWLX
    28684U,	// VEXTUWRX
    536890806U,	// VGBBD
    335563834U,	// VINSERTB
    1207979884U,	// VINSERTD
    335565387U,	// VINSERTH
    1207987399U,	// VINSERTW
    536894802U,	// VLOGEFP
    23873U,	// VMADDFP
    23965U,	// VMAXFP
    19476U,	// VMAXSB
    20290U,	// VMAXSD
    21041U,	// VMAXSH
    27812U,	// VMAXSW
    19656U,	// VMAXUB
    20382U,	// VMAXUD
    21157U,	// VMAXUH
    27986U,	// VMAXUW
    25776U,	// VMHADDSHS
    25787U,	// VMHRADDSHS
    23937U,	// VMINFP
    19440U,	// VMINSB
    20272U,	// VMINSD
    21005U,	// VMINSH
    27778U,	// VMINSW
    19555U,	// VMINUB
    20354U,	// VMINUD
    21108U,	// VMINUH
    27924U,	// VMINUW
    22230U,	// VMLADDUHM
    27331U,	// VMRGEW
    19321U,	// VMRGHB
    20910U,	// VMRGHH
    27374U,	// VMRGHW
    19339U,	// VMRGLB
    20918U,	// VMRGLH
    27416U,	// VMRGLW
    27689U,	// VMRGOW
    22155U,	// VMSUMMBM
    22211U,	// VMSUMSHM
    25808U,	// VMSUMSHS
    22183U,	// VMSUMUBM
    22250U,	// VMSUMUHM
    25836U,	// VMSUMUHS
    536895915U,	// VMUL10CUQ
    25032U,	// VMUL10ECUQ
    25064U,	// VMUL10EUQ
    536895905U,	// VMUL10UQ
    19395U,	// VMULESB
    20960U,	// VMULESH
    27723U,	// VMULESW
    19538U,	// VMULEUB
    21091U,	// VMULEUH
    27907U,	// VMULEUW
    19448U,	// VMULOSB
    21013U,	// VMULOSH
    27786U,	// VMULOSW
    19563U,	// VMULOUB
    21116U,	// VMULOUH
    27932U,	// VMULOUW
    22433U,	// VMULUWM
    20207U,	// VNAND
    25145U,	// VNCIPHER
    26529U,	// VNCIPHERLAST
    536890965U,	// VNEGD
    536898279U,	// VNEGW
    23855U,	// VNMSUBFP
    25243U,	// VNOR
    25256U,	// VOR
    19822U,	// VORC
    22373U,	// VPERM
    25203U,	// VPERMR
    25269U,	// VPERMXOR
    28558U,	// VPKPX
    25935U,	// VPKSDSS
    26001U,	// VPKSDUS
    25944U,	// VPKSHSS
    26019U,	// VPKSHUS
    25953U,	// VPKSWSS
    26037U,	// VPKSWUS
    22388U,	// VPKUDUM
    26010U,	// VPKUDUS
    22397U,	// VPKUHUM
    26028U,	// VPKUHUS
    22406U,	// VPKUWUM
    26046U,	// VPKUWUS
    19359U,	// VPMSUMB
    20172U,	// VPMSUMD
    20938U,	// VPMSUMH
    27472U,	// VPMSUMW
    536890416U,	// VPOPCNTB
    536891234U,	// VPOPCNTD
    536891969U,	// VPOPCNTH
    536898749U,	// VPOPCNTW
    536890813U,	// VPRTYBD
    536895799U,	// VPRTYBQ
    536898203U,	// VPRTYBW
    536894821U,	// VREFP
    536893172U,	// VRFIM
    536893497U,	// VRFIN
    536894905U,	// VRFIP
    536900163U,	// VRFIZ
    19347U,	// VRLB
    20151U,	// VRLD
    21397U,	// VRLDMI
    22302U,	// VRLDNM
    20926U,	// VRLH
    27448U,	// VRLW
    21509U,	// VRLWMI
    22318U,	// VRLWNM
    536894838U,	// VRSQRTEFP
    536899372U,	// VSBOX
    22004U,	// VSEL
    19875U,	// VSHASIGMAD
    27272U,	// VSHASIGMAW
    22062U,	// VSL
    19353U,	// VSLB
    20157U,	// VSLD
    21548U,	// VSLDOI
    20932U,	// VSLH
    22810U,	// VSLO
    26891U,	// VSLV
    27455U,	// VSLW
    134237224U,	// VSPLTB
    134237224U,	// VSPLTBs
    134238777U,	// VSPLTH
    134238777U,	// VSPLTHs
    151014365U,	// VSPLTISB
    151015930U,	// VSPLTISH
    151022693U,	// VSPLTISW
    134245548U,	// VSPLTW
    25334U,	// VSR
    19278U,	// VSRAB
    19887U,	// VSRAD
    20879U,	// VSRAH
    27284U,	// VSRAW
    19389U,	// VSRB
    20251U,	// VSRD
    20954U,	// VSRH
    22924U,	// VSRO
    26919U,	// VSRV
    27710U,	// VSRW
    25014U,	// VSUBCUQ
    27873U,	// VSUBCUW
    25044U,	// VSUBECUQ
    22344U,	// VSUBEUQM
    23865U,	// VSUBFP
    25447U,	// VSUBSBS
    25767U,	// VSUBSHS
    26089U,	// VSUBSWS
    22165U,	// VSUBUBM
    25475U,	// VSUBUBS
    22193U,	// VSUBUDM
    22221U,	// VSUBUHM
    25818U,	// VSUBUHS
    22326U,	// VSUBUQM
    22415U,	// VSUBUWM
    26116U,	// VSUBUWS
    26079U,	// VSUM2SWS
    25437U,	// VSUM4SBS
    25757U,	// VSUM4SHS
    25465U,	// VSUM4UBS
    26107U,	// VSUMSWS
    536899461U,	// VUPKHPX
    536890324U,	// VUPKHSB
    536891889U,	// VUPKHSH
    536898652U,	// VUPKHSW
    536899477U,	// VUPKLPX
    536890343U,	// VUPKLSB
    536891908U,	// VUPKLSH
    536898671U,	// VUPKLSW
    25287U,	// VXOR
    117465799U,	// V_SET0
    117465799U,	// V_SET0B
    117465799U,	// V_SET0H
    8940645U,	// V_SETALLONES
    8940645U,	// V_SETALLONESB
    8940645U,	// V_SETALLONESH
    550712U,	// WAIT
    544753U,	// WRTEE
    545610U,	// WRTEEI
    25264U,	// XOR
    25264U,	// XOR8
    17911U,	// XOR8_rec
    21588U,	// XORI
    21588U,	// XORI8
    25883U,	// XORIS
    25883U,	// XORIS8
    17911U,	// XOR_rec
    536894528U,	// XSABSDP
    536895147U,	// XSABSQP
    23140U,	// XSADDDP
    24105U,	// XSADDQP
    22883U,	// XSADDQPO
    24405U,	// XSADDSP
    23574U,	// XSCMPEQDP
    23542U,	// XSCMPEXPDP
    24203U,	// XSCMPEXPQP
    23202U,	// XSCMPGEDP
    23634U,	// XSCMPGTDP
    23472U,	// XSCMPODP
    24173U,	// XSCMPOQP
    23698U,	// XSCMPUDP
    24254U,	// XSCMPUQP
    23432U,	// XSCPSGNDP
    24162U,	// XSCPSGNQP
    536894885U,	// XSCVDPHP
    536895095U,	// XSCVDPQP
    536895579U,	// XSCVDPSP
    536893539U,	// XSCVDPSPN
    536896545U,	// XSCVDPSXDS
    536896545U,	// XSCVDPSXDSs
    536897055U,	// XSCVDPSXWS
    536897055U,	// XSCVDPSXWSs
    536896581U,	// XSCVDPUXDS
    536896581U,	// XSCVDPUXDSs
    536897091U,	// XSCVDPUXWS
    536897091U,	// XSCVDPUXWSs
    536894394U,	// XSCVHPDP
    536894404U,	// XSCVQPDP
    536893728U,	// XSCVQPDPO
    536900136U,	// XSCVQPSDZ
    536900317U,	// XSCVQPSWZ
    536900147U,	// XSCVQPUDZ
    536900328U,	// XSCVQPUWZ
    536895026U,	// XSCVSDQP
    536894414U,	// XSCVSPDP
    536893528U,	// XSCVSPDPN
    536894070U,	// XSCVSXDDP
    536895335U,	// XSCVSXDSP
    536895036U,	// XSCVUDQP
    536894092U,	// XSCVUXDDP
    536895357U,	// XSCVUXDSP
    23708U,	// XSDIVDP
    24264U,	// XSDIVQP
    22914U,	// XSDIVQPO
    24819U,	// XSDIVSP
    23522U,	// XSIEXPDP
    24193U,	// XSIEXPQP
    1744853522U,	// XSMADDADP
    1744854807U,	// XSMADDASP
    1744853874U,	// XSMADDMDP
    1744855089U,	// XSMADDMSP
    1744854559U,	// XSMADDQP
    1744853336U,	// XSMADDQPO
    23130U,	// XSMAXCDP
    23768U,	// XSMAXDP
    23312U,	// XSMAXJDP
    23120U,	// XSMINCDP
    23454U,	// XSMINDP
    23302U,	// XSMINJDP
    1744853476U,	// XSMSUBADP
    1744854761U,	// XSMSUBASP
    1744853828U,	// XSMSUBMDP
    1744855043U,	// XSMSUBMSP
    1744854518U,	// XSMSUBQP
    1744853303U,	// XSMSUBQPO
    23322U,	// XSMULDP
    24153U,	// XSMULQP
    22893U,	// XSMULQPO
    24537U,	// XSMULSP
    536894508U,	// XSNABSDP
    536895137U,	// XSNABSQP
    536894176U,	// XSNEGDP
    536895046U,	// XSNEGQP
    1744853498U,	// XSNMADDADP
    1744854783U,	// XSNMADDASP
    1744853850U,	// XSNMADDMDP
    1744855065U,	// XSNMADDMSP
    1744854548U,	// XSNMADDQP
    1744853324U,	// XSNMADDQPO
    1744853452U,	// XSNMSUBADP
    1744854737U,	// XSNMSUBASP
    1744853804U,	// XSNMSUBMDP
    1744855019U,	// XSNMSUBMSP
    1744854507U,	// XSNMSUBQP
    1744853291U,	// XSNMSUBQPO
    536892468U,	// XSRDPI
    536890671U,	// XSRDPIC
    536893179U,	// XSRDPIM
    536894912U,	// XSRDPIP
    536900170U,	// XSRDPIZ
    536894136U,	// XSREDP
    536895390U,	// XSRESP
    283716U,	// XSRQPI
    290559U,	// XSRQPIX
    287022U,	// XSRQPXP
    536895648U,	// XSRSP
    536894152U,	// XSRSQRTEDP
    536895406U,	// XSRSQRTESP
    536894568U,	// XSSQRTDP
    536895156U,	// XSSQRTQP
    536893815U,	// XSSQRTQPO
    536895700U,	// XSSQRTSP
    23080U,	// XSSUBDP
    24064U,	// XSSUBQP
    22850U,	// XSSUBQPO
    24365U,	// XSSUBSP
    23717U,	// XSTDIVDP
    536894578U,	// XSTSQRTDP
    2281724474U,	// XSTSTDCDP
    2281725449U,	// XSTSTDCQP
    2281725759U,	// XSTSTDCSP
    536894466U,	// XSXEXPDP
    536895127U,	// XSXEXPQP
    536894194U,	// XSXSIGDP
    536895055U,	// XSXSIGQP
    536894537U,	// XVABSDP
    536895665U,	// XVABSSP
    23149U,	// XVADDDP
    24414U,	// XVADDSP
    23585U,	// XVCMPEQDP
    17737U,	// XVCMPEQDP_rec
    24717U,	// XVCMPEQSP
    17823U,	// XVCMPEQSP_rec
    23213U,	// XVCMPGEDP
    17725U,	// XVCMPGEDP_rec
    24467U,	// XVCMPGESP
    17811U,	// XVCMPGESP_rec
    23645U,	// XVCMPGTDP
    17749U,	// XVCMPGTDP_rec
    24777U,	// XVCMPGTSP
    17842U,	// XVCMPGTSP_rec
    23443U,	// XVCPSGNDP
    24647U,	// XVCPSGNSP
    536895589U,	// XVCVDPSP
    536896557U,	// XVCVDPSXDS
    536897067U,	// XVCVDPSXWS
    536896593U,	// XVCVDPUXDS
    536897103U,	// XVCVDPUXWS
    536895599U,	// XVCVHPSP
    536894424U,	// XVCVSPDP
    536894895U,	// XVCVSPHP
    536896569U,	// XVCVSPSXDS
    536897079U,	// XVCVSPSXWS
    536896605U,	// XVCVSPUXDS
    536897115U,	// XVCVSPUXWS
    536894081U,	// XVCVSXDDP
    536895346U,	// XVCVSXDSP
    536894658U,	// XVCVSXWDP
    536895759U,	// XVCVSXWSP
    536894103U,	// XVCVUXDDP
    536895368U,	// XVCVUXDSP
    536894669U,	// XVCVUXWDP
    536895770U,	// XVCVUXWSP
    23737U,	// XVDIVDP
    24838U,	// XVDIVSP
    23532U,	// XVIEXPDP
    24697U,	// XVIEXPSP
    1744853533U,	// XVMADDADP
    1744854818U,	// XVMADDASP
    1744853885U,	// XVMADDMDP
    1744855100U,	// XVMADDMSP
    23777U,	// XVMAXDP
    24869U,	// XVMAXSP
    23463U,	// XVMINDP
    24658U,	// XVMINSP
    1744853487U,	// XVMSUBADP
    1744854772U,	// XVMSUBASP
    1744853839U,	// XVMSUBMDP
    1744855054U,	// XVMSUBMSP
    23331U,	// XVMULDP
    24546U,	// XVMULSP
    536894518U,	// XVNABSDP
    536895655U,	// XVNABSSP
    536894185U,	// XVNEGDP
    536895430U,	// XVNEGSP
    1744853510U,	// XVNMADDADP
    1744854795U,	// XVNMADDASP
    1744853862U,	// XVNMADDMDP
    1744855077U,	// XVNMADDMSP
    1744853464U,	// XVNMSUBADP
    1744854749U,	// XVNMSUBASP
    1744853816U,	// XVNMSUBMDP
    1744855031U,	// XVNMSUBMSP
    536892476U,	// XVRDPI
    536890680U,	// XVRDPIC
    536893188U,	// XVRDPIM
    536894921U,	// XVRDPIP
    536900179U,	// XVRDPIZ
    536894144U,	// XVREDP
    536895398U,	// XVRESP
    536892492U,	// XVRSPI
    536890689U,	// XVRSPIC
    536893197U,	// XVRSPIM
    536894930U,	// XVRSPIP
    536900188U,	// XVRSPIZ
    536894164U,	// XVRSQRTEDP
    536895418U,	// XVRSQRTESP
    536894600U,	// XVSQRTDP
    536895721U,	// XVSQRTSP
    23089U,	// XVSUBDP
    24374U,	// XVSUBSP
    23727U,	// XVTDIVDP
    24828U,	// XVTDIVSP
    536894589U,	// XVTSQRTDP
    536895710U,	// XVTSQRTSP
    2281724485U,	// XVTSTDCDP
    2281725770U,	// XVTSTDCSP
    536894476U,	// XVXEXPDP
    536895619U,	// XVXEXPSP
    536894204U,	// XVXSIGDP
    536895439U,	// XVXSIGSP
    536891146U,	// XXBRD
    536891859U,	// XXBRH
    536895898U,	// XXBRQ
    536898615U,	// XXBRW
    27963U,	// XXEXTRACTUW
    2818600145U,	// XXINSERTW
    20181U,	// XXLAND
    19698U,	// XXLANDC
    26897U,	// XXLEQV
    117467409U,	// XXLEQVOnes
    20189U,	// XXLNAND
    25227U,	// XXLNOR
    25220U,	// XXLOR
    19806U,	// XXLORC
    25220U,	// XXLORf
    25261U,	// XXLXOR
    117465773U,	// XXLXORdpz
    117465773U,	// XXLXORspz
    117465773U,	// XXLXORz
    27382U,	// XXMRGHW
    27424U,	// XXMRGLW
    22380U,	// XXPERM
    21268U,	// XXPERMDI
    21268U,	// XXPERMDIs
    25211U,	// XXPERMR
    22010U,	// XXSEL
    21734U,	// XXSLDWI
    21734U,	// XXSLDWIs
    352340865U,	// XXSPLTIB
    27828U,	// XXSPLTW
    27828U,	// XXSPLTWs
    183528U,	// gBC
    182568U,	// gBCA
    9747788U,	// gBCAat
    189179U,	// gBCCTR
    185886U,	// gBCCTRL
    185802U,	// gBCL
    182862U,	// gBCLA
    9747804U,	// gBCLAat
    189004U,	// gBCLR
    185879U,	// gBCLRL
    10272206U,	// gBCLat
    10272105U,	// gBCat
  };

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTR_MASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// CFENCE8
    0U,	// CLRLSLDI
    0U,	// CLRLSLDI_rec
    66U,	// CLRLSLWI
    66U,	// CLRLSLWI_rec
    32U,	// CLRRDI
    32U,	// CLRRDI_rec
    34U,	// CLRRWI
    34U,	// CLRRWI_rec
    0U,	// CP_COPY_FIRST
    0U,	// CP_COPYx
    0U,	// CP_PASTE_LAST
    0U,	// CP_PASTEx
    0U,	// DCBFL
    0U,	// DCBFLP
    0U,	// DCBFx
    0U,	// DCBTCT
    0U,	// DCBTDS
    0U,	// DCBTSTCT
    0U,	// DCBTSTDS
    0U,	// DCBTSTT
    0U,	// DCBTSTx
    0U,	// DCBTT
    0U,	// DCBTx
    0U,	// DFLOADf32
    0U,	// DFLOADf64
    0U,	// DFSTOREf32
    0U,	// DFSTOREf64
    0U,	// EXTLDI
    0U,	// EXTLDI_rec
    66U,	// EXTLWI
    66U,	// EXTLWI_rec
    0U,	// EXTRDI
    0U,	// EXTRDI_rec
    66U,	// EXTRWI
    66U,	// EXTRWI_rec
    66U,	// INSLWI
    66U,	// INSLWI_rec
    0U,	// INSRDI
    0U,	// INSRDI_rec
    66U,	// INSRWI
    66U,	// INSRWI_rec
    0U,	// LAx
    0U,	// LIWAX
    0U,	// LIWZX
    130U,	// RLWIMIbm
    130U,	// RLWIMIbm_rec
    130U,	// RLWINMbm
    130U,	// RLWINMbm_rec
    130U,	// RLWNMbm
    130U,	// RLWNMbm_rec
    32U,	// ROTRDI
    32U,	// ROTRDI_rec
    34U,	// ROTRWI
    34U,	// ROTRWI_rec
    32U,	// SLDI
    32U,	// SLDI_rec
    34U,	// SLWI
    34U,	// SLWI_rec
    0U,	// SPILLTOVSR_LD
    0U,	// SPILLTOVSR_LDX
    0U,	// SPILLTOVSR_ST
    0U,	// SPILLTOVSR_STX
    32U,	// SRDI
    32U,	// SRDI_rec
    34U,	// SRWI
    34U,	// SRWI_rec
    0U,	// STIWX
    4U,	// SUBI
    4U,	// SUBIC
    4U,	// SUBIC_rec
    4U,	// SUBIS
    0U,	// SUBPCIS
    0U,	// XFLOADf32
    0U,	// XFLOADf64
    0U,	// XFSTOREf32
    0U,	// XFSTOREf64
    38U,	// ADD4
    38U,	// ADD4O
    38U,	// ADD4O_rec
    38U,	// ADD4TLS
    38U,	// ADD4_rec
    38U,	// ADD8
    38U,	// ADD8O
    38U,	// ADD8O_rec
    38U,	// ADD8TLS
    38U,	// ADD8TLS_
    38U,	// ADD8_rec
    38U,	// ADDC
    38U,	// ADDC8
    38U,	// ADDC8O
    38U,	// ADDC8O_rec
    38U,	// ADDC8_rec
    38U,	// ADDCO
    38U,	// ADDCO_rec
    38U,	// ADDC_rec
    38U,	// ADDE
    38U,	// ADDE8
    38U,	// ADDE8O
    38U,	// ADDE8O_rec
    38U,	// ADDE8_rec
    38U,	// ADDEO
    38U,	// ADDEO_rec
    38U,	// ADDE_rec
    4U,	// ADDI
    4U,	// ADDI8
    4U,	// ADDIC
    4U,	// ADDIC8
    4U,	// ADDIC_rec
    4U,	// ADDIS
    4U,	// ADDIS8
    0U,	// ADDISdtprelHA
    0U,	// ADDISdtprelHA32
    0U,	// ADDISgotTprelHA
    0U,	// ADDIStlsgdHA
    0U,	// ADDIStlsldHA
    0U,	// ADDIStocHA
    0U,	// ADDIStocHA8
    0U,	// ADDIdtprelL
    0U,	// ADDIdtprelL32
    0U,	// ADDItlsgdL
    0U,	// ADDItlsgdL32
    0U,	// ADDItlsgdLADDR
    0U,	// ADDItlsgdLADDR32
    0U,	// ADDItlsldL
    0U,	// ADDItlsldL32
    0U,	// ADDItlsldLADDR
    0U,	// ADDItlsldLADDR32
    0U,	// ADDItocL
    0U,	// ADDME
    0U,	// ADDME8
    0U,	// ADDME8O
    0U,	// ADDME8O_rec
    0U,	// ADDME8_rec
    0U,	// ADDMEO
    0U,	// ADDMEO_rec
    0U,	// ADDME_rec
    0U,	// ADDPCIS
    0U,	// ADDZE
    0U,	// ADDZE8
    0U,	// ADDZE8O
    0U,	// ADDZE8O_rec
    0U,	// ADDZE8_rec
    0U,	// ADDZEO
    0U,	// ADDZEO_rec
    0U,	// ADDZE_rec
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    38U,	// AND
    38U,	// AND8
    38U,	// AND8_rec
    38U,	// ANDC
    38U,	// ANDC8
    38U,	// ANDC8_rec
    38U,	// ANDC_rec
    8U,	// ANDI8_rec
    8U,	// ANDIS8_rec
    8U,	// ANDIS_rec
    8U,	// ANDI_rec
    0U,	// ANDI_rec_1_EQ_BIT
    0U,	// ANDI_rec_1_EQ_BIT8
    0U,	// ANDI_rec_1_GT_BIT
    0U,	// ANDI_rec_1_GT_BIT8
    38U,	// AND_rec
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATTN
    0U,	// B
    0U,	// BA
    0U,	// BC
    0U,	// BCC
    0U,	// BCCA
    0U,	// BCCCTR
    0U,	// BCCCTR8
    0U,	// BCCCTRL
    0U,	// BCCCTRL8
    0U,	// BCCL
    0U,	// BCCLA
    0U,	// BCCLR
    0U,	// BCCLRL
    0U,	// BCCTR
    0U,	// BCCTR8
    0U,	// BCCTR8n
    0U,	// BCCTRL
    0U,	// BCCTRL8
    0U,	// BCCTRL8n
    0U,	// BCCTRLn
    0U,	// BCCTRn
    42U,	// BCDCFN_rec
    42U,	// BCDCFSQ_rec
    42U,	// BCDCFZ_rec
    38U,	// BCDCPSGN_rec
    0U,	// BCDCTN_rec
    0U,	// BCDCTSQ_rec
    42U,	// BCDCTZ_rec
    42U,	// BCDSETSGN_rec
    198U,	// BCDSR_rec
    198U,	// BCDS_rec
    198U,	// BCDTRUNC_rec
    38U,	// BCDUS_rec
    38U,	// BCDUTRUNC_rec
    0U,	// BCL
    0U,	// BCLR
    0U,	// BCLRL
    0U,	// BCLRLn
    0U,	// BCLRn
    0U,	// BCLalways
    0U,	// BCLn
    0U,	// BCTR
    0U,	// BCTR8
    0U,	// BCTRL
    0U,	// BCTRL8
    0U,	// BCTRL8_LDinto_toc
    0U,	// BCTRL_LWZinto_toc
    0U,	// BCn
    0U,	// BDNZ
    0U,	// BDNZ8
    0U,	// BDNZA
    0U,	// BDNZAm
    0U,	// BDNZAp
    0U,	// BDNZL
    0U,	// BDNZLA
    0U,	// BDNZLAm
    0U,	// BDNZLAp
    0U,	// BDNZLR
    0U,	// BDNZLR8
    0U,	// BDNZLRL
    0U,	// BDNZLRLm
    0U,	// BDNZLRLp
    0U,	// BDNZLRm
    0U,	// BDNZLRp
    0U,	// BDNZLm
    0U,	// BDNZLp
    0U,	// BDNZm
    0U,	// BDNZp
    0U,	// BDZ
    0U,	// BDZ8
    0U,	// BDZA
    0U,	// BDZAm
    0U,	// BDZAp
    0U,	// BDZL
    0U,	// BDZLA
    0U,	// BDZLAm
    0U,	// BDZLAp
    0U,	// BDZLR
    0U,	// BDZLR8
    0U,	// BDZLRL
    0U,	// BDZLRLm
    0U,	// BDZLRLp
    0U,	// BDZLRm
    0U,	// BDZLRp
    0U,	// BDZLm
    0U,	// BDZLp
    0U,	// BDZm
    0U,	// BDZp
    0U,	// BL
    0U,	// BL8
    0U,	// BL8_NOP
    0U,	// BL8_NOP_TLS
    0U,	// BL8_TLS
    0U,	// BL8_TLS_
    0U,	// BLA
    0U,	// BLA8
    0U,	// BLA8_NOP
    0U,	// BLR
    0U,	// BLR8
    0U,	// BLRL
    0U,	// BL_NOP
    0U,	// BL_TLS
    38U,	// BPERMD
    38U,	// BRINC
    0U,	// CLRBHRB
    38U,	// CMPB
    38U,	// CMPB8
    38U,	// CMPD
    4U,	// CMPDI
    38U,	// CMPEQB
    38U,	// CMPLD
    8U,	// CMPLDI
    38U,	// CMPLW
    8U,	// CMPLWI
    0U,	// CMPRB
    0U,	// CMPRB8
    38U,	// CMPW
    4U,	// CMPWI
    0U,	// CNTLZD
    0U,	// CNTLZD_rec
    0U,	// CNTLZW
    0U,	// CNTLZW8
    0U,	// CNTLZW8_rec
    0U,	// CNTLZW_rec
    0U,	// CNTTZD
    0U,	// CNTTZD_rec
    0U,	// CNTTZW
    0U,	// CNTTZW8
    0U,	// CNTTZW8_rec
    0U,	// CNTTZW_rec
    0U,	// CP_ABORT
    42U,	// CP_COPY
    42U,	// CP_COPY8
    42U,	// CP_PASTE
    42U,	// CP_PASTE8
    42U,	// CP_PASTE8_rec
    42U,	// CP_PASTE_rec
    0U,	// CR6SET
    0U,	// CR6UNSET
    38U,	// CRAND
    38U,	// CRANDC
    38U,	// CREQV
    38U,	// CRNAND
    38U,	// CRNOR
    38U,	// CROR
    38U,	// CRORC
    12U,	// CRSET
    12U,	// CRUNSET
    38U,	// CRXOR
    0U,	// CTRL_DEP
    0U,	// DARN
    0U,	// DCBA
    0U,	// DCBF
    0U,	// DCBFEP
    0U,	// DCBI
    0U,	// DCBST
    0U,	// DCBSTEP
    0U,	// DCBT
    0U,	// DCBTEP
    0U,	// DCBTST
    0U,	// DCBTSTEP
    0U,	// DCBZ
    0U,	// DCBZEP
    0U,	// DCBZL
    0U,	// DCBZLEP
    0U,	// DCCCI
    38U,	// DIVD
    38U,	// DIVDE
    38U,	// DIVDEO
    38U,	// DIVDEO_rec
    38U,	// DIVDEU
    38U,	// DIVDEUO
    38U,	// DIVDEUO_rec
    38U,	// DIVDEU_rec
    38U,	// DIVDE_rec
    38U,	// DIVDO
    38U,	// DIVDO_rec
    38U,	// DIVDU
    38U,	// DIVDUO
    38U,	// DIVDUO_rec
    38U,	// DIVDU_rec
    38U,	// DIVD_rec
    38U,	// DIVW
    38U,	// DIVWE
    38U,	// DIVWEO
    38U,	// DIVWEO_rec
    38U,	// DIVWEU
    38U,	// DIVWEUO
    38U,	// DIVWEUO_rec
    38U,	// DIVWEU_rec
    38U,	// DIVWE_rec
    38U,	// DIVWO
    38U,	// DIVWO_rec
    38U,	// DIVWU
    38U,	// DIVWUO
    38U,	// DIVWUO_rec
    38U,	// DIVWU_rec
    38U,	// DIVW_rec
    0U,	// DSS
    0U,	// DSSALL
    0U,	// DST
    0U,	// DST64
    0U,	// DSTST
    0U,	// DSTST64
    0U,	// DSTSTT
    0U,	// DSTSTT64
    0U,	// DSTT
    0U,	// DSTT64
    0U,	// DYNALLOC
    0U,	// DYNALLOC8
    0U,	// DYNAREAOFFSET
    0U,	// DYNAREAOFFSET8
    0U,	// EFDABS
    38U,	// EFDADD
    0U,	// EFDCFS
    0U,	// EFDCFSF
    0U,	// EFDCFSI
    0U,	// EFDCFSID
    0U,	// EFDCFUF
    0U,	// EFDCFUI
    0U,	// EFDCFUID
    38U,	// EFDCMPEQ
    38U,	// EFDCMPGT
    38U,	// EFDCMPLT
    0U,	// EFDCTSF
    0U,	// EFDCTSI
    0U,	// EFDCTSIDZ
    0U,	// EFDCTSIZ
    0U,	// EFDCTUF
    0U,	// EFDCTUI
    0U,	// EFDCTUIDZ
    0U,	// EFDCTUIZ
    38U,	// EFDDIV
    38U,	// EFDMUL
    0U,	// EFDNABS
    0U,	// EFDNEG
    38U,	// EFDSUB
    38U,	// EFDTSTEQ
    38U,	// EFDTSTGT
    38U,	// EFDTSTLT
    0U,	// EFSABS
    38U,	// EFSADD
    0U,	// EFSCFD
    0U,	// EFSCFSF
    0U,	// EFSCFSI
    0U,	// EFSCFUF
    0U,	// EFSCFUI
    38U,	// EFSCMPEQ
    38U,	// EFSCMPGT
    38U,	// EFSCMPLT
    0U,	// EFSCTSF
    0U,	// EFSCTSI
    0U,	// EFSCTSIZ
    0U,	// EFSCTUF
    0U,	// EFSCTUI
    0U,	// EFSCTUIZ
    38U,	// EFSDIV
    38U,	// EFSMUL
    0U,	// EFSNABS
    0U,	// EFSNEG
    38U,	// EFSSUB
    38U,	// EFSTSTEQ
    38U,	// EFSTSTGT
    38U,	// EFSTSTLT
    0U,	// EH_SjLj_LongJmp32
    0U,	// EH_SjLj_LongJmp64
    0U,	// EH_SjLj_SetJmp32
    0U,	// EH_SjLj_SetJmp64
    0U,	// EH_SjLj_Setup
    38U,	// EQV
    38U,	// EQV8
    38U,	// EQV8_rec
    38U,	// EQV_rec
    0U,	// EVABS
    46U,	// EVADDIW
    0U,	// EVADDSMIAAW
    0U,	// EVADDSSIAAW
    0U,	// EVADDUMIAAW
    0U,	// EVADDUSIAAW
    38U,	// EVADDW
    38U,	// EVAND
    38U,	// EVANDC
    38U,	// EVCMPEQ
    38U,	// EVCMPGTS
    38U,	// EVCMPGTU
    38U,	// EVCMPLTS
    38U,	// EVCMPLTU
    0U,	// EVCNTLSW
    0U,	// EVCNTLZW
    38U,	// EVDIVWS
    38U,	// EVDIVWU
    38U,	// EVEQV
    0U,	// EVEXTSB
    0U,	// EVEXTSH
    0U,	// EVFSABS
    38U,	// EVFSADD
    0U,	// EVFSCFSF
    0U,	// EVFSCFSI
    0U,	// EVFSCFUF
    0U,	// EVFSCFUI
    38U,	// EVFSCMPEQ
    38U,	// EVFSCMPGT
    38U,	// EVFSCMPLT
    0U,	// EVFSCTSF
    0U,	// EVFSCTSI
    0U,	// EVFSCTSIZ
    0U,	// EVFSCTUF
    0U,	// EVFSCTUI
    0U,	// EVFSCTUIZ
    38U,	// EVFSDIV
    38U,	// EVFSMUL
    0U,	// EVFSNABS
    0U,	// EVFSNEG
    38U,	// EVFSSUB
    38U,	// EVFSTSTEQ
    38U,	// EVFSTSTGT
    38U,	// EVFSTSTLT
    0U,	// EVLDD
    0U,	// EVLDDX
    0U,	// EVLDH
    0U,	// EVLDHX
    0U,	// EVLDW
    0U,	// EVLDWX
    0U,	// EVLHHESPLAT
    0U,	// EVLHHESPLATX
    0U,	// EVLHHOSSPLAT
    0U,	// EVLHHOSSPLATX
    0U,	// EVLHHOUSPLAT
    0U,	// EVLHHOUSPLATX
    0U,	// EVLWHE
    0U,	// EVLWHEX
    0U,	// EVLWHOS
    0U,	// EVLWHOSX
    0U,	// EVLWHOU
    0U,	// EVLWHOUX
    0U,	// EVLWHSPLAT
    0U,	// EVLWHSPLATX
    0U,	// EVLWWSPLAT
    0U,	// EVLWWSPLATX
    38U,	// EVMERGEHI
    38U,	// EVMERGEHILO
    38U,	// EVMERGELO
    38U,	// EVMERGELOHI
    38U,	// EVMHEGSMFAA
    38U,	// EVMHEGSMFAN
    38U,	// EVMHEGSMIAA
    38U,	// EVMHEGSMIAN
    38U,	// EVMHEGUMIAA
    38U,	// EVMHEGUMIAN
    38U,	// EVMHESMF
    38U,	// EVMHESMFA
    38U,	// EVMHESMFAAW
    38U,	// EVMHESMFANW
    38U,	// EVMHESMI
    38U,	// EVMHESMIA
    38U,	// EVMHESMIAAW
    38U,	// EVMHESMIANW
    38U,	// EVMHESSF
    38U,	// EVMHESSFA
    38U,	// EVMHESSFAAW
    38U,	// EVMHESSFANW
    38U,	// EVMHESSIAAW
    38U,	// EVMHESSIANW
    38U,	// EVMHEUMI
    38U,	// EVMHEUMIA
    38U,	// EVMHEUMIAAW
    38U,	// EVMHEUMIANW
    38U,	// EVMHEUSIAAW
    38U,	// EVMHEUSIANW
    38U,	// EVMHOGSMFAA
    38U,	// EVMHOGSMFAN
    38U,	// EVMHOGSMIAA
    38U,	// EVMHOGSMIAN
    38U,	// EVMHOGUMIAA
    38U,	// EVMHOGUMIAN
    38U,	// EVMHOSMF
    38U,	// EVMHOSMFA
    38U,	// EVMHOSMFAAW
    38U,	// EVMHOSMFANW
    38U,	// EVMHOSMI
    38U,	// EVMHOSMIA
    38U,	// EVMHOSMIAAW
    38U,	// EVMHOSMIANW
    38U,	// EVMHOSSF
    38U,	// EVMHOSSFA
    38U,	// EVMHOSSFAAW
    38U,	// EVMHOSSFANW
    38U,	// EVMHOSSIAAW
    38U,	// EVMHOSSIANW
    38U,	// EVMHOUMI
    38U,	// EVMHOUMIA
    38U,	// EVMHOUMIAAW
    38U,	// EVMHOUMIANW
    38U,	// EVMHOUSIAAW
    38U,	// EVMHOUSIANW
    0U,	// EVMRA
    38U,	// EVMWHSMF
    38U,	// EVMWHSMFA
    38U,	// EVMWHSMI
    38U,	// EVMWHSMIA
    38U,	// EVMWHSSF
    38U,	// EVMWHSSFA
    38U,	// EVMWHUMI
    38U,	// EVMWHUMIA
    38U,	// EVMWLSMIAAW
    38U,	// EVMWLSMIANW
    38U,	// EVMWLSSIAAW
    38U,	// EVMWLSSIANW
    38U,	// EVMWLUMI
    38U,	// EVMWLUMIA
    38U,	// EVMWLUMIAAW
    38U,	// EVMWLUMIANW
    38U,	// EVMWLUSIAAW
    38U,	// EVMWLUSIANW
    38U,	// EVMWSMF
    38U,	// EVMWSMFA
    38U,	// EVMWSMFAA
    38U,	// EVMWSMFAN
    38U,	// EVMWSMI
    38U,	// EVMWSMIA
    38U,	// EVMWSMIAA
    38U,	// EVMWSMIAN
    38U,	// EVMWSSF
    38U,	// EVMWSSFA
    38U,	// EVMWSSFAA
    38U,	// EVMWSSFAN
    38U,	// EVMWUMI
    38U,	// EVMWUMIA
    38U,	// EVMWUMIAA
    38U,	// EVMWUMIAN
    38U,	// EVNAND
    0U,	// EVNEG
    38U,	// EVNOR
    38U,	// EVOR
    38U,	// EVORC
    38U,	// EVRLW
    34U,	// EVRLWI
    0U,	// EVRNDW
    0U,	// EVSEL
    38U,	// EVSLW
    34U,	// EVSLWI
    0U,	// EVSPLATFI
    0U,	// EVSPLATI
    34U,	// EVSRWIS
    34U,	// EVSRWIU
    38U,	// EVSRWS
    38U,	// EVSRWU
    0U,	// EVSTDD
    0U,	// EVSTDDX
    0U,	// EVSTDH
    0U,	// EVSTDHX
    0U,	// EVSTDW
    0U,	// EVSTDWX
    0U,	// EVSTWHE
    0U,	// EVSTWHEX
    0U,	// EVSTWHO
    0U,	// EVSTWHOX
    0U,	// EVSTWWE
    0U,	// EVSTWWEX
    0U,	// EVSTWWO
    0U,	// EVSTWWOX
    0U,	// EVSUBFSMIAAW
    0U,	// EVSUBFSSIAAW
    0U,	// EVSUBFUMIAAW
    0U,	// EVSUBFUSIAAW
    38U,	// EVSUBFW
    0U,	// EVSUBIFW
    38U,	// EVXOR
    0U,	// EXTSB
    0U,	// EXTSB8
    0U,	// EXTSB8_32_64
    0U,	// EXTSB8_rec
    0U,	// EXTSB_rec
    0U,	// EXTSH
    0U,	// EXTSH8
    0U,	// EXTSH8_32_64
    0U,	// EXTSH8_rec
    0U,	// EXTSH_rec
    0U,	// EXTSW
    32U,	// EXTSWSLI
    32U,	// EXTSWSLI_32_64
    32U,	// EXTSWSLI_32_64_rec
    32U,	// EXTSWSLI_rec
    0U,	// EXTSW_32
    0U,	// EXTSW_32_64
    0U,	// EXTSW_32_64_rec
    0U,	// EXTSW_rec
    0U,	// EnforceIEIO
    0U,	// FABSD
    0U,	// FABSD_rec
    0U,	// FABSS
    0U,	// FABSS_rec
    38U,	// FADD
    38U,	// FADDS
    38U,	// FADDS_rec
    38U,	// FADD_rec
    0U,	// FADDrtz
    0U,	// FCFID
    0U,	// FCFIDS
    0U,	// FCFIDS_rec
    0U,	// FCFIDU
    0U,	// FCFIDUS
    0U,	// FCFIDUS_rec
    0U,	// FCFIDU_rec
    0U,	// FCFID_rec
    38U,	// FCMPUD
    38U,	// FCMPUS
    38U,	// FCPSGND
    38U,	// FCPSGND_rec
    38U,	// FCPSGNS
    38U,	// FCPSGNS_rec
    0U,	// FCTID
    0U,	// FCTIDU
    0U,	// FCTIDUZ
    0U,	// FCTIDUZ_rec
    0U,	// FCTIDU_rec
    0U,	// FCTIDZ
    0U,	// FCTIDZ_rec
    0U,	// FCTID_rec
    0U,	// FCTIW
    0U,	// FCTIWU
    0U,	// FCTIWUZ
    0U,	// FCTIWUZ_rec
    0U,	// FCTIWU_rec
    0U,	// FCTIWZ
    0U,	// FCTIWZ_rec
    0U,	// FCTIW_rec
    38U,	// FDIV
    38U,	// FDIVS
    38U,	// FDIVS_rec
    38U,	// FDIV_rec
    134U,	// FMADD
    134U,	// FMADDS
    134U,	// FMADDS_rec
    134U,	// FMADD_rec
    0U,	// FMR
    0U,	// FMR_rec
    134U,	// FMSUB
    134U,	// FMSUBS
    134U,	// FMSUBS_rec
    134U,	// FMSUB_rec
    38U,	// FMUL
    38U,	// FMULS
    38U,	// FMULS_rec
    38U,	// FMUL_rec
    0U,	// FNABSD
    0U,	// FNABSD_rec
    0U,	// FNABSS
    0U,	// FNABSS_rec
    0U,	// FNEGD
    0U,	// FNEGD_rec
    0U,	// FNEGS
    0U,	// FNEGS_rec
    134U,	// FNMADD
    134U,	// FNMADDS
    134U,	// FNMADDS_rec
    134U,	// FNMADD_rec
    134U,	// FNMSUB
    134U,	// FNMSUBS
    134U,	// FNMSUBS_rec
    134U,	// FNMSUB_rec
    0U,	// FRE
    0U,	// FRES
    0U,	// FRES_rec
    0U,	// FRE_rec
    0U,	// FRIMD
    0U,	// FRIMD_rec
    0U,	// FRIMS
    0U,	// FRIMS_rec
    0U,	// FRIND
    0U,	// FRIND_rec
    0U,	// FRINS
    0U,	// FRINS_rec
    0U,	// FRIPD
    0U,	// FRIPD_rec
    0U,	// FRIPS
    0U,	// FRIPS_rec
    0U,	// FRIZD
    0U,	// FRIZD_rec
    0U,	// FRIZS
    0U,	// FRIZS_rec
    0U,	// FRSP
    0U,	// FRSP_rec
    0U,	// FRSQRTE
    0U,	// FRSQRTES
    0U,	// FRSQRTES_rec
    0U,	// FRSQRTE_rec
    134U,	// FSELD
    134U,	// FSELD_rec
    134U,	// FSELS
    134U,	// FSELS_rec
    0U,	// FSQRT
    0U,	// FSQRTS
    0U,	// FSQRTS_rec
    0U,	// FSQRT_rec
    38U,	// FSUB
    38U,	// FSUBS
    38U,	// FSUBS_rec
    38U,	// FSUB_rec
    38U,	// FTDIV
    0U,	// FTSQRT
    0U,	// GETtlsADDR
    0U,	// GETtlsADDR32
    0U,	// GETtlsldADDR
    0U,	// GETtlsldADDR32
    0U,	// HRFID
    0U,	// ICBI
    0U,	// ICBIEP
    0U,	// ICBLC
    0U,	// ICBLQ
    0U,	// ICBT
    0U,	// ICBTLS
    0U,	// ICCCI
    134U,	// ISEL
    134U,	// ISEL8
    0U,	// ISYNC
    0U,	// LA
    0U,	// LBARX
    0U,	// LBARXL
    0U,	// LBEPX
    0U,	// LBZ
    0U,	// LBZ8
    38U,	// LBZCIX
    0U,	// LBZU
    0U,	// LBZU8
    0U,	// LBZUX
    0U,	// LBZUX8
    0U,	// LBZX
    0U,	// LBZX8
    38U,	// LBZXTLS
    38U,	// LBZXTLS_
    38U,	// LBZXTLS_32
    0U,	// LD
    0U,	// LDARX
    0U,	// LDARXL
    34U,	// LDAT
    0U,	// LDBRX
    38U,	// LDCIX
    0U,	// LDMX
    0U,	// LDU
    0U,	// LDUX
    0U,	// LDX
    38U,	// LDXTLS
    38U,	// LDXTLS_
    0U,	// LDgotTprelL
    0U,	// LDgotTprelL32
    0U,	// LDtoc
    0U,	// LDtocBA
    0U,	// LDtocCPT
    0U,	// LDtocJTI
    0U,	// LDtocL
    0U,	// LFD
    0U,	// LFDEPX
    0U,	// LFDU
    0U,	// LFDUX
    0U,	// LFDX
    0U,	// LFIWAX
    0U,	// LFIWZX
    0U,	// LFS
    0U,	// LFSU
    0U,	// LFSUX
    0U,	// LFSX
    0U,	// LHA
    0U,	// LHA8
    0U,	// LHARX
    0U,	// LHARXL
    0U,	// LHAU
    0U,	// LHAU8
    0U,	// LHAUX
    0U,	// LHAUX8
    0U,	// LHAX
    0U,	// LHAX8
    0U,	// LHBRX
    0U,	// LHBRX8
    0U,	// LHEPX
    0U,	// LHZ
    0U,	// LHZ8
    38U,	// LHZCIX
    0U,	// LHZU
    0U,	// LHZU8
    0U,	// LHZUX
    0U,	// LHZUX8
    0U,	// LHZX
    0U,	// LHZX8
    38U,	// LHZXTLS
    38U,	// LHZXTLS_
    38U,	// LHZXTLS_32
    0U,	// LI
    0U,	// LI8
    0U,	// LIS
    0U,	// LIS8
    0U,	// LMW
    34U,	// LSWI
    0U,	// LVEBX
    0U,	// LVEHX
    0U,	// LVEWX
    0U,	// LVSL
    0U,	// LVSR
    0U,	// LVX
    0U,	// LVXL
    0U,	// LWA
    0U,	// LWARX
    0U,	// LWARXL
    34U,	// LWAT
    0U,	// LWAUX
    0U,	// LWAX
    0U,	// LWAX_32
    0U,	// LWA_32
    0U,	// LWBRX
    0U,	// LWBRX8
    0U,	// LWEPX
    0U,	// LWZ
    0U,	// LWZ8
    38U,	// LWZCIX
    0U,	// LWZU
    0U,	// LWZU8
    0U,	// LWZUX
    0U,	// LWZUX8
    0U,	// LWZX
    0U,	// LWZX8
    38U,	// LWZXTLS
    38U,	// LWZXTLS_
    38U,	// LWZXTLS_32
    0U,	// LWZtoc
    0U,	// LWZtocL
    0U,	// LXSD
    0U,	// LXSDX
    0U,	// LXSIBZX
    0U,	// LXSIHZX
    0U,	// LXSIWAX
    0U,	// LXSIWZX
    0U,	// LXSSP
    0U,	// LXSSPX
    0U,	// LXV
    0U,	// LXVB16X
    0U,	// LXVD2X
    0U,	// LXVDSX
    0U,	// LXVH8X
    38U,	// LXVL
    38U,	// LXVLL
    0U,	// LXVW4X
    0U,	// LXVWSX
    0U,	// LXVX
    134U,	// MADDHD
    134U,	// MADDHDU
    134U,	// MADDLD
    134U,	// MADDLD8
    0U,	// MBAR
    0U,	// MCRF
    0U,	// MCRFS
    0U,	// MCRXRX
    0U,	// MFBHRBE
    0U,	// MFCR
    0U,	// MFCR8
    0U,	// MFCTR
    0U,	// MFCTR8
    0U,	// MFDCR
    0U,	// MFFS
    0U,	// MFFSCDRN
    0U,	// MFFSCDRNI
    0U,	// MFFSCE
    0U,	// MFFSCRN
    0U,	// MFFSCRNI
    0U,	// MFFSL
    0U,	// MFFS_rec
    0U,	// MFLR
    0U,	// MFLR8
    0U,	// MFMSR
    0U,	// MFOCRF
    0U,	// MFOCRF8
    0U,	// MFPMR
    0U,	// MFSPR
    0U,	// MFSPR8
    0U,	// MFSR
    0U,	// MFSRIN
    0U,	// MFTB
    0U,	// MFTB8
    0U,	// MFVRD
    0U,	// MFVRSAVE
    0U,	// MFVRSAVEv
    0U,	// MFVRWZ
    0U,	// MFVSCR
    0U,	// MFVSRD
    0U,	// MFVSRLD
    0U,	// MFVSRWZ
    38U,	// MODSD
    38U,	// MODSW
    38U,	// MODUD
    38U,	// MODUW
    0U,	// MSGSYNC
    0U,	// MSYNC
    0U,	// MTCRF
    0U,	// MTCRF8
    0U,	// MTCTR
    0U,	// MTCTR8
    0U,	// MTCTR8loop
    0U,	// MTCTRloop
    0U,	// MTDCR
    0U,	// MTFSB0
    0U,	// MTFSB1
    134U,	// MTFSF
    38U,	// MTFSFI
    38U,	// MTFSFI_rec
    134U,	// MTFSF_rec
    0U,	// MTFSFb
    0U,	// MTLR
    0U,	// MTLR8
    0U,	// MTMSR
    0U,	// MTMSRD
    0U,	// MTOCRF
    0U,	// MTOCRF8
    0U,	// MTPMR
    0U,	// MTSPR
    0U,	// MTSPR8
    0U,	// MTSR
    0U,	// MTSRIN
    0U,	// MTVRD
    0U,	// MTVRSAVE
    0U,	// MTVRSAVEv
    0U,	// MTVRWA
    0U,	// MTVRWZ
    0U,	// MTVSCR
    0U,	// MTVSRD
    38U,	// MTVSRDD
    0U,	// MTVSRWA
    0U,	// MTVSRWS
    0U,	// MTVSRWZ
    38U,	// MULHD
    38U,	// MULHDU
    38U,	// MULHDU_rec
    38U,	// MULHD_rec
    38U,	// MULHW
    38U,	// MULHWU
    38U,	// MULHWU_rec
    38U,	// MULHW_rec
    38U,	// MULLD
    38U,	// MULLDO
    38U,	// MULLDO_rec
    38U,	// MULLD_rec
    4U,	// MULLI
    4U,	// MULLI8
    38U,	// MULLW
    38U,	// MULLWO
    38U,	// MULLWO_rec
    38U,	// MULLW_rec
    0U,	// MoveGOTtoLR
    0U,	// MovePCtoLR
    0U,	// MovePCtoLR8
    38U,	// NAND
    38U,	// NAND8
    38U,	// NAND8_rec
    38U,	// NAND_rec
    0U,	// NAP
    0U,	// NEG
    0U,	// NEG8
    0U,	// NEG8O
    0U,	// NEG8O_rec
    0U,	// NEG8_rec
    0U,	// NEGO
    0U,	// NEGO_rec
    0U,	// NEG_rec
    0U,	// NOP
    0U,	// NOP_GT_PWR6
    0U,	// NOP_GT_PWR7
    38U,	// NOR
    38U,	// NOR8
    38U,	// NOR8_rec
    38U,	// NOR_rec
    38U,	// OR
    38U,	// OR8
    38U,	// OR8_rec
    38U,	// ORC
    38U,	// ORC8
    38U,	// ORC8_rec
    38U,	// ORC_rec
    8U,	// ORI
    8U,	// ORI8
    8U,	// ORIS
    8U,	// ORIS8
    38U,	// OR_rec
    0U,	// POPCNTB
    0U,	// POPCNTD
    0U,	// POPCNTW
    0U,	// PPC32GOT
    0U,	// PPC32PICGOT
    262U,	// QVALIGNI
    262U,	// QVALIGNIb
    262U,	// QVALIGNIs
    16U,	// QVESPLATI
    16U,	// QVESPLATIb
    16U,	// QVESPLATIs
    0U,	// QVFABS
    0U,	// QVFABSs
    38U,	// QVFADD
    38U,	// QVFADDS
    38U,	// QVFADDSs
    0U,	// QVFCFID
    0U,	// QVFCFIDS
    0U,	// QVFCFIDU
    0U,	// QVFCFIDUS
    0U,	// QVFCFIDb
    38U,	// QVFCMPEQ
    38U,	// QVFCMPEQb
    38U,	// QVFCMPEQbs
    38U,	// QVFCMPGT
    38U,	// QVFCMPGTb
    38U,	// QVFCMPGTbs
    38U,	// QVFCMPLT
    38U,	// QVFCMPLTb
    38U,	// QVFCMPLTbs
    38U,	// QVFCPSGN
    38U,	// QVFCPSGNs
    0U,	// QVFCTID
    0U,	// QVFCTIDU
    0U,	// QVFCTIDUZ
    0U,	// QVFCTIDZ
    0U,	// QVFCTIDb
    0U,	// QVFCTIW
    0U,	// QVFCTIWU
    0U,	// QVFCTIWUZ
    0U,	// QVFCTIWZ
    326U,	// QVFLOGICAL
    326U,	// QVFLOGICALb
    326U,	// QVFLOGICALs
    18U,	// QVFMADD
    18U,	// QVFMADDS
    18U,	// QVFMADDSs
    0U,	// QVFMR
    0U,	// QVFMRb
    0U,	// QVFMRs
    18U,	// QVFMSUB
    18U,	// QVFMSUBS
    18U,	// QVFMSUBSs
    38U,	// QVFMUL
    38U,	// QVFMULS
    38U,	// QVFMULSs
    0U,	// QVFNABS
    0U,	// QVFNABSs
    0U,	// QVFNEG
    0U,	// QVFNEGs
    18U,	// QVFNMADD
    18U,	// QVFNMADDS
    18U,	// QVFNMADDSs
    18U,	// QVFNMSUB
    18U,	// QVFNMSUBS
    18U,	// QVFNMSUBSs
    134U,	// QVFPERM
    134U,	// QVFPERMs
    0U,	// QVFRE
    0U,	// QVFRES
    0U,	// QVFRESs
    0U,	// QVFRIM
    0U,	// QVFRIMs
    0U,	// QVFRIN
    0U,	// QVFRINs
    0U,	// QVFRIP
    0U,	// QVFRIPs
    0U,	// QVFRIZ
    0U,	// QVFRIZs
    0U,	// QVFRSP
    0U,	// QVFRSPs
    0U,	// QVFRSQRTE
    0U,	// QVFRSQRTES
    0U,	// QVFRSQRTESs
    18U,	// QVFSEL
    18U,	// QVFSELb
    18U,	// QVFSELbb
    18U,	// QVFSELbs
    38U,	// QVFSUB
    38U,	// QVFSUBS
    38U,	// QVFSUBSs
    38U,	// QVFTSTNAN
    38U,	// QVFTSTNANb
    38U,	// QVFTSTNANbs
    18U,	// QVFXMADD
    18U,	// QVFXMADDS
    38U,	// QVFXMUL
    38U,	// QVFXMULS
    18U,	// QVFXXCPNMADD
    18U,	// QVFXXCPNMADDS
    18U,	// QVFXXMADD
    18U,	// QVFXXMADDS
    18U,	// QVFXXNPMADD
    18U,	// QVFXXNPMADDS
    0U,	// QVGPCI
    0U,	// QVLFCDUX
    0U,	// QVLFCDUXA
    0U,	// QVLFCDX
    0U,	// QVLFCDXA
    0U,	// QVLFCSUX
    0U,	// QVLFCSUXA
    0U,	// QVLFCSX
    0U,	// QVLFCSXA
    0U,	// QVLFCSXs
    0U,	// QVLFDUX
    0U,	// QVLFDUXA
    0U,	// QVLFDX
    0U,	// QVLFDXA
    0U,	// QVLFDXb
    0U,	// QVLFIWAX
    0U,	// QVLFIWAXA
    0U,	// QVLFIWZX
    0U,	// QVLFIWZXA
    0U,	// QVLFSUX
    0U,	// QVLFSUXA
    0U,	// QVLFSX
    0U,	// QVLFSXA
    0U,	// QVLFSXb
    0U,	// QVLFSXs
    0U,	// QVLPCLDX
    0U,	// QVLPCLSX
    0U,	// QVLPCLSXint
    0U,	// QVLPCRDX
    0U,	// QVLPCRSX
    0U,	// QVSTFCDUX
    0U,	// QVSTFCDUXA
    0U,	// QVSTFCDUXI
    0U,	// QVSTFCDUXIA
    0U,	// QVSTFCDX
    0U,	// QVSTFCDXA
    0U,	// QVSTFCDXI
    0U,	// QVSTFCDXIA
    0U,	// QVSTFCSUX
    0U,	// QVSTFCSUXA
    0U,	// QVSTFCSUXI
    0U,	// QVSTFCSUXIA
    0U,	// QVSTFCSX
    0U,	// QVSTFCSXA
    0U,	// QVSTFCSXI
    0U,	// QVSTFCSXIA
    0U,	// QVSTFCSXs
    0U,	// QVSTFDUX
    0U,	// QVSTFDUXA
    0U,	// QVSTFDUXI
    0U,	// QVSTFDUXIA
    0U,	// QVSTFDX
    0U,	// QVSTFDXA
    0U,	// QVSTFDXI
    0U,	// QVSTFDXIA
    0U,	// QVSTFDXb
    0U,	// QVSTFIWX
    0U,	// QVSTFIWXA
    0U,	// QVSTFSUX
    0U,	// QVSTFSUXA
    0U,	// QVSTFSUXI
    0U,	// QVSTFSUXIA
    0U,	// QVSTFSUXs
    0U,	// QVSTFSX
    0U,	// QVSTFSXA
    0U,	// QVSTFSXI
    0U,	// QVSTFSXIA
    0U,	// QVSTFSXs
    0U,	// RESTORE_CR
    0U,	// RESTORE_CRBIT
    0U,	// RESTORE_VRSAVE
    0U,	// RFCI
    0U,	// RFDI
    0U,	// RFEBB
    0U,	// RFI
    0U,	// RFID
    0U,	// RFMCI
    6U,	// RLDCL
    6U,	// RLDCL_rec
    6U,	// RLDCR
    6U,	// RLDCR_rec
    0U,	// RLDIC
    0U,	// RLDICL
    0U,	// RLDICL_32
    0U,	// RLDICL_32_64
    0U,	// RLDICL_32_rec
    0U,	// RLDICL_rec
    0U,	// RLDICR
    0U,	// RLDICR_32
    0U,	// RLDICR_rec
    0U,	// RLDIC_rec
    0U,	// RLDIMI
    0U,	// RLDIMI_rec
    0U,	// RLWIMI
    0U,	// RLWIMI8
    0U,	// RLWIMI8_rec
    0U,	// RLWIMI_rec
    578U,	// RLWINM
    578U,	// RLWINM8
    578U,	// RLWINM8_rec
    578U,	// RLWINM_rec
    582U,	// RLWNM
    582U,	// RLWNM8
    582U,	// RLWNM8_rec
    582U,	// RLWNM_rec
    0U,	// ReadTB
    0U,	// SC
    0U,	// SELECT_CC_F16
    0U,	// SELECT_CC_F4
    0U,	// SELECT_CC_F8
    0U,	// SELECT_CC_I4
    0U,	// SELECT_CC_I8
    0U,	// SELECT_CC_QBRC
    0U,	// SELECT_CC_QFRC
    0U,	// SELECT_CC_QSRC
    0U,	// SELECT_CC_SPE
    0U,	// SELECT_CC_SPE4
    0U,	// SELECT_CC_VRRC
    0U,	// SELECT_CC_VSFRC
    0U,	// SELECT_CC_VSRC
    0U,	// SELECT_CC_VSSRC
    0U,	// SELECT_F16
    0U,	// SELECT_F4
    0U,	// SELECT_F8
    0U,	// SELECT_I4
    0U,	// SELECT_I8
    0U,	// SELECT_QBRC
    0U,	// SELECT_QFRC
    0U,	// SELECT_QSRC
    0U,	// SELECT_SPE
    0U,	// SELECT_SPE4
    0U,	// SELECT_VRRC
    0U,	// SELECT_VSFRC
    0U,	// SELECT_VSRC
    0U,	// SELECT_VSSRC
    0U,	// SETB
    0U,	// SETB8
    0U,	// SETRND
    0U,	// SETRNDi
    0U,	// SLBFEE_rec
    0U,	// SLBIA
    0U,	// SLBIE
    0U,	// SLBIEG
    0U,	// SLBMFEE
    0U,	// SLBMFEV
    0U,	// SLBMTE
    0U,	// SLBSYNC
    38U,	// SLD
    38U,	// SLD_rec
    38U,	// SLW
    38U,	// SLW8
    38U,	// SLW8_rec
    38U,	// SLW_rec
    0U,	// SPELWZ
    0U,	// SPELWZX
    0U,	// SPESTW
    0U,	// SPESTWX
    0U,	// SPILL_CR
    0U,	// SPILL_CRBIT
    0U,	// SPILL_VRSAVE
    38U,	// SRAD
    32U,	// SRADI
    32U,	// SRADI_32
    32U,	// SRADI_rec
    38U,	// SRAD_rec
    38U,	// SRAW
    34U,	// SRAWI
    34U,	// SRAWI_rec
    38U,	// SRAW_rec
    38U,	// SRD
    38U,	// SRD_rec
    38U,	// SRW
    38U,	// SRW8
    38U,	// SRW8_rec
    38U,	// SRW_rec
    0U,	// STB
    0U,	// STB8
    38U,	// STBCIX
    0U,	// STBCX
    0U,	// STBEPX
    0U,	// STBU
    0U,	// STBU8
    0U,	// STBUX
    0U,	// STBUX8
    0U,	// STBX
    0U,	// STBX8
    38U,	// STBXTLS
    38U,	// STBXTLS_
    38U,	// STBXTLS_32
    0U,	// STD
    34U,	// STDAT
    0U,	// STDBRX
    38U,	// STDCIX
    0U,	// STDCX
    0U,	// STDU
    0U,	// STDUX
    0U,	// STDX
    38U,	// STDXTLS
    38U,	// STDXTLS_
    0U,	// STFD
    0U,	// STFDEPX
    0U,	// STFDU
    0U,	// STFDUX
    0U,	// STFDX
    0U,	// STFIWX
    0U,	// STFS
    0U,	// STFSU
    0U,	// STFSUX
    0U,	// STFSX
    0U,	// STH
    0U,	// STH8
    0U,	// STHBRX
    38U,	// STHCIX
    0U,	// STHCX
    0U,	// STHEPX
    0U,	// STHU
    0U,	// STHU8
    0U,	// STHUX
    0U,	// STHUX8
    0U,	// STHX
    0U,	// STHX8
    38U,	// STHXTLS
    38U,	// STHXTLS_
    38U,	// STHXTLS_32
    0U,	// STMW
    0U,	// STOP
    34U,	// STSWI
    0U,	// STVEBX
    0U,	// STVEHX
    0U,	// STVEWX
    0U,	// STVX
    0U,	// STVXL
    0U,	// STW
    0U,	// STW8
    34U,	// STWAT
    0U,	// STWBRX
    38U,	// STWCIX
    0U,	// STWCX
    0U,	// STWEPX
    0U,	// STWU
    0U,	// STWU8
    0U,	// STWUX
    0U,	// STWUX8
    0U,	// STWX
    0U,	// STWX8
    38U,	// STWXTLS
    38U,	// STWXTLS_
    38U,	// STWXTLS_32
    0U,	// STXSD
    0U,	// STXSDX
    0U,	// STXSIBX
    0U,	// STXSIBXv
    0U,	// STXSIHX
    0U,	// STXSIHXv
    0U,	// STXSIWX
    0U,	// STXSSP
    0U,	// STXSSPX
    0U,	// STXV
    0U,	// STXVB16X
    0U,	// STXVD2X
    0U,	// STXVH8X
    38U,	// STXVL
    38U,	// STXVLL
    0U,	// STXVW4X
    0U,	// STXVX
    38U,	// SUBF
    38U,	// SUBF8
    38U,	// SUBF8O
    38U,	// SUBF8O_rec
    38U,	// SUBF8_rec
    38U,	// SUBFC
    38U,	// SUBFC8
    38U,	// SUBFC8O
    38U,	// SUBFC8O_rec
    38U,	// SUBFC8_rec
    38U,	// SUBFCO
    38U,	// SUBFCO_rec
    38U,	// SUBFC_rec
    38U,	// SUBFE
    38U,	// SUBFE8
    38U,	// SUBFE8O
    38U,	// SUBFE8O_rec
    38U,	// SUBFE8_rec
    38U,	// SUBFEO
    38U,	// SUBFEO_rec
    38U,	// SUBFE_rec
    4U,	// SUBFIC
    4U,	// SUBFIC8
    0U,	// SUBFME
    0U,	// SUBFME8
    0U,	// SUBFME8O
    0U,	// SUBFME8O_rec
    0U,	// SUBFME8_rec
    0U,	// SUBFMEO
    0U,	// SUBFMEO_rec
    0U,	// SUBFME_rec
    38U,	// SUBFO
    38U,	// SUBFO_rec
    0U,	// SUBFZE
    0U,	// SUBFZE8
    0U,	// SUBFZE8O
    0U,	// SUBFZE8O_rec
    0U,	// SUBFZE8_rec
    0U,	// SUBFZEO
    0U,	// SUBFZEO_rec
    0U,	// SUBFZE_rec
    38U,	// SUBF_rec
    0U,	// SYNC
    0U,	// TABORT
    38U,	// TABORTDC
    34U,	// TABORTDCI
    38U,	// TABORTWC
    34U,	// TABORTWCI
    0U,	// TAILB
    0U,	// TAILB8
    0U,	// TAILBA
    0U,	// TAILBA8
    0U,	// TAILBCTR
    0U,	// TAILBCTR8
    0U,	// TBEGIN
    0U,	// TBEGIN_RET
    0U,	// TCHECK
    0U,	// TCHECK_RET
    0U,	// TCRETURNai
    0U,	// TCRETURNai8
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi8
    0U,	// TCRETURNri
    0U,	// TCRETURNri8
    38U,	// TD
    4U,	// TDI
    0U,	// TEND
    0U,	// TLBIA
    0U,	// TLBIE
    0U,	// TLBIEL
    0U,	// TLBIVAX
    0U,	// TLBLD
    0U,	// TLBLI
    0U,	// TLBRE
    38U,	// TLBRE2
    0U,	// TLBSX
    38U,	// TLBSX2
    38U,	// TLBSX2D
    0U,	// TLBSYNC
    0U,	// TLBWE
    38U,	// TLBWE2
    0U,	// TRAP
    0U,	// TRECHKPT
    0U,	// TRECLAIM
    0U,	// TSR
    38U,	// TW
    4U,	// TWI
    0U,	// UNENCODED_NOP
    0U,	// UPDATE_VRSAVE
    0U,	// UpdateGBR
    38U,	// VABSDUB
    38U,	// VABSDUH
    38U,	// VABSDUW
    38U,	// VADDCUQ
    38U,	// VADDCUW
    134U,	// VADDECUQ
    134U,	// VADDEUQM
    38U,	// VADDFP
    38U,	// VADDSBS
    38U,	// VADDSHS
    38U,	// VADDSWS
    38U,	// VADDUBM
    38U,	// VADDUBS
    38U,	// VADDUDM
    38U,	// VADDUHM
    38U,	// VADDUHS
    38U,	// VADDUQM
    38U,	// VADDUWM
    38U,	// VADDUWS
    38U,	// VAND
    38U,	// VANDC
    38U,	// VAVGSB
    38U,	// VAVGSH
    38U,	// VAVGSW
    38U,	// VAVGUB
    38U,	// VAVGUH
    38U,	// VAVGUW
    38U,	// VBPERMD
    38U,	// VBPERMQ
    1U,	// VCFSX
    1U,	// VCFSX_0
    1U,	// VCFUX
    1U,	// VCFUX_0
    38U,	// VCIPHER
    38U,	// VCIPHERLAST
    0U,	// VCLZB
    0U,	// VCLZD
    0U,	// VCLZH
    0U,	// VCLZLSBB
    0U,	// VCLZW
    38U,	// VCMPBFP
    38U,	// VCMPBFP_rec
    38U,	// VCMPEQFP
    38U,	// VCMPEQFP_rec
    38U,	// VCMPEQUB
    38U,	// VCMPEQUB_rec
    38U,	// VCMPEQUD
    38U,	// VCMPEQUD_rec
    38U,	// VCMPEQUH
    38U,	// VCMPEQUH_rec
    38U,	// VCMPEQUW
    38U,	// VCMPEQUW_rec
    38U,	// VCMPGEFP
    38U,	// VCMPGEFP_rec
    38U,	// VCMPGTFP
    38U,	// VCMPGTFP_rec
    38U,	// VCMPGTSB
    38U,	// VCMPGTSB_rec
    38U,	// VCMPGTSD
    38U,	// VCMPGTSD_rec
    38U,	// VCMPGTSH
    38U,	// VCMPGTSH_rec
    38U,	// VCMPGTSW
    38U,	// VCMPGTSW_rec
    38U,	// VCMPGTUB
    38U,	// VCMPGTUB_rec
    38U,	// VCMPGTUD
    38U,	// VCMPGTUD_rec
    38U,	// VCMPGTUH
    38U,	// VCMPGTUH_rec
    38U,	// VCMPGTUW
    38U,	// VCMPGTUW_rec
    38U,	// VCMPNEB
    38U,	// VCMPNEB_rec
    38U,	// VCMPNEH
    38U,	// VCMPNEH_rec
    38U,	// VCMPNEW
    38U,	// VCMPNEW_rec
    38U,	// VCMPNEZB
    38U,	// VCMPNEZB_rec
    38U,	// VCMPNEZH
    38U,	// VCMPNEZH_rec
    38U,	// VCMPNEZW
    38U,	// VCMPNEZW_rec
    1U,	// VCTSXS
    1U,	// VCTSXS_0
    1U,	// VCTUXS
    1U,	// VCTUXS_0
    0U,	// VCTZB
    0U,	// VCTZD
    0U,	// VCTZH
    0U,	// VCTZLSBB
    0U,	// VCTZW
    38U,	// VEQV
    0U,	// VEXPTEFP
    1U,	// VEXTRACTD
    1U,	// VEXTRACTUB
    1U,	// VEXTRACTUH
    1U,	// VEXTRACTUW
    0U,	// VEXTSB2D
    0U,	// VEXTSB2Ds
    0U,	// VEXTSB2W
    0U,	// VEXTSB2Ws
    0U,	// VEXTSH2D
    0U,	// VEXTSH2Ds
    0U,	// VEXTSH2W
    0U,	// VEXTSH2Ws
    0U,	// VEXTSW2D
    0U,	// VEXTSW2Ds
    38U,	// VEXTUBLX
    38U,	// VEXTUBRX
    38U,	// VEXTUHLX
    38U,	// VEXTUHRX
    38U,	// VEXTUWLX
    38U,	// VEXTUWRX
    0U,	// VGBBD
    0U,	// VINSERTB
    1U,	// VINSERTD
    0U,	// VINSERTH
    1U,	// VINSERTW
    0U,	// VLOGEFP
    134U,	// VMADDFP
    38U,	// VMAXFP
    38U,	// VMAXSB
    38U,	// VMAXSD
    38U,	// VMAXSH
    38U,	// VMAXSW
    38U,	// VMAXUB
    38U,	// VMAXUD
    38U,	// VMAXUH
    38U,	// VMAXUW
    134U,	// VMHADDSHS
    134U,	// VMHRADDSHS
    38U,	// VMINFP
    38U,	// VMINSB
    38U,	// VMINSD
    38U,	// VMINSH
    38U,	// VMINSW
    38U,	// VMINUB
    38U,	// VMINUD
    38U,	// VMINUH
    38U,	// VMINUW
    134U,	// VMLADDUHM
    38U,	// VMRGEW
    38U,	// VMRGHB
    38U,	// VMRGHH
    38U,	// VMRGHW
    38U,	// VMRGLB
    38U,	// VMRGLH
    38U,	// VMRGLW
    38U,	// VMRGOW
    134U,	// VMSUMMBM
    134U,	// VMSUMSHM
    134U,	// VMSUMSHS
    134U,	// VMSUMUBM
    134U,	// VMSUMUHM
    134U,	// VMSUMUHS
    0U,	// VMUL10CUQ
    38U,	// VMUL10ECUQ
    38U,	// VMUL10EUQ
    0U,	// VMUL10UQ
    38U,	// VMULESB
    38U,	// VMULESH
    38U,	// VMULESW
    38U,	// VMULEUB
    38U,	// VMULEUH
    38U,	// VMULEUW
    38U,	// VMULOSB
    38U,	// VMULOSH
    38U,	// VMULOSW
    38U,	// VMULOUB
    38U,	// VMULOUH
    38U,	// VMULOUW
    38U,	// VMULUWM
    38U,	// VNAND
    38U,	// VNCIPHER
    38U,	// VNCIPHERLAST
    0U,	// VNEGD
    0U,	// VNEGW
    134U,	// VNMSUBFP
    38U,	// VNOR
    38U,	// VOR
    38U,	// VORC
    134U,	// VPERM
    134U,	// VPERMR
    134U,	// VPERMXOR
    38U,	// VPKPX
    38U,	// VPKSDSS
    38U,	// VPKSDUS
    38U,	// VPKSHSS
    38U,	// VPKSHUS
    38U,	// VPKSWSS
    38U,	// VPKSWUS
    38U,	// VPKUDUM
    38U,	// VPKUDUS
    38U,	// VPKUHUM
    38U,	// VPKUHUS
    38U,	// VPKUWUM
    38U,	// VPKUWUS
    38U,	// VPMSUMB
    38U,	// VPMSUMD
    38U,	// VPMSUMH
    38U,	// VPMSUMW
    0U,	// VPOPCNTB
    0U,	// VPOPCNTD
    0U,	// VPOPCNTH
    0U,	// VPOPCNTW
    0U,	// VPRTYBD
    0U,	// VPRTYBQ
    0U,	// VPRTYBW
    0U,	// VREFP
    0U,	// VRFIM
    0U,	// VRFIN
    0U,	// VRFIP
    0U,	// VRFIZ
    38U,	// VRLB
    38U,	// VRLD
    38U,	// VRLDMI
    38U,	// VRLDNM
    38U,	// VRLH
    38U,	// VRLW
    38U,	// VRLWMI
    38U,	// VRLWNM
    0U,	// VRSQRTEFP
    0U,	// VSBOX
    134U,	// VSEL
    394U,	// VSHASIGMAD
    394U,	// VSHASIGMAW
    38U,	// VSL
    38U,	// VSLB
    38U,	// VSLD
    390U,	// VSLDOI
    38U,	// VSLH
    38U,	// VSLO
    38U,	// VSLV
    38U,	// VSLW
    1U,	// VSPLTB
    1U,	// VSPLTBs
    1U,	// VSPLTH
    1U,	// VSPLTHs
    0U,	// VSPLTISB
    0U,	// VSPLTISH
    0U,	// VSPLTISW
    1U,	// VSPLTW
    38U,	// VSR
    38U,	// VSRAB
    38U,	// VSRAD
    38U,	// VSRAH
    38U,	// VSRAW
    38U,	// VSRB
    38U,	// VSRD
    38U,	// VSRH
    38U,	// VSRO
    38U,	// VSRV
    38U,	// VSRW
    38U,	// VSUBCUQ
    38U,	// VSUBCUW
    134U,	// VSUBECUQ
    134U,	// VSUBEUQM
    38U,	// VSUBFP
    38U,	// VSUBSBS
    38U,	// VSUBSHS
    38U,	// VSUBSWS
    38U,	// VSUBUBM
    38U,	// VSUBUBS
    38U,	// VSUBUDM
    38U,	// VSUBUHM
    38U,	// VSUBUHS
    38U,	// VSUBUQM
    38U,	// VSUBUWM
    38U,	// VSUBUWS
    38U,	// VSUM2SWS
    38U,	// VSUM4SBS
    38U,	// VSUM4SHS
    38U,	// VSUM4UBS
    38U,	// VSUMSWS
    0U,	// VUPKHPX
    0U,	// VUPKHSB
    0U,	// VUPKHSH
    0U,	// VUPKHSW
    0U,	// VUPKLPX
    0U,	// VUPKLSB
    0U,	// VUPKLSH
    0U,	// VUPKLSW
    38U,	// VXOR
    12U,	// V_SET0
    12U,	// V_SET0B
    12U,	// V_SET0H
    0U,	// V_SETALLONES
    0U,	// V_SETALLONESB
    0U,	// V_SETALLONESH
    0U,	// WAIT
    0U,	// WRTEE
    0U,	// WRTEEI
    38U,	// XOR
    38U,	// XOR8
    38U,	// XOR8_rec
    8U,	// XORI
    8U,	// XORI8
    8U,	// XORIS
    8U,	// XORIS8
    38U,	// XOR_rec
    0U,	// XSABSDP
    0U,	// XSABSQP
    38U,	// XSADDDP
    38U,	// XSADDQP
    38U,	// XSADDQPO
    38U,	// XSADDSP
    38U,	// XSCMPEQDP
    38U,	// XSCMPEXPDP
    38U,	// XSCMPEXPQP
    38U,	// XSCMPGEDP
    38U,	// XSCMPGTDP
    38U,	// XSCMPODP
    38U,	// XSCMPOQP
    38U,	// XSCMPUDP
    38U,	// XSCMPUQP
    38U,	// XSCPSGNDP
    38U,	// XSCPSGNQP
    0U,	// XSCVDPHP
    0U,	// XSCVDPQP
    0U,	// XSCVDPSP
    0U,	// XSCVDPSPN
    0U,	// XSCVDPSXDS
    0U,	// XSCVDPSXDSs
    0U,	// XSCVDPSXWS
    0U,	// XSCVDPSXWSs
    0U,	// XSCVDPUXDS
    0U,	// XSCVDPUXDSs
    0U,	// XSCVDPUXWS
    0U,	// XSCVDPUXWSs
    0U,	// XSCVHPDP
    0U,	// XSCVQPDP
    0U,	// XSCVQPDPO
    0U,	// XSCVQPSDZ
    0U,	// XSCVQPSWZ
    0U,	// XSCVQPUDZ
    0U,	// XSCVQPUWZ
    0U,	// XSCVSDQP
    0U,	// XSCVSPDP
    0U,	// XSCVSPDPN
    0U,	// XSCVSXDDP
    0U,	// XSCVSXDSP
    0U,	// XSCVUDQP
    0U,	// XSCVUXDDP
    0U,	// XSCVUXDSP
    38U,	// XSDIVDP
    38U,	// XSDIVQP
    38U,	// XSDIVQPO
    38U,	// XSDIVSP
    38U,	// XSIEXPDP
    38U,	// XSIEXPQP
    1U,	// XSMADDADP
    1U,	// XSMADDASP
    1U,	// XSMADDMDP
    1U,	// XSMADDMSP
    1U,	// XSMADDQP
    1U,	// XSMADDQPO
    38U,	// XSMAXCDP
    38U,	// XSMAXDP
    38U,	// XSMAXJDP
    38U,	// XSMINCDP
    38U,	// XSMINDP
    38U,	// XSMINJDP
    1U,	// XSMSUBADP
    1U,	// XSMSUBASP
    1U,	// XSMSUBMDP
    1U,	// XSMSUBMSP
    1U,	// XSMSUBQP
    1U,	// XSMSUBQPO
    38U,	// XSMULDP
    38U,	// XSMULQP
    38U,	// XSMULQPO
    38U,	// XSMULSP
    0U,	// XSNABSDP
    0U,	// XSNABSQP
    0U,	// XSNEGDP
    0U,	// XSNEGQP
    1U,	// XSNMADDADP
    1U,	// XSNMADDASP
    1U,	// XSNMADDMDP
    1U,	// XSNMADDMSP
    1U,	// XSNMADDQP
    1U,	// XSNMADDQPO
    1U,	// XSNMSUBADP
    1U,	// XSNMSUBASP
    1U,	// XSNMSUBMDP
    1U,	// XSNMSUBMSP
    1U,	// XSNMSUBQP
    1U,	// XSNMSUBQPO
    0U,	// XSRDPI
    0U,	// XSRDPIC
    0U,	// XSRDPIM
    0U,	// XSRDPIP
    0U,	// XSRDPIZ
    0U,	// XSREDP
    0U,	// XSRESP
    0U,	// XSRQPI
    0U,	// XSRQPIX
    0U,	// XSRQPXP
    0U,	// XSRSP
    0U,	// XSRSQRTEDP
    0U,	// XSRSQRTESP
    0U,	// XSSQRTDP
    0U,	// XSSQRTQP
    0U,	// XSSQRTQPO
    0U,	// XSSQRTSP
    38U,	// XSSUBDP
    38U,	// XSSUBQP
    38U,	// XSSUBQPO
    38U,	// XSSUBSP
    38U,	// XSTDIVDP
    0U,	// XSTSQRTDP
    1U,	// XSTSTDCDP
    1U,	// XSTSTDCQP
    1U,	// XSTSTDCSP
    0U,	// XSXEXPDP
    0U,	// XSXEXPQP
    0U,	// XSXSIGDP
    0U,	// XSXSIGQP
    0U,	// XVABSDP
    0U,	// XVABSSP
    38U,	// XVADDDP
    38U,	// XVADDSP
    38U,	// XVCMPEQDP
    38U,	// XVCMPEQDP_rec
    38U,	// XVCMPEQSP
    38U,	// XVCMPEQSP_rec
    38U,	// XVCMPGEDP
    38U,	// XVCMPGEDP_rec
    38U,	// XVCMPGESP
    38U,	// XVCMPGESP_rec
    38U,	// XVCMPGTDP
    38U,	// XVCMPGTDP_rec
    38U,	// XVCMPGTSP
    38U,	// XVCMPGTSP_rec
    38U,	// XVCPSGNDP
    38U,	// XVCPSGNSP
    0U,	// XVCVDPSP
    0U,	// XVCVDPSXDS
    0U,	// XVCVDPSXWS
    0U,	// XVCVDPUXDS
    0U,	// XVCVDPUXWS
    0U,	// XVCVHPSP
    0U,	// XVCVSPDP
    0U,	// XVCVSPHP
    0U,	// XVCVSPSXDS
    0U,	// XVCVSPSXWS
    0U,	// XVCVSPUXDS
    0U,	// XVCVSPUXWS
    0U,	// XVCVSXDDP
    0U,	// XVCVSXDSP
    0U,	// XVCVSXWDP
    0U,	// XVCVSXWSP
    0U,	// XVCVUXDDP
    0U,	// XVCVUXDSP
    0U,	// XVCVUXWDP
    0U,	// XVCVUXWSP
    38U,	// XVDIVDP
    38U,	// XVDIVSP
    38U,	// XVIEXPDP
    38U,	// XVIEXPSP
    1U,	// XVMADDADP
    1U,	// XVMADDASP
    1U,	// XVMADDMDP
    1U,	// XVMADDMSP
    38U,	// XVMAXDP
    38U,	// XVMAXSP
    38U,	// XVMINDP
    38U,	// XVMINSP
    1U,	// XVMSUBADP
    1U,	// XVMSUBASP
    1U,	// XVMSUBMDP
    1U,	// XVMSUBMSP
    38U,	// XVMULDP
    38U,	// XVMULSP
    0U,	// XVNABSDP
    0U,	// XVNABSSP
    0U,	// XVNEGDP
    0U,	// XVNEGSP
    1U,	// XVNMADDADP
    1U,	// XVNMADDASP
    1U,	// XVNMADDMDP
    1U,	// XVNMADDMSP
    1U,	// XVNMSUBADP
    1U,	// XVNMSUBASP
    1U,	// XVNMSUBMDP
    1U,	// XVNMSUBMSP
    0U,	// XVRDPI
    0U,	// XVRDPIC
    0U,	// XVRDPIM
    0U,	// XVRDPIP
    0U,	// XVRDPIZ
    0U,	// XVREDP
    0U,	// XVRESP
    0U,	// XVRSPI
    0U,	// XVRSPIC
    0U,	// XVRSPIM
    0U,	// XVRSPIP
    0U,	// XVRSPIZ
    0U,	// XVRSQRTEDP
    0U,	// XVRSQRTESP
    0U,	// XVSQRTDP
    0U,	// XVSQRTSP
    38U,	// XVSUBDP
    38U,	// XVSUBSP
    38U,	// XVTDIVDP
    38U,	// XVTDIVSP
    0U,	// XVTSQRTDP
    0U,	// XVTSQRTSP
    1U,	// XVTSTDCDP
    1U,	// XVTSTDCSP
    0U,	// XVXEXPDP
    0U,	// XVXEXPSP
    0U,	// XVXSIGDP
    0U,	// XVXSIGSP
    0U,	// XXBRD
    0U,	// XXBRH
    0U,	// XXBRQ
    0U,	// XXBRW
    20U,	// XXEXTRACTUW
    1U,	// XXINSERTW
    38U,	// XXLAND
    38U,	// XXLANDC
    38U,	// XXLEQV
    12U,	// XXLEQVOnes
    38U,	// XXLNAND
    38U,	// XXLNOR
    38U,	// XXLOR
    38U,	// XXLORC
    38U,	// XXLORf
    38U,	// XXLXOR
    12U,	// XXLXORdpz
    12U,	// XXLXORspz
    12U,	// XXLXORz
    38U,	// XXMRGHW
    38U,	// XXMRGLW
    38U,	// XXPERM
    262U,	// XXPERMDI
    462U,	// XXPERMDIs
    38U,	// XXPERMR
    134U,	// XXSEL
    262U,	// XXSLDWI
    462U,	// XXSLDWIs
    0U,	// XXSPLTIB
    16U,	// XXSPLTW
    16U,	// XXSPLTWs
    22U,	// gBC
    24U,	// gBCA
    0U,	// gBCAat
    38U,	// gBCCTR
    38U,	// gBCCTRL
    22U,	// gBCL
    24U,	// gBCLA
    0U,	// gBCLAat
    38U,	// gBCLR
    38U,	// gBCLRL
    0U,	// gBCLat
    0U,	// gBCat
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 16383)-1;


  // Fragment 0 encoded into 5 bits for 19 unique commands.
  switch ((Bits >> 14) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_END, FENTRY_CAL...
    return;
    break;
  case 1:
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CLRRDI_rec, CL...
    printOperand(MI, 0, O);
    break;
  case 2:
    // DCBFL, DCBFLP, DCBFx, DCBTCT, DCBTDS, DCBTSTCT, DCBTSTDS, DCBTSTT, DCB...
    printMemRegReg(MI, 0, O);
    break;
  case 3:
    // ADJCALLSTACKDOWN, ADJCALLSTACKUP
    printU16ImmOperand(MI, 0, O);
    O << ' ';
    printU16ImmOperand(MI, 1, O);
    return;
    break;
  case 4:
    // B, BCLalways, BDNZ, BDNZ8, BDNZL, BDNZLm, BDNZLp, BDNZm, BDNZp, BDZ, B...
    printBranchOperand(MI, 0, O);
    break;
  case 5:
    // BA, BDNZA, BDNZAm, BDNZAp, BDNZLA, BDNZLAm, BDNZLAp, BDZA, BDZAm, BDZA...
    printAbsBranchOperand(MI, 0, O);
    break;
  case 6:
    // BCC, BCCA, BCCCTR, BCCCTR8, BCCCTRL, BCCCTRL8, BCCL, BCCLA, BCCLR, BCC...
    printPredicateOperand(MI, 0, O, "cc");
    break;
  case 7:
    // BCTRL8_LDinto_toc, BCTRL_LWZinto_toc
    printMemRegImm(MI, 0, O);
    return;
    break;
  case 8:
    // BL8_NOP_TLS, BL8_TLS, BL8_TLS_, BL_TLS
    printTLSCall(MI, 0, O);
    break;
  case 9:
    // DCBF, DCBT, DCBTST
    printMemRegReg(MI, 1, O);
    O << ", ";
    printU5ImmOperand(MI, 0, O);
    return;
    break;
  case 10:
    // DCBTEP, DCBTSTEP
    printU5ImmOperand(MI, 2, O);
    O << ", ";
    printMemRegReg(MI, 0, O);
    return;
    break;
  case 11:
    // DSS, MBAR, MTFSB0, MTFSB1, TABORTDC, TABORTDCI, TABORTWC, TABORTWCI, T...
    printU5ImmOperand(MI, 0, O);
    break;
  case 12:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64, MTDCR, MTV...
    printOperand(MI, 1, O);
    break;
  case 13:
    // ICBLC, ICBLQ, ICBT, ICBTLS
    printU4ImmOperand(MI, 0, O);
    O << ", ";
    printMemRegReg(MI, 1, O);
    return;
    break;
  case 14:
    // MTOCRF, MTOCRF8
    printcrbitm(MI, 0, O);
    O << ", ";
    printOperand(MI, 1, O);
    return;
    break;
  case 15:
    // MTSR
    printU4ImmOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 0, O);
    return;
    break;
  case 16:
    // RFEBB, TBEGIN, TEND, TSR
    printU1ImmOperand(MI, 0, O);
    return;
    break;
  case 17:
    // XSRQPI, XSRQPIX, XSRQPXP
    printU1ImmOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 0, O);
    O << ", ";
    printOperand(MI, 2, O);
    O << ", ";
    printU2ImmOperand(MI, 3, O);
    return;
    break;
  case 18:
    // gBCAat, gBCLAat, gBCLat, gBCat
    printATBitsAsHint(MI, 1, O);
    O << ' ';
    printU5ImmOperand(MI, 0, O);
    O << ", ";
    printOperand(MI, 2, O);
    O << ", ";
    break;
  }


  // Fragment 1 encoded into 5 bits for 20 unique commands.
  switch ((Bits >> 19) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CLRRDI_rec, CL...
    O << ", ";
    break;
  case 1:
    // DCBFL, DCBFLP, DCBFx, DCBTSTT, DCBTSTx, DCBTT, DCBTx, B, BA, BCLalways...
    return;
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, TCRETURNai, TCRETURNai8, TCR...
    O << ' ';
    break;
  case 3:
    // BCC, CTRL_DEP
    printPredicateOperand(MI, 0, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, O, "reg");
    O << ", ";
    printBranchOperand(MI, 2, O);
    return;
    break;
  case 4:
    // BCCA
    O << 'a';
    printPredicateOperand(MI, 0, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, O, "reg");
    O << ", ";
    printAbsBranchOperand(MI, 2, O);
    return;
    break;
  case 5:
    // BCCCTR, BCCCTR8
    O << "ctr";
    printPredicateOperand(MI, 0, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 6:
    // BCCCTRL, BCCCTRL8
    O << "ctrl";
    printPredicateOperand(MI, 0, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 7:
    // BCCL
    O << 'l';
    printPredicateOperand(MI, 0, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, O, "reg");
    O << ", ";
    printBranchOperand(MI, 2, O);
    return;
    break;
  case 8:
    // BCCLA
    O << "la";
    printPredicateOperand(MI, 0, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, O, "reg");
    O << ", ";
    printAbsBranchOperand(MI, 2, O);
    return;
    break;
  case 9:
    // BCCLR
    O << "lr";
    printPredicateOperand(MI, 0, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 10:
    // BCCLRL
    O << "lrl";
    printPredicateOperand(MI, 0, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 11:
    // BCCTR, BCCTR8, BCCTR8n, BCCTRL, BCCTRL8, BCCTRL8n, BCCTRLn, BCCTRn, BC...
    O << ", 0";
    return;
    break;
  case 12:
    // BL8_NOP, BL8_NOP_TLS, BLA8_NOP, BL_NOP
    O << "\n\tnop";
    return;
    break;
  case 13:
    // EVSEL, TLBIE
    O << ',';
    break;
  case 14:
    // MFTB8
    O << ", 268";
    return;
    break;
  case 15:
    // MFVRSAVE, MFVRSAVEv
    O << ", 256";
    return;
    break;
  case 16:
    // QVLPCLSXint
    O << ", 0, ";
    printOperand(MI, 1, O);
    return;
    break;
  case 17:
    // V_SETALLONES, V_SETALLONESB, V_SETALLONESH
    O << ", -1";
    return;
    break;
  case 18:
    // gBCAat, gBCLAat
    printAbsBranchOperand(MI, 3, O);
    return;
    break;
  case 19:
    // gBCLat, gBCat
    printBranchOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 22 unique commands.
  switch ((Bits >> 24) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CLRRDI_rec, CL...
    printOperand(MI, 1, O);
    break;
  case 1:
    // DCBTCT, DCBTDS, DCBTSTCT, DCBTSTDS, EVADDIW
    printU5ImmOperand(MI, 2, O);
    break;
  case 2:
    // LAx, EVLDD, EVLDH, EVLDW, EVLHHESPLAT, EVLHHOSSPLAT, EVLHHOUSPLAT, EVL...
    printMemRegImm(MI, 1, O);
    return;
    break;
  case 3:
    // SUBPCIS, LI, LI8, LIS, LIS8
    printS16ImmOperand(MI, 1, O);
    return;
    break;
  case 4:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, EVLDDX, EVLDHX, EVLDWX, EVLH...
    printMemRegReg(MI, 1, O);
    break;
  case 5:
    // BC, BCL, BCLn, BCn
    printBranchOperand(MI, 1, O);
    return;
    break;
  case 6:
    // CMPRB, CMPRB8
    printU1ImmOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 2, O);
    O << ", ";
    printOperand(MI, 3, O);
    return;
    break;
  case 7:
    // CRSET, CRUNSET, MTDCR, TLBIE, V_SET0, V_SET0B, V_SET0H, XXLEQVOnes, XX...
    printOperand(MI, 0, O);
    break;
  case 8:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64, RLDIMI, RL...
    printOperand(MI, 2, O);
    O << ", ";
    break;
  case 9:
    // EVSPLATFI, EVSPLATI, VSPLTISB, VSPLTISH, VSPLTISW
    printS5ImmOperand(MI, 1, O);
    return;
    break;
  case 10:
    // EVSUBIFW
    printU5ImmOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 11:
    // LA
    printS16ImmOperand(MI, 2, O);
    O << '(';
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 12:
    // LBZU, LBZU8, LDU, LFDU, LFSU, LHAU, LHAU8, LHZU, LHZU8, LWZU, LWZU8, S...
    printMemRegImm(MI, 2, O);
    return;
    break;
  case 13:
    // LBZUX, LBZUX8, LDUX, LFDUX, LFSUX, LHAUX, LHAUX8, LHZUX, LHZUX8, LWAUX...
    printMemRegReg(MI, 2, O);
    return;
    break;
  case 14:
    // MFBHRBE
    printU10ImmOperand(MI, 1, O);
    return;
    break;
  case 15:
    // MFFSCDRNI
    printU3ImmOperand(MI, 1, O);
    return;
    break;
  case 16:
    // MFFSCRNI
    printU2ImmOperand(MI, 1, O);
    return;
    break;
  case 17:
    // MFOCRF, MFOCRF8
    printcrbitm(MI, 1, O);
    return;
    break;
  case 18:
    // MFSR
    printU4ImmOperand(MI, 1, O);
    return;
    break;
  case 19:
    // QVGPCI
    printU12ImmOperand(MI, 1, O);
    return;
    break;
  case 20:
    // VINSERTB, VINSERTH
    printOperand(MI, 3, O);
    O << ", ";
    printU4ImmOperand(MI, 2, O);
    return;
    break;
  case 21:
    // XXSPLTIB
    printU8ImmOperand(MI, 1, O);
    return;
    break;
  }


  // Fragment 3 encoded into 4 bits for 14 unique commands.
  switch ((Bits >> 29) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CLRRDI_rec, CL...
    O << ", ";
    break;
  case 1:
    // CP_COPY_FIRST, CP_COPYx, CP_PASTE_LAST, CP_PASTEx, DCBTCT, DCBTDS, DCB...
    return;
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32
    O << ' ';
    printOperand(MI, 3, O);
    O << ' ';
    printOperand(MI, 4, O);
    return;
    break;
  case 3:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64
    printU5ImmOperand(MI, 0, O);
    return;
    break;
  case 4:
    // EVSEL
    O << ',';
    printOperand(MI, 2, O);
    return;
    break;
  case 5:
    // LBARXL, LDARXL, LHARXL, LWARXL
    O << ", 1";
    return;
    break;
  case 6:
    // RLDIMI, RLDIMI_rec
    printU6ImmOperand(MI, 3, O);
    O << ", ";
    printU6ImmOperand(MI, 4, O);
    return;
    break;
  case 7:
    // RLWIMI, RLWIMI8, RLWIMI8_rec, RLWIMI_rec
    printU5ImmOperand(MI, 3, O);
    O << ", ";
    printU5ImmOperand(MI, 4, O);
    O << ", ";
    printU5ImmOperand(MI, 5, O);
    return;
    break;
  case 8:
    // VCFSX, VCFUX, VCTSXS, VCTUXS, VSPLTB, VSPLTBs, VSPLTH, VSPLTHs, VSPLTW
    printU5ImmOperand(MI, 1, O);
    return;
    break;
  case 9:
    // VCFSX_0, VCFUX_0, VCTSXS_0, VCTUXS_0
    O << ", 0";
    return;
    break;
  case 10:
    // VEXTRACTD, VEXTRACTUB, VEXTRACTUH, VEXTRACTUW, VINSERTD, VINSERTW
    printU4ImmOperand(MI, 1, O);
    return;
    break;
  case 11:
    // XSMADDADP, XSMADDASP, XSMADDMDP, XSMADDMSP, XSMADDQP, XSMADDQPO, XSMSU...
    printOperand(MI, 3, O);
    return;
    break;
  case 12:
    // XSTSTDCDP, XSTSTDCQP, XSTSTDCSP, XVTSTDCDP, XVTSTDCSP
    printU7ImmOperand(MI, 1, O);
    return;
    break;
  case 13:
    // XXINSERTW
    printU4ImmOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 4 encoded into 4 bits for 13 unique commands.
  switch ((Bits >> 33) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, CLRRDI, CLRRDI_rec, EXTLDI, EXTLDI_rec, EXTRDI...
    printU6ImmOperand(MI, 2, O);
    break;
  case 1:
    // CLRLSLWI, CLRLSLWI_rec, CLRRWI, CLRRWI_rec, EXTLWI, EXTLWI_rec, EXTRWI...
    printU5ImmOperand(MI, 2, O);
    break;
  case 2:
    // SUBI, SUBIC, SUBIC_rec, SUBIS, ADDI, ADDI8, ADDIC, ADDIC8, ADDIC_rec, ...
    printS16ImmOperand(MI, 2, O);
    return;
    break;
  case 3:
    // ADD4, ADD4O, ADD4O_rec, ADD4TLS, ADD4_rec, ADD8, ADD8O, ADD8O_rec, ADD...
    printOperand(MI, 2, O);
    break;
  case 4:
    // ANDI8_rec, ANDIS8_rec, ANDIS_rec, ANDI_rec, CMPLDI, CMPLWI, ORI, ORI8,...
    printU16ImmOperand(MI, 2, O);
    return;
    break;
  case 5:
    // BCDCFN_rec, BCDCFSQ_rec, BCDCFZ_rec, BCDCTZ_rec, BCDSETSGN_rec, CP_COP...
    printU1ImmOperand(MI, 2, O);
    break;
  case 6:
    // CRSET, CRUNSET, V_SET0, V_SET0B, V_SET0H, XXLEQVOnes, XXLXORdpz, XXLXO...
    printOperand(MI, 0, O);
    return;
    break;
  case 7:
    // EVADDIW, XXPERMDIs, XXSLDWIs
    printOperand(MI, 1, O);
    break;
  case 8:
    // QVESPLATI, QVESPLATIb, QVESPLATIs, XXSPLTW, XXSPLTWs
    printU2ImmOperand(MI, 2, O);
    return;
    break;
  case 9:
    // QVFMADD, QVFMADDS, QVFMADDSs, QVFMSUB, QVFMSUBS, QVFMSUBSs, QVFNMADD, ...
    printOperand(MI, 3, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 10:
    // XXEXTRACTUW
    printU4ImmOperand(MI, 2, O);
    return;
    break;
  case 11:
    // gBC, gBCL
    printBranchOperand(MI, 2, O);
    return;
    break;
  case 12:
    // gBCA, gBCLA
    printAbsBranchOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 5 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 37) & 1) {
    // CLRRDI, CLRRDI_rec, CLRRWI, CLRRWI_rec, ROTRDI, ROTRDI_rec, ROTRWI, RO...
    return;
  } else {
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, EXTLDI, EXTLDI_rec, EX...
    O << ", ";
  }


  // Fragment 6 encoded into 3 bits for 8 unique commands.
  switch ((Bits >> 38) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, EXTLDI, EXTLDI_rec, EXTRDI, EXTRDI_rec, INSRDI...
    printU6ImmOperand(MI, 3, O);
    return;
    break;
  case 1:
    // CLRLSLWI, CLRLSLWI_rec, EXTLWI, EXTLWI_rec, EXTRWI, EXTRWI_rec, INSLWI...
    printU5ImmOperand(MI, 3, O);
    break;
  case 2:
    // RLWIMIbm, RLWIMIbm_rec, RLWINMbm, RLWINMbm_rec, RLWNMbm, RLWNMbm_rec, ...
    printOperand(MI, 3, O);
    return;
    break;
  case 3:
    // BCDSR_rec, BCDS_rec, BCDTRUNC_rec
    printU1ImmOperand(MI, 3, O);
    return;
    break;
  case 4:
    // QVALIGNI, QVALIGNIb, QVALIGNIs, XXPERMDI, XXSLDWI
    printU2ImmOperand(MI, 3, O);
    return;
    break;
  case 5:
    // QVFLOGICAL, QVFLOGICALb, QVFLOGICALs
    printU12ImmOperand(MI, 3, O);
    return;
    break;
  case 6:
    // VSHASIGMAD, VSHASIGMAW, VSLDOI
    printU4ImmOperand(MI, 3, O);
    return;
    break;
  case 7:
    // XXPERMDIs, XXSLDWIs
    printU2ImmOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 41) & 1) {
    // RLWINM, RLWINM8, RLWINM8_rec, RLWINM_rec, RLWNM, RLWNM8, RLWNM8_rec, R...
    O << ", ";
    printU5ImmOperand(MI, 4, O);
    return;
  } else {
    // CLRLSLWI, CLRLSLWI_rec, EXTLWI, EXTLWI_rec, EXTRWI, EXTRWI_rec, INSLWI...
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *PPCInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 344 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ '*', '*', 'R', 'O', 'U', 'N', 'D', 'I', 'N', 'G', 32, 'M', 'O', 'D', 'E', '*', '*', 0,
  /* 18 */ '*', '*', 'F', 'R', 'A', 'M', 'E', 32, 'P', 'O', 'I', 'N', 'T', 'E', 'R', '*', '*', 0,
  /* 36 */ '*', '*', 'B', 'A', 'S', 'E', 32, 'P', 'O', 'I', 'N', 'T', 'E', 'R', '*', '*', 0,
  /* 53 */ 'f', '1', '0', 0,
  /* 57 */ 'q', '1', '0', 0,
  /* 61 */ 'r', '1', '0', 0,
  /* 65 */ 'v', 's', '1', '0', 0,
  /* 70 */ 'v', '1', '0', 0,
  /* 74 */ 'f', '2', '0', 0,
  /* 78 */ 'q', '2', '0', 0,
  /* 82 */ 'r', '2', '0', 0,
  /* 86 */ 'v', 's', '2', '0', 0,
  /* 91 */ 'v', '2', '0', 0,
  /* 95 */ 'f', '3', '0', 0,
  /* 99 */ 'q', '3', '0', 0,
  /* 103 */ 'r', '3', '0', 0,
  /* 107 */ 'v', 's', '3', '0', 0,
  /* 112 */ 'v', '3', '0', 0,
  /* 116 */ 'v', 's', '4', '0', 0,
  /* 121 */ 'v', 's', '5', '0', 0,
  /* 126 */ 'v', 's', '6', '0', 0,
  /* 131 */ 'f', '0', 0,
  /* 134 */ 'q', '0', 0,
  /* 137 */ 'c', 'r', '0', 0,
  /* 141 */ 'v', 's', '0', 0,
  /* 145 */ 'v', '0', 0,
  /* 148 */ 'f', '1', '1', 0,
  /* 152 */ 'q', '1', '1', 0,
  /* 156 */ 'r', '1', '1', 0,
  /* 160 */ 'v', 's', '1', '1', 0,
  /* 165 */ 'v', '1', '1', 0,
  /* 169 */ 'f', '2', '1', 0,
  /* 173 */ 'q', '2', '1', 0,
  /* 177 */ 'r', '2', '1', 0,
  /* 181 */ 'v', 's', '2', '1', 0,
  /* 186 */ 'v', '2', '1', 0,
  /* 190 */ 'f', '3', '1', 0,
  /* 194 */ 'q', '3', '1', 0,
  /* 198 */ 'r', '3', '1', 0,
  /* 202 */ 'v', 's', '3', '1', 0,
  /* 207 */ 'v', '3', '1', 0,
  /* 211 */ 'v', 's', '4', '1', 0,
  /* 216 */ 'v', 's', '5', '1', 0,
  /* 221 */ 'v', 's', '6', '1', 0,
  /* 226 */ 'f', '1', 0,
  /* 229 */ 'q', '1', 0,
  /* 232 */ 'c', 'r', '1', 0,
  /* 236 */ 'v', 's', '1', 0,
  /* 240 */ 'v', '1', 0,
  /* 243 */ 'f', '1', '2', 0,
  /* 247 */ 'q', '1', '2', 0,
  /* 251 */ 'r', '1', '2', 0,
  /* 255 */ 'v', 's', '1', '2', 0,
  /* 260 */ 'v', '1', '2', 0,
  /* 264 */ 'f', '2', '2', 0,
  /* 268 */ 'q', '2', '2', 0,
  /* 272 */ 'r', '2', '2', 0,
  /* 276 */ 'v', 's', '2', '2', 0,
  /* 281 */ 'v', '2', '2', 0,
  /* 285 */ 'v', 's', '3', '2', 0,
  /* 290 */ 'v', 's', '4', '2', 0,
  /* 295 */ 'v', 's', '5', '2', 0,
  /* 300 */ 'v', 's', '6', '2', 0,
  /* 305 */ 'f', '2', 0,
  /* 308 */ 'q', '2', 0,
  /* 311 */ 'c', 'r', '2', 0,
  /* 315 */ 'v', 's', '2', 0,
  /* 319 */ 'v', '2', 0,
  /* 322 */ 'f', '1', '3', 0,
  /* 326 */ 'q', '1', '3', 0,
  /* 330 */ 'r', '1', '3', 0,
  /* 334 */ 'v', 's', '1', '3', 0,
  /* 339 */ 'v', '1', '3', 0,
  /* 343 */ 'f', '2', '3', 0,
  /* 347 */ 'q', '2', '3', 0,
  /* 351 */ 'r', '2', '3', 0,
  /* 355 */ 'v', 's', '2', '3', 0,
  /* 360 */ 'v', '2', '3', 0,
  /* 364 */ 'v', 's', '3', '3', 0,
  /* 369 */ 'v', 's', '4', '3', 0,
  /* 374 */ 'v', 's', '5', '3', 0,
  /* 379 */ 'v', 's', '6', '3', 0,
  /* 384 */ 'f', '3', 0,
  /* 387 */ 'q', '3', 0,
  /* 390 */ 'c', 'r', '3', 0,
  /* 394 */ 'v', 's', '3', 0,
  /* 398 */ 'v', '3', 0,
  /* 401 */ 'f', '1', '4', 0,
  /* 405 */ 'q', '1', '4', 0,
  /* 409 */ 'r', '1', '4', 0,
  /* 413 */ 'v', 's', '1', '4', 0,
  /* 418 */ 'v', '1', '4', 0,
  /* 422 */ 'f', '2', '4', 0,
  /* 426 */ 'q', '2', '4', 0,
  /* 430 */ 'r', '2', '4', 0,
  /* 434 */ 'v', 's', '2', '4', 0,
  /* 439 */ 'v', '2', '4', 0,
  /* 443 */ 'v', 's', '3', '4', 0,
  /* 448 */ 'v', 's', '4', '4', 0,
  /* 453 */ 'v', 's', '5', '4', 0,
  /* 458 */ 'f', '4', 0,
  /* 461 */ 'q', '4', 0,
  /* 464 */ 'c', 'r', '4', 0,
  /* 468 */ 'v', 's', '4', 0,
  /* 472 */ 'v', '4', 0,
  /* 475 */ 'f', '1', '5', 0,
  /* 479 */ 'q', '1', '5', 0,
  /* 483 */ 'r', '1', '5', 0,
  /* 487 */ 'v', 's', '1', '5', 0,
  /* 492 */ 'v', '1', '5', 0,
  /* 496 */ 'f', '2', '5', 0,
  /* 500 */ 'q', '2', '5', 0,
  /* 504 */ 'r', '2', '5', 0,
  /* 508 */ 'v', 's', '2', '5', 0,
  /* 513 */ 'v', '2', '5', 0,
  /* 517 */ 'v', 's', '3', '5', 0,
  /* 522 */ 'v', 's', '4', '5', 0,
  /* 527 */ 'v', 's', '5', '5', 0,
  /* 532 */ 'f', '5', 0,
  /* 535 */ 'q', '5', 0,
  /* 538 */ 'c', 'r', '5', 0,
  /* 542 */ 'v', 's', '5', 0,
  /* 546 */ 'v', '5', 0,
  /* 549 */ 'f', '1', '6', 0,
  /* 553 */ 'q', '1', '6', 0,
  /* 557 */ 'r', '1', '6', 0,
  /* 561 */ 'v', 's', '1', '6', 0,
  /* 566 */ 'v', '1', '6', 0,
  /* 570 */ 'f', '2', '6', 0,
  /* 574 */ 'q', '2', '6', 0,
  /* 578 */ 'r', '2', '6', 0,
  /* 582 */ 'v', 's', '2', '6', 0,
  /* 587 */ 'v', '2', '6', 0,
  /* 591 */ 'v', 's', '3', '6', 0,
  /* 596 */ 'v', 's', '4', '6', 0,
  /* 601 */ 'v', 's', '5', '6', 0,
  /* 606 */ 'f', '6', 0,
  /* 609 */ 'q', '6', 0,
  /* 612 */ 'c', 'r', '6', 0,
  /* 616 */ 'v', 's', '6', 0,
  /* 620 */ 'v', '6', 0,
  /* 623 */ 'f', '1', '7', 0,
  /* 627 */ 'q', '1', '7', 0,
  /* 631 */ 'r', '1', '7', 0,
  /* 635 */ 'v', 's', '1', '7', 0,
  /* 640 */ 'v', '1', '7', 0,
  /* 644 */ 'f', '2', '7', 0,
  /* 648 */ 'q', '2', '7', 0,
  /* 652 */ 'r', '2', '7', 0,
  /* 656 */ 'v', 's', '2', '7', 0,
  /* 661 */ 'v', '2', '7', 0,
  /* 665 */ 'v', 's', '3', '7', 0,
  /* 670 */ 'v', 's', '4', '7', 0,
  /* 675 */ 'v', 's', '5', '7', 0,
  /* 680 */ 'f', '7', 0,
  /* 683 */ 'q', '7', 0,
  /* 686 */ 'c', 'r', '7', 0,
  /* 690 */ 'v', 's', '7', 0,
  /* 694 */ 'v', '7', 0,
  /* 697 */ 'f', '1', '8', 0,
  /* 701 */ 'q', '1', '8', 0,
  /* 705 */ 'r', '1', '8', 0,
  /* 709 */ 'v', 's', '1', '8', 0,
  /* 714 */ 'v', '1', '8', 0,
  /* 718 */ 'f', '2', '8', 0,
  /* 722 */ 'q', '2', '8', 0,
  /* 726 */ 'r', '2', '8', 0,
  /* 730 */ 'v', 's', '2', '8', 0,
  /* 735 */ 'v', '2', '8', 0,
  /* 739 */ 'v', 's', '3', '8', 0,
  /* 744 */ 'v', 's', '4', '8', 0,
  /* 749 */ 'v', 's', '5', '8', 0,
  /* 754 */ 'f', '8', 0,
  /* 757 */ 'q', '8', 0,
  /* 760 */ 'r', '8', 0,
  /* 763 */ 'v', 's', '8', 0,
  /* 767 */ 'v', '8', 0,
  /* 770 */ 'f', '1', '9', 0,
  /* 774 */ 'q', '1', '9', 0,
  /* 778 */ 'r', '1', '9', 0,
  /* 782 */ 'v', 's', '1', '9', 0,
  /* 787 */ 'v', '1', '9', 0,
  /* 791 */ 'f', '2', '9', 0,
  /* 795 */ 'q', '2', '9', 0,
  /* 799 */ 'r', '2', '9', 0,
  /* 803 */ 'v', 's', '2', '9', 0,
  /* 808 */ 'v', '2', '9', 0,
  /* 812 */ 'v', 's', '3', '9', 0,
  /* 817 */ 'v', 's', '4', '9', 0,
  /* 822 */ 'v', 's', '5', '9', 0,
  /* 827 */ 'f', '9', 0,
  /* 830 */ 'q', '9', 0,
  /* 833 */ 'r', '9', 0,
  /* 836 */ 'v', 's', '9', 0,
  /* 840 */ 'v', '9', 0,
  /* 843 */ 'v', 'r', 's', 'a', 'v', 'e', 0,
  /* 850 */ 's', 'p', 'e', 'f', 's', 'c', 'r', 0,
  /* 858 */ 'x', 'e', 'r', 0,
  /* 862 */ 'l', 'r', 0,
  /* 865 */ 'c', 't', 'r', 0,
  };

  static const uint16_t RegAsmOffset[] = {
    36, 858, 865, 18, 862, 0, 850, 843, 858, 55, 36, 137, 232, 311, 
    390, 464, 538, 612, 686, 865, 131, 226, 305, 384, 458, 532, 606, 680, 
    754, 827, 53, 148, 243, 322, 401, 475, 549, 623, 697, 770, 74, 169, 
    264, 343, 422, 496, 570, 644, 718, 791, 95, 190, 18, 862, 134, 229, 
    308, 387, 461, 535, 609, 683, 757, 830, 57, 152, 247, 326, 405, 479, 
    553, 627, 701, 774, 78, 173, 268, 347, 426, 500, 574, 648, 722, 795, 
    99, 194, 138, 233, 312, 391, 465, 539, 613, 687, 760, 833, 61, 156, 
    251, 330, 409, 483, 557, 631, 705, 778, 82, 177, 272, 351, 430, 504, 
    578, 652, 726, 799, 103, 198, 138, 233, 312, 391, 465, 539, 613, 687, 
    760, 833, 61, 156, 251, 330, 409, 483, 557, 631, 705, 778, 82, 177, 
    272, 351, 430, 504, 578, 652, 726, 799, 103, 198, 145, 240, 319, 398, 
    472, 546, 620, 694, 767, 840, 70, 165, 260, 339, 418, 492, 566, 640, 
    714, 787, 91, 186, 281, 360, 439, 513, 587, 661, 735, 808, 112, 207, 
    145, 240, 319, 398, 472, 546, 620, 694, 767, 840, 70, 165, 260, 339, 
    418, 492, 566, 640, 714, 787, 91, 186, 281, 360, 439, 513, 587, 661, 
    735, 808, 112, 207, 141, 236, 315, 394, 468, 542, 616, 690, 763, 836, 
    65, 160, 255, 334, 413, 487, 561, 635, 709, 782, 86, 181, 276, 355, 
    434, 508, 582, 656, 730, 803, 107, 202, 285, 364, 443, 517, 591, 665, 
    739, 812, 116, 211, 290, 369, 448, 522, 596, 670, 744, 817, 121, 216, 
    295, 374, 453, 527, 601, 675, 749, 822, 126, 221, 300, 379, 138, 233, 
    312, 391, 465, 539, 613, 687, 760, 833, 61, 156, 251, 330, 409, 483, 
    557, 631, 705, 778, 82, 177, 272, 351, 430, 504, 578, 652, 726, 799, 
    103, 198, 55, 245, 551, 54, 402, 698, 265, 571, 96, 150, 477, 772, 
    323, 624, 170, 497, 792, 55, 403, 699, 244, 550, 75, 423, 719, 324, 
    625, 149, 476, 771, 344, 645, 191, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool PPCInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  static const PatternsForOpcode OpToPatterns[] = {
    {PPC::ADDPCIS, 0, 1 },
    {PPC::BCC, 1, 24 },
    {PPC::BCCA, 25, 24 },
    {PPC::BCCCTR, 49, 24 },
    {PPC::BCCCTRL, 73, 24 },
    {PPC::BCCL, 97, 24 },
    {PPC::BCCLA, 121, 24 },
    {PPC::BCCLR, 145, 24 },
    {PPC::BCCLRL, 169, 24 },
    {PPC::CMPD, 193, 1 },
    {PPC::CMPDI, 194, 1 },
    {PPC::CMPLD, 195, 1 },
    {PPC::CMPLDI, 196, 1 },
    {PPC::CMPLW, 197, 1 },
    {PPC::CMPLWI, 198, 1 },
    {PPC::CMPW, 199, 1 },
    {PPC::CMPWI, 200, 1 },
    {PPC::CNTLZW, 201, 1 },
    {PPC::CNTLZW_rec, 202, 1 },
    {PPC::CREQV, 203, 1 },
    {PPC::CRNOR, 204, 1 },
    {PPC::CROR, 205, 1 },
    {PPC::CRXOR, 206, 1 },
    {PPC::MBAR, 207, 1 },
    {PPC::MFDCR, 208, 8 },
    {PPC::MFSPR, 216, 37 },
    {PPC::MFTB, 253, 1 },
    {PPC::MFVRSAVE, 254, 1 },
    {PPC::MFVSRD, 255, 1 },
    {PPC::MFVSRWZ, 256, 1 },
    {PPC::MTCRF8, 257, 1 },
    {PPC::MTDCR, 258, 8 },
    {PPC::MTFSF, 266, 1 },
    {PPC::MTFSFI, 267, 1 },
    {PPC::MTFSFI_rec, 268, 1 },
    {PPC::MTFSF_rec, 269, 1 },
    {PPC::MTMSR, 270, 1 },
    {PPC::MTMSRD, 271, 1 },
    {PPC::MTSPR, 272, 35 },
    {PPC::MTVRSAVE, 307, 1 },
    {PPC::MTVSRD, 308, 1 },
    {PPC::MTVSRWA, 309, 1 },
    {PPC::MTVSRWZ, 310, 1 },
    {PPC::NOR8, 311, 1 },
    {PPC::NOR8_rec, 312, 1 },
    {PPC::OR8, 313, 1 },
    {PPC::OR8_rec, 314, 1 },
    {PPC::QVFLOGICALb, 315, 12 },
    {PPC::RLDCL, 327, 1 },
    {PPC::RLDCL_rec, 328, 1 },
    {PPC::RLDICL, 329, 2 },
    {PPC::RLDICL_32_64, 331, 1 },
    {PPC::RLDICL_rec, 332, 2 },
    {PPC::RLWINM, 334, 2 },
    {PPC::RLWINM_rec, 336, 2 },
    {PPC::RLWNM, 338, 1 },
    {PPC::RLWNM_rec, 339, 1 },
    {PPC::SC, 340, 1 },
    {PPC::SUBF8, 341, 1 },
    {PPC::SUBF8_rec, 342, 1 },
    {PPC::SUBFC8, 343, 1 },
    {PPC::SUBFC8_rec, 344, 1 },
    {PPC::SYNC, 345, 3 },
    {PPC::TD, 348, 7 },
    {PPC::TDI, 355, 7 },
    {PPC::TLBIE, 362, 1 },
    {PPC::TLBRE2, 363, 2 },
    {PPC::TLBWE2, 365, 2 },
    {PPC::TW, 367, 7 },
    {PPC::TWI, 374, 7 },
    {PPC::VNOR, 381, 1 },
    {PPC::VOR, 382, 1 },
    {PPC::WAIT, 383, 3 },
    {PPC::XORI, 386, 1 },
    {PPC::XVCPSGNDP, 387, 1 },
    {PPC::XVCPSGNSP, 388, 1 },
    {PPC::XXPERMDI, 389, 5 },
    {PPC::XXPERMDIs, 394, 3 },
    {PPC::gBC, 397, 10 },
    {PPC::gBCA, 407, 10 },
    {PPC::gBCAat, 417, 2 },
    {PPC::gBCCTR, 419, 7 },
    {PPC::gBCCTRL, 426, 7 },
    {PPC::gBCL, 433, 10 },
    {PPC::gBCLA, 443, 10 },
    {PPC::gBCLAat, 453, 2 },
    {PPC::gBCLR, 455, 11 },
    {PPC::gBCLRL, 466, 11 },
    {PPC::gBCLat, 477, 2 },
    {PPC::gBCat, 479, 2 },
  };

  static const AliasPattern Patterns[] = {
    // PPC::ADDPCIS - 0
    {0, 0, 2, 2 },
    // PPC::BCC - 1
    {8, 2, 3, 2 },
    {21, 4, 3, 2 },
    {30, 6, 3, 2 },
    {44, 8, 3, 2 },
    {54, 10, 3, 2 },
    {68, 12, 3, 2 },
    {78, 14, 3, 2 },
    {91, 16, 3, 2 },
    {100, 18, 3, 2 },
    {114, 20, 3, 2 },
    {124, 22, 3, 2 },
    {138, 24, 3, 2 },
    {148, 26, 3, 2 },
    {161, 28, 3, 2 },
    {170, 30, 3, 2 },
    {184, 32, 3, 2 },
    {194, 34, 3, 2 },
    {208, 36, 3, 2 },
    {218, 38, 3, 2 },
    {231, 40, 3, 2 },
    {240, 42, 3, 2 },
    {254, 44, 3, 2 },
    {264, 46, 3, 2 },
    {278, 48, 3, 2 },
    // PPC::BCCA - 25
    {288, 50, 3, 2 },
    {302, 52, 3, 2 },
    {312, 54, 3, 2 },
    {327, 56, 3, 2 },
    {338, 58, 3, 2 },
    {353, 60, 3, 2 },
    {364, 62, 3, 2 },
    {378, 64, 3, 2 },
    {388, 66, 3, 2 },
    {403, 68, 3, 2 },
    {414, 70, 3, 2 },
    {429, 72, 3, 2 },
    {440, 74, 3, 2 },
    {454, 76, 3, 2 },
    {464, 78, 3, 2 },
    {479, 80, 3, 2 },
    {490, 82, 3, 2 },
    {505, 84, 3, 2 },
    {516, 86, 3, 2 },
    {530, 88, 3, 2 },
    {540, 90, 3, 2 },
    {555, 92, 3, 2 },
    {566, 94, 3, 2 },
    {581, 96, 3, 2 },
    // PPC::BCCCTR - 49
    {592, 98, 2, 2 },
    {602, 100, 2, 2 },
    {609, 102, 2, 2 },
    {620, 104, 2, 2 },
    {628, 106, 2, 2 },
    {639, 108, 2, 2 },
    {647, 110, 2, 2 },
    {657, 112, 2, 2 },
    {664, 114, 2, 2 },
    {675, 116, 2, 2 },
    {683, 118, 2, 2 },
    {694, 120, 2, 2 },
    {702, 122, 2, 2 },
    {712, 124, 2, 2 },
    {719, 126, 2, 2 },
    {730, 128, 2, 2 },
    {738, 130, 2, 2 },
    {749, 132, 2, 2 },
    {757, 134, 2, 2 },
    {767, 136, 2, 2 },
    {774, 138, 2, 2 },
    {785, 140, 2, 2 },
    {793, 142, 2, 2 },
    {804, 144, 2, 2 },
    // PPC::BCCCTRL - 73
    {812, 146, 2, 2 },
    {823, 148, 2, 2 },
    {831, 150, 2, 2 },
    {843, 152, 2, 2 },
    {852, 154, 2, 2 },
    {864, 156, 2, 2 },
    {873, 158, 2, 2 },
    {884, 160, 2, 2 },
    {892, 162, 2, 2 },
    {904, 164, 2, 2 },
    {913, 166, 2, 2 },
    {925, 168, 2, 2 },
    {934, 170, 2, 2 },
    {945, 172, 2, 2 },
    {953, 174, 2, 2 },
    {965, 176, 2, 2 },
    {974, 178, 2, 2 },
    {986, 180, 2, 2 },
    {995, 182, 2, 2 },
    {1006, 184, 2, 2 },
    {1014, 186, 2, 2 },
    {1026, 188, 2, 2 },
    {1035, 190, 2, 2 },
    {1047, 192, 2, 2 },
    // PPC::BCCL - 97
    {1056, 194, 3, 2 },
    {1070, 196, 3, 2 },
    {1080, 198, 3, 2 },
    {1095, 200, 3, 2 },
    {1106, 202, 3, 2 },
    {1121, 204, 3, 2 },
    {1132, 206, 3, 2 },
    {1146, 208, 3, 2 },
    {1156, 210, 3, 2 },
    {1171, 212, 3, 2 },
    {1182, 214, 3, 2 },
    {1197, 216, 3, 2 },
    {1208, 218, 3, 2 },
    {1222, 220, 3, 2 },
    {1232, 222, 3, 2 },
    {1247, 224, 3, 2 },
    {1258, 226, 3, 2 },
    {1273, 228, 3, 2 },
    {1284, 230, 3, 2 },
    {1298, 232, 3, 2 },
    {1308, 234, 3, 2 },
    {1323, 236, 3, 2 },
    {1334, 238, 3, 2 },
    {1349, 240, 3, 2 },
    // PPC::BCCLA - 121
    {1360, 242, 3, 2 },
    {1375, 244, 3, 2 },
    {1386, 246, 3, 2 },
    {1402, 248, 3, 2 },
    {1414, 250, 3, 2 },
    {1430, 252, 3, 2 },
    {1442, 254, 3, 2 },
    {1457, 256, 3, 2 },
    {1468, 258, 3, 2 },
    {1484, 260, 3, 2 },
    {1496, 262, 3, 2 },
    {1512, 264, 3, 2 },
    {1524, 266, 3, 2 },
    {1539, 268, 3, 2 },
    {1550, 270, 3, 2 },
    {1566, 272, 3, 2 },
    {1578, 274, 3, 2 },
    {1594, 276, 3, 2 },
    {1606, 278, 3, 2 },
    {1621, 280, 3, 2 },
    {1632, 282, 3, 2 },
    {1648, 284, 3, 2 },
    {1660, 286, 3, 2 },
    {1676, 288, 3, 2 },
    // PPC::BCCLR - 145
    {1688, 290, 2, 2 },
    {1697, 292, 2, 2 },
    {1703, 294, 2, 2 },
    {1713, 296, 2, 2 },
    {1720, 298, 2, 2 },
    {1730, 300, 2, 2 },
    {1737, 302, 2, 2 },
    {1746, 304, 2, 2 },
    {1752, 306, 2, 2 },
    {1762, 308, 2, 2 },
    {1769, 310, 2, 2 },
    {1779, 312, 2, 2 },
    {1786, 314, 2, 2 },
    {1795, 316, 2, 2 },
    {1801, 318, 2, 2 },
    {1811, 320, 2, 2 },
    {1818, 322, 2, 2 },
    {1828, 324, 2, 2 },
    {1835, 326, 2, 2 },
    {1844, 328, 2, 2 },
    {1850, 330, 2, 2 },
    {1860, 332, 2, 2 },
    {1867, 334, 2, 2 },
    {1877, 336, 2, 2 },
    // PPC::BCCLRL - 169
    {1884, 338, 2, 2 },
    {1894, 340, 2, 2 },
    {1901, 342, 2, 2 },
    {1912, 344, 2, 2 },
    {1920, 346, 2, 2 },
    {1931, 348, 2, 2 },
    {1939, 350, 2, 2 },
    {1949, 352, 2, 2 },
    {1956, 354, 2, 2 },
    {1967, 356, 2, 2 },
    {1975, 358, 2, 2 },
    {1986, 360, 2, 2 },
    {1994, 362, 2, 2 },
    {2004, 364, 2, 2 },
    {2011, 366, 2, 2 },
    {2022, 368, 2, 2 },
    {2030, 370, 2, 2 },
    {2041, 372, 2, 2 },
    {2049, 374, 2, 2 },
    {2059, 376, 2, 2 },
    {2066, 378, 2, 2 },
    {2077, 380, 2, 2 },
    {2085, 382, 2, 2 },
    {2096, 384, 2, 2 },
    // PPC::CMPD - 193
    {2104, 386, 3, 3 },
    // PPC::CMPDI - 194
    {2116, 389, 3, 2 },
    // PPC::CMPLD - 195
    {2131, 391, 3, 3 },
    // PPC::CMPLDI - 196
    {2144, 394, 3, 2 },
    // PPC::CMPLW - 197
    {2160, 396, 3, 3 },
    // PPC::CMPLWI - 198
    {2173, 399, 3, 2 },
    // PPC::CMPW - 199
    {2189, 401, 3, 3 },
    // PPC::CMPWI - 200
    {2201, 404, 3, 2 },
    // PPC::CNTLZW - 201
    {2216, 406, 2, 2 },
    // PPC::CNTLZW_rec - 202
    {2230, 408, 2, 2 },
    // PPC::CREQV - 203
    {2245, 410, 3, 3 },
    // PPC::CRNOR - 204
    {2254, 413, 3, 3 },
    // PPC::CROR - 205
    {2267, 416, 3, 3 },
    // PPC::CRXOR - 206
    {2281, 419, 3, 3 },
    // PPC::MBAR - 207
    {2290, 422, 1, 1 },
    // PPC::MFDCR - 208
    {2295, 423, 2, 2 },
    {2304, 425, 2, 2 },
    {2313, 427, 2, 2 },
    {2322, 429, 2, 2 },
    {2331, 431, 2, 2 },
    {2340, 433, 2, 2 },
    {2349, 435, 2, 2 },
    {2358, 437, 2, 2 },
    // PPC::MFSPR - 216
    {2367, 439, 2, 2 },
    {2376, 441, 2, 2 },
    {2386, 443, 2, 2 },
    {2396, 445, 2, 2 },
    {2406, 447, 2, 2 },
    {2417, 449, 2, 2 },
    {2426, 451, 2, 2 },
    {2436, 453, 2, 2 },
    {2446, 455, 2, 2 },
    {2456, 457, 2, 2 },
    {2465, 459, 2, 2 },
    {2474, 461, 2, 2 },
    {2484, 463, 2, 2 },
    {2494, 465, 2, 2 },
    {2508, 467, 2, 2 },
    {2522, 469, 2, 2 },
    {2536, 471, 2, 2 },
    {2550, 473, 2, 2 },
    {2564, 475, 2, 2 },
    {2578, 477, 2, 2 },
    {2592, 479, 2, 2 },
    {2606, 481, 2, 2 },
    {2620, 483, 2, 2 },
    {2634, 485, 2, 2 },
    {2648, 487, 2, 2 },
    {2662, 489, 2, 2 },
    {2676, 491, 2, 2 },
    {2690, 493, 2, 2 },
    {2704, 495, 2, 2 },
    {2718, 497, 2, 2 },
    {2728, 499, 2, 2 },
    {2738, 501, 2, 2 },
    {2748, 503, 2, 2 },
    {2757, 505, 2, 2 },
    {2770, 507, 2, 2 },
    {2779, 509, 2, 2 },
    {2788, 511, 2, 2 },
    // PPC::MFTB - 253
    {2797, 513, 2, 2 },
    // PPC::MFVRSAVE - 254
    {2806, 515, 1, 1 },
    // PPC::MFVSRD - 255
    {2818, 516, 2, 2 },
    // PPC::MFVSRWZ - 256
    {2832, 518, 2, 2 },
    // PPC::MTCRF8 - 257
    {2847, 520, 2, 2 },
    // PPC::MTDCR - 258
    {2855, 522, 2, 2 },
    {2864, 524, 2, 2 },
    {2873, 526, 2, 2 },
    {2882, 528, 2, 2 },
    {2891, 530, 2, 2 },
    {2900, 532, 2, 2 },
    {2909, 534, 2, 2 },
    {2918, 536, 2, 2 },
    // PPC::MTFSF - 266
    {2927, 538, 4, 4 },
    // PPC::MTFSFI - 267
    {2940, 542, 3, 3 },
    // PPC::MTFSFI_rec - 268
    {2954, 545, 3, 3 },
    // PPC::MTFSF_rec - 269
    {2969, 548, 4, 4 },
    // PPC::MTMSR - 270
    {2983, 552, 2, 2 },
    // PPC::MTMSRD - 271
    {2992, 554, 2, 2 },
    // PPC::MTSPR - 272
    {3002, 556, 2, 2 },
    {3011, 558, 2, 2 },
    {3021, 560, 2, 2 },
    {3032, 562, 2, 2 },
    {3041, 564, 2, 2 },
    {3051, 566, 2, 2 },
    {3061, 568, 2, 2 },
    {3071, 570, 2, 2 },
    {3080, 572, 2, 2 },
    {3089, 574, 2, 2 },
    {3098, 576, 2, 2 },
    {3107, 578, 2, 2 },
    {3117, 580, 2, 2 },
    {3127, 582, 2, 2 },
    {3141, 584, 2, 2 },
    {3155, 586, 2, 2 },
    {3169, 588, 2, 2 },
    {3183, 590, 2, 2 },
    {3197, 592, 2, 2 },
    {3211, 594, 2, 2 },
    {3225, 596, 2, 2 },
    {3239, 598, 2, 2 },
    {3253, 600, 2, 2 },
    {3267, 602, 2, 2 },
    {3281, 604, 2, 2 },
    {3295, 606, 2, 2 },
    {3309, 608, 2, 2 },
    {3323, 610, 2, 2 },
    {3337, 612, 2, 2 },
    {3351, 614, 2, 2 },
    {3361, 616, 2, 2 },
    {3371, 618, 2, 2 },
    {3381, 620, 2, 2 },
    {3390, 622, 2, 2 },
    {3403, 624, 2, 2 },
    // PPC::MTVRSAVE - 307
    {3412, 626, 1, 1 },
    // PPC::MTVSRD - 308
    {3424, 627, 2, 2 },
    // PPC::MTVSRWA - 309
    {3438, 629, 2, 2 },
    // PPC::MTVSRWZ - 310
    {3453, 631, 2, 2 },
    // PPC::NOR8 - 311
    {3468, 633, 3, 3 },
    // PPC::NOR8_rec - 312
    {3479, 636, 3, 3 },
    // PPC::OR8 - 313
    {3491, 639, 3, 3 },
    // PPC::OR8_rec - 314
    {3501, 642, 3, 3 },
    // PPC::QVFLOGICALb - 315
    {3512, 645, 4, 4 },
    {3522, 649, 4, 4 },
    {3540, 653, 4, 4 },
    {3559, 657, 4, 4 },
    {3574, 661, 4, 4 },
    {3592, 665, 4, 4 },
    {3609, 669, 4, 4 },
    {3627, 673, 4, 4 },
    {3645, 677, 4, 4 },
    {3659, 681, 4, 4 },
    {3677, 685, 4, 4 },
    {3696, 689, 4, 4 },
    // PPC::RLDCL - 327
    {3706, 693, 4, 4 },
    // PPC::RLDCL_rec - 328
    {3723, 697, 4, 4 },
    // PPC::RLDICL - 329
    {3741, 701, 4, 4 },
    {3761, 705, 4, 3 },
    // PPC::RLDICL_32_64 - 331
    {3761, 708, 4, 3 },
    // PPC::RLDICL_rec - 332
    {3781, 711, 4, 4 },
    {3802, 715, 4, 3 },
    // PPC::RLWINM - 334
    {3823, 718, 5, 5 },
    {3843, 723, 5, 5 },
    // PPC::RLWINM_rec - 336
    {3863, 728, 5, 5 },
    {3884, 733, 5, 5 },
    // PPC::RLWNM - 338
    {3905, 738, 5, 5 },
    // PPC::RLWNM_rec - 339
    {3922, 743, 5, 5 },
    // PPC::SC - 340
    {3940, 748, 1, 1 },
    // PPC::SUBF8 - 341
    {3943, 749, 3, 3 },
    // PPC::SUBF8_rec - 342
    {3958, 752, 3, 3 },
    // PPC::SUBFC8 - 343
    {3974, 755, 3, 3 },
    // PPC::SUBFC8_rec - 344
    {3990, 758, 3, 3 },
    // PPC::SYNC - 345
    {4007, 761, 1, 1 },
    {4012, 762, 1, 1 },
    {4019, 763, 1, 1 },
    // PPC::TD - 348
    {4027, 764, 3, 3 },
    {4039, 767, 3, 3 },
    {4051, 770, 3, 3 },
    {4063, 773, 3, 3 },
    {4075, 776, 3, 3 },
    {4088, 779, 3, 3 },
    {4101, 782, 3, 3 },
    // PPC::TDI - 355
    {4112, 785, 3, 2 },
    {4127, 787, 3, 2 },
    {4142, 789, 3, 2 },
    {4157, 791, 3, 2 },
    {4172, 793, 3, 2 },
    {4188, 795, 3, 2 },
    {4204, 797, 3, 2 },
    // PPC::TLBIE - 362
    {4218, 799, 2, 2 },
    // PPC::TLBRE2 - 363
    {4227, 801, 3, 3 },
    {4242, 804, 3, 3 },
    // PPC::TLBWE2 - 365
    {4257, 807, 3, 3 },
    {4272, 810, 3, 3 },
    // PPC::TW - 367
    {4287, 813, 3, 3 },
    {4299, 816, 3, 3 },
    {4311, 819, 3, 3 },
    {4323, 822, 3, 3 },
    {4335, 825, 3, 3 },
    {4348, 828, 3, 3 },
    {4361, 831, 3, 3 },
    // PPC::TWI - 374
    {4372, 834, 3, 2 },
    {4387, 836, 3, 2 },
    {4402, 838, 3, 2 },
    {4417, 840, 3, 2 },
    {4432, 842, 3, 2 },
    {4448, 844, 3, 2 },
    {4464, 846, 3, 2 },
    // PPC::VNOR - 381
    {4478, 848, 3, 3 },
    // PPC::VOR - 382
    {4490, 851, 3, 3 },
    // PPC::WAIT - 383
    {4501, 854, 1, 1 },
    {4506, 855, 1, 1 },
    {4514, 856, 1, 1 },
    // PPC::XORI - 386
    {4523, 857, 3, 3 },
    // PPC::XVCPSGNDP - 387
    {4528, 860, 3, 3 },
    // PPC::XVCPSGNSP - 388
    {4543, 863, 3, 3 },
    // PPC::XXPERMDI - 389
    {4558, 866, 4, 4 },
    {4576, 870, 4, 4 },
    {4594, 874, 4, 4 },
    {4613, 878, 4, 4 },
    {4632, 882, 4, 4 },
    // PPC::XXPERMDIs - 394
    {4558, 886, 3, 3 },
    {4576, 889, 3, 3 },
    {4632, 892, 3, 3 },
    // PPC::gBC - 397
    {4647, 895, 3, 2 },
    {4659, 897, 3, 2 },
    {4671, 899, 3, 2 },
    {4684, 901, 3, 2 },
    {4697, 903, 3, 2 },
    {4710, 905, 3, 2 },
    {4723, 907, 3, 2 },
    {4738, 909, 3, 2 },
    {4753, 911, 3, 2 },
    {4767, 913, 3, 2 },
    // PPC::gBCA - 407
    {4781, 915, 3, 2 },
    {4794, 917, 3, 2 },
    {4807, 919, 3, 2 },
    {4821, 921, 3, 2 },
    {4835, 923, 3, 2 },
    {4849, 925, 3, 2 },
    {4863, 927, 3, 2 },
    {4879, 929, 3, 2 },
    {4895, 931, 3, 2 },
    {4910, 933, 3, 2 },
    // PPC::gBCAat - 417
    {4925, 935, 4, 3 },
    {4945, 938, 4, 3 },
    // PPC::gBCCTR - 419
    {4965, 941, 3, 3 },
    {4980, 944, 3, 3 },
    {4989, 947, 3, 3 },
    {4998, 950, 3, 3 },
    {5008, 953, 3, 3 },
    {5018, 956, 3, 3 },
    {5028, 959, 3, 3 },
    // PPC::gBCCTRL - 426
    {5038, 962, 3, 3 },
    {5054, 965, 3, 3 },
    {5064, 968, 3, 3 },
    {5074, 971, 3, 3 },
    {5085, 974, 3, 3 },
    {5096, 977, 3, 3 },
    {5107, 980, 3, 3 },
    // PPC::gBCL - 433
    {5118, 983, 3, 2 },
    {5131, 985, 3, 2 },
    {5144, 987, 3, 2 },
    {5158, 989, 3, 2 },
    {5172, 991, 3, 2 },
    {5186, 993, 3, 2 },
    {5200, 995, 3, 2 },
    {5216, 997, 3, 2 },
    {5232, 999, 3, 2 },
    {5247, 1001, 3, 2 },
    // PPC::gBCLA - 443
    {5262, 1003, 3, 2 },
    {5276, 1005, 3, 2 },
    {5290, 1007, 3, 2 },
    {5305, 1009, 3, 2 },
    {5320, 1011, 3, 2 },
    {5335, 1013, 3, 2 },
    {5350, 1015, 3, 2 },
    {5367, 1017, 3, 2 },
    {5384, 1019, 3, 2 },
    {5400, 1021, 3, 2 },
    // PPC::gBCLAat - 453
    {5416, 1023, 4, 3 },
    {5437, 1026, 4, 3 },
    // PPC::gBCLR - 455
    {5458, 1029, 3, 3 },
    {5472, 1032, 3, 3 },
    {5480, 1035, 3, 3 },
    {5488, 1038, 3, 3 },
    {5497, 1041, 3, 3 },
    {5506, 1044, 3, 3 },
    {5515, 1047, 3, 3 },
    {5524, 1050, 3, 3 },
    {5535, 1053, 3, 3 },
    {5546, 1056, 3, 3 },
    {5556, 1059, 3, 3 },
    // PPC::gBCLRL - 466
    {5566, 1062, 3, 3 },
    {5581, 1065, 3, 3 },
    {5590, 1068, 3, 3 },
    {5599, 1071, 3, 3 },
    {5609, 1074, 3, 3 },
    {5619, 1077, 3, 3 },
    {5629, 1080, 3, 3 },
    {5639, 1083, 3, 3 },
    {5651, 1086, 3, 3 },
    {5663, 1089, 3, 3 },
    {5674, 1092, 3, 3 },
    // PPC::gBCLat - 477
    {5685, 1095, 4, 3 },
    {5705, 1098, 4, 3 },
    // PPC::gBCat - 479
    {5725, 1101, 4, 3 },
    {5744, 1104, 4, 3 },
  };

  static const AliasPatternCond Conds[] = {
    // (ADDPCIS g8rc:$RT, 0) - 0
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (BCC 12, crrc:$cc, condbrtarget:$dst) - 2
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 12, CR0, condbrtarget:$dst) - 4
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 14, crrc:$cc, condbrtarget:$dst) - 6
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 14, CR0, condbrtarget:$dst) - 8
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 15, crrc:$cc, condbrtarget:$dst) - 10
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 15, CR0, condbrtarget:$dst) - 12
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 44, crrc:$cc, condbrtarget:$dst) - 14
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 44, CR0, condbrtarget:$dst) - 16
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 46, crrc:$cc, condbrtarget:$dst) - 18
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 46, CR0, condbrtarget:$dst) - 20
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 47, crrc:$cc, condbrtarget:$dst) - 22
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 47, CR0, condbrtarget:$dst) - 24
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 76, crrc:$cc, condbrtarget:$dst) - 26
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 76, CR0, condbrtarget:$dst) - 28
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 78, crrc:$cc, condbrtarget:$dst) - 30
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 78, CR0, condbrtarget:$dst) - 32
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 79, crrc:$cc, condbrtarget:$dst) - 34
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 79, CR0, condbrtarget:$dst) - 36
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 68, crrc:$cc, condbrtarget:$dst) - 38
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 68, CR0, condbrtarget:$dst) - 40
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 70, crrc:$cc, condbrtarget:$dst) - 42
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 70, CR0, condbrtarget:$dst) - 44
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 71, crrc:$cc, condbrtarget:$dst) - 46
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 71, CR0, condbrtarget:$dst) - 48
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 12, crrc:$cc, abscondbrtarget:$dst) - 50
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 12, CR0, abscondbrtarget:$dst) - 52
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 14, crrc:$cc, abscondbrtarget:$dst) - 54
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 14, CR0, abscondbrtarget:$dst) - 56
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 15, crrc:$cc, abscondbrtarget:$dst) - 58
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 15, CR0, abscondbrtarget:$dst) - 60
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 44, crrc:$cc, abscondbrtarget:$dst) - 62
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 44, CR0, abscondbrtarget:$dst) - 64
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 46, crrc:$cc, abscondbrtarget:$dst) - 66
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 46, CR0, abscondbrtarget:$dst) - 68
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 47, crrc:$cc, abscondbrtarget:$dst) - 70
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 47, CR0, abscondbrtarget:$dst) - 72
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 76, crrc:$cc, abscondbrtarget:$dst) - 74
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 76, CR0, abscondbrtarget:$dst) - 76
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 78, crrc:$cc, abscondbrtarget:$dst) - 78
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 78, CR0, abscondbrtarget:$dst) - 80
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 79, crrc:$cc, abscondbrtarget:$dst) - 82
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 79, CR0, abscondbrtarget:$dst) - 84
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 68, crrc:$cc, abscondbrtarget:$dst) - 86
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 68, CR0, abscondbrtarget:$dst) - 88
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 70, crrc:$cc, abscondbrtarget:$dst) - 90
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 70, CR0, abscondbrtarget:$dst) - 92
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 71, crrc:$cc, abscondbrtarget:$dst) - 94
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 71, CR0, abscondbrtarget:$dst) - 96
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 12, crrc:$cc) - 98
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 12, CR0) - 100
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 14, crrc:$cc) - 102
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 14, CR0) - 104
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 15, crrc:$cc) - 106
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 15, CR0) - 108
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 44, crrc:$cc) - 110
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 44, CR0) - 112
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 46, crrc:$cc) - 114
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 46, CR0) - 116
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 47, crrc:$cc) - 118
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 47, CR0) - 120
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 76, crrc:$cc) - 122
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 76, CR0) - 124
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 78, crrc:$cc) - 126
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 78, CR0) - 128
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 79, crrc:$cc) - 130
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 79, CR0) - 132
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 68, crrc:$cc) - 134
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 68, CR0) - 136
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 70, crrc:$cc) - 138
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 70, CR0) - 140
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 71, crrc:$cc) - 142
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 71, CR0) - 144
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 12, crrc:$cc) - 146
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 12, CR0) - 148
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 14, crrc:$cc) - 150
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 14, CR0) - 152
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 15, crrc:$cc) - 154
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 15, CR0) - 156
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 44, crrc:$cc) - 158
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 44, CR0) - 160
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 46, crrc:$cc) - 162
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 46, CR0) - 164
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 47, crrc:$cc) - 166
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 47, CR0) - 168
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 76, crrc:$cc) - 170
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 76, CR0) - 172
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 78, crrc:$cc) - 174
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 78, CR0) - 176
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 79, crrc:$cc) - 178
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 79, CR0) - 180
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 68, crrc:$cc) - 182
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 68, CR0) - 184
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 70, crrc:$cc) - 186
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 70, CR0) - 188
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 71, crrc:$cc) - 190
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 71, CR0) - 192
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 12, crrc:$cc, condbrtarget:$dst) - 194
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 12, CR0, condbrtarget:$dst) - 196
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 14, crrc:$cc, condbrtarget:$dst) - 198
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 14, CR0, condbrtarget:$dst) - 200
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 15, crrc:$cc, condbrtarget:$dst) - 202
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 15, CR0, condbrtarget:$dst) - 204
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 44, crrc:$cc, condbrtarget:$dst) - 206
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 44, CR0, condbrtarget:$dst) - 208
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 46, crrc:$cc, condbrtarget:$dst) - 210
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 46, CR0, condbrtarget:$dst) - 212
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 47, crrc:$cc, condbrtarget:$dst) - 214
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 47, CR0, condbrtarget:$dst) - 216
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 76, crrc:$cc, condbrtarget:$dst) - 218
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 76, CR0, condbrtarget:$dst) - 220
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 78, crrc:$cc, condbrtarget:$dst) - 222
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 78, CR0, condbrtarget:$dst) - 224
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 79, crrc:$cc, condbrtarget:$dst) - 226
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 79, CR0, condbrtarget:$dst) - 228
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 68, crrc:$cc, condbrtarget:$dst) - 230
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 68, CR0, condbrtarget:$dst) - 232
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 70, crrc:$cc, condbrtarget:$dst) - 234
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 70, CR0, condbrtarget:$dst) - 236
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 71, crrc:$cc, condbrtarget:$dst) - 238
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 71, CR0, condbrtarget:$dst) - 240
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 12, crrc:$cc, abscondbrtarget:$dst) - 242
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 12, CR0, abscondbrtarget:$dst) - 244
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 14, crrc:$cc, abscondbrtarget:$dst) - 246
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 14, CR0, abscondbrtarget:$dst) - 248
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 15, crrc:$cc, abscondbrtarget:$dst) - 250
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 15, CR0, abscondbrtarget:$dst) - 252
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 44, crrc:$cc, abscondbrtarget:$dst) - 254
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 44, CR0, abscondbrtarget:$dst) - 256
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 46, crrc:$cc, abscondbrtarget:$dst) - 258
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 46, CR0, abscondbrtarget:$dst) - 260
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 47, crrc:$cc, abscondbrtarget:$dst) - 262
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 47, CR0, abscondbrtarget:$dst) - 264
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 76, crrc:$cc, abscondbrtarget:$dst) - 266
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 76, CR0, abscondbrtarget:$dst) - 268
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 78, crrc:$cc, abscondbrtarget:$dst) - 270
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 78, CR0, abscondbrtarget:$dst) - 272
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 79, crrc:$cc, abscondbrtarget:$dst) - 274
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 79, CR0, abscondbrtarget:$dst) - 276
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 68, crrc:$cc, abscondbrtarget:$dst) - 278
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 68, CR0, abscondbrtarget:$dst) - 280
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 70, crrc:$cc, abscondbrtarget:$dst) - 282
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 70, CR0, abscondbrtarget:$dst) - 284
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 71, crrc:$cc, abscondbrtarget:$dst) - 286
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 71, CR0, abscondbrtarget:$dst) - 288
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 12, crrc:$cc) - 290
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 12, CR0) - 292
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 14, crrc:$cc) - 294
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 14, CR0) - 296
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 15, crrc:$cc) - 298
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 15, CR0) - 300
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 44, crrc:$cc) - 302
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 44, CR0) - 304
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 46, crrc:$cc) - 306
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 46, CR0) - 308
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 47, crrc:$cc) - 310
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 47, CR0) - 312
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 76, crrc:$cc) - 314
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 76, CR0) - 316
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 78, crrc:$cc) - 318
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 78, CR0) - 320
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 79, crrc:$cc) - 322
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 79, CR0) - 324
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 68, crrc:$cc) - 326
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 68, CR0) - 328
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 70, crrc:$cc) - 330
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 70, CR0) - 332
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 71, crrc:$cc) - 334
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 71, CR0) - 336
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 12, crrc:$cc) - 338
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 12, CR0) - 340
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 14, crrc:$cc) - 342
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 14, CR0) - 344
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 15, crrc:$cc) - 346
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 15, CR0) - 348
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 44, crrc:$cc) - 350
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 44, CR0) - 352
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 46, crrc:$cc) - 354
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 46, CR0) - 356
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 47, crrc:$cc) - 358
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 47, CR0) - 360
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 76, crrc:$cc) - 362
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 76, CR0) - 364
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 78, crrc:$cc) - 366
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 78, CR0) - 368
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 79, crrc:$cc) - 370
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 79, CR0) - 372
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 68, crrc:$cc) - 374
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 68, CR0) - 376
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 70, crrc:$cc) - 378
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 70, CR0) - 380
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 71, crrc:$cc) - 382
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 71, CR0) - 384
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (CMPD CR0, g8rc:$rA, g8rc:$rB) - 386
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (CMPDI CR0, g8rc:$rA, s16imm64:$imm) - 389
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (CMPLD CR0, g8rc:$rA, g8rc:$rB) - 391
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (CMPLDI CR0, g8rc:$rA, u16imm64:$imm) - 394
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (CMPLW CR0, gprc:$rA, gprc:$rB) - 396
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CMPLWI CR0, gprc:$rA, u16imm:$imm) - 399
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CMPW CR0, gprc:$rA, gprc:$rB) - 401
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CMPWI CR0, gprc:$rA, s16imm:$imm) - 404
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CNTLZW gprc:$rA, gprc:$rS) - 406
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CNTLZW_rec gprc:$rA, gprc:$rS) - 408
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CREQV crbitrc:$bx, crbitrc:$bx, crbitrc:$bx) - 410
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_TiedReg, 0},
    // (CRNOR crbitrc:$bx, crbitrc:$by, crbitrc:$by) - 413
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (CROR crbitrc:$bx, crbitrc:$by, crbitrc:$by) - 416
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (CRXOR crbitrc:$bx, crbitrc:$bx, crbitrc:$bx) - 419
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_TiedReg, 0},
    // (MBAR 0) - 422
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MFDCR gprc:$Rx, 128) - 423
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(128)},
    // (MFDCR gprc:$Rx, 129) - 425
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(129)},
    // (MFDCR gprc:$Rx, 130) - 427
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(130)},
    // (MFDCR gprc:$Rx, 131) - 429
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(131)},
    // (MFDCR gprc:$Rx, 132) - 431
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(132)},
    // (MFDCR gprc:$Rx, 133) - 433
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(133)},
    // (MFDCR gprc:$Rx, 134) - 435
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(134)},
    // (MFDCR gprc:$Rx, 135) - 437
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(135)},
    // (MFSPR gprc:$Rx, 1) - 439
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (MFSPR gprc:$Rx, 4) - 441
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(4)},
    // (MFSPR gprc:$Rx, 5) - 443
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(5)},
    // (MFSPR gprc:$Rx, 17) - 445
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(17)},
    // (MFSPR gprc:$Rx, 18) - 447
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(18)},
    // (MFSPR gprc:$Rx, 19) - 449
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(19)},
    // (MFSPR gprc:$Rx, 990) - 451
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(990)},
    // (MFSPR gprc:$Rx, 991) - 453
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(991)},
    // (MFSPR gprc:$Rx, 28) - 455
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(28)},
    // (MFSPR gprc:$Rx, 29) - 457
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(29)},
    // (MFSPR gprc:$Rx, 48) - 459
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(48)},
    // (MFSPR gprc:$Rx, 989) - 461
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(989)},
    // (MFSPR gprc:$Rx, 988) - 463
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(988)},
    // (MFSPR gprc:$Rx, 536) - 465
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(536)},
    // (MFSPR gprc:$Rx, 537) - 467
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(537)},
    // (MFSPR gprc:$Rx, 528) - 469
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(528)},
    // (MFSPR gprc:$Rx, 529) - 471
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(529)},
    // (MFSPR gprc:$Rx, 538) - 473
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(538)},
    // (MFSPR gprc:$Rx, 539) - 475
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(539)},
    // (MFSPR gprc:$Rx, 530) - 477
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(530)},
    // (MFSPR gprc:$Rx, 531) - 479
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(531)},
    // (MFSPR gprc:$Rx, 540) - 481
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(540)},
    // (MFSPR gprc:$Rx, 541) - 483
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(541)},
    // (MFSPR gprc:$Rx, 532) - 485
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(532)},
    // (MFSPR gprc:$Rx, 533) - 487
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(533)},
    // (MFSPR gprc:$Rx, 542) - 489
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(542)},
    // (MFSPR gprc:$Rx, 543) - 491
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(543)},
    // (MFSPR gprc:$Rx, 534) - 493
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(534)},
    // (MFSPR gprc:$Rx, 535) - 495
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(535)},
    // (MFSPR gprc:$Rx, 1018) - 497
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1018)},
    // (MFSPR gprc:$Rx, 1019) - 499
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1019)},
    // (MFSPR gprc:$Rx, 981) - 501
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(981)},
    // (MFSPR gprc:$Rx, 980) - 503
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(980)},
    // (MFSPR gprc:$Rx, 512) - 505
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(512)},
    // (MFSPR gprc:$Rx, 986) - 507
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(986)},
    // (MFSPR gprc:$RT, 280) - 509
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(280)},
    // (MFSPR gprc:$RT, 287) - 511
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(287)},
    // (MFTB gprc:$Rx, 269) - 513
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(269)},
    // (MFVRSAVE gprc:$rS) - 515
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MFVSRD g8rc:$rA, f8rc:$src) - 516
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    // (MFVSRWZ gprc:$rA, f8rc:$src) - 518
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    // (MTCRF8 255, g8rc:$rA) - 520
    {AliasPatternCond::K_Imm, uint32_t(255)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (MTDCR gprc:$Rx, 128) - 522
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(128)},
    // (MTDCR gprc:$Rx, 129) - 524
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(129)},
    // (MTDCR gprc:$Rx, 130) - 526
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(130)},
    // (MTDCR gprc:$Rx, 131) - 528
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(131)},
    // (MTDCR gprc:$Rx, 132) - 530
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(132)},
    // (MTDCR gprc:$Rx, 133) - 532
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(133)},
    // (MTDCR gprc:$Rx, 134) - 534
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(134)},
    // (MTDCR gprc:$Rx, 135) - 536
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(135)},
    // (MTFSF i32imm:$FLM, f8rc:$FRB, 0, 0) - 538
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTFSFI crrc:$BF, i32imm:$U, 0) - 542
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTFSFI_rec crrc:$BF, i32imm:$U, 0) - 545
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTFSF_rec i32imm:$FLM, f8rc:$FRB, 0, 0) - 548
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTMSR gprc:$RS, 0) - 552
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTMSRD gprc:$RS, 0) - 554
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTSPR 1, gprc:$Rx) - 556
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 17, gprc:$Rx) - 558
    {AliasPatternCond::K_Imm, uint32_t(17)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 18, gprc:$Rx) - 560
    {AliasPatternCond::K_Imm, uint32_t(18)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 19, gprc:$Rx) - 562
    {AliasPatternCond::K_Imm, uint32_t(19)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 990, gprc:$Rx) - 564
    {AliasPatternCond::K_Imm, uint32_t(990)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 991, gprc:$Rx) - 566
    {AliasPatternCond::K_Imm, uint32_t(991)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 28, gprc:$Rx) - 568
    {AliasPatternCond::K_Imm, uint32_t(28)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 29, gprc:$Rx) - 570
    {AliasPatternCond::K_Imm, uint32_t(29)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 48, gprc:$Rx) - 572
    {AliasPatternCond::K_Imm, uint32_t(48)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 284, gprc:$Rx) - 574
    {AliasPatternCond::K_Imm, uint32_t(284)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 285, gprc:$Rx) - 576
    {AliasPatternCond::K_Imm, uint32_t(285)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 989, gprc:$Rx) - 578
    {AliasPatternCond::K_Imm, uint32_t(989)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 988, gprc:$Rx) - 580
    {AliasPatternCond::K_Imm, uint32_t(988)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 536, gprc:$Rx) - 582
    {AliasPatternCond::K_Imm, uint32_t(536)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 537, gprc:$Rx) - 584
    {AliasPatternCond::K_Imm, uint32_t(537)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 528, gprc:$Rx) - 586
    {AliasPatternCond::K_Imm, uint32_t(528)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 529, gprc:$Rx) - 588
    {AliasPatternCond::K_Imm, uint32_t(529)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 538, gprc:$Rx) - 590
    {AliasPatternCond::K_Imm, uint32_t(538)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 539, gprc:$Rx) - 592
    {AliasPatternCond::K_Imm, uint32_t(539)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 530, gprc:$Rx) - 594
    {AliasPatternCond::K_Imm, uint32_t(530)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 531, gprc:$Rx) - 596
    {AliasPatternCond::K_Imm, uint32_t(531)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 540, gprc:$Rx) - 598
    {AliasPatternCond::K_Imm, uint32_t(540)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 541, gprc:$Rx) - 600
    {AliasPatternCond::K_Imm, uint32_t(541)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 532, gprc:$Rx) - 602
    {AliasPatternCond::K_Imm, uint32_t(532)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 533, gprc:$Rx) - 604
    {AliasPatternCond::K_Imm, uint32_t(533)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 542, gprc:$Rx) - 606
    {AliasPatternCond::K_Imm, uint32_t(542)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 543, gprc:$Rx) - 608
    {AliasPatternCond::K_Imm, uint32_t(543)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 534, gprc:$Rx) - 610
    {AliasPatternCond::K_Imm, uint32_t(534)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 535, gprc:$Rx) - 612
    {AliasPatternCond::K_Imm, uint32_t(535)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 1018, gprc:$Rx) - 614
    {AliasPatternCond::K_Imm, uint32_t(1018)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 1019, gprc:$Rx) - 616
    {AliasPatternCond::K_Imm, uint32_t(1019)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 981, gprc:$Rx) - 618
    {AliasPatternCond::K_Imm, uint32_t(981)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 980, gprc:$Rx) - 620
    {AliasPatternCond::K_Imm, uint32_t(980)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 512, gprc:$Rx) - 622
    {AliasPatternCond::K_Imm, uint32_t(512)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 986, gprc:$Rx) - 624
    {AliasPatternCond::K_Imm, uint32_t(986)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTVRSAVE gprc:$rS) - 626
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTVSRD f8rc:$dst, g8rc:$rA) - 627
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (MTVSRWA f8rc:$dst, gprc:$rA) - 629
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTVSRWZ f8rc:$dst, gprc:$rA) - 631
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (NOR8 g8rc:$rA, g8rc:$rB, g8rc:$rB) - 633
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (NOR8_rec g8rc:$rA, g8rc:$rB, g8rc:$rB) - 636
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (OR8 g8rc:$rA, g8rc:$rB, g8rc:$rB) - 639
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (OR8_rec g8rc:$rA, g8rc:$rB, g8rc:$rB) - 642
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRT, qbrc:$FRT, 0) - 645
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 1) - 649
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 4) - 653
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(4)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRA, 5) - 657
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Imm, uint32_t(5)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 6) - 661
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(6)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 7) - 665
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(7)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 8) - 669
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(8)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 9) - 673
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(9)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRA, 10) - 677
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Imm, uint32_t(10)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 13) - 681
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(13)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRA, qbrc:$FRB, 14) - 685
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(14)},
    // (QVFLOGICALb qbrc:$FRT, qbrc:$FRT, qbrc:$FRT, 15) - 689
    {AliasPatternCond::K_RegClass, PPC::QBRCRegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_Imm, uint32_t(15)},
    // (RLDCL g8rc:$rA, g8rc:$rS, gprc:$rB, 0) - 693
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDCL_rec g8rc:$rA, g8rc:$rS, gprc:$rB, 0) - 697
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL g8rc:$rA, g8rc:$rS, u6imm:$n, 0) - 701
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL g8rc:$rA, g8rc:$rS, 0, u6imm:$n) - 705
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL_32_64 g8rc:$rA, gprc:$rS, 0, u6imm:$n) - 708
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL_rec g8rc:$rA, g8rc:$rS, u6imm:$n, 0) - 711
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL_rec g8rc:$rA, g8rc:$rS, 0, u6imm:$n) - 715
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLWINM gprc:$rA, gprc:$rS, u5imm:$n, 0, 31) - 718
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWINM gprc:$rA, gprc:$rS, 0, u5imm:$n, 31) - 723
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWINM_rec gprc:$rA, gprc:$rS, u5imm:$n, 0, 31) - 728
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWINM_rec gprc:$rA, gprc:$rS, 0, u5imm:$n, 31) - 733
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWNM gprc:$rA, gprc:$rS, gprc:$rB, 0, 31) - 738
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWNM_rec gprc:$rA, gprc:$rS, gprc:$rB, 0, 31) - 743
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (SC 0) - 748
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SUBF8 g8rc:$rA, g8rc:$rC, g8rc:$rB) - 749
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (SUBF8_rec g8rc:$rA, g8rc:$rC, g8rc:$rB) - 752
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (SUBFC8 g8rc:$rA, g8rc:$rC, g8rc:$rB) - 755
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (SUBFC8_rec g8rc:$rA, g8rc:$rC, g8rc:$rB) - 758
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (SYNC 0) - 761
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SYNC 1) - 762
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (SYNC 2) - 763
    {AliasPatternCond::K_Imm, uint32_t(2)},
    // (TD 16, g8rc:$rA, g8rc:$rB) - 764
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 4, g8rc:$rA, g8rc:$rB) - 767
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 8, g8rc:$rA, g8rc:$rB) - 770
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 24, g8rc:$rA, g8rc:$rB) - 773
    {AliasPatternCond::K_Imm, uint32_t(24)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 2, g8rc:$rA, g8rc:$rB) - 776
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 1, g8rc:$rA, g8rc:$rB) - 779
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 31, g8rc:$rA, g8rc:$rB) - 782
    {AliasPatternCond::K_Imm, uint32_t(31)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 16, g8rc:$rA, s16imm:$imm) - 785
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 4, g8rc:$rA, s16imm:$imm) - 787
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 8, g8rc:$rA, s16imm:$imm) - 789
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 24, g8rc:$rA, s16imm:$imm) - 791
    {AliasPatternCond::K_Imm, uint32_t(24)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 2, g8rc:$rA, s16imm:$imm) - 793
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 1, g8rc:$rA, s16imm:$imm) - 795
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 31, g8rc:$rA, s16imm:$imm) - 797
    {AliasPatternCond::K_Imm, uint32_t(31)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TLBIE R0, gprc:$RB) - 799
    {AliasPatternCond::K_Reg, PPC::R0},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TLBRE2 gprc:$RS, gprc:$A, 0) - 801
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLBRE2 gprc:$RS, gprc:$A, 1) - 804
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (TLBWE2 gprc:$RS, gprc:$A, 0) - 807
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLBWE2 gprc:$RS, gprc:$A, 1) - 810
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (TW 16, gprc:$rA, gprc:$rB) - 813
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 4, gprc:$rA, gprc:$rB) - 816
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 8, gprc:$rA, gprc:$rB) - 819
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 24, gprc:$rA, gprc:$rB) - 822
    {AliasPatternCond::K_Imm, uint32_t(24)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 2, gprc:$rA, gprc:$rB) - 825
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 1, gprc:$rA, gprc:$rB) - 828
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 31, gprc:$rA, gprc:$rB) - 831
    {AliasPatternCond::K_Imm, uint32_t(31)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 16, gprc:$rA, s16imm:$imm) - 834
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 4, gprc:$rA, s16imm:$imm) - 836
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 8, gprc:$rA, s16imm:$imm) - 838
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 24, gprc:$rA, s16imm:$imm) - 840
    {AliasPatternCond::K_Imm, uint32_t(24)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 2, gprc:$rA, s16imm:$imm) - 842
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 1, gprc:$rA, s16imm:$imm) - 844
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 31, gprc:$rA, s16imm:$imm) - 846
    {AliasPatternCond::K_Imm, uint32_t(31)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (VNOR vrrc:$vD, vrrc:$vA, vrrc:$vA) - 848
    {AliasPatternCond::K_RegClass, PPC::VRRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VRRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (VOR vrrc:$vD, vrrc:$vA, vrrc:$vA) - 851
    {AliasPatternCond::K_RegClass, PPC::VRRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VRRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (WAIT 0) - 854
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (WAIT 1) - 855
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (WAIT 2) - 856
    {AliasPatternCond::K_Imm, uint32_t(2)},
    // (XORI R0, R0, 0) - 857
    {AliasPatternCond::K_Reg, PPC::R0},
    {AliasPatternCond::K_Reg, PPC::R0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (XVCPSGNDP vsrc:$XT, vsrc:$XB, vsrc:$XB) - 860
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (XVCPSGNSP vsrc:$XT, vsrc:$XB, vsrc:$XB) - 863
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 0) - 866
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 3) - 870
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    // (XXPERMDI vsrc:$XT, vsrc:$XA, vsrc:$XB, 0) - 874
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (XXPERMDI vsrc:$XT, vsrc:$XA, vsrc:$XB, 3) - 878
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 2) - 882
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 0) - 886
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSFRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 3) - 889
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSFRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 2) - 892
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSFRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    // (gBC 12, crbitrc:$bi, condbrtarget:$dst) - 895
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 4, crbitrc:$bi, condbrtarget:$dst) - 897
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 14, crbitrc:$bi, condbrtarget:$dst) - 899
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 6, crbitrc:$bi, condbrtarget:$dst) - 901
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 15, crbitrc:$bi, condbrtarget:$dst) - 903
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 7, crbitrc:$bi, condbrtarget:$dst) - 905
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 8, crbitrc:$bi, condbrtarget:$dst) - 907
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 0, crbitrc:$bi, condbrtarget:$dst) - 909
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 10, crbitrc:$bi, condbrtarget:$dst) - 911
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 2, crbitrc:$bi, condbrtarget:$dst) - 913
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 12, crbitrc:$bi, abscondbrtarget:$dst) - 915
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 4, crbitrc:$bi, abscondbrtarget:$dst) - 917
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 14, crbitrc:$bi, abscondbrtarget:$dst) - 919
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 6, crbitrc:$bi, abscondbrtarget:$dst) - 921
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 15, crbitrc:$bi, abscondbrtarget:$dst) - 923
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 7, crbitrc:$bi, abscondbrtarget:$dst) - 925
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 8, crbitrc:$bi, abscondbrtarget:$dst) - 927
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 0, crbitrc:$bi, abscondbrtarget:$dst) - 929
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 10, crbitrc:$bi, abscondbrtarget:$dst) - 931
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 2, crbitrc:$bi, abscondbrtarget:$dst) - 933
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCAat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 935
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCAat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 938
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCCTR u5imm:$bo, crbitrc:$bi, 0) - 941
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 12, crbitrc:$bi, 0) - 944
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 4, crbitrc:$bi, 0) - 947
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 14, crbitrc:$bi, 0) - 950
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 6, crbitrc:$bi, 0) - 953
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 15, crbitrc:$bi, 0) - 956
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 7, crbitrc:$bi, 0) - 959
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL u5imm:$bo, crbitrc:$bi, 0) - 962
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 12, crbitrc:$bi, 0) - 965
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 4, crbitrc:$bi, 0) - 968
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 14, crbitrc:$bi, 0) - 971
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 6, crbitrc:$bi, 0) - 974
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 15, crbitrc:$bi, 0) - 977
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 7, crbitrc:$bi, 0) - 980
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCL 12, crbitrc:$bi, condbrtarget:$dst) - 983
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 4, crbitrc:$bi, condbrtarget:$dst) - 985
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 14, crbitrc:$bi, condbrtarget:$dst) - 987
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 6, crbitrc:$bi, condbrtarget:$dst) - 989
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 15, crbitrc:$bi, condbrtarget:$dst) - 991
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 7, crbitrc:$bi, condbrtarget:$dst) - 993
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 8, crbitrc:$bi, condbrtarget:$dst) - 995
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 0, crbitrc:$bi, condbrtarget:$dst) - 997
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 10, crbitrc:$bi, condbrtarget:$dst) - 999
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 2, crbitrc:$bi, condbrtarget:$dst) - 1001
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 12, crbitrc:$bi, abscondbrtarget:$dst) - 1003
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 4, crbitrc:$bi, abscondbrtarget:$dst) - 1005
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 14, crbitrc:$bi, abscondbrtarget:$dst) - 1007
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 6, crbitrc:$bi, abscondbrtarget:$dst) - 1009
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 15, crbitrc:$bi, abscondbrtarget:$dst) - 1011
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 7, crbitrc:$bi, abscondbrtarget:$dst) - 1013
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 8, crbitrc:$bi, abscondbrtarget:$dst) - 1015
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 0, crbitrc:$bi, abscondbrtarget:$dst) - 1017
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 10, crbitrc:$bi, abscondbrtarget:$dst) - 1019
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 2, crbitrc:$bi, abscondbrtarget:$dst) - 1021
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLAat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1023
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLAat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1026
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLR u5imm:$bo, crbitrc:$bi, 0) - 1029
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 12, crbitrc:$bi, 0) - 1032
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 4, crbitrc:$bi, 0) - 1035
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 14, crbitrc:$bi, 0) - 1038
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 6, crbitrc:$bi, 0) - 1041
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 15, crbitrc:$bi, 0) - 1044
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 7, crbitrc:$bi, 0) - 1047
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 8, crbitrc:$bi, 0) - 1050
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 0, crbitrc:$bi, 0) - 1053
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 10, crbitrc:$bi, 0) - 1056
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 2, crbitrc:$bi, 0) - 1059
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL u5imm:$bo, crbitrc:$bi, 0) - 1062
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 12, crbitrc:$bi, 0) - 1065
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 4, crbitrc:$bi, 0) - 1068
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 14, crbitrc:$bi, 0) - 1071
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 6, crbitrc:$bi, 0) - 1074
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 15, crbitrc:$bi, 0) - 1077
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 7, crbitrc:$bi, 0) - 1080
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 8, crbitrc:$bi, 0) - 1083
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 0, crbitrc:$bi, 0) - 1086
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 10, crbitrc:$bi, 0) - 1089
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 2, crbitrc:$bi, 0) - 1092
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1095
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1098
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1101
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1104
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
  };

  static const char AsmStrings[] =
    /* 0 */ "lnia $\x01\0"
    /* 8 */ "blt $\x02, $\xFF\x03\x01\0"
    /* 21 */ "blt $\xFF\x03\x01\0"
    /* 30 */ "blt- $\x02, $\xFF\x03\x01\0"
    /* 44 */ "blt- $\xFF\x03\x01\0"
    /* 54 */ "blt+ $\x02, $\xFF\x03\x01\0"
    /* 68 */ "blt+ $\xFF\x03\x01\0"
    /* 78 */ "bgt $\x02, $\xFF\x03\x01\0"
    /* 91 */ "bgt $\xFF\x03\x01\0"
    /* 100 */ "bgt- $\x02, $\xFF\x03\x01\0"
    /* 114 */ "bgt- $\xFF\x03\x01\0"
    /* 124 */ "bgt+ $\x02, $\xFF\x03\x01\0"
    /* 138 */ "bgt+ $\xFF\x03\x01\0"
    /* 148 */ "beq $\x02, $\xFF\x03\x01\0"
    /* 161 */ "beq $\xFF\x03\x01\0"
    /* 170 */ "beq- $\x02, $\xFF\x03\x01\0"
    /* 184 */ "beq- $\xFF\x03\x01\0"
    /* 194 */ "beq+ $\x02, $\xFF\x03\x01\0"
    /* 208 */ "beq+ $\xFF\x03\x01\0"
    /* 218 */ "bne $\x02, $\xFF\x03\x01\0"
    /* 231 */ "bne $\xFF\x03\x01\0"
    /* 240 */ "bne- $\x02, $\xFF\x03\x01\0"
    /* 254 */ "bne- $\xFF\x03\x01\0"
    /* 264 */ "bne+ $\x02, $\xFF\x03\x01\0"
    /* 278 */ "bne+ $\xFF\x03\x01\0"
    /* 288 */ "blta $\x02, $\xFF\x03\x02\0"
    /* 302 */ "blta $\xFF\x03\x02\0"
    /* 312 */ "blta- $\x02, $\xFF\x03\x02\0"
    /* 327 */ "blta- $\xFF\x03\x02\0"
    /* 338 */ "blta+ $\x02, $\xFF\x03\x02\0"
    /* 353 */ "blta+ $\xFF\x03\x02\0"
    /* 364 */ "bgta $\x02, $\xFF\x03\x02\0"
    /* 378 */ "bgta $\xFF\x03\x02\0"
    /* 388 */ "bgta- $\x02, $\xFF\x03\x02\0"
    /* 403 */ "bgta- $\xFF\x03\x02\0"
    /* 414 */ "bgta+ $\x02, $\xFF\x03\x02\0"
    /* 429 */ "bgta+ $\xFF\x03\x02\0"
    /* 440 */ "beqa $\x02, $\xFF\x03\x02\0"
    /* 454 */ "beqa $\xFF\x03\x02\0"
    /* 464 */ "beqa- $\x02, $\xFF\x03\x02\0"
    /* 479 */ "beqa- $\xFF\x03\x02\0"
    /* 490 */ "beqa+ $\x02, $\xFF\x03\x02\0"
    /* 505 */ "beqa+ $\xFF\x03\x02\0"
    /* 516 */ "bnea $\x02, $\xFF\x03\x02\0"
    /* 530 */ "bnea $\xFF\x03\x02\0"
    /* 540 */ "bnea- $\x02, $\xFF\x03\x02\0"
    /* 555 */ "bnea- $\xFF\x03\x02\0"
    /* 566 */ "bnea+ $\x02, $\xFF\x03\x02\0"
    /* 581 */ "bnea+ $\xFF\x03\x02\0"
    /* 592 */ "bltctr $\x02\0"
    /* 602 */ "bltctr\0"
    /* 609 */ "bltctr- $\x02\0"
    /* 620 */ "bltctr-\0"
    /* 628 */ "bltctr+ $\x02\0"
    /* 639 */ "bltctr+\0"
    /* 647 */ "bgtctr $\x02\0"
    /* 657 */ "bgtctr\0"
    /* 664 */ "bgtctr- $\x02\0"
    /* 675 */ "bgtctr-\0"
    /* 683 */ "bgtctr+ $\x02\0"
    /* 694 */ "bgtctr+\0"
    /* 702 */ "beqctr $\x02\0"
    /* 712 */ "beqctr\0"
    /* 719 */ "beqctr- $\x02\0"
    /* 730 */ "beqctr-\0"
    /* 738 */ "beqctr+ $\x02\0"
    /* 749 */ "beqctr+\0"
    /* 757 */ "bnectr $\x02\0"
    /* 767 */ "bnectr\0"
    /* 774 */ "bnectr- $\x02\0"
    /* 785 */ "bnectr-\0"
    /* 793 */ "bnectr+ $\x02\0"
    /* 804 */ "bnectr+\0"
    /* 812 */ "bltctrl $\x02\0"
    /* 823 */ "bltctrl\0"
    /* 831 */ "bltctrl- $\x02\0"
    /* 843 */ "bltctrl-\0"
    /* 852 */ "bltctrl+ $\x02\0"
    /* 864 */ "bltctrl+\0"
    /* 873 */ "bgtctrl $\x02\0"
    /* 884 */ "bgtctrl\0"
    /* 892 */ "bgtctrl- $\x02\0"
    /* 904 */ "bgtctrl-\0"
    /* 913 */ "bgtctrl+ $\x02\0"
    /* 925 */ "bgtctrl+\0"
    /* 934 */ "beqctrl $\x02\0"
    /* 945 */ "beqctrl\0"
    /* 953 */ "beqctrl- $\x02\0"
    /* 965 */ "beqctrl-\0"
    /* 974 */ "beqctrl+ $\x02\0"
    /* 986 */ "beqctrl+\0"
    /* 995 */ "bnectrl $\x02\0"
    /* 1006 */ "bnectrl\0"
    /* 1014 */ "bnectrl- $\x02\0"
    /* 1026 */ "bnectrl-\0"
    /* 1035 */ "bnectrl+ $\x02\0"
    /* 1047 */ "bnectrl+\0"
    /* 1056 */ "bltl $\x02, $\xFF\x03\x01\0"
    /* 1070 */ "bltl $\xFF\x03\x01\0"
    /* 1080 */ "bltl- $\x02, $\xFF\x03\x01\0"
    /* 1095 */ "bltl- $\xFF\x03\x01\0"
    /* 1106 */ "bltl+ $\x02, $\xFF\x03\x01\0"
    /* 1121 */ "bltl+ $\xFF\x03\x01\0"
    /* 1132 */ "bgtl $\x02, $\xFF\x03\x01\0"
    /* 1146 */ "bgtl $\xFF\x03\x01\0"
    /* 1156 */ "bgtl- $\x02, $\xFF\x03\x01\0"
    /* 1171 */ "bgtl- $\xFF\x03\x01\0"
    /* 1182 */ "bgtl+ $\x02, $\xFF\x03\x01\0"
    /* 1197 */ "bgtl+ $\xFF\x03\x01\0"
    /* 1208 */ "beql $\x02, $\xFF\x03\x01\0"
    /* 1222 */ "beql $\xFF\x03\x01\0"
    /* 1232 */ "beql- $\x02, $\xFF\x03\x01\0"
    /* 1247 */ "beql- $\xFF\x03\x01\0"
    /* 1258 */ "beql+ $\x02, $\xFF\x03\x01\0"
    /* 1273 */ "beql+ $\xFF\x03\x01\0"
    /* 1284 */ "bnel $\x02, $\xFF\x03\x01\0"
    /* 1298 */ "bnel $\xFF\x03\x01\0"
    /* 1308 */ "bnel- $\x02, $\xFF\x03\x01\0"
    /* 1323 */ "bnel- $\xFF\x03\x01\0"
    /* 1334 */ "bnel+ $\x02, $\xFF\x03\x01\0"
    /* 1349 */ "bnel+ $\xFF\x03\x01\0"
    /* 1360 */ "bltla $\x02, $\xFF\x03\x02\0"
    /* 1375 */ "bltla $\xFF\x03\x02\0"
    /* 1386 */ "bltla- $\x02, $\xFF\x03\x02\0"
    /* 1402 */ "bltla- $\xFF\x03\x02\0"
    /* 1414 */ "bltla+ $\x02, $\xFF\x03\x02\0"
    /* 1430 */ "bltla+ $\xFF\x03\x02\0"
    /* 1442 */ "bgtla $\x02, $\xFF\x03\x02\0"
    /* 1457 */ "bgtla $\xFF\x03\x02\0"
    /* 1468 */ "bgtla- $\x02, $\xFF\x03\x02\0"
    /* 1484 */ "bgtla- $\xFF\x03\x02\0"
    /* 1496 */ "bgtla+ $\x02, $\xFF\x03\x02\0"
    /* 1512 */ "bgtla+ $\xFF\x03\x02\0"
    /* 1524 */ "beqla $\x02, $\xFF\x03\x02\0"
    /* 1539 */ "beqla $\xFF\x03\x02\0"
    /* 1550 */ "beqla- $\x02, $\xFF\x03\x02\0"
    /* 1566 */ "beqla- $\xFF\x03\x02\0"
    /* 1578 */ "beqla+ $\x02, $\xFF\x03\x02\0"
    /* 1594 */ "beqla+ $\xFF\x03\x02\0"
    /* 1606 */ "bnela $\x02, $\xFF\x03\x02\0"
    /* 1621 */ "bnela $\xFF\x03\x02\0"
    /* 1632 */ "bnela- $\x02, $\xFF\x03\x02\0"
    /* 1648 */ "bnela- $\xFF\x03\x02\0"
    /* 1660 */ "bnela+ $\x02, $\xFF\x03\x02\0"
    /* 1676 */ "bnela+ $\xFF\x03\x02\0"
    /* 1688 */ "bltlr $\x02\0"
    /* 1697 */ "bltlr\0"
    /* 1703 */ "bltlr- $\x02\0"
    /* 1713 */ "bltlr-\0"
    /* 1720 */ "bltlr+ $\x02\0"
    /* 1730 */ "bltlr+\0"
    /* 1737 */ "bgtlr $\x02\0"
    /* 1746 */ "bgtlr\0"
    /* 1752 */ "bgtlr- $\x02\0"
    /* 1762 */ "bgtlr-\0"
    /* 1769 */ "bgtlr+ $\x02\0"
    /* 1779 */ "bgtlr+\0"
    /* 1786 */ "beqlr $\x02\0"
    /* 1795 */ "beqlr\0"
    /* 1801 */ "beqlr- $\x02\0"
    /* 1811 */ "beqlr-\0"
    /* 1818 */ "beqlr+ $\x02\0"
    /* 1828 */ "beqlr+\0"
    /* 1835 */ "bnelr $\x02\0"
    /* 1844 */ "bnelr\0"
    /* 1850 */ "bnelr- $\x02\0"
    /* 1860 */ "bnelr-\0"
    /* 1867 */ "bnelr+ $\x02\0"
    /* 1877 */ "bnelr+\0"
    /* 1884 */ "bltlrl $\x02\0"
    /* 1894 */ "bltlrl\0"
    /* 1901 */ "bltlrl- $\x02\0"
    /* 1912 */ "bltlrl-\0"
    /* 1920 */ "bltlrl+ $\x02\0"
    /* 1931 */ "bltlrl+\0"
    /* 1939 */ "bgtlrl $\x02\0"
    /* 1949 */ "bgtlrl\0"
    /* 1956 */ "bgtlrl- $\x02\0"
    /* 1967 */ "bgtlrl-\0"
    /* 1975 */ "bgtlrl+ $\x02\0"
    /* 1986 */ "bgtlrl+\0"
    /* 1994 */ "beqlrl $\x02\0"
    /* 2004 */ "beqlrl\0"
    /* 2011 */ "beqlrl- $\x02\0"
    /* 2022 */ "beqlrl-\0"
    /* 2030 */ "beqlrl+ $\x02\0"
    /* 2041 */ "beqlrl+\0"
    /* 2049 */ "bnelrl $\x02\0"
    /* 2059 */ "bnelrl\0"
    /* 2066 */ "bnelrl- $\x02\0"
    /* 2077 */ "bnelrl-\0"
    /* 2085 */ "bnelrl+ $\x02\0"
    /* 2096 */ "bnelrl+\0"
    /* 2104 */ "cmpd $\x02, $\x03\0"
    /* 2116 */ "cmpdi $\x02, $\xFF\x03\x03\0"
    /* 2131 */ "cmpld $\x02, $\x03\0"
    /* 2144 */ "cmpldi $\x02, $\xFF\x03\x04\0"
    /* 2160 */ "cmplw $\x02, $\x03\0"
    /* 2173 */ "cmplwi $\x02, $\xFF\x03\x04\0"
    /* 2189 */ "cmpw $\x02, $\x03\0"
    /* 2201 */ "cmpwi $\x02, $\xFF\x03\x03\0"
    /* 2216 */ "cntlzw $\x01, $\x02\0"
    /* 2230 */ "cntlzw. $\x01, $\x02\0"
    /* 2245 */ "crset $\x01\0"
    /* 2254 */ "crnot $\x01, $\x02\0"
    /* 2267 */ "crmove $\x01, $\x02\0"
    /* 2281 */ "crclr $\x01\0"
    /* 2290 */ "mbar\0"
    /* 2295 */ "mfbr0 $\x01\0"
    /* 2304 */ "mfbr1 $\x01\0"
    /* 2313 */ "mfbr2 $\x01\0"
    /* 2322 */ "mfbr3 $\x01\0"
    /* 2331 */ "mfbr4 $\x01\0"
    /* 2340 */ "mfbr5 $\x01\0"
    /* 2349 */ "mfbr6 $\x01\0"
    /* 2358 */ "mfbr7 $\x01\0"
    /* 2367 */ "mfxer $\x01\0"
    /* 2376 */ "mfrtcu $\x01\0"
    /* 2386 */ "mfrtcl $\x01\0"
    /* 2396 */ "mfdscr $\x01\0"
    /* 2406 */ "mfdsisr $\x01\0"
    /* 2417 */ "mfdar $\x01\0"
    /* 2426 */ "mfsrr2 $\x01\0"
    /* 2436 */ "mfsrr3 $\x01\0"
    /* 2446 */ "mfcfar $\x01\0"
    /* 2456 */ "mfamr $\x01\0"
    /* 2465 */ "mfpid $\x01\0"
    /* 2474 */ "mftblo $\x01\0"
    /* 2484 */ "mftbhi $\x01\0"
    /* 2494 */ "mfdbatu $\x01, 0\0"
    /* 2508 */ "mfdbatl $\x01, 0\0"
    /* 2522 */ "mfibatu $\x01, 0\0"
    /* 2536 */ "mfibatl $\x01, 0\0"
    /* 2550 */ "mfdbatu $\x01, 1\0"
    /* 2564 */ "mfdbatl $\x01, 1\0"
    /* 2578 */ "mfibatu $\x01, 1\0"
    /* 2592 */ "mfibatl $\x01, 1\0"
    /* 2606 */ "mfdbatu $\x01, 2\0"
    /* 2620 */ "mfdbatl $\x01, 2\0"
    /* 2634 */ "mfibatu $\x01, 2\0"
    /* 2648 */ "mfibatl $\x01, 2\0"
    /* 2662 */ "mfdbatu $\x01, 3\0"
    /* 2676 */ "mfdbatl $\x01, 3\0"
    /* 2690 */ "mfibatu $\x01, 3\0"
    /* 2704 */ "mfibatl $\x01, 3\0"
    /* 2718 */ "mfdccr $\x01\0"
    /* 2728 */ "mficcr $\x01\0"
    /* 2738 */ "mfdear $\x01\0"
    /* 2748 */ "mfesr $\x01\0"
    /* 2757 */ "mfspefscr $\x01\0"
    /* 2770 */ "mftcr $\x01\0"
    /* 2779 */ "mfasr $\x01\0"
    /* 2788 */ "mfpvr $\x01\0"
    /* 2797 */ "mftbu $\x01\0"
    /* 2806 */ "mfvrsave $\x01\0"
    /* 2818 */ "mffprd $\x01, $\x02\0"
    /* 2832 */ "mffprwz $\x01, $\x02\0"
    /* 2847 */ "mtcr $\x02\0"
    /* 2855 */ "mtbr0 $\x01\0"
    /* 2864 */ "mtbr1 $\x01\0"
    /* 2873 */ "mtbr2 $\x01\0"
    /* 2882 */ "mtbr3 $\x01\0"
    /* 2891 */ "mtbr4 $\x01\0"
    /* 2900 */ "mtbr5 $\x01\0"
    /* 2909 */ "mtbr6 $\x01\0"
    /* 2918 */ "mtbr7 $\x01\0"
    /* 2927 */ "mtfsf $\x01, $\x02\0"
    /* 2940 */ "mtfsfi $\x01, $\x02\0"
    /* 2954 */ "mtfsfi. $\x01, $\x02\0"
    /* 2969 */ "mtfsf. $\x01, $\x02\0"
    /* 2983 */ "mtmsr $\x01\0"
    /* 2992 */ "mtmsrd $\x01\0"
    /* 3002 */ "mtxer $\x02\0"
    /* 3011 */ "mtdscr $\x02\0"
    /* 3021 */ "mtdsisr $\x02\0"
    /* 3032 */ "mtdar $\x02\0"
    /* 3041 */ "mtsrr2 $\x02\0"
    /* 3051 */ "mtsrr3 $\x02\0"
    /* 3061 */ "mtcfar $\x02\0"
    /* 3071 */ "mtamr $\x02\0"
    /* 3080 */ "mtpid $\x02\0"
    /* 3089 */ "mttbl $\x02\0"
    /* 3098 */ "mttbu $\x02\0"
    /* 3107 */ "mttblo $\x02\0"
    /* 3117 */ "mttbhi $\x02\0"
    /* 3127 */ "mtdbatu 0, $\x02\0"
    /* 3141 */ "mtdbatl 0, $\x02\0"
    /* 3155 */ "mtibatu 0, $\x02\0"
    /* 3169 */ "mtibatl 0, $\x02\0"
    /* 3183 */ "mtdbatu 1, $\x02\0"
    /* 3197 */ "mtdbatl 1, $\x02\0"
    /* 3211 */ "mtibatu 1, $\x02\0"
    /* 3225 */ "mtibatl 1, $\x02\0"
    /* 3239 */ "mtdbatu 2, $\x02\0"
    /* 3253 */ "mtdbatl 2, $\x02\0"
    /* 3267 */ "mtibatu 2, $\x02\0"
    /* 3281 */ "mtibatl 2, $\x02\0"
    /* 3295 */ "mtdbatu 3, $\x02\0"
    /* 3309 */ "mtdbatl 3, $\x02\0"
    /* 3323 */ "mtibatu 3, $\x02\0"
    /* 3337 */ "mtibatl 3, $\x02\0"
    /* 3351 */ "mtdccr $\x02\0"
    /* 3361 */ "mticcr $\x02\0"
    /* 3371 */ "mtdear $\x02\0"
    /* 3381 */ "mtesr $\x02\0"
    /* 3390 */ "mtspefscr $\x02\0"
    /* 3403 */ "mttcr $\x02\0"
    /* 3412 */ "mtvrsave $\x01\0"
    /* 3424 */ "mtfprd $\x01, $\x02\0"
    /* 3438 */ "mtfprwa $\x01, $\x02\0"
    /* 3453 */ "mtfprwz $\x01, $\x02\0"
    /* 3468 */ "not $\x01, $\x02\0"
    /* 3479 */ "not. $\x01, $\x02\0"
    /* 3491 */ "mr $\x01, $\x02\0"
    /* 3501 */ "mr. $\x01, $\x02\0"
    /* 3512 */ "qvfclr $\x01\0"
    /* 3522 */ "qvfand $\x01, $\x02, $\x03\0"
    /* 3540 */ "qvfandc $\x01, $\x02, $\x03\0"
    /* 3559 */ "qvfctfb $\x01, $\x02\0"
    /* 3574 */ "qvfxor $\x01, $\x02, $\x03\0"
    /* 3592 */ "qvfor $\x01, $\x02, $\x03\0"
    /* 3609 */ "qvfnor $\x01, $\x02, $\x03\0"
    /* 3627 */ "qvfequ $\x01, $\x02, $\x03\0"
    /* 3645 */ "qvfnot $\x01, $\x02\0"
    /* 3659 */ "qvforc $\x01, $\x02, $\x03\0"
    /* 3677 */ "qvfnand $\x01, $\x02, $\x03\0"
    /* 3696 */ "qvfset $\x01\0"
    /* 3706 */ "rotld $\x01, $\x02, $\x03\0"
    /* 3723 */ "rotld. $\x01, $\x02, $\x03\0"
    /* 3741 */ "rotldi $\x01, $\x02, $\xFF\x03\x05\0"
    /* 3761 */ "clrldi $\x01, $\x02, $\xFF\x04\x05\0"
    /* 3781 */ "rotldi. $\x01, $\x02, $\xFF\x03\x05\0"
    /* 3802 */ "clrldi. $\x01, $\x02, $\xFF\x04\x05\0"
    /* 3823 */ "rotlwi $\x01, $\x02, $\xFF\x03\x06\0"
    /* 3843 */ "clrlwi $\x01, $\x02, $\xFF\x04\x06\0"
    /* 3863 */ "rotlwi. $\x01, $\x02, $\xFF\x03\x06\0"
    /* 3884 */ "clrlwi. $\x01, $\x02, $\xFF\x04\x06\0"
    /* 3905 */ "rotlw $\x01, $\x02, $\x03\0"
    /* 3922 */ "rotlw. $\x01, $\x02, $\x03\0"
    /* 3940 */ "sc\0"
    /* 3943 */ "sub $\x01, $\x03, $\x02\0"
    /* 3958 */ "sub. $\x01, $\x03, $\x02\0"
    /* 3974 */ "subc $\x01, $\x03, $\x02\0"
    /* 3990 */ "subc. $\x01, $\x03, $\x02\0"
    /* 4007 */ "sync\0"
    /* 4012 */ "lwsync\0"
    /* 4019 */ "ptesync\0"
    /* 4027 */ "tdlt $\x02, $\x03\0"
    /* 4039 */ "tdeq $\x02, $\x03\0"
    /* 4051 */ "tdgt $\x02, $\x03\0"
    /* 4063 */ "tdne $\x02, $\x03\0"
    /* 4075 */ "tdllt $\x02, $\x03\0"
    /* 4088 */ "tdlgt $\x02, $\x03\0"
    /* 4101 */ "tdu $\x02, $\x03\0"
    /* 4112 */ "tdlti $\x02, $\xFF\x03\x03\0"
    /* 4127 */ "tdeqi $\x02, $\xFF\x03\x03\0"
    /* 4142 */ "tdgti $\x02, $\xFF\x03\x03\0"
    /* 4157 */ "tdnei $\x02, $\xFF\x03\x03\0"
    /* 4172 */ "tdllti $\x02, $\xFF\x03\x03\0"
    /* 4188 */ "tdlgti $\x02, $\xFF\x03\x03\0"
    /* 4204 */ "tdui $\x02, $\xFF\x03\x03\0"
    /* 4218 */ "tlbie $\x02\0"
    /* 4227 */ "tlbrehi $\x01, $\x02\0"
    /* 4242 */ "tlbrelo $\x01, $\x02\0"
    /* 4257 */ "tlbwehi $\x01, $\x02\0"
    /* 4272 */ "tlbwelo $\x01, $\x02\0"
    /* 4287 */ "twlt $\x02, $\x03\0"
    /* 4299 */ "tweq $\x02, $\x03\0"
    /* 4311 */ "twgt $\x02, $\x03\0"
    /* 4323 */ "twne $\x02, $\x03\0"
    /* 4335 */ "twllt $\x02, $\x03\0"
    /* 4348 */ "twlgt $\x02, $\x03\0"
    /* 4361 */ "twu $\x02, $\x03\0"
    /* 4372 */ "twlti $\x02, $\xFF\x03\x03\0"
    /* 4387 */ "tweqi $\x02, $\xFF\x03\x03\0"
    /* 4402 */ "twgti $\x02, $\xFF\x03\x03\0"
    /* 4417 */ "twnei $\x02, $\xFF\x03\x03\0"
    /* 4432 */ "twllti $\x02, $\xFF\x03\x03\0"
    /* 4448 */ "twlgti $\x02, $\xFF\x03\x03\0"
    /* 4464 */ "twui $\x02, $\xFF\x03\x03\0"
    /* 4478 */ "vnot $\x01, $\x02\0"
    /* 4490 */ "vmr $\x01, $\x02\0"
    /* 4501 */ "wait\0"
    /* 4506 */ "waitrsv\0"
    /* 4514 */ "waitimpl\0"
    /* 4523 */ "xnop\0"
    /* 4528 */ "xvmovdp $\x01, $\x02\0"
    /* 4543 */ "xvmovsp $\x01, $\x02\0"
    /* 4558 */ "xxspltd $\x01, $\x02, 0\0"
    /* 4576 */ "xxspltd $\x01, $\x02, 1\0"
    /* 4594 */ "xxmrghd $\x01, $\x02, $\x03\0"
    /* 4613 */ "xxmrgld $\x01, $\x02, $\x03\0"
    /* 4632 */ "xxswapd $\x01, $\x02\0"
    /* 4647 */ "bt $\x02, $\xFF\x03\x01\0"
    /* 4659 */ "bf $\x02, $\xFF\x03\x01\0"
    /* 4671 */ "bt- $\x02, $\xFF\x03\x01\0"
    /* 4684 */ "bf- $\x02, $\xFF\x03\x01\0"
    /* 4697 */ "bt+ $\x02, $\xFF\x03\x01\0"
    /* 4710 */ "bf+ $\x02, $\xFF\x03\x01\0"
    /* 4723 */ "bdnzt $\x02, $\xFF\x03\x01\0"
    /* 4738 */ "bdnzf $\x02, $\xFF\x03\x01\0"
    /* 4753 */ "bdzt $\x02, $\xFF\x03\x01\0"
    /* 4767 */ "bdzf $\x02, $\xFF\x03\x01\0"
    /* 4781 */ "bta $\x02, $\xFF\x03\x02\0"
    /* 4794 */ "bfa $\x02, $\xFF\x03\x02\0"
    /* 4807 */ "bta- $\x02, $\xFF\x03\x02\0"
    /* 4821 */ "bfa- $\x02, $\xFF\x03\x02\0"
    /* 4835 */ "bta+ $\x02, $\xFF\x03\x02\0"
    /* 4849 */ "bfa+ $\x02, $\xFF\x03\x02\0"
    /* 4863 */ "bdnzta $\x02, $\xFF\x03\x02\0"
    /* 4879 */ "bdnzfa $\x02, $\xFF\x03\x02\0"
    /* 4895 */ "bdzta $\x02, $\xFF\x03\x02\0"
    /* 4910 */ "bdzfa $\x02, $\xFF\x03\x02\0"
    /* 4925 */ "bca+ $\xFF\x01\x06, $\x03, $\xFF\x04\x01\0"
    /* 4945 */ "bca- $\xFF\x01\x06, $\x03, $\xFF\x04\x01\0"
    /* 4965 */ "bcctr $\xFF\x01\x06, $\x02\0"
    /* 4980 */ "btctr $\x02\0"
    /* 4989 */ "bfctr $\x02\0"
    /* 4998 */ "btctr- $\x02\0"
    /* 5008 */ "bfctr- $\x02\0"
    /* 5018 */ "btctr+ $\x02\0"
    /* 5028 */ "bfctr+ $\x02\0"
    /* 5038 */ "bcctrl $\xFF\x01\x06, $\x02\0"
    /* 5054 */ "btctrl $\x02\0"
    /* 5064 */ "bfctrl $\x02\0"
    /* 5074 */ "btctrl- $\x02\0"
    /* 5085 */ "bfctrl- $\x02\0"
    /* 5096 */ "btctrl+ $\x02\0"
    /* 5107 */ "bfctrl+ $\x02\0"
    /* 5118 */ "btl $\x02, $\xFF\x03\x01\0"
    /* 5131 */ "bfl $\x02, $\xFF\x03\x01\0"
    /* 5144 */ "btl- $\x02, $\xFF\x03\x01\0"
    /* 5158 */ "bfl- $\x02, $\xFF\x03\x01\0"
    /* 5172 */ "btl+ $\x02, $\xFF\x03\x01\0"
    /* 5186 */ "bfl+ $\x02, $\xFF\x03\x01\0"
    /* 5200 */ "bdnztl $\x02, $\xFF\x03\x01\0"
    /* 5216 */ "bdnzfl $\x02, $\xFF\x03\x01\0"
    /* 5232 */ "bdztl $\x02, $\xFF\x03\x01\0"
    /* 5247 */ "bdzfl $\x02, $\xFF\x03\x01\0"
    /* 5262 */ "btla $\x02, $\xFF\x03\x02\0"
    /* 5276 */ "bfla $\x02, $\xFF\x03\x02\0"
    /* 5290 */ "btla- $\x02, $\xFF\x03\x02\0"
    /* 5305 */ "bfla- $\x02, $\xFF\x03\x02\0"
    /* 5320 */ "btla+ $\x02, $\xFF\x03\x02\0"
    /* 5335 */ "bfla+ $\x02, $\xFF\x03\x02\0"
    /* 5350 */ "bdnztla $\x02, $\xFF\x03\x02\0"
    /* 5367 */ "bdnzfla $\x02, $\xFF\x03\x02\0"
    /* 5384 */ "bdztla $\x02, $\xFF\x03\x02\0"
    /* 5400 */ "bdzfla $\x02, $\xFF\x03\x02\0"
    /* 5416 */ "bcla+ $\xFF\x01\x06, $\x03, $\xFF\x04\x01\0"
    /* 5437 */ "bcla- $\xFF\x01\x06, $\x03, $\xFF\x04\x01\0"
    /* 5458 */ "bclr $\xFF\x01\x06, $\x02\0"
    /* 5472 */ "btlr $\x02\0"
    /* 5480 */ "bflr $\x02\0"
    /* 5488 */ "btlr- $\x02\0"
    /* 5497 */ "bflr- $\x02\0"
    /* 5506 */ "btlr+ $\x02\0"
    /* 5515 */ "bflr+ $\x02\0"
    /* 5524 */ "bdnztlr $\x02\0"
    /* 5535 */ "bdnzflr $\x02\0"
    /* 5546 */ "bdztlr $\x02\0"
    /* 5556 */ "bdzflr $\x02\0"
    /* 5566 */ "bclrl $\xFF\x01\x06, $\x02\0"
    /* 5581 */ "btlrl $\x02\0"
    /* 5590 */ "bflrl $\x02\0"
    /* 5599 */ "btlrl- $\x02\0"
    /* 5609 */ "bflrl- $\x02\0"
    /* 5619 */ "btlrl+ $\x02\0"
    /* 5629 */ "bflrl+ $\x02\0"
    /* 5639 */ "bdnztlrl $\x02\0"
    /* 5651 */ "bdnzflrl $\x02\0"
    /* 5663 */ "bdztlrl $\x02\0"
    /* 5674 */ "bdzflrl $\x02\0"
    /* 5685 */ "bcl+ $\xFF\x01\x06, $\x03, $\xFF\x04\x01\0"
    /* 5705 */ "bcl- $\xFF\x01\x06, $\x03, $\xFF\x04\x01\0"
    /* 5725 */ "bc+ $\xFF\x01\x06, $\x03, $\xFF\x04\x01\0"
    /* 5744 */ "bc- $\xFF\x01\x06, $\x03, $\xFF\x04\x01\0"
  ;

#ifndef NDEBUG
  static struct SortCheck {
    SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
      assert(std::is_sorted(
                 OpToPatterns.begin(), OpToPatterns.end(),
                 [](const PatternsForOpcode &L, const PatternsForOpcode &R) {
                   return L.Opcode < R.Opcode;
                 }) &&
             "tablegen failed to sort opcode patterns");
    }
  } sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M {
    makeArrayRef(OpToPatterns),
    makeArrayRef(Patterns),
    makeArrayRef(Conds),
    StringRef(AsmStrings, array_lengthof(AsmStrings)),
    nullptr,
  };
  const char *AsmString = matchAliasPatterns(MI, nullptr, M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      OS << '\t';
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void PPCInstPrinter::printCustomAliasOperand(
         const MCInst *MI, unsigned OpIdx,
         unsigned PrintMethodIdx,
         raw_ostream &OS) {
  switch (PrintMethodIdx) {
  default:
    llvm_unreachable("Unknown PrintMethod kind");
    break;
  case 0:
    printBranchOperand(MI, OpIdx, OS);
    break;
  case 1:
    printAbsBranchOperand(MI, OpIdx, OS);
    break;
  case 2:
    printS16ImmOperand(MI, OpIdx, OS);
    break;
  case 3:
    printU16ImmOperand(MI, OpIdx, OS);
    break;
  case 4:
    printU6ImmOperand(MI, OpIdx, OS);
    break;
  case 5:
    printU5ImmOperand(MI, OpIdx, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
