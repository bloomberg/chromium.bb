/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void MipsInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O) {
  static const char AsmStrs[] = {
  /* 0 */ 'd', 'm', 'f', 'c', '0', 9, 0,
  /* 7 */ 'd', 'm', 'f', 'g', 'c', '0', 9, 0,
  /* 15 */ 'm', 'f', 'h', 'g', 'c', '0', 9, 0,
  /* 23 */ 'm', 't', 'h', 'g', 'c', '0', 9, 0,
  /* 31 */ 'd', 'm', 't', 'g', 'c', '0', 9, 0,
  /* 39 */ 'm', 'f', 'h', 'c', '0', 9, 0,
  /* 46 */ 'm', 't', 'h', 'c', '0', 9, 0,
  /* 53 */ 'd', 'm', 't', 'c', '0', 9, 0,
  /* 60 */ 'v', 'm', 'm', '0', 9, 0,
  /* 66 */ 'm', 't', 'm', '0', 9, 0,
  /* 72 */ 'm', 't', 'p', '0', 9, 0,
  /* 78 */ 'b', 'b', 'i', 't', '0', 9, 0,
  /* 85 */ 'l', 'd', 'c', '1', 9, 0,
  /* 91 */ 's', 'd', 'c', '1', 9, 0,
  /* 97 */ 'c', 'f', 'c', '1', 9, 0,
  /* 103 */ 'd', 'm', 'f', 'c', '1', 9, 0,
  /* 110 */ 'm', 'f', 'h', 'c', '1', 9, 0,
  /* 117 */ 'm', 't', 'h', 'c', '1', 9, 0,
  /* 124 */ 'c', 't', 'c', '1', 9, 0,
  /* 130 */ 'd', 'm', 't', 'c', '1', 9, 0,
  /* 137 */ 'l', 'w', 'c', '1', 9, 0,
  /* 143 */ 's', 'w', 'c', '1', 9, 0,
  /* 149 */ 'l', 'd', 'x', 'c', '1', 9, 0,
  /* 156 */ 's', 'd', 'x', 'c', '1', 9, 0,
  /* 163 */ 'l', 'u', 'x', 'c', '1', 9, 0,
  /* 170 */ 's', 'u', 'x', 'c', '1', 9, 0,
  /* 177 */ 'l', 'w', 'x', 'c', '1', 9, 0,
  /* 184 */ 's', 'w', 'x', 'c', '1', 9, 0,
  /* 191 */ 'm', 't', 'm', '1', 9, 0,
  /* 197 */ 'm', 't', 'p', '1', 9, 0,
  /* 203 */ 'b', 'b', 'i', 't', '1', 9, 0,
  /* 210 */ 'b', 'b', 'i', 't', '0', '3', '2', 9, 0,
  /* 219 */ 'b', 'b', 'i', 't', '1', '3', '2', 9, 0,
  /* 228 */ 'd', 's', 'r', 'a', '3', '2', 9, 0,
  /* 236 */ 'b', 'p', 'o', 's', 'g', 'e', '3', '2', 9, 0,
  /* 246 */ 'd', 's', 'l', 'l', '3', '2', 9, 0,
  /* 254 */ 'd', 's', 'r', 'l', '3', '2', 9, 0,
  /* 262 */ 'l', 'w', 'm', '3', '2', 9, 0,
  /* 269 */ 's', 'w', 'm', '3', '2', 9, 0,
  /* 276 */ 'd', 'r', 'o', 't', 'r', '3', '2', 9, 0,
  /* 285 */ 'c', 'i', 'n', 's', '3', '2', 9, 0,
  /* 293 */ 'e', 'x', 't', 's', '3', '2', 9, 0,
  /* 301 */ 'l', 'd', 'c', '2', 9, 0,
  /* 307 */ 's', 'd', 'c', '2', 9, 0,
  /* 313 */ 'c', 'f', 'c', '2', 9, 0,
  /* 319 */ 'd', 'm', 'f', 'c', '2', 9, 0,
  /* 326 */ 'm', 'f', 'h', 'c', '2', 9, 0,
  /* 333 */ 'm', 't', 'h', 'c', '2', 9, 0,
  /* 340 */ 'c', 't', 'c', '2', 9, 0,
  /* 346 */ 'd', 'm', 't', 'c', '2', 9, 0,
  /* 353 */ 'l', 'w', 'c', '2', 9, 0,
  /* 359 */ 's', 'w', 'c', '2', 9, 0,
  /* 365 */ 'm', 't', 'm', '2', 9, 0,
  /* 371 */ 'm', 't', 'p', '2', 9, 0,
  /* 377 */ 'a', 'd', 'd', 'i', 'u', 'r', '2', 9, 0,
  /* 386 */ 'l', 'd', 'c', '3', 9, 0,
  /* 392 */ 's', 'd', 'c', '3', 9, 0,
  /* 398 */ 'l', 'w', 'c', '3', 9, 0,
  /* 404 */ 's', 'w', 'c', '3', 9, 0,
  /* 410 */ 'a', 'd', 'd', 'i', 'u', 's', '5', 9, 0,
  /* 419 */ 's', 'b', '1', '6', 9, 0,
  /* 425 */ 'b', 'c', '1', '6', 9, 0,
  /* 431 */ 'j', 'r', 'c', '1', '6', 9, 0,
  /* 438 */ 'b', 'n', 'e', 'z', 'c', '1', '6', 9, 0,
  /* 447 */ 'b', 'e', 'q', 'z', 'c', '1', '6', 9, 0,
  /* 456 */ 'a', 'n', 'd', '1', '6', 9, 0,
  /* 463 */ 'm', 'o', 'v', 'e', '1', '6', 9, 0,
  /* 471 */ 's', 'h', '1', '6', 9, 0,
  /* 477 */ 'a', 'n', 'd', 'i', '1', '6', 9, 0,
  /* 485 */ 'm', 'f', 'h', 'i', '1', '6', 9, 0,
  /* 493 */ 'l', 'i', '1', '6', 9, 0,
  /* 499 */ 'b', 'r', 'e', 'a', 'k', '1', '6', 9, 0,
  /* 508 */ 's', 'l', 'l', '1', '6', 9, 0,
  /* 515 */ 's', 'r', 'l', '1', '6', 9, 0,
  /* 522 */ 'l', 'w', 'm', '1', '6', 9, 0,
  /* 529 */ 's', 'w', 'm', '1', '6', 9, 0,
  /* 536 */ 'm', 'f', 'l', 'o', '1', '6', 9, 0,
  /* 544 */ 's', 'd', 'b', 'b', 'p', '1', '6', 9, 0,
  /* 553 */ 'j', 'r', '1', '6', 9, 0,
  /* 559 */ 'x', 'o', 'r', '1', '6', 9, 0,
  /* 566 */ 'j', 'a', 'l', 'r', 's', '1', '6', 9, 0,
  /* 575 */ 'n', 'o', 't', '1', '6', 9, 0,
  /* 582 */ 'l', 'b', 'u', '1', '6', 9, 0,
  /* 589 */ 's', 'u', 'b', 'u', '1', '6', 9, 0,
  /* 597 */ 'a', 'd', 'd', 'u', '1', '6', 9, 0,
  /* 605 */ 'l', 'h', 'u', '1', '6', 9, 0,
  /* 612 */ 'l', 'w', '1', '6', 9, 0,
  /* 618 */ 's', 'w', '1', '6', 9, 0,
  /* 624 */ 'b', 'n', 'e', 'z', '1', '6', 9, 0,
  /* 632 */ 'b', 'e', 'q', 'z', '1', '6', 9, 0,
  /* 640 */ 's', 'a', 'a', 9, 0,
  /* 645 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 'a', 9, 0,
  /* 661 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 'a', 9, 0,
  /* 678 */ 'd', 'l', 'a', 9, 0,
  /* 683 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 'a', 9, 0,
  /* 699 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 'a', 9, 0,
  /* 716 */ 'd', 's', 'r', 'a', 9, 0,
  /* 722 */ 'd', 'l', 's', 'a', 9, 0,
  /* 728 */ 'c', 'f', 'c', 'm', 's', 'a', 9, 0,
  /* 736 */ 'c', 't', 'c', 'm', 's', 'a', 9, 0,
  /* 744 */ 'a', 'd', 'd', '_', 'a', '.', 'b', 9, 0,
  /* 753 */ 'm', 'i', 'n', '_', 'a', '.', 'b', 9, 0,
  /* 762 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'b', 9, 0,
  /* 772 */ 'm', 'a', 'x', '_', 'a', '.', 'b', 9, 0,
  /* 781 */ 's', 'r', 'a', '.', 'b', 9, 0,
  /* 788 */ 'n', 'l', 'o', 'c', '.', 'b', 9, 0,
  /* 796 */ 'n', 'l', 'z', 'c', '.', 'b', 9, 0,
  /* 804 */ 's', 'l', 'd', '.', 'b', 9, 0,
  /* 811 */ 'p', 'c', 'k', 'o', 'd', '.', 'b', 9, 0,
  /* 820 */ 'i', 'l', 'v', 'o', 'd', '.', 'b', 9, 0,
  /* 829 */ 'i', 'n', 's', 'v', 'e', '.', 'b', 9, 0,
  /* 838 */ 'v', 's', 'h', 'f', '.', 'b', 9, 0,
  /* 846 */ 'b', 'n', 'e', 'g', '.', 'b', 9, 0,
  /* 854 */ 's', 'r', 'a', 'i', '.', 'b', 9, 0,
  /* 862 */ 's', 'l', 'd', 'i', '.', 'b', 9, 0,
  /* 870 */ 'a', 'n', 'd', 'i', '.', 'b', 9, 0,
  /* 878 */ 'b', 'n', 'e', 'g', 'i', '.', 'b', 9, 0,
  /* 887 */ 'b', 's', 'e', 'l', 'i', '.', 'b', 9, 0,
  /* 896 */ 's', 'l', 'l', 'i', '.', 'b', 9, 0,
  /* 904 */ 's', 'r', 'l', 'i', '.', 'b', 9, 0,
  /* 912 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'b', 9, 0,
  /* 922 */ 'c', 'e', 'q', 'i', '.', 'b', 9, 0,
  /* 930 */ 's', 'r', 'a', 'r', 'i', '.', 'b', 9, 0,
  /* 939 */ 'b', 'c', 'l', 'r', 'i', '.', 'b', 9, 0,
  /* 948 */ 's', 'r', 'l', 'r', 'i', '.', 'b', 9, 0,
  /* 957 */ 'n', 'o', 'r', 'i', '.', 'b', 9, 0,
  /* 965 */ 'x', 'o', 'r', 'i', '.', 'b', 9, 0,
  /* 973 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'b', 9, 0,
  /* 983 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'b', 9, 0,
  /* 993 */ 'b', 's', 'e', 't', 'i', '.', 'b', 9, 0,
  /* 1002 */ 's', 'u', 'b', 'v', 'i', '.', 'b', 9, 0,
  /* 1011 */ 'a', 'd', 'd', 'v', 'i', '.', 'b', 9, 0,
  /* 1020 */ 'b', 'm', 'z', 'i', '.', 'b', 9, 0,
  /* 1028 */ 'b', 'm', 'n', 'z', 'i', '.', 'b', 9, 0,
  /* 1037 */ 'f', 'i', 'l', 'l', '.', 'b', 9, 0,
  /* 1045 */ 's', 'l', 'l', '.', 'b', 9, 0,
  /* 1052 */ 's', 'r', 'l', '.', 'b', 9, 0,
  /* 1059 */ 'b', 'i', 'n', 's', 'l', '.', 'b', 9, 0,
  /* 1068 */ 'i', 'l', 'v', 'l', '.', 'b', 9, 0,
  /* 1076 */ 'c', 'e', 'q', '.', 'b', 9, 0,
  /* 1083 */ 's', 'r', 'a', 'r', '.', 'b', 9, 0,
  /* 1091 */ 'b', 'c', 'l', 'r', '.', 'b', 9, 0,
  /* 1099 */ 's', 'r', 'l', 'r', '.', 'b', 9, 0,
  /* 1107 */ 'b', 'i', 'n', 's', 'r', '.', 'b', 9, 0,
  /* 1116 */ 'i', 'l', 'v', 'r', '.', 'b', 9, 0,
  /* 1124 */ 'a', 's', 'u', 'b', '_', 's', '.', 'b', 9, 0,
  /* 1134 */ 'm', 'o', 'd', '_', 's', '.', 'b', 9, 0,
  /* 1143 */ 'c', 'l', 'e', '_', 's', '.', 'b', 9, 0,
  /* 1152 */ 'a', 'v', 'e', '_', 's', '.', 'b', 9, 0,
  /* 1161 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'b', 9, 0,
  /* 1171 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'b', 9, 0,
  /* 1181 */ 'c', 'l', 't', 'i', '_', 's', '.', 'b', 9, 0,
  /* 1191 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'b', 9, 0,
  /* 1201 */ 'm', 'i', 'n', '_', 's', '.', 'b', 9, 0,
  /* 1210 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'b', 9, 0,
  /* 1220 */ 's', 'u', 'b', 's', '_', 's', '.', 'b', 9, 0,
  /* 1230 */ 'a', 'd', 'd', 's', '_', 's', '.', 'b', 9, 0,
  /* 1240 */ 's', 'a', 't', '_', 's', '.', 'b', 9, 0,
  /* 1249 */ 'c', 'l', 't', '_', 's', '.', 'b', 9, 0,
  /* 1258 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'b', 9, 0,
  /* 1270 */ 'd', 'i', 'v', '_', 's', '.', 'b', 9, 0,
  /* 1279 */ 'm', 'a', 'x', '_', 's', '.', 'b', 9, 0,
  /* 1288 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'b', 9, 0,
  /* 1298 */ 's', 'p', 'l', 'a', 't', '.', 'b', 9, 0,
  /* 1307 */ 'b', 's', 'e', 't', '.', 'b', 9, 0,
  /* 1315 */ 'p', 'c', 'n', 't', '.', 'b', 9, 0,
  /* 1323 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'b', 9, 0,
  /* 1333 */ 's', 't', '.', 'b', 9, 0,
  /* 1339 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'b', 9, 0,
  /* 1349 */ 'm', 'o', 'd', '_', 'u', '.', 'b', 9, 0,
  /* 1358 */ 'c', 'l', 'e', '_', 'u', '.', 'b', 9, 0,
  /* 1367 */ 'a', 'v', 'e', '_', 'u', '.', 'b', 9, 0,
  /* 1376 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 1386 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 1396 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 1406 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 1416 */ 'm', 'i', 'n', '_', 'u', '.', 'b', 9, 0,
  /* 1425 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'b', 9, 0,
  /* 1435 */ 's', 'u', 'b', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1445 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1455 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1467 */ 's', 'a', 't', '_', 'u', '.', 'b', 9, 0,
  /* 1476 */ 'c', 'l', 't', '_', 'u', '.', 'b', 9, 0,
  /* 1485 */ 'd', 'i', 'v', '_', 'u', '.', 'b', 9, 0,
  /* 1494 */ 'm', 'a', 'x', '_', 'u', '.', 'b', 9, 0,
  /* 1503 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'b', 9, 0,
  /* 1513 */ 'm', 's', 'u', 'b', 'v', '.', 'b', 9, 0,
  /* 1522 */ 'm', 'a', 'd', 'd', 'v', '.', 'b', 9, 0,
  /* 1531 */ 'p', 'c', 'k', 'e', 'v', '.', 'b', 9, 0,
  /* 1540 */ 'i', 'l', 'v', 'e', 'v', '.', 'b', 9, 0,
  /* 1549 */ 'm', 'u', 'l', 'v', '.', 'b', 9, 0,
  /* 1557 */ 'b', 'z', '.', 'b', 9, 0,
  /* 1563 */ 'b', 'n', 'z', '.', 'b', 9, 0,
  /* 1570 */ 'c', 'r', 'c', '3', '2', 'b', 9, 0,
  /* 1578 */ 'c', 'r', 'c', '3', '2', 'c', 'b', 9, 0,
  /* 1587 */ 's', 'e', 'b', 9, 0,
  /* 1592 */ 'j', 'a', 'l', 'r', 'c', '.', 'h', 'b', 9, 0,
  /* 1602 */ 'j', 'r', '.', 'h', 'b', 9, 0,
  /* 1609 */ 'j', 'a', 'l', 'r', '.', 'h', 'b', 9, 0,
  /* 1618 */ 'l', 'b', 9, 0,
  /* 1622 */ 's', 'h', 'r', 'a', '.', 'q', 'b', 9, 0,
  /* 1631 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1645 */ 'c', 'm', 'p', 'g', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1658 */ 'c', 'm', 'p', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1670 */ 's', 'u', 'b', 'u', 'h', '.', 'q', 'b', 9, 0,
  /* 1680 */ 'a', 'd', 'd', 'u', 'h', '.', 'q', 'b', 9, 0,
  /* 1690 */ 'p', 'i', 'c', 'k', '.', 'q', 'b', 9, 0,
  /* 1699 */ 's', 'h', 'l', 'l', '.', 'q', 'b', 9, 0,
  /* 1708 */ 'r', 'e', 'p', 'l', '.', 'q', 'b', 9, 0,
  /* 1717 */ 's', 'h', 'r', 'l', '.', 'q', 'b', 9, 0,
  /* 1726 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1740 */ 'c', 'm', 'p', 'g', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1753 */ 'c', 'm', 'p', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1765 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1776 */ 's', 'u', 'b', 'u', 'h', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1788 */ 'a', 'd', 'd', 'u', 'h', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1800 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1812 */ 'a', 'b', 's', 'q', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1823 */ 's', 'u', 'b', 'u', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1834 */ 'a', 'd', 'd', 'u', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1845 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1859 */ 'c', 'm', 'p', 'g', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1872 */ 'c', 'm', 'p', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1884 */ 's', 'u', 'b', 'u', '.', 'q', 'b', 9, 0,
  /* 1893 */ 'a', 'd', 'd', 'u', '.', 'q', 'b', 9, 0,
  /* 1902 */ 's', 'h', 'r', 'a', 'v', '.', 'q', 'b', 9, 0,
  /* 1912 */ 's', 'h', 'l', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1922 */ 'r', 'e', 'p', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1932 */ 's', 'h', 'r', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1942 */ 'r', 'a', 'd', 'd', 'u', '.', 'w', '.', 'q', 'b', 9, 0,
  /* 1954 */ 's', 'b', 9, 0,
  /* 1958 */ 'm', 'o', 'd', 's', 'u', 'b', 9, 0,
  /* 1966 */ 'm', 's', 'u', 'b', 9, 0,
  /* 1972 */ 'b', 'p', 'o', 's', 'g', 'e', '3', '2', 'c', 9, 0,
  /* 1983 */ 'b', 'c', 9, 0,
  /* 1987 */ 'b', 'g', 'e', 'c', 9, 0,
  /* 1993 */ 'b', 'n', 'e', 'c', 9, 0,
  /* 1999 */ 'j', 'i', 'c', 9, 0,
  /* 2004 */ 'b', 'a', 'l', 'c', 9, 0,
  /* 2010 */ 'j', 'i', 'a', 'l', 'c', 9, 0,
  /* 2017 */ 'b', 'g', 'e', 'z', 'a', 'l', 'c', 9, 0,
  /* 2026 */ 'b', 'l', 'e', 'z', 'a', 'l', 'c', 9, 0,
  /* 2035 */ 'b', 'n', 'e', 'z', 'a', 'l', 'c', 9, 0,
  /* 2044 */ 'b', 'e', 'q', 'z', 'a', 'l', 'c', 9, 0,
  /* 2053 */ 'b', 'g', 't', 'z', 'a', 'l', 'c', 9, 0,
  /* 2062 */ 'b', 'l', 't', 'z', 'a', 'l', 'c', 9, 0,
  /* 2071 */ 's', 'y', 'n', 'c', 9, 0,
  /* 2077 */ 'l', 'd', 'p', 'c', 9, 0,
  /* 2083 */ 'a', 'u', 'i', 'p', 'c', 9, 0,
  /* 2090 */ 'a', 'l', 'u', 'i', 'p', 'c', 9, 0,
  /* 2098 */ 'a', 'd', 'd', 'i', 'u', 'p', 'c', 9, 0,
  /* 2107 */ 'l', 'w', 'u', 'p', 'c', 9, 0,
  /* 2114 */ 'l', 'w', 'p', 'c', 9, 0,
  /* 2120 */ 'b', 'e', 'q', 'c', 9, 0,
  /* 2126 */ 'j', 'r', 'c', 9, 0,
  /* 2131 */ 'j', 'a', 'l', 'r', 'c', 9, 0,
  /* 2138 */ 'a', 'd', 'd', 's', 'c', 9, 0,
  /* 2145 */ 'b', 'l', 't', 'c', 9, 0,
  /* 2151 */ 'b', 'g', 'e', 'u', 'c', 9, 0,
  /* 2158 */ 'b', 'l', 't', 'u', 'c', 9, 0,
  /* 2165 */ 'b', 'n', 'v', 'c', 9, 0,
  /* 2171 */ 'b', 'o', 'v', 'c', 9, 0,
  /* 2177 */ 'a', 'd', 'd', 'w', 'c', 9, 0,
  /* 2184 */ 'b', 'g', 'e', 'z', 'c', 9, 0,
  /* 2191 */ 'b', 'l', 'e', 'z', 'c', 9, 0,
  /* 2198 */ 'b', 'c', '1', 'n', 'e', 'z', 'c', 9, 0,
  /* 2207 */ 'b', 'c', '2', 'n', 'e', 'z', 'c', 9, 0,
  /* 2216 */ 'b', 'n', 'e', 'z', 'c', 9, 0,
  /* 2223 */ 'b', 'c', '1', 'e', 'q', 'z', 'c', 9, 0,
  /* 2232 */ 'b', 'c', '2', 'e', 'q', 'z', 'c', 9, 0,
  /* 2241 */ 'b', 'e', 'q', 'z', 'c', 9, 0,
  /* 2248 */ 'b', 'g', 't', 'z', 'c', 9, 0,
  /* 2255 */ 'b', 'l', 't', 'z', 'c', 9, 0,
  /* 2262 */ 'f', 'l', 'o', 'g', '2', '.', 'd', 9, 0,
  /* 2271 */ 'f', 'e', 'x', 'p', '2', '.', 'd', 9, 0,
  /* 2280 */ 'a', 'd', 'd', '_', 'a', '.', 'd', 9, 0,
  /* 2289 */ 'f', 'm', 'i', 'n', '_', 'a', '.', 'd', 9, 0,
  /* 2299 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'd', 9, 0,
  /* 2309 */ 'f', 'm', 'a', 'x', '_', 'a', '.', 'd', 9, 0,
  /* 2319 */ 'm', 'i', 'n', 'a', '.', 'd', 9, 0,
  /* 2327 */ 's', 'r', 'a', '.', 'd', 9, 0,
  /* 2334 */ 'm', 'a', 'x', 'a', '.', 'd', 9, 0,
  /* 2342 */ 'f', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 2350 */ 'f', 'm', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 2359 */ 'n', 'm', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 2368 */ 'n', 'l', 'o', 'c', '.', 'd', 9, 0,
  /* 2376 */ 'n', 'l', 'z', 'c', '.', 'd', 9, 0,
  /* 2384 */ 'f', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 2392 */ 'f', 'm', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 2401 */ 'n', 'm', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 2410 */ 's', 'l', 'd', '.', 'd', 9, 0,
  /* 2417 */ 'p', 'c', 'k', 'o', 'd', '.', 'd', 9, 0,
  /* 2426 */ 'i', 'l', 'v', 'o', 'd', '.', 'd', 9, 0,
  /* 2435 */ 'c', '.', 'n', 'g', 'e', '.', 'd', 9, 0,
  /* 2444 */ 'c', '.', 'l', 'e', '.', 'd', 9, 0,
  /* 2452 */ 'c', 'm', 'p', '.', 'l', 'e', '.', 'd', 9, 0,
  /* 2462 */ 'f', 'c', 'l', 'e', '.', 'd', 9, 0,
  /* 2470 */ 'c', '.', 'n', 'g', 'l', 'e', '.', 'd', 9, 0,
  /* 2480 */ 'c', '.', 'o', 'l', 'e', '.', 'd', 9, 0,
  /* 2489 */ 'c', 'm', 'p', '.', 's', 'l', 'e', '.', 'd', 9, 0,
  /* 2500 */ 'f', 's', 'l', 'e', '.', 'd', 9, 0,
  /* 2508 */ 'c', '.', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 2517 */ 'c', 'm', 'p', '.', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 2528 */ 'f', 'c', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 2537 */ 'c', 'm', 'p', '.', 's', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 2549 */ 'f', 's', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 2558 */ 'f', 'c', 'n', 'e', '.', 'd', 9, 0,
  /* 2566 */ 'f', 's', 'n', 'e', '.', 'd', 9, 0,
  /* 2574 */ 'f', 'c', 'u', 'n', 'e', '.', 'd', 9, 0,
  /* 2583 */ 'f', 's', 'u', 'n', 'e', '.', 'd', 9, 0,
  /* 2592 */ 'i', 'n', 's', 'v', 'e', '.', 'd', 9, 0,
  /* 2601 */ 'c', '.', 'f', '.', 'd', 9, 0,
  /* 2608 */ 'c', 'm', 'p', '.', 'a', 'f', '.', 'd', 9, 0,
  /* 2618 */ 'f', 'c', 'a', 'f', '.', 'd', 9, 0,
  /* 2626 */ 'c', 'm', 'p', '.', 's', 'a', 'f', '.', 'd', 9, 0,
  /* 2637 */ 'f', 's', 'a', 'f', '.', 'd', 9, 0,
  /* 2645 */ 'm', 's', 'u', 'b', 'f', '.', 'd', 9, 0,
  /* 2654 */ 'm', 'a', 'd', 'd', 'f', '.', 'd', 9, 0,
  /* 2663 */ 'v', 's', 'h', 'f', '.', 'd', 9, 0,
  /* 2671 */ 'c', '.', 's', 'f', '.', 'd', 9, 0,
  /* 2679 */ 'm', 'o', 'v', 'f', '.', 'd', 9, 0,
  /* 2687 */ 'b', 'n', 'e', 'g', '.', 'd', 9, 0,
  /* 2695 */ 's', 'r', 'a', 'i', '.', 'd', 9, 0,
  /* 2703 */ 's', 'l', 'd', 'i', '.', 'd', 9, 0,
  /* 2711 */ 'b', 'n', 'e', 'g', 'i', '.', 'd', 9, 0,
  /* 2720 */ 's', 'l', 'l', 'i', '.', 'd', 9, 0,
  /* 2728 */ 's', 'r', 'l', 'i', '.', 'd', 9, 0,
  /* 2736 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'd', 9, 0,
  /* 2746 */ 'c', 'e', 'q', 'i', '.', 'd', 9, 0,
  /* 2754 */ 's', 'r', 'a', 'r', 'i', '.', 'd', 9, 0,
  /* 2763 */ 'b', 'c', 'l', 'r', 'i', '.', 'd', 9, 0,
  /* 2772 */ 's', 'r', 'l', 'r', 'i', '.', 'd', 9, 0,
  /* 2781 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'd', 9, 0,
  /* 2791 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'd', 9, 0,
  /* 2801 */ 'b', 's', 'e', 't', 'i', '.', 'd', 9, 0,
  /* 2810 */ 's', 'u', 'b', 'v', 'i', '.', 'd', 9, 0,
  /* 2819 */ 'a', 'd', 'd', 'v', 'i', '.', 'd', 9, 0,
  /* 2828 */ 't', 'r', 'u', 'n', 'c', '.', 'l', '.', 'd', 9, 0,
  /* 2839 */ 'r', 'o', 'u', 'n', 'd', '.', 'l', '.', 'd', 9, 0,
  /* 2850 */ 'c', 'e', 'i', 'l', '.', 'l', '.', 'd', 9, 0,
  /* 2860 */ 'f', 'l', 'o', 'o', 'r', '.', 'l', '.', 'd', 9, 0,
  /* 2871 */ 'c', 'v', 't', '.', 'l', '.', 'd', 9, 0,
  /* 2880 */ 's', 'e', 'l', '.', 'd', 9, 0,
  /* 2887 */ 'c', '.', 'n', 'g', 'l', '.', 'd', 9, 0,
  /* 2896 */ 'f', 'i', 'l', 'l', '.', 'd', 9, 0,
  /* 2904 */ 's', 'l', 'l', '.', 'd', 9, 0,
  /* 2911 */ 'f', 'e', 'x', 'u', 'p', 'l', '.', 'd', 9, 0,
  /* 2921 */ 'f', 'f', 'q', 'l', '.', 'd', 9, 0,
  /* 2929 */ 's', 'r', 'l', '.', 'd', 9, 0,
  /* 2936 */ 'b', 'i', 'n', 's', 'l', '.', 'd', 9, 0,
  /* 2945 */ 'f', 'm', 'u', 'l', '.', 'd', 9, 0,
  /* 2953 */ 'i', 'l', 'v', 'l', '.', 'd', 9, 0,
  /* 2961 */ 'f', 'm', 'i', 'n', '.', 'd', 9, 0,
  /* 2969 */ 'c', '.', 'u', 'n', '.', 'd', 9, 0,
  /* 2977 */ 'c', 'm', 'p', '.', 'u', 'n', '.', 'd', 9, 0,
  /* 2987 */ 'f', 'c', 'u', 'n', '.', 'd', 9, 0,
  /* 2995 */ 'c', 'm', 'p', '.', 's', 'u', 'n', '.', 'd', 9, 0,
  /* 3006 */ 'f', 's', 'u', 'n', '.', 'd', 9, 0,
  /* 3014 */ 'm', 'o', 'v', 'n', '.', 'd', 9, 0,
  /* 3022 */ 'f', 'r', 'c', 'p', '.', 'd', 9, 0,
  /* 3030 */ 'r', 'e', 'c', 'i', 'p', '.', 'd', 9, 0,
  /* 3039 */ 'c', '.', 'e', 'q', '.', 'd', 9, 0,
  /* 3047 */ 'c', 'm', 'p', '.', 'e', 'q', '.', 'd', 9, 0,
  /* 3057 */ 'f', 'c', 'e', 'q', '.', 'd', 9, 0,
  /* 3065 */ 'c', '.', 's', 'e', 'q', '.', 'd', 9, 0,
  /* 3074 */ 'c', 'm', 'p', '.', 's', 'e', 'q', '.', 'd', 9, 0,
  /* 3085 */ 'f', 's', 'e', 'q', '.', 'd', 9, 0,
  /* 3093 */ 'c', '.', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 3102 */ 'c', 'm', 'p', '.', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 3113 */ 'f', 'c', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 3122 */ 'c', 'm', 'p', '.', 's', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 3134 */ 'f', 's', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 3143 */ 's', 'r', 'a', 'r', '.', 'd', 9, 0,
  /* 3151 */ 'b', 'c', 'l', 'r', '.', 'd', 9, 0,
  /* 3159 */ 's', 'r', 'l', 'r', '.', 'd', 9, 0,
  /* 3167 */ 'f', 'c', 'o', 'r', '.', 'd', 9, 0,
  /* 3175 */ 'f', 's', 'o', 'r', '.', 'd', 9, 0,
  /* 3183 */ 'f', 'e', 'x', 'u', 'p', 'r', '.', 'd', 9, 0,
  /* 3193 */ 'f', 'f', 'q', 'r', '.', 'd', 9, 0,
  /* 3201 */ 'b', 'i', 'n', 's', 'r', '.', 'd', 9, 0,
  /* 3210 */ 'i', 'l', 'v', 'r', '.', 'd', 9, 0,
  /* 3218 */ 'c', 'v', 't', '.', 's', '.', 'd', 9, 0,
  /* 3227 */ 'a', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 3237 */ 'h', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 3247 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 3258 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 's', '.', 'd', 9, 0,
  /* 3270 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'd', 9, 0,
  /* 3280 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'd', 9, 0,
  /* 3291 */ 'm', 'o', 'd', '_', 's', '.', 'd', 9, 0,
  /* 3300 */ 'c', 'l', 'e', '_', 's', '.', 'd', 9, 0,
  /* 3309 */ 'a', 'v', 'e', '_', 's', '.', 'd', 9, 0,
  /* 3318 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'd', 9, 0,
  /* 3328 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'd', 9, 0,
  /* 3338 */ 'c', 'l', 't', 'i', '_', 's', '.', 'd', 9, 0,
  /* 3348 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'd', 9, 0,
  /* 3358 */ 'm', 'i', 'n', '_', 's', '.', 'd', 9, 0,
  /* 3367 */ 'd', 'o', 't', 'p', '_', 's', '.', 'd', 9, 0,
  /* 3377 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'd', 9, 0,
  /* 3387 */ 's', 'u', 'b', 's', '_', 's', '.', 'd', 9, 0,
  /* 3397 */ 'a', 'd', 'd', 's', '_', 's', '.', 'd', 9, 0,
  /* 3407 */ 's', 'a', 't', '_', 's', '.', 'd', 9, 0,
  /* 3416 */ 'c', 'l', 't', '_', 's', '.', 'd', 9, 0,
  /* 3425 */ 'f', 'f', 'i', 'n', 't', '_', 's', '.', 'd', 9, 0,
  /* 3436 */ 'f', 't', 'i', 'n', 't', '_', 's', '.', 'd', 9, 0,
  /* 3447 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'd', 9, 0,
  /* 3459 */ 'd', 'i', 'v', '_', 's', '.', 'd', 9, 0,
  /* 3468 */ 'm', 'a', 'x', '_', 's', '.', 'd', 9, 0,
  /* 3477 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'd', 9, 0,
  /* 3487 */ 'a', 'b', 's', '.', 'd', 9, 0,
  /* 3494 */ 'f', 'c', 'l', 'a', 's', 's', '.', 'd', 9, 0,
  /* 3504 */ 's', 'p', 'l', 'a', 't', '.', 'd', 9, 0,
  /* 3513 */ 'b', 's', 'e', 't', '.', 'd', 9, 0,
  /* 3521 */ 'c', '.', 'n', 'g', 't', '.', 'd', 9, 0,
  /* 3530 */ 'c', '.', 'l', 't', '.', 'd', 9, 0,
  /* 3538 */ 'c', 'm', 'p', '.', 'l', 't', '.', 'd', 9, 0,
  /* 3548 */ 'f', 'c', 'l', 't', '.', 'd', 9, 0,
  /* 3556 */ 'c', '.', 'o', 'l', 't', '.', 'd', 9, 0,
  /* 3565 */ 'c', 'm', 'p', '.', 's', 'l', 't', '.', 'd', 9, 0,
  /* 3576 */ 'f', 's', 'l', 't', '.', 'd', 9, 0,
  /* 3584 */ 'c', '.', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 3593 */ 'c', 'm', 'p', '.', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 3604 */ 'f', 'c', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 3613 */ 'c', 'm', 'p', '.', 's', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 3625 */ 'f', 's', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 3634 */ 'p', 'c', 'n', 't', '.', 'd', 9, 0,
  /* 3642 */ 'f', 'r', 'i', 'n', 't', '.', 'd', 9, 0,
  /* 3651 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'd', 9, 0,
  /* 3661 */ 'f', 's', 'q', 'r', 't', '.', 'd', 9, 0,
  /* 3670 */ 'f', 'r', 's', 'q', 'r', 't', '.', 'd', 9, 0,
  /* 3680 */ 's', 't', '.', 'd', 9, 0,
  /* 3686 */ 'm', 'o', 'v', 't', '.', 'd', 9, 0,
  /* 3694 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 3704 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 3714 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 3725 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 'u', '.', 'd', 9, 0,
  /* 3737 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 3747 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 3758 */ 'm', 'o', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 3767 */ 'c', 'l', 'e', '_', 'u', '.', 'd', 9, 0,
  /* 3776 */ 'a', 'v', 'e', '_', 'u', '.', 'd', 9, 0,
  /* 3785 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 3795 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 3805 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 3815 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 3825 */ 'm', 'i', 'n', '_', 'u', '.', 'd', 9, 0,
  /* 3834 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'd', 9, 0,
  /* 3844 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'd', 9, 0,
  /* 3854 */ 's', 'u', 'b', 's', '_', 'u', '.', 'd', 9, 0,
  /* 3864 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'd', 9, 0,
  /* 3874 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'd', 9, 0,
  /* 3886 */ 's', 'a', 't', '_', 'u', '.', 'd', 9, 0,
  /* 3895 */ 'c', 'l', 't', '_', 'u', '.', 'd', 9, 0,
  /* 3904 */ 'f', 'f', 'i', 'n', 't', '_', 'u', '.', 'd', 9, 0,
  /* 3915 */ 'f', 't', 'i', 'n', 't', '_', 'u', '.', 'd', 9, 0,
  /* 3926 */ 'd', 'i', 'v', '_', 'u', '.', 'd', 9, 0,
  /* 3935 */ 'm', 'a', 'x', '_', 'u', '.', 'd', 9, 0,
  /* 3944 */ 'm', 's', 'u', 'b', 'v', '.', 'd', 9, 0,
  /* 3953 */ 'm', 'a', 'd', 'd', 'v', '.', 'd', 9, 0,
  /* 3962 */ 'p', 'c', 'k', 'e', 'v', '.', 'd', 9, 0,
  /* 3971 */ 'i', 'l', 'v', 'e', 'v', '.', 'd', 9, 0,
  /* 3980 */ 'f', 'd', 'i', 'v', '.', 'd', 9, 0,
  /* 3988 */ 'm', 'u', 'l', 'v', '.', 'd', 9, 0,
  /* 3996 */ 'm', 'o', 'v', '.', 'd', 9, 0,
  /* 4003 */ 't', 'r', 'u', 'n', 'c', '.', 'w', '.', 'd', 9, 0,
  /* 4014 */ 'r', 'o', 'u', 'n', 'd', '.', 'w', '.', 'd', 9, 0,
  /* 4025 */ 'c', 'e', 'i', 'l', '.', 'w', '.', 'd', 9, 0,
  /* 4035 */ 'f', 'l', 'o', 'o', 'r', '.', 'w', '.', 'd', 9, 0,
  /* 4046 */ 'c', 'v', 't', '.', 'w', '.', 'd', 9, 0,
  /* 4055 */ 'f', 'm', 'a', 'x', '.', 'd', 9, 0,
  /* 4063 */ 'b', 'z', '.', 'd', 9, 0,
  /* 4069 */ 's', 'e', 'l', 'n', 'e', 'z', '.', 'd', 9, 0,
  /* 4079 */ 'b', 'n', 'z', '.', 'd', 9, 0,
  /* 4086 */ 's', 'e', 'l', 'e', 'q', 'z', '.', 'd', 9, 0,
  /* 4096 */ 'm', 'o', 'v', 'z', '.', 'd', 9, 0,
  /* 4104 */ 'c', 'r', 'c', '3', '2', 'd', 9, 0,
  /* 4112 */ 's', 'a', 'a', 'd', 9, 0,
  /* 4118 */ 'c', 'r', 'c', '3', '2', 'c', 'd', 9, 0,
  /* 4127 */ 's', 'c', 'd', 9, 0,
  /* 4132 */ 'd', 'a', 'd', 'd', 9, 0,
  /* 4138 */ 'm', 'a', 'd', 'd', 9, 0,
  /* 4144 */ 'd', 's', 'h', 'd', 9, 0,
  /* 4150 */ 'y', 'i', 'e', 'l', 'd', 9, 0,
  /* 4157 */ 'l', 'l', 'd', 9, 0,
  /* 4162 */ 'a', 'n', 'd', 9, 0,
  /* 4167 */ 'p', 'r', 'e', 'p', 'e', 'n', 'd', 9, 0,
  /* 4176 */ 'a', 'p', 'p', 'e', 'n', 'd', 9, 0,
  /* 4184 */ 'd', 'm', 'o', 'd', 9, 0,
  /* 4190 */ 's', 'd', 9, 0,
  /* 4194 */ 'l', 'b', 'e', 9, 0,
  /* 4199 */ 's', 'b', 'e', 9, 0,
  /* 4204 */ 's', 'c', 'e', 9, 0,
  /* 4209 */ 'c', 'a', 'c', 'h', 'e', 'e', 9, 0,
  /* 4217 */ 'p', 'r', 'e', 'f', 'e', 9, 0,
  /* 4224 */ 'b', 'g', 'e', 9, 0,
  /* 4229 */ 's', 'g', 'e', 9, 0,
  /* 4234 */ 't', 'g', 'e', 9, 0,
  /* 4239 */ 'c', 'a', 'c', 'h', 'e', 9, 0,
  /* 4246 */ 'l', 'h', 'e', 9, 0,
  /* 4251 */ 's', 'h', 'e', 9, 0,
  /* 4256 */ 's', 'i', 'g', 'r', 'i', 'e', 9, 0,
  /* 4264 */ 'b', 'l', 'e', 9, 0,
  /* 4269 */ 'l', 'l', 'e', 9, 0,
  /* 4274 */ 'l', 'w', 'l', 'e', 9, 0,
  /* 4280 */ 's', 'w', 'l', 'e', 9, 0,
  /* 4286 */ 'b', 'n', 'e', 9, 0,
  /* 4291 */ 's', 'n', 'e', 9, 0,
  /* 4296 */ 't', 'n', 'e', 9, 0,
  /* 4301 */ 'd', 'v', 'p', 'e', 9, 0,
  /* 4307 */ 'e', 'v', 'p', 'e', 9, 0,
  /* 4313 */ 'l', 'w', 'r', 'e', 9, 0,
  /* 4319 */ 's', 'w', 'r', 'e', 9, 0,
  /* 4325 */ 'l', 'b', 'u', 'e', 9, 0,
  /* 4331 */ 'l', 'h', 'u', 'e', 9, 0,
  /* 4337 */ 'm', 'o', 'v', 'e', 9, 0,
  /* 4343 */ 'l', 'w', 'e', 9, 0,
  /* 4348 */ 's', 'w', 'e', 9, 0,
  /* 4353 */ 'b', 'c', '1', 'f', 9, 0,
  /* 4359 */ 'p', 'r', 'e', 'f', 9, 0,
  /* 4365 */ 'm', 'o', 'v', 'f', 9, 0,
  /* 4371 */ 'n', 'e', 'g', 9, 0,
  /* 4376 */ 'a', 'd', 'd', '_', 'a', '.', 'h', 9, 0,
  /* 4385 */ 'm', 'i', 'n', '_', 'a', '.', 'h', 9, 0,
  /* 4394 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'h', 9, 0,
  /* 4404 */ 'm', 'a', 'x', '_', 'a', '.', 'h', 9, 0,
  /* 4413 */ 's', 'r', 'a', '.', 'h', 9, 0,
  /* 4420 */ 'n', 'l', 'o', 'c', '.', 'h', 9, 0,
  /* 4428 */ 'n', 'l', 'z', 'c', '.', 'h', 9, 0,
  /* 4436 */ 's', 'l', 'd', '.', 'h', 9, 0,
  /* 4443 */ 'p', 'c', 'k', 'o', 'd', '.', 'h', 9, 0,
  /* 4452 */ 'i', 'l', 'v', 'o', 'd', '.', 'h', 9, 0,
  /* 4461 */ 'i', 'n', 's', 'v', 'e', '.', 'h', 9, 0,
  /* 4470 */ 'v', 's', 'h', 'f', '.', 'h', 9, 0,
  /* 4478 */ 'b', 'n', 'e', 'g', '.', 'h', 9, 0,
  /* 4486 */ 's', 'r', 'a', 'i', '.', 'h', 9, 0,
  /* 4494 */ 's', 'l', 'd', 'i', '.', 'h', 9, 0,
  /* 4502 */ 'b', 'n', 'e', 'g', 'i', '.', 'h', 9, 0,
  /* 4511 */ 's', 'l', 'l', 'i', '.', 'h', 9, 0,
  /* 4519 */ 's', 'r', 'l', 'i', '.', 'h', 9, 0,
  /* 4527 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'h', 9, 0,
  /* 4537 */ 'c', 'e', 'q', 'i', '.', 'h', 9, 0,
  /* 4545 */ 's', 'r', 'a', 'r', 'i', '.', 'h', 9, 0,
  /* 4554 */ 'b', 'c', 'l', 'r', 'i', '.', 'h', 9, 0,
  /* 4563 */ 's', 'r', 'l', 'r', 'i', '.', 'h', 9, 0,
  /* 4572 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'h', 9, 0,
  /* 4582 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'h', 9, 0,
  /* 4592 */ 'b', 's', 'e', 't', 'i', '.', 'h', 9, 0,
  /* 4601 */ 's', 'u', 'b', 'v', 'i', '.', 'h', 9, 0,
  /* 4610 */ 'a', 'd', 'd', 'v', 'i', '.', 'h', 9, 0,
  /* 4619 */ 'f', 'i', 'l', 'l', '.', 'h', 9, 0,
  /* 4627 */ 's', 'l', 'l', '.', 'h', 9, 0,
  /* 4634 */ 's', 'r', 'l', '.', 'h', 9, 0,
  /* 4641 */ 'b', 'i', 'n', 's', 'l', '.', 'h', 9, 0,
  /* 4650 */ 'i', 'l', 'v', 'l', '.', 'h', 9, 0,
  /* 4658 */ 'f', 'e', 'x', 'd', 'o', '.', 'h', 9, 0,
  /* 4667 */ 'm', 's', 'u', 'b', '_', 'q', '.', 'h', 9, 0,
  /* 4677 */ 'm', 'a', 'd', 'd', '_', 'q', '.', 'h', 9, 0,
  /* 4687 */ 'm', 'u', 'l', '_', 'q', '.', 'h', 9, 0,
  /* 4696 */ 'm', 's', 'u', 'b', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 4707 */ 'm', 'a', 'd', 'd', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 4718 */ 'm', 'u', 'l', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 4728 */ 'c', 'e', 'q', '.', 'h', 9, 0,
  /* 4735 */ 'f', 't', 'q', '.', 'h', 9, 0,
  /* 4742 */ 's', 'r', 'a', 'r', '.', 'h', 9, 0,
  /* 4750 */ 'b', 'c', 'l', 'r', '.', 'h', 9, 0,
  /* 4758 */ 's', 'r', 'l', 'r', '.', 'h', 9, 0,
  /* 4766 */ 'b', 'i', 'n', 's', 'r', '.', 'h', 9, 0,
  /* 4775 */ 'i', 'l', 'v', 'r', '.', 'h', 9, 0,
  /* 4783 */ 'a', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 4793 */ 'h', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 4803 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 4814 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'h', 9, 0,
  /* 4824 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'h', 9, 0,
  /* 4835 */ 'm', 'o', 'd', '_', 's', '.', 'h', 9, 0,
  /* 4844 */ 'c', 'l', 'e', '_', 's', '.', 'h', 9, 0,
  /* 4853 */ 'a', 'v', 'e', '_', 's', '.', 'h', 9, 0,
  /* 4862 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'h', 9, 0,
  /* 4872 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'h', 9, 0,
  /* 4882 */ 'c', 'l', 't', 'i', '_', 's', '.', 'h', 9, 0,
  /* 4892 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'h', 9, 0,
  /* 4902 */ 'm', 'i', 'n', '_', 's', '.', 'h', 9, 0,
  /* 4911 */ 'd', 'o', 't', 'p', '_', 's', '.', 'h', 9, 0,
  /* 4921 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'h', 9, 0,
  /* 4931 */ 'e', 'x', 't', 'r', '_', 's', '.', 'h', 9, 0,
  /* 4941 */ 's', 'u', 'b', 's', '_', 's', '.', 'h', 9, 0,
  /* 4951 */ 'a', 'd', 'd', 's', '_', 's', '.', 'h', 9, 0,
  /* 4961 */ 's', 'a', 't', '_', 's', '.', 'h', 9, 0,
  /* 4970 */ 'c', 'l', 't', '_', 's', '.', 'h', 9, 0,
  /* 4979 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'h', 9, 0,
  /* 4991 */ 'd', 'i', 'v', '_', 's', '.', 'h', 9, 0,
  /* 5000 */ 'e', 'x', 't', 'r', 'v', '_', 's', '.', 'h', 9, 0,
  /* 5011 */ 'm', 'a', 'x', '_', 's', '.', 'h', 9, 0,
  /* 5020 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'h', 9, 0,
  /* 5030 */ 's', 'p', 'l', 'a', 't', '.', 'h', 9, 0,
  /* 5039 */ 'b', 's', 'e', 't', '.', 'h', 9, 0,
  /* 5047 */ 'p', 'c', 'n', 't', '.', 'h', 9, 0,
  /* 5055 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'h', 9, 0,
  /* 5065 */ 's', 't', '.', 'h', 9, 0,
  /* 5071 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 5081 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 5091 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 5102 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 5112 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 5123 */ 'm', 'o', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 5132 */ 'c', 'l', 'e', '_', 'u', '.', 'h', 9, 0,
  /* 5141 */ 'a', 'v', 'e', '_', 'u', '.', 'h', 9, 0,
  /* 5150 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 5160 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 5170 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 5180 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 5190 */ 'm', 'i', 'n', '_', 'u', '.', 'h', 9, 0,
  /* 5199 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'h', 9, 0,
  /* 5209 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'h', 9, 0,
  /* 5219 */ 's', 'u', 'b', 's', '_', 'u', '.', 'h', 9, 0,
  /* 5229 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'h', 9, 0,
  /* 5239 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'h', 9, 0,
  /* 5251 */ 's', 'a', 't', '_', 'u', '.', 'h', 9, 0,
  /* 5260 */ 'c', 'l', 't', '_', 'u', '.', 'h', 9, 0,
  /* 5269 */ 'd', 'i', 'v', '_', 'u', '.', 'h', 9, 0,
  /* 5278 */ 'm', 'a', 'x', '_', 'u', '.', 'h', 9, 0,
  /* 5287 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'h', 9, 0,
  /* 5297 */ 'm', 's', 'u', 'b', 'v', '.', 'h', 9, 0,
  /* 5306 */ 'm', 'a', 'd', 'd', 'v', '.', 'h', 9, 0,
  /* 5315 */ 'p', 'c', 'k', 'e', 'v', '.', 'h', 9, 0,
  /* 5324 */ 'i', 'l', 'v', 'e', 'v', '.', 'h', 9, 0,
  /* 5333 */ 'm', 'u', 'l', 'v', '.', 'h', 9, 0,
  /* 5341 */ 'b', 'z', '.', 'h', 9, 0,
  /* 5347 */ 'b', 'n', 'z', '.', 'h', 9, 0,
  /* 5354 */ 'c', 'r', 'c', '3', '2', 'h', 9, 0,
  /* 5362 */ 'd', 's', 'b', 'h', 9, 0,
  /* 5368 */ 'w', 's', 'b', 'h', 9, 0,
  /* 5374 */ 'c', 'r', 'c', '3', '2', 'c', 'h', 9, 0,
  /* 5383 */ 's', 'e', 'h', 9, 0,
  /* 5388 */ 'u', 'l', 'h', 9, 0,
  /* 5393 */ 's', 'h', 'r', 'a', '.', 'p', 'h', 9, 0,
  /* 5402 */ 'p', 'r', 'e', 'c', 'r', 'q', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 5416 */ 'p', 'r', 'e', 'c', 'r', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 5429 */ 'p', 'r', 'e', 'c', 'r', 'q', 'u', '_', 's', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 5446 */ 'c', 'm', 'p', '.', 'l', 'e', '.', 'p', 'h', 9, 0,
  /* 5457 */ 's', 'u', 'b', 'q', 'h', '.', 'p', 'h', 9, 0,
  /* 5467 */ 'a', 'd', 'd', 'q', 'h', '.', 'p', 'h', 9, 0,
  /* 5477 */ 'p', 'i', 'c', 'k', '.', 'p', 'h', 9, 0,
  /* 5486 */ 's', 'h', 'l', 'l', '.', 'p', 'h', 9, 0,
  /* 5495 */ 'r', 'e', 'p', 'l', '.', 'p', 'h', 9, 0,
  /* 5504 */ 's', 'h', 'r', 'l', '.', 'p', 'h', 9, 0,
  /* 5513 */ 'p', 'a', 'c', 'k', 'r', 'l', '.', 'p', 'h', 9, 0,
  /* 5524 */ 'm', 'u', 'l', '.', 'p', 'h', 9, 0,
  /* 5532 */ 's', 'u', 'b', 'q', '.', 'p', 'h', 9, 0,
  /* 5541 */ 'a', 'd', 'd', 'q', '.', 'p', 'h', 9, 0,
  /* 5550 */ 'c', 'm', 'p', '.', 'e', 'q', '.', 'p', 'h', 9, 0,
  /* 5561 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 5572 */ 's', 'u', 'b', 'q', 'h', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 5584 */ 'a', 'd', 'd', 'q', 'h', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 5596 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 5608 */ 's', 'h', 'l', 'l', '_', 's', '.', 'p', 'h', 9, 0,
  /* 5619 */ 'm', 'u', 'l', '_', 's', '.', 'p', 'h', 9, 0,
  /* 5629 */ 's', 'u', 'b', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 5640 */ 'a', 'd', 'd', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 5651 */ 'm', 'u', 'l', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 5662 */ 'a', 'b', 's', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 5673 */ 's', 'u', 'b', 'u', '_', 's', '.', 'p', 'h', 9, 0,
  /* 5684 */ 'a', 'd', 'd', 'u', '_', 's', '.', 'p', 'h', 9, 0,
  /* 5695 */ 's', 'h', 'l', 'l', 'v', '_', 's', '.', 'p', 'h', 9, 0,
  /* 5707 */ 'm', 'u', 'l', 'q', '_', 'r', 's', '.', 'p', 'h', 9, 0,
  /* 5719 */ 'c', 'm', 'p', '.', 'l', 't', '.', 'p', 'h', 9, 0,
  /* 5730 */ 's', 'u', 'b', 'u', '.', 'p', 'h', 9, 0,
  /* 5739 */ 'a', 'd', 'd', 'u', '.', 'p', 'h', 9, 0,
  /* 5748 */ 's', 'h', 'r', 'a', 'v', '.', 'p', 'h', 9, 0,
  /* 5758 */ 's', 'h', 'l', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 5768 */ 'r', 'e', 'p', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 5778 */ 's', 'h', 'r', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 5788 */ 'd', 'p', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5798 */ 'd', 'p', 'a', 'q', 'x', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5813 */ 'd', 'p', 's', 'q', 'x', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5828 */ 'm', 'u', 'l', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5840 */ 'd', 'p', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5853 */ 'm', 'u', 'l', 's', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5868 */ 'd', 'p', 's', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5881 */ 'd', 'p', 'a', 'q', 'x', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5895 */ 'd', 'p', 's', 'q', 'x', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5909 */ 'd', 'p', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5919 */ 'd', 'p', 'a', 'x', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5930 */ 'd', 'p', 's', 'x', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 5941 */ 'u', 's', 'h', 9, 0,
  /* 5946 */ 'd', 'm', 'u', 'h', 9, 0,
  /* 5952 */ 's', 'y', 'n', 'c', 'i', 9, 0,
  /* 5959 */ 'd', 'a', 'd', 'd', 'i', 9, 0,
  /* 5966 */ 'a', 'n', 'd', 'i', 9, 0,
  /* 5972 */ 't', 'g', 'e', 'i', 9, 0,
  /* 5978 */ 's', 'n', 'e', 'i', 9, 0,
  /* 5984 */ 't', 'n', 'e', 'i', 9, 0,
  /* 5990 */ 'd', 'a', 'h', 'i', 9, 0,
  /* 5996 */ 'm', 'f', 'h', 'i', 9, 0,
  /* 6002 */ 'm', 't', 'h', 'i', 9, 0,
  /* 6008 */ '.', 'a', 'l', 'i', 'g', 'n', 32, '2', 10, 9, 'l', 'i', 9, 0,
  /* 6022 */ 'd', 'l', 'i', 9, 0,
  /* 6027 */ 'c', 'm', 'p', 'i', 9, 0,
  /* 6033 */ 's', 'e', 'q', 'i', 9, 0,
  /* 6039 */ 't', 'e', 'q', 'i', 9, 0,
  /* 6045 */ 'x', 'o', 'r', 'i', 9, 0,
  /* 6051 */ 'd', 'a', 't', 'i', 9, 0,
  /* 6057 */ 's', 'l', 't', 'i', 9, 0,
  /* 6063 */ 't', 'l', 't', 'i', 9, 0,
  /* 6069 */ 'd', 'a', 'u', 'i', 9, 0,
  /* 6075 */ 'l', 'u', 'i', 9, 0,
  /* 6080 */ 'g', 'i', 'n', 'v', 'i', 9, 0,
  /* 6087 */ 'j', 9, 0,
  /* 6090 */ 'b', 'r', 'e', 'a', 'k', 9, 0,
  /* 6097 */ 'f', 'o', 'r', 'k', 9, 0,
  /* 6103 */ 'c', 'v', 't', '.', 'd', '.', 'l', 9, 0,
  /* 6112 */ 'c', 'v', 't', '.', 's', '.', 'l', 9, 0,
  /* 6121 */ 'b', 'a', 'l', 9, 0,
  /* 6126 */ 'j', 'a', 'l', 9, 0,
  /* 6131 */ 'b', 'g', 'e', 'z', 'a', 'l', 9, 0,
  /* 6139 */ 'b', 'l', 't', 'z', 'a', 'l', 9, 0,
  /* 6147 */ 'd', 'p', 'a', 'u', '.', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 6159 */ 'd', 'p', 's', 'u', '.', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 6171 */ 'm', 'u', 'l', 'e', 'u', '_', 's', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 6187 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 6202 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 6218 */ 'l', 'd', 'l', 9, 0,
  /* 6223 */ 's', 'd', 'l', 9, 0,
  /* 6228 */ 'b', 'g', 'e', 'l', 9, 0,
  /* 6234 */ 'b', 'l', 'e', 'l', 9, 0,
  /* 6240 */ 'b', 'n', 'e', 'l', 9, 0,
  /* 6246 */ 'b', 'c', '1', 'f', 'l', 9, 0,
  /* 6253 */ 'm', 'a', 'q', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 6267 */ 'p', 'r', 'e', 'c', 'e', 'q', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 6281 */ 'm', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 6294 */ 'm', 'u', 'l', 'e', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 6309 */ 'h', 'y', 'p', 'c', 'a', 'l', 'l', 9, 0,
  /* 6318 */ 's', 'y', 's', 'c', 'a', 'l', 'l', 9, 0,
  /* 6327 */ 'b', 'g', 'e', 'z', 'a', 'l', 'l', 9, 0,
  /* 6336 */ 'b', 'l', 't', 'z', 'a', 'l', 'l', 9, 0,
  /* 6345 */ 'd', 's', 'l', 'l', 9, 0,
  /* 6351 */ 'd', 'r', 'o', 'l', 9, 0,
  /* 6357 */ 'c', 'v', 't', '.', 's', '.', 'p', 'l', 9, 0,
  /* 6367 */ 'b', 'e', 'q', 'l', 9, 0,
  /* 6373 */ 'd', 's', 'r', 'l', 9, 0,
  /* 6379 */ 'b', 'c', '1', 't', 'l', 9, 0,
  /* 6386 */ 'b', 'g', 't', 'l', 9, 0,
  /* 6392 */ 'b', 'l', 't', 'l', 9, 0,
  /* 6398 */ 'b', 'g', 'e', 'u', 'l', 9, 0,
  /* 6405 */ 'b', 'l', 'e', 'u', 'l', 9, 0,
  /* 6412 */ 'd', 'm', 'u', 'l', 9, 0,
  /* 6418 */ 'b', 'g', 't', 'u', 'l', 9, 0,
  /* 6425 */ 'b', 'l', 't', 'u', 'l', 9, 0,
  /* 6432 */ 'l', 'w', 'l', 9, 0,
  /* 6437 */ 's', 'w', 'l', 9, 0,
  /* 6442 */ 'b', 'g', 'e', 'z', 'l', 9, 0,
  /* 6449 */ 'b', 'l', 'e', 'z', 'l', 9, 0,
  /* 6456 */ 'b', 'g', 't', 'z', 'l', 9, 0,
  /* 6463 */ 'b', 'l', 't', 'z', 'l', 9, 0,
  /* 6470 */ 'd', 'r', 'e', 'm', 9, 0,
  /* 6476 */ 'd', 'i', 'n', 's', 'm', 9, 0,
  /* 6483 */ 'd', 'e', 'x', 't', 'm', 9, 0,
  /* 6490 */ 'l', 'w', 'm', 9, 0,
  /* 6495 */ 's', 'w', 'm', 9, 0,
  /* 6500 */ 'b', 'a', 'l', 'i', 'g', 'n', 9, 0,
  /* 6508 */ 'd', 'a', 'l', 'i', 'g', 'n', 9, 0,
  /* 6516 */ 'm', 'o', 'v', 'n', 9, 0,
  /* 6522 */ 'd', 'c', 'l', 'o', 9, 0,
  /* 6528 */ 'm', 'f', 'l', 'o', 9, 0,
  /* 6534 */ 's', 'h', 'i', 'l', 'o', 9, 0,
  /* 6541 */ 'm', 't', 'l', 'o', 9, 0,
  /* 6547 */ 'd', 'm', 'u', 'l', 'o', 9, 0,
  /* 6554 */ 'd', 'b', 'i', 't', 's', 'w', 'a', 'p', 9, 0,
  /* 6564 */ 's', 'd', 'b', 'b', 'p', 9, 0,
  /* 6571 */ 'e', 'x', 't', 'p', 'd', 'p', 9, 0,
  /* 6579 */ 'm', 'o', 'v', 'e', 'p', 9, 0,
  /* 6586 */ 'm', 't', 'h', 'l', 'i', 'p', 9, 0,
  /* 6594 */ 'c', 'm', 'p', 9, 0,
  /* 6599 */ 'd', 'p', 'o', 'p', 9, 0,
  /* 6605 */ 'a', 'd', 'd', 'i', 'u', 'r', '1', 's', 'p', 9, 0,
  /* 6616 */ 'l', 'o', 'a', 'd', '_', 'c', 'c', 'o', 'n', 'd', '_', 'd', 's', 'p', 9, 0,
  /* 6632 */ 's', 't', 'o', 'r', 'e', '_', 'c', 'c', 'o', 'n', 'd', '_', 'd', 's', 'p', 9, 0,
  /* 6649 */ 'r', 'd', 'd', 's', 'p', 9, 0,
  /* 6656 */ 'w', 'r', 'd', 's', 'p', 9, 0,
  /* 6663 */ 'j', 'r', 'c', 'a', 'd', 'd', 'i', 'u', 's', 'p', 9, 0,
  /* 6675 */ 'j', 'r', 'a', 'd', 'd', 'i', 'u', 's', 'p', 9, 0,
  /* 6686 */ 's', 'w', 's', 'p', 9, 0,
  /* 6692 */ 'e', 'x', 't', 'p', 9, 0,
  /* 6698 */ 'd', 'v', 'p', 9, 0,
  /* 6703 */ 'e', 'v', 'p', 9, 0,
  /* 6708 */ 'l', 'w', 'p', 9, 0,
  /* 6713 */ 's', 'w', 'p', 9, 0,
  /* 6718 */ 'b', 'e', 'q', 9, 0,
  /* 6723 */ 's', 'e', 'q', 9, 0,
  /* 6728 */ 't', 'e', 'q', 9, 0,
  /* 6733 */ 'd', 'p', 'a', 'u', '.', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 6745 */ 'd', 'p', 's', 'u', '.', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 6757 */ 'm', 'u', 'l', 'e', 'u', '_', 's', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 6773 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 6788 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 6804 */ 'l', 'd', 'r', 9, 0,
  /* 6809 */ 's', 'd', 'r', 9, 0,
  /* 6814 */ 'm', 'a', 'q', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 6828 */ 'p', 'r', 'e', 'c', 'e', 'q', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 6842 */ 'm', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 6855 */ 'm', 'u', 'l', 'e', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 6870 */ 'j', 'r', 9, 0,
  /* 6874 */ 'j', 'a', 'l', 'r', 9, 0,
  /* 6880 */ 'n', 'o', 'r', 9, 0,
  /* 6885 */ 'd', 'r', 'o', 'r', 9, 0,
  /* 6891 */ 'x', 'o', 'r', 9, 0,
  /* 6896 */ 'r', 'd', 'p', 'g', 'p', 'r', 9, 0,
  /* 6904 */ 'w', 'r', 'p', 'g', 'p', 'r', 9, 0,
  /* 6912 */ 'm', 'f', 't', 'r', 9, 0,
  /* 6918 */ 'd', 'r', 'o', 't', 'r', 9, 0,
  /* 6925 */ 'm', 't', 't', 'r', 9, 0,
  /* 6931 */ 'r', 'd', 'h', 'w', 'r', 9, 0,
  /* 6938 */ 'l', 'w', 'r', 9, 0,
  /* 6943 */ 's', 'w', 'r', 9, 0,
  /* 6948 */ 'm', 'i', 'n', 'a', '.', 's', 9, 0,
  /* 6956 */ 'm', 'a', 'x', 'a', '.', 's', 9, 0,
  /* 6964 */ 'n', 'm', 's', 'u', 'b', '.', 's', 9, 0,
  /* 6973 */ 'c', 'v', 't', '.', 'd', '.', 's', 9, 0,
  /* 6982 */ 'n', 'm', 'a', 'd', 'd', '.', 's', 9, 0,
  /* 6991 */ 'c', '.', 'n', 'g', 'e', '.', 's', 9, 0,
  /* 7000 */ 'c', '.', 'l', 'e', '.', 's', 9, 0,
  /* 7008 */ 'c', 'm', 'p', '.', 'l', 'e', '.', 's', 9, 0,
  /* 7018 */ 'c', '.', 'n', 'g', 'l', 'e', '.', 's', 9, 0,
  /* 7028 */ 'c', '.', 'o', 'l', 'e', '.', 's', 9, 0,
  /* 7037 */ 'c', 'm', 'p', '.', 's', 'l', 'e', '.', 's', 9, 0,
  /* 7048 */ 'c', '.', 'u', 'l', 'e', '.', 's', 9, 0,
  /* 7057 */ 'c', 'm', 'p', '.', 'u', 'l', 'e', '.', 's', 9, 0,
  /* 7068 */ 'c', 'm', 'p', '.', 's', 'u', 'l', 'e', '.', 's', 9, 0,
  /* 7080 */ 'c', '.', 'f', '.', 's', 9, 0,
  /* 7087 */ 'c', 'm', 'p', '.', 'a', 'f', '.', 's', 9, 0,
  /* 7097 */ 'c', 'm', 'p', '.', 's', 'a', 'f', '.', 's', 9, 0,
  /* 7108 */ 'm', 's', 'u', 'b', 'f', '.', 's', 9, 0,
  /* 7117 */ 'm', 'a', 'd', 'd', 'f', '.', 's', 9, 0,
  /* 7126 */ 'c', '.', 's', 'f', '.', 's', 9, 0,
  /* 7134 */ 'm', 'o', 'v', 'f', '.', 's', 9, 0,
  /* 7142 */ 'n', 'e', 'g', '.', 's', 9, 0,
  /* 7149 */ 'l', 'i', '.', 's', 9, 0,
  /* 7155 */ 't', 'r', 'u', 'n', 'c', '.', 'l', '.', 's', 9, 0,
  /* 7166 */ 'r', 'o', 'u', 'n', 'd', '.', 'l', '.', 's', 9, 0,
  /* 7177 */ 'c', 'e', 'i', 'l', '.', 'l', '.', 's', 9, 0,
  /* 7187 */ 'f', 'l', 'o', 'o', 'r', '.', 'l', '.', 's', 9, 0,
  /* 7198 */ 'c', 'v', 't', '.', 'l', '.', 's', 9, 0,
  /* 7207 */ 's', 'e', 'l', '.', 's', 9, 0,
  /* 7214 */ 'c', '.', 'n', 'g', 'l', '.', 's', 9, 0,
  /* 7223 */ 'm', 'u', 'l', '.', 's', 9, 0,
  /* 7230 */ 'm', 'i', 'n', '.', 's', 9, 0,
  /* 7237 */ 'c', '.', 'u', 'n', '.', 's', 9, 0,
  /* 7245 */ 'c', 'm', 'p', '.', 'u', 'n', '.', 's', 9, 0,
  /* 7255 */ 'c', 'm', 'p', '.', 's', 'u', 'n', '.', 's', 9, 0,
  /* 7266 */ 'm', 'o', 'v', 'n', '.', 's', 9, 0,
  /* 7274 */ 'r', 'e', 'c', 'i', 'p', '.', 's', 9, 0,
  /* 7283 */ 'c', '.', 'e', 'q', '.', 's', 9, 0,
  /* 7291 */ 'c', 'm', 'p', '.', 'e', 'q', '.', 's', 9, 0,
  /* 7301 */ 'c', '.', 's', 'e', 'q', '.', 's', 9, 0,
  /* 7310 */ 'c', 'm', 'p', '.', 's', 'e', 'q', '.', 's', 9, 0,
  /* 7321 */ 'c', '.', 'u', 'e', 'q', '.', 's', 9, 0,
  /* 7330 */ 'c', 'm', 'p', '.', 'u', 'e', 'q', '.', 's', 9, 0,
  /* 7341 */ 'c', 'm', 'p', '.', 's', 'u', 'e', 'q', '.', 's', 9, 0,
  /* 7353 */ 'a', 'b', 's', '.', 's', 9, 0,
  /* 7360 */ 'c', 'v', 't', '.', 'p', 's', '.', 's', 9, 0,
  /* 7370 */ 'c', 'l', 'a', 's', 's', '.', 's', 9, 0,
  /* 7379 */ 'c', '.', 'n', 'g', 't', '.', 's', 9, 0,
  /* 7388 */ 'c', '.', 'l', 't', '.', 's', 9, 0,
  /* 7396 */ 'c', 'm', 'p', '.', 'l', 't', '.', 's', 9, 0,
  /* 7406 */ 'c', '.', 'o', 'l', 't', '.', 's', 9, 0,
  /* 7415 */ 'c', 'm', 'p', '.', 's', 'l', 't', '.', 's', 9, 0,
  /* 7426 */ 'c', '.', 'u', 'l', 't', '.', 's', 9, 0,
  /* 7435 */ 'c', 'm', 'p', '.', 'u', 'l', 't', '.', 's', 9, 0,
  /* 7446 */ 'c', 'm', 'p', '.', 's', 'u', 'l', 't', '.', 's', 9, 0,
  /* 7458 */ 'r', 'i', 'n', 't', '.', 's', 9, 0,
  /* 7466 */ 'r', 's', 'q', 'r', 't', '.', 's', 9, 0,
  /* 7475 */ 'm', 'o', 'v', 't', '.', 's', 9, 0,
  /* 7483 */ 'd', 'i', 'v', '.', 's', 9, 0,
  /* 7490 */ 'm', 'o', 'v', '.', 's', 9, 0,
  /* 7497 */ 't', 'r', 'u', 'n', 'c', '.', 'w', '.', 's', 9, 0,
  /* 7508 */ 'r', 'o', 'u', 'n', 'd', '.', 'w', '.', 's', 9, 0,
  /* 7519 */ 'c', 'e', 'i', 'l', '.', 'w', '.', 's', 9, 0,
  /* 7529 */ 'f', 'l', 'o', 'o', 'r', '.', 'w', '.', 's', 9, 0,
  /* 7540 */ 'c', 'v', 't', '.', 'w', '.', 's', 9, 0,
  /* 7549 */ 'm', 'a', 'x', '.', 's', 9, 0,
  /* 7556 */ 's', 'e', 'l', 'n', 'e', 'z', '.', 's', 9, 0,
  /* 7566 */ 's', 'e', 'l', 'e', 'q', 'z', '.', 's', 9, 0,
  /* 7576 */ 'm', 'o', 'v', 'z', '.', 's', 9, 0,
  /* 7584 */ 'a', 'b', 's', 9, 0,
  /* 7589 */ 'j', 'a', 'l', 's', 9, 0,
  /* 7595 */ 'b', 'g', 'e', 'z', 'a', 'l', 's', 9, 0,
  /* 7604 */ 'b', 'l', 't', 'z', 'a', 'l', 's', 9, 0,
  /* 7613 */ 'c', 'i', 'n', 's', 9, 0,
  /* 7619 */ 'd', 'i', 'n', 's', 9, 0,
  /* 7625 */ 'p', 'l', 'l', '.', 'p', 's', 9, 0,
  /* 7633 */ 'p', 'l', 'u', '.', 'p', 's', 9, 0,
  /* 7641 */ 'j', 'a', 'l', 'r', 's', 9, 0,
  /* 7648 */ 'e', 'x', 't', 's', 9, 0,
  /* 7654 */ 'l', 'w', 'x', 's', 9, 0,
  /* 7660 */ 'b', 'c', '1', 't', 9, 0,
  /* 7666 */ 'b', 'g', 't', 9, 0,
  /* 7671 */ 's', 'g', 't', 9, 0,
  /* 7676 */ 'w', 'a', 'i', 't', 9, 0,
  /* 7682 */ 'b', 'l', 't', 9, 0,
  /* 7687 */ 's', 'l', 't', 9, 0,
  /* 7692 */ 't', 'l', 't', 9, 0,
  /* 7697 */ 'd', 'm', 'u', 'l', 't', 9, 0,
  /* 7704 */ 'd', 'm', 't', 9, 0,
  /* 7709 */ 'e', 'm', 't', 9, 0,
  /* 7714 */ 'n', 'o', 't', 9, 0,
  /* 7719 */ 'g', 'i', 'n', 'v', 't', 9, 0,
  /* 7726 */ 'm', 'o', 'v', 't', 9, 0,
  /* 7732 */ 'd', 'e', 'x', 't', 9, 0,
  /* 7738 */ 'l', 'b', 'u', 9, 0,
  /* 7743 */ 'd', 's', 'u', 'b', 'u', 9, 0,
  /* 7750 */ 'm', 's', 'u', 'b', 'u', 9, 0,
  /* 7757 */ 'b', 'a', 'd', 'd', 'u', 9, 0,
  /* 7764 */ 'd', 'a', 'd', 'd', 'u', 9, 0,
  /* 7771 */ 'm', 'a', 'd', 'd', 'u', 9, 0,
  /* 7778 */ 'd', 'm', 'o', 'd', 'u', 9, 0,
  /* 7785 */ 'b', 'g', 'e', 'u', 9, 0,
  /* 7791 */ 's', 'g', 'e', 'u', 9, 0,
  /* 7797 */ 't', 'g', 'e', 'u', 9, 0,
  /* 7803 */ 'b', 'l', 'e', 'u', 9, 0,
  /* 7809 */ 'u', 'l', 'h', 'u', 9, 0,
  /* 7815 */ 'd', 'm', 'u', 'h', 'u', 9, 0,
  /* 7822 */ 'd', 'a', 'd', 'd', 'i', 'u', 9, 0,
  /* 7830 */ 't', 'g', 'e', 'i', 'u', 9, 0,
  /* 7837 */ 's', 'l', 't', 'i', 'u', 9, 0,
  /* 7844 */ 't', 'l', 't', 'i', 'u', 9, 0,
  /* 7851 */ 'v', '3', 'm', 'u', 'l', 'u', 9, 0,
  /* 7859 */ 'd', 'm', 'u', 'l', 'u', 9, 0,
  /* 7866 */ 'v', 'm', 'u', 'l', 'u', 9, 0,
  /* 7873 */ 'd', 'r', 'e', 'm', 'u', 9, 0,
  /* 7880 */ 'd', 'm', 'u', 'l', 'o', 'u', 9, 0,
  /* 7888 */ 'c', 'v', 't', '.', 's', '.', 'p', 'u', 9, 0,
  /* 7898 */ 'd', 'i', 'n', 's', 'u', 9, 0,
  /* 7905 */ 'b', 'g', 't', 'u', 9, 0,
  /* 7911 */ 's', 'g', 't', 'u', 9, 0,
  /* 7917 */ 'b', 'l', 't', 'u', 9, 0,
  /* 7923 */ 's', 'l', 't', 'u', 9, 0,
  /* 7929 */ 't', 'l', 't', 'u', 9, 0,
  /* 7935 */ 'd', 'm', 'u', 'l', 't', 'u', 9, 0,
  /* 7943 */ 'd', 'e', 'x', 't', 'u', 9, 0,
  /* 7950 */ 'd', 'd', 'i', 'v', 'u', 9, 0,
  /* 7957 */ 'l', 'w', 'u', 9, 0,
  /* 7962 */ 'a', 'n', 'd', '.', 'v', 9, 0,
  /* 7969 */ 'm', 'o', 'v', 'e', '.', 'v', 9, 0,
  /* 7977 */ 'b', 's', 'e', 'l', '.', 'v', 9, 0,
  /* 7985 */ 'n', 'o', 'r', '.', 'v', 9, 0,
  /* 7992 */ 'x', 'o', 'r', '.', 'v', 9, 0,
  /* 7999 */ 'b', 'z', '.', 'v', 9, 0,
  /* 8005 */ 'b', 'm', 'z', '.', 'v', 9, 0,
  /* 8012 */ 'b', 'n', 'z', '.', 'v', 9, 0,
  /* 8019 */ 'b', 'm', 'n', 'z', '.', 'v', 9, 0,
  /* 8027 */ 'd', 's', 'r', 'a', 'v', 9, 0,
  /* 8034 */ 'b', 'i', 't', 'r', 'e', 'v', 9, 0,
  /* 8042 */ 'd', 'd', 'i', 'v', 9, 0,
  /* 8048 */ 'd', 's', 'l', 'l', 'v', 9, 0,
  /* 8055 */ 'd', 's', 'r', 'l', 'v', 9, 0,
  /* 8062 */ 's', 'h', 'i', 'l', 'o', 'v', 9, 0,
  /* 8070 */ 'e', 'x', 't', 'p', 'd', 'p', 'v', 9, 0,
  /* 8079 */ 'e', 'x', 't', 'p', 'v', 9, 0,
  /* 8086 */ 'd', 'r', 'o', 't', 'r', 'v', 9, 0,
  /* 8094 */ 'i', 'n', 's', 'v', 9, 0,
  /* 8100 */ 'f', 'l', 'o', 'g', '2', '.', 'w', 9, 0,
  /* 8109 */ 'f', 'e', 'x', 'p', '2', '.', 'w', 9, 0,
  /* 8118 */ 'a', 'd', 'd', '_', 'a', '.', 'w', 9, 0,
  /* 8127 */ 'f', 'm', 'i', 'n', '_', 'a', '.', 'w', 9, 0,
  /* 8137 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'w', 9, 0,
  /* 8147 */ 'f', 'm', 'a', 'x', '_', 'a', '.', 'w', 9, 0,
  /* 8157 */ 's', 'r', 'a', '.', 'w', 9, 0,
  /* 8164 */ 'f', 's', 'u', 'b', '.', 'w', 9, 0,
  /* 8172 */ 'f', 'm', 's', 'u', 'b', '.', 'w', 9, 0,
  /* 8181 */ 'n', 'l', 'o', 'c', '.', 'w', 9, 0,
  /* 8189 */ 'n', 'l', 'z', 'c', '.', 'w', 9, 0,
  /* 8197 */ 'c', 'v', 't', '.', 'd', '.', 'w', 9, 0,
  /* 8206 */ 'f', 'a', 'd', 'd', '.', 'w', 9, 0,
  /* 8214 */ 'f', 'm', 'a', 'd', 'd', '.', 'w', 9, 0,
  /* 8223 */ 's', 'l', 'd', '.', 'w', 9, 0,
  /* 8230 */ 'p', 'c', 'k', 'o', 'd', '.', 'w', 9, 0,
  /* 8239 */ 'i', 'l', 'v', 'o', 'd', '.', 'w', 9, 0,
  /* 8248 */ 'f', 'c', 'l', 'e', '.', 'w', 9, 0,
  /* 8256 */ 'f', 's', 'l', 'e', '.', 'w', 9, 0,
  /* 8264 */ 'f', 'c', 'u', 'l', 'e', '.', 'w', 9, 0,
  /* 8273 */ 'f', 's', 'u', 'l', 'e', '.', 'w', 9, 0,
  /* 8282 */ 'f', 'c', 'n', 'e', '.', 'w', 9, 0,
  /* 8290 */ 'f', 's', 'n', 'e', '.', 'w', 9, 0,
  /* 8298 */ 'f', 'c', 'u', 'n', 'e', '.', 'w', 9, 0,
  /* 8307 */ 'f', 's', 'u', 'n', 'e', '.', 'w', 9, 0,
  /* 8316 */ 'i', 'n', 's', 'v', 'e', '.', 'w', 9, 0,
  /* 8325 */ 'f', 'c', 'a', 'f', '.', 'w', 9, 0,
  /* 8333 */ 'f', 's', 'a', 'f', '.', 'w', 9, 0,
  /* 8341 */ 'v', 's', 'h', 'f', '.', 'w', 9, 0,
  /* 8349 */ 'b', 'n', 'e', 'g', '.', 'w', 9, 0,
  /* 8357 */ 'p', 'r', 'e', 'c', 'r', '_', 's', 'r', 'a', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 8373 */ 'p', 'r', 'e', 'c', 'r', 'q', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 8386 */ 'p', 'r', 'e', 'c', 'r', '_', 's', 'r', 'a', '_', 'r', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 8404 */ 'p', 'r', 'e', 'c', 'r', 'q', '_', 'r', 's', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 8420 */ 's', 'u', 'b', 'q', 'h', '.', 'w', 9, 0,
  /* 8429 */ 'a', 'd', 'd', 'q', 'h', '.', 'w', 9, 0,
  /* 8438 */ 's', 'r', 'a', 'i', '.', 'w', 9, 0,
  /* 8446 */ 's', 'l', 'd', 'i', '.', 'w', 9, 0,
  /* 8454 */ 'b', 'n', 'e', 'g', 'i', '.', 'w', 9, 0,
  /* 8463 */ 's', 'l', 'l', 'i', '.', 'w', 9, 0,
  /* 8471 */ 's', 'r', 'l', 'i', '.', 'w', 9, 0,
  /* 8479 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'w', 9, 0,
  /* 8489 */ 'c', 'e', 'q', 'i', '.', 'w', 9, 0,
  /* 8497 */ 's', 'r', 'a', 'r', 'i', '.', 'w', 9, 0,
  /* 8506 */ 'b', 'c', 'l', 'r', 'i', '.', 'w', 9, 0,
  /* 8515 */ 's', 'r', 'l', 'r', 'i', '.', 'w', 9, 0,
  /* 8524 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'w', 9, 0,
  /* 8534 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'w', 9, 0,
  /* 8544 */ 'b', 's', 'e', 't', 'i', '.', 'w', 9, 0,
  /* 8553 */ 's', 'u', 'b', 'v', 'i', '.', 'w', 9, 0,
  /* 8562 */ 'a', 'd', 'd', 'v', 'i', '.', 'w', 9, 0,
  /* 8571 */ 'd', 'p', 'a', 'q', '_', 's', 'a', '.', 'l', '.', 'w', 9, 0,
  /* 8584 */ 'd', 'p', 's', 'q', '_', 's', 'a', '.', 'l', '.', 'w', 9, 0,
  /* 8597 */ 'f', 'i', 'l', 'l', '.', 'w', 9, 0,
  /* 8605 */ 's', 'l', 'l', '.', 'w', 9, 0,
  /* 8612 */ 'f', 'e', 'x', 'u', 'p', 'l', '.', 'w', 9, 0,
  /* 8622 */ 'f', 'f', 'q', 'l', '.', 'w', 9, 0,
  /* 8630 */ 's', 'r', 'l', '.', 'w', 9, 0,
  /* 8637 */ 'b', 'i', 'n', 's', 'l', '.', 'w', 9, 0,
  /* 8646 */ 'f', 'm', 'u', 'l', '.', 'w', 9, 0,
  /* 8654 */ 'i', 'l', 'v', 'l', '.', 'w', 9, 0,
  /* 8662 */ 'f', 'm', 'i', 'n', '.', 'w', 9, 0,
  /* 8670 */ 'f', 'c', 'u', 'n', '.', 'w', 9, 0,
  /* 8678 */ 'f', 's', 'u', 'n', '.', 'w', 9, 0,
  /* 8686 */ 'f', 'e', 'x', 'd', 'o', '.', 'w', 9, 0,
  /* 8695 */ 'f', 'r', 'c', 'p', '.', 'w', 9, 0,
  /* 8703 */ 'm', 's', 'u', 'b', '_', 'q', '.', 'w', 9, 0,
  /* 8713 */ 'm', 'a', 'd', 'd', '_', 'q', '.', 'w', 9, 0,
  /* 8723 */ 'm', 'u', 'l', '_', 'q', '.', 'w', 9, 0,
  /* 8732 */ 'm', 's', 'u', 'b', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 8743 */ 'm', 'a', 'd', 'd', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 8754 */ 'm', 'u', 'l', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 8764 */ 'f', 'c', 'e', 'q', '.', 'w', 9, 0,
  /* 8772 */ 'f', 's', 'e', 'q', '.', 'w', 9, 0,
  /* 8780 */ 'f', 'c', 'u', 'e', 'q', '.', 'w', 9, 0,
  /* 8789 */ 'f', 's', 'u', 'e', 'q', '.', 'w', 9, 0,
  /* 8798 */ 'f', 't', 'q', '.', 'w', 9, 0,
  /* 8805 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'w', 9, 0,
  /* 8815 */ 's', 'u', 'b', 'q', 'h', '_', 'r', '.', 'w', 9, 0,
  /* 8826 */ 'a', 'd', 'd', 'q', 'h', '_', 'r', '.', 'w', 9, 0,
  /* 8837 */ 'e', 'x', 't', 'r', '_', 'r', '.', 'w', 9, 0,
  /* 8847 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'w', 9, 0,
  /* 8858 */ 'e', 'x', 't', 'r', 'v', '_', 'r', '.', 'w', 9, 0,
  /* 8869 */ 's', 'r', 'a', 'r', '.', 'w', 9, 0,
  /* 8877 */ 'b', 'c', 'l', 'r', '.', 'w', 9, 0,
  /* 8885 */ 's', 'r', 'l', 'r', '.', 'w', 9, 0,
  /* 8893 */ 'f', 'c', 'o', 'r', '.', 'w', 9, 0,
  /* 8901 */ 'f', 's', 'o', 'r', '.', 'w', 9, 0,
  /* 8909 */ 'f', 'e', 'x', 'u', 'p', 'r', '.', 'w', 9, 0,
  /* 8919 */ 'f', 'f', 'q', 'r', '.', 'w', 9, 0,
  /* 8927 */ 'b', 'i', 'n', 's', 'r', '.', 'w', 9, 0,
  /* 8936 */ 'e', 'x', 't', 'r', '.', 'w', 9, 0,
  /* 8944 */ 'i', 'l', 'v', 'r', '.', 'w', 9, 0,
  /* 8952 */ 'c', 'v', 't', '.', 's', '.', 'w', 9, 0,
  /* 8961 */ 'a', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 8971 */ 'h', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 8981 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 8992 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 's', '.', 'w', 9, 0,
  /* 9004 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'w', 9, 0,
  /* 9014 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'w', 9, 0,
  /* 9025 */ 'm', 'o', 'd', '_', 's', '.', 'w', 9, 0,
  /* 9034 */ 'c', 'l', 'e', '_', 's', '.', 'w', 9, 0,
  /* 9043 */ 'a', 'v', 'e', '_', 's', '.', 'w', 9, 0,
  /* 9052 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'w', 9, 0,
  /* 9062 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'w', 9, 0,
  /* 9072 */ 'c', 'l', 't', 'i', '_', 's', '.', 'w', 9, 0,
  /* 9082 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'w', 9, 0,
  /* 9092 */ 's', 'h', 'l', 'l', '_', 's', '.', 'w', 9, 0,
  /* 9102 */ 'm', 'i', 'n', '_', 's', '.', 'w', 9, 0,
  /* 9111 */ 'd', 'o', 't', 'p', '_', 's', '.', 'w', 9, 0,
  /* 9121 */ 's', 'u', 'b', 'q', '_', 's', '.', 'w', 9, 0,
  /* 9131 */ 'a', 'd', 'd', 'q', '_', 's', '.', 'w', 9, 0,
  /* 9141 */ 'm', 'u', 'l', 'q', '_', 's', '.', 'w', 9, 0,
  /* 9151 */ 'a', 'b', 's', 'q', '_', 's', '.', 'w', 9, 0,
  /* 9161 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'w', 9, 0,
  /* 9171 */ 's', 'u', 'b', 's', '_', 's', '.', 'w', 9, 0,
  /* 9181 */ 'a', 'd', 'd', 's', '_', 's', '.', 'w', 9, 0,
  /* 9191 */ 's', 'a', 't', '_', 's', '.', 'w', 9, 0,
  /* 9200 */ 'c', 'l', 't', '_', 's', '.', 'w', 9, 0,
  /* 9209 */ 'f', 'f', 'i', 'n', 't', '_', 's', '.', 'w', 9, 0,
  /* 9220 */ 'f', 't', 'i', 'n', 't', '_', 's', '.', 'w', 9, 0,
  /* 9231 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'w', 9, 0,
  /* 9243 */ 'd', 'i', 'v', '_', 's', '.', 'w', 9, 0,
  /* 9252 */ 's', 'h', 'l', 'l', 'v', '_', 's', '.', 'w', 9, 0,
  /* 9263 */ 'm', 'a', 'x', '_', 's', '.', 'w', 9, 0,
  /* 9272 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'w', 9, 0,
  /* 9282 */ 'm', 'u', 'l', 'q', '_', 'r', 's', '.', 'w', 9, 0,
  /* 9293 */ 'e', 'x', 't', 'r', '_', 'r', 's', '.', 'w', 9, 0,
  /* 9304 */ 'e', 'x', 't', 'r', 'v', '_', 'r', 's', '.', 'w', 9, 0,
  /* 9316 */ 'f', 'c', 'l', 'a', 's', 's', '.', 'w', 9, 0,
  /* 9326 */ 's', 'p', 'l', 'a', 't', '.', 'w', 9, 0,
  /* 9335 */ 'b', 's', 'e', 't', '.', 'w', 9, 0,
  /* 9343 */ 'f', 'c', 'l', 't', '.', 'w', 9, 0,
  /* 9351 */ 'f', 's', 'l', 't', '.', 'w', 9, 0,
  /* 9359 */ 'f', 'c', 'u', 'l', 't', '.', 'w', 9, 0,
  /* 9368 */ 'f', 's', 'u', 'l', 't', '.', 'w', 9, 0,
  /* 9377 */ 'p', 'c', 'n', 't', '.', 'w', 9, 0,
  /* 9385 */ 'f', 'r', 'i', 'n', 't', '.', 'w', 9, 0,
  /* 9394 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'w', 9, 0,
  /* 9404 */ 'f', 's', 'q', 'r', 't', '.', 'w', 9, 0,
  /* 9413 */ 'f', 'r', 's', 'q', 'r', 't', '.', 'w', 9, 0,
  /* 9423 */ 's', 't', '.', 'w', 9, 0,
  /* 9429 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 9439 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 9449 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 9460 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 'u', '.', 'w', 9, 0,
  /* 9472 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 9482 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 9493 */ 'm', 'o', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 9502 */ 'c', 'l', 'e', '_', 'u', '.', 'w', 9, 0,
  /* 9511 */ 'a', 'v', 'e', '_', 'u', '.', 'w', 9, 0,
  /* 9520 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 9530 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 9540 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 9550 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 9560 */ 'm', 'i', 'n', '_', 'u', '.', 'w', 9, 0,
  /* 9569 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'w', 9, 0,
  /* 9579 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'w', 9, 0,
  /* 9589 */ 's', 'u', 'b', 's', '_', 'u', '.', 'w', 9, 0,
  /* 9599 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'w', 9, 0,
  /* 9609 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'w', 9, 0,
  /* 9621 */ 's', 'a', 't', '_', 'u', '.', 'w', 9, 0,
  /* 9630 */ 'c', 'l', 't', '_', 'u', '.', 'w', 9, 0,
  /* 9639 */ 'f', 'f', 'i', 'n', 't', '_', 'u', '.', 'w', 9, 0,
  /* 9650 */ 'f', 't', 'i', 'n', 't', '_', 'u', '.', 'w', 9, 0,
  /* 9661 */ 'd', 'i', 'v', '_', 'u', '.', 'w', 9, 0,
  /* 9670 */ 'm', 'a', 'x', '_', 'u', '.', 'w', 9, 0,
  /* 9679 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'w', 9, 0,
  /* 9689 */ 'm', 's', 'u', 'b', 'v', '.', 'w', 9, 0,
  /* 9698 */ 'm', 'a', 'd', 'd', 'v', '.', 'w', 9, 0,
  /* 9707 */ 'p', 'c', 'k', 'e', 'v', '.', 'w', 9, 0,
  /* 9716 */ 'i', 'l', 'v', 'e', 'v', '.', 'w', 9, 0,
  /* 9725 */ 'f', 'd', 'i', 'v', '.', 'w', 9, 0,
  /* 9733 */ 'm', 'u', 'l', 'v', '.', 'w', 9, 0,
  /* 9741 */ 'e', 'x', 't', 'r', 'v', '.', 'w', 9, 0,
  /* 9750 */ 'f', 'm', 'a', 'x', '.', 'w', 9, 0,
  /* 9758 */ 'b', 'z', '.', 'w', 9, 0,
  /* 9764 */ 'b', 'n', 'z', '.', 'w', 9, 0,
  /* 9771 */ 'c', 'r', 'c', '3', '2', 'w', 9, 0,
  /* 9779 */ 'c', 'r', 'c', '3', '2', 'c', 'w', 9, 0,
  /* 9788 */ 'u', 'l', 'w', 9, 0,
  /* 9793 */ 'u', 's', 'w', 9, 0,
  /* 9798 */ 'p', 'r', 'e', 'f', 'x', 9, 0,
  /* 9805 */ 'l', 'h', 'x', 9, 0,
  /* 9810 */ 'j', 'a', 'l', 'x', 9, 0,
  /* 9816 */ 'l', 'b', 'u', 'x', 9, 0,
  /* 9822 */ 'l', 'w', 'x', 9, 0,
  /* 9827 */ 'b', 'g', 'e', 'z', 9, 0,
  /* 9833 */ 'b', 'l', 'e', 'z', 9, 0,
  /* 9839 */ 'b', 'n', 'e', 'z', 9, 0,
  /* 9845 */ 's', 'e', 'l', 'n', 'e', 'z', 9, 0,
  /* 9853 */ 'b', 't', 'n', 'e', 'z', 9, 0,
  /* 9860 */ 'd', 'c', 'l', 'z', 9, 0,
  /* 9866 */ 'b', 'e', 'q', 'z', 9, 0,
  /* 9872 */ 's', 'e', 'l', 'e', 'q', 'z', 9, 0,
  /* 9880 */ 'b', 't', 'e', 'q', 'z', 9, 0,
  /* 9887 */ 'b', 'g', 't', 'z', 9, 0,
  /* 9893 */ 'b', 'l', 't', 'z', 9, 0,
  /* 9899 */ 'm', 'o', 'v', 'z', 9, 0,
  /* 9905 */ 's', 'e', 'b', 9, 32, 0,
  /* 9911 */ 's', 'e', 'h', 9, 32, 0,
  /* 9917 */ 'd', 'd', 'i', 'v', 'u', 9, '$', 'z', 'e', 'r', 'o', ',', 32, 0,
  /* 9931 */ 'd', 'd', 'i', 'v', 9, '$', 'z', 'e', 'r', 'o', ',', 32, 0,
  /* 9944 */ 'a', 'd', 'd', 'i', 'u', 9, '$', 's', 'p', ',', 32, 0,
  /* 9956 */ 'm', 'f', 't', 'c', '0', 32, 0,
  /* 9963 */ 'm', 't', 't', 'c', '0', 32, 0,
  /* 9970 */ 'm', 'f', 't', 'h', 'c', '1', 32, 0,
  /* 9978 */ 'm', 't', 't', 'h', 'c', '1', 32, 0,
  /* 9986 */ 'c', 'f', 't', 'c', '1', 32, 0,
  /* 9993 */ 'm', 'f', 't', 'c', '1', 32, 0,
  /* 10000 */ 'c', 't', 't', 'c', '1', 32, 0,
  /* 10007 */ 'm', 't', 't', 'c', '1', 32, 0,
  /* 10014 */ 's', 'y', 'n', 'c', 32, 0,
  /* 10020 */ 'l', 'd', 32, 0,
  /* 10024 */ 9, '.', 'w', 'o', 'r', 'd', 32, 0,
  /* 10032 */ 's', 'd', 32, 0,
  /* 10036 */ 'm', 'f', 't', 'h', 'i', 32, 0,
  /* 10043 */ 'm', 't', 't', 'h', 'i', 32, 0,
  /* 10050 */ 'm', 'f', 't', 'l', 'o', 32, 0,
  /* 10057 */ 'm', 't', 't', 'l', 'o', 32, 0,
  /* 10064 */ 'm', 'f', 't', 'd', 's', 'p', 32, 0,
  /* 10072 */ 'm', 't', 't', 'd', 's', 'p', 32, 0,
  /* 10080 */ 's', 'e', 'q', 32, 0,
  /* 10085 */ 'm', 'f', 't', 'g', 'p', 'r', 32, 0,
  /* 10093 */ 'm', 't', 't', 'g', 'p', 'r', 32, 0,
  /* 10101 */ 'd', 'e', 'x', 't', 32, 0,
  /* 10107 */ 'm', 'f', 't', 'a', 'c', 'x', 32, 0,
  /* 10115 */ 'm', 't', 't', 'a', 'c', 'x', 32, 0,
  /* 10123 */ 'b', 'c', '1', 'n', 'e', 'z', 32, 0,
  /* 10131 */ 'b', 'c', '2', 'n', 'e', 'z', 32, 0,
  /* 10139 */ 'b', 'c', '1', 'e', 'q', 'z', 32, 0,
  /* 10147 */ 'b', 'c', '2', 'e', 'q', 'z', 32, 0,
  /* 10155 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'P', 'a', 't', 'c', 'h', 'a', 'b', 'l', 'e', 32, 'R', 'E', 'T', '.', 0,
  /* 10186 */ 'c', '.', 0,
  /* 10189 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'y', 'p', 'e', 'd', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 10213 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'C', 'u', 's', 't', 'o', 'm', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 10238 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'n', 't', 'e', 'r', '.', 0,
  /* 10261 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'a', 'i', 'l', 32, 'C', 'a', 'l', 'l', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 10284 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 10306 */ 'b', 'r', 'e', 'a', 'k', 32, '0', 0,
  /* 10314 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 10327 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 10334 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 10344 */ 'D', 'B', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 10354 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 10369 */ 'j', 'r', 'c', 9, '$', 'r', 'a', 0,
  /* 10377 */ 'j', 'r', 9, '$', 'r', 'a', 0,
  /* 10384 */ 'e', 'h', 'b', 0,
  /* 10388 */ 'e', 'r', 'e', 't', 'n', 'c', 0,
  /* 10395 */ 'p', 'a', 'u', 's', 'e', 0,
  /* 10401 */ 't', 'l', 'b', 'i', 'n', 'v', 'f', 0,
  /* 10409 */ 't', 'l', 'b', 'g', 'i', 'n', 'v', 'f', 0,
  /* 10418 */ 't', 'l', 'b', 'w', 'i', 0,
  /* 10424 */ 't', 'l', 'b', 'g', 'w', 'i', 0,
  /* 10431 */ '#', 32, 'F', 'E', 'n', 't', 'r', 'y', 32, 'c', 'a', 'l', 'l', 0,
  /* 10445 */ 'f', 'o', 'o', 0,
  /* 10449 */ 't', 'l', 'b', 'p', 0,
  /* 10454 */ 't', 'l', 'b', 'g', 'p', 0,
  /* 10460 */ 's', 's', 'n', 'o', 'p', 0,
  /* 10466 */ 't', 'l', 'b', 'r', 0,
  /* 10471 */ 't', 'l', 'b', 'g', 'r', 0,
  /* 10477 */ 't', 'l', 'b', 'w', 'r', 0,
  /* 10483 */ 't', 'l', 'b', 'g', 'w', 'r', 0,
  /* 10490 */ 'd', 'e', 'r', 'e', 't', 0,
  /* 10496 */ 'w', 'a', 'i', 't', 0,
  /* 10501 */ 't', 'l', 'b', 'i', 'n', 'v', 0,
  /* 10508 */ 't', 'l', 'b', 'g', 'i', 'n', 'v', 0,
  };

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    10335U,	// DBG_VALUE
    10345U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    10328U,	// BUNDLE
    10355U,	// LIFETIME_START
    10315U,	// LIFETIME_END
    0U,	// STACKMAP
    10432U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    10239U,	// PATCHABLE_FUNCTION_ENTER
    10156U,	// PATCHABLE_RET
    10285U,	// PATCHABLE_FUNCTION_EXIT
    10262U,	// PATCHABLE_TAIL_CALL
    10214U,	// PATCHABLE_EVENT_CALL
    10190U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTR_MASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    23969U,	// ABSMacro
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND_V_D_PSEUDO
    0U,	// AND_V_H_PSEUDO
    0U,	// AND_V_W_PSEUDO
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I16_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I32_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I64_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_CMP_SWAP_I8_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I16_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I32_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I64_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_ADD_I8_POSTRA
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I16_POSTRA
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I32_POSTRA
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I64_POSTRA
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_AND_I8_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I16_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I32_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I64_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MAX_I8_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I16_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I32_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I64_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_MIN_I8_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I16_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I32_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I64_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_NAND_I8_POSTRA
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I16_POSTRA
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I32_POSTRA
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I64_POSTRA
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_OR_I8_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I16_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I32_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I64_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_SUB_I8_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I16_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I32_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I64_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMAX_I8_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I16_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I32_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I64_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_UMIN_I8_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I16_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I32_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I64_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_LOAD_XOR_I8_POSTRA
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I16_POSTRA
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I32_POSTRA
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I64_POSTRA
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATOMIC_SWAP_I8_POSTRA
    0U,	// B
    0U,	// BAL_BR
    0U,	// BAL_BR_MM
    268458208U,	// BEQLImmMacro
    268456065U,	// BGE
    268456065U,	// BGEImmMacro
    268458069U,	// BGEL
    268458069U,	// BGELImmMacro
    268459626U,	// BGEU
    268459626U,	// BGEUImmMacro
    268458239U,	// BGEUL
    268458239U,	// BGEULImmMacro
    268459507U,	// BGT
    268459507U,	// BGTImmMacro
    268458227U,	// BGTL
    268458227U,	// BGTLImmMacro
    268459746U,	// BGTU
    268459746U,	// BGTUImmMacro
    268458259U,	// BGTUL
    268458259U,	// BGTULImmMacro
    268456105U,	// BLE
    268456105U,	// BLEImmMacro
    268458075U,	// BLEL
    268458075U,	// BLELImmMacro
    268459644U,	// BLEU
    268459644U,	// BLEUImmMacro
    268458246U,	// BLEUL
    268458246U,	// BLEULImmMacro
    268459523U,	// BLT
    268459523U,	// BLTImmMacro
    268458233U,	// BLTL
    268458233U,	// BLTLImmMacro
    268459758U,	// BLTU
    268459758U,	// BLTUImmMacro
    268458266U,	// BLTUL
    268458266U,	// BLTULImmMacro
    268458081U,	// BNELImmMacro
    0U,	// BPOSGE32_PSEUDO
    0U,	// BSEL_D_PSEUDO
    0U,	// BSEL_FD_PSEUDO
    0U,	// BSEL_FW_PSEUDO
    0U,	// BSEL_H_PSEUDO
    0U,	// BSEL_W_PSEUDO
    0U,	// B_MM
    279279U,	// B_MMR6_Pseudo
    279279U,	// B_MM_Pseudo
    268458559U,	// BeqImm
    268456127U,	// BneImm
    536893891U,	// BteqzT8CmpX16
    536893324U,	// BteqzT8CmpiX16
    536894984U,	// BteqzT8SltX16
    536893354U,	// BteqzT8SltiX16
    536895134U,	// BteqzT8SltiuX16
    536895220U,	// BteqzT8SltuX16
    805329347U,	// BtnezT8CmpX16
    805328780U,	// BtnezT8CmpiX16
    805330440U,	// BtnezT8SltX16
    805328810U,	// BtnezT8SltiX16
    805330590U,	// BtnezT8SltiuX16
    805330676U,	// BtnezT8SltuX16
    0U,	// BuildPairF64
    0U,	// BuildPairF64_64
    26371U,	// CFTC1
    10446U,	// CONSTPOOL_ENTRY
    0U,	// COPY_FD_PSEUDO
    0U,	// COPY_FW_PSEUDO
    8955665U,	// CTTC1
    288553U,	// Constant32
    268458253U,	// DMULImmMacro
    268458253U,	// DMULMacro
    268458388U,	// DMULOMacro
    268459721U,	// DMULOUMacro
    268458192U,	// DROL
    268458192U,	// DROLImm
    268458726U,	// DROR
    268458726U,	// DRORImm
    268459883U,	// DSDivIMacro
    268459883U,	// DSDivMacro
    268458311U,	// DSRemIMacro
    268458311U,	// DSRemMacro
    268459791U,	// DUDivIMacro
    268459791U,	// DUDivMacro
    268459714U,	// DURemIMacro
    268459714U,	// DURemMacro
    0U,	// ERet
    0U,	// ExtractElementF64
    0U,	// ExtractElementF64_64
    0U,	// FABS_D
    0U,	// FABS_W
    0U,	// FEXP2_D_1_PSEUDO
    0U,	// FEXP2_W_1_PSEUDO
    0U,	// FILL_FD_PSEUDO
    0U,	// FILL_FW_PSEUDO
    1090541443U,	// GotPrologue16
    0U,	// INSERT_B_VIDX64_PSEUDO
    0U,	// INSERT_B_VIDX_PSEUDO
    0U,	// INSERT_D_VIDX64_PSEUDO
    0U,	// INSERT_D_VIDX_PSEUDO
    0U,	// INSERT_FD_PSEUDO
    0U,	// INSERT_FD_VIDX64_PSEUDO
    0U,	// INSERT_FD_VIDX_PSEUDO
    0U,	// INSERT_FW_PSEUDO
    0U,	// INSERT_FW_VIDX64_PSEUDO
    0U,	// INSERT_FW_VIDX_PSEUDO
    0U,	// INSERT_H_VIDX64_PSEUDO
    0U,	// INSERT_H_VIDX_PSEUDO
    0U,	// INSERT_W_VIDX64_PSEUDO
    0U,	// INSERT_W_VIDX_PSEUDO
    0U,	// JALR64Pseudo
    0U,	// JALRHB64Pseudo
    0U,	// JALRHBPseudo
    0U,	// JALRPseudo
    0U,	// JAL_MMR6
    284655U,	// JalOneReg
    22511U,	// JalTwoReg
    25192229U,	// LDMacro
    0U,	// LD_F16
    25182214U,	// LOAD_ACC128
    25182214U,	// LOAD_ACC64
    25182214U,	// LOAD_ACC64DSP
    25188825U,	// LOAD_CCOND_DSP
    0U,	// LONG_BRANCH_ADDiu
    0U,	// LONG_BRANCH_ADDiu2Op
    0U,	// LONG_BRANCH_DADDiu
    0U,	// LONG_BRANCH_DADDiu2Op
    0U,	// LONG_BRANCH_LUi
    0U,	// LONG_BRANCH_LUi2Op
    0U,	// LONG_BRANCH_LUi2Op_64
    55643U,	// LWM_MM
    17042U,	// LoadAddrImm32
    17063U,	// LoadAddrImm64
    25182866U,	// LoadAddrReg32
    25182887U,	// LoadAddrReg64
    22403U,	// LoadImm32
    22407U,	// LoadImm64
    19107U,	// LoadImmDoubleFGR
    19107U,	// LoadImmDoubleFGR_32
    19107U,	// LoadImmDoubleGPR
    23534U,	// LoadImmSingleFGR
    23534U,	// LoadImmSingleGPR
    812606U,	// LwConstant32
    26492U,	// MFTACX
    268461797U,	// MFTC0
    26378U,	// MFTC1
    288593U,	// MFTDSP
    26470U,	// MFTGPR
    26355U,	// MFTHC1
    26421U,	// MFTHI
    26435U,	// MFTLO
    0U,	// MIPSeh_return32
    0U,	// MIPSeh_return64
    0U,	// MSA_FP_EXTEND_D_PSEUDO
    0U,	// MSA_FP_EXTEND_W_PSEUDO
    0U,	// MSA_FP_ROUND_D_PSEUDO
    0U,	// MSA_FP_ROUND_W_PSEUDO
    8955780U,	// MTTACX
    1376298732U,	// MTTC0
    8955672U,	// MTTC1
    288601U,	// MTTDSP
    8955758U,	// MTTGPR
    8955643U,	// MTTHC1
    8955708U,	// MTTHI
    8955722U,	// MTTLO
    268458254U,	// MULImmMacro
    268458389U,	// MULOMacro
    268459722U,	// MULOUMacro
    24083U,	// MultRxRy16
    43032083U,	// MultRxRyRz16
    24321U,	// MultuRxRy16
    43032321U,	// MultuRxRyRz16
    0U,	// NOP
    268458721U,	// NORImm
    268458721U,	// NORImm64
    0U,	// NOR_V_D_PSEUDO
    0U,	// NOR_V_H_PSEUDO
    0U,	// NOR_V_W_PSEUDO
    0U,	// OR_V_D_PSEUDO
    0U,	// OR_V_H_PSEUDO
    0U,	// OR_V_W_PSEUDO
    0U,	// PseudoCMPU_EQ_QB
    0U,	// PseudoCMPU_LE_QB
    0U,	// PseudoCMPU_LT_QB
    0U,	// PseudoCMP_EQ_PH
    0U,	// PseudoCMP_LE_PH
    0U,	// PseudoCMP_LT_PH
    16390U,	// PseudoCVT_D32_W
    16390U,	// PseudoCVT_D64_L
    16390U,	// PseudoCVT_D64_W
    16390U,	// PseudoCVT_S_L
    16390U,	// PseudoCVT_S_W
    0U,	// PseudoDMULT
    0U,	// PseudoDMULTu
    0U,	// PseudoDSDIV
    0U,	// PseudoDUDIV
    0U,	// PseudoD_SELECT_I
    0U,	// PseudoD_SELECT_I64
    0U,	// PseudoIndirectBranch
    0U,	// PseudoIndirectBranch64
    0U,	// PseudoIndirectBranch64R6
    0U,	// PseudoIndirectBranchR6
    0U,	// PseudoIndirectBranch_MM
    0U,	// PseudoIndirectBranch_MMR6
    0U,	// PseudoIndirectHazardBranch
    0U,	// PseudoIndirectHazardBranch64
    0U,	// PseudoIndrectHazardBranch64R6
    0U,	// PseudoIndrectHazardBranchR6
    0U,	// PseudoMADD
    0U,	// PseudoMADDU
    0U,	// PseudoMADDU_MM
    0U,	// PseudoMADD_MM
    0U,	// PseudoMFHI
    0U,	// PseudoMFHI64
    0U,	// PseudoMFHI_MM
    0U,	// PseudoMFLO
    0U,	// PseudoMFLO64
    0U,	// PseudoMFLO_MM
    0U,	// PseudoMSUB
    0U,	// PseudoMSUBU
    0U,	// PseudoMSUBU_MM
    0U,	// PseudoMSUB_MM
    0U,	// PseudoMTLOHI
    0U,	// PseudoMTLOHI64
    0U,	// PseudoMTLOHI_DSP
    0U,	// PseudoMTLOHI_MM
    0U,	// PseudoMULT
    0U,	// PseudoMULT_MM
    0U,	// PseudoMULTu
    0U,	// PseudoMULTu_MM
    0U,	// PseudoPICK_PH
    0U,	// PseudoPICK_QB
    0U,	// PseudoReturn
    0U,	// PseudoReturn64
    0U,	// PseudoSDIV
    0U,	// PseudoSELECTFP_F_D32
    0U,	// PseudoSELECTFP_F_D64
    0U,	// PseudoSELECTFP_F_I
    0U,	// PseudoSELECTFP_F_I64
    0U,	// PseudoSELECTFP_F_S
    0U,	// PseudoSELECTFP_T_D32
    0U,	// PseudoSELECTFP_T_D64
    0U,	// PseudoSELECTFP_T_I
    0U,	// PseudoSELECTFP_T_I64
    0U,	// PseudoSELECTFP_T_S
    0U,	// PseudoSELECT_D32
    0U,	// PseudoSELECT_D64
    0U,	// PseudoSELECT_I
    0U,	// PseudoSELECT_I64
    0U,	// PseudoSELECT_S
    268455844U,	// PseudoTRUNC_W_D
    268455844U,	// PseudoTRUNC_W_D32
    268459338U,	// PseudoTRUNC_W_S
    0U,	// PseudoUDIV
    268458193U,	// ROL
    268458193U,	// ROLImm
    268458727U,	// ROR
    268458727U,	// RORImm
    0U,	// RetRA
    0U,	// RetRA16
    25185431U,	// SDC1_M1
    0U,	// SDIV_MM_Pseudo
    25192241U,	// SDMacro
    268459884U,	// SDivIMacro
    268459884U,	// SDivMacro
    268461921U,	// SEQIMacro
    268461921U,	// SEQMacro
    268456070U,	// SGE
    268456070U,	// SGEImm
    268456070U,	// SGEImm64
    268459632U,	// SGEU
    268459632U,	// SGEUImm
    268459632U,	// SGEUImm64
    268459512U,	// SGTImm
    268459512U,	// SGTImm64
    268459752U,	// SGTUImm
    268459752U,	// SGTUImm64
    268459528U,	// SLTImm64
    268459764U,	// SLTUImm64
    0U,	// SNZ_B_PSEUDO
    0U,	// SNZ_D_PSEUDO
    0U,	// SNZ_H_PSEUDO
    0U,	// SNZ_V_PSEUDO
    0U,	// SNZ_W_PSEUDO
    268458312U,	// SRemIMacro
    268458312U,	// SRemMacro
    25182214U,	// STORE_ACC128
    25182214U,	// STORE_ACC64
    25182214U,	// STORE_ACC64DSP
    25188841U,	// STORE_CCOND_DSP
    0U,	// ST_F16
    55648U,	// SWM_MM
    0U,	// SZ_B_PSEUDO
    0U,	// SZ_D_PSEUDO
    0U,	// SZ_H_PSEUDO
    0U,	// SZ_V_PSEUDO
    0U,	// SZ_W_PSEUDO
    25182849U,	// SaaAddr
    25186321U,	// SaadAddr
    1386123U,	// SelBeqZ
    1386096U,	// SelBneZ
    1661016515U,	// SelTBteqZCmp
    1661015948U,	// SelTBteqZCmpi
    1661017608U,	// SelTBteqZSlt
    1661015978U,	// SelTBteqZSlti
    1661017758U,	// SelTBteqZSltiu
    1661017844U,	// SelTBteqZSltu
    1929451971U,	// SelTBtneZCmp
    1929451404U,	// SelTBtneZCmpi
    1929453064U,	// SelTBtneZSlt
    1929451434U,	// SelTBtneZSlti
    1929453214U,	// SelTBtneZSltiu
    1929453300U,	// SelTBtneZSltu
    59809288U,	// SltCCRxRy16
    59807658U,	// SltiCCRxImmX16
    59809438U,	// SltiuCCRxImmX16
    59809524U,	// SltuCCRxRy16
    59809524U,	// SltuRxRyRz16
    0U,	// TAILCALL
    0U,	// TAILCALL64R6REG
    0U,	// TAILCALLHB64R6REG
    0U,	// TAILCALLHBR6REG
    0U,	// TAILCALLR6REG
    0U,	// TAILCALLREG
    0U,	// TAILCALLREG64
    0U,	// TAILCALLREGHB
    0U,	// TAILCALLREGHB64
    0U,	// TAILCALLREG_MM
    0U,	// TAILCALLREG_MMR6
    0U,	// TAILCALL_MM
    0U,	// TAILCALL_MMR6
    0U,	// TRAP
    0U,	// TRAP_MM
    0U,	// UDIV_MM_Pseudo
    268459792U,	// UDivIMacro
    268459792U,	// UDivMacro
    268459715U,	// URemIMacro
    268459715U,	// URemMacro
    25187597U,	// Ulh
    25190018U,	// Ulhu
    25191997U,	// Ulw
    25188150U,	// Ush
    25192002U,	// Usw
    0U,	// XOR_V_D_PSEUDO
    0U,	// XOR_V_H_PSEUDO
    0U,	// XOR_V_W_PSEUDO
    22047U,	// ABSQ_S_PH
    22047U,	// ABSQ_S_PH_MM
    18197U,	// ABSQ_S_QB
    18197U,	// ABSQ_S_QB_MMR2
    25536U,	// ABSQ_S_W
    25536U,	// ABSQ_S_W_MM
    268455974U,	// ADD
    18483U,	// ADDIUPC
    18483U,	// ADDIUPC_MM
    18483U,	// ADDIUPC_MMR6
    22990U,	// ADDIUR1SP_MM
    268452218U,	// ADDIUR2_MM
    9470363U,	// ADDIUS5_MM
    285195U,	// ADDIUSP_MM
    268459664U,	// ADDIU_MMR6
    268457308U,	// ADDQH_PH
    268457308U,	// ADDQH_PH_MMR2
    268457425U,	// ADDQH_R_PH
    268457425U,	// ADDQH_R_PH_MMR2
    268460667U,	// ADDQH_R_W
    268460667U,	// ADDQH_R_W_MMR2
    268460270U,	// ADDQH_W
    268460270U,	// ADDQH_W_MMR2
    268457382U,	// ADDQ_PH
    268457382U,	// ADDQ_PH_MM
    268457481U,	// ADDQ_S_PH
    268457481U,	// ADDQ_S_PH_MM
    268460972U,	// ADDQ_S_W
    268460972U,	// ADDQ_S_W_MM
    268453979U,	// ADDSC
    268453979U,	// ADDSC_MM
    268452603U,	// ADDS_A_B
    268454140U,	// ADDS_A_D
    268456235U,	// ADDS_A_H
    268459978U,	// ADDS_A_W
    268453071U,	// ADDS_S_B
    268455238U,	// ADDS_S_D
    268456792U,	// ADDS_S_H
    268461022U,	// ADDS_S_W
    268453286U,	// ADDS_U_B
    268455705U,	// ADDS_U_D
    268457070U,	// ADDS_U_H
    268461440U,	// ADDS_U_W
    268452438U,	// ADDU16_MM
    268452438U,	// ADDU16_MMR6
    268453521U,	// ADDUH_QB
    268453521U,	// ADDUH_QB_MMR2
    268453629U,	// ADDUH_R_QB
    268453629U,	// ADDUH_R_QB_MMR2
    268459599U,	// ADDU_MMR6
    268457580U,	// ADDU_PH
    268457580U,	// ADDU_PH_MMR2
    268453734U,	// ADDU_QB
    268453734U,	// ADDU_QB_MM
    268457525U,	// ADDU_S_PH
    268457525U,	// ADDU_S_PH_MMR2
    268453675U,	// ADDU_S_QB
    268453675U,	// ADDU_S_QB_MM
    268452852U,	// ADDVI_B
    268454660U,	// ADDVI_D
    268456451U,	// ADDVI_H
    268460403U,	// ADDVI_W
    268453364U,	// ADDV_B
    268455795U,	// ADDV_D
    268457148U,	// ADDV_H
    268461540U,	// ADDV_W
    268454018U,	// ADDWC
    268454018U,	// ADDWC_MM
    268452585U,	// ADD_A_B
    268454121U,	// ADD_A_D
    268456217U,	// ADD_A_H
    268459959U,	// ADD_A_W
    268455974U,	// ADD_MM
    268455974U,	// ADD_MMR6
    268457801U,	// ADDi
    268457801U,	// ADDi_MM
    268459664U,	// ADDiu
    268459664U,	// ADDiu_MM
    268459599U,	// ADDu
    268459599U,	// ADDu_MM
    268458342U,	// ALIGN
    268458342U,	// ALIGN_MMR6
    18475U,	// ALUIPC
    18475U,	// ALUIPC_MMR6
    268456003U,	// AND
    10043849U,	// AND16_MM
    10043849U,	// AND16_MMR6
    268456003U,	// AND64
    268452318U,	// ANDI16_MM
    268452318U,	// ANDI16_MMR6
    268452711U,	// ANDI_B
    268457807U,	// ANDI_MMR6
    268456003U,	// AND_MM
    268456003U,	// AND_MMR6
    268459803U,	// AND_V
    268457807U,	// ANDi
    268457807U,	// ANDi64
    268457807U,	// ANDi_MM
    268456017U,	// APPEND
    268456017U,	// APPEND_MMR2
    268452965U,	// ASUB_S_B
    268455068U,	// ASUB_S_D
    268456624U,	// ASUB_S_H
    268460802U,	// ASUB_S_W
    268453180U,	// ASUB_U_B
    268455535U,	// ASUB_U_D
    268456912U,	// ASUB_U_H
    268461270U,	// ASUB_U_W
    268457911U,	// AUI
    18468U,	// AUIPC
    18468U,	// AUIPC_MMR6
    268457911U,	// AUI_MMR6
    268453051U,	// AVER_S_B
    268455218U,	// AVER_S_D
    268456762U,	// AVER_S_H
    268461002U,	// AVER_S_W
    268453266U,	// AVER_U_B
    268455685U,	// AVER_U_D
    268457050U,	// AVER_U_H
    268461420U,	// AVER_U_W
    268452993U,	// AVE_S_B
    268455150U,	// AVE_S_D
    268456694U,	// AVE_S_H
    268460884U,	// AVE_S_W
    268453208U,	// AVE_U_B
    268455617U,	// AVE_U_D
    268456982U,	// AVE_U_H
    268461352U,	// AVE_U_W
    24208U,	// AddiuRxImmX16
    1859216U,	// AddiuRxPcImmX16
    2164285072U,	// AddiuRxRxImm16
    16801424U,	// AddiuRxRxImmX16
    67133072U,	// AddiuRxRyOffMemX16
    2123481U,	// AddiuSpImm16
    288473U,	// AddiuSpImmX16
    268459599U,	// AdduRxRyRz16
    16797763U,	// AndRxRxRy16
    278949U,	// B16_MM
    268459598U,	// BADDu
    284650U,	// BAL
    280533U,	// BALC
    280533U,	// BALC_MMR6
    268458341U,	// BALIGN
    268458341U,	// BALIGN_MMR2
    75513935U,	// BBIT0
    75514067U,	// BBIT032
    75514060U,	// BBIT1
    75514076U,	// BBIT132
    280512U,	// BC
    278954U,	// BC16_MMR6
    26524U,	// BC1EQZ
    18608U,	// BC1EQZC_MMR6
    20738U,	// BC1F
    22631U,	// BC1FL
    20738U,	// BC1F_MM
    26508U,	// BC1NEZ
    18583U,	// BC1NEZC_MMR6
    24045U,	// BC1T
    22764U,	// BC1TL
    24045U,	// BC1T_MM
    26532U,	// BC2EQZ
    18617U,	// BC2EQZC_MMR6
    26516U,	// BC2NEZ
    18592U,	// BC2NEZC_MMR6
    268452780U,	// BCLRI_B
    268454604U,	// BCLRI_D
    268456395U,	// BCLRI_H
    268460347U,	// BCLRI_W
    268452932U,	// BCLR_B
    268454992U,	// BCLR_D
    268456591U,	// BCLR_H
    268460718U,	// BCLR_W
    280512U,	// BC_MMR6
    268458559U,	// BEQ
    268458559U,	// BEQ64
    268453961U,	// BEQC
    268453961U,	// BEQC64
    268453961U,	// BEQC_MMR6
    268458208U,	// BEQL
    17017U,	// BEQZ16_MM
    18429U,	// BEQZALC
    18429U,	// BEQZALC_MMR6
    18626U,	// BEQZC
    16832U,	// BEQZC16_MMR6
    18626U,	// BEQZC64
    18626U,	// BEQZC_MM
    18626U,	// BEQZC_MMR6
    268458559U,	// BEQ_MM
    268453828U,	// BGEC
    268453828U,	// BGEC64
    268453828U,	// BGEC_MMR6
    268453992U,	// BGEUC
    268453992U,	// BGEUC64
    268453992U,	// BGEUC_MMR6
    26212U,	// BGEZ
    26212U,	// BGEZ64
    22516U,	// BGEZAL
    18402U,	// BGEZALC
    18402U,	// BGEZALC_MMR6
    22712U,	// BGEZALL
    23980U,	// BGEZALS_MM
    22516U,	// BGEZAL_MM
    18569U,	// BGEZC
    18569U,	// BGEZC64
    18569U,	// BGEZC_MMR6
    22827U,	// BGEZL
    26212U,	// BGEZ_MM
    26272U,	// BGTZ
    26272U,	// BGTZ64
    18438U,	// BGTZALC
    18438U,	// BGTZALC_MMR6
    18633U,	// BGTZC
    18633U,	// BGTZC64
    18633U,	// BGTZC_MMR6
    22841U,	// BGTZL
    26272U,	// BGTZ_MM
    285229969U,	// BINSLI_B
    285231793U,	// BINSLI_D
    285233584U,	// BINSLI_H
    285237536U,	// BINSLI_W
    285230116U,	// BINSL_B
    285231993U,	// BINSL_D
    285233698U,	// BINSL_H
    285237694U,	// BINSL_W
    285230030U,	// BINSRI_B
    285231838U,	// BINSRI_D
    285233629U,	// BINSRI_H
    285237581U,	// BINSRI_W
    285230164U,	// BINSR_B
    285232258U,	// BINSR_D
    285233823U,	// BINSR_H
    285237984U,	// BINSR_W
    24419U,	// BITREV
    24419U,	// BITREV_MM
    22940U,	// BITSWAP
    22940U,	// BITSWAP_MMR6
    26218U,	// BLEZ
    26218U,	// BLEZ64
    18411U,	// BLEZALC
    18411U,	// BLEZALC_MMR6
    18576U,	// BLEZC
    18576U,	// BLEZC64
    18576U,	// BLEZC_MMR6
    22834U,	// BLEZL
    26218U,	// BLEZ_MM
    268453986U,	// BLTC
    268453986U,	// BLTC64
    268453986U,	// BLTC_MMR6
    268453999U,	// BLTUC
    268453999U,	// BLTUC64
    268453999U,	// BLTUC_MMR6
    26278U,	// BLTZ
    26278U,	// BLTZ64
    22524U,	// BLTZAL
    18447U,	// BLTZALC
    18447U,	// BLTZALC_MMR6
    22721U,	// BLTZALL
    23989U,	// BLTZALS_MM
    22524U,	// BLTZAL_MM
    18640U,	// BLTZC
    18640U,	// BLTZC64
    18640U,	// BLTZC_MMR6
    22848U,	// BLTZL
    26278U,	// BLTZ_MM
    285230085U,	// BMNZI_B
    285237076U,	// BMNZ_V
    285230077U,	// BMZI_B
    285237062U,	// BMZ_V
    268456127U,	// BNE
    268456127U,	// BNE64
    268453834U,	// BNEC
    268453834U,	// BNEC64
    268453834U,	// BNEC_MMR6
    268452719U,	// BNEGI_B
    268454552U,	// BNEGI_D
    268456343U,	// BNEGI_H
    268460295U,	// BNEGI_W
    268452687U,	// BNEG_B
    268454528U,	// BNEG_D
    268456319U,	// BNEG_H
    268460190U,	// BNEG_W
    268458081U,	// BNEL
    17009U,	// BNEZ16_MM
    18420U,	// BNEZALC
    18420U,	// BNEZALC_MMR6
    18601U,	// BNEZC
    16823U,	// BNEZC16_MMR6
    18601U,	// BNEZC64
    18601U,	// BNEZC_MM
    18601U,	// BNEZC_MMR6
    268456127U,	// BNE_MM
    268454006U,	// BNVC
    268454006U,	// BNVC_MMR6
    17948U,	// BNZ_B
    20464U,	// BNZ_D
    21732U,	// BNZ_H
    24397U,	// BNZ_V
    26149U,	// BNZ_W
    268454012U,	// BOVC
    268454012U,	// BOVC_MMR6
    278765U,	// BPOSGE32
    280501U,	// BPOSGE32C_MMR3
    278765U,	// BPOSGE32_MM
    83990475U,	// BREAK
    115188U,	// BREAK16_MM
    115188U,	// BREAK16_MMR6
    83990475U,	// BREAK_MM
    83990475U,	// BREAK_MMR6
    285229944U,	// BSELI_B
    285237034U,	// BSEL_V
    268452834U,	// BSETI_B
    268454642U,	// BSETI_D
    268456433U,	// BSETI_H
    268460385U,	// BSETI_W
    268453148U,	// BSET_B
    268455354U,	// BSET_D
    268456880U,	// BSET_H
    268461176U,	// BSET_W
    17942U,	// BZ_B
    20448U,	// BZ_D
    21726U,	// BZ_H
    24384U,	// BZ_V
    26143U,	// BZ_W
    2415945355U,	// BeqzRxImm16
    26251U,	// BeqzRxImmX16
    2114287U,	// Bimm16
    279279U,	// BimmX16
    2415945328U,	// BnezRxImm16
    26224U,	// BnezRxImmX16
    10307U,	// Break16
    2385561U,	// Bteqz16
    288409U,	// BteqzX16
    2385534U,	// Btnez16
    288382U,	// BtnezX16
    2756752U,	// CACHE
    2756722U,	// CACHEE
    2756722U,	// CACHEE_MM
    2756752U,	// CACHE_MM
    2756752U,	// CACHE_MMR6
    2756752U,	// CACHE_R6
    19235U,	// CEIL_L_D64
    19235U,	// CEIL_L_D_MMR6
    23562U,	// CEIL_L_S
    23562U,	// CEIL_L_S_MMR6
    20410U,	// CEIL_W_D32
    20410U,	// CEIL_W_D64
    20410U,	// CEIL_W_D_MMR6
    20410U,	// CEIL_W_MM
    23904U,	// CEIL_W_S
    23904U,	// CEIL_W_S_MM
    23904U,	// CEIL_W_S_MMR6
    268452763U,	// CEQI_B
    268454587U,	// CEQI_D
    268456378U,	// CEQI_H
    268460330U,	// CEQI_W
    268452917U,	// CEQ_B
    268454899U,	// CEQ_D
    268456569U,	// CEQ_H
    268460606U,	// CEQ_W
    16482U,	// CFC1
    16482U,	// CFC1_MM
    16698U,	// CFC2_MM
    17113U,	// CFCMSA
    268459454U,	// CINS
    268452126U,	// CINS32
    268459454U,	// CINS64_32
    268459454U,	// CINS_i32
    19880U,	// CLASS_D
    19880U,	// CLASS_D_MMR6
    23755U,	// CLASS_S
    23755U,	// CLASS_S_MMR6
    268453002U,	// CLEI_S_B
    268455159U,	// CLEI_S_D
    268456703U,	// CLEI_S_H
    268460893U,	// CLEI_S_W
    268453217U,	// CLEI_U_B
    268455626U,	// CLEI_U_D
    268456991U,	// CLEI_U_H
    268461361U,	// CLEI_U_W
    268452984U,	// CLE_S_B
    268455141U,	// CLE_S_D
    268456685U,	// CLE_S_H
    268460875U,	// CLE_S_W
    268453199U,	// CLE_U_B
    268455608U,	// CLE_U_D
    268456973U,	// CLE_U_H
    268461343U,	// CLE_U_W
    22908U,	// CLO
    22908U,	// CLO_MM
    22908U,	// CLO_MMR6
    22908U,	// CLO_R6
    268453022U,	// CLTI_S_B
    268455179U,	// CLTI_S_D
    268456723U,	// CLTI_S_H
    268460913U,	// CLTI_S_W
    268453237U,	// CLTI_U_B
    268455646U,	// CLTI_U_D
    268457011U,	// CLTI_U_H
    268461381U,	// CLTI_U_W
    268453090U,	// CLT_S_B
    268455257U,	// CLT_S_D
    268456811U,	// CLT_S_H
    268461041U,	// CLT_S_W
    268453317U,	// CLT_U_B
    268455736U,	// CLT_U_D
    268457101U,	// CLT_U_H
    268461471U,	// CLT_U_W
    26246U,	// CLZ
    26246U,	// CLZ_MM
    26246U,	// CLZ_MMR6
    26246U,	// CLZ_R6
    268453567U,	// CMPGDU_EQ_QB
    268453567U,	// CMPGDU_EQ_QB_MMR2
    268453472U,	// CMPGDU_LE_QB
    268453472U,	// CMPGDU_LE_QB_MMR2
    268453686U,	// CMPGDU_LT_QB
    268453686U,	// CMPGDU_LT_QB_MMR2
    268453581U,	// CMPGU_EQ_QB
    268453581U,	// CMPGU_EQ_QB_MM
    268453486U,	// CMPGU_LE_QB
    268453486U,	// CMPGU_LE_QB_MM
    268453700U,	// CMPGU_LT_QB
    268453700U,	// CMPGU_LT_QB_MM
    18138U,	// CMPU_EQ_QB
    18138U,	// CMPU_EQ_QB_MM
    18043U,	// CMPU_LE_QB
    18043U,	// CMPU_LE_QB_MM
    18257U,	// CMPU_LT_QB
    18257U,	// CMPU_LT_QB_MM
    268454449U,	// CMP_AF_D_MMR6
    268458928U,	// CMP_AF_S_MMR6
    268454888U,	// CMP_EQ_D
    268454888U,	// CMP_EQ_D_MMR6
    21935U,	// CMP_EQ_PH
    21935U,	// CMP_EQ_PH_MM
    268459132U,	// CMP_EQ_S
    268459132U,	// CMP_EQ_S_MMR6
    268454449U,	// CMP_F_D
    268458928U,	// CMP_F_S
    268454293U,	// CMP_LE_D
    268454293U,	// CMP_LE_D_MMR6
    21831U,	// CMP_LE_PH
    21831U,	// CMP_LE_PH_MM
    268458849U,	// CMP_LE_S
    268458849U,	// CMP_LE_S_MMR6
    268455379U,	// CMP_LT_D
    268455379U,	// CMP_LT_D_MMR6
    22104U,	// CMP_LT_PH
    22104U,	// CMP_LT_PH_MM
    268459237U,	// CMP_LT_S
    268459237U,	// CMP_LT_S_MMR6
    268454467U,	// CMP_SAF_D
    268454467U,	// CMP_SAF_D_MMR6
    268458938U,	// CMP_SAF_S
    268458938U,	// CMP_SAF_S_MMR6
    268454915U,	// CMP_SEQ_D
    268454915U,	// CMP_SEQ_D_MMR6
    268459151U,	// CMP_SEQ_S
    268459151U,	// CMP_SEQ_S_MMR6
    268454330U,	// CMP_SLE_D
    268454330U,	// CMP_SLE_D_MMR6
    268458878U,	// CMP_SLE_S
    268458878U,	// CMP_SLE_S_MMR6
    268455406U,	// CMP_SLT_D
    268455406U,	// CMP_SLT_D_MMR6
    268459256U,	// CMP_SLT_S
    268459256U,	// CMP_SLT_S_MMR6
    268454963U,	// CMP_SUEQ_D
    268454963U,	// CMP_SUEQ_D_MMR6
    268459182U,	// CMP_SUEQ_S
    268459182U,	// CMP_SUEQ_S_MMR6
    268454378U,	// CMP_SULE_D
    268454378U,	// CMP_SULE_D_MMR6
    268458909U,	// CMP_SULE_S
    268458909U,	// CMP_SULE_S_MMR6
    268455454U,	// CMP_SULT_D
    268455454U,	// CMP_SULT_D_MMR6
    268459287U,	// CMP_SULT_S
    268459287U,	// CMP_SULT_S_MMR6
    268454836U,	// CMP_SUN_D
    268454836U,	// CMP_SUN_D_MMR6
    268459096U,	// CMP_SUN_S
    268459096U,	// CMP_SUN_S_MMR6
    268454943U,	// CMP_UEQ_D
    268454943U,	// CMP_UEQ_D_MMR6
    268459171U,	// CMP_UEQ_S
    268459171U,	// CMP_UEQ_S_MMR6
    268454358U,	// CMP_ULE_D
    268454358U,	// CMP_ULE_D_MMR6
    268458898U,	// CMP_ULE_S
    268458898U,	// CMP_ULE_S_MMR6
    268455434U,	// CMP_ULT_D
    268455434U,	// CMP_ULT_D_MMR6
    268459276U,	// CMP_ULT_S
    268459276U,	// CMP_ULT_S_MMR6
    268454818U,	// CMP_UN_D
    268454818U,	// CMP_UN_D_MMR6
    268459086U,	// CMP_UN_S
    268459086U,	// CMP_UN_S_MMR6
    2684372233U,	// COPY_S_B
    2684374422U,	// COPY_S_D
    2684375965U,	// COPY_S_H
    2684380217U,	// COPY_S_W
    2684372448U,	// COPY_U_B
    2684376232U,	// COPY_U_H
    2684380624U,	// COPY_U_W
    268453411U,	// CRC32B
    268453419U,	// CRC32CB
    268455959U,	// CRC32CD
    268457215U,	// CRC32CH
    268461620U,	// CRC32CW
    268455945U,	// CRC32D
    268457195U,	// CRC32H
    268461612U,	// CRC32W
    8945789U,	// CTC1
    8945789U,	// CTC1_MM
    8946005U,	// CTC2_MM
    17121U,	// CTCMSA
    23358U,	// CVT_D32_S
    23358U,	// CVT_D32_S_MM
    24582U,	// CVT_D32_W
    24582U,	// CVT_D32_W_MM
    22488U,	// CVT_D64_L
    23358U,	// CVT_D64_S
    23358U,	// CVT_D64_S_MM
    24582U,	// CVT_D64_W
    24582U,	// CVT_D64_W_MM
    22488U,	// CVT_D_L_MMR6
    19256U,	// CVT_L_D64
    19256U,	// CVT_L_D64_MM
    19256U,	// CVT_L_D_MMR6
    23583U,	// CVT_L_S
    23583U,	// CVT_L_S_MM
    23583U,	// CVT_L_S_MMR6
    268459201U,	// CVT_PS_S64
    19603U,	// CVT_S_D32
    19603U,	// CVT_S_D32_MM
    19603U,	// CVT_S_D64
    19603U,	// CVT_S_D64_MM
    22497U,	// CVT_S_L
    22497U,	// CVT_S_L_MMR6
    22742U,	// CVT_S_PL64
    24273U,	// CVT_S_PU64
    25337U,	// CVT_S_W
    25337U,	// CVT_S_W_MM
    25337U,	// CVT_S_W_MMR6
    20431U,	// CVT_W_D32
    20431U,	// CVT_W_D32_MM
    20431U,	// CVT_W_D64
    20431U,	// CVT_W_D64_MM
    23925U,	// CVT_W_S
    23925U,	// CVT_W_S_MM
    23925U,	// CVT_W_S_MMR6
    268454880U,	// C_EQ_D32
    268454880U,	// C_EQ_D32_MM
    268454880U,	// C_EQ_D64
    268454880U,	// C_EQ_D64_MM
    268459124U,	// C_EQ_S
    268459124U,	// C_EQ_S_MM
    268454442U,	// C_F_D32
    268454442U,	// C_F_D32_MM
    268454442U,	// C_F_D64
    268454442U,	// C_F_D64_MM
    268458921U,	// C_F_S
    268458921U,	// C_F_S_MM
    268454285U,	// C_LE_D32
    268454285U,	// C_LE_D32_MM
    268454285U,	// C_LE_D64
    268454285U,	// C_LE_D64_MM
    268458841U,	// C_LE_S
    268458841U,	// C_LE_S_MM
    268455371U,	// C_LT_D32
    268455371U,	// C_LT_D32_MM
    268455371U,	// C_LT_D64
    268455371U,	// C_LT_D64_MM
    268459229U,	// C_LT_S
    268459229U,	// C_LT_S_MM
    268454276U,	// C_NGE_D32
    268454276U,	// C_NGE_D32_MM
    268454276U,	// C_NGE_D64
    268454276U,	// C_NGE_D64_MM
    268458832U,	// C_NGE_S
    268458832U,	// C_NGE_S_MM
    268454311U,	// C_NGLE_D32
    268454311U,	// C_NGLE_D32_MM
    268454311U,	// C_NGLE_D64
    268454311U,	// C_NGLE_D64_MM
    268458859U,	// C_NGLE_S
    268458859U,	// C_NGLE_S_MM
    268454728U,	// C_NGL_D32
    268454728U,	// C_NGL_D32_MM
    268454728U,	// C_NGL_D64
    268454728U,	// C_NGL_D64_MM
    268459055U,	// C_NGL_S
    268459055U,	// C_NGL_S_MM
    268455362U,	// C_NGT_D32
    268455362U,	// C_NGT_D32_MM
    268455362U,	// C_NGT_D64
    268455362U,	// C_NGT_D64_MM
    268459220U,	// C_NGT_S
    268459220U,	// C_NGT_S_MM
    268454321U,	// C_OLE_D32
    268454321U,	// C_OLE_D32_MM
    268454321U,	// C_OLE_D64
    268454321U,	// C_OLE_D64_MM
    268458869U,	// C_OLE_S
    268458869U,	// C_OLE_S_MM
    268455397U,	// C_OLT_D32
    268455397U,	// C_OLT_D32_MM
    268455397U,	// C_OLT_D64
    268455397U,	// C_OLT_D64_MM
    268459247U,	// C_OLT_S
    268459247U,	// C_OLT_S_MM
    268454906U,	// C_SEQ_D32
    268454906U,	// C_SEQ_D32_MM
    268454906U,	// C_SEQ_D64
    268454906U,	// C_SEQ_D64_MM
    268459142U,	// C_SEQ_S
    268459142U,	// C_SEQ_S_MM
    268454512U,	// C_SF_D32
    268454512U,	// C_SF_D32_MM
    268454512U,	// C_SF_D64
    268454512U,	// C_SF_D64_MM
    268458967U,	// C_SF_S
    268458967U,	// C_SF_S_MM
    268454934U,	// C_UEQ_D32
    268454934U,	// C_UEQ_D32_MM
    268454934U,	// C_UEQ_D64
    268454934U,	// C_UEQ_D64_MM
    268459162U,	// C_UEQ_S
    268459162U,	// C_UEQ_S_MM
    268454349U,	// C_ULE_D32
    268454349U,	// C_ULE_D32_MM
    268454349U,	// C_ULE_D64
    268454349U,	// C_ULE_D64_MM
    268458889U,	// C_ULE_S
    268458889U,	// C_ULE_S_MM
    268455425U,	// C_ULT_D32
    268455425U,	// C_ULT_D32_MM
    268455425U,	// C_ULT_D64
    268455425U,	// C_ULT_D64_MM
    268459267U,	// C_ULT_S
    268459267U,	// C_ULT_S_MM
    268454810U,	// C_UN_D32
    268454810U,	// C_UN_D32_MM
    268454810U,	// C_UN_D64
    268454810U,	// C_UN_D64_MM
    268459078U,	// C_UN_S
    268459078U,	// C_UN_S_MM
    22979U,	// CmpRxRy16
    2952812428U,	// CmpiRxImm16
    22412U,	// CmpiRxImmX16
    268455973U,	// DADD
    268457800U,	// DADDi
    268459663U,	// DADDiu
    268459605U,	// DADDu
    268457831U,	// DAHI
    268458349U,	// DALIGN
    268457892U,	// DATI
    268457910U,	// DAUI
    22939U,	// DBITSWAP
    22907U,	// DCLO
    22907U,	// DCLO_R6
    26245U,	// DCLZ
    26245U,	// DCLZ_R6
    268459883U,	// DDIV
    268459791U,	// DDIVU
    10491U,	// DERET
    10491U,	// DERET_MM
    10491U,	// DERET_MMR6
    268459573U,	// DEXT
    268461942U,	// DEXT64_32
    268458324U,	// DEXTM
    268459784U,	// DEXTU
    284491U,	// DI
    268459460U,	// DINS
    268458317U,	// DINSM
    268459739U,	// DINSU
    268459884U,	// DIV
    268459792U,	// DIVU
    268459792U,	// DIVU_MMR6
    268459884U,	// DIV_MMR6
    268453111U,	// DIV_S_B
    268455300U,	// DIV_S_D
    268456832U,	// DIV_S_H
    268461084U,	// DIV_S_W
    268453326U,	// DIV_U_B
    268455767U,	// DIV_U_D
    268457110U,	// DIV_U_H
    268461502U,	// DIV_U_W
    284491U,	// DI_MM
    284491U,	// DI_MMR6
    268452563U,	// DLSA
    268452563U,	// DLSA_R6
    268451841U,	// DMFC0
    16488U,	// DMFC1
    268452160U,	// DMFC2
    92291392U,	// DMFC2_OCTEON
    268451848U,	// DMFGC0
    268456025U,	// DMOD
    268459619U,	// DMODU
    286233U,	// DMT
    1376288822U,	// DMTC0
    8945795U,	// DMTC1
    1376289115U,	// DMTC2
    92291419U,	// DMTC2_OCTEON
    1376288800U,	// DMTGC0
    268457787U,	// DMUH
    268459656U,	// DMUHU
    268458253U,	// DMUL
    24082U,	// DMULT
    24320U,	// DMULTu
    268459700U,	// DMULU
    268458253U,	// DMUL_R6
    268455208U,	// DOTP_S_D
    268456752U,	// DOTP_S_H
    268460952U,	// DOTP_S_W
    268455675U,	// DOTP_U_D
    268457040U,	// DOTP_U_H
    268461410U,	// DOTP_U_W
    285232337U,	// DPADD_S_D
    285233881U,	// DPADD_S_H
    285238071U,	// DPADD_S_W
    285232804U,	// DPADD_U_D
    285234169U,	// DPADD_U_H
    285238539U,	// DPADD_U_W
    268457639U,	// DPAQX_SA_W_PH
    268457639U,	// DPAQX_SA_W_PH_MMR2
    268457722U,	// DPAQX_S_W_PH
    268457722U,	// DPAQX_S_W_PH_MMR2
    268460412U,	// DPAQ_SA_L_W
    268460412U,	// DPAQ_SA_L_W_MM
    268457681U,	// DPAQ_S_W_PH
    268457681U,	// DPAQ_S_W_PH_MM
    268457988U,	// DPAU_H_QBL
    268457988U,	// DPAU_H_QBL_MM
    268458574U,	// DPAU_H_QBR
    268458574U,	// DPAU_H_QBR_MM
    268457760U,	// DPAX_W_PH
    268457760U,	// DPAX_W_PH_MMR2
    268457629U,	// DPA_W_PH
    268457629U,	// DPA_W_PH_MMR2
    22984U,	// DPOP
    268457654U,	// DPSQX_SA_W_PH
    268457654U,	// DPSQX_SA_W_PH_MMR2
    268457736U,	// DPSQX_S_W_PH
    268457736U,	// DPSQX_S_W_PH_MMR2
    268460425U,	// DPSQ_SA_L_W
    268460425U,	// DPSQ_SA_L_W_MM
    268457709U,	// DPSQ_S_W_PH
    268457709U,	// DPSQ_S_W_PH_MM
    285232304U,	// DPSUB_S_D
    285233860U,	// DPSUB_S_H
    285238038U,	// DPSUB_S_W
    285232771U,	// DPSUB_U_D
    285234148U,	// DPSUB_U_H
    285238506U,	// DPSUB_U_W
    268458000U,	// DPSU_H_QBL
    268458000U,	// DPSU_H_QBL_MM
    268458586U,	// DPSU_H_QBR
    268458586U,	// DPSU_H_QBR_MM
    268457771U,	// DPSX_W_PH
    268457771U,	// DPSX_W_PH_MMR2
    268457750U,	// DPS_W_PH
    268457750U,	// DPS_W_PH_MMR2
    268458759U,	// DROTR
    268452117U,	// DROTR32
    268459927U,	// DROTRV
    21747U,	// DSBH
    26316U,	// DSDIV
    20529U,	// DSHD
    268458186U,	// DSLL
    268452087U,	// DSLL32
    3221248202U,	// DSLL64_32
    268459889U,	// DSLLV
    268452557U,	// DSRA
    268452069U,	// DSRA32
    268459868U,	// DSRAV
    268458214U,	// DSRL
    268452095U,	// DSRL32
    268459896U,	// DSRLV
    268453801U,	// DSUB
    268459584U,	// DSUBu
    26302U,	// DUDIV
    285227U,	// DVP
    282830U,	// DVPE
    285227U,	// DVP_MMR6
    26317U,	// DivRxRy16
    26303U,	// DivuRxRy16
    10385U,	// EHB
    10385U,	// EHB_MM
    10385U,	// EHB_MMR6
    284503U,	// EI
    284503U,	// EI_MM
    284503U,	// EI_MMR6
    286238U,	// EMT
    10492U,	// ERET
    10389U,	// ERETNC
    10389U,	// ERETNC_MMR6
    10492U,	// ERET_MM
    10492U,	// ERET_MMR6
    285232U,	// EVP
    282836U,	// EVPE
    285232U,	// EVP_MMR6
    268459574U,	// EXT
    268458533U,	// EXTP
    268458412U,	// EXTPDP
    268459911U,	// EXTPDPV
    268459911U,	// EXTPDPV_MM
    268458412U,	// EXTPDP_MM
    268459920U,	// EXTPV
    268459920U,	// EXTPV_MM
    268458533U,	// EXTP_MM
    268461145U,	// EXTRV_RS_W
    268461145U,	// EXTRV_RS_W_MM
    268460699U,	// EXTRV_R_W
    268460699U,	// EXTRV_R_W_MM
    268456841U,	// EXTRV_S_H
    268456841U,	// EXTRV_S_H_MM
    268461582U,	// EXTRV_W
    268461582U,	// EXTRV_W_MM
    268461134U,	// EXTR_RS_W
    268461134U,	// EXTR_RS_W_MM
    268460678U,	// EXTR_R_W
    268460678U,	// EXTR_R_W_MM
    268456772U,	// EXTR_S_H
    268456772U,	// EXTR_S_H_MM
    268460777U,	// EXTR_W
    268460777U,	// EXTR_W_MM
    268459489U,	// EXTS
    268452134U,	// EXTS32
    268459574U,	// EXT_MM
    268459574U,	// EXT_MMR6
    19872U,	// FABS_D32
    19872U,	// FABS_D32_MM
    19872U,	// FABS_D64
    19872U,	// FABS_D64_MM
    23738U,	// FABS_S
    23738U,	// FABS_S_MM
    268454225U,	// FADD_D
    268454226U,	// FADD_D32
    268454226U,	// FADD_D32_MM
    268454226U,	// FADD_D64
    268454226U,	// FADD_D64_MM
    268458825U,	// FADD_S
    268458825U,	// FADD_S_MM
    285236041U,	// FADD_S_MMR6
    268460047U,	// FADD_W
    268454459U,	// FCAF_D
    268460166U,	// FCAF_W
    268454898U,	// FCEQ_D
    268460605U,	// FCEQ_W
    19879U,	// FCLASS_D
    25701U,	// FCLASS_W
    268454303U,	// FCLE_D
    268460089U,	// FCLE_W
    268455389U,	// FCLT_D
    268461184U,	// FCLT_W
    3041227U,	// FCMP_D32
    3041227U,	// FCMP_D32_MM
    3041227U,	// FCMP_D64
    3303371U,	// FCMP_S32
    3303371U,	// FCMP_S32_MM
    268454399U,	// FCNE_D
    268460123U,	// FCNE_W
    268455008U,	// FCOR_D
    268460734U,	// FCOR_W
    268454954U,	// FCUEQ_D
    268460621U,	// FCUEQ_W
    268454369U,	// FCULE_D
    268460105U,	// FCULE_W
    268455445U,	// FCULT_D
    268461200U,	// FCULT_W
    268454415U,	// FCUNE_D
    268460139U,	// FCUNE_W
    268454828U,	// FCUN_D
    268460511U,	// FCUN_W
    268455821U,	// FDIV_D
    268455822U,	// FDIV_D32
    268455822U,	// FDIV_D32_MM
    268455822U,	// FDIV_D64
    268455822U,	// FDIV_D64_MM
    268459324U,	// FDIV_S
    268459324U,	// FDIV_S_MM
    285236540U,	// FDIV_S_MMR6
    268461566U,	// FDIV_W
    268456499U,	// FEXDO_H
    268460527U,	// FEXDO_W
    268454112U,	// FEXP2_D
    268459950U,	// FEXP2_W
    19296U,	// FEXUPL_D
    24997U,	// FEXUPL_W
    19568U,	// FEXUPR_D
    25294U,	// FEXUPR_W
    19810U,	// FFINT_S_D
    25594U,	// FFINT_S_W
    20289U,	// FFINT_U_D
    26024U,	// FFINT_U_W
    19306U,	// FFQL_D
    25007U,	// FFQL_W
    19578U,	// FFQR_D
    25304U,	// FFQR_W
    17422U,	// FILL_B
    19281U,	// FILL_D
    21004U,	// FILL_H
    24982U,	// FILL_W
    18647U,	// FLOG2_D
    24485U,	// FLOG2_W
    19245U,	// FLOOR_L_D64
    19245U,	// FLOOR_L_D_MMR6
    23572U,	// FLOOR_L_S
    23572U,	// FLOOR_L_S_MMR6
    20420U,	// FLOOR_W_D32
    20420U,	// FLOOR_W_D64
    20420U,	// FLOOR_W_D_MMR6
    20420U,	// FLOOR_W_MM
    23914U,	// FLOOR_W_S
    23914U,	// FLOOR_W_S_MM
    23914U,	// FLOOR_W_S_MMR6
    285231449U,	// FMADD_D
    285237271U,	// FMADD_W
    268454150U,	// FMAX_A_D
    268459988U,	// FMAX_A_W
    268455896U,	// FMAX_D
    268461591U,	// FMAX_W
    268454130U,	// FMIN_A_D
    268459968U,	// FMIN_A_W
    268454802U,	// FMIN_D
    268460503U,	// FMIN_W
    20381U,	// FMOV_D32
    20381U,	// FMOV_D32_MM
    20381U,	// FMOV_D64
    20381U,	// FMOV_D64_MM
    20381U,	// FMOV_D_MMR6
    23875U,	// FMOV_S
    23875U,	// FMOV_S_MM
    23875U,	// FMOV_S_MMR6
    285231407U,	// FMSUB_D
    285237229U,	// FMSUB_W
    268454786U,	// FMUL_D
    268454787U,	// FMUL_D32
    268454787U,	// FMUL_D32_MM
    268454787U,	// FMUL_D64
    268454787U,	// FMUL_D64_MM
    268459064U,	// FMUL_S
    268459064U,	// FMUL_S_MM
    285236280U,	// FMUL_S_MMR6
    268460487U,	// FMUL_W
    19073U,	// FNEG_D32
    19073U,	// FNEG_D32_MM
    19073U,	// FNEG_D64
    19073U,	// FNEG_D64_MM
    23527U,	// FNEG_S
    23527U,	// FNEG_S_MM
    23527U,	// FNEG_S_MMR6
    3523778514U,	// FORK
    19407U,	// FRCP_D
    25080U,	// FRCP_W
    20027U,	// FRINT_D
    25770U,	// FRINT_W
    20055U,	// FRSQRT_D
    25798U,	// FRSQRT_W
    268454478U,	// FSAF_D
    268460174U,	// FSAF_W
    268454926U,	// FSEQ_D
    268460613U,	// FSEQ_W
    268454341U,	// FSLE_D
    268460097U,	// FSLE_W
    268455417U,	// FSLT_D
    268461192U,	// FSLT_W
    268454407U,	// FSNE_D
    268460131U,	// FSNE_W
    268455016U,	// FSOR_D
    268460742U,	// FSOR_W
    20046U,	// FSQRT_D
    20047U,	// FSQRT_D32
    20047U,	// FSQRT_D32_MM
    20047U,	// FSQRT_D64
    20047U,	// FSQRT_D64_MM
    23852U,	// FSQRT_S
    23852U,	// FSQRT_S_MM
    25789U,	// FSQRT_W
    268454183U,	// FSUB_D
    268454184U,	// FSUB_D32
    268454184U,	// FSUB_D32_MM
    268454184U,	// FSUB_D64
    268454184U,	// FSUB_D64_MM
    268458807U,	// FSUB_S
    268458807U,	// FSUB_S_MM
    285236023U,	// FSUB_S_MMR6
    268460005U,	// FSUB_W
    268454975U,	// FSUEQ_D
    268460630U,	// FSUEQ_W
    268454390U,	// FSULE_D
    268460114U,	// FSULE_W
    268455466U,	// FSULT_D
    268461209U,	// FSULT_W
    268454424U,	// FSUNE_D
    268460148U,	// FSUNE_W
    268454847U,	// FSUN_D
    268460519U,	// FSUN_W
    19821U,	// FTINT_S_D
    25605U,	// FTINT_S_W
    20300U,	// FTINT_U_D
    26035U,	// FTINT_U_W
    268456576U,	// FTQ_H
    268460639U,	// FTQ_W
    19643U,	// FTRUNC_S_D
    25377U,	// FTRUNC_S_W
    20110U,	// FTRUNC_U_D
    25845U,	// FTRUNC_U_W
    284609U,	// GINVI
    284609U,	// GINVI_MMR6
    100687400U,	// GINVT
    100687400U,	// GINVT_MMR6
    268455111U,	// HADD_S_D
    268456655U,	// HADD_S_H
    268460845U,	// HADD_S_W
    268455578U,	// HADD_U_D
    268456943U,	// HADD_U_H
    268461313U,	// HADD_U_W
    268455078U,	// HSUB_S_D
    268456634U,	// HSUB_S_H
    268460812U,	// HSUB_S_W
    268455545U,	// HSUB_U_D
    268456922U,	// HSUB_U_H
    268461280U,	// HSUB_U_W
    366758U,	// HYPCALL
    366758U,	// HYPCALL_MM
    268453381U,	// ILVEV_B
    268455812U,	// ILVEV_D
    268457165U,	// ILVEV_H
    268461557U,	// ILVEV_W
    268452909U,	// ILVL_B
    268454794U,	// ILVL_D
    268456491U,	// ILVL_H
    268460495U,	// ILVL_W
    268452661U,	// ILVOD_B
    268454267U,	// ILVOD_D
    268456293U,	// ILVOD_H
    268460080U,	// ILVOD_W
    268452957U,	// ILVR_B
    268455051U,	// ILVR_D
    268456616U,	// ILVR_H
    268460785U,	// ILVR_W
    268459455U,	// INS
    112477484U,	// INSERT_B
    120868420U,	// INSERT_D
    129258432U,	// INSERT_H
    137651379U,	// INSERT_W
    16801695U,	// INSV
    146031422U,	// INSVE_B
    154421793U,	// INSVE_D
    162812270U,	// INSVE_H
    171204733U,	// INSVE_W
    16801695U,	// INSV_MM
    268459455U,	// INS_MM
    268459455U,	// INS_MMR6
    284616U,	// J
    284655U,	// JAL
    23259U,	// JALR
    285403U,	// JALR16_MM
    23259U,	// JALR64
    285403U,	// JALRC16_MMR6
    17977U,	// JALRC_HB_MMR6
    18516U,	// JALRC_MMR6
    279095U,	// JALRS16_MM
    24026U,	// JALRS_MM
    17994U,	// JALR_HB
    17994U,	// JALR_HB64
    23259U,	// JALR_MM
    286118U,	// JALS_MM
    288339U,	// JALX
    288339U,	// JALX_MM
    284655U,	// JAL_MM
    18395U,	// JIALC
    18395U,	// JIALC64
    18395U,	// JIALC_MMR6
    18384U,	// JIC
    18384U,	// JIC64
    18384U,	// JIC_MMR6
    285399U,	// JR
    279082U,	// JR16_MM
    285399U,	// JR64
    285204U,	// JRADDIUSP
    280655U,	// JRC16_MM
    278960U,	// JRC16_MMR6
    285192U,	// JRCADDIUSP_MMR6
    280131U,	// JR_HB
    280131U,	// JR_HB64
    280131U,	// JR_HB64_R6
    280131U,	// JR_HB_R6
    285399U,	// JR_MM
    284616U,	// J_MM
    3839983U,	// Jal16
    4102127U,	// JalB16
    10378U,	// JrRa16
    10370U,	// JrcRa16
    280655U,	// JrcRx16
    280660U,	// JumpLinkReg16
    25183827U,	// LB
    25183827U,	// LB64
    25186403U,	// LBE
    25186403U,	// LBE_MM
    25182791U,	// LBU16_MM
    3774899801U,	// LBUX
    3774899801U,	// LBUX_MM
    25189947U,	// LBU_MMR6
    25183827U,	// LB_MM
    25183827U,	// LB_MMR6
    25189947U,	// LBu
    25189947U,	// LBu64
    25186534U,	// LBuE
    25186534U,	// LBuE_MM
    25189947U,	// LBu_MM
    25186362U,	// LD
    25182294U,	// LDC1
    25182294U,	// LDC164
    25182294U,	// LDC1_D64_MMR6
    25182294U,	// LDC1_MM
    25182510U,	// LDC2
    25182510U,	// LDC2_MMR6
    25182510U,	// LDC2_R6
    25182595U,	// LDC3
    17248U,	// LDI_B
    19089U,	// LDI_D
    20880U,	// LDI_H
    24832U,	// LDI_W
    25188427U,	// LDL
    18462U,	// LDPC
    25189013U,	// LDR
    3774890134U,	// LDXC1
    3774890134U,	// LDXC164
    25183014U,	// LD_B
    25184620U,	// LD_D
    25186646U,	// LD_H
    25190433U,	// LD_W
    67133072U,	// LEA_ADDiu
    67133071U,	// LEA_ADDiu64
    67133072U,	// LEA_ADDiu_MM
    25187598U,	// LH
    25187598U,	// LH64
    25186455U,	// LHE
    25186455U,	// LHE_MM
    25182814U,	// LHU16_MM
    3774899790U,	// LHX
    3774899790U,	// LHX_MM
    25187598U,	// LH_MM
    25190019U,	// LHu
    25190019U,	// LHu64
    25186540U,	// LHuE
    25186540U,	// LHuE_MM
    25190019U,	// LHu_MM
    16878U,	// LI16_MM
    16878U,	// LI16_MMR6
    25188523U,	// LL
    25188523U,	// LL64
    25188523U,	// LL64_R6
    25186366U,	// LLD
    25186366U,	// LLD_R6
    25186478U,	// LLE
    25186478U,	// LLE_MM
    25188523U,	// LL_MM
    25188523U,	// LL_MMR6
    25188523U,	// LL_R6
    268452564U,	// LSA
    4061741780U,	// LSA_MMR6
    268452564U,	// LSA_R6
    92297148U,	// LUI_MMR6
    3774890148U,	// LUXC1
    3774890148U,	// LUXC164
    3774890148U,	// LUXC1_MM
    92297148U,	// LUi
    92297148U,	// LUi64
    92297148U,	// LUi_MM
    25191998U,	// LW
    25182821U,	// LW16_MM
    25191998U,	// LW64
    25182346U,	// LWC1
    25182346U,	// LWC1_MM
    25182562U,	// LWC2
    25182562U,	// LWC2_MMR6
    25182562U,	// LWC2_R6
    25182607U,	// LWC3
    25191998U,	// LWDSP
    25191998U,	// LWDSP_MM
    25186552U,	// LWE
    25186552U,	// LWE_MM
    25191998U,	// LWGP_MM
    25188641U,	// LWL
    25188641U,	// LWL64
    25186483U,	// LWLE
    25186483U,	// LWLE_MM
    25188641U,	// LWL_MM
    49675U,	// LWM16_MM
    49675U,	// LWM16_MMR6
    49415U,	// LWM32_MM
    18499U,	// LWPC
    18499U,	// LWPC_MMR6
    176183861U,	// LWP_MM
    25189147U,	// LWR
    25189147U,	// LWR64
    25186522U,	// LWRE
    25186522U,	// LWRE_MM
    25189147U,	// LWR_MM
    25191998U,	// LWSP_MM
    18492U,	// LWUPC
    25190166U,	// LWU_MM
    3774899807U,	// LWX
    3774890162U,	// LWXC1
    3774890162U,	// LWXC1_MM
    3774897639U,	// LWXS_MM
    3774899807U,	// LWX_MM
    25191998U,	// LW_MM
    25191998U,	// LW_MMR6
    25190166U,	// LWu
    25183827U,	// LbRxRyOffMemX16
    25189947U,	// LbuRxRyOffMemX16
    25187598U,	// LhRxRyOffMemX16
    25190019U,	// LhuRxRyOffMemX16
    2952812419U,	// LiRxImm16
    22393U,	// LiRxImmAlignX16
    22403U,	// LiRxImmX16
    2147509822U,	// LwRxPcTcp16
    26174U,	// LwRxPcTcpX16
    25191998U,	// LwRxRyOffMemX16
    25191998U,	// LwRxSpImmX16
    20523U,	// MADD
    285231711U,	// MADDF_D
    285231711U,	// MADDF_D_MMR6
    285236174U,	// MADDF_S
    285236174U,	// MADDF_S_MMR6
    285233764U,	// MADDR_Q_H
    285237800U,	// MADDR_Q_W
    24156U,	// MADDU
    268459612U,	// MADDU_DSP
    268459612U,	// MADDU_DSP_MM
    24156U,	// MADDU_MM
    285230579U,	// MADDV_B
    285233010U,	// MADDV_D
    285234363U,	// MADDV_H
    285238755U,	// MADDV_W
    268454234U,	// MADD_D32
    268454234U,	// MADD_D32_MM
    268454234U,	// MADD_D64
    268455979U,	// MADD_DSP
    268455979U,	// MADD_DSP_MM
    20523U,	// MADD_MM
    285233734U,	// MADD_Q_H
    285237770U,	// MADD_Q_W
    268458824U,	// MADD_S
    268458824U,	// MADD_S_MM
    268458094U,	// MAQ_SA_W_PHL
    268458094U,	// MAQ_SA_W_PHL_MM
    268458655U,	// MAQ_SA_W_PHR
    268458655U,	// MAQ_SA_W_PHR_MM
    268458122U,	// MAQ_S_W_PHL
    268458122U,	// MAQ_S_W_PHL_MM
    268458683U,	// MAQ_S_W_PHR
    268458683U,	// MAQ_S_W_PHR_MM
    268454175U,	// MAXA_D
    268454175U,	// MAXA_D_MMR6
    268458797U,	// MAXA_S
    268458797U,	// MAXA_S_MMR6
    268453032U,	// MAXI_S_B
    268455189U,	// MAXI_S_D
    268456733U,	// MAXI_S_H
    268460923U,	// MAXI_S_W
    268453247U,	// MAXI_U_B
    268455656U,	// MAXI_U_D
    268457021U,	// MAXI_U_H
    268461391U,	// MAXI_U_W
    268452613U,	// MAX_A_B
    268454151U,	// MAX_A_D
    268456245U,	// MAX_A_H
    268459989U,	// MAX_A_W
    268455897U,	// MAX_D
    268455897U,	// MAX_D_MMR6
    268459390U,	// MAX_S
    268453120U,	// MAX_S_B
    268455309U,	// MAX_S_D
    268456852U,	// MAX_S_H
    268459390U,	// MAX_S_MMR6
    268461104U,	// MAX_S_W
    268453335U,	// MAX_U_B
    268455776U,	// MAX_U_D
    268457119U,	// MAX_U_H
    268461511U,	// MAX_U_W
    268451842U,	// MFC0
    268451842U,	// MFC0_MMR6
    16489U,	// MFC1
    16489U,	// MFC1_D64
    16489U,	// MFC1_MM
    16489U,	// MFC1_MMR6
    268452161U,	// MFC2
    16705U,	// MFC2_MMR6
    268451849U,	// MFGC0
    268451849U,	// MFGC0_MM
    268451880U,	// MFHC0_MMR6
    16495U,	// MFHC1_D32
    16495U,	// MFHC1_D32_MM
    16495U,	// MFHC1_D64
    16495U,	// MFHC1_D64_MM
    16711U,	// MFHC2_MMR6
    268451856U,	// MFHGC0
    268451856U,	// MFHGC0_MM
    284525U,	// MFHI
    279014U,	// MFHI16_MM
    284525U,	// MFHI64
    22381U,	// MFHI_DSP
    22381U,	// MFHI_DSP_MM
    284525U,	// MFHI_MM
    285057U,	// MFLO
    279065U,	// MFLO16_MM
    285057U,	// MFLO64
    22913U,	// MFLO_DSP
    22913U,	// MFLO_DSP_MM
    285057U,	// MFLO_MM
    268458753U,	// MFTR
    268454160U,	// MINA_D
    268454160U,	// MINA_D_MMR6
    268458789U,	// MINA_S
    268458789U,	// MINA_S_MMR6
    268453012U,	// MINI_S_B
    268455169U,	// MINI_S_D
    268456713U,	// MINI_S_H
    268460903U,	// MINI_S_W
    268453227U,	// MINI_U_B
    268455636U,	// MINI_U_D
    268457001U,	// MINI_U_H
    268461371U,	// MINI_U_W
    268452594U,	// MIN_A_B
    268454131U,	// MIN_A_D
    268456226U,	// MIN_A_H
    268459969U,	// MIN_A_W
    268454803U,	// MIN_D
    268454803U,	// MIN_D_MMR6
    268459071U,	// MIN_S
    268453042U,	// MIN_S_B
    268455199U,	// MIN_S_D
    268456743U,	// MIN_S_H
    268459071U,	// MIN_S_MMR6
    268460943U,	// MIN_S_W
    268453257U,	// MIN_U_B
    268455666U,	// MIN_U_D
    268457031U,	// MIN_U_H
    268461401U,	// MIN_U_W
    268456026U,	// MOD
    268453799U,	// MODSUB
    268453799U,	// MODSUB_MM
    268459620U,	// MODU
    268459620U,	// MODU_MMR6
    268456026U,	// MOD_MMR6
    268452975U,	// MOD_S_B
    268455132U,	// MOD_S_D
    268456676U,	// MOD_S_H
    268460866U,	// MOD_S_W
    268453190U,	// MOD_U_B
    268455599U,	// MOD_U_D
    268456964U,	// MOD_U_H
    268461334U,	// MOD_U_W
    20722U,	// MOVE16_MM
    16848U,	// MOVE16_MMR6
    268458420U,	// MOVEP_MM
    268458420U,	// MOVEP_MMR6
    24354U,	// MOVE_V
    268454520U,	// MOVF_D32
    268454520U,	// MOVF_D32_MM
    268454520U,	// MOVF_D64
    268456206U,	// MOVF_I
    268456206U,	// MOVF_I64
    268456206U,	// MOVF_I_MM
    268458975U,	// MOVF_S
    268458975U,	// MOVF_S_MM
    268454855U,	// MOVN_I64_D64
    268458357U,	// MOVN_I64_I
    268458357U,	// MOVN_I64_I64
    268459107U,	// MOVN_I64_S
    268454855U,	// MOVN_I_D32
    268454855U,	// MOVN_I_D32_MM
    268454855U,	// MOVN_I_D64
    268458357U,	// MOVN_I_I
    268458357U,	// MOVN_I_I64
    268458357U,	// MOVN_I_MM
    268459107U,	// MOVN_I_S
    268459107U,	// MOVN_I_S_MM
    268455527U,	// MOVT_D32
    268455527U,	// MOVT_D32_MM
    268455527U,	// MOVT_D64
    268459567U,	// MOVT_I
    268459567U,	// MOVT_I64
    268459567U,	// MOVT_I_MM
    268459316U,	// MOVT_S
    268459316U,	// MOVT_S_MM
    268455937U,	// MOVZ_I64_D64
    268461740U,	// MOVZ_I64_I
    268461740U,	// MOVZ_I64_I64
    268459417U,	// MOVZ_I64_S
    268455937U,	// MOVZ_I_D32
    268455937U,	// MOVZ_I_D32_MM
    268455937U,	// MOVZ_I_D64
    268461740U,	// MOVZ_I_I
    268461740U,	// MOVZ_I_I64
    268461740U,	// MOVZ_I_MM
    268459417U,	// MOVZ_I_S
    268459417U,	// MOVZ_I_S_MM
    18351U,	// MSUB
    285231702U,	// MSUBF_D
    285231702U,	// MSUBF_D_MMR6
    285236165U,	// MSUBF_S
    285236165U,	// MSUBF_S_MMR6
    285233753U,	// MSUBR_Q_H
    285237789U,	// MSUBR_Q_W
    24135U,	// MSUBU
    268459591U,	// MSUBU_DSP
    268459591U,	// MSUBU_DSP_MM
    24135U,	// MSUBU_MM
    285230570U,	// MSUBV_B
    285233001U,	// MSUBV_D
    285234354U,	// MSUBV_H
    285238746U,	// MSUBV_W
    268454192U,	// MSUB_D32
    268454192U,	// MSUB_D32_MM
    268454192U,	// MSUB_D64
    268453807U,	// MSUB_DSP
    268453807U,	// MSUB_DSP_MM
    18351U,	// MSUB_MM
    285233724U,	// MSUB_Q_H
    285237760U,	// MSUB_Q_W
    268458806U,	// MSUB_S
    268458806U,	// MSUB_S_MM
    1376288823U,	// MTC0
    1376288823U,	// MTC0_MMR6
    8945796U,	// MTC1
    8945796U,	// MTC1_D64
    8945796U,	// MTC1_D64_MM
    8945796U,	// MTC1_MM
    8945796U,	// MTC1_MMR6
    1376289116U,	// MTC2
    8946012U,	// MTC2_MMR6
    1376288801U,	// MTGC0
    1376288801U,	// MTGC0_MM
    1376288815U,	// MTHC0_MMR6
    8994934U,	// MTHC1_D32
    8994934U,	// MTHC1_D32_MM
    8994934U,	// MTHC1_D64
    8994934U,	// MTHC1_D64_MM
    8945998U,	// MTHC2_MMR6
    1376288792U,	// MTHGC0
    1376288792U,	// MTHGC0_MM
    284531U,	// MTHI
    284531U,	// MTHI64
    8951667U,	// MTHI_DSP
    8951667U,	// MTHI_DSP_MM
    284531U,	// MTHI_MM
    8952251U,	// MTHLIP
    8952251U,	// MTHLIP_MM
    285070U,	// MTLO
    285070U,	// MTLO64
    8952206U,	// MTLO_DSP
    8952206U,	// MTLO_DSP_MM
    285070U,	// MTLO_MM
    278595U,	// MTM0
    278720U,	// MTM1
    278894U,	// MTM2
    278601U,	// MTP0
    278726U,	// MTP1
    278900U,	// MTP2
    34118414U,	// MTTR
    268457788U,	// MUH
    268459657U,	// MUHU
    268459657U,	// MUHU_MMR6
    268457788U,	// MUH_MMR6
    268458254U,	// MUL
    268458135U,	// MULEQ_S_W_PHL
    268458135U,	// MULEQ_S_W_PHL_MM
    268458696U,	// MULEQ_S_W_PHR
    268458696U,	// MULEQ_S_W_PHR_MM
    268458012U,	// MULEU_S_PH_QBL
    268458012U,	// MULEU_S_PH_QBL_MM
    268458598U,	// MULEU_S_PH_QBR
    268458598U,	// MULEU_S_PH_QBR_MM
    268457548U,	// MULQ_RS_PH
    268457548U,	// MULQ_RS_PH_MM
    268461123U,	// MULQ_RS_W
    268461123U,	// MULQ_RS_W_MMR2
    268457492U,	// MULQ_S_PH
    268457492U,	// MULQ_S_PH_MMR2
    268460982U,	// MULQ_S_W
    268460982U,	// MULQ_S_W_MMR2
    268456559U,	// MULR_Q_H
    268460595U,	// MULR_Q_W
    268457694U,	// MULSAQ_S_W_PH
    268457694U,	// MULSAQ_S_W_PH_MM
    268457669U,	// MULSA_W_PH
    268457669U,	// MULSA_W_PH_MMR2
    24083U,	// MULT
    268459777U,	// MULTU_DSP
    268459777U,	// MULTU_DSP_MM
    268459539U,	// MULT_DSP
    268459539U,	// MULT_DSP_MM
    24083U,	// MULT_MM
    24321U,	// MULTu
    24321U,	// MULTu_MM
    268459694U,	// MULU
    268459694U,	// MULU_MMR6
    268453390U,	// MULV_B
    268455829U,	// MULV_D
    268457174U,	// MULV_H
    268461574U,	// MULV_W
    268458254U,	// MUL_MM
    268458254U,	// MUL_MMR6
    268457365U,	// MUL_PH
    268457365U,	// MUL_PH_MMR2
    268456528U,	// MUL_Q_H
    268460564U,	// MUL_Q_W
    268458254U,	// MUL_R6
    268457460U,	// MUL_S_PH
    268457460U,	// MUL_S_PH_MMR2
    284525U,	// Mfhi16
    285057U,	// Mflo16
    20722U,	// Move32R16
    20722U,	// MoveR3216
    17173U,	// NLOC_B
    18753U,	// NLOC_D
    20805U,	// NLOC_H
    24566U,	// NLOC_W
    17181U,	// NLZC_B
    18761U,	// NLZC_D
    20813U,	// NLZC_H
    24574U,	// NLZC_W
    268454242U,	// NMADD_D32
    268454242U,	// NMADD_D32_MM
    268454242U,	// NMADD_D64
    268458823U,	// NMADD_S
    268458823U,	// NMADD_S_MM
    268454200U,	// NMSUB_D32
    268454200U,	// NMSUB_D32_MM
    268454200U,	// NMSUB_D64
    268458805U,	// NMSUB_S
    268458805U,	// NMSUB_S_MM
    268458721U,	// NOR
    268458721U,	// NOR64
    268452798U,	// NORI_B
    268458721U,	// NOR_MM
    268458721U,	// NOR_MMR6
    268459826U,	// NOR_V
    16960U,	// NOT16_MM
    16960U,	// NOT16_MMR6
    20756U,	// NegRxRy16
    24099U,	// NotRxRy16
    268458722U,	// OR
    10043953U,	// OR16_MM
    10043953U,	// OR16_MMR6
    268458722U,	// OR64
    268452799U,	// ORI_B
    268457887U,	// ORI_MMR6
    268458722U,	// OR_MM
    268458722U,	// OR_MMR6
    268459827U,	// OR_V
    268457887U,	// ORi
    268457887U,	// ORi64
    268457887U,	// ORi_MM
    16800482U,	// OrRxRxRy16
    268457354U,	// PACKRL_PH
    268457354U,	// PACKRL_PH_MM
    10396U,	// PAUSE
    10396U,	// PAUSE_MM
    10396U,	// PAUSE_MMR6
    268453372U,	// PCKEV_B
    268455803U,	// PCKEV_D
    268457156U,	// PCKEV_H
    268461548U,	// PCKEV_W
    268452652U,	// PCKOD_B
    268454258U,	// PCKOD_D
    268456284U,	// PCKOD_H
    268460071U,	// PCKOD_W
    17700U,	// PCNT_B
    20019U,	// PCNT_D
    21432U,	// PCNT_H
    25762U,	// PCNT_W
    268457318U,	// PICK_PH
    268457318U,	// PICK_PH_MM
    268453531U,	// PICK_QB
    268453531U,	// PICK_QB_MM
    268459466U,	// PLL_PS64
    268459474U,	// PLU_PS64
    22985U,	// POP
    22587U,	// PRECEQU_PH_QBL
    17046U,	// PRECEQU_PH_QBLA
    17046U,	// PRECEQU_PH_QBLA_MM
    22587U,	// PRECEQU_PH_QBL_MM
    23173U,	// PRECEQU_PH_QBR
    17084U,	// PRECEQU_PH_QBRA
    17084U,	// PRECEQU_PH_QBRA_MM
    23173U,	// PRECEQU_PH_QBR_MM
    22652U,	// PRECEQ_W_PHL
    22652U,	// PRECEQ_W_PHL_MM
    23213U,	// PRECEQ_W_PHR
    23213U,	// PRECEQ_W_PHR_MM
    22572U,	// PRECEU_PH_QBL
    17030U,	// PRECEU_PH_QBLA
    17030U,	// PRECEU_PH_QBLA_MM
    22572U,	// PRECEU_PH_QBL_MM
    23158U,	// PRECEU_PH_QBR
    17068U,	// PRECEU_PH_QBRA
    17068U,	// PRECEU_PH_QBRA_MM
    23158U,	// PRECEU_PH_QBR_MM
    268457270U,	// PRECRQU_S_QB_PH
    268457270U,	// PRECRQU_S_QB_PH_MM
    268460214U,	// PRECRQ_PH_W
    268460214U,	// PRECRQ_PH_W_MM
    268457243U,	// PRECRQ_QB_PH
    268457243U,	// PRECRQ_QB_PH_MM
    268460245U,	// PRECRQ_RS_PH_W
    268460245U,	// PRECRQ_RS_PH_W_MM
    268457257U,	// PRECR_QB_PH
    268457257U,	// PRECR_QB_PH_MMR2
    268460198U,	// PRECR_SRA_PH_W
    268460198U,	// PRECR_SRA_PH_W_MMR2
    268460227U,	// PRECR_SRA_R_PH_W
    268460227U,	// PRECR_SRA_R_PH_W_MMR2
    2756872U,	// PREF
    2756730U,	// PREFE
    2756730U,	// PREFE_MM
    186263111U,	// PREFX_MM
    2756872U,	// PREF_MM
    2756872U,	// PREF_MMR6
    2756872U,	// PREF_R6
    268456008U,	// PREPEND
    268456008U,	// PREPEND_MMR2
    18327U,	// RADDU_W_QB
    18327U,	// RADDU_W_QB_MM
    83909114U,	// RDDSP
    192961018U,	// RDDSP_MM
    268458772U,	// RDHWR
    268458772U,	// RDHWR64
    268458772U,	// RDHWR_MM
    268458772U,	// RDHWR_MMR6
    23281U,	// RDPGPR_MMR6
    19415U,	// RECIP_D32
    19415U,	// RECIP_D32_MM
    19415U,	// RECIP_D64
    19415U,	// RECIP_D64_MM
    23659U,	// RECIP_S
    23659U,	// RECIP_S_MM
    22153U,	// REPLV_PH
    22153U,	// REPLV_PH_MM
    18307U,	// REPLV_QB
    18307U,	// REPLV_QB_MM
    21880U,	// REPL_PH
    21880U,	// REPL_PH_MM
    201344685U,	// REPL_QB
    201344685U,	// REPL_QB_MM
    20028U,	// RINT_D
    20028U,	// RINT_D_MMR6
    23843U,	// RINT_S
    23843U,	// RINT_S_MMR6
    268458760U,	// ROTR
    268459928U,	// ROTRV
    268459928U,	// ROTRV_MM
    268458760U,	// ROTR_MM
    19224U,	// ROUND_L_D64
    19224U,	// ROUND_L_D_MMR6
    23551U,	// ROUND_L_S
    23551U,	// ROUND_L_S_MMR6
    20399U,	// ROUND_W_D32
    20399U,	// ROUND_W_D64
    20399U,	// ROUND_W_D_MMR6
    20399U,	// ROUND_W_MM
    23893U,	// ROUND_W_S
    23893U,	// ROUND_W_S_MM
    23893U,	// ROUND_W_S_MMR6
    20056U,	// RSQRT_D32
    20056U,	// RSQRT_D32_MM
    20056U,	// RSQRT_D64
    20056U,	// RSQRT_D64_MM
    23851U,	// RSQRT_S
    23851U,	// RSQRT_S_MM
    0U,	// Restore16
    0U,	// RestoreX16
    4211329U,	// SAA
    4214801U,	// SAAD
    268453081U,	// SAT_S_B
    268455248U,	// SAT_S_D
    268456802U,	// SAT_S_H
    268461032U,	// SAT_S_W
    268453308U,	// SAT_U_B
    268455727U,	// SAT_U_D
    268457092U,	// SAT_U_H
    268461462U,	// SAT_U_W
    25184163U,	// SB
    25182628U,	// SB16_MM
    25182628U,	// SB16_MMR6
    25184163U,	// SB64
    25186408U,	// SBE
    25186408U,	// SBE_MM
    25184163U,	// SB_MM
    25184163U,	// SB_MMR6
    4491358U,	// SC
    4491358U,	// SC64
    4491358U,	// SC64_R6
    4493344U,	// SCD
    4493344U,	// SCD_R6
    4493421U,	// SCE
    4493421U,	// SCE_MM
    4491358U,	// SC_MM
    4491358U,	// SC_MMR6
    4491358U,	// SC_R6
    25186399U,	// SD
    186789U,	// SDBBP
    115233U,	// SDBBP16_MM
    115233U,	// SDBBP16_MMR6
    367013U,	// SDBBP_MM
    186789U,	// SDBBP_MMR6
    186789U,	// SDBBP_R6
    25182300U,	// SDC1
    25182300U,	// SDC164
    25182300U,	// SDC1_D64_MMR6
    25182300U,	// SDC1_MM
    25182516U,	// SDC2
    25182516U,	// SDC2_MMR6
    25182516U,	// SDC2_R6
    25182601U,	// SDC3
    26317U,	// SDIV
    26317U,	// SDIV_MM
    25188432U,	// SDL
    25189018U,	// SDR
    3774890141U,	// SDXC1
    3774890141U,	// SDXC164
    17972U,	// SEB
    17972U,	// SEB64
    17972U,	// SEB_MM
    21768U,	// SEH
    21768U,	// SEH64
    21768U,	// SEH_MM
    268461713U,	// SELEQZ
    268461713U,	// SELEQZ64
    268455927U,	// SELEQZ_D
    268455927U,	// SELEQZ_D_MMR6
    268461713U,	// SELEQZ_MMR6
    268459407U,	// SELEQZ_S
    268459407U,	// SELEQZ_S_MMR6
    268461686U,	// SELNEZ
    268461686U,	// SELNEZ64
    268455910U,	// SELNEZ_D
    268455910U,	// SELNEZ_D_MMR6
    268461686U,	// SELNEZ_MMR6
    268459397U,	// SELNEZ_S
    268459397U,	// SELNEZ_S_MMR6
    285231937U,	// SEL_D
    285231937U,	// SEL_D_MMR6
    285236264U,	// SEL_S
    285236264U,	// SEL_S_MMR6
    268458564U,	// SEQ
    268457874U,	// SEQi
    25188151U,	// SH
    25182680U,	// SH16_MM
    25182680U,	// SH16_MMR6
    25188151U,	// SH64
    25186460U,	// SHE
    25186460U,	// SHE_MM
    268452680U,	// SHF_B
    268456312U,	// SHF_H
    268460183U,	// SHF_W
    22919U,	// SHILO
    24447U,	// SHILOV
    24447U,	// SHILOV_MM
    22919U,	// SHILO_MM
    268457599U,	// SHLLV_PH
    268457599U,	// SHLLV_PH_MM
    268453753U,	// SHLLV_QB
    268453753U,	// SHLLV_QB_MM
    268457536U,	// SHLLV_S_PH
    268457536U,	// SHLLV_S_PH_MM
    268461093U,	// SHLLV_S_W
    268461093U,	// SHLLV_S_W_MM
    268457327U,	// SHLL_PH
    268457327U,	// SHLL_PH_MM
    268453540U,	// SHLL_QB
    268453540U,	// SHLL_QB_MM
    268457449U,	// SHLL_S_PH
    268457449U,	// SHLL_S_PH_MM
    268460933U,	// SHLL_S_W
    268460933U,	// SHLL_S_W_MM
    268457589U,	// SHRAV_PH
    268457589U,	// SHRAV_PH_MM
    268453743U,	// SHRAV_QB
    268453743U,	// SHRAV_QB_MMR2
    268457437U,	// SHRAV_R_PH
    268457437U,	// SHRAV_R_PH_MM
    268453641U,	// SHRAV_R_QB
    268453641U,	// SHRAV_R_QB_MMR2
    268460688U,	// SHRAV_R_W
    268460688U,	// SHRAV_R_W_MM
    268457234U,	// SHRA_PH
    268457234U,	// SHRA_PH_MM
    268453463U,	// SHRA_QB
    268453463U,	// SHRA_QB_MMR2
    268457402U,	// SHRA_R_PH
    268457402U,	// SHRA_R_PH_MM
    268453606U,	// SHRA_R_QB
    268453606U,	// SHRA_R_QB_MMR2
    268460646U,	// SHRA_R_W
    268460646U,	// SHRA_R_W_MM
    268457619U,	// SHRLV_PH
    268457619U,	// SHRLV_PH_MMR2
    268453773U,	// SHRLV_QB
    268453773U,	// SHRLV_QB_MM
    268457345U,	// SHRL_PH
    268457345U,	// SHRL_PH_MMR2
    268453558U,	// SHRL_QB
    268453558U,	// SHRL_QB_MM
    25188151U,	// SH_MM
    25188151U,	// SH_MMR6
    200865U,	// SIGRIE
    200865U,	// SIGRIE_MMR6
    2701149023U,	// SLDI_B
    2701150864U,	// SLDI_D
    2701152655U,	// SLDI_H
    2701156607U,	// SLDI_W
    2701148965U,	// SLD_B
    2701150571U,	// SLD_D
    2701152597U,	// SLD_H
    2701156384U,	// SLD_W
    268458187U,	// SLL
    268452349U,	// SLL16_MM
    268452349U,	// SLL16_MMR6
    268458187U,	// SLL64_32
    268458187U,	// SLL64_64
    268452737U,	// SLLI_B
    268454561U,	// SLLI_D
    268456352U,	// SLLI_H
    268460304U,	// SLLI_W
    268459890U,	// SLLV
    268459890U,	// SLLV_MM
    268452886U,	// SLL_B
    268454745U,	// SLL_D
    268456468U,	// SLL_H
    268458187U,	// SLL_MM
    268458187U,	// SLL_MMR6
    268460446U,	// SLL_W
    268459528U,	// SLT
    268459528U,	// SLT64
    268459528U,	// SLT_MM
    268457898U,	// SLTi
    268457898U,	// SLTi64
    268457898U,	// SLTi_MM
    268459678U,	// SLTiu
    268459678U,	// SLTiu64
    268459678U,	// SLTiu_MM
    268459764U,	// SLTu
    268459764U,	// SLTu64
    268459764U,	// SLTu_MM
    268456132U,	// SNE
    268457819U,	// SNEi
    2684371928U,	// SPLATI_B
    2684373736U,	// SPLATI_D
    2684375527U,	// SPLATI_H
    2684379479U,	// SPLATI_W
    2684372243U,	// SPLAT_B
    2684374449U,	// SPLAT_D
    2684375975U,	// SPLAT_H
    2684380271U,	// SPLAT_W
    268452558U,	// SRA
    268452695U,	// SRAI_B
    268454536U,	// SRAI_D
    268456327U,	// SRAI_H
    268460279U,	// SRAI_W
    268452771U,	// SRARI_B
    268454595U,	// SRARI_D
    268456386U,	// SRARI_H
    268460338U,	// SRARI_W
    268452924U,	// SRAR_B
    268454984U,	// SRAR_D
    268456583U,	// SRAR_H
    268460710U,	// SRAR_W
    268459869U,	// SRAV
    268459869U,	// SRAV_MM
    268452622U,	// SRA_B
    268454168U,	// SRA_D
    268456254U,	// SRA_H
    268452558U,	// SRA_MM
    268459998U,	// SRA_W
    268458215U,	// SRL
    268452356U,	// SRL16_MM
    268452356U,	// SRL16_MMR6
    268452745U,	// SRLI_B
    268454569U,	// SRLI_D
    268456360U,	// SRLI_H
    268460312U,	// SRLI_W
    268452789U,	// SRLRI_B
    268454613U,	// SRLRI_D
    268456404U,	// SRLRI_H
    268460356U,	// SRLRI_W
    268452940U,	// SRLR_B
    268455000U,	// SRLR_D
    268456599U,	// SRLR_H
    268460726U,	// SRLR_W
    268459897U,	// SRLV
    268459897U,	// SRLV_MM
    268452893U,	// SRL_B
    268454770U,	// SRL_D
    268456475U,	// SRL_H
    268458215U,	// SRL_MM
    268460471U,	// SRL_W
    10461U,	// SSNOP
    10461U,	// SSNOP_MM
    10461U,	// SSNOP_MMR6
    25183542U,	// ST_B
    25185889U,	// ST_D
    25187274U,	// ST_H
    25191632U,	// ST_W
    268453802U,	// SUB
    268457298U,	// SUBQH_PH
    268457298U,	// SUBQH_PH_MMR2
    268457413U,	// SUBQH_R_PH
    268457413U,	// SUBQH_R_PH_MMR2
    268460656U,	// SUBQH_R_W
    268460656U,	// SUBQH_R_W_MMR2
    268460261U,	// SUBQH_W
    268460261U,	// SUBQH_W_MMR2
    268457373U,	// SUBQ_PH
    268457373U,	// SUBQ_PH_MM
    268457470U,	// SUBQ_S_PH
    268457470U,	// SUBQ_S_PH_MM
    268460962U,	// SUBQ_S_W
    268460962U,	// SUBQ_S_W_MM
    268453296U,	// SUBSUS_U_B
    268455715U,	// SUBSUS_U_D
    268457080U,	// SUBSUS_U_H
    268461450U,	// SUBSUS_U_W
    268453099U,	// SUBSUU_S_B
    268455288U,	// SUBSUU_S_D
    268456820U,	// SUBSUU_S_H
    268461072U,	// SUBSUU_S_W
    268453061U,	// SUBS_S_B
    268455228U,	// SUBS_S_D
    268456782U,	// SUBS_S_H
    268461012U,	// SUBS_S_W
    268453276U,	// SUBS_U_B
    268455695U,	// SUBS_U_D
    268457060U,	// SUBS_U_H
    268461430U,	// SUBS_U_W
    268452430U,	// SUBU16_MM
    268452430U,	// SUBU16_MMR6
    268453511U,	// SUBUH_QB
    268453511U,	// SUBUH_QB_MMR2
    268453617U,	// SUBUH_R_QB
    268453617U,	// SUBUH_R_QB_MMR2
    268459585U,	// SUBU_MMR6
    268457571U,	// SUBU_PH
    268457571U,	// SUBU_PH_MMR2
    268453725U,	// SUBU_QB
    268453725U,	// SUBU_QB_MM
    268457514U,	// SUBU_S_PH
    268457514U,	// SUBU_S_PH_MMR2
    268453664U,	// SUBU_S_QB
    268453664U,	// SUBU_S_QB_MM
    268452843U,	// SUBVI_B
    268454651U,	// SUBVI_D
    268456442U,	// SUBVI_H
    268460394U,	// SUBVI_W
    268453355U,	// SUBV_B
    268455786U,	// SUBV_D
    268457139U,	// SUBV_H
    268461531U,	// SUBV_W
    268453802U,	// SUB_MM
    268453802U,	// SUB_MMR6
    268459585U,	// SUBu
    268459585U,	// SUBu_MM
    3774890155U,	// SUXC1
    3774890155U,	// SUXC164
    3774890155U,	// SUXC1_MM
    25192003U,	// SW
    25182827U,	// SW16_MM
    25182827U,	// SW16_MMR6
    25192003U,	// SW64
    25182352U,	// SWC1
    25182352U,	// SWC1_MM
    25182568U,	// SWC2
    25182568U,	// SWC2_MMR6
    25182568U,	// SWC2_R6
    25182613U,	// SWC3
    25192003U,	// SWDSP
    25192003U,	// SWDSP_MM
    25186557U,	// SWE
    25186557U,	// SWE_MM
    25188646U,	// SWL
    25188646U,	// SWL64
    25186489U,	// SWLE
    25186489U,	// SWLE_MM
    25188646U,	// SWL_MM
    49682U,	// SWM16_MM
    49682U,	// SWM16_MMR6
    49422U,	// SWM32_MM
    176183866U,	// SWP_MM
    25189152U,	// SWR
    25189152U,	// SWR64
    25186528U,	// SWRE
    25186528U,	// SWRE_MM
    25189152U,	// SWR_MM
    25188895U,	// SWSP_MM
    25192003U,	// SWSP_MMR6
    3774890169U,	// SWXC1
    3774890169U,	// SWXC1_MM
    25192003U,	// SW_MM
    25192003U,	// SW_MMR6
    223007U,	// SYNC
    235329U,	// SYNCI
    235329U,	// SYNCI_MM
    235329U,	// SYNCI_MMR6
    223007U,	// SYNC_MM
    215064U,	// SYNC_MMR6
    186543U,	// SYSCALL
    366767U,	// SYSCALL_MM
    0U,	// Save16
    0U,	// SaveX16
    25184163U,	// SbRxRyOffMemX16
    288434U,	// SebRx16
    288440U,	// SehRx16
    25188151U,	// ShRxRyOffMemX16
    268458187U,	// SllX16
    16801650U,	// SllvRxRy16
    24072U,	// SltRxRy16
    2952812458U,	// SltiRxImm16
    22442U,	// SltiRxImmX16
    2952814238U,	// SltiuRxImm16
    24222U,	// SltiuRxImmX16
    24308U,	// SltuRxRy16
    268452558U,	// SraX16
    16801629U,	// SravRxRy16
    268458215U,	// SrlX16
    16801657U,	// SrlvRxRy16
    268459585U,	// SubuRxRyRz16
    25192003U,	// SwRxRyOffMemX16
    25192003U,	// SwRxSpImmX16
    268458569U,	// TEQ
    22424U,	// TEQI
    22424U,	// TEQI_MM
    268458569U,	// TEQ_MM
    268456075U,	// TGE
    22357U,	// TGEI
    24215U,	// TGEIU
    24215U,	// TGEIU_MM
    22357U,	// TGEI_MM
    268459638U,	// TGEU
    268459638U,	// TGEU_MM
    268456075U,	// TGE_MM
    10509U,	// TLBGINV
    10410U,	// TLBGINVF
    10410U,	// TLBGINVF_MM
    10509U,	// TLBGINV_MM
    10455U,	// TLBGP
    10455U,	// TLBGP_MM
    10472U,	// TLBGR
    10472U,	// TLBGR_MM
    10425U,	// TLBGWI
    10425U,	// TLBGWI_MM
    10484U,	// TLBGWR
    10484U,	// TLBGWR_MM
    10502U,	// TLBINV
    10402U,	// TLBINVF
    10402U,	// TLBINVF_MMR6
    10502U,	// TLBINV_MMR6
    10450U,	// TLBP
    10450U,	// TLBP_MM
    10467U,	// TLBR
    10467U,	// TLBR_MM
    10419U,	// TLBWI
    10419U,	// TLBWI_MM
    10478U,	// TLBWR
    10478U,	// TLBWR_MM
    268459533U,	// TLT
    22448U,	// TLTI
    24229U,	// TLTIU_MM
    22448U,	// TLTI_MM
    268459770U,	// TLTU
    268459770U,	// TLTU_MM
    268459533U,	// TLT_MM
    268456137U,	// TNE
    22369U,	// TNEI
    22369U,	// TNEI_MM
    268456137U,	// TNE_MM
    19213U,	// TRUNC_L_D64
    19213U,	// TRUNC_L_D_MMR6
    23540U,	// TRUNC_L_S
    23540U,	// TRUNC_L_S_MMR6
    20388U,	// TRUNC_W_D32
    20388U,	// TRUNC_W_D64
    20388U,	// TRUNC_W_D_MMR6
    20388U,	// TRUNC_W_MM
    23882U,	// TRUNC_W_S
    23882U,	// TRUNC_W_S_MM
    23882U,	// TRUNC_W_S_MMR6
    24229U,	// TTLTIU
    26303U,	// UDIV
    26303U,	// UDIV_MM
    268459692U,	// V3MULU
    268451901U,	// VMM0
    268459707U,	// VMULU
    285229895U,	// VSHF_B
    285231720U,	// VSHF_D
    285233527U,	// VSHF_H
    285237398U,	// VSHF_W
    10497U,	// WAIT
    368125U,	// WAIT_MM
    368125U,	// WAIT_MMR6
    83909121U,	// WRDSP
    192961025U,	// WRDSP_MM
    23289U,	// WRPGPR_MMR6
    21753U,	// WSBH
    21753U,	// WSBH_MM
    21753U,	// WSBH_MMR6
    268458732U,	// XOR
    10043952U,	// XOR16_MM
    10043952U,	// XOR16_MMR6
    268458732U,	// XOR64
    268452806U,	// XORI_B
    268457886U,	// XORI_MMR6
    268458732U,	// XOR_MM
    268458732U,	// XOR_MMR6
    268459833U,	// XOR_V
    268457886U,	// XORi
    268457886U,	// XORi64
    268457886U,	// XORi_MM
    16800492U,	// XorRxRxRy16
    20535U,	// YIELD
  };

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTR_MASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// ABSMacro
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND_V_D_PSEUDO
    0U,	// AND_V_H_PSEUDO
    0U,	// AND_V_W_PSEUDO
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I16_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I32_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I64_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_CMP_SWAP_I8_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I16_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I32_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I64_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_ADD_I8_POSTRA
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I16_POSTRA
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I32_POSTRA
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I64_POSTRA
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_AND_I8_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I16_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I32_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I64_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MAX_I8_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I16_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I32_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I64_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_MIN_I8_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I16_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I32_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I64_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_NAND_I8_POSTRA
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I16_POSTRA
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I32_POSTRA
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I64_POSTRA
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_OR_I8_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I16_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I32_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I64_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_SUB_I8_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I16_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I32_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I64_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMAX_I8_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I16_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I32_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I64_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_UMIN_I8_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I16_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I32_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I64_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_LOAD_XOR_I8_POSTRA
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I16_POSTRA
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I32_POSTRA
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I64_POSTRA
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATOMIC_SWAP_I8_POSTRA
    0U,	// B
    0U,	// BAL_BR
    0U,	// BAL_BR_MM
    0U,	// BEQLImmMacro
    0U,	// BGE
    0U,	// BGEImmMacro
    0U,	// BGEL
    0U,	// BGELImmMacro
    0U,	// BGEU
    0U,	// BGEUImmMacro
    0U,	// BGEUL
    0U,	// BGEULImmMacro
    0U,	// BGT
    0U,	// BGTImmMacro
    0U,	// BGTL
    0U,	// BGTLImmMacro
    0U,	// BGTU
    0U,	// BGTUImmMacro
    0U,	// BGTUL
    0U,	// BGTULImmMacro
    0U,	// BLE
    0U,	// BLEImmMacro
    0U,	// BLEL
    0U,	// BLELImmMacro
    0U,	// BLEU
    0U,	// BLEUImmMacro
    0U,	// BLEUL
    0U,	// BLEULImmMacro
    0U,	// BLT
    0U,	// BLTImmMacro
    0U,	// BLTL
    0U,	// BLTLImmMacro
    0U,	// BLTU
    0U,	// BLTUImmMacro
    0U,	// BLTUL
    0U,	// BLTULImmMacro
    0U,	// BNELImmMacro
    0U,	// BPOSGE32_PSEUDO
    0U,	// BSEL_D_PSEUDO
    0U,	// BSEL_FD_PSEUDO
    0U,	// BSEL_FW_PSEUDO
    0U,	// BSEL_H_PSEUDO
    0U,	// BSEL_W_PSEUDO
    0U,	// B_MM
    0U,	// B_MMR6_Pseudo
    0U,	// B_MM_Pseudo
    0U,	// BeqImm
    0U,	// BneImm
    0U,	// BteqzT8CmpX16
    0U,	// BteqzT8CmpiX16
    0U,	// BteqzT8SltX16
    0U,	// BteqzT8SltiX16
    0U,	// BteqzT8SltiuX16
    0U,	// BteqzT8SltuX16
    0U,	// BtnezT8CmpX16
    0U,	// BtnezT8CmpiX16
    0U,	// BtnezT8SltX16
    0U,	// BtnezT8SltiX16
    0U,	// BtnezT8SltiuX16
    0U,	// BtnezT8SltuX16
    0U,	// BuildPairF64
    0U,	// BuildPairF64_64
    0U,	// CFTC1
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_FD_PSEUDO
    0U,	// COPY_FW_PSEUDO
    0U,	// CTTC1
    0U,	// Constant32
    0U,	// DMULImmMacro
    0U,	// DMULMacro
    0U,	// DMULOMacro
    0U,	// DMULOUMacro
    0U,	// DROL
    0U,	// DROLImm
    0U,	// DROR
    0U,	// DRORImm
    0U,	// DSDivIMacro
    0U,	// DSDivMacro
    0U,	// DSRemIMacro
    0U,	// DSRemMacro
    0U,	// DUDivIMacro
    0U,	// DUDivMacro
    0U,	// DURemIMacro
    0U,	// DURemMacro
    0U,	// ERet
    0U,	// ExtractElementF64
    0U,	// ExtractElementF64_64
    0U,	// FABS_D
    0U,	// FABS_W
    0U,	// FEXP2_D_1_PSEUDO
    0U,	// FEXP2_W_1_PSEUDO
    0U,	// FILL_FD_PSEUDO
    0U,	// FILL_FW_PSEUDO
    0U,	// GotPrologue16
    0U,	// INSERT_B_VIDX64_PSEUDO
    0U,	// INSERT_B_VIDX_PSEUDO
    0U,	// INSERT_D_VIDX64_PSEUDO
    0U,	// INSERT_D_VIDX_PSEUDO
    0U,	// INSERT_FD_PSEUDO
    0U,	// INSERT_FD_VIDX64_PSEUDO
    0U,	// INSERT_FD_VIDX_PSEUDO
    0U,	// INSERT_FW_PSEUDO
    0U,	// INSERT_FW_VIDX64_PSEUDO
    0U,	// INSERT_FW_VIDX_PSEUDO
    0U,	// INSERT_H_VIDX64_PSEUDO
    0U,	// INSERT_H_VIDX_PSEUDO
    0U,	// INSERT_W_VIDX64_PSEUDO
    0U,	// INSERT_W_VIDX_PSEUDO
    0U,	// JALR64Pseudo
    0U,	// JALRHB64Pseudo
    0U,	// JALRHBPseudo
    0U,	// JALRPseudo
    0U,	// JAL_MMR6
    0U,	// JalOneReg
    0U,	// JalTwoReg
    0U,	// LDMacro
    0U,	// LD_F16
    0U,	// LOAD_ACC128
    0U,	// LOAD_ACC64
    0U,	// LOAD_ACC64DSP
    0U,	// LOAD_CCOND_DSP
    0U,	// LONG_BRANCH_ADDiu
    0U,	// LONG_BRANCH_ADDiu2Op
    0U,	// LONG_BRANCH_DADDiu
    0U,	// LONG_BRANCH_DADDiu2Op
    0U,	// LONG_BRANCH_LUi
    0U,	// LONG_BRANCH_LUi2Op
    0U,	// LONG_BRANCH_LUi2Op_64
    0U,	// LWM_MM
    0U,	// LoadAddrImm32
    0U,	// LoadAddrImm64
    0U,	// LoadAddrReg32
    0U,	// LoadAddrReg64
    0U,	// LoadImm32
    0U,	// LoadImm64
    0U,	// LoadImmDoubleFGR
    0U,	// LoadImmDoubleFGR_32
    0U,	// LoadImmDoubleGPR
    0U,	// LoadImmSingleFGR
    0U,	// LoadImmSingleGPR
    0U,	// LwConstant32
    0U,	// MFTACX
    2U,	// MFTC0
    0U,	// MFTC1
    0U,	// MFTDSP
    0U,	// MFTGPR
    0U,	// MFTHC1
    0U,	// MFTHI
    0U,	// MFTLO
    0U,	// MIPSeh_return32
    0U,	// MIPSeh_return64
    0U,	// MSA_FP_EXTEND_D_PSEUDO
    0U,	// MSA_FP_EXTEND_W_PSEUDO
    0U,	// MSA_FP_ROUND_D_PSEUDO
    0U,	// MSA_FP_ROUND_W_PSEUDO
    0U,	// MTTACX
    0U,	// MTTC0
    0U,	// MTTC1
    0U,	// MTTDSP
    0U,	// MTTGPR
    0U,	// MTTHC1
    0U,	// MTTHI
    0U,	// MTTLO
    0U,	// MULImmMacro
    0U,	// MULOMacro
    0U,	// MULOUMacro
    0U,	// MultRxRy16
    0U,	// MultRxRyRz16
    0U,	// MultuRxRy16
    0U,	// MultuRxRyRz16
    0U,	// NOP
    0U,	// NORImm
    0U,	// NORImm64
    0U,	// NOR_V_D_PSEUDO
    0U,	// NOR_V_H_PSEUDO
    0U,	// NOR_V_W_PSEUDO
    0U,	// OR_V_D_PSEUDO
    0U,	// OR_V_H_PSEUDO
    0U,	// OR_V_W_PSEUDO
    0U,	// PseudoCMPU_EQ_QB
    0U,	// PseudoCMPU_LE_QB
    0U,	// PseudoCMPU_LT_QB
    0U,	// PseudoCMP_EQ_PH
    0U,	// PseudoCMP_LE_PH
    0U,	// PseudoCMP_LT_PH
    0U,	// PseudoCVT_D32_W
    0U,	// PseudoCVT_D64_L
    0U,	// PseudoCVT_D64_W
    0U,	// PseudoCVT_S_L
    0U,	// PseudoCVT_S_W
    0U,	// PseudoDMULT
    0U,	// PseudoDMULTu
    0U,	// PseudoDSDIV
    0U,	// PseudoDUDIV
    0U,	// PseudoD_SELECT_I
    0U,	// PseudoD_SELECT_I64
    0U,	// PseudoIndirectBranch
    0U,	// PseudoIndirectBranch64
    0U,	// PseudoIndirectBranch64R6
    0U,	// PseudoIndirectBranchR6
    0U,	// PseudoIndirectBranch_MM
    0U,	// PseudoIndirectBranch_MMR6
    0U,	// PseudoIndirectHazardBranch
    0U,	// PseudoIndirectHazardBranch64
    0U,	// PseudoIndrectHazardBranch64R6
    0U,	// PseudoIndrectHazardBranchR6
    0U,	// PseudoMADD
    0U,	// PseudoMADDU
    0U,	// PseudoMADDU_MM
    0U,	// PseudoMADD_MM
    0U,	// PseudoMFHI
    0U,	// PseudoMFHI64
    0U,	// PseudoMFHI_MM
    0U,	// PseudoMFLO
    0U,	// PseudoMFLO64
    0U,	// PseudoMFLO_MM
    0U,	// PseudoMSUB
    0U,	// PseudoMSUBU
    0U,	// PseudoMSUBU_MM
    0U,	// PseudoMSUB_MM
    0U,	// PseudoMTLOHI
    0U,	// PseudoMTLOHI64
    0U,	// PseudoMTLOHI_DSP
    0U,	// PseudoMTLOHI_MM
    0U,	// PseudoMULT
    0U,	// PseudoMULT_MM
    0U,	// PseudoMULTu
    0U,	// PseudoMULTu_MM
    0U,	// PseudoPICK_PH
    0U,	// PseudoPICK_QB
    0U,	// PseudoReturn
    0U,	// PseudoReturn64
    0U,	// PseudoSDIV
    0U,	// PseudoSELECTFP_F_D32
    0U,	// PseudoSELECTFP_F_D64
    0U,	// PseudoSELECTFP_F_I
    0U,	// PseudoSELECTFP_F_I64
    0U,	// PseudoSELECTFP_F_S
    0U,	// PseudoSELECTFP_T_D32
    0U,	// PseudoSELECTFP_T_D64
    0U,	// PseudoSELECTFP_T_I
    0U,	// PseudoSELECTFP_T_I64
    0U,	// PseudoSELECTFP_T_S
    0U,	// PseudoSELECT_D32
    0U,	// PseudoSELECT_D64
    0U,	// PseudoSELECT_I
    0U,	// PseudoSELECT_I64
    0U,	// PseudoSELECT_S
    0U,	// PseudoTRUNC_W_D
    0U,	// PseudoTRUNC_W_D32
    0U,	// PseudoTRUNC_W_S
    0U,	// PseudoUDIV
    0U,	// ROL
    0U,	// ROLImm
    0U,	// ROR
    0U,	// RORImm
    0U,	// RetRA
    0U,	// RetRA16
    0U,	// SDC1_M1
    0U,	// SDIV_MM_Pseudo
    0U,	// SDMacro
    0U,	// SDivIMacro
    0U,	// SDivMacro
    0U,	// SEQIMacro
    0U,	// SEQMacro
    0U,	// SGE
    0U,	// SGEImm
    0U,	// SGEImm64
    0U,	// SGEU
    0U,	// SGEUImm
    0U,	// SGEUImm64
    0U,	// SGTImm
    0U,	// SGTImm64
    0U,	// SGTUImm
    0U,	// SGTUImm64
    0U,	// SLTImm64
    0U,	// SLTUImm64
    0U,	// SNZ_B_PSEUDO
    0U,	// SNZ_D_PSEUDO
    0U,	// SNZ_H_PSEUDO
    0U,	// SNZ_V_PSEUDO
    0U,	// SNZ_W_PSEUDO
    0U,	// SRemIMacro
    0U,	// SRemMacro
    0U,	// STORE_ACC128
    0U,	// STORE_ACC64
    0U,	// STORE_ACC64DSP
    0U,	// STORE_CCOND_DSP
    0U,	// ST_F16
    0U,	// SWM_MM
    0U,	// SZ_B_PSEUDO
    0U,	// SZ_D_PSEUDO
    0U,	// SZ_H_PSEUDO
    0U,	// SZ_V_PSEUDO
    0U,	// SZ_W_PSEUDO
    0U,	// SaaAddr
    0U,	// SaadAddr
    0U,	// SelBeqZ
    0U,	// SelBneZ
    0U,	// SelTBteqZCmp
    0U,	// SelTBteqZCmpi
    0U,	// SelTBteqZSlt
    0U,	// SelTBteqZSlti
    0U,	// SelTBteqZSltiu
    0U,	// SelTBteqZSltu
    0U,	// SelTBtneZCmp
    0U,	// SelTBtneZCmpi
    0U,	// SelTBtneZSlt
    0U,	// SelTBtneZSlti
    0U,	// SelTBtneZSltiu
    0U,	// SelTBtneZSltu
    0U,	// SltCCRxRy16
    0U,	// SltiCCRxImmX16
    0U,	// SltiuCCRxImmX16
    0U,	// SltuCCRxRy16
    0U,	// SltuRxRyRz16
    0U,	// TAILCALL
    0U,	// TAILCALL64R6REG
    0U,	// TAILCALLHB64R6REG
    0U,	// TAILCALLHBR6REG
    0U,	// TAILCALLR6REG
    0U,	// TAILCALLREG
    0U,	// TAILCALLREG64
    0U,	// TAILCALLREGHB
    0U,	// TAILCALLREGHB64
    0U,	// TAILCALLREG_MM
    0U,	// TAILCALLREG_MMR6
    0U,	// TAILCALL_MM
    0U,	// TAILCALL_MMR6
    0U,	// TRAP
    0U,	// TRAP_MM
    0U,	// UDIV_MM_Pseudo
    0U,	// UDivIMacro
    0U,	// UDivMacro
    0U,	// URemIMacro
    0U,	// URemMacro
    0U,	// Ulh
    0U,	// Ulhu
    0U,	// Ulw
    0U,	// Ush
    0U,	// Usw
    0U,	// XOR_V_D_PSEUDO
    0U,	// XOR_V_H_PSEUDO
    0U,	// XOR_V_W_PSEUDO
    0U,	// ABSQ_S_PH
    0U,	// ABSQ_S_PH_MM
    0U,	// ABSQ_S_QB
    0U,	// ABSQ_S_QB_MMR2
    0U,	// ABSQ_S_W
    0U,	// ABSQ_S_W_MM
    0U,	// ADD
    0U,	// ADDIUPC
    0U,	// ADDIUPC_MM
    0U,	// ADDIUPC_MMR6
    0U,	// ADDIUR1SP_MM
    0U,	// ADDIUR2_MM
    0U,	// ADDIUS5_MM
    0U,	// ADDIUSP_MM
    0U,	// ADDIU_MMR6
    0U,	// ADDQH_PH
    0U,	// ADDQH_PH_MMR2
    0U,	// ADDQH_R_PH
    0U,	// ADDQH_R_PH_MMR2
    0U,	// ADDQH_R_W
    0U,	// ADDQH_R_W_MMR2
    0U,	// ADDQH_W
    0U,	// ADDQH_W_MMR2
    0U,	// ADDQ_PH
    0U,	// ADDQ_PH_MM
    0U,	// ADDQ_S_PH
    0U,	// ADDQ_S_PH_MM
    0U,	// ADDQ_S_W
    0U,	// ADDQ_S_W_MM
    0U,	// ADDSC
    0U,	// ADDSC_MM
    0U,	// ADDS_A_B
    0U,	// ADDS_A_D
    0U,	// ADDS_A_H
    0U,	// ADDS_A_W
    0U,	// ADDS_S_B
    0U,	// ADDS_S_D
    0U,	// ADDS_S_H
    0U,	// ADDS_S_W
    0U,	// ADDS_U_B
    0U,	// ADDS_U_D
    0U,	// ADDS_U_H
    0U,	// ADDS_U_W
    0U,	// ADDU16_MM
    0U,	// ADDU16_MMR6
    0U,	// ADDUH_QB
    0U,	// ADDUH_QB_MMR2
    0U,	// ADDUH_R_QB
    0U,	// ADDUH_R_QB_MMR2
    0U,	// ADDU_MMR6
    0U,	// ADDU_PH
    0U,	// ADDU_PH_MMR2
    0U,	// ADDU_QB
    0U,	// ADDU_QB_MM
    0U,	// ADDU_S_PH
    0U,	// ADDU_S_PH_MMR2
    0U,	// ADDU_S_QB
    0U,	// ADDU_S_QB_MM
    4U,	// ADDVI_B
    4U,	// ADDVI_D
    4U,	// ADDVI_H
    4U,	// ADDVI_W
    0U,	// ADDV_B
    0U,	// ADDV_D
    0U,	// ADDV_H
    0U,	// ADDV_W
    0U,	// ADDWC
    0U,	// ADDWC_MM
    0U,	// ADD_A_B
    0U,	// ADD_A_D
    0U,	// ADD_A_H
    0U,	// ADD_A_W
    0U,	// ADD_MM
    0U,	// ADD_MMR6
    0U,	// ADDi
    0U,	// ADDi_MM
    0U,	// ADDiu
    0U,	// ADDiu_MM
    0U,	// ADDu
    0U,	// ADDu_MM
    64U,	// ALIGN
    64U,	// ALIGN_MMR6
    0U,	// ALUIPC
    0U,	// ALUIPC_MMR6
    0U,	// AND
    0U,	// AND16_MM
    0U,	// AND16_MMR6
    0U,	// AND64
    0U,	// ANDI16_MM
    0U,	// ANDI16_MMR6
    6U,	// ANDI_B
    8U,	// ANDI_MMR6
    0U,	// AND_MM
    0U,	// AND_MMR6
    0U,	// AND_V
    8U,	// ANDi
    8U,	// ANDi64
    8U,	// ANDi_MM
    4U,	// APPEND
    4U,	// APPEND_MMR2
    0U,	// ASUB_S_B
    0U,	// ASUB_S_D
    0U,	// ASUB_S_H
    0U,	// ASUB_S_W
    0U,	// ASUB_U_B
    0U,	// ASUB_U_D
    0U,	// ASUB_U_H
    0U,	// ASUB_U_W
    8U,	// AUI
    0U,	// AUIPC
    0U,	// AUIPC_MMR6
    8U,	// AUI_MMR6
    0U,	// AVER_S_B
    0U,	// AVER_S_D
    0U,	// AVER_S_H
    0U,	// AVER_S_W
    0U,	// AVER_U_B
    0U,	// AVER_U_D
    0U,	// AVER_U_H
    0U,	// AVER_U_W
    0U,	// AVE_S_B
    0U,	// AVE_S_D
    0U,	// AVE_S_H
    0U,	// AVE_S_W
    0U,	// AVE_U_B
    0U,	// AVE_U_D
    0U,	// AVE_U_H
    0U,	// AVE_U_W
    0U,	// AddiuRxImmX16
    0U,	// AddiuRxPcImmX16
    0U,	// AddiuRxRxImm16
    0U,	// AddiuRxRxImmX16
    0U,	// AddiuRxRyOffMemX16
    0U,	// AddiuSpImm16
    0U,	// AddiuSpImmX16
    0U,	// AdduRxRyRz16
    0U,	// AndRxRxRy16
    0U,	// B16_MM
    0U,	// BADDu
    0U,	// BAL
    0U,	// BALC
    0U,	// BALC_MMR6
    10U,	// BALIGN
    10U,	// BALIGN_MMR2
    0U,	// BBIT0
    0U,	// BBIT032
    0U,	// BBIT1
    0U,	// BBIT132
    0U,	// BC
    0U,	// BC16_MMR6
    0U,	// BC1EQZ
    0U,	// BC1EQZC_MMR6
    0U,	// BC1F
    0U,	// BC1FL
    0U,	// BC1F_MM
    0U,	// BC1NEZ
    0U,	// BC1NEZC_MMR6
    0U,	// BC1T
    0U,	// BC1TL
    0U,	// BC1T_MM
    0U,	// BC2EQZ
    0U,	// BC2EQZC_MMR6
    0U,	// BC2NEZ
    0U,	// BC2NEZC_MMR6
    2U,	// BCLRI_B
    12U,	// BCLRI_D
    14U,	// BCLRI_H
    4U,	// BCLRI_W
    0U,	// BCLR_B
    0U,	// BCLR_D
    0U,	// BCLR_H
    0U,	// BCLR_W
    0U,	// BC_MMR6
    0U,	// BEQ
    0U,	// BEQ64
    0U,	// BEQC
    0U,	// BEQC64
    0U,	// BEQC_MMR6
    0U,	// BEQL
    0U,	// BEQZ16_MM
    0U,	// BEQZALC
    0U,	// BEQZALC_MMR6
    0U,	// BEQZC
    0U,	// BEQZC16_MMR6
    0U,	// BEQZC64
    0U,	// BEQZC_MM
    0U,	// BEQZC_MMR6
    0U,	// BEQ_MM
    0U,	// BGEC
    0U,	// BGEC64
    0U,	// BGEC_MMR6
    0U,	// BGEUC
    0U,	// BGEUC64
    0U,	// BGEUC_MMR6
    0U,	// BGEZ
    0U,	// BGEZ64
    0U,	// BGEZAL
    0U,	// BGEZALC
    0U,	// BGEZALC_MMR6
    0U,	// BGEZALL
    0U,	// BGEZALS_MM
    0U,	// BGEZAL_MM
    0U,	// BGEZC
    0U,	// BGEZC64
    0U,	// BGEZC_MMR6
    0U,	// BGEZL
    0U,	// BGEZ_MM
    0U,	// BGTZ
    0U,	// BGTZ64
    0U,	// BGTZALC
    0U,	// BGTZALC_MMR6
    0U,	// BGTZC
    0U,	// BGTZC64
    0U,	// BGTZC_MMR6
    0U,	// BGTZL
    0U,	// BGTZ_MM
    16U,	// BINSLI_B
    18U,	// BINSLI_D
    20U,	// BINSLI_H
    22U,	// BINSLI_W
    24U,	// BINSL_B
    24U,	// BINSL_D
    24U,	// BINSL_H
    24U,	// BINSL_W
    16U,	// BINSRI_B
    18U,	// BINSRI_D
    20U,	// BINSRI_H
    22U,	// BINSRI_W
    24U,	// BINSR_B
    24U,	// BINSR_D
    24U,	// BINSR_H
    24U,	// BINSR_W
    0U,	// BITREV
    0U,	// BITREV_MM
    0U,	// BITSWAP
    0U,	// BITSWAP_MMR6
    0U,	// BLEZ
    0U,	// BLEZ64
    0U,	// BLEZALC
    0U,	// BLEZALC_MMR6
    0U,	// BLEZC
    0U,	// BLEZC64
    0U,	// BLEZC_MMR6
    0U,	// BLEZL
    0U,	// BLEZ_MM
    0U,	// BLTC
    0U,	// BLTC64
    0U,	// BLTC_MMR6
    0U,	// BLTUC
    0U,	// BLTUC64
    0U,	// BLTUC_MMR6
    0U,	// BLTZ
    0U,	// BLTZ64
    0U,	// BLTZAL
    0U,	// BLTZALC
    0U,	// BLTZALC_MMR6
    0U,	// BLTZALL
    0U,	// BLTZALS_MM
    0U,	// BLTZAL_MM
    0U,	// BLTZC
    0U,	// BLTZC64
    0U,	// BLTZC_MMR6
    0U,	// BLTZL
    0U,	// BLTZ_MM
    26U,	// BMNZI_B
    24U,	// BMNZ_V
    26U,	// BMZI_B
    24U,	// BMZ_V
    0U,	// BNE
    0U,	// BNE64
    0U,	// BNEC
    0U,	// BNEC64
    0U,	// BNEC_MMR6
    2U,	// BNEGI_B
    12U,	// BNEGI_D
    14U,	// BNEGI_H
    4U,	// BNEGI_W
    0U,	// BNEG_B
    0U,	// BNEG_D
    0U,	// BNEG_H
    0U,	// BNEG_W
    0U,	// BNEL
    0U,	// BNEZ16_MM
    0U,	// BNEZALC
    0U,	// BNEZALC_MMR6
    0U,	// BNEZC
    0U,	// BNEZC16_MMR6
    0U,	// BNEZC64
    0U,	// BNEZC_MM
    0U,	// BNEZC_MMR6
    0U,	// BNE_MM
    0U,	// BNVC
    0U,	// BNVC_MMR6
    0U,	// BNZ_B
    0U,	// BNZ_D
    0U,	// BNZ_H
    0U,	// BNZ_V
    0U,	// BNZ_W
    0U,	// BOVC
    0U,	// BOVC_MMR6
    0U,	// BPOSGE32
    0U,	// BPOSGE32C_MMR3
    0U,	// BPOSGE32_MM
    0U,	// BREAK
    0U,	// BREAK16_MM
    0U,	// BREAK16_MMR6
    0U,	// BREAK_MM
    0U,	// BREAK_MMR6
    26U,	// BSELI_B
    24U,	// BSEL_V
    2U,	// BSETI_B
    12U,	// BSETI_D
    14U,	// BSETI_H
    4U,	// BSETI_W
    0U,	// BSET_B
    0U,	// BSET_D
    0U,	// BSET_H
    0U,	// BSET_W
    0U,	// BZ_B
    0U,	// BZ_D
    0U,	// BZ_H
    0U,	// BZ_V
    0U,	// BZ_W
    0U,	// BeqzRxImm16
    0U,	// BeqzRxImmX16
    0U,	// Bimm16
    0U,	// BimmX16
    0U,	// BnezRxImm16
    0U,	// BnezRxImmX16
    0U,	// Break16
    0U,	// Bteqz16
    0U,	// BteqzX16
    0U,	// Btnez16
    0U,	// BtnezX16
    0U,	// CACHE
    0U,	// CACHEE
    0U,	// CACHEE_MM
    0U,	// CACHE_MM
    0U,	// CACHE_MMR6
    0U,	// CACHE_R6
    0U,	// CEIL_L_D64
    0U,	// CEIL_L_D_MMR6
    0U,	// CEIL_L_S
    0U,	// CEIL_L_S_MMR6
    0U,	// CEIL_W_D32
    0U,	// CEIL_W_D64
    0U,	// CEIL_W_D_MMR6
    0U,	// CEIL_W_MM
    0U,	// CEIL_W_S
    0U,	// CEIL_W_S_MM
    0U,	// CEIL_W_S_MMR6
    0U,	// CEQI_B
    0U,	// CEQI_D
    0U,	// CEQI_H
    0U,	// CEQI_W
    0U,	// CEQ_B
    0U,	// CEQ_D
    0U,	// CEQ_H
    0U,	// CEQ_W
    0U,	// CFC1
    0U,	// CFC1_MM
    0U,	// CFC2_MM
    0U,	// CFCMSA
    580U,	// CINS
    580U,	// CINS32
    580U,	// CINS64_32
    580U,	// CINS_i32
    0U,	// CLASS_D
    0U,	// CLASS_D_MMR6
    0U,	// CLASS_S
    0U,	// CLASS_S_MMR6
    0U,	// CLEI_S_B
    0U,	// CLEI_S_D
    0U,	// CLEI_S_H
    0U,	// CLEI_S_W
    4U,	// CLEI_U_B
    4U,	// CLEI_U_D
    4U,	// CLEI_U_H
    4U,	// CLEI_U_W
    0U,	// CLE_S_B
    0U,	// CLE_S_D
    0U,	// CLE_S_H
    0U,	// CLE_S_W
    0U,	// CLE_U_B
    0U,	// CLE_U_D
    0U,	// CLE_U_H
    0U,	// CLE_U_W
    0U,	// CLO
    0U,	// CLO_MM
    0U,	// CLO_MMR6
    0U,	// CLO_R6
    0U,	// CLTI_S_B
    0U,	// CLTI_S_D
    0U,	// CLTI_S_H
    0U,	// CLTI_S_W
    4U,	// CLTI_U_B
    4U,	// CLTI_U_D
    4U,	// CLTI_U_H
    4U,	// CLTI_U_W
    0U,	// CLT_S_B
    0U,	// CLT_S_D
    0U,	// CLT_S_H
    0U,	// CLT_S_W
    0U,	// CLT_U_B
    0U,	// CLT_U_D
    0U,	// CLT_U_H
    0U,	// CLT_U_W
    0U,	// CLZ
    0U,	// CLZ_MM
    0U,	// CLZ_MMR6
    0U,	// CLZ_R6
    0U,	// CMPGDU_EQ_QB
    0U,	// CMPGDU_EQ_QB_MMR2
    0U,	// CMPGDU_LE_QB
    0U,	// CMPGDU_LE_QB_MMR2
    0U,	// CMPGDU_LT_QB
    0U,	// CMPGDU_LT_QB_MMR2
    0U,	// CMPGU_EQ_QB
    0U,	// CMPGU_EQ_QB_MM
    0U,	// CMPGU_LE_QB
    0U,	// CMPGU_LE_QB_MM
    0U,	// CMPGU_LT_QB
    0U,	// CMPGU_LT_QB_MM
    0U,	// CMPU_EQ_QB
    0U,	// CMPU_EQ_QB_MM
    0U,	// CMPU_LE_QB
    0U,	// CMPU_LE_QB_MM
    0U,	// CMPU_LT_QB
    0U,	// CMPU_LT_QB_MM
    0U,	// CMP_AF_D_MMR6
    0U,	// CMP_AF_S_MMR6
    0U,	// CMP_EQ_D
    0U,	// CMP_EQ_D_MMR6
    0U,	// CMP_EQ_PH
    0U,	// CMP_EQ_PH_MM
    0U,	// CMP_EQ_S
    0U,	// CMP_EQ_S_MMR6
    0U,	// CMP_F_D
    0U,	// CMP_F_S
    0U,	// CMP_LE_D
    0U,	// CMP_LE_D_MMR6
    0U,	// CMP_LE_PH
    0U,	// CMP_LE_PH_MM
    0U,	// CMP_LE_S
    0U,	// CMP_LE_S_MMR6
    0U,	// CMP_LT_D
    0U,	// CMP_LT_D_MMR6
    0U,	// CMP_LT_PH
    0U,	// CMP_LT_PH_MM
    0U,	// CMP_LT_S
    0U,	// CMP_LT_S_MMR6
    0U,	// CMP_SAF_D
    0U,	// CMP_SAF_D_MMR6
    0U,	// CMP_SAF_S
    0U,	// CMP_SAF_S_MMR6
    0U,	// CMP_SEQ_D
    0U,	// CMP_SEQ_D_MMR6
    0U,	// CMP_SEQ_S
    0U,	// CMP_SEQ_S_MMR6
    0U,	// CMP_SLE_D
    0U,	// CMP_SLE_D_MMR6
    0U,	// CMP_SLE_S
    0U,	// CMP_SLE_S_MMR6
    0U,	// CMP_SLT_D
    0U,	// CMP_SLT_D_MMR6
    0U,	// CMP_SLT_S
    0U,	// CMP_SLT_S_MMR6
    0U,	// CMP_SUEQ_D
    0U,	// CMP_SUEQ_D_MMR6
    0U,	// CMP_SUEQ_S
    0U,	// CMP_SUEQ_S_MMR6
    0U,	// CMP_SULE_D
    0U,	// CMP_SULE_D_MMR6
    0U,	// CMP_SULE_S
    0U,	// CMP_SULE_S_MMR6
    0U,	// CMP_SULT_D
    0U,	// CMP_SULT_D_MMR6
    0U,	// CMP_SULT_S
    0U,	// CMP_SULT_S_MMR6
    0U,	// CMP_SUN_D
    0U,	// CMP_SUN_D_MMR6
    0U,	// CMP_SUN_S
    0U,	// CMP_SUN_S_MMR6
    0U,	// CMP_UEQ_D
    0U,	// CMP_UEQ_D_MMR6
    0U,	// CMP_UEQ_S
    0U,	// CMP_UEQ_S_MMR6
    0U,	// CMP_ULE_D
    0U,	// CMP_ULE_D_MMR6
    0U,	// CMP_ULE_S
    0U,	// CMP_ULE_S_MMR6
    0U,	// CMP_ULT_D
    0U,	// CMP_ULT_D_MMR6
    0U,	// CMP_ULT_S
    0U,	// CMP_ULT_S_MMR6
    0U,	// CMP_UN_D
    0U,	// CMP_UN_D_MMR6
    0U,	// CMP_UN_S
    0U,	// CMP_UN_S_MMR6
    142U,	// COPY_S_B
    156U,	// COPY_S_D
    130U,	// COPY_S_H
    138U,	// COPY_S_W
    142U,	// COPY_U_B
    130U,	// COPY_U_H
    138U,	// COPY_U_W
    0U,	// CRC32B
    0U,	// CRC32CB
    0U,	// CRC32CD
    0U,	// CRC32CH
    0U,	// CRC32CW
    0U,	// CRC32D
    0U,	// CRC32H
    0U,	// CRC32W
    0U,	// CTC1
    0U,	// CTC1_MM
    0U,	// CTC2_MM
    0U,	// CTCMSA
    0U,	// CVT_D32_S
    0U,	// CVT_D32_S_MM
    0U,	// CVT_D32_W
    0U,	// CVT_D32_W_MM
    0U,	// CVT_D64_L
    0U,	// CVT_D64_S
    0U,	// CVT_D64_S_MM
    0U,	// CVT_D64_W
    0U,	// CVT_D64_W_MM
    0U,	// CVT_D_L_MMR6
    0U,	// CVT_L_D64
    0U,	// CVT_L_D64_MM
    0U,	// CVT_L_D_MMR6
    0U,	// CVT_L_S
    0U,	// CVT_L_S_MM
    0U,	// CVT_L_S_MMR6
    0U,	// CVT_PS_S64
    0U,	// CVT_S_D32
    0U,	// CVT_S_D32_MM
    0U,	// CVT_S_D64
    0U,	// CVT_S_D64_MM
    0U,	// CVT_S_L
    0U,	// CVT_S_L_MMR6
    0U,	// CVT_S_PL64
    0U,	// CVT_S_PU64
    0U,	// CVT_S_W
    0U,	// CVT_S_W_MM
    0U,	// CVT_S_W_MMR6
    0U,	// CVT_W_D32
    0U,	// CVT_W_D32_MM
    0U,	// CVT_W_D64
    0U,	// CVT_W_D64_MM
    0U,	// CVT_W_S
    0U,	// CVT_W_S_MM
    0U,	// CVT_W_S_MMR6
    0U,	// C_EQ_D32
    0U,	// C_EQ_D32_MM
    0U,	// C_EQ_D64
    0U,	// C_EQ_D64_MM
    0U,	// C_EQ_S
    0U,	// C_EQ_S_MM
    0U,	// C_F_D32
    0U,	// C_F_D32_MM
    0U,	// C_F_D64
    0U,	// C_F_D64_MM
    0U,	// C_F_S
    0U,	// C_F_S_MM
    0U,	// C_LE_D32
    0U,	// C_LE_D32_MM
    0U,	// C_LE_D64
    0U,	// C_LE_D64_MM
    0U,	// C_LE_S
    0U,	// C_LE_S_MM
    0U,	// C_LT_D32
    0U,	// C_LT_D32_MM
    0U,	// C_LT_D64
    0U,	// C_LT_D64_MM
    0U,	// C_LT_S
    0U,	// C_LT_S_MM
    0U,	// C_NGE_D32
    0U,	// C_NGE_D32_MM
    0U,	// C_NGE_D64
    0U,	// C_NGE_D64_MM
    0U,	// C_NGE_S
    0U,	// C_NGE_S_MM
    0U,	// C_NGLE_D32
    0U,	// C_NGLE_D32_MM
    0U,	// C_NGLE_D64
    0U,	// C_NGLE_D64_MM
    0U,	// C_NGLE_S
    0U,	// C_NGLE_S_MM
    0U,	// C_NGL_D32
    0U,	// C_NGL_D32_MM
    0U,	// C_NGL_D64
    0U,	// C_NGL_D64_MM
    0U,	// C_NGL_S
    0U,	// C_NGL_S_MM
    0U,	// C_NGT_D32
    0U,	// C_NGT_D32_MM
    0U,	// C_NGT_D64
    0U,	// C_NGT_D64_MM
    0U,	// C_NGT_S
    0U,	// C_NGT_S_MM
    0U,	// C_OLE_D32
    0U,	// C_OLE_D32_MM
    0U,	// C_OLE_D64
    0U,	// C_OLE_D64_MM
    0U,	// C_OLE_S
    0U,	// C_OLE_S_MM
    0U,	// C_OLT_D32
    0U,	// C_OLT_D32_MM
    0U,	// C_OLT_D64
    0U,	// C_OLT_D64_MM
    0U,	// C_OLT_S
    0U,	// C_OLT_S_MM
    0U,	// C_SEQ_D32
    0U,	// C_SEQ_D32_MM
    0U,	// C_SEQ_D64
    0U,	// C_SEQ_D64_MM
    0U,	// C_SEQ_S
    0U,	// C_SEQ_S_MM
    0U,	// C_SF_D32
    0U,	// C_SF_D32_MM
    0U,	// C_SF_D64
    0U,	// C_SF_D64_MM
    0U,	// C_SF_S
    0U,	// C_SF_S_MM
    0U,	// C_UEQ_D32
    0U,	// C_UEQ_D32_MM
    0U,	// C_UEQ_D64
    0U,	// C_UEQ_D64_MM
    0U,	// C_UEQ_S
    0U,	// C_UEQ_S_MM
    0U,	// C_ULE_D32
    0U,	// C_ULE_D32_MM
    0U,	// C_ULE_D64
    0U,	// C_ULE_D64_MM
    0U,	// C_ULE_S
    0U,	// C_ULE_S_MM
    0U,	// C_ULT_D32
    0U,	// C_ULT_D32_MM
    0U,	// C_ULT_D64
    0U,	// C_ULT_D64_MM
    0U,	// C_ULT_S
    0U,	// C_ULT_S_MM
    0U,	// C_UN_D32
    0U,	// C_UN_D32_MM
    0U,	// C_UN_D64
    0U,	// C_UN_D64_MM
    0U,	// C_UN_S
    0U,	// C_UN_S_MM
    0U,	// CmpRxRy16
    0U,	// CmpiRxImm16
    0U,	// CmpiRxImmX16
    0U,	// DADD
    0U,	// DADDi
    0U,	// DADDiu
    0U,	// DADDu
    8U,	// DAHI
    1088U,	// DALIGN
    8U,	// DATI
    8U,	// DAUI
    0U,	// DBITSWAP
    0U,	// DCLO
    0U,	// DCLO_R6
    0U,	// DCLZ
    0U,	// DCLZ_R6
    0U,	// DDIV
    0U,	// DDIVU
    0U,	// DERET
    0U,	// DERET_MM
    0U,	// DERET_MMR6
    1612U,	// DEXT
    2124U,	// DEXT64_32
    2628U,	// DEXTM
    222U,	// DEXTU
    0U,	// DI
    3148U,	// DINS
    3652U,	// DINSM
    286U,	// DINSU
    0U,	// DIV
    0U,	// DIVU
    0U,	// DIVU_MMR6
    0U,	// DIV_MMR6
    0U,	// DIV_S_B
    0U,	// DIV_S_D
    0U,	// DIV_S_H
    0U,	// DIV_S_W
    0U,	// DIV_U_B
    0U,	// DIV_U_D
    0U,	// DIV_U_H
    0U,	// DIV_U_W
    0U,	// DI_MM
    0U,	// DI_MMR6
    4160U,	// DLSA
    4160U,	// DLSA_R6
    2U,	// DMFC0
    0U,	// DMFC1
    2U,	// DMFC2
    0U,	// DMFC2_OCTEON
    2U,	// DMFGC0
    0U,	// DMOD
    0U,	// DMODU
    0U,	// DMT
    0U,	// DMTC0
    0U,	// DMTC1
    0U,	// DMTC2
    0U,	// DMTC2_OCTEON
    0U,	// DMTGC0
    0U,	// DMUH
    0U,	// DMUHU
    0U,	// DMUL
    0U,	// DMULT
    0U,	// DMULTu
    0U,	// DMULU
    0U,	// DMUL_R6
    0U,	// DOTP_S_D
    0U,	// DOTP_S_H
    0U,	// DOTP_S_W
    0U,	// DOTP_U_D
    0U,	// DOTP_U_H
    0U,	// DOTP_U_W
    24U,	// DPADD_S_D
    24U,	// DPADD_S_H
    24U,	// DPADD_S_W
    24U,	// DPADD_U_D
    24U,	// DPADD_U_H
    24U,	// DPADD_U_W
    0U,	// DPAQX_SA_W_PH
    0U,	// DPAQX_SA_W_PH_MMR2
    0U,	// DPAQX_S_W_PH
    0U,	// DPAQX_S_W_PH_MMR2
    0U,	// DPAQ_SA_L_W
    0U,	// DPAQ_SA_L_W_MM
    0U,	// DPAQ_S_W_PH
    0U,	// DPAQ_S_W_PH_MM
    0U,	// DPAU_H_QBL
    0U,	// DPAU_H_QBL_MM
    0U,	// DPAU_H_QBR
    0U,	// DPAU_H_QBR_MM
    0U,	// DPAX_W_PH
    0U,	// DPAX_W_PH_MMR2
    0U,	// DPA_W_PH
    0U,	// DPA_W_PH_MMR2
    0U,	// DPOP
    0U,	// DPSQX_SA_W_PH
    0U,	// DPSQX_SA_W_PH_MMR2
    0U,	// DPSQX_S_W_PH
    0U,	// DPSQX_S_W_PH_MMR2
    0U,	// DPSQ_SA_L_W
    0U,	// DPSQ_SA_L_W_MM
    0U,	// DPSQ_S_W_PH
    0U,	// DPSQ_S_W_PH_MM
    24U,	// DPSUB_S_D
    24U,	// DPSUB_S_H
    24U,	// DPSUB_S_W
    24U,	// DPSUB_U_D
    24U,	// DPSUB_U_H
    24U,	// DPSUB_U_W
    0U,	// DPSU_H_QBL
    0U,	// DPSU_H_QBL_MM
    0U,	// DPSU_H_QBR
    0U,	// DPSU_H_QBR_MM
    0U,	// DPSX_W_PH
    0U,	// DPSX_W_PH_MMR2
    0U,	// DPS_W_PH
    0U,	// DPS_W_PH_MMR2
    12U,	// DROTR
    4U,	// DROTR32
    0U,	// DROTRV
    0U,	// DSBH
    0U,	// DSDIV
    0U,	// DSHD
    12U,	// DSLL
    4U,	// DSLL32
    0U,	// DSLL64_32
    0U,	// DSLLV
    12U,	// DSRA
    4U,	// DSRA32
    0U,	// DSRAV
    12U,	// DSRL
    4U,	// DSRL32
    0U,	// DSRLV
    0U,	// DSUB
    0U,	// DSUBu
    0U,	// DUDIV
    0U,	// DVP
    0U,	// DVPE
    0U,	// DVP_MMR6
    0U,	// DivRxRy16
    0U,	// DivuRxRy16
    0U,	// EHB
    0U,	// EHB_MM
    0U,	// EHB_MMR6
    0U,	// EI
    0U,	// EI_MM
    0U,	// EI_MMR6
    0U,	// EMT
    0U,	// ERET
    0U,	// ERETNC
    0U,	// ERETNC_MMR6
    0U,	// ERET_MM
    0U,	// ERET_MMR6
    0U,	// EVP
    0U,	// EVPE
    0U,	// EVP_MMR6
    2116U,	// EXT
    4U,	// EXTP
    4U,	// EXTPDP
    0U,	// EXTPDPV
    0U,	// EXTPDPV_MM
    4U,	// EXTPDP_MM
    0U,	// EXTPV
    0U,	// EXTPV_MM
    4U,	// EXTP_MM
    0U,	// EXTRV_RS_W
    0U,	// EXTRV_RS_W_MM
    0U,	// EXTRV_R_W
    0U,	// EXTRV_R_W_MM
    0U,	// EXTRV_S_H
    0U,	// EXTRV_S_H_MM
    0U,	// EXTRV_W
    0U,	// EXTRV_W_MM
    4U,	// EXTR_RS_W
    4U,	// EXTR_RS_W_MM
    4U,	// EXTR_R_W
    4U,	// EXTR_R_W_MM
    4U,	// EXTR_S_H
    4U,	// EXTR_S_H_MM
    4U,	// EXTR_W
    4U,	// EXTR_W_MM
    580U,	// EXTS
    580U,	// EXTS32
    2116U,	// EXT_MM
    2116U,	// EXT_MMR6
    0U,	// FABS_D32
    0U,	// FABS_D32_MM
    0U,	// FABS_D64
    0U,	// FABS_D64_MM
    0U,	// FABS_S
    0U,	// FABS_S_MM
    0U,	// FADD_D
    0U,	// FADD_D32
    0U,	// FADD_D32_MM
    0U,	// FADD_D64
    0U,	// FADD_D64_MM
    0U,	// FADD_S
    0U,	// FADD_S_MM
    32U,	// FADD_S_MMR6
    0U,	// FADD_W
    0U,	// FCAF_D
    0U,	// FCAF_W
    0U,	// FCEQ_D
    0U,	// FCEQ_W
    0U,	// FCLASS_D
    0U,	// FCLASS_W
    0U,	// FCLE_D
    0U,	// FCLE_W
    0U,	// FCLT_D
    0U,	// FCLT_W
    0U,	// FCMP_D32
    0U,	// FCMP_D32_MM
    0U,	// FCMP_D64
    0U,	// FCMP_S32
    0U,	// FCMP_S32_MM
    0U,	// FCNE_D
    0U,	// FCNE_W
    0U,	// FCOR_D
    0U,	// FCOR_W
    0U,	// FCUEQ_D
    0U,	// FCUEQ_W
    0U,	// FCULE_D
    0U,	// FCULE_W
    0U,	// FCULT_D
    0U,	// FCULT_W
    0U,	// FCUNE_D
    0U,	// FCUNE_W
    0U,	// FCUN_D
    0U,	// FCUN_W
    0U,	// FDIV_D
    0U,	// FDIV_D32
    0U,	// FDIV_D32_MM
    0U,	// FDIV_D64
    0U,	// FDIV_D64_MM
    0U,	// FDIV_S
    0U,	// FDIV_S_MM
    32U,	// FDIV_S_MMR6
    0U,	// FDIV_W
    0U,	// FEXDO_H
    0U,	// FEXDO_W
    0U,	// FEXP2_D
    0U,	// FEXP2_W
    0U,	// FEXUPL_D
    0U,	// FEXUPL_W
    0U,	// FEXUPR_D
    0U,	// FEXUPR_W
    0U,	// FFINT_S_D
    0U,	// FFINT_S_W
    0U,	// FFINT_U_D
    0U,	// FFINT_U_W
    0U,	// FFQL_D
    0U,	// FFQL_W
    0U,	// FFQR_D
    0U,	// FFQR_W
    0U,	// FILL_B
    0U,	// FILL_D
    0U,	// FILL_H
    0U,	// FILL_W
    0U,	// FLOG2_D
    0U,	// FLOG2_W
    0U,	// FLOOR_L_D64
    0U,	// FLOOR_L_D_MMR6
    0U,	// FLOOR_L_S
    0U,	// FLOOR_L_S_MMR6
    0U,	// FLOOR_W_D32
    0U,	// FLOOR_W_D64
    0U,	// FLOOR_W_D_MMR6
    0U,	// FLOOR_W_MM
    0U,	// FLOOR_W_S
    0U,	// FLOOR_W_S_MM
    0U,	// FLOOR_W_S_MMR6
    24U,	// FMADD_D
    24U,	// FMADD_W
    0U,	// FMAX_A_D
    0U,	// FMAX_A_W
    0U,	// FMAX_D
    0U,	// FMAX_W
    0U,	// FMIN_A_D
    0U,	// FMIN_A_W
    0U,	// FMIN_D
    0U,	// FMIN_W
    0U,	// FMOV_D32
    0U,	// FMOV_D32_MM
    0U,	// FMOV_D64
    0U,	// FMOV_D64_MM
    0U,	// FMOV_D_MMR6
    0U,	// FMOV_S
    0U,	// FMOV_S_MM
    0U,	// FMOV_S_MMR6
    24U,	// FMSUB_D
    24U,	// FMSUB_W
    0U,	// FMUL_D
    0U,	// FMUL_D32
    0U,	// FMUL_D32_MM
    0U,	// FMUL_D64
    0U,	// FMUL_D64_MM
    0U,	// FMUL_S
    0U,	// FMUL_S_MM
    32U,	// FMUL_S_MMR6
    0U,	// FMUL_W
    0U,	// FNEG_D32
    0U,	// FNEG_D32_MM
    0U,	// FNEG_D64
    0U,	// FNEG_D64_MM
    0U,	// FNEG_S
    0U,	// FNEG_S_MM
    0U,	// FNEG_S_MMR6
    0U,	// FORK
    0U,	// FRCP_D
    0U,	// FRCP_W
    0U,	// FRINT_D
    0U,	// FRINT_W
    0U,	// FRSQRT_D
    0U,	// FRSQRT_W
    0U,	// FSAF_D
    0U,	// FSAF_W
    0U,	// FSEQ_D
    0U,	// FSEQ_W
    0U,	// FSLE_D
    0U,	// FSLE_W
    0U,	// FSLT_D
    0U,	// FSLT_W
    0U,	// FSNE_D
    0U,	// FSNE_W
    0U,	// FSOR_D
    0U,	// FSOR_W
    0U,	// FSQRT_D
    0U,	// FSQRT_D32
    0U,	// FSQRT_D32_MM
    0U,	// FSQRT_D64
    0U,	// FSQRT_D64_MM
    0U,	// FSQRT_S
    0U,	// FSQRT_S_MM
    0U,	// FSQRT_W
    0U,	// FSUB_D
    0U,	// FSUB_D32
    0U,	// FSUB_D32_MM
    0U,	// FSUB_D64
    0U,	// FSUB_D64_MM
    0U,	// FSUB_S
    0U,	// FSUB_S_MM
    32U,	// FSUB_S_MMR6
    0U,	// FSUB_W
    0U,	// FSUEQ_D
    0U,	// FSUEQ_W
    0U,	// FSULE_D
    0U,	// FSULE_W
    0U,	// FSULT_D
    0U,	// FSULT_W
    0U,	// FSUNE_D
    0U,	// FSUNE_W
    0U,	// FSUN_D
    0U,	// FSUN_W
    0U,	// FTINT_S_D
    0U,	// FTINT_S_W
    0U,	// FTINT_U_D
    0U,	// FTINT_U_W
    0U,	// FTQ_H
    0U,	// FTQ_W
    0U,	// FTRUNC_S_D
    0U,	// FTRUNC_S_W
    0U,	// FTRUNC_U_D
    0U,	// FTRUNC_U_W
    0U,	// GINVI
    0U,	// GINVI_MMR6
    0U,	// GINVT
    0U,	// GINVT_MMR6
    0U,	// HADD_S_D
    0U,	// HADD_S_H
    0U,	// HADD_S_W
    0U,	// HADD_U_D
    0U,	// HADD_U_H
    0U,	// HADD_U_W
    0U,	// HSUB_S_D
    0U,	// HSUB_S_H
    0U,	// HSUB_S_W
    0U,	// HSUB_U_D
    0U,	// HSUB_U_H
    0U,	// HSUB_U_W
    0U,	// HYPCALL
    0U,	// HYPCALL_MM
    0U,	// ILVEV_B
    0U,	// ILVEV_D
    0U,	// ILVEV_H
    0U,	// ILVEV_W
    0U,	// ILVL_B
    0U,	// ILVL_D
    0U,	// ILVL_H
    0U,	// ILVL_W
    0U,	// ILVOD_B
    0U,	// ILVOD_D
    0U,	// ILVOD_H
    0U,	// ILVOD_W
    0U,	// ILVR_B
    0U,	// ILVR_D
    0U,	// ILVR_H
    0U,	// ILVR_W
    3140U,	// INS
    0U,	// INSERT_B
    0U,	// INSERT_D
    0U,	// INSERT_H
    0U,	// INSERT_W
    0U,	// INSV
    0U,	// INSVE_B
    0U,	// INSVE_D
    0U,	// INSVE_H
    0U,	// INSVE_W
    0U,	// INSV_MM
    3140U,	// INS_MM
    3140U,	// INS_MMR6
    0U,	// J
    0U,	// JAL
    0U,	// JALR
    0U,	// JALR16_MM
    0U,	// JALR64
    0U,	// JALRC16_MMR6
    0U,	// JALRC_HB_MMR6
    0U,	// JALRC_MMR6
    0U,	// JALRS16_MM
    0U,	// JALRS_MM
    0U,	// JALR_HB
    0U,	// JALR_HB64
    0U,	// JALR_MM
    0U,	// JALS_MM
    0U,	// JALX
    0U,	// JALX_MM
    0U,	// JAL_MM
    0U,	// JIALC
    0U,	// JIALC64
    0U,	// JIALC_MMR6
    0U,	// JIC
    0U,	// JIC64
    0U,	// JIC_MMR6
    0U,	// JR
    0U,	// JR16_MM
    0U,	// JR64
    0U,	// JRADDIUSP
    0U,	// JRC16_MM
    0U,	// JRC16_MMR6
    0U,	// JRCADDIUSP_MMR6
    0U,	// JR_HB
    0U,	// JR_HB64
    0U,	// JR_HB64_R6
    0U,	// JR_HB_R6
    0U,	// JR_MM
    0U,	// J_MM
    0U,	// Jal16
    0U,	// JalB16
    0U,	// JrRa16
    0U,	// JrcRa16
    0U,	// JrcRx16
    0U,	// JumpLinkReg16
    0U,	// LB
    0U,	// LB64
    0U,	// LBE
    0U,	// LBE_MM
    0U,	// LBU16_MM
    0U,	// LBUX
    0U,	// LBUX_MM
    0U,	// LBU_MMR6
    0U,	// LB_MM
    0U,	// LB_MMR6
    0U,	// LBu
    0U,	// LBu64
    0U,	// LBuE
    0U,	// LBuE_MM
    0U,	// LBu_MM
    0U,	// LD
    0U,	// LDC1
    0U,	// LDC164
    0U,	// LDC1_D64_MMR6
    0U,	// LDC1_MM
    0U,	// LDC2
    0U,	// LDC2_MMR6
    0U,	// LDC2_R6
    0U,	// LDC3
    0U,	// LDI_B
    0U,	// LDI_D
    0U,	// LDI_H
    0U,	// LDI_W
    0U,	// LDL
    0U,	// LDPC
    0U,	// LDR
    0U,	// LDXC1
    0U,	// LDXC164
    0U,	// LD_B
    0U,	// LD_D
    0U,	// LD_H
    0U,	// LD_W
    0U,	// LEA_ADDiu
    0U,	// LEA_ADDiu64
    0U,	// LEA_ADDiu_MM
    0U,	// LH
    0U,	// LH64
    0U,	// LHE
    0U,	// LHE_MM
    0U,	// LHU16_MM
    0U,	// LHX
    0U,	// LHX_MM
    0U,	// LH_MM
    0U,	// LHu
    0U,	// LHu64
    0U,	// LHuE
    0U,	// LHuE_MM
    0U,	// LHu_MM
    0U,	// LI16_MM
    0U,	// LI16_MMR6
    0U,	// LL
    0U,	// LL64
    0U,	// LL64_R6
    0U,	// LLD
    0U,	// LLD_R6
    0U,	// LLE
    0U,	// LLE_MM
    0U,	// LL_MM
    0U,	// LL_MMR6
    0U,	// LL_R6
    4160U,	// LSA
    0U,	// LSA_MMR6
    4160U,	// LSA_R6
    0U,	// LUI_MMR6
    0U,	// LUXC1
    0U,	// LUXC164
    0U,	// LUXC1_MM
    0U,	// LUi
    0U,	// LUi64
    0U,	// LUi_MM
    0U,	// LW
    0U,	// LW16_MM
    0U,	// LW64
    0U,	// LWC1
    0U,	// LWC1_MM
    0U,	// LWC2
    0U,	// LWC2_MMR6
    0U,	// LWC2_R6
    0U,	// LWC3
    0U,	// LWDSP
    0U,	// LWDSP_MM
    0U,	// LWE
    0U,	// LWE_MM
    0U,	// LWGP_MM
    0U,	// LWL
    0U,	// LWL64
    0U,	// LWLE
    0U,	// LWLE_MM
    0U,	// LWL_MM
    0U,	// LWM16_MM
    0U,	// LWM16_MMR6
    0U,	// LWM32_MM
    0U,	// LWPC
    0U,	// LWPC_MMR6
    0U,	// LWP_MM
    0U,	// LWR
    0U,	// LWR64
    0U,	// LWRE
    0U,	// LWRE_MM
    0U,	// LWR_MM
    0U,	// LWSP_MM
    0U,	// LWUPC
    0U,	// LWU_MM
    0U,	// LWX
    0U,	// LWXC1
    0U,	// LWXC1_MM
    0U,	// LWXS_MM
    0U,	// LWX_MM
    0U,	// LW_MM
    0U,	// LW_MMR6
    0U,	// LWu
    0U,	// LbRxRyOffMemX16
    0U,	// LbuRxRyOffMemX16
    0U,	// LhRxRyOffMemX16
    0U,	// LhuRxRyOffMemX16
    0U,	// LiRxImm16
    0U,	// LiRxImmAlignX16
    0U,	// LiRxImmX16
    0U,	// LwRxPcTcp16
    0U,	// LwRxPcTcpX16
    0U,	// LwRxRyOffMemX16
    0U,	// LwRxSpImmX16
    0U,	// MADD
    24U,	// MADDF_D
    24U,	// MADDF_D_MMR6
    24U,	// MADDF_S
    24U,	// MADDF_S_MMR6
    24U,	// MADDR_Q_H
    24U,	// MADDR_Q_W
    0U,	// MADDU
    0U,	// MADDU_DSP
    0U,	// MADDU_DSP_MM
    0U,	// MADDU_MM
    24U,	// MADDV_B
    24U,	// MADDV_D
    24U,	// MADDV_H
    24U,	// MADDV_W
    4672U,	// MADD_D32
    4672U,	// MADD_D32_MM
    4672U,	// MADD_D64
    0U,	// MADD_DSP
    0U,	// MADD_DSP_MM
    0U,	// MADD_MM
    24U,	// MADD_Q_H
    24U,	// MADD_Q_W
    4672U,	// MADD_S
    4672U,	// MADD_S_MM
    0U,	// MAQ_SA_W_PHL
    0U,	// MAQ_SA_W_PHL_MM
    0U,	// MAQ_SA_W_PHR
    0U,	// MAQ_SA_W_PHR_MM
    0U,	// MAQ_S_W_PHL
    0U,	// MAQ_S_W_PHL_MM
    0U,	// MAQ_S_W_PHR
    0U,	// MAQ_S_W_PHR_MM
    0U,	// MAXA_D
    0U,	// MAXA_D_MMR6
    0U,	// MAXA_S
    0U,	// MAXA_S_MMR6
    0U,	// MAXI_S_B
    0U,	// MAXI_S_D
    0U,	// MAXI_S_H
    0U,	// MAXI_S_W
    4U,	// MAXI_U_B
    4U,	// MAXI_U_D
    4U,	// MAXI_U_H
    4U,	// MAXI_U_W
    0U,	// MAX_A_B
    0U,	// MAX_A_D
    0U,	// MAX_A_H
    0U,	// MAX_A_W
    0U,	// MAX_D
    0U,	// MAX_D_MMR6
    0U,	// MAX_S
    0U,	// MAX_S_B
    0U,	// MAX_S_D
    0U,	// MAX_S_H
    0U,	// MAX_S_MMR6
    0U,	// MAX_S_W
    0U,	// MAX_U_B
    0U,	// MAX_U_D
    0U,	// MAX_U_H
    0U,	// MAX_U_W
    2U,	// MFC0
    2U,	// MFC0_MMR6
    0U,	// MFC1
    0U,	// MFC1_D64
    0U,	// MFC1_MM
    0U,	// MFC1_MMR6
    2U,	// MFC2
    0U,	// MFC2_MMR6
    2U,	// MFGC0
    2U,	// MFGC0_MM
    2U,	// MFHC0_MMR6
    0U,	// MFHC1_D32
    0U,	// MFHC1_D32_MM
    0U,	// MFHC1_D64
    0U,	// MFHC1_D64_MM
    0U,	// MFHC2_MMR6
    2U,	// MFHGC0
    2U,	// MFHGC0_MM
    0U,	// MFHI
    0U,	// MFHI16_MM
    0U,	// MFHI64
    0U,	// MFHI_DSP
    0U,	// MFHI_DSP_MM
    0U,	// MFHI_MM
    0U,	// MFLO
    0U,	// MFLO16_MM
    0U,	// MFLO64
    0U,	// MFLO_DSP
    0U,	// MFLO_DSP_MM
    0U,	// MFLO_MM
    9308U,	// MFTR
    0U,	// MINA_D
    0U,	// MINA_D_MMR6
    0U,	// MINA_S
    0U,	// MINA_S_MMR6
    0U,	// MINI_S_B
    0U,	// MINI_S_D
    0U,	// MINI_S_H
    0U,	// MINI_S_W
    4U,	// MINI_U_B
    4U,	// MINI_U_D
    4U,	// MINI_U_H
    4U,	// MINI_U_W
    0U,	// MIN_A_B
    0U,	// MIN_A_D
    0U,	// MIN_A_H
    0U,	// MIN_A_W
    0U,	// MIN_D
    0U,	// MIN_D_MMR6
    0U,	// MIN_S
    0U,	// MIN_S_B
    0U,	// MIN_S_D
    0U,	// MIN_S_H
    0U,	// MIN_S_MMR6
    0U,	// MIN_S_W
    0U,	// MIN_U_B
    0U,	// MIN_U_D
    0U,	// MIN_U_H
    0U,	// MIN_U_W
    0U,	// MOD
    0U,	// MODSUB
    0U,	// MODSUB_MM
    0U,	// MODU
    0U,	// MODU_MMR6
    0U,	// MOD_MMR6
    0U,	// MOD_S_B
    0U,	// MOD_S_D
    0U,	// MOD_S_H
    0U,	// MOD_S_W
    0U,	// MOD_U_B
    0U,	// MOD_U_D
    0U,	// MOD_U_H
    0U,	// MOD_U_W
    0U,	// MOVE16_MM
    0U,	// MOVE16_MMR6
    4672U,	// MOVEP_MM
    4672U,	// MOVEP_MMR6
    0U,	// MOVE_V
    0U,	// MOVF_D32
    0U,	// MOVF_D32_MM
    0U,	// MOVF_D64
    0U,	// MOVF_I
    0U,	// MOVF_I64
    0U,	// MOVF_I_MM
    0U,	// MOVF_S
    0U,	// MOVF_S_MM
    0U,	// MOVN_I64_D64
    0U,	// MOVN_I64_I
    0U,	// MOVN_I64_I64
    0U,	// MOVN_I64_S
    0U,	// MOVN_I_D32
    0U,	// MOVN_I_D32_MM
    0U,	// MOVN_I_D64
    0U,	// MOVN_I_I
    0U,	// MOVN_I_I64
    0U,	// MOVN_I_MM
    0U,	// MOVN_I_S
    0U,	// MOVN_I_S_MM
    0U,	// MOVT_D32
    0U,	// MOVT_D32_MM
    0U,	// MOVT_D64
    0U,	// MOVT_I
    0U,	// MOVT_I64
    0U,	// MOVT_I_MM
    0U,	// MOVT_S
    0U,	// MOVT_S_MM
    0U,	// MOVZ_I64_D64
    0U,	// MOVZ_I64_I
    0U,	// MOVZ_I64_I64
    0U,	// MOVZ_I64_S
    0U,	// MOVZ_I_D32
    0U,	// MOVZ_I_D32_MM
    0U,	// MOVZ_I_D64
    0U,	// MOVZ_I_I
    0U,	// MOVZ_I_I64
    0U,	// MOVZ_I_MM
    0U,	// MOVZ_I_S
    0U,	// MOVZ_I_S_MM
    0U,	// MSUB
    24U,	// MSUBF_D
    24U,	// MSUBF_D_MMR6
    24U,	// MSUBF_S
    24U,	// MSUBF_S_MMR6
    24U,	// MSUBR_Q_H
    24U,	// MSUBR_Q_W
    0U,	// MSUBU
    0U,	// MSUBU_DSP
    0U,	// MSUBU_DSP_MM
    0U,	// MSUBU_MM
    24U,	// MSUBV_B
    24U,	// MSUBV_D
    24U,	// MSUBV_H
    24U,	// MSUBV_W
    4672U,	// MSUB_D32
    4672U,	// MSUB_D32_MM
    4672U,	// MSUB_D64
    0U,	// MSUB_DSP
    0U,	// MSUB_DSP_MM
    0U,	// MSUB_MM
    24U,	// MSUB_Q_H
    24U,	// MSUB_Q_W
    4672U,	// MSUB_S
    4672U,	// MSUB_S_MM
    0U,	// MTC0
    0U,	// MTC0_MMR6
    0U,	// MTC1
    0U,	// MTC1_D64
    0U,	// MTC1_D64_MM
    0U,	// MTC1_MM
    0U,	// MTC1_MMR6
    0U,	// MTC2
    0U,	// MTC2_MMR6
    0U,	// MTGC0
    0U,	// MTGC0_MM
    0U,	// MTHC0_MMR6
    0U,	// MTHC1_D32
    0U,	// MTHC1_D32_MM
    0U,	// MTHC1_D64
    0U,	// MTHC1_D64_MM
    0U,	// MTHC2_MMR6
    0U,	// MTHGC0
    0U,	// MTHGC0_MM
    0U,	// MTHI
    0U,	// MTHI64
    0U,	// MTHI_DSP
    0U,	// MTHI_DSP_MM
    0U,	// MTHI_MM
    0U,	// MTHLIP
    0U,	// MTHLIP_MM
    0U,	// MTLO
    0U,	// MTLO64
    0U,	// MTLO_DSP
    0U,	// MTLO_DSP_MM
    0U,	// MTLO_MM
    0U,	// MTM0
    0U,	// MTM1
    0U,	// MTM2
    0U,	// MTP0
    0U,	// MTP1
    0U,	// MTP2
    1U,	// MTTR
    0U,	// MUH
    0U,	// MUHU
    0U,	// MUHU_MMR6
    0U,	// MUH_MMR6
    0U,	// MUL
    0U,	// MULEQ_S_W_PHL
    0U,	// MULEQ_S_W_PHL_MM
    0U,	// MULEQ_S_W_PHR
    0U,	// MULEQ_S_W_PHR_MM
    0U,	// MULEU_S_PH_QBL
    0U,	// MULEU_S_PH_QBL_MM
    0U,	// MULEU_S_PH_QBR
    0U,	// MULEU_S_PH_QBR_MM
    0U,	// MULQ_RS_PH
    0U,	// MULQ_RS_PH_MM
    0U,	// MULQ_RS_W
    0U,	// MULQ_RS_W_MMR2
    0U,	// MULQ_S_PH
    0U,	// MULQ_S_PH_MMR2
    0U,	// MULQ_S_W
    0U,	// MULQ_S_W_MMR2
    0U,	// MULR_Q_H
    0U,	// MULR_Q_W
    0U,	// MULSAQ_S_W_PH
    0U,	// MULSAQ_S_W_PH_MM
    0U,	// MULSA_W_PH
    0U,	// MULSA_W_PH_MMR2
    0U,	// MULT
    0U,	// MULTU_DSP
    0U,	// MULTU_DSP_MM
    0U,	// MULT_DSP
    0U,	// MULT_DSP_MM
    0U,	// MULT_MM
    0U,	// MULTu
    0U,	// MULTu_MM
    0U,	// MULU
    0U,	// MULU_MMR6
    0U,	// MULV_B
    0U,	// MULV_D
    0U,	// MULV_H
    0U,	// MULV_W
    0U,	// MUL_MM
    0U,	// MUL_MMR6
    0U,	// MUL_PH
    0U,	// MUL_PH_MMR2
    0U,	// MUL_Q_H
    0U,	// MUL_Q_W
    0U,	// MUL_R6
    0U,	// MUL_S_PH
    0U,	// MUL_S_PH_MMR2
    0U,	// Mfhi16
    0U,	// Mflo16
    0U,	// Move32R16
    0U,	// MoveR3216
    0U,	// NLOC_B
    0U,	// NLOC_D
    0U,	// NLOC_H
    0U,	// NLOC_W
    0U,	// NLZC_B
    0U,	// NLZC_D
    0U,	// NLZC_H
    0U,	// NLZC_W
    4672U,	// NMADD_D32
    4672U,	// NMADD_D32_MM
    4672U,	// NMADD_D64
    4672U,	// NMADD_S
    4672U,	// NMADD_S_MM
    4672U,	// NMSUB_D32
    4672U,	// NMSUB_D32_MM
    4672U,	// NMSUB_D64
    4672U,	// NMSUB_S
    4672U,	// NMSUB_S_MM
    0U,	// NOR
    0U,	// NOR64
    6U,	// NORI_B
    0U,	// NOR_MM
    0U,	// NOR_MMR6
    0U,	// NOR_V
    0U,	// NOT16_MM
    0U,	// NOT16_MMR6
    0U,	// NegRxRy16
    0U,	// NotRxRy16
    0U,	// OR
    0U,	// OR16_MM
    0U,	// OR16_MMR6
    0U,	// OR64
    6U,	// ORI_B
    8U,	// ORI_MMR6
    0U,	// OR_MM
    0U,	// OR_MMR6
    0U,	// OR_V
    8U,	// ORi
    8U,	// ORi64
    8U,	// ORi_MM
    0U,	// OrRxRxRy16
    0U,	// PACKRL_PH
    0U,	// PACKRL_PH_MM
    0U,	// PAUSE
    0U,	// PAUSE_MM
    0U,	// PAUSE_MMR6
    0U,	// PCKEV_B
    0U,	// PCKEV_D
    0U,	// PCKEV_H
    0U,	// PCKEV_W
    0U,	// PCKOD_B
    0U,	// PCKOD_D
    0U,	// PCKOD_H
    0U,	// PCKOD_W
    0U,	// PCNT_B
    0U,	// PCNT_D
    0U,	// PCNT_H
    0U,	// PCNT_W
    0U,	// PICK_PH
    0U,	// PICK_PH_MM
    0U,	// PICK_QB
    0U,	// PICK_QB_MM
    0U,	// PLL_PS64
    0U,	// PLU_PS64
    0U,	// POP
    0U,	// PRECEQU_PH_QBL
    0U,	// PRECEQU_PH_QBLA
    0U,	// PRECEQU_PH_QBLA_MM
    0U,	// PRECEQU_PH_QBL_MM
    0U,	// PRECEQU_PH_QBR
    0U,	// PRECEQU_PH_QBRA
    0U,	// PRECEQU_PH_QBRA_MM
    0U,	// PRECEQU_PH_QBR_MM
    0U,	// PRECEQ_W_PHL
    0U,	// PRECEQ_W_PHL_MM
    0U,	// PRECEQ_W_PHR
    0U,	// PRECEQ_W_PHR_MM
    0U,	// PRECEU_PH_QBL
    0U,	// PRECEU_PH_QBLA
    0U,	// PRECEU_PH_QBLA_MM
    0U,	// PRECEU_PH_QBL_MM
    0U,	// PRECEU_PH_QBR
    0U,	// PRECEU_PH_QBRA
    0U,	// PRECEU_PH_QBRA_MM
    0U,	// PRECEU_PH_QBR_MM
    0U,	// PRECRQU_S_QB_PH
    0U,	// PRECRQU_S_QB_PH_MM
    0U,	// PRECRQ_PH_W
    0U,	// PRECRQ_PH_W_MM
    0U,	// PRECRQ_QB_PH
    0U,	// PRECRQ_QB_PH_MM
    0U,	// PRECRQ_RS_PH_W
    0U,	// PRECRQ_RS_PH_W_MM
    0U,	// PRECR_QB_PH
    0U,	// PRECR_QB_PH_MMR2
    4U,	// PRECR_SRA_PH_W
    4U,	// PRECR_SRA_PH_W_MMR2
    4U,	// PRECR_SRA_R_PH_W
    4U,	// PRECR_SRA_R_PH_W_MMR2
    0U,	// PREF
    0U,	// PREFE
    0U,	// PREFE_MM
    0U,	// PREFX_MM
    0U,	// PREF_MM
    0U,	// PREF_MMR6
    0U,	// PREF_R6
    4U,	// PREPEND
    4U,	// PREPEND_MMR2
    0U,	// RADDU_W_QB
    0U,	// RADDU_W_QB_MM
    0U,	// RDDSP
    0U,	// RDDSP_MM
    6U,	// RDHWR
    6U,	// RDHWR64
    6U,	// RDHWR_MM
    2U,	// RDHWR_MMR6
    0U,	// RDPGPR_MMR6
    0U,	// RECIP_D32
    0U,	// RECIP_D32_MM
    0U,	// RECIP_D64
    0U,	// RECIP_D64_MM
    0U,	// RECIP_S
    0U,	// RECIP_S_MM
    0U,	// REPLV_PH
    0U,	// REPLV_PH_MM
    0U,	// REPLV_QB
    0U,	// REPLV_QB_MM
    0U,	// REPL_PH
    0U,	// REPL_PH_MM
    0U,	// REPL_QB
    0U,	// REPL_QB_MM
    0U,	// RINT_D
    0U,	// RINT_D_MMR6
    0U,	// RINT_S
    0U,	// RINT_S_MMR6
    4U,	// ROTR
    0U,	// ROTRV
    0U,	// ROTRV_MM
    4U,	// ROTR_MM
    0U,	// ROUND_L_D64
    0U,	// ROUND_L_D_MMR6
    0U,	// ROUND_L_S
    0U,	// ROUND_L_S_MMR6
    0U,	// ROUND_W_D32
    0U,	// ROUND_W_D64
    0U,	// ROUND_W_D_MMR6
    0U,	// ROUND_W_MM
    0U,	// ROUND_W_S
    0U,	// ROUND_W_S_MM
    0U,	// ROUND_W_S_MMR6
    0U,	// RSQRT_D32
    0U,	// RSQRT_D32_MM
    0U,	// RSQRT_D64
    0U,	// RSQRT_D64_MM
    0U,	// RSQRT_S
    0U,	// RSQRT_S_MM
    0U,	// Restore16
    0U,	// RestoreX16
    0U,	// SAA
    0U,	// SAAD
    2U,	// SAT_S_B
    12U,	// SAT_S_D
    14U,	// SAT_S_H
    4U,	// SAT_S_W
    2U,	// SAT_U_B
    12U,	// SAT_U_D
    14U,	// SAT_U_H
    4U,	// SAT_U_W
    0U,	// SB
    0U,	// SB16_MM
    0U,	// SB16_MMR6
    0U,	// SB64
    0U,	// SBE
    0U,	// SBE_MM
    0U,	// SB_MM
    0U,	// SB_MMR6
    0U,	// SC
    0U,	// SC64
    0U,	// SC64_R6
    0U,	// SCD
    0U,	// SCD_R6
    0U,	// SCE
    0U,	// SCE_MM
    0U,	// SC_MM
    0U,	// SC_MMR6
    0U,	// SC_R6
    0U,	// SD
    0U,	// SDBBP
    0U,	// SDBBP16_MM
    0U,	// SDBBP16_MMR6
    0U,	// SDBBP_MM
    0U,	// SDBBP_MMR6
    0U,	// SDBBP_R6
    0U,	// SDC1
    0U,	// SDC164
    0U,	// SDC1_D64_MMR6
    0U,	// SDC1_MM
    0U,	// SDC2
    0U,	// SDC2_MMR6
    0U,	// SDC2_R6
    0U,	// SDC3
    0U,	// SDIV
    0U,	// SDIV_MM
    0U,	// SDL
    0U,	// SDR
    0U,	// SDXC1
    0U,	// SDXC164
    0U,	// SEB
    0U,	// SEB64
    0U,	// SEB_MM
    0U,	// SEH
    0U,	// SEH64
    0U,	// SEH_MM
    0U,	// SELEQZ
    0U,	// SELEQZ64
    0U,	// SELEQZ_D
    0U,	// SELEQZ_D_MMR6
    0U,	// SELEQZ_MMR6
    0U,	// SELEQZ_S
    0U,	// SELEQZ_S_MMR6
    0U,	// SELNEZ
    0U,	// SELNEZ64
    0U,	// SELNEZ_D
    0U,	// SELNEZ_D_MMR6
    0U,	// SELNEZ_MMR6
    0U,	// SELNEZ_S
    0U,	// SELNEZ_S_MMR6
    24U,	// SEL_D
    24U,	// SEL_D_MMR6
    24U,	// SEL_S
    24U,	// SEL_S_MMR6
    0U,	// SEQ
    0U,	// SEQi
    0U,	// SH
    0U,	// SH16_MM
    0U,	// SH16_MMR6
    0U,	// SH64
    0U,	// SHE
    0U,	// SHE_MM
    6U,	// SHF_B
    6U,	// SHF_H
    6U,	// SHF_W
    0U,	// SHILO
    0U,	// SHILOV
    0U,	// SHILOV_MM
    0U,	// SHILO_MM
    0U,	// SHLLV_PH
    0U,	// SHLLV_PH_MM
    0U,	// SHLLV_QB
    0U,	// SHLLV_QB_MM
    0U,	// SHLLV_S_PH
    0U,	// SHLLV_S_PH_MM
    0U,	// SHLLV_S_W
    0U,	// SHLLV_S_W_MM
    14U,	// SHLL_PH
    14U,	// SHLL_PH_MM
    2U,	// SHLL_QB
    2U,	// SHLL_QB_MM
    14U,	// SHLL_S_PH
    14U,	// SHLL_S_PH_MM
    4U,	// SHLL_S_W
    4U,	// SHLL_S_W_MM
    0U,	// SHRAV_PH
    0U,	// SHRAV_PH_MM
    0U,	// SHRAV_QB
    0U,	// SHRAV_QB_MMR2
    0U,	// SHRAV_R_PH
    0U,	// SHRAV_R_PH_MM
    0U,	// SHRAV_R_QB
    0U,	// SHRAV_R_QB_MMR2
    0U,	// SHRAV_R_W
    0U,	// SHRAV_R_W_MM
    14U,	// SHRA_PH
    14U,	// SHRA_PH_MM
    2U,	// SHRA_QB
    2U,	// SHRA_QB_MMR2
    14U,	// SHRA_R_PH
    14U,	// SHRA_R_PH_MM
    2U,	// SHRA_R_QB
    2U,	// SHRA_R_QB_MMR2
    4U,	// SHRA_R_W
    4U,	// SHRA_R_W_MM
    0U,	// SHRLV_PH
    0U,	// SHRLV_PH_MMR2
    0U,	// SHRLV_QB
    0U,	// SHRLV_QB_MM
    14U,	// SHRL_PH
    14U,	// SHRL_PH_MMR2
    2U,	// SHRL_QB
    2U,	// SHRL_QB_MM
    0U,	// SH_MM
    0U,	// SH_MMR6
    0U,	// SIGRIE
    0U,	// SIGRIE_MMR6
    148U,	// SLDI_B
    34U,	// SLDI_D
    144U,	// SLDI_H
    36U,	// SLDI_W
    152U,	// SLD_B
    152U,	// SLD_D
    152U,	// SLD_H
    152U,	// SLD_W
    4U,	// SLL
    0U,	// SLL16_MM
    0U,	// SLL16_MMR6
    1U,	// SLL64_32
    1U,	// SLL64_64
    2U,	// SLLI_B
    12U,	// SLLI_D
    14U,	// SLLI_H
    4U,	// SLLI_W
    0U,	// SLLV
    0U,	// SLLV_MM
    0U,	// SLL_B
    0U,	// SLL_D
    0U,	// SLL_H
    4U,	// SLL_MM
    4U,	// SLL_MMR6
    0U,	// SLL_W
    0U,	// SLT
    0U,	// SLT64
    0U,	// SLT_MM
    0U,	// SLTi
    0U,	// SLTi64
    0U,	// SLTi_MM
    0U,	// SLTiu
    0U,	// SLTiu64
    0U,	// SLTiu_MM
    0U,	// SLTu
    0U,	// SLTu64
    0U,	// SLTu_MM
    0U,	// SNE
    0U,	// SNEi
    142U,	// SPLATI_B
    156U,	// SPLATI_D
    130U,	// SPLATI_H
    138U,	// SPLATI_W
    128U,	// SPLAT_B
    128U,	// SPLAT_D
    128U,	// SPLAT_H
    128U,	// SPLAT_W
    4U,	// SRA
    2U,	// SRAI_B
    12U,	// SRAI_D
    14U,	// SRAI_H
    4U,	// SRAI_W
    2U,	// SRARI_B
    12U,	// SRARI_D
    14U,	// SRARI_H
    4U,	// SRARI_W
    0U,	// SRAR_B
    0U,	// SRAR_D
    0U,	// SRAR_H
    0U,	// SRAR_W
    0U,	// SRAV
    0U,	// SRAV_MM
    0U,	// SRA_B
    0U,	// SRA_D
    0U,	// SRA_H
    4U,	// SRA_MM
    0U,	// SRA_W
    4U,	// SRL
    0U,	// SRL16_MM
    0U,	// SRL16_MMR6
    2U,	// SRLI_B
    12U,	// SRLI_D
    14U,	// SRLI_H
    4U,	// SRLI_W
    2U,	// SRLRI_B
    12U,	// SRLRI_D
    14U,	// SRLRI_H
    4U,	// SRLRI_W
    0U,	// SRLR_B
    0U,	// SRLR_D
    0U,	// SRLR_H
    0U,	// SRLR_W
    0U,	// SRLV
    0U,	// SRLV_MM
    0U,	// SRL_B
    0U,	// SRL_D
    0U,	// SRL_H
    4U,	// SRL_MM
    0U,	// SRL_W
    0U,	// SSNOP
    0U,	// SSNOP_MM
    0U,	// SSNOP_MMR6
    0U,	// ST_B
    0U,	// ST_D
    0U,	// ST_H
    0U,	// ST_W
    0U,	// SUB
    0U,	// SUBQH_PH
    0U,	// SUBQH_PH_MMR2
    0U,	// SUBQH_R_PH
    0U,	// SUBQH_R_PH_MMR2
    0U,	// SUBQH_R_W
    0U,	// SUBQH_R_W_MMR2
    0U,	// SUBQH_W
    0U,	// SUBQH_W_MMR2
    0U,	// SUBQ_PH
    0U,	// SUBQ_PH_MM
    0U,	// SUBQ_S_PH
    0U,	// SUBQ_S_PH_MM
    0U,	// SUBQ_S_W
    0U,	// SUBQ_S_W_MM
    0U,	// SUBSUS_U_B
    0U,	// SUBSUS_U_D
    0U,	// SUBSUS_U_H
    0U,	// SUBSUS_U_W
    0U,	// SUBSUU_S_B
    0U,	// SUBSUU_S_D
    0U,	// SUBSUU_S_H
    0U,	// SUBSUU_S_W
    0U,	// SUBS_S_B
    0U,	// SUBS_S_D
    0U,	// SUBS_S_H
    0U,	// SUBS_S_W
    0U,	// SUBS_U_B
    0U,	// SUBS_U_D
    0U,	// SUBS_U_H
    0U,	// SUBS_U_W
    0U,	// SUBU16_MM
    0U,	// SUBU16_MMR6
    0U,	// SUBUH_QB
    0U,	// SUBUH_QB_MMR2
    0U,	// SUBUH_R_QB
    0U,	// SUBUH_R_QB_MMR2
    0U,	// SUBU_MMR6
    0U,	// SUBU_PH
    0U,	// SUBU_PH_MMR2
    0U,	// SUBU_QB
    0U,	// SUBU_QB_MM
    0U,	// SUBU_S_PH
    0U,	// SUBU_S_PH_MMR2
    0U,	// SUBU_S_QB
    0U,	// SUBU_S_QB_MM
    4U,	// SUBVI_B
    4U,	// SUBVI_D
    4U,	// SUBVI_H
    4U,	// SUBVI_W
    0U,	// SUBV_B
    0U,	// SUBV_D
    0U,	// SUBV_H
    0U,	// SUBV_W
    0U,	// SUB_MM
    0U,	// SUB_MMR6
    0U,	// SUBu
    0U,	// SUBu_MM
    0U,	// SUXC1
    0U,	// SUXC164
    0U,	// SUXC1_MM
    0U,	// SW
    0U,	// SW16_MM
    0U,	// SW16_MMR6
    0U,	// SW64
    0U,	// SWC1
    0U,	// SWC1_MM
    0U,	// SWC2
    0U,	// SWC2_MMR6
    0U,	// SWC2_R6
    0U,	// SWC3
    0U,	// SWDSP
    0U,	// SWDSP_MM
    0U,	// SWE
    0U,	// SWE_MM
    0U,	// SWL
    0U,	// SWL64
    0U,	// SWLE
    0U,	// SWLE_MM
    0U,	// SWL_MM
    0U,	// SWM16_MM
    0U,	// SWM16_MMR6
    0U,	// SWM32_MM
    0U,	// SWP_MM
    0U,	// SWR
    0U,	// SWR64
    0U,	// SWRE
    0U,	// SWRE_MM
    0U,	// SWR_MM
    0U,	// SWSP_MM
    0U,	// SWSP_MMR6
    0U,	// SWXC1
    0U,	// SWXC1_MM
    0U,	// SW_MM
    0U,	// SW_MMR6
    0U,	// SYNC
    0U,	// SYNCI
    0U,	// SYNCI_MM
    0U,	// SYNCI_MMR6
    0U,	// SYNC_MM
    0U,	// SYNC_MMR6
    0U,	// SYSCALL
    0U,	// SYSCALL_MM
    0U,	// Save16
    0U,	// SaveX16
    0U,	// SbRxRyOffMemX16
    0U,	// SebRx16
    0U,	// SehRx16
    0U,	// ShRxRyOffMemX16
    4U,	// SllX16
    0U,	// SllvRxRy16
    0U,	// SltRxRy16
    0U,	// SltiRxImm16
    0U,	// SltiRxImmX16
    0U,	// SltiuRxImm16
    0U,	// SltiuRxImmX16
    0U,	// SltuRxRy16
    4U,	// SraX16
    0U,	// SravRxRy16
    4U,	// SrlX16
    0U,	// SrlvRxRy16
    0U,	// SubuRxRyRz16
    0U,	// SwRxRyOffMemX16
    0U,	// SwRxSpImmX16
    38U,	// TEQ
    0U,	// TEQI
    0U,	// TEQI_MM
    14U,	// TEQ_MM
    38U,	// TGE
    0U,	// TGEI
    0U,	// TGEIU
    0U,	// TGEIU_MM
    0U,	// TGEI_MM
    38U,	// TGEU
    14U,	// TGEU_MM
    14U,	// TGE_MM
    0U,	// TLBGINV
    0U,	// TLBGINVF
    0U,	// TLBGINVF_MM
    0U,	// TLBGINV_MM
    0U,	// TLBGP
    0U,	// TLBGP_MM
    0U,	// TLBGR
    0U,	// TLBGR_MM
    0U,	// TLBGWI
    0U,	// TLBGWI_MM
    0U,	// TLBGWR
    0U,	// TLBGWR_MM
    0U,	// TLBINV
    0U,	// TLBINVF
    0U,	// TLBINVF_MMR6
    0U,	// TLBINV_MMR6
    0U,	// TLBP
    0U,	// TLBP_MM
    0U,	// TLBR
    0U,	// TLBR_MM
    0U,	// TLBWI
    0U,	// TLBWI_MM
    0U,	// TLBWR
    0U,	// TLBWR_MM
    38U,	// TLT
    0U,	// TLTI
    0U,	// TLTIU_MM
    0U,	// TLTI_MM
    38U,	// TLTU
    14U,	// TLTU_MM
    14U,	// TLT_MM
    38U,	// TNE
    0U,	// TNEI
    0U,	// TNEI_MM
    14U,	// TNE_MM
    0U,	// TRUNC_L_D64
    0U,	// TRUNC_L_D_MMR6
    0U,	// TRUNC_L_S
    0U,	// TRUNC_L_S_MMR6
    0U,	// TRUNC_W_D32
    0U,	// TRUNC_W_D64
    0U,	// TRUNC_W_D_MMR6
    0U,	// TRUNC_W_MM
    0U,	// TRUNC_W_S
    0U,	// TRUNC_W_S_MM
    0U,	// TRUNC_W_S_MMR6
    0U,	// TTLTIU
    0U,	// UDIV
    0U,	// UDIV_MM
    0U,	// V3MULU
    0U,	// VMM0
    0U,	// VMULU
    24U,	// VSHF_B
    24U,	// VSHF_D
    24U,	// VSHF_H
    24U,	// VSHF_W
    0U,	// WAIT
    0U,	// WAIT_MM
    0U,	// WAIT_MMR6
    0U,	// WRDSP
    0U,	// WRDSP_MM
    0U,	// WRPGPR_MMR6
    0U,	// WSBH
    0U,	// WSBH_MM
    0U,	// WSBH_MMR6
    0U,	// XOR
    0U,	// XOR16_MM
    0U,	// XOR16_MMR6
    0U,	// XOR64
    6U,	// XORI_B
    8U,	// XORI_MMR6
    0U,	// XOR_MM
    0U,	// XOR_MMR6
    0U,	// XOR_V
    8U,	// XORi
    8U,	// XORi64
    8U,	// XORi_MM
    0U,	// XorRxRxRy16
    0U,	// YIELD
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 16383)-1;


  // Fragment 0 encoded into 4 bits for 15 unique commands.
  switch ((Bits >> 14) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_END, FENTRY_CAL...
    return;
    break;
  case 1:
    // ABSMacro, BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BG...
    printOperand(MI, 0, O);
    break;
  case 2:
    // CTTC1, MTTACX, MTTC0, MTTC1, MTTGPR, MTTHC1, MTTHI, MTTLO, MultRxRyRz1...
    printOperand(MI, 1, O);
    O << ", ";
    break;
  case 3:
    // LWM_MM, SWM_MM, LWM16_MM, LWM16_MMR6, LWM32_MM, SWM16_MM, SWM16_MMR6, ...
    printRegisterList(MI, 0, O);
    O << ", ";
    printMemOperand(MI, 1, O);
    return;
    break;
  case 4:
    // SelBeqZ, SelBneZ, SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZ...
    printOperand(MI, 3, O);
    break;
  case 5:
    // AND16_MM, AND16_MMR6, LSA_MMR6, MTHC1_D32, MTHC1_D32_MM, MTHC1_D64, MT...
    printOperand(MI, 2, O);
    O << ", ";
    break;
  case 6:
    // BREAK, BREAK_MM, BREAK_MMR6, HYPCALL, HYPCALL_MM, SDBBP_MM, SYSCALL_MM...
    printUImm<10>(MI, 0, O);
    break;
  case 7:
    // BREAK16_MM, BREAK16_MMR6, SDBBP16_MM, SDBBP16_MMR6
    printUImm<4>(MI, 0, O);
    return;
    break;
  case 8:
    // CACHE, CACHEE, CACHEE_MM, CACHE_MM, CACHE_MMR6, CACHE_R6, PREF, PREFE,...
    printUImm<5>(MI, 2, O);
    O << ", ";
    break;
  case 9:
    // FCMP_D32, FCMP_D32_MM, FCMP_D64, FCMP_S32, FCMP_S32_MM
    printFCCOperand(MI, 2, O);
    break;
  case 10:
    // Jal16, JalB16
    printUImm<26>(MI, 0, O);
    break;
  case 11:
    // SDBBP, SDBBP_MMR6, SDBBP_R6, SYSCALL
    printUImm<20>(MI, 0, O);
    return;
    break;
  case 12:
    // SIGRIE, SIGRIE_MMR6
    printUImm<16>(MI, 0, O);
    return;
    break;
  case 13:
    // SYNC, SYNC_MM, SYNC_MMR6
    printUImm<5>(MI, 0, O);
    return;
    break;
  case 14:
    // SYNCI, SYNCI_MM, SYNCI_MMR6
    printMemOperand(MI, 0, O);
    return;
    break;
  }


  // Fragment 1 encoded into 5 bits for 18 unique commands.
  switch ((Bits >> 18) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABSMacro, BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BG...
    O << ", ";
    break;
  case 1:
    // B_MMR6_Pseudo, B_MM_Pseudo, Constant32, JalOneReg, MFTDSP, MTTDSP, ADD...
    return;
    break;
  case 2:
    // CTTC1, MTTACX, MTTC0, MTTC1, MTTGPR, MTTHC1, MTTHI, MTTLO, CTC1, CTC1_...
    printOperand(MI, 0, O);
    break;
  case 3:
    // LwConstant32
    O << ", 1f\n\tb\t2f\n\t.align\t2\n1: \t.word\t";
    printOperand(MI, 1, O);
    O << "\n2:";
    return;
    break;
  case 4:
    // MultRxRyRz16, MultuRxRyRz16, SltCCRxRy16, SltiCCRxImmX16, SltiuCCRxImm...
    printOperand(MI, 2, O);
    break;
  case 5:
    // SelBeqZ, SelBneZ
    O << ", .+4\n\t\n\tmove ";
    printOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 6:
    // AND16_MM, AND16_MMR6, LSA_MMR6, OR16_MM, OR16_MMR6, PREFX_MM, XOR16_MM...
    printOperand(MI, 1, O);
    break;
  case 7:
    // AddiuRxPcImmX16
    O << ", $pc, ";
    printOperand(MI, 1, O);
    return;
    break;
  case 8:
    // AddiuSpImm16, Bimm16
    O << " # 16 bit inst";
    return;
    break;
  case 9:
    // Bteqz16, Btnez16
    O << "  # 16 bit inst";
    return;
    break;
  case 10:
    // CACHE, CACHEE, CACHEE_MM, CACHE_MM, CACHE_MMR6, CACHE_R6, PREF, PREFE,...
    printMemOperand(MI, 0, O);
    return;
    break;
  case 11:
    // FCMP_D32, FCMP_D32_MM, FCMP_D64
    O << ".d\t";
    printOperand(MI, 0, O);
    O << ", ";
    printOperand(MI, 1, O);
    return;
    break;
  case 12:
    // FCMP_S32, FCMP_S32_MM
    O << ".s\t";
    printOperand(MI, 0, O);
    O << ", ";
    printOperand(MI, 1, O);
    return;
    break;
  case 13:
    // INSERT_B, INSERT_D, INSERT_H, INSERT_W, INSVE_B, INSVE_D, INSVE_H, INS...
    O << '[';
    break;
  case 14:
    // Jal16
    O << "\n\tnop";
    return;
    break;
  case 15:
    // JalB16
    O << "\t# branch\n\tnop";
    return;
    break;
  case 16:
    // SAA, SAAD
    O << ", (";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 17:
    // SC, SC64, SC64_R6, SCD, SCD_R6, SCE, SCE_MM, SC_MM, SC_MMR6, SC_R6
    printMemOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 25 unique commands.
  switch ((Bits >> 23) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABSMacro, BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BG...
    printOperand(MI, 1, O);
    break;
  case 1:
    // CTTC1, MTTACX, MTTC1, MTTGPR, MTTHC1, MTTHI, MTTLO, ADDIUS5_MM, AND16_...
    return;
    break;
  case 2:
    // GotPrologue16, AddiuRxRxImm16, AddiuRxRxImmX16, AndRxRxRy16, BINSLI_B,...
    printOperand(MI, 2, O);
    break;
  case 3:
    // LDMacro, LOAD_ACC128, LOAD_ACC64, LOAD_ACC64DSP, LOAD_CCOND_DSP, LoadA...
    printMemOperand(MI, 1, O);
    return;
    break;
  case 4:
    // MTTC0, DMTC0, DMTC2, DMTGC0, FORK, LSA_MMR6, MTC0, MTC0_MMR6, MTC2, MT...
    O << ", ";
    break;
  case 5:
    // MultRxRyRz16, MultuRxRyRz16
    O << "\n\tmflo\t";
    printOperand(MI, 0, O);
    return;
    break;
  case 6:
    // SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZSlti, SelTBteqZSlt...
    printOperand(MI, 4, O);
    break;
  case 7:
    // SltCCRxRy16, SltiCCRxImmX16, SltiuCCRxImmX16, SltuCCRxRy16, SltuRxRyRz...
    O << "\n\tmove\t";
    printOperand(MI, 0, O);
    O << ", $t8";
    return;
    break;
  case 8:
    // AddiuRxRyOffMemX16, LEA_ADDiu, LEA_ADDiu64, LEA_ADDiu_MM
    printMemOperandEA(MI, 1, O);
    return;
    break;
  case 9:
    // BBIT0, BBIT032, BBIT1, BBIT132
    printUImm<5>(MI, 1, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 10:
    // BREAK, BREAK_MM, BREAK_MMR6, RDDSP, WRDSP
    printUImm<10>(MI, 1, O);
    return;
    break;
  case 11:
    // DMFC2_OCTEON, DMTC2_OCTEON, LUI_MMR6, LUi, LUi64, LUi_MM
    printUImm<16>(MI, 1, O);
    return;
    break;
  case 12:
    // GINVT, GINVT_MMR6
    printUImm<2>(MI, 1, O);
    return;
    break;
  case 13:
    // INSERT_B
    printUImm<4>(MI, 3, O);
    O << "], ";
    printOperand(MI, 2, O);
    return;
    break;
  case 14:
    // INSERT_D
    printUImm<1>(MI, 3, O);
    O << "], ";
    printOperand(MI, 2, O);
    return;
    break;
  case 15:
    // INSERT_H
    printUImm<3>(MI, 3, O);
    O << "], ";
    printOperand(MI, 2, O);
    return;
    break;
  case 16:
    // INSERT_W
    printUImm<2>(MI, 3, O);
    O << "], ";
    printOperand(MI, 2, O);
    return;
    break;
  case 17:
    // INSVE_B
    printUImm<4>(MI, 2, O);
    O << "], ";
    printOperand(MI, 3, O);
    O << '[';
    printUImm<0>(MI, 4, O);
    O << ']';
    return;
    break;
  case 18:
    // INSVE_D
    printUImm<1>(MI, 2, O);
    O << "], ";
    printOperand(MI, 3, O);
    O << '[';
    printUImm<0>(MI, 4, O);
    O << ']';
    return;
    break;
  case 19:
    // INSVE_H
    printUImm<3>(MI, 2, O);
    O << "], ";
    printOperand(MI, 3, O);
    O << '[';
    printUImm<0>(MI, 4, O);
    O << ']';
    return;
    break;
  case 20:
    // INSVE_W
    printUImm<2>(MI, 2, O);
    O << "], ";
    printOperand(MI, 3, O);
    O << '[';
    printUImm<0>(MI, 4, O);
    O << ']';
    return;
    break;
  case 21:
    // LWP_MM, SWP_MM
    printMemOperand(MI, 2, O);
    return;
    break;
  case 22:
    // PREFX_MM
    O << '(';
    printOperand(MI, 0, O);
    O << ')';
    return;
    break;
  case 23:
    // RDDSP_MM, WRDSP_MM
    printUImm<7>(MI, 1, O);
    return;
    break;
  case 24:
    // REPL_QB, REPL_QB_MM
    printUImm<8>(MI, 1, O);
    return;
    break;
  }


  // Fragment 3 encoded into 5 bits for 18 unique commands.
  switch ((Bits >> 28) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABSMacro, CFTC1, JalTwoReg, LoadAddrImm32, LoadAddrImm64, LoadImm32, L...
    return;
    break;
  case 1:
    // BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BGEUImmMacro...
    O << ", ";
    break;
  case 2:
    // BteqzT8CmpX16, BteqzT8CmpiX16, BteqzT8SltX16, BteqzT8SltiX16, BteqzT8S...
    O << "\n\tbteqz\t";
    printOperand(MI, 2, O);
    return;
    break;
  case 3:
    // BtnezT8CmpX16, BtnezT8CmpiX16, BtnezT8SltX16, BtnezT8SltiX16, BtnezT8S...
    O << "\n\tbtnez\t";
    printOperand(MI, 2, O);
    return;
    break;
  case 4:
    // GotPrologue16
    O << "\n\taddiu\t";
    printOperand(MI, 1, O);
    O << ", $pc, ";
    printOperand(MI, 3, O);
    O << "\n ";
    return;
    break;
  case 5:
    // MTTC0, DMTC0, DMTC2, DMTGC0, MTC0, MTC0_MMR6, MTC2, MTGC0, MTGC0_MM, M...
    printUImm<3>(MI, 2, O);
    return;
    break;
  case 6:
    // SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZSlti, SelTBteqZSlt...
    O << "\n\tbteqz\t.+4\n\tmove ";
    printOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 7:
    // SelTBtneZCmp, SelTBtneZCmpi, SelTBtneZSlt, SelTBtneZSlti, SelTBtneZSlt...
    O << "\n\tbtnez\t.+4\n\tmove ";
    printOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 8:
    // AddiuRxRxImm16, LwRxPcTcp16
    O << "\t# 16 bit inst";
    return;
    break;
  case 9:
    // BeqzRxImm16, BnezRxImm16
    O << "  # 16 bit inst";
    return;
    break;
  case 10:
    // COPY_S_B, COPY_S_D, COPY_S_H, COPY_S_W, COPY_U_B, COPY_U_H, COPY_U_W, ...
    O << '[';
    break;
  case 11:
    // CmpiRxImm16, LiRxImm16, SltiRxImm16, SltiuRxImm16
    O << " \t# 16 bit inst";
    return;
    break;
  case 12:
    // DSLL64_32
    O << ", 32";
    return;
    break;
  case 13:
    // FORK
    printOperand(MI, 2, O);
    return;
    break;
  case 14:
    // LBUX, LBUX_MM, LDXC1, LDXC164, LHX, LHX_MM, LUXC1, LUXC164, LUXC1_MM, ...
    O << '(';
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 15:
    // LSA_MMR6
    printOperand(MI, 0, O);
    O << ", ";
    printUImm<2, 1>(MI, 3, O);
    return;
    break;
  case 16:
    // MTTR
    printUImm<1>(MI, 2, O);
    O << ", ";
    printUImm<3>(MI, 3, O);
    O << ", ";
    printUImm<1>(MI, 4, O);
    return;
    break;
  case 17:
    // SLL64_32, SLL64_64
    O << ", 0";
    return;
    break;
  }


  // Fragment 4 encoded into 5 bits for 20 unique commands.
  switch ((Bits >> 33) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BGEUImmMacro...
    printOperand(MI, 2, O);
    break;
  case 1:
    // MFTC0, BCLRI_B, BNEGI_B, BSETI_B, COPY_S_H, COPY_U_H, DMFC0, DMFC2, DM...
    printUImm<3>(MI, 2, O);
    break;
  case 2:
    // ADDVI_B, ADDVI_D, ADDVI_H, ADDVI_W, APPEND, APPEND_MMR2, BCLRI_W, BNEG...
    printUImm<5>(MI, 2, O);
    break;
  case 3:
    // ANDI_B, NORI_B, ORI_B, RDHWR, RDHWR64, RDHWR_MM, SHF_B, SHF_H, SHF_W, ...
    printUImm<8>(MI, 2, O);
    return;
    break;
  case 4:
    // ANDI_MMR6, ANDi, ANDi64, ANDi_MM, AUI, AUI_MMR6, DAHI, DATI, DAUI, ORI...
    printUImm<16>(MI, 2, O);
    return;
    break;
  case 5:
    // BALIGN, BALIGN_MMR2, COPY_S_W, COPY_U_W, SPLATI_W
    printUImm<2>(MI, 2, O);
    break;
  case 6:
    // BCLRI_D, BNEGI_D, BSETI_D, DEXT, DEXT64_32, DINS, DROTR, DSLL, DSRA, D...
    printUImm<6>(MI, 2, O);
    break;
  case 7:
    // BCLRI_H, BNEGI_H, BSETI_H, COPY_S_B, COPY_U_B, SAT_S_H, SAT_U_H, SHLL_...
    printUImm<4>(MI, 2, O);
    break;
  case 8:
    // BINSLI_B, BINSRI_B, SLDI_H
    printUImm<3>(MI, 3, O);
    break;
  case 9:
    // BINSLI_D, BINSRI_D
    printUImm<6>(MI, 3, O);
    return;
    break;
  case 10:
    // BINSLI_H, BINSRI_H, SLDI_B
    printUImm<4>(MI, 3, O);
    break;
  case 11:
    // BINSLI_W, BINSRI_W
    printUImm<5>(MI, 3, O);
    return;
    break;
  case 12:
    // BINSL_B, BINSL_D, BINSL_H, BINSL_W, BINSR_B, BINSR_D, BINSR_H, BINSR_W...
    printOperand(MI, 3, O);
    break;
  case 13:
    // BMNZI_B, BMZI_B, BSELI_B
    printUImm<8>(MI, 3, O);
    return;
    break;
  case 14:
    // COPY_S_D, MFTR, SPLATI_D
    printUImm<1>(MI, 2, O);
    break;
  case 15:
    // DEXTU, DINSU
    printUImm<5, 32>(MI, 2, O);
    O << ", ";
    break;
  case 16:
    // FADD_S_MMR6, FDIV_S_MMR6, FMUL_S_MMR6, FSUB_S_MMR6
    printOperand(MI, 1, O);
    return;
    break;
  case 17:
    // SLDI_D
    printUImm<1>(MI, 3, O);
    O << ']';
    return;
    break;
  case 18:
    // SLDI_W
    printUImm<2>(MI, 3, O);
    O << ']';
    return;
    break;
  case 19:
    // TEQ, TGE, TGEU, TLT, TLTU, TNE
    printUImm<10>(MI, 2, O);
    return;
    break;
  }


  // Fragment 5 encoded into 3 bits for 5 unique commands.
  switch ((Bits >> 38) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BGEUImmMacro...
    return;
    break;
  case 1:
    // ALIGN, ALIGN_MMR6, CINS, CINS32, CINS64_32, CINS_i32, DALIGN, DEXT, DE...
    O << ", ";
    break;
  case 2:
    // COPY_S_B, COPY_S_D, COPY_S_H, COPY_S_W, COPY_U_B, COPY_U_H, COPY_U_W, ...
    O << ']';
    return;
    break;
  case 3:
    // DEXTU
    printUImm<5, 1>(MI, 3, O);
    return;
    break;
  case 4:
    // DINSU
    printUImm<6>(MI, 3, O);
    return;
    break;
  }


  // Fragment 6 encoded into 4 bits for 10 unique commands.
  switch ((Bits >> 41) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ALIGN, ALIGN_MMR6
    printUImm<2>(MI, 3, O);
    return;
    break;
  case 1:
    // CINS, CINS32, CINS64_32, CINS_i32, EXTS, EXTS32
    printUImm<5>(MI, 3, O);
    return;
    break;
  case 2:
    // DALIGN, MFTR
    printUImm<3>(MI, 3, O);
    break;
  case 3:
    // DEXT
    printUImm<6, 1>(MI, 3, O);
    return;
    break;
  case 4:
    // DEXT64_32, EXT, EXT_MM, EXT_MMR6
    printUImm<5, 1>(MI, 3, O);
    return;
    break;
  case 5:
    // DEXTM
    printUImm<5, 33>(MI, 3, O);
    return;
    break;
  case 6:
    // DINS, INS, INS_MM, INS_MMR6
    printUImm<6>(MI, 3, O);
    return;
    break;
  case 7:
    // DINSM
    printUImm<6, 2>(MI, 3, O);
    return;
    break;
  case 8:
    // DLSA, DLSA_R6, LSA, LSA_R6
    printUImm<2, 1>(MI, 3, O);
    return;
    break;
  case 9:
    // MADD_D32, MADD_D32_MM, MADD_D64, MADD_S, MADD_S_MM, MOVEP_MM, MOVEP_MM...
    printOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 45) & 1) {
    // MFTR
    O << ", ";
    printUImm<1>(MI, 4, O);
    return;
  } else {
    // DALIGN
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *MipsInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 442 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ 'f', '1', '0', 0,
  /* 4 */ 'w', '1', '0', 0,
  /* 8 */ 'f', '2', '0', 0,
  /* 12 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '0', 0,
  /* 25 */ 'w', '2', '0', 0,
  /* 29 */ 'f', '3', '0', 0,
  /* 33 */ 'w', '3', '0', 0,
  /* 37 */ 'a', 'c', '0', 0,
  /* 41 */ 'f', 'c', 'c', '0', 0,
  /* 46 */ 'f', '0', 0,
  /* 49 */ 'm', 'p', 'l', '0', 0,
  /* 54 */ 'p', '0', 0,
  /* 57 */ 'w', '0', 0,
  /* 60 */ 'f', '1', '1', 0,
  /* 64 */ 'w', '1', '1', 0,
  /* 68 */ 'f', '2', '1', 0,
  /* 72 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '1', 0,
  /* 85 */ 'w', '2', '1', 0,
  /* 89 */ 'f', '3', '1', 0,
  /* 93 */ 'w', '3', '1', 0,
  /* 97 */ 'a', 'c', '1', 0,
  /* 101 */ 'f', 'c', 'c', '1', 0,
  /* 106 */ 'f', '1', 0,
  /* 109 */ 'm', 'p', 'l', '1', 0,
  /* 114 */ 'p', '1', 0,
  /* 117 */ 'w', '1', 0,
  /* 120 */ 'f', '1', '2', 0,
  /* 124 */ 'w', '1', '2', 0,
  /* 128 */ 'f', '2', '2', 0,
  /* 132 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '2', 0,
  /* 145 */ 'w', '2', '2', 0,
  /* 149 */ 'a', 'c', '2', 0,
  /* 153 */ 'f', 'c', 'c', '2', 0,
  /* 158 */ 'f', '2', 0,
  /* 161 */ 'm', 'p', 'l', '2', 0,
  /* 166 */ 'p', '2', 0,
  /* 169 */ 'w', '2', 0,
  /* 172 */ 'f', '1', '3', 0,
  /* 176 */ 'w', '1', '3', 0,
  /* 180 */ 'f', '2', '3', 0,
  /* 184 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '3', 0,
  /* 197 */ 'w', '2', '3', 0,
  /* 201 */ 'a', 'c', '3', 0,
  /* 205 */ 'f', 'c', 'c', '3', 0,
  /* 210 */ 'f', '3', 0,
  /* 213 */ 'w', '3', 0,
  /* 216 */ 'f', '1', '4', 0,
  /* 220 */ 'w', '1', '4', 0,
  /* 224 */ 'f', '2', '4', 0,
  /* 228 */ 'w', '2', '4', 0,
  /* 232 */ 'f', 'c', 'c', '4', 0,
  /* 237 */ 'f', '4', 0,
  /* 240 */ 'w', '4', 0,
  /* 243 */ 'f', '1', '5', 0,
  /* 247 */ 'w', '1', '5', 0,
  /* 251 */ 'f', '2', '5', 0,
  /* 255 */ 'w', '2', '5', 0,
  /* 259 */ 'f', 'c', 'c', '5', 0,
  /* 264 */ 'f', '5', 0,
  /* 267 */ 'w', '5', 0,
  /* 270 */ 'f', '1', '6', 0,
  /* 274 */ 'w', '1', '6', 0,
  /* 278 */ 'f', '2', '6', 0,
  /* 282 */ 'w', '2', '6', 0,
  /* 286 */ 'f', 'c', 'c', '6', 0,
  /* 291 */ 'f', '6', 0,
  /* 294 */ 'w', '6', 0,
  /* 297 */ 'f', '1', '7', 0,
  /* 301 */ 'w', '1', '7', 0,
  /* 305 */ 'f', '2', '7', 0,
  /* 309 */ 'w', '2', '7', 0,
  /* 313 */ 'f', 'c', 'c', '7', 0,
  /* 318 */ 'f', '7', 0,
  /* 321 */ 'w', '7', 0,
  /* 324 */ 'f', '1', '8', 0,
  /* 328 */ 'w', '1', '8', 0,
  /* 332 */ 'f', '2', '8', 0,
  /* 336 */ 'w', '2', '8', 0,
  /* 340 */ 'f', '8', 0,
  /* 343 */ 'w', '8', 0,
  /* 346 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '1', '6', '_', '1', '9', 0,
  /* 362 */ 'f', '1', '9', 0,
  /* 366 */ 'w', '1', '9', 0,
  /* 370 */ 'f', '2', '9', 0,
  /* 374 */ 'w', '2', '9', 0,
  /* 378 */ 'f', '9', 0,
  /* 381 */ 'w', '9', 0,
  /* 384 */ 'D', 'S', 'P', 'E', 'F', 'I', 0,
  /* 391 */ 'r', 'a', 0,
  /* 394 */ 'h', 'w', 'r', '_', 'c', 'c', 0,
  /* 401 */ 'p', 'c', 0,
  /* 404 */ 'D', 'S', 'P', 'C', 'C', 'o', 'n', 'd', 0,
  /* 413 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', 0,
  /* 424 */ 'h', 'i', 0,
  /* 427 */ 'h', 'w', 'r', '_', 'c', 'p', 'u', 'n', 'u', 'm', 0,
  /* 438 */ 'l', 'o', 0,
  /* 441 */ 'z', 'e', 'r', 'o', 0,
  /* 446 */ 'h', 'w', 'r', '_', 's', 'y', 'n', 'c', 'i', '_', 's', 't', 'e', 'p', 0,
  /* 461 */ 'f', 'p', 0,
  /* 464 */ 'g', 'p', 0,
  /* 467 */ 's', 'p', 0,
  /* 470 */ 'h', 'w', 'r', '_', 'c', 'c', 'r', 'e', 's', 0,
  /* 480 */ 'D', 'S', 'P', 'P', 'o', 's', 0,
  /* 487 */ 'D', 'S', 'P', 'S', 'C', 'o', 'u', 'n', 't', 0,
  /* 497 */ 'D', 'S', 'P', 'C', 'a', 'r', 'r', 'y', 0,
  };

  static const uint16_t RegAsmOffset[] = {
    62, 404, 497, 384, 413, 480, 487, 461, 464, 122, 62, 2, 272, 218, 
    245, 174, 299, 401, 391, 467, 441, 218, 245, 272, 299, 37, 97, 149, 
    201, 62, 2, 62, 122, 174, 218, 245, 272, 299, 326, 360, 2, 62, 
    122, 174, 218, 245, 272, 299, 326, 360, 2, 62, 122, 174, 218, 245, 
    272, 299, 326, 360, 1, 61, 121, 173, 217, 244, 271, 298, 325, 359, 
    9, 69, 129, 181, 225, 252, 279, 306, 333, 371, 30, 90, 1, 61, 
    121, 173, 217, 244, 271, 298, 325, 359, 9, 69, 129, 181, 225, 252, 
    279, 306, 333, 371, 30, 90, 1, 61, 121, 173, 217, 244, 271, 298, 
    325, 359, 9, 69, 129, 181, 225, 252, 279, 306, 333, 371, 30, 90, 
    46, 158, 237, 291, 340, 0, 120, 216, 270, 324, 8, 128, 224, 278, 
    332, 29, 12, 72, 132, 184, 46, 106, 158, 210, 237, 264, 291, 318, 
    340, 378, 0, 60, 120, 172, 216, 243, 270, 297, 324, 362, 8, 68, 
    128, 180, 224, 251, 278, 305, 332, 370, 29, 89, 41, 101, 153, 205, 
    232, 259, 286, 313, 2, 62, 122, 174, 218, 245, 272, 299, 326, 360, 
    1, 61, 121, 173, 217, 244, 271, 298, 325, 359, 9, 69, 129, 181, 
    225, 252, 279, 306, 333, 371, 30, 90, 461, 46, 106, 158, 210, 237, 
    264, 291, 318, 340, 378, 0, 60, 120, 172, 216, 243, 270, 297, 324, 
    362, 8, 68, 128, 180, 224, 251, 278, 305, 332, 370, 29, 89, 464, 
    37, 97, 149, 201, 427, 446, 394, 470, 218, 245, 272, 299, 326, 360, 
    1, 61, 121, 173, 217, 244, 271, 298, 325, 359, 9, 69, 129, 181, 
    225, 252, 279, 306, 333, 371, 30, 90, 279, 306, 37, 97, 149, 201, 
    49, 109, 161, 326, 360, 1, 61, 121, 173, 217, 244, 271, 298, 325, 
    359, 9, 69, 129, 181, 225, 252, 279, 306, 333, 371, 30, 90, 54, 
    114, 166, 391, 271, 298, 325, 359, 9, 69, 129, 181, 467, 326, 360, 
    1, 61, 121, 173, 217, 244, 225, 252, 122, 174, 57, 117, 169, 213, 
    240, 267, 294, 321, 343, 381, 4, 64, 124, 176, 220, 247, 274, 301, 
    328, 366, 25, 85, 145, 197, 228, 255, 282, 309, 336, 374, 33, 93, 
    441, 218, 245, 272, 299, 37, 46, 106, 158, 210, 237, 264, 291, 318, 
    340, 378, 0, 60, 120, 172, 216, 243, 270, 297, 324, 362, 8, 68, 
    128, 180, 224, 251, 278, 305, 332, 370, 29, 89, 346, 424, 279, 306, 
    438, 271, 298, 325, 359, 9, 69, 129, 181, 326, 360, 1, 61, 121, 
    173, 217, 244, 225, 252, 122, 174, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool MipsInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  static const PatternsForOpcode OpToPatterns[] = {
    {Mips::MFTACX, 0, 1 },
    {Mips::MFTC0, 1, 1 },
    {Mips::MFTHI, 2, 1 },
    {Mips::MFTLO, 3, 1 },
    {Mips::MTTACX, 4, 1 },
    {Mips::MTTC0, 5, 1 },
    {Mips::MTTHI, 6, 1 },
    {Mips::MTTLO, 7, 1 },
    {Mips::NORImm, 8, 1 },
    {Mips::NORImm64, 9, 1 },
    {Mips::SLTImm64, 10, 1 },
    {Mips::SLTUImm64, 11, 1 },
    {Mips::ADDIUPC, 12, 1 },
    {Mips::ADDIUPC_MMR6, 13, 1 },
    {Mips::ADDu, 14, 1 },
    {Mips::BC1F, 15, 1 },
    {Mips::BC1FL, 16, 1 },
    {Mips::BC1F_MM, 17, 1 },
    {Mips::BC1T, 18, 1 },
    {Mips::BC1TL, 19, 1 },
    {Mips::BC1T_MM, 20, 1 },
    {Mips::BEQL, 21, 1 },
    {Mips::BGEZAL, 22, 1 },
    {Mips::BGEZAL_MM, 23, 1 },
    {Mips::BNEL, 24, 1 },
    {Mips::BREAK, 25, 2 },
    {Mips::BREAK_MM, 27, 2 },
    {Mips::C_EQ_D32, 29, 1 },
    {Mips::C_EQ_D32_MM, 30, 1 },
    {Mips::C_EQ_D64, 31, 1 },
    {Mips::C_EQ_D64_MM, 32, 1 },
    {Mips::C_EQ_S, 33, 1 },
    {Mips::C_EQ_S_MM, 34, 1 },
    {Mips::C_F_D32, 35, 1 },
    {Mips::C_F_D32_MM, 36, 1 },
    {Mips::C_F_D64, 37, 1 },
    {Mips::C_F_D64_MM, 38, 1 },
    {Mips::C_F_S, 39, 1 },
    {Mips::C_F_S_MM, 40, 1 },
    {Mips::C_LE_D32, 41, 1 },
    {Mips::C_LE_D32_MM, 42, 1 },
    {Mips::C_LE_D64, 43, 1 },
    {Mips::C_LE_D64_MM, 44, 1 },
    {Mips::C_LE_S, 45, 1 },
    {Mips::C_LE_S_MM, 46, 1 },
    {Mips::C_LT_D32, 47, 1 },
    {Mips::C_LT_D32_MM, 48, 1 },
    {Mips::C_LT_D64, 49, 1 },
    {Mips::C_LT_D64_MM, 50, 1 },
    {Mips::C_LT_S, 51, 1 },
    {Mips::C_LT_S_MM, 52, 1 },
    {Mips::C_NGE_D32, 53, 1 },
    {Mips::C_NGE_D32_MM, 54, 1 },
    {Mips::C_NGE_D64, 55, 1 },
    {Mips::C_NGE_D64_MM, 56, 1 },
    {Mips::C_NGE_S, 57, 1 },
    {Mips::C_NGE_S_MM, 58, 1 },
    {Mips::C_NGLE_D32, 59, 1 },
    {Mips::C_NGLE_D32_MM, 60, 1 },
    {Mips::C_NGLE_D64, 61, 1 },
    {Mips::C_NGLE_D64_MM, 62, 1 },
    {Mips::C_NGLE_S, 63, 1 },
    {Mips::C_NGLE_S_MM, 64, 1 },
    {Mips::C_NGL_D32, 65, 1 },
    {Mips::C_NGL_D32_MM, 66, 1 },
    {Mips::C_NGL_D64, 67, 1 },
    {Mips::C_NGL_D64_MM, 68, 1 },
    {Mips::C_NGL_S, 69, 1 },
    {Mips::C_NGL_S_MM, 70, 1 },
    {Mips::C_NGT_D32, 71, 1 },
    {Mips::C_NGT_D32_MM, 72, 1 },
    {Mips::C_NGT_D64, 73, 1 },
    {Mips::C_NGT_D64_MM, 74, 1 },
    {Mips::C_NGT_S, 75, 1 },
    {Mips::C_NGT_S_MM, 76, 1 },
    {Mips::C_OLE_D32, 77, 1 },
    {Mips::C_OLE_D32_MM, 78, 1 },
    {Mips::C_OLE_D64, 79, 1 },
    {Mips::C_OLE_D64_MM, 80, 1 },
    {Mips::C_OLE_S, 81, 1 },
    {Mips::C_OLE_S_MM, 82, 1 },
    {Mips::C_OLT_D32, 83, 1 },
    {Mips::C_OLT_D32_MM, 84, 1 },
    {Mips::C_OLT_D64, 85, 1 },
    {Mips::C_OLT_D64_MM, 86, 1 },
    {Mips::C_OLT_S, 87, 1 },
    {Mips::C_OLT_S_MM, 88, 1 },
    {Mips::C_SEQ_D32, 89, 1 },
    {Mips::C_SEQ_D32_MM, 90, 1 },
    {Mips::C_SEQ_D64, 91, 1 },
    {Mips::C_SEQ_D64_MM, 92, 1 },
    {Mips::C_SEQ_S, 93, 1 },
    {Mips::C_SEQ_S_MM, 94, 1 },
    {Mips::C_SF_D32, 95, 1 },
    {Mips::C_SF_D32_MM, 96, 1 },
    {Mips::C_SF_D64, 97, 1 },
    {Mips::C_SF_D64_MM, 98, 1 },
    {Mips::C_SF_S, 99, 1 },
    {Mips::C_SF_S_MM, 100, 1 },
    {Mips::C_UEQ_D32, 101, 1 },
    {Mips::C_UEQ_D32_MM, 102, 1 },
    {Mips::C_UEQ_D64, 103, 1 },
    {Mips::C_UEQ_D64_MM, 104, 1 },
    {Mips::C_UEQ_S, 105, 1 },
    {Mips::C_UEQ_S_MM, 106, 1 },
    {Mips::C_ULE_D32, 107, 1 },
    {Mips::C_ULE_D32_MM, 108, 1 },
    {Mips::C_ULE_D64, 109, 1 },
    {Mips::C_ULE_D64_MM, 110, 1 },
    {Mips::C_ULE_S, 111, 1 },
    {Mips::C_ULE_S_MM, 112, 1 },
    {Mips::C_ULT_D32, 113, 1 },
    {Mips::C_ULT_D32_MM, 114, 1 },
    {Mips::C_ULT_D64, 115, 1 },
    {Mips::C_ULT_D64_MM, 116, 1 },
    {Mips::C_ULT_S, 117, 1 },
    {Mips::C_ULT_S_MM, 118, 1 },
    {Mips::C_UN_D32, 119, 1 },
    {Mips::C_UN_D32_MM, 120, 1 },
    {Mips::C_UN_D64, 121, 1 },
    {Mips::C_UN_D64_MM, 122, 1 },
    {Mips::C_UN_S, 123, 1 },
    {Mips::C_UN_S_MM, 124, 1 },
    {Mips::DADDu, 125, 1 },
    {Mips::DI, 126, 1 },
    {Mips::DIV, 127, 1 },
    {Mips::DIVU, 128, 1 },
    {Mips::DI_MM, 129, 1 },
    {Mips::DI_MMR6, 130, 1 },
    {Mips::DMT, 131, 1 },
    {Mips::DSUB, 132, 2 },
    {Mips::DSUBu, 134, 2 },
    {Mips::DVPE, 136, 1 },
    {Mips::EI, 137, 1 },
    {Mips::EI_MM, 138, 1 },
    {Mips::EI_MMR6, 139, 1 },
    {Mips::EMT, 140, 1 },
    {Mips::EVPE, 141, 1 },
    {Mips::HYPCALL, 142, 1 },
    {Mips::HYPCALL_MM, 143, 1 },
    {Mips::JALR, 144, 1 },
    {Mips::JALR64, 145, 1 },
    {Mips::JALRC_HB_MMR6, 146, 1 },
    {Mips::JALRC_MMR6, 147, 1 },
    {Mips::JALR_HB, 148, 1 },
    {Mips::JALR_HB64, 149, 1 },
    {Mips::JIALC, 150, 1 },
    {Mips::JIALC64, 151, 1 },
    {Mips::JIC, 152, 1 },
    {Mips::JIC64, 153, 1 },
    {Mips::MOVE16_MM, 154, 1 },
    {Mips::Move32R16, 155, 1 },
    {Mips::OR, 156, 1 },
    {Mips::OR64, 157, 1 },
    {Mips::RDHWR, 158, 1 },
    {Mips::RDHWR64, 159, 1 },
    {Mips::RDHWR_MM, 160, 1 },
    {Mips::RDHWR_MMR6, 161, 1 },
    {Mips::SDBBP, 162, 1 },
    {Mips::SDBBP_MMR6, 163, 1 },
    {Mips::SDBBP_R6, 164, 1 },
    {Mips::SIGRIE, 165, 1 },
    {Mips::SIGRIE_MMR6, 166, 1 },
    {Mips::SLL, 167, 1 },
    {Mips::SLL_MM, 168, 1 },
    {Mips::SLL_MMR6, 169, 1 },
    {Mips::SUB, 170, 2 },
    {Mips::SUBU_MMR6, 172, 2 },
    {Mips::SUB_MM, 174, 2 },
    {Mips::SUB_MMR6, 176, 2 },
    {Mips::SUBu, 178, 2 },
    {Mips::SUBu_MM, 180, 2 },
    {Mips::SWSP_MM, 182, 1 },
    {Mips::SYNC, 183, 1 },
    {Mips::SYNC_MM, 184, 1 },
    {Mips::SYNC_MMR6, 185, 1 },
    {Mips::SYSCALL, 186, 1 },
    {Mips::SYSCALL_MM, 187, 1 },
    {Mips::TEQ, 188, 1 },
    {Mips::TEQ_MM, 189, 1 },
    {Mips::TGE, 190, 1 },
    {Mips::TGEU, 191, 1 },
    {Mips::TGEU_MM, 192, 1 },
    {Mips::TGE_MM, 193, 1 },
    {Mips::TLT, 194, 1 },
    {Mips::TLTU, 195, 1 },
    {Mips::TLTU_MM, 196, 1 },
    {Mips::TLT_MM, 197, 1 },
    {Mips::TNE, 198, 1 },
    {Mips::TNE_MM, 199, 1 },
    {Mips::WAIT_MM, 200, 1 },
    {Mips::WRDSP, 201, 1 },
    {Mips::WRDSP_MM, 202, 1 },
    {Mips::YIELD, 203, 1 },
  };

  static const AliasPattern Patterns[] = {
    // Mips::MFTACX - 0
    {0, 0, 2, 2 },
    // Mips::MFTC0 - 1
    {10, 2, 3, 3 },
    // Mips::MFTHI - 2
    {23, 5, 2, 2 },
    // Mips::MFTLO - 3
    {32, 7, 2, 2 },
    // Mips::MTTACX - 4
    {41, 9, 2, 2 },
    // Mips::MTTC0 - 5
    {51, 11, 3, 3 },
    // Mips::MTTHI - 6
    {64, 14, 2, 2 },
    // Mips::MTTLO - 7
    {73, 16, 2, 2 },
    // Mips::NORImm - 8
    {82, 18, 3, 2 },
    // Mips::NORImm64 - 9
    {82, 20, 3, 2 },
    // Mips::SLTImm64 - 10
    {93, 22, 3, 2 },
    // Mips::SLTUImm64 - 11
    {104, 24, 3, 2 },
    // Mips::ADDIUPC - 12
    {116, 26, 2, 1 },
    // Mips::ADDIUPC_MMR6 - 13
    {116, 27, 2, 1 },
    // Mips::ADDu - 14
    {128, 28, 3, 3 },
    // Mips::BC1F - 15
    {140, 31, 2, 1 },
    // Mips::BC1FL - 16
    {148, 32, 2, 1 },
    // Mips::BC1F_MM - 17
    {140, 33, 2, 1 },
    // Mips::BC1T - 18
    {157, 34, 2, 1 },
    // Mips::BC1TL - 19
    {165, 35, 2, 1 },
    // Mips::BC1T_MM - 20
    {157, 36, 2, 1 },
    // Mips::BEQL - 21
    {174, 37, 3, 2 },
    // Mips::BGEZAL - 22
    {187, 39, 2, 1 },
    // Mips::BGEZAL_MM - 23
    {187, 40, 2, 1 },
    // Mips::BNEL - 24
    {194, 41, 3, 2 },
    // Mips::BREAK - 25
    {207, 43, 2, 2 },
    {213, 45, 2, 2 },
    // Mips::BREAK_MM - 27
    {207, 47, 2, 2 },
    {213, 49, 2, 2 },
    // Mips::C_EQ_D32 - 29
    {224, 51, 3, 3 },
    // Mips::C_EQ_D32_MM - 30
    {224, 54, 3, 3 },
    // Mips::C_EQ_D64 - 31
    {224, 57, 3, 3 },
    // Mips::C_EQ_D64_MM - 32
    {224, 60, 3, 3 },
    // Mips::C_EQ_S - 33
    {238, 63, 3, 3 },
    // Mips::C_EQ_S_MM - 34
    {238, 66, 3, 3 },
    // Mips::C_F_D32 - 35
    {252, 69, 3, 3 },
    // Mips::C_F_D32_MM - 36
    {252, 72, 3, 3 },
    // Mips::C_F_D64 - 37
    {252, 75, 3, 3 },
    // Mips::C_F_D64_MM - 38
    {252, 78, 3, 3 },
    // Mips::C_F_S - 39
    {265, 81, 3, 3 },
    // Mips::C_F_S_MM - 40
    {265, 84, 3, 3 },
    // Mips::C_LE_D32 - 41
    {278, 87, 3, 3 },
    // Mips::C_LE_D32_MM - 42
    {278, 90, 3, 3 },
    // Mips::C_LE_D64 - 43
    {278, 93, 3, 3 },
    // Mips::C_LE_D64_MM - 44
    {278, 96, 3, 3 },
    // Mips::C_LE_S - 45
    {292, 99, 3, 3 },
    // Mips::C_LE_S_MM - 46
    {292, 102, 3, 3 },
    // Mips::C_LT_D32 - 47
    {306, 105, 3, 3 },
    // Mips::C_LT_D32_MM - 48
    {306, 108, 3, 3 },
    // Mips::C_LT_D64 - 49
    {306, 111, 3, 3 },
    // Mips::C_LT_D64_MM - 50
    {306, 114, 3, 3 },
    // Mips::C_LT_S - 51
    {320, 117, 3, 3 },
    // Mips::C_LT_S_MM - 52
    {320, 120, 3, 3 },
    // Mips::C_NGE_D32 - 53
    {334, 123, 3, 3 },
    // Mips::C_NGE_D32_MM - 54
    {334, 126, 3, 3 },
    // Mips::C_NGE_D64 - 55
    {334, 129, 3, 3 },
    // Mips::C_NGE_D64_MM - 56
    {334, 132, 3, 3 },
    // Mips::C_NGE_S - 57
    {349, 135, 3, 3 },
    // Mips::C_NGE_S_MM - 58
    {349, 138, 3, 3 },
    // Mips::C_NGLE_D32 - 59
    {364, 141, 3, 3 },
    // Mips::C_NGLE_D32_MM - 60
    {364, 144, 3, 3 },
    // Mips::C_NGLE_D64 - 61
    {364, 147, 3, 3 },
    // Mips::C_NGLE_D64_MM - 62
    {364, 150, 3, 3 },
    // Mips::C_NGLE_S - 63
    {380, 153, 3, 3 },
    // Mips::C_NGLE_S_MM - 64
    {380, 156, 3, 3 },
    // Mips::C_NGL_D32 - 65
    {396, 159, 3, 3 },
    // Mips::C_NGL_D32_MM - 66
    {396, 162, 3, 3 },
    // Mips::C_NGL_D64 - 67
    {396, 165, 3, 3 },
    // Mips::C_NGL_D64_MM - 68
    {396, 168, 3, 3 },
    // Mips::C_NGL_S - 69
    {411, 171, 3, 3 },
    // Mips::C_NGL_S_MM - 70
    {411, 174, 3, 3 },
    // Mips::C_NGT_D32 - 71
    {426, 177, 3, 3 },
    // Mips::C_NGT_D32_MM - 72
    {426, 180, 3, 3 },
    // Mips::C_NGT_D64 - 73
    {426, 183, 3, 3 },
    // Mips::C_NGT_D64_MM - 74
    {426, 186, 3, 3 },
    // Mips::C_NGT_S - 75
    {441, 189, 3, 3 },
    // Mips::C_NGT_S_MM - 76
    {441, 192, 3, 3 },
    // Mips::C_OLE_D32 - 77
    {456, 195, 3, 3 },
    // Mips::C_OLE_D32_MM - 78
    {456, 198, 3, 3 },
    // Mips::C_OLE_D64 - 79
    {456, 201, 3, 3 },
    // Mips::C_OLE_D64_MM - 80
    {456, 204, 3, 3 },
    // Mips::C_OLE_S - 81
    {471, 207, 3, 3 },
    // Mips::C_OLE_S_MM - 82
    {471, 210, 3, 3 },
    // Mips::C_OLT_D32 - 83
    {486, 213, 3, 3 },
    // Mips::C_OLT_D32_MM - 84
    {486, 216, 3, 3 },
    // Mips::C_OLT_D64 - 85
    {486, 219, 3, 3 },
    // Mips::C_OLT_D64_MM - 86
    {486, 222, 3, 3 },
    // Mips::C_OLT_S - 87
    {501, 225, 3, 3 },
    // Mips::C_OLT_S_MM - 88
    {501, 228, 3, 3 },
    // Mips::C_SEQ_D32 - 89
    {516, 231, 3, 3 },
    // Mips::C_SEQ_D32_MM - 90
    {516, 234, 3, 3 },
    // Mips::C_SEQ_D64 - 91
    {516, 237, 3, 3 },
    // Mips::C_SEQ_D64_MM - 92
    {516, 240, 3, 3 },
    // Mips::C_SEQ_S - 93
    {531, 243, 3, 3 },
    // Mips::C_SEQ_S_MM - 94
    {531, 246, 3, 3 },
    // Mips::C_SF_D32 - 95
    {546, 249, 3, 3 },
    // Mips::C_SF_D32_MM - 96
    {546, 252, 3, 3 },
    // Mips::C_SF_D64 - 97
    {546, 255, 3, 3 },
    // Mips::C_SF_D64_MM - 98
    {546, 258, 3, 3 },
    // Mips::C_SF_S - 99
    {560, 261, 3, 3 },
    // Mips::C_SF_S_MM - 100
    {560, 264, 3, 3 },
    // Mips::C_UEQ_D32 - 101
    {574, 267, 3, 3 },
    // Mips::C_UEQ_D32_MM - 102
    {574, 270, 3, 3 },
    // Mips::C_UEQ_D64 - 103
    {574, 273, 3, 3 },
    // Mips::C_UEQ_D64_MM - 104
    {574, 276, 3, 3 },
    // Mips::C_UEQ_S - 105
    {589, 279, 3, 3 },
    // Mips::C_UEQ_S_MM - 106
    {589, 282, 3, 3 },
    // Mips::C_ULE_D32 - 107
    {604, 285, 3, 3 },
    // Mips::C_ULE_D32_MM - 108
    {604, 288, 3, 3 },
    // Mips::C_ULE_D64 - 109
    {604, 291, 3, 3 },
    // Mips::C_ULE_D64_MM - 110
    {604, 294, 3, 3 },
    // Mips::C_ULE_S - 111
    {619, 297, 3, 3 },
    // Mips::C_ULE_S_MM - 112
    {619, 300, 3, 3 },
    // Mips::C_ULT_D32 - 113
    {634, 303, 3, 3 },
    // Mips::C_ULT_D32_MM - 114
    {634, 306, 3, 3 },
    // Mips::C_ULT_D64 - 115
    {634, 309, 3, 3 },
    // Mips::C_ULT_D64_MM - 116
    {634, 312, 3, 3 },
    // Mips::C_ULT_S - 117
    {649, 315, 3, 3 },
    // Mips::C_ULT_S_MM - 118
    {649, 318, 3, 3 },
    // Mips::C_UN_D32 - 119
    {664, 321, 3, 3 },
    // Mips::C_UN_D32_MM - 120
    {664, 324, 3, 3 },
    // Mips::C_UN_D64 - 121
    {664, 327, 3, 3 },
    // Mips::C_UN_D64_MM - 122
    {664, 330, 3, 3 },
    // Mips::C_UN_S - 123
    {678, 333, 3, 3 },
    // Mips::C_UN_S_MM - 124
    {678, 336, 3, 3 },
    // Mips::DADDu - 125
    {128, 339, 3, 3 },
    // Mips::DI - 126
    {692, 342, 1, 1 },
    // Mips::DIV - 127
    {695, 343, 3, 3 },
    // Mips::DIVU - 128
    {706, 346, 3, 3 },
    // Mips::DI_MM - 129
    {692, 349, 1, 1 },
    // Mips::DI_MMR6 - 130
    {692, 350, 1, 1 },
    // Mips::DMT - 131
    {718, 351, 1, 1 },
    // Mips::DSUB - 132
    {722, 352, 3, 3 },
    {734, 355, 3, 3 },
    // Mips::DSUBu - 134
    {742, 358, 3, 3 },
    {755, 361, 3, 3 },
    // Mips::DVPE - 136
    {764, 364, 1, 1 },
    // Mips::EI - 137
    {769, 365, 1, 1 },
    // Mips::EI_MM - 138
    {769, 366, 1, 1 },
    // Mips::EI_MMR6 - 139
    {769, 367, 1, 1 },
    // Mips::EMT - 140
    {772, 368, 1, 1 },
    // Mips::EVPE - 141
    {776, 369, 1, 1 },
    // Mips::HYPCALL - 142
    {781, 370, 1, 1 },
    // Mips::HYPCALL_MM - 143
    {781, 371, 1, 1 },
    // Mips::JALR - 144
    {789, 372, 2, 2 },
    // Mips::JALR64 - 145
    {789, 374, 2, 2 },
    // Mips::JALRC_HB_MMR6 - 146
    {795, 376, 2, 2 },
    // Mips::JALRC_MMR6 - 147
    {807, 378, 2, 2 },
    // Mips::JALR_HB - 148
    {816, 380, 2, 2 },
    // Mips::JALR_HB64 - 149
    {816, 382, 2, 2 },
    // Mips::JIALC - 150
    {827, 384, 2, 2 },
    // Mips::JIALC64 - 151
    {827, 386, 2, 2 },
    // Mips::JIC - 152
    {836, 388, 2, 2 },
    // Mips::JIC64 - 153
    {836, 390, 2, 2 },
    // Mips::MOVE16_MM - 154
    {843, 392, 2, 2 },
    // Mips::Move32R16 - 155
    {843, 394, 2, 2 },
    // Mips::OR - 156
    {128, 396, 3, 3 },
    // Mips::OR64 - 157
    {128, 399, 3, 3 },
    // Mips::RDHWR - 158
    {847, 402, 3, 3 },
    // Mips::RDHWR64 - 159
    {847, 405, 3, 3 },
    // Mips::RDHWR_MM - 160
    {847, 408, 3, 3 },
    // Mips::RDHWR_MMR6 - 161
    {847, 411, 3, 3 },
    // Mips::SDBBP - 162
    {860, 414, 1, 1 },
    // Mips::SDBBP_MMR6 - 163
    {860, 415, 1, 1 },
    // Mips::SDBBP_R6 - 164
    {860, 416, 1, 1 },
    // Mips::SIGRIE - 165
    {866, 417, 1, 1 },
    // Mips::SIGRIE_MMR6 - 166
    {866, 418, 1, 1 },
    // Mips::SLL - 167
    {843, 419, 3, 3 },
    // Mips::SLL_MM - 168
    {843, 422, 3, 3 },
    // Mips::SLL_MMR6 - 169
    {843, 425, 3, 3 },
    // Mips::SUB - 170
    {873, 428, 3, 3 },
    {884, 431, 3, 3 },
    // Mips::SUBU_MMR6 - 172
    {891, 434, 3, 3 },
    {903, 437, 3, 3 },
    // Mips::SUB_MM - 174
    {873, 440, 3, 3 },
    {884, 443, 3, 3 },
    // Mips::SUB_MMR6 - 176
    {873, 446, 3, 3 },
    {884, 449, 3, 3 },
    // Mips::SUBu - 178
    {891, 452, 3, 3 },
    {903, 455, 3, 3 },
    // Mips::SUBu_MM - 180
    {891, 458, 3, 3 },
    {903, 461, 3, 3 },
    // Mips::SWSP_MM - 182
    {911, 464, 3, 1 },
    // Mips::SYNC - 183
    {923, 465, 1, 1 },
    // Mips::SYNC_MM - 184
    {923, 466, 1, 1 },
    // Mips::SYNC_MMR6 - 185
    {923, 467, 1, 1 },
    // Mips::SYSCALL - 186
    {928, 468, 1, 1 },
    // Mips::SYSCALL_MM - 187
    {928, 469, 1, 1 },
    // Mips::TEQ - 188
    {936, 470, 3, 3 },
    // Mips::TEQ_MM - 189
    {936, 473, 3, 3 },
    // Mips::TGE - 190
    {947, 476, 3, 3 },
    // Mips::TGEU - 191
    {958, 479, 3, 3 },
    // Mips::TGEU_MM - 192
    {958, 482, 3, 3 },
    // Mips::TGE_MM - 193
    {947, 485, 3, 3 },
    // Mips::TLT - 194
    {970, 488, 3, 3 },
    // Mips::TLTU - 195
    {981, 491, 3, 3 },
    // Mips::TLTU_MM - 196
    {981, 494, 3, 3 },
    // Mips::TLT_MM - 197
    {970, 497, 3, 3 },
    // Mips::TNE - 198
    {993, 500, 3, 3 },
    // Mips::TNE_MM - 199
    {993, 503, 3, 3 },
    // Mips::WAIT_MM - 200
    {1004, 506, 1, 1 },
    // Mips::WRDSP - 201
    {1009, 507, 2, 2 },
    // Mips::WRDSP_MM - 202
    {1009, 509, 2, 2 },
    // Mips::YIELD - 203
    {1018, 511, 2, 2 },
  };

  static const AliasPatternCond Conds[] = {
    // (MFTACX GPR32Opnd:$rt, AC0) - 0
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::AC0},
    // (MFTC0 GPR32Opnd:$rd, COP0Opnd:$rt, 0) - 2
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::COP0RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MFTHI GPR32Opnd:$rt, AC0) - 5
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::AC0},
    // (MFTLO GPR32Opnd:$rt, AC0) - 7
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::AC0},
    // (MTTACX AC0, GPR32Opnd:$rt) - 9
    {AliasPatternCond::K_Reg, Mips::AC0},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (MTTC0 COP0Opnd:$rt, GPR32Opnd:$rd, 0) - 11
    {AliasPatternCond::K_RegClass, Mips::COP0RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTTHI AC0, GPR32Opnd:$rt) - 14
    {AliasPatternCond::K_Reg, Mips::AC0},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (MTTLO AC0, GPR32Opnd:$rt) - 16
    {AliasPatternCond::K_Reg, Mips::AC0},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (NORImm GPR32Opnd:$rs, GPR32Opnd:$rs, simm32_relaxed:$imm) - 18
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    // (NORImm64 GPR64Opnd:$rs, GPR64Opnd:$rs, imm64:$imm) - 20
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    // (SLTImm64 GPR64Opnd:$rs, GPR64Opnd:$rs, imm64:$imm) - 22
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    // (SLTUImm64 GPR64Opnd:$rs, GPR64Opnd:$rs, imm64:$imm) - 24
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    // (ADDIUPC GPR32Opnd:$rd, simm19_lsl2:$imm) - 26
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (ADDIUPC_MMR6 GPR32Opnd:$rd, simm19_lsl2:$imm) - 27
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (ADDu GPR32Opnd:$dst, GPR32Opnd:$src, ZERO) - 28
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (BC1F FCC0, brtarget:$offset) - 31
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BC1FL FCC0, brtarget:$offset) - 32
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BC1F_MM FCC0, brtarget:$offset) - 33
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BC1T FCC0, brtarget:$offset) - 34
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BC1TL FCC0, brtarget:$offset) - 35
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BC1T_MM FCC0, brtarget:$offset) - 36
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BEQL GPR32Opnd:$rs, ZERO, brtarget:$offset) - 37
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (BGEZAL ZERO, brtarget:$offset) - 39
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (BGEZAL_MM ZERO, brtarget_mm:$offset) - 40
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (BNEL GPR32Opnd:$rs, ZERO, brtarget:$offset) - 41
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (BREAK 0, 0) - 43
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (BREAK uimm10:$imm, 0) - 45
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (BREAK_MM 0, 0) - 47
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (BREAK_MM uimm10:$imm, 0) - 49
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (C_EQ_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 51
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_EQ_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 54
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_EQ_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 57
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_EQ_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 60
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_EQ_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 63
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_EQ_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 66
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_F_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 69
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_F_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 72
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_F_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 75
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_F_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 78
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_F_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 81
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_F_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 84
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_LE_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 87
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_LE_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 90
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_LE_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 93
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_LE_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 96
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_LE_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 99
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_LE_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 102
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_LT_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 105
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_LT_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 108
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_LT_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 111
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_LT_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 114
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_LT_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 117
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_LT_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 120
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGE_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 123
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGE_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 126
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGE_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 129
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGE_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 132
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGE_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 135
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGE_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 138
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGLE_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 141
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGLE_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 144
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGLE_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 147
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGLE_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 150
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGLE_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 153
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGLE_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 156
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGL_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 159
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGL_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 162
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGL_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 165
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGL_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 168
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGL_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 171
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGL_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 174
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGT_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 177
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGT_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 180
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGT_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 183
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGT_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 186
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGT_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 189
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGT_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 192
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_OLE_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 195
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_OLE_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 198
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_OLE_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 201
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_OLE_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 204
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_OLE_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 207
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_OLE_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 210
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_OLT_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 213
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_OLT_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 216
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_OLT_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 219
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_OLT_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 222
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_OLT_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 225
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_OLT_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 228
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_SEQ_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 231
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_SEQ_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 234
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_SEQ_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 237
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_SEQ_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 240
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_SEQ_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 243
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_SEQ_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 246
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_SF_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 249
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_SF_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 252
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_SF_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 255
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_SF_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 258
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_SF_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 261
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_SF_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 264
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_UEQ_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 267
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_UEQ_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 270
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_UEQ_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 273
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_UEQ_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 276
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_UEQ_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 279
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_UEQ_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 282
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_ULE_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 285
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_ULE_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 288
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_ULE_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 291
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_ULE_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 294
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_ULE_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 297
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_ULE_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 300
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_ULT_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 303
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_ULT_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 306
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_ULT_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 309
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_ULT_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 312
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_ULT_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 315
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_ULT_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 318
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_UN_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 321
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_UN_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 324
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_UN_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 327
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_UN_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 330
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_UN_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 333
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_UN_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 336
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (DADDu GPR64Opnd:$dst, GPR64Opnd:$src, ZERO_64) - 339
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    // (DI ZERO) - 342
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (DIV GPR32Opnd:$rs, GPR32Opnd:$rs, GPR32Opnd:$rt) - 343
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (DIVU GPR32Opnd:$rs, GPR32Opnd:$rs, GPR32Opnd:$rt) - 346
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (DI_MM ZERO) - 349
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (DI_MMR6 ZERO) - 350
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (DMT ZERO) - 351
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (DSUB GPR64Opnd:$rt, ZERO_64, GPR64Opnd:$rs) - 352
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    // (DSUB GPR64Opnd:$rt, ZERO_64, GPR64Opnd:$rt) - 355
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    {AliasPatternCond::K_TiedReg, 0},
    // (DSUBu GPR64Opnd:$rt, ZERO_64, GPR64Opnd:$rs) - 358
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    // (DSUBu GPR64Opnd:$rt, ZERO_64, GPR64Opnd:$rt) - 361
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    {AliasPatternCond::K_TiedReg, 0},
    // (DVPE ZERO) - 364
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (EI ZERO) - 365
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (EI_MM ZERO) - 366
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (EI_MMR6 ZERO) - 367
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (EMT ZERO) - 368
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (EVPE ZERO) - 369
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (HYPCALL 0) - 370
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (HYPCALL_MM 0) - 371
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (JALR ZERO, GPR32Opnd:$rs) - 372
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (JALR64 ZERO_64, GPR64Opnd:$rs) - 374
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    // (JALRC_HB_MMR6 RA, GPR32Opnd:$rs) - 376
    {AliasPatternCond::K_Reg, Mips::RA},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (JALRC_MMR6 RA, GPR32Opnd:$rs) - 378
    {AliasPatternCond::K_Reg, Mips::RA},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (JALR_HB RA, GPR32Opnd:$rs) - 380
    {AliasPatternCond::K_Reg, Mips::RA},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (JALR_HB64 RA_64, GPR64Opnd:$rs) - 382
    {AliasPatternCond::K_Reg, Mips::RA_64},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    // (JIALC GPR32Opnd:$rs, 0) - 384
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (JIALC64 GPR64Opnd:$rs, 0) - 386
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (JIC GPR32Opnd:$rs, 0) - 388
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (JIC64 GPR64Opnd:$rs, 0) - 390
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MOVE16_MM ZERO, ZERO) - 392
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (Move32R16 ZERO, S0) - 394
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Reg, Mips::S0},
    // (OR GPR32Opnd:$dst, GPR32Opnd:$src, ZERO) - 396
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (OR64 GPR64Opnd:$dst, GPR64Opnd:$src, ZERO_64) - 399
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    // (RDHWR GPR32Opnd:$rt, HWRegsOpnd:$rs, 0) - 402
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::HWRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RDHWR64 GPR64Opnd:$rt, HWRegsOpnd:$rs, 0) - 405
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::HWRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RDHWR_MM GPR32Opnd:$rt, HWRegsOpnd:$rs, 0) - 408
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::HWRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RDHWR_MMR6 GPR32Opnd:$rt, HWRegsOpnd:$rs, 0) - 411
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::HWRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SDBBP 0) - 414
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SDBBP_MMR6 0) - 415
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SDBBP_R6 0) - 416
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SIGRIE 0) - 417
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SIGRIE_MMR6 0) - 418
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SLL ZERO, ZERO, 0) - 419
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SLL_MM ZERO, ZERO, 0) - 422
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SLL_MMR6 ZERO, ZERO, 0) - 425
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SUB GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 428
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUB GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 431
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SUBU_MMR6 GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 434
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUBU_MMR6 GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 437
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SUB_MM GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 440
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUB_MM GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 443
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SUB_MMR6 GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 446
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUB_MMR6 GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 449
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SUBu GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 452
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUBu GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 455
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SUBu_MM GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 458
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUBu_MM GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 461
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SWSP_MM GPR32Opnd:$rt, mem_mm_sp_imm5_lsl2:$offset) - 464
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SYNC 0) - 465
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SYNC_MM 0) - 466
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SYNC_MMR6 0) - 467
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SYSCALL 0) - 468
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SYSCALL_MM 0) - 469
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TEQ GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 470
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TEQ_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 473
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TGE GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 476
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TGEU GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 479
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TGEU_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 482
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TGE_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 485
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLT GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 488
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLTU GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 491
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLTU_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 494
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLT_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 497
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TNE GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 500
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TNE_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 503
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (WAIT_MM 0) - 506
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (WRDSP GPR32Opnd:$rt, 31) - 507
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (WRDSP_MM GPR32Opnd:$rt, 31) - 509
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (YIELD ZERO, GPR32Opnd:$rs) - 511
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
  };

  static const char AsmStrings[] =
    /* 0 */ "mftacx $\x01\0"
    /* 10 */ "mftc0 $\x01, $\x02\0"
    /* 23 */ "mfthi $\x01\0"
    /* 32 */ "mftlo $\x01\0"
    /* 41 */ "mttacx $\x02\0"
    /* 51 */ "mttc0 $\x02, $\x01\0"
    /* 64 */ "mtthi $\x02\0"
    /* 73 */ "mttlo $\x02\0"
    /* 82 */ "nor	$\x01, $\x03\0"
    /* 93 */ "slt	$\x01, $\x03\0"
    /* 104 */ "sltu	$\x01, $\x03\0"
    /* 116 */ "lapc $\x01, $\x02\0"
    /* 128 */ "move $\x01, $\x02\0"
    /* 140 */ "bc1f $\x02\0"
    /* 148 */ "bc1fl $\x02\0"
    /* 157 */ "bc1t $\x02\0"
    /* 165 */ "bc1tl $\x02\0"
    /* 174 */ "beqzl $\x01, $\x03\0"
    /* 187 */ "bal $\x02\0"
    /* 194 */ "bnezl $\x01, $\x03\0"
    /* 207 */ "break\0"
    /* 213 */ "break $\xFF\x01\x01\0"
    /* 224 */ "c.eq.d $\x02, $\x03\0"
    /* 238 */ "c.eq.s $\x02, $\x03\0"
    /* 252 */ "c.f.d $\x02, $\x03\0"
    /* 265 */ "c.f.s $\x02, $\x03\0"
    /* 278 */ "c.le.d $\x02, $\x03\0"
    /* 292 */ "c.le.s $\x02, $\x03\0"
    /* 306 */ "c.lt.d $\x02, $\x03\0"
    /* 320 */ "c.lt.s $\x02, $\x03\0"
    /* 334 */ "c.nge.d $\x02, $\x03\0"
    /* 349 */ "c.nge.s $\x02, $\x03\0"
    /* 364 */ "c.ngle.d $\x02, $\x03\0"
    /* 380 */ "c.ngle.s $\x02, $\x03\0"
    /* 396 */ "c.ngl.d $\x02, $\x03\0"
    /* 411 */ "c.ngl.s $\x02, $\x03\0"
    /* 426 */ "c.ngt.d $\x02, $\x03\0"
    /* 441 */ "c.ngt.s $\x02, $\x03\0"
    /* 456 */ "c.ole.d $\x02, $\x03\0"
    /* 471 */ "c.ole.s $\x02, $\x03\0"
    /* 486 */ "c.olt.d $\x02, $\x03\0"
    /* 501 */ "c.olt.s $\x02, $\x03\0"
    /* 516 */ "c.seq.d $\x02, $\x03\0"
    /* 531 */ "c.seq.s $\x02, $\x03\0"
    /* 546 */ "c.sf.d $\x02, $\x03\0"
    /* 560 */ "c.sf.s $\x02, $\x03\0"
    /* 574 */ "c.ueq.d $\x02, $\x03\0"
    /* 589 */ "c.ueq.s $\x02, $\x03\0"
    /* 604 */ "c.ule.d $\x02, $\x03\0"
    /* 619 */ "c.ule.s $\x02, $\x03\0"
    /* 634 */ "c.ult.d $\x02, $\x03\0"
    /* 649 */ "c.ult.s $\x02, $\x03\0"
    /* 664 */ "c.un.d $\x02, $\x03\0"
    /* 678 */ "c.un.s $\x02, $\x03\0"
    /* 692 */ "di\0"
    /* 695 */ "div $\x01, $\x03\0"
    /* 706 */ "divu $\x01, $\x03\0"
    /* 718 */ "dmt\0"
    /* 722 */ "dneg $\x01, $\x03\0"
    /* 734 */ "dneg $\x01\0"
    /* 742 */ "dnegu $\x01, $\x03\0"
    /* 755 */ "dnegu $\x01\0"
    /* 764 */ "dvpe\0"
    /* 769 */ "ei\0"
    /* 772 */ "emt\0"
    /* 776 */ "evpe\0"
    /* 781 */ "hypcall\0"
    /* 789 */ "jr $\x02\0"
    /* 795 */ "jalrc.hb $\x02\0"
    /* 807 */ "jalrc $\x02\0"
    /* 816 */ "jalr.hb $\x02\0"
    /* 827 */ "jalrc $\x01\0"
    /* 836 */ "jrc $\x01\0"
    /* 843 */ "nop\0"
    /* 847 */ "rdhwr $\x01, $\x02\0"
    /* 860 */ "sdbbp\0"
    /* 866 */ "sigrie\0"
    /* 873 */ "neg $\x01, $\x03\0"
    /* 884 */ "neg $\x01\0"
    /* 891 */ "negu $\x01, $\x03\0"
    /* 903 */ "negu $\x01\0"
    /* 911 */ "sw $\x01, $\xFF\x02\x02\0"
    /* 923 */ "sync\0"
    /* 928 */ "syscall\0"
    /* 936 */ "teq $\x01, $\x02\0"
    /* 947 */ "tge $\x01, $\x02\0"
    /* 958 */ "tgeu $\x01, $\x02\0"
    /* 970 */ "tlt $\x01, $\x02\0"
    /* 981 */ "tltu $\x01, $\x02\0"
    /* 993 */ "tne $\x01, $\x02\0"
    /* 1004 */ "wait\0"
    /* 1009 */ "wrdsp $\x01\0"
    /* 1018 */ "yield $\x02\0"
  ;

#ifndef NDEBUG
  static struct SortCheck {
    SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
      assert(std::is_sorted(
                 OpToPatterns.begin(), OpToPatterns.end(),
                 [](const PatternsForOpcode &L, const PatternsForOpcode &R) {
                   return L.Opcode < R.Opcode;
                 }) &&
             "tablegen failed to sort opcode patterns");
    }
  } sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M {
    makeArrayRef(OpToPatterns),
    makeArrayRef(Patterns),
    makeArrayRef(Conds),
    StringRef(AsmStrings, array_lengthof(AsmStrings)),
    nullptr,
  };
  const char *AsmString = matchAliasPatterns(MI, nullptr, M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      OS << '\t';
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void MipsInstPrinter::printCustomAliasOperand(
         const MCInst *MI, unsigned OpIdx,
         unsigned PrintMethodIdx,
         raw_ostream &OS) {
  switch (PrintMethodIdx) {
  default:
    llvm_unreachable("Unknown PrintMethod kind");
    break;
  case 0:
    printUImm<10>(MI, OpIdx, OS);
    break;
  case 1:
    printMemOperand(MI, OpIdx, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
