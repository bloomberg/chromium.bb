<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{2EA5725B-25DA-44E2-B71E-BD9F55F3C2E2}</ProjectGuid>
    <RootNamespace>OGLES3ColourGrading</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(SolutionDir)bin\$(MSBuildProjectName)\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(MSBuildProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)bin\$(MSBuildProjectName)\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(MSBuildProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(SolutionDir)bin\$(MSBuildProjectName)\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(MSBuildProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)bin\$(MSBuildProjectName)\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(MSBuildProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>BUILD_OGLES3;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\..\..\..\..\Shell;..\..\..\..\..\..\Shell\API\KEGL;..\..\..\..\..\..\Shell\OS\Windows;..\..\..\..\..\..\Builds\Include;..\..\..\..\..\..\Tools\OGLES2;..\..\..\..\..\..\Tools\OGLES3;</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <AdditionalOptions>/permissive- %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\..\..\..\..\..\Builds\Windows\x86_32\Lib;..\..\..\..\..\..\Tools\OGLES3\Build\WindowsVC2010\$(IntDir)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libEGL.lib;libGLESv2.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>BUILD_OGLES3;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\..\..\..\..\Shell;..\..\..\..\..\..\Shell\API\KEGL;..\..\..\..\..\..\Shell\OS\Windows;..\..\..\..\..\..\Builds\Include;..\..\..\..\..\..\Tools\OGLES2;..\..\..\..\..\..\Tools\OGLES3;</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <AdditionalOptions>/permissive- %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\..\..\..\..\..\Builds\Windows\x86_64\Lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libEGL.lib;libGLESv2.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>BUILD_OGLES3;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\..\..\..\..\Shell;..\..\..\..\..\..\Shell\API\KEGL;..\..\..\..\..\..\Shell\OS\Windows;..\..\..\..\..\..\Builds\Include;..\..\..\..\..\..\Tools\OGLES2;..\..\..\..\..\..\Tools\OGLES3;</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <AdditionalOptions>/permissive- %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>..\..\..\..\..\..\Builds\Windows\x86_32\Lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libEGL.lib;libGLESv2.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>BUILD_OGLES3;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\..\..\..\..\Shell;..\..\..\..\..\..\Shell\API\KEGL;..\..\..\..\..\..\Shell\OS\Windows;..\..\..\..\..\..\Builds\Include;..\..\..\..\..\..\Tools\OGLES2;..\..\..\..\..\..\Tools\OGLES3;</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <AdditionalOptions>/permissive- %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>..\..\..\..\..\..\Builds\Windows\x86_64\Lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libEGL.lib;libGLESv2.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\..\OGLES3ColourGrading.cpp" />
    <ClCompile Include="..\..\..\..\..\..\Shell\PVRShell.cpp" />
    <ClCompile Include="..\..\..\..\..\..\Shell\API\KEGL\PVRShellAPI.cpp" />
    <ClCompile Include="..\..\..\..\..\..\Shell\OS\Windows\PVRShellOS.cpp" />
    <ClCompile Include="..\..\Content\FragShader.cpp" />
    <ClCompile Include="..\..\Content\VertShader.cpp" />
    <ClCompile Include="..\..\Content\SceneFragShader.cpp" />
    <ClCompile Include="..\..\Content\SceneVertShader.cpp" />
    <ClCompile Include="..\..\Content\BackgroundFragShader.cpp" />
    <ClCompile Include="..\..\Content\Mask.cpp" />
    <ClCompile Include="..\..\Content\MaskTexture.cpp" />
    <ClCompile Include="..\..\Content\Background.cpp" />
    <ClCompile Include="..\..\Content\identity.cpp" />
    <ClCompile Include="..\..\Content\cooler.cpp" />
    <ClCompile Include="..\..\Content\warmer.cpp" />
    <ClCompile Include="..\..\Content\bw.cpp" />
    <ClCompile Include="..\..\Content\sepia.cpp" />
    <ClCompile Include="..\..\Content\inverted.cpp" />
    <ClCompile Include="..\..\Content\highcontrast.cpp" />
    <ClCompile Include="..\..\Content\bluewhitegradient.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\..\..\..\..\Shell\PVRShell.h" />
    <ClInclude Include="..\..\..\..\..\..\Shell\PVRShellImpl.h" />
    <ClInclude Include="..\..\..\..\..\..\Shell\API\KEGL\PVRShellAPI.h" />
    <ClInclude Include="..\..\..\..\..\..\Shell\OS\Windows\PVRShellOS.h" />
    <ClInclude Include="..\..\..\..\..\..\Builds\Windows\Resources\resource.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="..\..\..\..\..\..\Builds\Windows\Resources\shared.rc" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\Mask.pod">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping scene file ..\..\Mask.pod as ..\..\Content\Mask.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\Mask.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\Mask.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping scene file ..\..\Mask.pod as ..\..\Content\Mask.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\Mask.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\Mask.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping scene file ..\..\Mask.pod as ..\..\Content\Mask.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\Mask.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\Mask.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping scene file ..\..\Mask.pod as ..\..\Content\Mask.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\Mask.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\Mask.cpp;%(Outputs)</Outputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\identity.pvr">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping generic file ..\..\identity.pvr as ..\..\Content\identity.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\identity.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\identity.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping generic file ..\..\identity.pvr as ..\..\Content\identity.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\identity.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\identity.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping generic file ..\..\identity.pvr as ..\..\Content\identity.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\identity.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\identity.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping generic file ..\..\identity.pvr as ..\..\Content\identity.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\identity.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\identity.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\cooler.pvr">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping generic file ..\..\cooler.pvr as ..\..\Content\cooler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\cooler.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\cooler.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping generic file ..\..\cooler.pvr as ..\..\Content\cooler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\cooler.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\cooler.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping generic file ..\..\cooler.pvr as ..\..\Content\cooler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\cooler.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\cooler.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping generic file ..\..\cooler.pvr as ..\..\Content\cooler.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\cooler.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\cooler.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\warmer.pvr">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping generic file ..\..\warmer.pvr as ..\..\Content\warmer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\warmer.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\warmer.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping generic file ..\..\warmer.pvr as ..\..\Content\warmer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\warmer.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\warmer.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping generic file ..\..\warmer.pvr as ..\..\Content\warmer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\warmer.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\warmer.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping generic file ..\..\warmer.pvr as ..\..\Content\warmer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\warmer.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\warmer.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\bw.pvr">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping generic file ..\..\bw.pvr as ..\..\Content\bw.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\bw.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\bw.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping generic file ..\..\bw.pvr as ..\..\Content\bw.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\bw.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\bw.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping generic file ..\..\bw.pvr as ..\..\Content\bw.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\bw.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\bw.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping generic file ..\..\bw.pvr as ..\..\Content\bw.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\bw.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\bw.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\sepia.pvr">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping generic file ..\..\sepia.pvr as ..\..\Content\sepia.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\sepia.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\sepia.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping generic file ..\..\sepia.pvr as ..\..\Content\sepia.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\sepia.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\sepia.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping generic file ..\..\sepia.pvr as ..\..\Content\sepia.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\sepia.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\sepia.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping generic file ..\..\sepia.pvr as ..\..\Content\sepia.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\sepia.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\sepia.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\inverted.pvr">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping generic file ..\..\inverted.pvr as ..\..\Content\inverted.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\inverted.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\inverted.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping generic file ..\..\inverted.pvr as ..\..\Content\inverted.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\inverted.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\inverted.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping generic file ..\..\inverted.pvr as ..\..\Content\inverted.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\inverted.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\inverted.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping generic file ..\..\inverted.pvr as ..\..\Content\inverted.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\inverted.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\inverted.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\highcontrast.pvr">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping generic file ..\..\highcontrast.pvr as ..\..\Content\highcontrast.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\highcontrast.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\highcontrast.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping generic file ..\..\highcontrast.pvr as ..\..\Content\highcontrast.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\highcontrast.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\highcontrast.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping generic file ..\..\highcontrast.pvr as ..\..\Content\highcontrast.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\highcontrast.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\highcontrast.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping generic file ..\..\highcontrast.pvr as ..\..\Content\highcontrast.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\highcontrast.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\highcontrast.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\bluewhitegradient.pvr">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping generic file ..\..\bluewhitegradient.pvr as ..\..\Content\bluewhitegradient.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\bluewhitegradient.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\bluewhitegradient.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping generic file ..\..\bluewhitegradient.pvr as ..\..\Content\bluewhitegradient.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\bluewhitegradient.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\bluewhitegradient.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping generic file ..\..\bluewhitegradient.pvr as ..\..\Content\bluewhitegradient.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\bluewhitegradient.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\bluewhitegradient.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping generic file ..\..\bluewhitegradient.pvr as ..\..\Content\bluewhitegradient.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\bluewhitegradient.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\bluewhitegradient.cpp;%(Outputs)</Outputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\FragShader.fsh">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping shader ..\..\FragShader.fsh as ..\..\Content\FragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\FragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\FragShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping shader ..\..\FragShader.fsh as ..\..\Content\FragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\FragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\FragShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping shader ..\..\FragShader.fsh as ..\..\Content\FragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\FragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\FragShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping shader ..\..\FragShader.fsh as ..\..\Content\FragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\FragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\FragShader.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\VertShader.vsh">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping shader ..\..\VertShader.vsh as ..\..\Content\VertShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\VertShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\VertShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping shader ..\..\VertShader.vsh as ..\..\Content\VertShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\VertShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\VertShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping shader ..\..\VertShader.vsh as ..\..\Content\VertShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\VertShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\VertShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping shader ..\..\VertShader.vsh as ..\..\Content\VertShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\VertShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\VertShader.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\SceneFragShader.fsh">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping shader ..\..\SceneFragShader.fsh as ..\..\Content\SceneFragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\SceneFragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\SceneFragShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping shader ..\..\SceneFragShader.fsh as ..\..\Content\SceneFragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\SceneFragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\SceneFragShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping shader ..\..\SceneFragShader.fsh as ..\..\Content\SceneFragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\SceneFragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\SceneFragShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping shader ..\..\SceneFragShader.fsh as ..\..\Content\SceneFragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\SceneFragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\SceneFragShader.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\SceneVertShader.vsh">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping shader ..\..\SceneVertShader.vsh as ..\..\Content\SceneVertShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\SceneVertShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\SceneVertShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping shader ..\..\SceneVertShader.vsh as ..\..\Content\SceneVertShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\SceneVertShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\SceneVertShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping shader ..\..\SceneVertShader.vsh as ..\..\Content\SceneVertShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\SceneVertShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\SceneVertShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping shader ..\..\SceneVertShader.vsh as ..\..\Content\SceneVertShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\SceneVertShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\SceneVertShader.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\BackgroundFragShader.fsh">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping shader ..\..\BackgroundFragShader.fsh as ..\..\Content\BackgroundFragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\BackgroundFragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\BackgroundFragShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping shader ..\..\BackgroundFragShader.fsh as ..\..\Content\BackgroundFragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\BackgroundFragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\BackgroundFragShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping shader ..\..\BackgroundFragShader.fsh as ..\..\Content\BackgroundFragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\BackgroundFragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\BackgroundFragShader.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping shader ..\..\BackgroundFragShader.fsh as ..\..\Content\BackgroundFragShader.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -s -o "..\..\Content\BackgroundFragShader.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\BackgroundFragShader.cpp;%(Outputs)</Outputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\MaskTexture.pvr">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping texture ..\..\MaskTexture.pvr as ..\..\Content\MaskTexture.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\MaskTexture.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\MaskTexture.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping texture ..\..\MaskTexture.pvr as ..\..\Content\MaskTexture.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\MaskTexture.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\MaskTexture.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping texture ..\..\MaskTexture.pvr as ..\..\Content\MaskTexture.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\MaskTexture.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\MaskTexture.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping texture ..\..\MaskTexture.pvr as ..\..\Content\MaskTexture.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\MaskTexture.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\MaskTexture.cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\Background.pvr">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Wrapping texture ..\..\Background.pvr as ..\..\Content\Background.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\Background.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\Content\Background.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Wrapping texture ..\..\Background.pvr as ..\..\Content\Background.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\Background.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\..\Content\Background.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Wrapping texture ..\..\Background.pvr as ..\..\Content\Background.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\Background.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\Content\Background.cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Wrapping texture ..\..\Background.pvr as ..\..\Content\Background.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(ProjectDir)..\..\..\..\..\..\Utilities\Filewrap\Windows_x86_32\Filewrap.exe" -o "..\..\Content\Background.cpp" "%(FullPath)"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\..\Content\Background.cpp;%(Outputs)</Outputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\..\..\..\Tools\OGLES3\Build\WindowsVC2010\OGLES3Tools.vcxproj">
      <Project>{9088fc9e-9843-4e0d-85d0-1b657afc480a}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>