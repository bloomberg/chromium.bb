This tests the constructor for the SecurityPolicyViolationEvent DOM class.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS new SecurityPolicyViolationEvent('eventType').bubbles is true
PASS new SecurityPolicyViolationEvent('eventType').cancelable is false
PASS new SecurityPolicyViolationEvent('eventType').documentURI is ""
PASS new SecurityPolicyViolationEvent('eventType').referrer is ""
PASS new SecurityPolicyViolationEvent('eventType').blockedURI is ""
PASS new SecurityPolicyViolationEvent('eventType').violatedDirective is ""
PASS new SecurityPolicyViolationEvent('eventType').effectiveDirective is ""
PASS new SecurityPolicyViolationEvent('eventType').originalPolicy is ""
PASS new SecurityPolicyViolationEvent('eventType').sourceFile is ""
PASS new SecurityPolicyViolationEvent('eventType').disposition is "enforce"
PASS new SecurityPolicyViolationEvent('eventType').lineNumber is 0
PASS new SecurityPolicyViolationEvent('eventType').columnNumber is 0
PASS new SecurityPolicyViolationEvent('eventType').statusCode is 0
PASS new SecurityPolicyViolationEvent('eventType', { bubbles: false }).bubbles is true
PASS new SecurityPolicyViolationEvent('eventType', { bubbles: true }).bubbles is true
PASS new SecurityPolicyViolationEvent('eventType', { cancelable: false }).cancelable is false
PASS new SecurityPolicyViolationEvent('eventType', { cancelable: true }).cancelable is false
PASS new SecurityPolicyViolationEvent('eventType', { documentURI: 'foo' }).documentURI is "foo"
PASS new SecurityPolicyViolationEvent('eventType', { referrer: 'foo' }).referrer is "foo"
PASS new SecurityPolicyViolationEvent('eventType', { blockedURI: 'foo' }).blockedURI is "foo"
PASS new SecurityPolicyViolationEvent('eventType', { violatedDirective: 'foo' }).violatedDirective is "foo"
PASS new SecurityPolicyViolationEvent('eventType', { effectiveDirective: 'foo' }).effectiveDirective is "foo"
PASS new SecurityPolicyViolationEvent('eventType', { originalPolicy: 'foo' }).originalPolicy is "foo"
PASS new SecurityPolicyViolationEvent('eventType', { sourceFile: 'foo' }).sourceFile is "foo"
PASS new SecurityPolicyViolationEvent('eventType', { disposition: 'foo' }).disposition threw exception TypeError: Failed to construct 'SecurityPolicyViolationEvent': The provided value 'foo' is not a valid enum value of type SecurityPolicyViolationEventDisposition..
PASS new SecurityPolicyViolationEvent('eventType', { lineNumber: 42 }).lineNumber is 42
PASS new SecurityPolicyViolationEvent('eventType', { columnNumber: 42 }).columnNumber is 42
PASS new SecurityPolicyViolationEvent('eventType', { statusCode: 42 }).statusCode is 42
PASS successfullyParsed is true

TEST COMPLETE

