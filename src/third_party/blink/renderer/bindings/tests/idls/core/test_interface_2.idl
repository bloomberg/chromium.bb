/*
 * Copyright (C) 2013 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// This is for interface extended attributes that interact with another extended
// attribute, and thus both cannot be tested at once; and for special
// operations, which need a separate interface to test on.
// The more *minor* extended attribute should be put in this file.

[
    ActiveScriptWrappable, // Covered by [ActiveScriptWrappable]
    // Note that Exposed(Arguments) has no effect on bindings-tests. It is
    // processed in generate_global_constructors.py.
    Exposed(Window FeatureName) // Conflicts with Exposed=(Window,Worker)
] interface TestInterface2 {
    constructor();
    // This interface has only runtime enabled constants.
    [RuntimeEnabled=RuntimeFeature] const unsigned short CONST_VALUE_1 = 1;

    // Indexed property operations with an identifier
    [RaisesException] getter TestInterfaceEmpty item(unsigned long index);
    [RaisesException] setter TestInterfaceEmpty setItem(unsigned long index, TestInterfaceEmpty value);
    [RaisesException] deleter boolean deleteItem(unsigned long index);

    // Named property operations with an identifier
    [RaisesException] getter TestInterfaceEmpty namedItem(DOMString name);
    [RaisesException] setter TestInterfaceEmpty setNamedItem(DOMString name, TestInterfaceEmpty? value);
    [RaisesException] deleter boolean deleteNamedItem(DOMString name);

    stringifier DOMString stringifierMethod();

    readonly setlike<TestInterfaceEmpty>;
};
