// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// https://w3c.github.io/webappsec-credential-management/#federatedcredential

enum FederatedCredentialApprover {
  "auto",
  "user"
};

[
    Exposed=Window,
    SecureContext
] interface FederatedCredential : Credential {
    [RaisesException] constructor(FederatedCredentialInit data);
    readonly attribute USVString provider;

    // https://github.com/fedidcg/FedCM
    [RuntimeEnabled=WebID] readonly attribute USVString idToken;

    // Allows the RP to distinguish whether an "auto" sign-in [1] happened or an
    // "explicit" sign-in [2] happened.
    // [1] https://fedidcg.github.io/FedCM/#use-cases-auto-sign-in
    // [2] https://fedidcg.github.io/FedCM/#use-cases-explicit-sign-in
    [RuntimeEnabled=WebID] readonly attribute FederatedCredentialApprover approvedBy;

    // Allows IDPs to logout the user out of all of the logged in RPs.
    [RuntimeEnabled=WebID, CallWith=ScriptState]
    static Promise<void> logoutRps(optional sequence<FederatedCredentialLogoutRpsRequest> logout_requests = []);

    [RuntimeEnabled=WebID, CallWith=ScriptState, RaisesException]
    static Promise<void> revoke(USVString account_id, FederatedIdentityProvider provider);

    // TODO(mkwst): We don't really support this yet; it always returns ''.
    readonly attribute DOMString? protocol;
};
FederatedCredential includes CredentialUserData;
