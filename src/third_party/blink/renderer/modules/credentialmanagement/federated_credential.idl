// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// https://w3c.github.io/webappsec-credential-management/#federatedcredential

[Exposed=Window, SecureContext]
dictionary FederatedAccountLoginRequest {
  AbortSignal signal;
  DOMString nonce;
};

[Exposed=Window, SecureContext]
dictionary FederatedTokens {
  USVString idToken;
};

[
    Exposed=Window,
    SecureContext
] interface FederatedCredential : Credential {
    [RaisesException] constructor(FederatedCredentialInit data);
    readonly attribute USVString provider;

    // Gets an idToken from the IDP.
    [RuntimeEnabled=FedCm, CallWith=ScriptState]
    Promise<FederatedTokens> login(optional FederatedAccountLoginRequest request = {});

    // https://fedidcg.github.io/FedCM/#browser-api-rp-sign-out
    [RuntimeEnabled=FedCm, CallWith=ScriptState, MeasureAs=FedCmLogout] Promise<void> logout();

    // https://fedidcg.github.io/FedCM/#browser-api-revocation
    [RuntimeEnabled=FedCm, CallWith=ScriptState, RaisesException, MeasureAs=FedCmRevoke]
    Promise<void> revoke(USVString hint);

    // Allows IDPs to logout the user out of all of the logged in RPs.
    [RuntimeEnabled=FedCmIdpSignout, CallWith=ScriptState, MeasureAs=FedCmLogoutRps]
    static Promise<void> logoutRps(optional sequence<FederatedCredentialLogoutRpsRequest> logout_requests = []);

    // TODO(mkwst): We don't really support this yet; it always returns ''.
    readonly attribute DOMString? protocol;
};
FederatedCredential includes CredentialUserData;
