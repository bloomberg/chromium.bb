// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// https://w3c.github.io/mediacapture-region/
[
    Exposed = Window,
    RuntimeEnabled = RegionCapture
]
interface BrowserCaptureMediaStreamTrack : MediaStreamTrack {
  // 1. If |cropTarget| is a non-empty string, start cropping the track
  //    to the coordinates of the element represented by |cropTarget|.
  //    Return a Promise that resolves once cropping has been fully initiated
  //    and the browser guarantees all subsequent frames produced on this track
  //    will be cropped.
  // 2. If |cropTarget| is |undefined|, stop cropping.
  //    Return a Promise that resolves when this instruction has been fully
  //    propagated and subsequent frames are guaranteed to be uncropped.
  [CallWith = ScriptState, RaisesException, MeasureAs = RegionCapture]
  Promise<void> cropTo(CropTarget? crop_id);

  // See FocusableMediaStreamTrack.focus() for more details of what this method
  // does and how it behaves. It is here because:
  // * BrowserCaptureMediaStreamTrack is for tab-capture, and is shipped.
  // * FocusableMediaStreamTrack is for window-capture, and is in Origin Trial.
  // Both tabs and windows are focusable, so both expose focus() if the
  // ConditionalFocus OT is active.
  [
    CallWith = ExecutionContext,
    RaisesException,
    MeasureAs = ConditionalFocus,
    RuntimeEnabled = ConditionalFocus
  ] void focus(CaptureStartFocusBehavior focus_behavior);
};
