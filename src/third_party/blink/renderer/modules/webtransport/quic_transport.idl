// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// https://wicg.github.io/web-transport/#quic-transport
[
    ActiveScriptWrappable,
    Exposed=(Window,Worker),
    RuntimeEnabled=QuicTransport
] interface QuicTransport {
  [CallWith=ScriptState, RaisesException, MeasureAs=QuicTransport] constructor(USVString url);
  // QuicTransport is the first, and at this moment only, transport which is
  // implemented. In the (draft) spec there are many mix-in interfaces which
  // QuicTransport includes, but we define all their methods/attributes here
  // for simplicity.

  // From UnidirectionalStreamsTransport
  [CallWith=ScriptState, RaisesException, MeasureAs=QuicTransportStreamApis] Promise<SendStream>
      createSendStream();
  // TODO(ricea): This should probably be changed to an attribute in the
  // standard.
  [MeasureAs=QuicTransportStreamApis] ReadableStream receiveStreams();

  // From BidirectionalStreamsTransport
  [CallWith=ScriptState, RaisesException, MeasureAs=QuicTransportStreamApis] Promise<BidirectionalStream>
      createBidirectionalStream();
  [MeasureAs=QuicTransportStreamApis] ReadableStream receiveBidirectionalStreams();

  // From DatagramTransport mixin
  [MeasureAs=QuicTransportDatagramApis] WritableStream sendDatagrams();
  [MeasureAs=QuicTransportDatagramApis] ReadableStream receiveDatagrams();

  // From WebTransport mixin
  void close(optional WebTransportCloseInfo closeInfo = {});
  readonly attribute Promise<void> ready;
  readonly attribute Promise<WebTransportCloseInfo> closed;
};
