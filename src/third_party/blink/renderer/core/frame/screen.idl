/*
 * Copyright (C) 2007 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1.  Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 * 2.  Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 * 3.  Neither the name of Apple Computer, Inc. ("Apple") nor the names of
 *     its contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// https://drafts.csswg.org/cssom-view/#the-screen-interface

[
    Exposed=Window
] interface Screen {
    [HighEntropy=Direct, Measure] readonly attribute long availWidth;
    [HighEntropy=Direct, Measure] readonly attribute long availHeight;
    [HighEntropy=Direct, Measure] readonly attribute long width;
    [HighEntropy=Direct, Measure] readonly attribute long height;
    [HighEntropy=Direct, Measure] readonly attribute unsigned long colorDepth;
    // pixelDepth() is an alias for colorDepth(), no need to instrument it twice.
    [HighEntropy, Measure] readonly attribute unsigned long pixelDepth;

    // Non-standard
    [HighEntropy=Direct, Measure] readonly attribute long availLeft;
    [HighEntropy=Direct, Measure] readonly attribute long availTop;

    // Proposed
    // https://github.com/webscreens/window-placement
    [SecureContext, HighEntropy, MeasureAs=WindowScreenChange, RuntimeEnabled=WindowPlacement] attribute EventHandler onchange;
    [SecureContext, HighEntropy=Direct, MeasureAs=WindowScreenIsExtended, RuntimeEnabled=WindowPlacement] readonly attribute boolean isExtended;
    // TODO(crbug.com/1171486): Inherit from EventTarget or remove these:
    [RuntimeEnabled=WindowPlacement] void addEventListener(DOMString type, EventListener? listener, optional (AddEventListenerOptions or boolean) options);
    [RuntimeEnabled=WindowPlacement] void removeEventListener(DOMString type, EventListener? listener, optional (EventListenerOptions or boolean) options);
    [ImplementedAs=dispatchEventForBindings, RaisesException, RuntimeCallStatsCounter=EventTargetDispatchEvent, RuntimeEnabled=WindowPlacement] boolean dispatchEvent(Event event);
    // TODO(crbug.com/1116528): Move permission-gated attributes to an interface that inherits from Screen.
    [HighEntropy=Direct, MeasureAs=WindowScreenLeft, RuntimeEnabled=WindowPlacement] readonly attribute long left;
    [HighEntropy=Direct, MeasureAs=WindowScreenTop, RuntimeEnabled=WindowPlacement] readonly attribute long top;
    [HighEntropy=Direct, MeasureAs=WindowScreenInternal, RuntimeEnabled=WindowPlacement] readonly attribute boolean internal;
    [HighEntropy=Direct, MeasureAs=WindowScreenPrimary, RuntimeEnabled=WindowPlacement] readonly attribute boolean primary;
    [RuntimeEnabled=WindowPlacement] readonly attribute float scaleFactor;
    [HighEntropy=Direct, MeasureAs=WindowScreenId, RuntimeEnabled=WindowPlacement] readonly attribute DOMString id;
    [HighEntropy=Direct, MeasureAs=WindowScreenTouchSupport, RuntimeEnabled=WindowPlacement] readonly attribute boolean touchSupport;
};
