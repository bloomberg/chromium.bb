{% from 'templates/macros.tmpl' import license, source_files_for_generated_file %}
{{license()}}


#include "third_party/blink/public/common/permissions_policy/permissions_policy_features.h"

#include "base/no_destructor.h"
#include "base/feature_list.h"
#include "third_party/blink/public/common/features.h"
#include "third_party/blink/public/mojom/permissions_policy/permissions_policy_feature.mojom.h"

namespace blink {

const PermissionsPolicyFeatureList& GetPermissionsPolicyFeatureList() {
  static const base::NoDestructor<PermissionsPolicyFeatureList> feature_list([] {
    PermissionsPolicyFeatureList map({
      {%- for feature in features %}
        {
          mojom::PermissionsPolicyFeature::k{{feature.name}},
          PermissionsPolicyFeatureDefault::{{feature.feature_default}}
        },
      {%- endfor %}
    });

    {%- for feature in features %}
    {%- if feature.default_value_behind_flag %}
      {%- for flag, default_value in feature.default_value_behind_flag %}
        {%- if not loop.first %} else {% endif %}
        if (base::FeatureList::IsEnabled(features::k{{flag}})) {
          map.find(mojom::PermissionsPolicyFeature::k{{feature.name}})->second =
            PermissionsPolicyFeatureDefault::{{default_value}};
        }
      {%- endfor %}
    {%- endif %}
    {%- endfor %}

    return map;
  }());
  return *feature_list;
}

} // namespace blink
