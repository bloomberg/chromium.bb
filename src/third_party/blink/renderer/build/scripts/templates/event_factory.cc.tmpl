{% from 'templates/macros.tmpl' import license, source_files_for_generated_file %}
{{license()}}

{{source_files_for_generated_file(template_file, input_files)}}

{% if suffix == 'Modules' %}
#include "third_party/blink/renderer/modules/event_modules_factory.h"
{% else %}
#include "third_party/blink/renderer/core/events/event_factory.h"
{% endif %}

#include "third_party/blink/renderer/core/frame/deprecation.h"
{% for header_path in include_header_paths %}
#include "{{header_path}}"
{% endfor %}
#include "third_party/blink/renderer/platform/runtime_enabled_features.h"

namespace blink {

Event* Event{{suffix}}Factory::Create(ExecutionContext* executionContext, const String& type) {
  {% for event in events if event|name|create_event_ignore_case_list or event|name|create_event_ignore_case_and_measure_list %}
  {% if event|name|create_event_ignore_case_list or event|name|create_event_ignore_case_and_measure_list %}
  if (DeprecatedEqualIgnoringCase(type, "{{event|name}}"){% if event.RuntimeEnabled %} && RuntimeEnabledFeatures::{{event.RuntimeEnabled}}(){% endif %}) {
  {% else %}
  if (type == "{{event|name}}"{% if event.RuntimeEnabled %} && RuntimeEnabledFeatures::{{event.RuntimeEnabled}}(){% endif %}) {
  {% endif %}
    {% if not event|name|create_event_ignore_case_list %}
    UseCounter::Count(executionContext, WebFeature::k{{event|name|measure_name}});
    {% endif %}
    return {{event|cpp_name}}::Create();
  }
  {% endfor %}
  return nullptr;
}

} // namespace blink
