Tests DOMSnapshot.getSnapshot exports layout tree nodes associated with pseudo elements.
{
  "documents": [
    {
      "documentURL": "<number>",
      "baseURL": "<number>",
      "contentLanguage": -1,
      "encodingName": 1,
      "publicId": -1,
      "systemId": -1,
      "frameId": "<number>",
      "nodes": {
        "parentIndex": [
          -1,
          0,
          1,
          2,
          3,
          2,
          2,
          2,
          1,
          8,
          8,
          10,
          10,
          8,
          8,
          14,
          14,
          16,
          8,
          8,
          19,
          19,
          19,
          8
        ],
        "nodeType": [
          9,
          1,
          1,
          1,
          3,
          3,
          1,
          3,
          1,
          3,
          1,
          1,
          3,
          3,
          1,
          1,
          1,
          3,
          3,
          1,
          1,
          1,
          3,
          3
        ],
        "nodeName": [
          3,
          4,
          7,
          8,
          9,
          9,
          12,
          9,
          15,
          9,
          17,
          20,
          9,
          9,
          17,
          20,
          27,
          9,
          9,
          17,
          20,
          34,
          9,
          9
        ],
        "nodeValue": [
          -1,
          -1,
          -1,
          -1,
          10,
          11,
          -1,
          11,
          -1,
          16,
          -1,
          -1,
          25,
          16,
          -1,
          -1,
          -1,
          28,
          16,
          -1,
          -1,
          -1,
          39,
          40
        ],
        "backendNodeId": "<object>",
        "attributes": [
          [],
          [],
          [],
          [],
          [],
          [],
          [
            13,
            14
          ],
          [],
          [],
          [],
          [
            18,
            19
          ],
          [],
          [],
          [],
          [
            18,
            19
          ],
          [],
          [],
          [],
          [],
          [
            18,
            30
          ],
          [],
          [],
          [],
          []
        ],
        "textValue": {
          "index": [],
          "value": []
        },
        "inputValue": {
          "index": [],
          "value": []
        },
        "inputChecked": {
          "index": []
        },
        "optionSelected": {
          "index": []
        },
        "contentDocumentIndex": {
          "index": [],
          "value": []
        },
        "pseudoType": {
          "index": [
            11,
            15,
            20,
            21
          ],
          "value": [
            24,
            24,
            24,
            38
          ]
        },
        "isClickable": {
          "index": []
        },
        "currentSourceURL": {
          "index": [],
          "value": []
        },
        "originURL": {
          "index": [],
          "value": []
        }
      },
      "layout": {
        "nodeIndex": [
          0,
          1,
          8,
          10,
          11,
          11,
          12,
          14,
          15,
          15,
          16,
          17,
          19,
          20,
          20,
          21,
          21,
          21,
          21,
          21,
          22
        ],
        "styles": [
          [
            -1,
            -1
          ],
          [
            5,
            6
          ],
          [
            5,
            6
          ],
          [
            5,
            6
          ],
          [
            21,
            22
          ],
          [
            21,
            22
          ],
          [
            5,
            6
          ],
          [
            5,
            6
          ],
          [
            21,
            22
          ],
          [
            21,
            22
          ],
          [
            5,
            6
          ],
          [
            5,
            6
          ],
          [
            5,
            6
          ],
          [
            31,
            32
          ],
          [
            31,
            32
          ],
          [
            5,
            6
          ],
          [
            5,
            6
          ],
          [
            5,
            6
          ],
          [
            5,
            6
          ],
          [
            5,
            6
          ],
          [
            5,
            6
          ]
        ],
        "bounds": [
          [
            0,
            0,
            800,
            600
          ],
          [
            0,
            0,
            800,
            600
          ],
          [
            8,
            8,
            784,
            584
          ],
          [
            8,
            18,
            200,
            200
          ],
          [
            8,
            18,
            10,
            10
          ],
          [
            8,
            18,
            10,
            10
          ],
          [
            8,
            18,
            140,
            20
          ],
          [
            8,
            18,
            200,
            200
          ],
          [
            8,
            18,
            10,
            10
          ],
          [
            8,
            18,
            10,
            10
          ],
          [
            8,
            18,
            200,
            30
          ],
          [
            8,
            18,
            200,
            30
          ],
          [
            8,
            18,
            200,
            200
          ],
          [
            8,
            110,
            10,
            10
          ],
          [
            8,
            110,
            10,
            10
          ],
          [
            8,
            110,
            200,
            10
          ],
          [
            18,
            110,
            70,
            10
          ],
          [
            88,
            110,
            10,
            10
          ],
          [
            98,
            18,
            100,
            100
          ],
          [
            198,
            110,
            10,
            10
          ],
          [
            8,
            120,
            190,
            30
          ]
        ],
        "text": [
          -1,
          -1,
          -1,
          -1,
          -1,
          23,
          26,
          -1,
          -1,
          23,
          -1,
          29,
          -1,
          -1,
          33,
          -1,
          35,
          36,
          -1,
          37,
          39
        ],
        "stackingContexts": {
          "index": [
            0,
            1
          ]
        }
      },
      "textBoxes": {
        "layoutIndex": [
          5,
          6,
          6,
          9,
          11,
          11,
          11,
          14,
          16,
          17,
          19,
          20,
          20,
          20
        ],
        "bounds": [
          [
            8,
            18,
            10,
            10
          ],
          [
            18,
            18,
            130,
            10
          ],
          [
            8,
            28,
            70,
            10
          ],
          [
            8,
            18,
            10,
            10
          ],
          [
            18,
            18,
            130,
            10
          ],
          [
            8,
            28,
            200,
            10
          ],
          [
            8,
            38,
            70,
            10
          ],
          [
            8,
            110,
            10,
            10
          ],
          [
            18,
            110,
            70,
            10
          ],
          [
            88,
            110,
            10,
            10
          ],
          [
            198,
            110,
            10,
            10
          ],
          [
            8,
            120,
            190,
            10
          ],
          [
            8,
            130,
            160,
            10
          ],
          [
            8,
            140,
            130,
            10
          ]
        ],
        "start": [
          0,
          0,
          14,
          0,
          0,
          14,
          35,
          0,
          0,
          0,
          0,
          0,
          20,
          37
        ],
        "length": [
          1,
          13,
          7,
          1,
          13,
          20,
          7,
          1,
          7,
          1,
          1,
          19,
          16,
          13
        ]
      },
      "scrollOffsetX": 0,
      "scrollOffsetY": 0
    }
  ],
  "strings": [
    "",
    "",
    "",
    "#document",
    "HTML",
    "400",
    "rgb(0, 0, 0)",
    "HEAD",
    "STYLE",
    "#text",
    "\n    p {\n      position: absolute;\n      height: 200px;\n      width: 200px;\n      font: 10px Ahem;\n    }\n    .c1::first-letter { font-weight: lighter; color: green; }\n    .c2::first-letter { font-weight: bold; color: blue; }\n    .c2::before { counter-increment: square; content: 'square: ' counter(square) url(square.png) '! '; }\n  ",
    "\n  ",
    "SCRIPT",
    "src",
    "../../resources/ahem.js",
    "BODY",
    "\n    ",
    "P",
    "class",
    "c1",
    "<pseudo:first-letter>",
    "100",
    "rgb(0, 128, 0)",
    "I",
    "first-letter",
    "I have a first letter.",
    " have a first letter.",
    "SPAN",
    "I have a first letter because of my parent.",
    " have a first letter because of my parent.",
    "c2",
    "700",
    "rgb(0, 0, 255)",
    "s",
    "<pseudo:before>",
    "quare: ",
    "1",
    "! ",
    "before",
    "I have some content before me with a first letter.",
    "\n  \n\n"
  ]
}

