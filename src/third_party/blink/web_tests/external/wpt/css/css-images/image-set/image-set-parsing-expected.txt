This is a testharness.js-based test.
Found 50 tests; 20 PASS, 30 FAIL, 0 TIMEOUT, 0 NOTRUN.
FAIL e.style['background-image'] = "image-set(url(example.png) 1x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(url(example.png) 1x)" should set the property value assert_equals: serialization should be canonical expected "image-set(url(\"example.png\") 1x)" but got "-webkit-image-set(url(\"example.png\") 1x)"
FAIL e.style['background-image'] = "image-set(url(\"example.png\") 1x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(url(\"example.png\") 1x)" should set the property value assert_equals: serialization should be canonical expected "image-set(url(\"example.png\") 1x)" but got "-webkit-image-set(url(\"example.png\") 1x)"
FAIL e.style['background-image'] = "image-set('example.jpg' 1x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set('example.jpg' 1x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "image-set(url(example.png) 1x, 'example.png' 2x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(url(example.png) 1x, 'example.png' 2x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "image-set(url(\"example.png\") 1dppx)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(url(\"example.png\") 1dppx)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "image-set(url(\"example.png\") 1dpi)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(url(\"example.png\") 1dpi)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "image-set(url(\"example.png\") 1dpcm)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(url(\"example.png\") 1dpcm)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "image-set(url(example.png) 1dpcm, 'example.png' 2x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(url(example.png) 1dpcm, 'example.png' 2x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "image-set('example.jpeg' 222dpi, url(example.png) 3.5x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set('example.jpeg' 222dpi, url(example.png) 3.5x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "image-set(linear-gradient(black, white) 1x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(linear-gradient(black, white) 1x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "image-set(url(\"example.png\") 1x type(\"image/png\"))" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(url(\"example.png\") 1x type(\"image/png\"))" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "image-set(url(example.png) type('image/png'))" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(url(example.png) type('image/png'))" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "image-set(url(example.png) type('image/png') 1x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['background-image'] = "-webkit-image-set(url(example.png) type('image/png') 1x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['content'] = "image-set(linear-gradient(black, white) 1x, 'example.png' 4x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['content'] = "-webkit-image-set(linear-gradient(black, white) 1x, 'example.png' 4x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['content'] = "image-set(url(\"example.png\") 192dpi, linear-gradient(black, white) 1x)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['content'] = "-webkit-image-set(url(\"example.png\") 192dpi, linear-gradient(black, white) 1x)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['background-image'] = "image-set(none, url(example.png) 1x)" should not set the property value
PASS e.style['background-image'] = "-webkit-image-set(none, url(example.png) 1x)" should not set the property value
PASS e.style['background-image'] = "image-set()" should not set the property value
PASS e.style['background-image'] = "-webkit-image-set()" should not set the property value
PASS e.style['background-image'] = "image-set(url(example.png) 0x)" should not set the property value
PASS e.style['background-image'] = "-webkit-image-set(url(example.png) 0x)" should not set the property value
PASS e.style['background-image'] = "image-set(url(example.png) -20x)" should not set the property value
PASS e.style['background-image'] = "-webkit-image-set(url(example.png) -20x)" should not set the property value
PASS e.style['background-image'] = "image-set('example.jpeg' 92pid url(example.png) 1x)" should not set the property value
PASS e.style['background-image'] = "-webkit-image-set('example.jpeg' 92pid url(example.png) 1x)" should not set the property value
PASS e.style['background-image'] = "image-set(url(example.png) type(image/png))" should not set the property value
PASS e.style['background-image'] = "-webkit-image-set(url(example.png) type(image/png))" should not set the property value
PASS e.style['background-image'] = "image-set(url(example.png) type('image/png') type('image/png'))" should not set the property value
PASS e.style['background-image'] = "-webkit-image-set(url(example.png) type('image/png') type('image/png'))" should not set the property value
PASS e.style['background-image'] = "image-set(url(example.png) 1xtype('image/png'))" should not set the property value
PASS e.style['background-image'] = "-webkit-image-set(url(example.png) 1xtype('image/png'))" should not set the property value
PASS e.style['background-image'] = "image-set(type('image/png') url(example.png) 1x)" should not set the property value
PASS e.style['background-image'] = "-webkit-image-set(type('image/png') url(example.png) 1x)" should not set the property value
PASS e.style['cursor'] = "image-set(linear-gradient(black, white) 1x)" should not set the property value
PASS e.style['cursor'] = "-webkit-image-set(linear-gradient(black, white) 1x)" should not set the property value
Harness: the test ran to completion.

