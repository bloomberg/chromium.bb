This is a testharness.js-based test.
PASS :has(#a) matches expected elements
PASS :has(.ancestor) matches expected elements
PASS :has(.target) matches expected elements
PASS :has(.descendant) matches expected elements
PASS .parent:has(.target) matches expected elements
PASS :has(.sibling ~ .target) matches expected elements
PASS .parent:has(.sibling ~ .target) matches expected elements
PASS :has(:is(.target ~ .sibling .descendant)) matches expected elements
PASS .parent:has(:is(.target ~ .sibling .descendant)) matches expected elements
PASS .sibling:has(.descendant) ~ .target matches expected elements
PASS :has(.sibling:has(.descendant) ~ .target) matches expected elements
PASS :has(.sibling:has(.descendant) ~ .target) ~ .parent > .descendant matches expected elements
PASS :has(:scope .target) matches expected elements
PASS :has(:scope > .parent) matches expected elements
FAIL :has(> .target) matches expected elements Failed to execute 'querySelectorAll' on 'Element': ':has(> .target)' is not a valid selector.
PASS :has(:scope > .target) matches expected elements
FAIL :has(+ #h) matches expected elements Failed to execute 'querySelectorAll' on 'Element': ':has(+ #h)' is not a valid selector.
PASS :has(:scope + #h) matches expected elements
FAIL .parent:has(~ #h) matches expected elements Failed to execute 'querySelectorAll' on 'Element': '.parent:has(~ #h)' is not a valid selector.
PASS .parent:has(:scope ~ #h) matches expected elements
PASS .sibling:has(.descendant) matches expected element
PASS closest(.ancestor:has(.descendant)) returns expected element
PASS :has(.target ~ .sibling .descendant) matches expectedly
Harness: the test ran to completion.

