This is a testharness.js-based test.
PASS AbortController abort() should fire event synchronously
PASS controller.signal should always return the same object
PASS controller.abort() should do nothing the second time it is called
PASS event handler should not be called if added after controller.abort()
PASS the abort event should have the right properties
PASS AbortController abort(reason) should set signal.reason
PASS aborting AbortController without reason creates an "AbortError" DOMException
PASS AbortController abort(undefined) creates an "AbortError" DOMException
PASS AbortController abort(null) should set signal.reason
PASS static aborting signal should have right properties
PASS static aborting signal with reason should set signal.reason
FAIL throwIfAborted() should throw abort.reason if signal aborted assert_throws_exactly: function "() => signal.throwIfAborted()" threw object "TypeError: signal.throwIfAborted is not a function" but we expected it to throw object "Error: boom"
FAIL throwIfAborted() should throw primitive abort.reason if signal aborted assert_throws_exactly: function "() => signal.throwIfAborted()" threw object "TypeError: signal.throwIfAborted is not a function" but we expected it to throw "hello"
FAIL throwIfAborted() should not throw if signal not aborted controller.signal.throwIfAborted is not a function
Harness: the test ran to completion.

