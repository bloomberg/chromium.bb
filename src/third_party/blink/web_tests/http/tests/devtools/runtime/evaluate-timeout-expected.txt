Test frontend's timeout support.


Testing expression while (1){} with timeout: 0
error: Execution was terminated
{
    error : "Execution was terminated"
}

Testing expression 1 + 1 with timeout: undefined
{
    exceptionDetails : undefined
    object : {
        classNameInternal : null
        customPreviewInternal : null
        descriptionInternal : "2"
        hasChildrenInternal : false
        objectIdInternal : undefined
        previewInternal : undefined
        runtimeAgent : <object>
        runtimeModelInternal : <object>
        subtypeInternal : undefined
        typeInternal : "number"
        unserializableValueInternal : undefined
        valueInternal : 2
    }
}

Does the runtime also support side effect checks? true

Clearing cached side effect support
Set timer for test function.
Script execution paused.

Testing expression while (1){} with timeout: 0
error: Execution was terminated
{
    error : "Execution was terminated"
}

Testing expression 1 + 1 with timeout: undefined
{
    exceptionDetails : undefined
    object : {
        classNameInternal : null
        customPreviewInternal : null
        descriptionInternal : "2"
        hasChildrenInternal : false
        objectIdInternal : undefined
        previewInternal : undefined
        runtimeAgent : <object>
        runtimeModelInternal : <object>
        subtypeInternal : undefined
        typeInternal : "number"
        unserializableValueInternal : undefined
        valueInternal : 2
    }
}
Does the runtime also support side effect checks? true
Script execution resumed.

