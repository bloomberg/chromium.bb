This is a testharness.js-based test.
FAIL TransformStream can be constructed with a transform function Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL TransformStream can be constructed with no transform function Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL TransformStream instances must have writable and readable properties of the correct types Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL TransformStream writable starts in the writable state Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL Identity TransformStream: can read from readable what is put into writable Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL Uppercaser sync TransformStream: can read from readable transformed version of what is put into writable Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL Uppercaser-doubler sync TransformStream: can read both chunks put into the readable Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL Uppercaser async TransformStream: can read from readable transformed version of what is put into writable Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL Uppercaser-doubler async TransformStream: can read both chunks put into the readable Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL TransformStream: by default, closing the writable closes the readable (when there are no queued writes) Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL TransformStream: by default, closing the writable waits for transforms to finish before closing both Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL TransformStream: by default, closing the writable closes the readable after sync enqueues and async done Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL TransformStream: by default, closing the writable closes the readable after async enqueues and async done Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL Transform stream should call transformer methods as methods Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL methods should not not have .apply() or .call() called Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL TransformStream start, transform, and flush should be strictly ordered Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL it should be possible to call transform() synchronously Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL closing the writable should close the readable when there are no queued chunks, even with backpressure Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL enqueue() should throw after controller.terminate() Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL enqueue() should throw after readable.cancel() Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL controller.terminate() should do nothing the second time it is called Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL terminate() should do nothing after readable.cancel() Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL start() should not be called twice Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
FAIL specifying a defined readableType should throw assert_throws: constructor should throw function "() => new TransformStream({ readableType: 'bytes' })" threw object "TypeError: Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled" ("TypeError") expected object "RangeError" ("RangeError")
FAIL specifying a defined writableType should throw assert_throws: constructor should throw function "() => new TransformStream({ writableType: 'bytes' })" threw object "TypeError: Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled" ("TypeError") expected object "RangeError" ("RangeError")
FAIL Subclassing TransformStream should work Failed to construct 'TransformStream': TransformStream disabled because StreamsNative is enabled
Harness: the test ran to completion.

