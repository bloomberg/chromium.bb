This is a testharness.js-based test.
FAIL Closing must be propagated backward: starts closed; preventCancel omitted; fulfilled cancel promise assert_array_equals: lengths differ, expected 2 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel omitted; rejected cancel promise assert_throws: pipeTo must reject with the same error function "function() { throw e }" threw object "TypeError: Failed to execute 'pipeTo' on 'ReadableStream': pipeTo disabled because StreamsNative feature is enabled" ("TypeError") expected object "error1: error1!" ("error1")
FAIL Closing must be propagated backward: starts closed; preventCancel = undefined (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 2 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = null (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 2 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = false (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 2 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = 0 (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 2 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = -0 (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 2 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = NaN (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 2 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel =  (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 2 got 0
PASS Closing must be propagated backward: starts closed; preventCancel = true (truthy)
PASS Closing must be propagated backward: starts closed; preventCancel = a (truthy)
PASS Closing must be propagated backward: starts closed; preventCancel = 1 (truthy)
PASS Closing must be propagated backward: starts closed; preventCancel = Symbol() (truthy)
PASS Closing must be propagated backward: starts closed; preventCancel = [object Object] (truthy)
PASS Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true
PASS Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true, preventClose = true
Harness: the test ran to completion.

