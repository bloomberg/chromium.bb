Tests that async stack tagging API errors out as expected.
Scheduling an async task with no argument should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Unexpected arguments
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Scheduling an async task with too many arguments should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Unexpected arguments
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Starting an async task with an non-integer task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task ID should be an integer
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Starting an async task with an inexistent task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Stopping an async task with an non-integer task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : console.stopAsyncTask is not a function
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Cancelling an async task with an non-integer task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task ID should be an integer
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Cancelling an async task with an inexistent task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Stopping an async task with an inexistent task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : console.stopAsyncTask is not a function
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Starting a cancelled async task should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                description : 0
                type : number
                value : 0
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 14
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 5
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Finishing a cancelled async task should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                description : 1
                type : number
                value : 1
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 14
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 6
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Cancelling an already finished async task should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                description : 2
                type : number
                value : 2
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 14
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 6
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Cancelling an already cancelled async task should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                description : 3
                type : number
                value : 3
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 14
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 5
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Scheduling an async task with no argument should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Unexpected arguments
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Scheduling an async task with too many arguments should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Unexpected arguments
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Starting an async task with an non-integer task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task ID should be an integer
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Starting an async task with an inexistent task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Stopping an async task with an non-integer task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : console.stopAsyncTask is not a function
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Cancelling an async task with an non-integer task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task ID should be an integer
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Cancelling an async task with an inexistent task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Stopping an async task with an inexistent task id should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : console.stopAsyncTask is not a function
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Starting a cancelled async task should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                description : 4
                type : number
                value : 4
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 14
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 5
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Finishing a cancelled async task should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                description : 5
                type : number
                value : 5
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 14
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 6
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Cancelling an already finished async task should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                description : 6
                type : number
                value : 6
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 14
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 6
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
Cancelling an already cancelled async task should fail
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                description : 7
                type : number
                value : 7
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 14
                    functionName : 
                    lineNumber : 2
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}
{
    method : Runtime.consoleAPICalled
    params : {
        args : [
            [0] : {
                type : string
                value : Task with ID doesn't exist
            }
        ]
        executionContextId : <number>
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 27
                    functionName : 
                    lineNumber : 5
                    scriptId : <string>
                    url : 
                }
            ]
        }
        timestamp : <number>
        type : log
    }
    sessionId : <string>
}

