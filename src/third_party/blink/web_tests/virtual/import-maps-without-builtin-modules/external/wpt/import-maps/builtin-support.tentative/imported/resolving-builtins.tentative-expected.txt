This is a testharness.js-based test.
PASS Unmapped built-in module specifiers / should resolve "std:blank" to "std:blank"
FAIL Unmapped built-in module specifiers / should error resolving "std:none" assert_throws: function "() => resolveUnderTest(NONE)" did not throw
PASS Remapping built-in module specifiers / should remap built-in modules
FAIL Remapping built-in module specifiers / should remap built-in modules with slashes assert_equals: expected "https://example.com/app/blank-slash/bar" but got "std:blank/bar"
FAIL Remapping built-in module specifiers / should remap built-in modules with fallbacks assert_equals: expected "https://example.com/app/none.mjs" but got "std:none"
FAIL Remapping built-in module specifiers / should remap built-in modules with slashes and fallbacks assert_equals: expected "https://example.com/app/blank/" but got "std:blank/"
PASS Remapping to built-in modules / should remap to "std:blank"
FAIL Remapping to built-in modules / should fail when remapping to "std:blank/" assert_throws: function "() => resolveUnderTest('/blank/')" did not throw
FAIL Remapping to built-in modules / should remap to "std:blank/for-testing" assert_equals: expected "std:blank/for-testing" but got "https://example.com/blank/for-testing"
PASS Remapping to built-in modules / should remap to "std:blank" for URL-like specifiers
FAIL Remapping to built-in modules / should fail when remapping to "std:none" assert_throws: function "() => resolveUnderTest('none')" did not throw
FAIL Fallbacks with built-in module addresses / should resolve to "std:blank" Failed to resolve module specifier blank: Relative references must start with either "/", "./", or "../".
FAIL Fallbacks with built-in module addresses / should fall back past "std:none" Failed to resolve module specifier none: Relative references must start with either "/", "./", or "../".
Harness: the test ran to completion.

