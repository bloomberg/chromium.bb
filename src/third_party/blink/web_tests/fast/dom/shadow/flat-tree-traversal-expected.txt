CONSOLE WARNING: line 87: Element.createShadowRoot is deprecated and will be removed in M80, around February 2020. Please use Element.attachShadow instead. See https://www.chromestatus.com/features/4507242028072960 and https://developers.google.com/web/updates/2019/07/web-components-time-to-upgrade for more details.
Tests for Composed Shadow DOM Tree Traversal APIs. Can only run within DRT

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".

ShadowRoot should be used.
Flat Tree:
#a
	#b

Traverse in forward.
#a
#b
Traverse in backward.
#b
#a

A content element should select light children
Flat Tree:
#a
	#b
	#c
	#d

Traverse in forward.
#a
#b
#c
#d
Traverse in backward.
#d
#c
#b
#a

Test for content element selector.
Flat Tree:
#a
	#b
	#d

Traverse in forward.
#a
#b
#d
Traverse in backward.
#d
#b
#a

Light children should be selected only at once.
Flat Tree:
#a
	#b
	#d
	#c
	#e

Traverse in forward.
#a
#b
#d
#c
#e
Traverse in backward.
#e
#c
#d
#b
#a

A content element can have fallback elements.
Flat Tree:
#a
	#b
	#f1
	#f2

Traverse in forward.
#a
#b
#f1
#f2
Traverse in backward.
#f2
#f1
#b
#a

Fallback elements should not be used if a content element selects an element.
Flat Tree:
#a
	#b
	#c

Traverse in forward.
#a
#b
#c
Traverse in backward.
#c
#b
#a

Test for traversal, starting with a fallback element which is not used.
Flat Tree:
#f1
	#f2

Traverse in forward.
#f1
#f2
Traverse in backward.
#f2
#f1

Next node of [#f1] is [#f2]
Next node of [#f2] is [null]

Test for Nested ShadowRoots.
Flat Tree:
#a
	#b
		#c
		#e
		#d
	#f
	#h
	#i
	#g

Traverse in forward.
#a
#b
#c
#e
#d
#f
#h
#i
#g
Traverse in backward.
#g
#i
#h
#f
#d
#e
#c
#b
#a

Test for inactive insertion points.
Flat Tree:
#a
	#b
		#c

Traverse in forward.
#a
#b
#c
Traverse in backward.
#c
#b
#a

Test for a content element which does not select any nodes nor have fallback elements.
Flat Tree:
#a
	#b
	#c

Traverse in forward.
#a
#b
#c
Traverse in backward.
#c
#b
#a

Test for a nested insertion point.
Flat Tree:
#a
	#b
		#c

Traverse in forward.
#a
#b
#c
Traverse in backward.
#c
#b
#a

Test for nested insertion points. Some of them are either empty insertion points or inactive insertion points.
Flat Tree:
#a
	#b
		#c
		#d
		#e

Traverse in forward.
#a
#b
#c
#d
#e
Traverse in backward.
#e
#d
#c
#b
#a

Test for a re-projection.
Flat Tree:
#a
	#b
		#c

Traverse in forward.
#a
#b
#c
Traverse in backward.
#c
#b
#a

Test for a content element which is selected by another content element.
Flat Tree:
#a
	#b
		#most-inner-child
		#host-child

Traverse in forward.
#a
#b
#most-inner-child
#host-child
Traverse in backward.
#host-child
#most-inner-child
#b
#a

Test for a reprojection. Content elements should be used in document order.
Flat Tree:
#a
	#host-child1
	#b
		#host-child2

Traverse in forward.
#a
#host-child1
#b
#host-child2
Traverse in backward.
#host-child2
#b
#host-child1
#a

Test for complex re-projections.
Flat Tree:
#a
	#b
		#child-1
		#d
			#e
			#child-2
			#g
			#f
		#h
		#c

Traverse in forward.
#a
#b
#child-1
#d
#e
#child-2
#g
#f
#h
#c
Traverse in backward.
#c
#h
#f
#g
#child-2
#e
#d
#child-1
#b
#a

PASS successfullyParsed is true

TEST COMPLETE


