This is a testharness.js-based test.
FAIL 'rotate(calc(1deg * NaN))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * NaN))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1rad * NaN))' as a specified value should serialize as 'rotate(calc(NaN * 1rad))'. assert_not_equals: 'rotate(calc(1rad * NaN))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1turn * NaN))' as a specified value should serialize as 'rotate(calc(NaN * 1turn))'. assert_not_equals: 'rotate(calc(1turn * NaN))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1grad * nan))' as a specified value should serialize as 'rotate(calc(NaN * 1grad))'. assert_not_equals: 'rotate(calc(1grad * nan))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * infinity / infinity))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * infinity / infinity))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * 0 * infinity))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * 0 * infinity))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * (infinity + -infinity)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * (infinity + -infinity)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * (-infinity + infinity)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * (-infinity + infinity)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * (infinity - infinity)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * (infinity - infinity)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * infinity))' as a specified value should serialize as 'rotate(calc(infinity * 1deg))'. assert_not_equals: 'rotate(calc(1deg * infinity))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * -infinity))' as a specified value should serialize as 'rotate(calc(-infinity * 1deg))'. assert_not_equals: 'rotate(calc(1deg * -infinity))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * iNFinIty))' as a specified value should serialize as 'rotate(calc(infinity * 1deg))'. assert_not_equals: 'rotate(calc(1deg * iNFinIty))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * (infinity + infinity)))' as a specified value should serialize as 'rotate(calc(infinity * 1deg))'. assert_not_equals: 'rotate(calc(1deg * (infinity + infinity)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * (-infinity + -infinity)))' as a specified value should serialize as 'rotate(calc(-infinity * 1deg))'. assert_not_equals: 'rotate(calc(1deg * (-infinity + -infinity)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * 1/infinity))' as a specified value should serialize as 'rotate(calc(0deg))'. assert_not_equals: 'rotate(calc(1deg * 1/infinity))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * infinity * infinity))' as a specified value should serialize as 'rotate(calc(infinity * 1deg))'. assert_not_equals: 'rotate(calc(1deg * infinity * infinity))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * -infinity * -infinity))' as a specified value should serialize as 'rotate(calc(infinity * 1deg))'. assert_not_equals: 'rotate(calc(1deg * -infinity * -infinity))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1 * max(INFinity*3deg, 0deg)))' as a specified value should serialize as 'rotate(calc(infinity * 1deg))'. assert_not_equals: 'rotate(calc(1 * max(INFinity*3deg, 0deg)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1 * min(inFInity*4deg, 0deg)))' as a specified value should serialize as 'rotate(calc(0deg))'. assert_not_equals: 'rotate(calc(1 * min(inFInity*4deg, 0deg)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1 * max(nAn*2deg, 0deg)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1 * max(nAn*2deg, 0deg)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1 * min(nan*3deg, 0deg)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1 * min(nan*3deg, 0deg)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1 * clamp(-INFINITY*20deg, 0deg, infiniTY*10deg)))' as a specified value should serialize as 'rotate(calc(0deg))'. assert_not_equals: 'rotate(calc(1 * clamp(-INFINITY*20deg, 0deg, infiniTY*10deg)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * max(NaN, min(0,10))))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * max(NaN, min(0,10))))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * clamp(NaN, 0, 10)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * clamp(NaN, 0, 10)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * max(0, min(10, NaN))))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * max(0, min(10, NaN))))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * clamp(0, 10, NaN)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * clamp(0, 10, NaN)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * max(0, min(NaN, 10))))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * max(0, min(NaN, 10))))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * clamp(0, NaN, 10)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'. assert_not_equals: 'rotate(calc(1deg * clamp(0, NaN, 10)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * clamp(-Infinity, 0, infinity)))' as a specified value should serialize as 'rotate(calc(0deg))'. assert_not_equals: 'rotate(calc(1deg * clamp(-Infinity, 0, infinity)))' should be valid in transform. got disallowed value ""
FAIL 'rotate(calc(1deg * clamp(-inFinity, infinity, 10)))' as a specified value should serialize as 'rotate(calc(10deg))'. assert_not_equals: 'rotate(calc(1deg * clamp(-inFinity, infinity, 10)))' should be valid in transform. got disallowed value ""
Harness: the test ran to completion.

