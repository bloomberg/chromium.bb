This is a testharness.js-based test.
PASS ":has(a)" should be a valid selector
PASS ":has(#a)" should be a valid selector
PASS ":has(.a)" should be a valid selector
PASS ":has([a])" should be a valid selector
PASS ":has([a=\"b\"])" should be a valid selector
PASS ":has([a|=\"b\"])" should be a valid selector
PASS ":has(:hover)" should be a valid selector
PASS "*:has(.a)" should be a valid selector
PASS ".a:has(.b)" should be a valid selector
PASS ".a:has(> .b)" should be a valid selector
PASS ".a:has(~ .b)" should be a valid selector
PASS ".a:has(+ .b)" should be a valid selector
PASS ".a:has(.b) .c" should be a valid selector
PASS ".a .b:has(.c)" should be a valid selector
PASS ".a .b:has(.c .d)" should be a valid selector
PASS ".a .b:has(.c .d) .e" should be a valid selector
FAIL ".a:has(.b:has(.c))" should be a valid selector assert_equals: serialization should be canonical expected ".a:has(.b:has(.c))" but got ".a:has()"
FAIL ".a:has(.b:is(.c .d))" should be a valid selector assert_equals: serialization should be canonical expected ".a:has(.b:is(.c .d))" but got ".a:has()"
FAIL ".a:has(.b:is(.c:has(.d) .e))" should be a valid selector assert_equals: serialization should be canonical expected ".a:has(.b:is(.c:has(.d) .e))" but got ".a:has()"
PASS ".a:is(.b:has(.c) .d)" should be a valid selector
PASS ".a:not(:has(.b))" should be a valid selector
PASS ".a:has(:not(.b))" should be a valid selector
PASS ".a:has(.b):has(.c)" should be a valid selector
PASS "*|*:has(*)" should be a valid selector
PASS ":has(*|*)" should be a valid selector
FAIL ".a:has()" should be an invalid selector assert_throws_dom: ".a:has()" should throw in querySelector function "() => document.querySelector(selector)" did not throw
PASS ":has" should be an invalid selector
PASS ".a:has" should be an invalid selector
PASS ".a:has b" should be an invalid selector
Harness: the test ran to completion.

