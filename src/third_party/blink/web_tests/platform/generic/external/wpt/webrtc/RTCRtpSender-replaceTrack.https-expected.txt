This is a testharness.js-based test.
PASS Calling replaceTrack on closed connection should reject with InvalidStateError
FAIL Calling replaceTrack with track of different kind should reject with TypeError promise_rejects_js: function "function() { throw e }" threw object "InvalidModificationError" ("InvalidModificationError") expected instance of function "function TypeError() { [native code] }" ("TypeError")
FAIL Calling replaceTrack on stopped sender should reject with InvalidStateError promise_rejects_dom: function "function() { throw e }" threw object "InvalidModificationError" that is not a DOMException InvalidStateError: property "code" is equal to 13, expected 11
PASS Calling replaceTrack on sender with null track and not set to session description should resolve with sender.track set to given track
PASS Calling replaceTrack on sender not set to session description should resolve with sender.track set to given track
PASS Calling replaceTrack(null) on sender not set to session description should resolve with sender.track set to null
PASS Calling replaceTrack(null) on sender set to session description should resolve with sender.track set to null
PASS Calling replaceTrack on sender with stopped track and and set to session description should resolve with sender.track set to given track
PASS Calling replaceTrack on sender with similar track and and set to session description should resolve with sender.track set to new track
PASS ReplaceTrack transmits the new track not the old track
Harness: the test ran to completion.

