// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

import "third_party/blink/public/mojom/credentialmanager/credential_manager.mojom";
import "third_party/blink/public/mojom/frame/frame_host_test_interface.mojom";
import "third_party/blink/public/mojom/push_messaging/push_messaging.mojom";
import "third_party/blink/public/mojom/webauthn/authenticator.mojom";
import "third_party/blink/public/mojom/webauthn/virtual_authenticator.mojom";

// An interface through which the renderer may request document-scoped
// interfaces from the browser.
interface DocumentInterfaceBroker {
  // Binds the blink.mojom.Authenticator pending receiver to its remote
  // implementation in the browser process, to allow directing authenticators to
  // create or use a public key credential.
  GetAuthenticator(pending_receiver<blink.mojom.Authenticator> receiver);

  // Binds the blink.mojom.CredentialManager pending receiver to its remote
  // implementation in the browser process, to allow storing, retrieving and
  // handling credentials.
  GetCredentialManager(pending_receiver<blink.mojom.CredentialManager> receiver);

  // Binds the blink.mojom.FrameHostTestInterface pending receiver to its
  // remote implementation in the browser process, to allow using this test
  // interface to exercise requesting document-scoped interfaces from the
  // RenderFrameHost through the DocumentInterfaceBroker interface.
  GetFrameHostTestInterface(
      pending_receiver<blink.mojom.FrameHostTestInterface> receiver);

  // Binds the blink.mojom.PushMessaging pending receiver to its remote
  // implementation in the browser process, to allow subscribing, unsubscribing
  // and retrieving subscriptions related to push notifications (see Push API).
  GetPushMessaging(pending_receiver<blink.mojom.PushMessaging> receiver);

  // Binds the blink.test.mojom.VirtualAuthenticatorManager pending receiver to
  // its remote implementation in the browser process, to manage a virtual
  // environment that allows talking virtual authenticators via the WebAuth API.
  GetVirtualAuthenticatorManager(
      pending_receiver<blink.test.mojom.VirtualAuthenticatorManager> receiver);
};
