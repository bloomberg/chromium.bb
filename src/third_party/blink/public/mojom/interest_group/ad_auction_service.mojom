// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

import "third_party/blink/public/mojom/interest_group/interest_group_types.mojom";
import "url/mojom/origin.mojom";
import "url/mojom/url.mojom";

// Per-frame API to initiate on-device ad auction and add interest groups.
// https://github.com/WICG/turtledove/blob/main/FLEDGE.md
interface AdAuctionService {
  // Triggers the ad auction to run in a sandboxed JavaScript process. The
  // auction scripts run in this process come from the `bidding_logic_url`'s of
  // the interest groups owned by `interest_group_buyers` and the auction
  // config `decision_logic_url`. The result of the auction is a URL for the
  // winning ad creative, which the publisher page loads into a page or iframe
  // in the owner's domain. If no ad wins the auction, null is returned.
  RunAdAuction(AuctionAdConfig config) => (url.mojom.Url? ad_display_url);

  // Requests that the browser process create or overwrite persisted interest
  // group keyed by `owner` and `name` with information from `group`. The
  // browser verifies that the owner origin matches that of the frame's origin
  // (in the future, a mechanism will allow delegating to other origins). The
  // caller cannot observe the status or results of this operation.
  JoinInterestGroup(InterestGroup group);

  // Deletes the interest group stored in the browser as indicated by the
  // (`origin`, `name`) tuple. `origin` must use https.
  LeaveInterestGroup(url.mojom.Origin owner, string name);

  // Requests the browser update stored interest groups owned by the current
  // frame's origin *only* (interest groups not owned by the frame origin aren't
  // modified) using the last `update_url` registered for each owned interest
  // group. JSON is downloaded from each interest group's URL, parsed safely
  // using //services/data_decoder/public/cpp/data_decoder.h, and the interest
  // group store is updated. Unlike the JoinInterestGroup() operation, this
  // operation doesn't clear fields that weren't present in the server JSON
  // response. The JSON `name`, `owner`, `userBiddingSignals` and other unknown
  // fields will be ignored.
  UpdateAdInterestGroups();
};
