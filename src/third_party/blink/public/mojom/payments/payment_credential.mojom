// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module payments.mojom;

import "url/mojom/url.mojom";

enum PaymentCredentialStorageStatus {
  SUCCESS,
  FAILED_TO_STORE_INSTRUMENT,
};

enum PaymentCredentialUserPromptStatus {
  FAILED_TO_DOWNLOAD_ICON,
  USER_CONFIRM_FROM_UI,
  USER_CANCEL_FROM_UI,
};

struct PaymentCredentialInstrument {
  // Friendly name for displaying this instrument to the user.
  string display_name;

  // URL for an icon to display alongside the display_name.
  url.mojom.Url icon;
};

// An interface for storing PaymentCredentials in browser local storage. It is
// implemented in the browser process and called by the renderer before and
// after creation of a PaymentCredential through the Credential Management API.
interface PaymentCredential {

  // Download and save in-memory the instrument icon from |instrument.icon| URL
  // that will be stored to disk with the PaymentCredential when
  // StorePaymentCredentialAndHideUserPrompt is called. Begin displaying a
  // prompt to the user to confirm making and storing the credential
  // information.
  DownloadIconAndShowUserPrompt(PaymentCredentialInstrument instrument)
      => (PaymentCredentialUserPromptStatus status);

  // Store a new PaymentCredential which can be later used for
  // PaymentRequests. This associates a payment instrument with a public
  // key credential on an authenticator. |credential_id| and |rp_id| are
  // associated with the public key credential. Hide the prompt that began
  // displaying in DownloadIconAndShowUserPrompt.
  StorePaymentCredentialAndHideUserPrompt(PaymentCredentialInstrument instrument,
                         array<uint8> credential_id,
                         string rp_id)
      => (PaymentCredentialStorageStatus status);

  // Closes the user prompt, if any. Used when WebAuthn fails to create a
  // payment credential.
  HideUserPrompt() => ();
};
