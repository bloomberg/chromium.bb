// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

import "url/mojom/url.mojom";

// Implementation of the proposed WebID API.
//
// Proposal: https://github.com/WICG/WebID

enum RequestIdTokenStatus {
  kSuccess,
  kApprovalDeclined,
  kErrorTooManyRequests,
  kErrorWebIdNotSupportedByProvider,
  kErrorFetchingWellKnown,
  kErrorInvalidWellKnown,
  kErrorFetchingSignin,
  kErrorInvalidSigninResponse,
  kErrorInvalidAccountsResponse,
  kErrorInvalidTokenResponse,
  kError,
};

enum LogoutStatus {
  kSuccess,
  kErrorTooManyRequests,
  kError,
};


enum RequestMode {
  kMediated,
  kPermission,
};

// Create a federated sign-in request using the specified provider.
// This interface is called from a renderer process and implemented in the
// browser process.
interface FederatedAuthRequest {
  // Requests an IdToken to be generated, given an IDP URL, some request
  // parameters, and a mode that specifies the UI flow.
  // |client_id| and |nonce| can be empty strings to omit the fields in the
  // request sent to the provider.
  // Returns the raw content of the IdToken.
  RequestIdToken(url.mojom.Url provider,
                 string client_id,
                 string nonce,
                 RequestMode mode) =>
      (RequestIdTokenStatus status, string? id_token);

  // Contact the list of Relying Party logout endpoints to attempt to initiate
  // user logout.
  Logout(array<string> rp_logout_endpoints) => (LogoutStatus status);
};
