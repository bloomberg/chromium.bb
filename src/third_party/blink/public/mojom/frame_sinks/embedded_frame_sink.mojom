// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

import "services/viz/public/mojom/compositing/compositor_frame_sink.mojom";
import "services/viz/public/mojom/compositing/frame_sink_id.mojom";
import "services/viz/public/mojom/compositing/surface_info.mojom";
import "services/viz/public/mojom/compositing/local_surface_id.mojom";

// Interface from the the submitter to the embedder.
interface SurfaceEmbedder {
  // Called by the embedee when a new LocalSurfaceId is allocated.
  SetLocalSurfaceId(viz.mojom.LocalSurfaceId local_surface_id);
};

// Interface from browser to the embedder. Closing this interface will destroy
// the corresponding CompositorFrameSink if one exists.
interface EmbeddedFrameSinkClient {
  // Called when a CompositorFrameSink is created for this frame sink.
  // Establishes a direct connection from the embedee to the embedder.
  BindSurfaceEmbedder(pending_receiver<SurfaceEmbedder> embedder);
};

// Provides embedded CompositorFrameSinks for the renderer. The renderer should
// first call RegisterEmbeddedFrameSink() to register an EmbeddedFrameSinkClient
// for the embedder and then call CreateCompositorFrameSink() to get the
// embedded CompositorFrameSink. The EmbeddedFrameSinkClient will be notified
// about surface activations.
interface EmbeddedFrameSinkProvider {
  // Registers an embedded frame sink for |frame_sink_id|. The FrameSinkId of
  // the parent must be specified at this time.
  RegisterEmbeddedFrameSink(viz.mojom.FrameSinkId parent_frame_sink_id,
                            viz.mojom.FrameSinkId frame_sink_id,
                            pending_remote<EmbeddedFrameSinkClient> client);

  // Create a CompositorFrameSink for |frame_sink_id|. This must happen after
  // calling RegisterEmbeddedFrameSink() for |frame_sink_id|.
  CreateCompositorFrameSink(viz.mojom.FrameSinkId frame_sink_id,
                            pending_remote<viz.mojom.CompositorFrameSinkClient> client,
                            pending_receiver<viz.mojom.CompositorFrameSink> sink);

  // Create CompositorFrameSink directly in a single call (instead of going
  // through both function above).
  CreateSimpleCompositorFrameSink(viz.mojom.FrameSinkId parent_frame_sink_id,
                                  viz.mojom.FrameSinkId frame_sink_id,
                                  pending_remote<EmbeddedFrameSinkClient> surface_client,
                                  pending_remote<viz.mojom.CompositorFrameSinkClient> client,
                                  pending_receiver<viz.mojom.CompositorFrameSink> sink);

  // Establishes a direct connection to the embedder of |frame_sink_id|. This
  // will allow the client to let the embedder know what LocalSurfaceId it is
  // using.
  ConnectToEmbedder(viz.mojom.FrameSinkId frame_sink_id,
                    pending_receiver<SurfaceEmbedder> embedder);
};
