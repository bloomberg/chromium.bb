// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is versioned solely for the convenience of sharing struct and enum
// definitions with with an external repository. Do not add any
// browser <-> renderer specific definitions or any browser <-> external
// repository specific definitions in this file.
// Specifically interfaces defined here must not be versioned.

// Next MinVersion: 1

module payments.mojom;

import "components/payments/mojom/payment_request_data.mojom";
import "mojo/public/mojom/base/time.mojom";
import "url/mojom/url.mojom";

// https://github.com/WICG/digital-goods/blob/main/explainer.md

// Allow the renderer to talk to an associated digital goods backend.
interface DigitalGoods {
  // Queries the associated backend for information about one or more items.
  GetDetails(array<string> item_ids)
      => (BillingResponseCode code, array<ItemDetails> item_details_list);

  // Queries the associated backend for information on all items that are
  // currently owned by the user. May include unconfirmed purchases.
  ListPurchases()
      => (BillingResponseCode code,
          array<PurchaseReference> purchase_reference_list);

  // Queries the associated backend for information on the latest purchase for
  // each item type ever purchased by the user. May include expired or consumed
  // purchases.
  ListPurchaseHistory()
      => (BillingResponseCode code,
          array<PurchaseReference> purchase_reference_list);

  // Informs the associated backend that the purchase identified by
  // |purchase_token| was used up.
  Consume(string purchase_token) => (BillingResponseCode code);
};

// Allow the renderer to request a |DigitalGoods| instance. DigitalGoods
// instances must be created via this factory to allow the backend to validate
// the current context.
interface DigitalGoodsFactory {
  // Creates a DigitalGoods instance. The |digital_goods| is non-null iff
  // |code| == kOk.
  CreateDigitalGoods(string payment_method)
    => (CreateDigitalGoodsResponseCode code,
        pending_remote<DigitalGoods>? digital_goods);
};

[Extensible, Stable]
enum BillingResponseCode {
  kOk,
  kError,
  kItemAlreadyOwned,
  kItemNotOwned,
  kItemUnavailable,
  kClientAppUnavailable,
  kClientAppError,
};

[Extensible, Stable]
enum ItemType {
  kUnknown,
  kProduct,
  kSubscription,
};

[Stable]
struct ItemDetails {
  string item_id;
  string title;
  string description;
  PaymentCurrencyAmount price;
  // Periods are specified as ISO 8601 durations.
  // https://en.wikipedia.org/wiki/ISO_8601#Durations
  string? subscription_period;
  string? free_trial_period;
  PaymentCurrencyAmount? introductory_price;
  string? introductory_price_period;
  // Set to 0 for no introductory cycles.
  [MinVersion=1] uint32 introductory_price_cycles;
  [MinVersion=1] ItemType type;
  [MinVersion=1] array<url.mojom.Url>? icon_urls;
};

[Extensible]
enum CreateDigitalGoodsResponseCode {
  kOk,
  kError,
  kUnsupportedPaymentMethod,
  kUnsupportedContext,
};

[Stable]
struct PurchaseReference {
  string item_id;
  string purchase_token;
};

// Deprecated, but still used by components/arc/mojom/digital_goods.mojom
[Stable]
struct PurchaseDetails {
  string item_id;
  string purchase_token;
  bool acknowledged;
  PurchaseState purchase_state;
  // Microseconds since the Unix epoch.
  mojo_base.mojom.TimeDelta purchase_time;
  bool will_auto_renew;
};

[Extensible, Stable]
enum PurchaseState {
  kUnknown,
  kPurchased,
  kPending,
};
