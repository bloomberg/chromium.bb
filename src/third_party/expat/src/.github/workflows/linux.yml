#                          __  __            _
#                       ___\ \/ /_ __   __ _| |_
#                      / _ \\  /| '_ \ / _` | __|
#                     |  __//  \| |_) | (_| | |_
#                      \___/_/\_\ .__/ \__,_|\__|
#                               |_| XML parser
#
# Copyright (c) 2021-2022 Sebastian Pipping <sebastian@pipping.org>
# Licensed under the MIT license:
#
# Permission is  hereby granted,  free of charge,  to any  person obtaining
# a  copy  of  this  software   and  associated  documentation  files  (the
# "Software"),  to  deal in  the  Software  without restriction,  including
# without  limitation the  rights  to use,  copy,  modify, merge,  publish,
# distribute, sublicense, and/or sell copies of the Software, and to permit
# persons  to whom  the Software  is  furnished to  do so,  subject to  the
# following conditions:
#
# The above copyright  notice and this permission notice  shall be included
# in all copies or substantial portions of the Software.
#
# THE  SOFTWARE  IS  PROVIDED  "AS  IS",  WITHOUT  WARRANTY  OF  ANY  KIND,
# EXPRESS  OR IMPLIED,  INCLUDING  BUT  NOT LIMITED  TO  THE WARRANTIES  OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
# NO EVENT SHALL THE AUTHORS OR  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR  OTHER LIABILITY, WHETHER  IN AN  ACTION OF CONTRACT,  TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
# USE OR OTHER DEALINGS IN THE SOFTWARE.

name: Run Linux Travis CI tasks

on:
  pull_request:
  push:
  schedule:
    - cron: '0 2 * * 5'  # Every Friday at 2am

jobs:
  checks:
    name: Perform checks
    strategy:
      matrix:
        include:
          # NOTE: This is a quick port from .travis.yml in reaction to
          #       stability issues at Travis CI.
          - MODE: cmake-oos
          - MODE: distcheck
          - MODE: qa-sh
            FLAT_ENV: CC=clang CXX=clang++ LD=clang++ QA_SANITIZER=address
          - MODE: clang-format
          - MODE: cmake-oos
            FLAT_ENV: CMAKE_ARGS="-DEXPAT_ATTR_INFO=ON -DEXPAT_BUILD_FUZZERS=ON -DCMAKE_C_FLAGS=-fsanitize=address -DCMAKE_CXX_FLAGS=-fsanitize=address -DCMAKE_EXE_LINKER_FLAGS=-fsanitize=address -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++"
          - MODE: qa-sh
            FLAT_ENV: CC=clang CXX=clang++ LD=clang++ QA_SANITIZER=address CMAKE_ARGS=-DEXPAT_ATTR_INFO=ON
          - MODE: qa-sh
            FLAT_ENV: CC=clang CXX=clang++ LD=clang++ QA_SANITIZER=address CMAKE_ARGS=-DEXPAT_CONTEXT_BYTES=OFF
          - MODE: qa-sh
            FLAT_ENV: CC=clang CXX=clang++ LD=clang++ QA_SANITIZER=address CMAKE_ARGS=-DEXPAT_DTD=OFF
          - MODE: qa-sh
            FLAT_ENV: CC=clang CXX=clang++ LD=clang++ QA_SANITIZER=address CMAKE_ARGS=-DEXPAT_LARGE_SIZE=ON
          - MODE: qa-sh
            FLAT_ENV: CC=clang CXX=clang++ LD=clang++ QA_SANITIZER=address CMAKE_ARGS=-DEXPAT_MIN_SIZE=ON
          - MODE: qa-sh
            FLAT_ENV: CC=clang CXX=clang++ LD=clang++ QA_SANITIZER=address CMAKE_ARGS=-DEXPAT_NS=OFF
          - MODE: qa-sh
            FLAT_ENV: CC=clang CXX=clang++ LD=clang++ QA_SANITIZER=memory
          - MODE: qa-sh
            FLAT_ENV: CC=clang CXX=clang++ LD=clang++ QA_SANITIZER=undefined
          - MODE: qa-sh
            FLAT_ENV: CC=gcc CXX=g++ LD=ld QA_PROCESSOR=gcov
          - MODE: qa-sh
            FLAT_ENV: CC=gcc CXX=g++ LD=ld QA_PROCESSOR=gcov CMAKE_ARGS=-D_EXPAT_M32=ON
          - MODE: qa-sh
            FLAT_ENV: CC=gcc CXX=g++ LD=ld QA_PROCESSOR=gcov CMAKE_ARGS="-D_EXPAT_M32=ON -DEXPAT_ATTR_INFO=ON"
          - MODE: qa-sh
            FLAT_ENV: CC=i686-w64-mingw32-gcc CXX=i686-w64-mingw32-g++ LD=i686-w64-mingw32-ld QA_PROCESSOR=gcov CMAKE_ARGS="-DCMAKE_SYSTEM_NAME=Windows -DWIN32=ON -DMINGW=ON -DEXPAT_ATTR_INFO=ON"
          - MODE: qa-sh
            FLAT_ENV: CC=i686-w64-mingw32-gcc CXX=i686-w64-mingw32-g++ LD=i686-w64-mingw32-ld QA_PROCESSOR=gcov CMAKE_ARGS="-DCMAKE_SYSTEM_NAME=Windows -DWIN32=ON -DMINGW=ON -DEXPAT_ATTR_INFO=ON -DEXPAT_CHAR_TYPE=wchar_t"
    runs-on: ubuntu-18.04
    env:
      CFLAGS: -g3 -pipe
    steps:
    - uses: actions/checkout@v3
    - name: Add Clang/LLVM repositories
      run: |-
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main'
    - name: Install build dependencies
      # NOTE: Please note the version-specific ${PATH} extension for Clang in .travis.sh
      run: |-
        sudo dpkg --add-architecture i386  # for wine32
        sudo apt-get update
        sudo apt-get install --yes --no-install-recommends -V \
            clang-13 \
            clang-format-13 \
            llvm-13 \
            cmake \
            docbook2x \
            dos2unix \
            gcc-multilib \
            g++-multilib \
            lcov \
            libbsd-dev \
            lzip \
            mingw-w64 \
            moreutils \
            wine-stable \
            wine32
    - name: Perform check "${{ matrix.MODE }}"
      env:
        MODE: ${{ matrix.MODE }}
        TRAVIS_OS_NAME: linux
      run: |
        env ${{ matrix.FLAT_ENV }} ./.travis.sh
