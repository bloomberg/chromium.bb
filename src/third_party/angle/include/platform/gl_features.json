{
    "description": [
        "Copyright 2022 The ANGLE Project Authors. All rights reserved.",
        "Use of this source code is governed by a BSD-style license that can be",
        "found in the LICENSE file.",
        "",
        "gl_features.json: angle::Features and workarounds for GL driver bugs and other issues."
    ],
    "features": [
        {
            "name": "avoid1BitAlphaTextureFormats",
            "display_name": "avoid_1_bit_alpha_texture_formats",
            "category": "Workarounds",
            "description": [
                "Issue with 1-bit alpha framebuffer formats"
            ]
        },

        {
            "name": "rgba4IsNotSupportedForColorRendering",
            "display_name": "rgba4_is_not_supported_for_color_rendering",
            "category": "Workarounds",
            "description": [
                "GL_RGBA4 is not color renderable"
            ]
        },

        {
            "name": "allowEtcFormats",
            "display_name": "allow_etc_formats",
            "category": "Workarounds",
            "description": [
                "Enable ETC2/EAC on desktop OpenGL"
            ]
        },

        {
            "name": "doesSRGBClearsOnLinearFramebufferAttachments",
            "display_name": "does_srgb_clears_on_linear_framebuffer_attachments",
            "category": "Workarounds",
            "description": [
                "Issue clearing framebuffers with linear attachments when GL_FRAMEBUFFER_SRGB is enabled"
            ]
        },

        {
            "name": "doWhileGLSLCausesGPUHang",
            "display_name": "do_while_glsl_causes_gpu_hang",
            "category": "Workarounds",
            "description": [
                "Some GLSL constructs involving do-while loops cause GPU hangs"
            ],
            "issue": "http://crbug.com/644669"
        },

        {
            "name": "addBaseVertexToVertexID",
            "display_name": "vertex_id_does_not_include_base_vertex",
            "category": "Workarounds",
            "description": [
                "gl_VertexID in GLSL vertex shader doesn't include base vertex value"
            ]
        },

        {
            "name": "finishDoesNotCauseQueriesToBeAvailable",
            "display_name": "finish_does_not_cause_queries_to_be_available",
            "category": "Workarounds",
            "description": [
                "glFinish doesn't cause all queries to report available result"
            ]
        },

        {
            "name": "alwaysCallUseProgramAfterLink",
            "display_name": "always_call_use_program_after_link",
            "category": "Workarounds",
            "description": [
                "Always call useProgram after a successful link to avoid a driver bug"
            ],
            "issue": "http://crbug.com/110263"
        },

        {
            "name": "unpackOverlappingRowsSeparatelyUnpackBuffer",
            "display_name": "unpack_overlapping_rows_separately_unpack_buffer",
            "category": "Workarounds",
            "description": [
                "In the case of unpacking from a pixel unpack buffer, unpack overlapping rows row by row"
            ]
        },

        {
            "name": "packOverlappingRowsSeparatelyPackBuffer",
            "display_name": "pack_overlapping_rows_separately_pack_buffer",
            "category": "Workarounds",
            "description": [
                "In the case of packing to a pixel pack buffer, pack overlapping rows row by row"
            ]
        },

        {
            "name": "initializeCurrentVertexAttributes",
            "display_name": "initialize_current_vertex_attributes",
            "category": "Workarounds",
            "description": [
                "During initialization, assign the current vertex attributes to the spec-mandated defaults"
            ]
        },

        {
            "name": "emulateAbsIntFunction",
            "display_name": "emulate_abs_int_function",
            "category": "Workarounds",
            "description": [
                "abs(i) where i is an integer returns unexpected result"
            ],
            "issue": "http://crbug.com/642227"
        },

        {
            "name": "addAndTrueToLoopCondition",
            "display_name": "add_and_true_to_loop_condition",
            "category": "Workarounds",
            "description": [
                "Calculation of loop conditions in for and while loop has bug"
            ]
        },

        {
            "name": "unpackLastRowSeparatelyForPaddingInclusion",
            "display_name": "unpack_last_row_separately_for_padding_inclusion",
            "category": "Workarounds",
            "description": [
                "When uploading textures from an unpack buffer, some drivers count an extra row padding"
            ],
            "issue": "http://anglebug.com/1512"
        },

        {
            "name": "packLastRowSeparatelyForPaddingInclusion",
            "display_name": "pack_last_row_separately_for_padding_inclusion",
            "category": "Workarounds",
            "description": [
                "When uploading textures from an pack buffer, some drivers count an extra row padding"
            ],
            "issue": "http://anglebug.com/1512"
        },

        {
            "name": "emulateIsnanFloat",
            "display_name": "emulate_isnan_float",
            "category": "Workarounds",
            "description": [
                "Using isnan() on highp float will get wrong answer"
            ],
            "issue": "http://crbug.com/650547"
        },

        {
            "name": "useUnusedBlocksWithStandardOrSharedLayout",
            "display_name": "use_unused_blocks_with_standard_or_shared_layout",
            "category": "Workarounds",
            "description": [
                "Unused std140 or shared uniform blocks will be treated as inactive"
            ]
        },

        {
            "name": "removeInvariantAndCentroidForESSL3",
            "display_name": "remove_invarient_and_centroid_for_essl3",
            "category": "Workarounds",
            "description": [
                "Fix spec difference between GLSL 4.1 or lower and ESSL3"
            ]
        },

        {
            "name": "rewriteFloatUnaryMinusOperator",
            "display_name": "rewrite_float_unary_minus_operator",
            "category": "Workarounds",
            "description": [
                "Using '-<float>' will get wrong answer"
            ],
            "issue": "http://crbug.com/308366"
        },

        {
            "name": "emulateAtan2Float",
            "display_name": "emulate_atan_2_float",
            "category": "Workarounds",
            "description": [
                "atan(y, x) may return a wrong answer"
            ],
            "issue": "http://crbug.com/672380"
        },

        {
            "name": "reapplyUBOBindingsAfterUsingBinaryProgram",
            "display_name": "reapply_ubo_bindings_after_using_binary_program",
            "category": "Workarounds",
            "description": [
                "Some drivers forget about UBO bindings when using program binaries"
            ],
            "issue": "http://anglebug.com/1637"
        },

        {
            "name": "emulateMaxVertexAttribStride",
            "display_name": "emulate_max_vertex_attrib_stride",
            "category": "Workarounds",
            "description": [
                "Some drivers return 0 when MAX_VERTEX_ATTRIB_STRIED queried"
            ],
            "issue": "http://anglebug.com/1936"
        },

        {
            "name": "dontInitializeUninitializedLocals",
            "display_name": "dont_initialize_uninitialized_locals",
            "category": "Workarounds",
            "description": [
                "Initializing uninitialized locals caused odd behavior in a few WebGL 2 tests"
            ],
            "issue": "http://anglebug.com/2046"
        },

        {
            "name": "clampPointSize",
            "display_name": "clamp_point_size",
            "category": "Workarounds",
            "description": [
                "The point size range reported from the API is inconsistent with the actual behavior"
            ]
        },

        {
            "name": "dontUseLoopsToInitializeVariables",
            "display_name": "dont_use_loops_to_initialize_variables",
            "category": "Workarounds",
            "description": [
                "For loops used to initialize variables hit native GLSL compiler bugs"
            ],
            "issue": "http://crbug.com/809422"
        },

        {
            "name": "clampFragDepth",
            "display_name": "clamp_frag_depth",
            "category": "Workarounds",
            "description": [
                "gl_FragDepth is not clamped correctly when rendering to a floating point depth buffer"
            ]
        },

        {
            "name": "rewriteRepeatedAssignToSwizzled",
            "display_name": "rewrite_repeated_assign_to_swizzled",
            "category": "Workarounds",
            "description": [
                "Repeated assignment to swizzled values inside a ",
                "GLSL user-defined function have incorrect results"
            ]
        },

        {
            "name": "disableBlendFuncExtended",
            "display_name": "disable_blend_func_extended",
            "category": "Workarounds",
            "description": [
                "ARB_blend_func_extended does not pass the tests"
            ],
            "issue": "http://anglebug.com/1085"
        },

        {
            "name": "unsizedsRGBReadPixelsDoesntTransform",
            "display_name": "unsized_srgb_read_pixels_doesnt_transform",
            "category": "Workarounds",
            "description": [
                "Drivers returning raw sRGB values instead of linearized values when calling glReadPixels ",
                "on unsized sRGB texture formats"
            ],
            "issue": "http://crbug.com/550292 http://crbug.com/565179"
        },

        {
            "name": "queryCounterBitsGeneratesErrors",
            "display_name": "query_counter_bits_generates_errors",
            "category": "Workarounds",
            "description": [
                "Drivers generate errors when querying the number of bits in timer queries"
            ],
            "issue": "http://anglebug.com/3027"
        },

        {
            "name": "dontRelinkProgramsInParallel",
            "display_name": "dont_relink_programs_in_parallel",
            "category": "Workarounds",
            "description": [
                "Relinking a program in parallel is buggy"
            ],
            "issue": "http://anglebug.com/3045"
        },

        {
            "name": "disableWorkerContexts",
            "display_name": "disable_worker_contexts",
            "category": "Workarounds",
            "description": [
                "Some tests have been seen to fail using worker contexts"
            ],
            "issue": "http://crbug.com/849576"
        },

        {
            "name": "limitMaxTextureSizeTo4096",
            "display_name": "max_texture_size_limit_4096",
            "category": "Workarounds",
            "description": [
                "Limit max texture size to 4096 to avoid frequent ",
                "out-of-memory errors"
            ],
            "issue": "http://crbug.com/927470"
        },

        {
            "name": "limitMaxMSAASamplesTo4",
            "display_name": "max_msaa_sample_count_4",
            "category": "Workarounds",
            "description": [
                "Various rendering bugs have been observed when using higher MSAA counts"
            ],
            "issue": "http://crbug.com/797243"
        },

        {
            "name": "allowClearForRobustResourceInit",
            "display_name": "allow_clear_for_robust_resource_init",
            "category": "Workarounds",
            "description": [
                "Using glClear for robust resource initialization is buggy on some drivers and leads to ",
                "texture corruption. Default to data uploads except on MacOS where it is very slow."
            ],
            "issue": "https://crbug.com/848952 http://crbug.com/883276"
        },

        {
            "name": "clampArrayAccess",
            "display_name": "clamp_array_access",
            "category": "Workarounds",
            "description": [
                "Clamp uniform array access to avoid reading invalid memory."
            ],
            "issue": "http://anglebug.com/2978"
        },

        {
            "name": "resetTexImage2DBaseLevel",
            "display_name": "reset_teximage2d_base_level",
            "category": "Workarounds",
            "description": [
                "Reset texture base level before calling glTexImage2D to ",
                "work around pixel comparison failure."
            ],
            "issue": "https://crbug.com/705865"
        },

        {
            "name": "clearToZeroOrOneBroken",
            "display_name": "clear_to_zero_or_one_broken",
            "category": "Workarounds",
            "description": [
                "Clears when the clear color is all zeros or ones do not work."
            ],
            "issue": "https://crbug.com/710443"
        },

        {
            "name": "limitMax3dArrayTextureSizeTo1024",
            "display_name": "max_3d_array_texture_size_1024",
            "category": "Workarounds",
            "description": [
                "Limit max 3d texture size and max array texture layers to 1024 to avoid system hang"
            ],
            "issue": "http://crbug.com/927470"
        },

        {
            "name": "adjustSrcDstRegionBlitFramebuffer",
            "display_name": "adjust_src_dst_region_for_blitframebuffer",
            "category": "Workarounds",
            "description": [
                "Many platforms have issues with blitFramebuffer when the parameters are large."
            ],
            "issue": "http://crbug.com/830046"
        },

        {
            "name": "clipSrcRegionBlitFramebuffer",
            "display_name": "clip_src_region_for_blitframebuffer",
            "category": "Workarounds",
            "description": [
                "Issues with blitFramebuffer when the parameters don't match the framebuffer size."
            ],
            "issue": "http://crbug.com/830046"
        },

        {
            "name": "rgbDXT1TexturesSampleZeroAlpha",
            "display_name": "rgb_dxt1_textures_sample_zero_alpha",
            "category": "Workarounds",
            "description": [
                "Sampling BLACK texels from RGB DXT1 textures returns transparent black on Mac."
            ],
            "issue": "http://anglebug.com/3729"
        },

        {
            "name": "unfoldShortCircuits",
            "display_name": "unfold_short_circuits",
            "category": "Workarounds",
            "description": [
                "Mac incorrectly executes both sides of && and || expressions when they should ",
                "short-circuit."
            ],
            "issue": "http://anglebug.com/482"
        },

        {
            "name": "emulatePrimitiveRestartFixedIndex",
            "display_name": "emulate_primitive_restart_fixed_index",
            "category": "Workarounds",
            "description": [
                "When GL_PRIMITIVE_RESTART_FIXED_INDEX is not available, emulate it with ",
                "GL_PRIMITIVE_RESTART and glPrimitiveRestartIndex."
            ],
            "issue": "http://anglebug.com/3997"
        },

        {
            "name": "setPrimitiveRestartFixedIndexForDrawArrays",
            "display_name": "set_primitive_restart_fixed_index_for_draw_arrays",
            "category": "Workarounds",
            "description": [
                "Some drivers discard vertex data in DrawArrays calls when the fixed primitive restart ",
                "index is within the number of primitives being drawn."
            ],
            "issue": "http://anglebug.com/3997"
        },

        {
            "name": "removeDynamicIndexingOfSwizzledVector",
            "display_name": "remove_dynamic_indexing_of_swizzled_vector",
            "category": "Workarounds",
            "description": [
                "Dynamic indexing of swizzled l-values doesn't work correctly on various platforms."
            ],
            "issue": "http://crbug.com/709351"
        },

        {
            "name": "preAddTexelFetchOffsets",
            "display_name": "pre_add_texel_fetch_offsets",
            "category": "Workarounds",
            "description": [
                "Intel Mac drivers mistakenly consider the parameter position of nagative vaule as invalid ",
                "even if the sum of position and offset is in range, so we need to add workarounds by ",
                "rewriting texelFetchOffset(sampler, position, lod, offset) into texelFetch(sampler, ",
                "position + offset, lod)."
            ],
            "issue": "http://crbug.com/642605"
        },

        {
            "name": "regenerateStructNames",
            "display_name": "regenerate_struct_names",
            "category": "Workarounds",
            "description": [
                "All Mac drivers do not handle struct scopes correctly. This workaround overwrites a struct",
                "name with a unique prefix."
            ],
            "issue": "http://crbug.com/403957"
        },

        {
            "name": "readPixelsUsingImplementationColorReadFormatForNorm16",
            "display_name": "read_pixels_using_implementation_color_read_format",
            "category": "Workarounds",
            "description": [
                "Quite some OpenGL ES drivers don't implement readPixels for RGBA/UNSIGNED_SHORT from ",
                "EXT_texture_norm16 correctly"
            ],
            "issue": "http://anglebug.com/4214"
        },

        {
            "name": "flushBeforeDeleteTextureIfCopiedTo",
            "display_name": "flush_before_delete_texture_if_copied_to",
            "category": "Workarounds",
            "description": [
                "Some drivers track CopyTex{Sub}Image texture dependencies incorrectly. Flush",
                " before glDeleteTextures in this case"
            ],
            "issue": "http://anglebug.com/4267"
        },

        {
            "name": "rewriteRowMajorMatrices",
            "display_name": "rewrite_row_major_matrices",
            "category": "Workarounds",
            "description": [
                "Rewrite row major matrices in shaders as column major as a driver bug workaround"
            ],
            "issue": "http://anglebug.com/2273"
        },

        {
            "name": "disableDrawBuffersIndexed",
            "display_name": "disable_draw_buffers_indexed",
            "category": "Workarounds",
            "description": [
                "Disable OES_draw_buffers_indexed extension."
            ]
        },

        {
            "name": "disableSemaphoreFd",
            "display_name": "disable_semaphore_fd",
            "category": "Workarounds",
            "description": [
                "Disable GL_EXT_semaphore_fd extension"
            ],
            "issue": "https://crbug.com/1046462"
        },

        {
            "name": "disableTimestampQueries",
            "display_name": "disable_timestamp_queries",
            "category": "Workarounds",
            "description": [
                "Disable GL_EXT_disjoint_timer_query extension"
            ],
            "issue": "https://crbug.com/811661"
        },

        {
            "name": "encodeAndDecodeSRGBForGenerateMipmap",
            "display_name": "decode_encode_srgb_for_generatemipmap",
            "category": "Workarounds",
            "description": [
                "Decode and encode before generateMipmap for srgb format textures."
            ],
            "issue": "http://anglebug.com/4646"
        },

        {
            "name": "emulateCopyTexImage2DFromRenderbuffers",
            "display_name": "emulate_copyteximage2d_from_renderbuffers",
            "category": "Workarounds",
            "description": [
                "CopyTexImage2D spuriously returns errors on iOS when copying from renderbuffers."
            ],
            "issue": "https://anglebug.com/4674"
        },

        {
            "name": "disableGPUSwitchingSupport",
            "display_name": "disable_gpu_switching_support",
            "category": "Workarounds",
            "description": [
                "Disable GPU switching support (use only the low-power GPU) on older MacBook Pros."
            ],
            "issue": "https://crbug.com/1091824"
        },

        {
            "name": "disableNativeParallelCompile",
            "display_name": "disable_native_parallel_compile",
            "category": "Workarounds",
            "description": [
                "Do not use native KHR_parallel_shader_compile even when available."
            ],
            "issue": "http://crbug.com/1094869"
        },

        {
            "name": "emulatePackSkipRowsAndPackSkipPixels",
            "display_name": "emulate_pack_skip_rows_and_pack_skip_pixels",
            "category": "Workarounds",
            "description": [
                "GL_PACK_SKIP_ROWS and GL_PACK_SKIP_PIXELS are ignored in Apple's OpenGL driver."
            ],
            "issue": "https://anglebug.com/4849"
        },

        {
            "name": "clampMscRate",
            "display_name": "clamp_msc_rate",
            "category": "Workarounds",
            "description": [
                "Some drivers return bogus values for GetMscRate, so we clamp it to 30Hz"
            ],
            "issue": "https://crbug.com/1042393"
        },

        {
            "name": "bindTransformFeedbackBufferBeforeBindBufferRange",
            "display_name": "bind_transform_feedback_buffer_before_bind_buffer_range",
            "category": "Workarounds",
            "description": [
                "Bind transform feedback buffers to the generic binding point before calling ",
                "glBindBufferBase or glBindBufferRange."
            ],
            "issue": "https://anglebug.com/5140"
        },

        {
            "name": "disableSyncControlSupport",
            "display_name": "disable_sync_control_support",
            "category": "Workarounds",
            "description": [
                "Speculative fix for issues on Linux/Wayland where exposing GLX_OML_sync_control renders ",
                "Chrome unusable"
            ],
            "issue": "https://crbug.com/1137851"
        },

        {
            "name": "keepBufferShadowCopy",
            "display_name": "keep_buffer_shadow_copy",
            "category": "Workarounds",
            "description": [
                "Maintain a shadow copy of buffer data when the GL API does not permit reading data back."
            ]
        },

        {
            "name": "setZeroLevelBeforeGenerateMipmap",
            "display_name": "set_zero_level_before_generating_mipmap",
            "category": "Workarounds",
            "description": [
                "glGenerateMipmap fails if the zero texture level is not set on some Mac drivers."
            ]
        },

        {
            "name": "promotePackedFormatsTo8BitPerChannel",
            "display_name": "promote_packed_formats_to_8_bit_per_channel",
            "category": "Workarounds",
            "description": [
                "Packed color formats are buggy on Macs with AMD GPUs"
            ],
            "issue": "http://anglebug.com/5469"
        },

        {
            "name": "initFragmentOutputVariables",
            "display_name": "init_fragment_output_variables",
            "category": "Workarounds",
            "description": [
                "No init gl_FragColor causes context lost"
            ],
            "issue": "http://crbug.com/1171371"
        },

        {
            "name": "shiftInstancedArrayDataWithExtraOffset",
            "display_name": "shift_instanced_array_data_with_offset",
            "category": "Workarounds",
            "description": [
                "glDrawArraysInstanced is buggy on certain new Mac Intel GPUs"
            ],
            "issue": "http://crbug.com/1144207"
        },

        {
            "name": "syncVertexArraysToDefault",
            "display_name": "sync_vertex_arrays_to_default",
            "category": "Workarounds",
            "description": [
                "Only use the default VAO because of missing support or driver bugs"
            ],
            "issue": "http://anglebug.com/5577"
        },

        {
            "name": "sanitizeAmdGpuRendererString",
            "display_name": "sanitize_amdgpu_renderer_string",
            "category": "Workarounds",
            "description": [
                "Strip precise kernel and DRM version information from amdgpu renderer strings."
            ],
            "issue": "http://crbug.com/1181193"
        },

        {
            "name": "unbindFBOOnContextSwitch",
            "display_name": "unbind_fbo_before_switching_context",
            "category": "Workarounds",
            "description": [
                "Imagination GL drivers are buggy with context switching."
            ],
            "issue": "http://crbug.com/1181193"
        },

        {
            "name": "flushOnFramebufferChange",
            "display_name": "flush_on_framebuffer_change",
            "category": "Workarounds",
            "description": [
                "Switching framebuffers without a flush can lead to ",
                "crashes on Intel 9th Generation GPU Macs."
            ],
            "issue": "http://crbug.com/1181068"
        },

        {
            "name": "disableMultisampledRenderToTexture",
            "display_name": "disable_mutlisampled_render_to_texture",
            "category": "Workarounds",
            "description": [
                "Many drivers have bugs when using GL_EXT_multisampled_render_to_texture"
            ],
            "issue": "http://anglebug.com/2894"
        },

        {
            "name": "uploadTextureDataInChunks",
            "display_name": "chunked_texture_upload",
            "category": "Workarounds",
            "description": [
                "Upload texture data in <120kb chunks to work around Mac driver hangs and crashes."
            ],
            "issue": "http://crbug.com/1181068"
        },

        {
            "name": "emulateImmutableCompressedTexture3D",
            "display_name": "emulate_immutable_compressed_texture_3d",
            "category": "Workarounds",
            "description": [
                "Use non-immutable texture allocation to work around a driver bug."
            ],
            "issue": "https://crbug.com/1060012"
        },

        {
            "name": "emulateRGB10",
            "display_name": "emulate_rgb10",
            "category": "Workarounds",
            "description": [
                "Emulate RGB10 support using RGB10_A2."
            ],
            "issue": "https://crbug.com/1300575"
        },

        {
            "name": "alwaysUnbindFramebufferTexture2D",
            "display_name": "always_unbind_framebuffer_texture_2d",
            "category": "Workarounds",
            "description": [
                "Force unbind framebufferTexture2D before binding renderbuffer to work around driver bug."
            ],
            "issue": "https://anglebug.com/5536"
        }
    ]
}
