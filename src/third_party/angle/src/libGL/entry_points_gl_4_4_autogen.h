// GENERATED FILE - DO NOT EDIT.
// Generated by generate_entry_points.py using data from gl.xml.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// entry_points_gl_4_4_autogen.h:
//   Defines the GL 4.4 entry points.

#ifndef LIBGL_ENTRY_POINTS_GL_4_4_AUTOGEN_H_
#define LIBGL_ENTRY_POINTS_GL_4_4_AUTOGEN_H_

#include <export.h>
#include "angle_gl.h"

namespace gl
{
ANGLE_EXPORT void GL_APIENTRY BindBuffersBase(GLenum target,
                                              GLuint first,
                                              GLsizei count,
                                              const GLuint *buffers);
ANGLE_EXPORT void GL_APIENTRY BindBuffersRange(GLenum target,
                                               GLuint first,
                                               GLsizei count,
                                               const GLuint *buffers,
                                               const GLintptr *offsets,
                                               const GLsizeiptr *sizes);
ANGLE_EXPORT void GL_APIENTRY BindImageTextures(GLuint first,
                                                GLsizei count,
                                                const GLuint *textures);
ANGLE_EXPORT void GL_APIENTRY BindSamplers(GLuint first, GLsizei count, const GLuint *samplers);
ANGLE_EXPORT void GL_APIENTRY BindTextures(GLuint first, GLsizei count, const GLuint *textures);
ANGLE_EXPORT void GL_APIENTRY BindVertexBuffers(GLuint first,
                                                GLsizei count,
                                                const GLuint *buffers,
                                                const GLintptr *offsets,
                                                const GLsizei *strides);
ANGLE_EXPORT void GL_APIENTRY BufferStorage(GLenum target,
                                            GLsizeiptr size,
                                            const void *data,
                                            GLbitfield flags);
ANGLE_EXPORT void GL_APIENTRY
ClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
ANGLE_EXPORT void GL_APIENTRY ClearTexSubImage(GLuint texture,
                                               GLint level,
                                               GLint xoffset,
                                               GLint yoffset,
                                               GLint zoffset,
                                               GLsizei width,
                                               GLsizei height,
                                               GLsizei depth,
                                               GLenum format,
                                               GLenum type,
                                               const void *data);
}  // namespace gl

#endif  // LIBGL_ENTRY_POINTS_GL_4_4_AUTOGEN_H_
