// GENERATED FILE - DO NOT EDIT.
// Generated by generate_entry_points.py using data from gl.xml.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// entry_points_gl_3_1_autogen.h:
//   Defines the GL 3.1 entry points.

#ifndef LIBGL_ENTRY_POINTS_GL_3_1_AUTOGEN_H_
#define LIBGL_ENTRY_POINTS_GL_3_1_AUTOGEN_H_

#include <export.h>
#include "angle_gl.h"

namespace gl
{
ANGLE_EXPORT void GL_APIENTRY CopyBufferSubData(GLenum readTarget,
                                                GLenum writeTarget,
                                                GLintptr readOffset,
                                                GLintptr writeOffset,
                                                GLsizeiptr size);
ANGLE_EXPORT void GL_APIENTRY DrawArraysInstanced(GLenum mode,
                                                  GLint first,
                                                  GLsizei count,
                                                  GLsizei instancecount);
ANGLE_EXPORT void GL_APIENTRY DrawElementsInstanced(GLenum mode,
                                                    GLsizei count,
                                                    GLenum type,
                                                    const void *indices,
                                                    GLsizei instancecount);
ANGLE_EXPORT void GL_APIENTRY GetActiveUniformBlockName(GLuint program,
                                                        GLuint uniformBlockIndex,
                                                        GLsizei bufSize,
                                                        GLsizei *length,
                                                        GLchar *uniformBlockName);
ANGLE_EXPORT void GL_APIENTRY GetActiveUniformBlockiv(GLuint program,
                                                      GLuint uniformBlockIndex,
                                                      GLenum pname,
                                                      GLint *params);
ANGLE_EXPORT void GL_APIENTRY GetActiveUniformName(GLuint program,
                                                   GLuint uniformIndex,
                                                   GLsizei bufSize,
                                                   GLsizei *length,
                                                   GLchar *uniformName);
ANGLE_EXPORT void GL_APIENTRY GetActiveUniformsiv(GLuint program,
                                                  GLsizei uniformCount,
                                                  const GLuint *uniformIndices,
                                                  GLenum pname,
                                                  GLint *params);
ANGLE_EXPORT GLuint GL_APIENTRY GetUniformBlockIndex(GLuint program,
                                                     const GLchar *uniformBlockName);
ANGLE_EXPORT void GL_APIENTRY GetUniformIndices(GLuint program,
                                                GLsizei uniformCount,
                                                const GLchar *const *uniformNames,
                                                GLuint *uniformIndices);
ANGLE_EXPORT void GL_APIENTRY PrimitiveRestartIndex(GLuint index);
ANGLE_EXPORT void GL_APIENTRY TexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
ANGLE_EXPORT void GL_APIENTRY UniformBlockBinding(GLuint program,
                                                  GLuint uniformBlockIndex,
                                                  GLuint uniformBlockBinding);
}  // namespace gl

#endif  // LIBGL_ENTRY_POINTS_GL_3_1_AUTOGEN_H_
