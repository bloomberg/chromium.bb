// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py using data from shaders/src/*
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// vk_internal_shaders_autogen.cpp:
//   Pre-generated shader library for the ANGLE Vulkan back-end.

#include "libANGLE/renderer/vulkan/vk_internal_shaders_autogen.h"

#include "common/debug.h"

namespace rx
{
namespace vk
{
namespace priv
{
namespace
{
#include "libANGLE/renderer/vulkan/shaders/gen/FullScreenQuad.vert.inc"
#include "libANGLE/renderer/vulkan/shaders/gen/PushConstantColor.frag.inc"

constexpr ShaderBlob kShaderBlobs[] = {{kFullScreenQuad_vert, sizeof(kFullScreenQuad_vert)},
                                       {kPushConstantColor_frag, sizeof(kPushConstantColor_frag)}};
}  // anonymous namespace

const ShaderBlob &GetInternalShaderBlob(InternalShaderID shaderID)
{
    ASSERT(static_cast<size_t>(shaderID) < static_cast<size_t>(InternalShaderID::EnumCount));
    return kShaderBlobs[static_cast<size_t>(shaderID)];
}
}  // namespace priv
}  // namespace vk
}  // namespace rx
