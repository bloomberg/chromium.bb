// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertVertex.comp.00000003.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertVertex_comp_00000003[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x9d,0x98,0x79,0x94,0x8f,0x65,
    0x14,0xc7,0xdf,0x77,0x66,0xfc,0x8c,0x31,0xc6,0x36,0x63,0x4f,0x44,0x45,0x64,0x6b,
    0x2c,0x21,0xe9,0x48,0x43,0x4d,0x49,0x22,0x1c,0x92,0x25,0x52,0x91,0xad,0x45,0x4d,
    0x25,0x5b,0x28,0x4b,0xc8,0x92,0x52,0x22,0x84,0xa4,0x94,0x2c,0x25,0xd9,0x3a,0x39,
    0x47,0xe5,0x1c,0xb2,0xb4,0x29,0xad,0x4e,0xd6,0x84,0x14,0x7a,0xee,0xfb,0x7e,0xae,
    0xb9,0x9e,0x33,0x7f,0xf5,0x3b,0xe7,0x3d,0xbf,0xf7,0x7e,0xef,0xbd,0xdf,0x7b,0x9f,
    0xfb,0xdc,0x67,0xf9,0xfd,0x92,0x93,0xaa,0x15,0x0e,0x82,0x30,0x48,0x0b,0x52,0x83,
    0xf2,0x61,0x10,0x7d,0x4a,0x06,0x49,0x81,0xbc,0x16,0x0d,0x12,0xd1,0x77,0x4e,0x6e,
    0x87,0xdc,0x3a,0x43,0x87,0xf5,0xa9,0x93,0xdd,0xb0,0x9e,0xe8,0x33,0x82,0xe4,0xc8,
    0x4e,0x74,0xc5,0x9d,0x4d,0x21,0xf7,0x9d,0xe2,0x9e,0x01,0x3d,0xfb,0x0f,0x14,0x7c,
    0x9f,0x7b,0x4a,0x38,0x3c,0x25,0xe2,0x0a,0x82,0x96,0xd8,0xca,0xd3,0xc6,0x59,0x5f,
    0x1e,0x87,0x09,0xaa,0xf1,0xad,0x58,0x08,0x96,0x62,0xb0,0x24,0xb0,0x54,0x83,0x25,
    0x83,0xa5,0x1b,0x2c,0x05,0xac,0x84,0xc1,0x0a,0x81,0x65,0x1a,0x2c,0x01,0x56,0xce,
    0x60,0x85,0xc1,0x2a,0x19,0x2c,0x15,0xac,0x8a,0xc1,0x8a,0x80,0x55,0x37,0x58,0x1a,
    0x58,0x0d,0x83,0x15,0x05,0xab,0x6d,0xb0,0x74,0xb0,0x7a,0x06,0x2b,0x06,0x96,0x6d,
    0xb0,0x0c,0xb0,0x26,0x52,0x77,0x37,0x52,0xad,0x41,0x8e,0x1b,0x61,0x6f,0xf2,0xd7,
    0xfa,0xf4,0xf1,0xea,0x28,0xf6,0x7d,0xa8,0x8f,0xd8,0xf7,0x75,0xdf,0x97,0x5d,0xd0,
    0xc5,0x72,0x55,0xea,0x2c,0xf2,0x4e,0x8f,0x6f,0x57,0x01,0x7c,0xbb,0x0c,0xdf,0x6e,
    0x8f,0x6f,0x37,0x7c,0x2a,0xef,0x63,0xec,0x95,0x90,0xcb,0x85,0xb1,0x5c,0xde,0x3d,
    0xa5,0xdd,0x28,0x92,0x22,0xfb,0xe4,0x88,0x4f,0xde,0xb3,0x9c,0x4d,0x82,0x1a,0x07,
    0xd1,0x77,0x4a,0x34,0x17,0x85,0xc9,0xab,0xaa,0xcb,0x29,0x95,0x77,0xc5,0xab,0x3a,
    0x9b,0x92,0x06,0x2b,0xe3,0xd8,0xb2,0xe0,0x10,0x5d,0x99,0x88,0x37,0xd6,0x09,0x5f,
    0x05,0xde,0xb3,0xe0,0xab,0x68,0x7c,0x2b,0xe0,0x53,0x85,0x7c,0x04,0xab,0xec,0xd8,
    0xb5,0x4f,0xfe,0xef,0x23,0x71,0xaf,0xa0,0x5f,0x84,0xab,0x19,0xf2,0x95,0x60,0x32,
    0xee,0x1a,0xe4,0x2c,0x73,0x51,0x0b,0xb9,0xa6,0xf1,0xbf,0x0a,0xdb,0x84,0xd1,0xd7,
    0xa5,0xa7,0x55,0xce,0x26,0xef,0x5a,0xd4,0xb1,0x39,0x73,0xa9,0x72,0x0b,0xfa,0x58,
    0xed,0x5b,0x7b,0x72,0x3b,0xec,0x33,0x1d,0xcb,0x1d,0xc6,0xaf,0x23,0x73,0xae,0x72,
    0x57,0xe6,0xe7,0x12,0x87,0x6a,0x0f,0x56,0xa6,0xd7,0x7a,0x93,0xef,0xbd,0xe4,0xd2,
    0x87,0xf1,0x8a,0xdc,0xd7,0xe4,0x27,0xf1,0xfa,0x99,0x79,0xbe,0x1f,0x9d,0x1d,0xdf,
    0x00,0xd6,0x84,0xca,0x8f,0xb0,0xbe,0x54,0xce,0x33,0x79,0x89,0xfc,0xa4,0x7b,0xce,
    0x27,0xe7,0xcb,0x23,0x58,0x3f,0x9a,0xf7,0xb3,0xc6,0x5f,0xe4,0xa9,0x5e,0xbd,0xe6,
    0x33,0x07,0x92,0xcf,0x1b,0xcc,0x7f,0x0d,0xc3,0xff,0xa6,0xf0,0xbb,0x8f,0xca,0x4b,
    0xbd,0xf9,0x5a,0xc7,0xba,0x96,0xba,0xec,0x34,0x75,0x91,0x35,0xb3,0x13,0xde,0xaf,
    0x88,0xb9,0x8b,0xba,0x88,0xbc,0x1b,0xac,0xac,0x93,0xf7,0xe0,0x97,0x8c,0xfd,0x5e,
    0x62,0xec,0xc1,0x7e,0x2f,0xfb,0x69,0x88,0xfe,0x6b,0xde,0x13,0x66,0x1c,0x27,0x4c,
    0x5e,0x22,0x97,0x0d,0xe3,0x3d,0xb7,0xb6,0x93,0x84,0x47,0xd6,0xa1,0x60,0x27,0xb0,
    0x6d,0xe4,0xba,0x28,0x89,0xb9,0x0f,0x88,0x7d,0xda,0x21,0x85,0x88,0x29,0x75,0xf8,
    0x83,0x7a,0xa8,0x7c,0xc8,0x93,0x4f,0x7a,0x72,0x72,0x78,0xb1,0x9c,0x62,0xe4,0x68,
    0x0d,0x7a,0xfa,0x54,0x4f,0x2e,0xea,0xd9,0x17,0xf3,0xf4,0x99,0xc8,0x37,0xb8,0x2c,
    0xa5,0x06,0x3f,0x51,0x17,0xe9,0xcd,0xeb,0x18,0xf7,0xcf,0xe0,0x62,0x23,0xeb,0xe7,
    0x17,0xd6,0x5c,0x3f,0x63,0xf3,0x2b,0xf8,0x72,0x67,0x23,0x3d,0xff,0x1b,0x7e,0x82,
    0x9f,0x72,0x95,0x38,0x48,0x4d,0xce,0x38,0x7b,0xd1,0xfd,0xee,0x9e,0x83,0xd4,0x47,
    0xde,0xcf,0xba,0x4a,0xcb,0xfb,0xc1,0x68,0x7d,0x25,0x47,0x75,0xea,0xca,0xfb,0x21,
    0xde,0xff,0x76,0xfa,0xc3,0xf8,0x1c,0x8e,0x6a,0x95,0x12,0x1c,0x75,0xdf,0xc7,0xe0,
    0x16,0xfd,0x71,0xf4,0xc7,0x4d,0x6e,0x7f,0x52,0xe7,0x15,0xe4,0xf6,0x17,0xd8,0x09,
    0xf2,0x11,0xf9,0x88,0x7b,0x8e,0xe2,0x7b,0xc4,0xd4,0xe3,0x54,0x01,0xf5,0x38,0x0d,
    0x3e,0xda,0xd9,0x24,0xa2,0xb8,0x31,0x76,0xc2,0xd8,0x9c,0x21,0xe6,0x08,0x6c,0xfe,
    0xc1,0xee,0x0c,0x63,0x3a,0x09,0xa6,0xf6,0xff,0x32,0xf7,0x5a,0xe3,0xb3,0xd4,0x78,
    0xa9,0xb1,0x39,0x07,0xae,0x35,0x3e,0x8f,0xdf,0x39,0x6a,0x1c,0x86,0xf9,0x35,0x3e,
    0xcf,0x45,0x42,0x30,0x19,0x93,0xbc,0x4b,0x7d,0x74,0x8c,0x82,0x2b,0x6f,0xa1,0x30,
    0x8e,0x2d,0x79,0x49,0x7f,0x89,0x7c,0x2d,0x79,0x27,0x42,0x39,0x63,0xe2,0xbe,0x13,
    0xbd,0xf4,0x63,0xc2,0xf8,0x16,0x09,0xe3,0x1e,0x15,0x9d,0xf4,0x5e,0x11,0x7c,0xe5,
    0x5c,0x48,0x0b,0xe3,0xfb,0x40,0x2a,0x7a,0xe9,0xd5,0x34,0xe3,0x9b,0x6e,0xe2,0x4a,
    0x9f,0xa6,0xa3,0x13,0xdf,0x8c,0x30,0xee,0x6d,0xd1,0x49,0xcf,0x66,0x44,0xbc,0x89,
    0xc8,0xaf,0x78,0x28,0xfb,0x41,0xdc,0xdb,0xc5,0x0c,0x5f,0x89,0x30,0x5e,0x5f,0x5b,
    0xc8,0xbd,0x64,0x18,0x63,0xc5,0xc3,0xfc,0x9e,0x2a,0x49,0x1d,0x8e,0x51,0x87,0x63,
    0xa6,0xbe,0xa5,0xc2,0x8b,0xe7,0xac,0x74,0x18,0x63,0x4b,0x4d,0x1f,0x96,0x0e,0x2f,
    0xee,0xc3,0xa3,0xc6,0x3f,0x8b,0xf8,0x62,0x2b,0xeb,0x2a,0x8b,0x5a,0xc8,0x9e,0x50,
    0x26,0x8c,0xcf,0x78,0xc1,0xa5,0xd7,0x9b,0xb8,0xa7,0x11,0x71,0x8a,0xd2,0xbf,0x72,
    0x86,0x34,0x96,0x3a,0x71,0x46,0xe9,0x7b,0x1a,0xb1,0xd2,0x4d,0xac,0xea,0xd8,0x68,
    0xbf,0xd4,0xa2,0x5f,0x6a,0x1a,0x9b,0xda,0xe0,0xda,0xa7,0x57,0xe3,0x57,0xdb,0xd8,
    0xd4,0x81,0x5f,0x79,0xea,0xc1,0x53,0xd7,0xd8,0xd4,0x07,0x57,0x9e,0x06,0xf8,0xd5,
    0x37,0xb5,0xba,0x06,0xfe,0x06,0x86,0xab,0x21,0x5c,0xd9,0x86,0xab,0x11,0xb8,0xfa,
    0x35,0xc6,0xb7,0x51,0xd4,0xc7,0x49,0x91,0x6c,0x6b,0x53,0xbc,0x80,0xda,0x14,0x33,
    0xef,0x19,0xd4,0xa6,0x84,0xd9,0xd3,0x9a,0xb2,0x87,0x6a,0xcc,0x66,0xf8,0x8c,0x87,
    0xf3,0x3a,0xb0,0xe6,0x66,0x4c,0xd7,0x83,0xb7,0x60,0xfe,0x9a,0x5e,0xc0,0x62,0x8e,
    0x96,0xf0,0x4a,0x8e,0x2d,0xbd,0x1c,0x4b,0x07,0x7a,0xbf,0xcf,0xcf,0xab,0x14,0x79,
    0x65,0x9a,0xbc,0x5a,0x79,0x7b,0x7b,0x5b,0x4f,0xee,0xe6,0xc9,0xdd,0x3d,0xb9,0x87,
    0x27,0xf7,0xf2,0xe4,0xa1,0x9e,0x3c,0xdc,0x93,0xc7,0x7a,0xf2,0x44,0x4f,0x9e,0xed,
    0xc9,0x73,0x8c,0x2c,0xe7,0xf8,0x42,0x4f,0xbf,0xd6,0x93,0x37,0x7b,0x75,0xbf,0x91,
    0x3a,0x68,0x3f,0xdc,0x44,0x3f,0xb4,0x36,0x36,0x39,0xe0,0x63,0xa9,0x65,0x1b,0xfc,
    0x72,0x98,0x87,0x56,0x60,0x6a,0x7f,0xb3,0xc7,0x79,0x4b,0x01,0x9c,0xb9,0xe0,0x3a,
    0xdf,0xb7,0xe2,0x97,0x0b,0x67,0x5b,0x30,0xb5,0xbf,0x8d,0xb9,0x50,0xce,0xdb,0xe1,
    0x6c,0x67,0x6c,0xda,0x83,0xeb,0xde,0xdb,0x01,0xbf,0xf6,0xc6,0xe6,0x4e,0x78,0xf4,
    0x9c,0xe9,0x04,0x26,0xf7,0xbe,0x45,0x60,0x77,0xe1,0xdb,0x89,0x3d,0xbb,0x8b,0x39,
    0x17,0x45,0xd7,0xd9,0x3d,0x5d,0xe8,0x9d,0xce,0xf4,0x5b,0x57,0xe4,0x2e,0x26,0xd6,
    0xdd,0xf4,0x93,0x8c,0xa7,0x3b,0xb2,0xea,0xee,0x21,0x0f,0xd1,0xf5,0x40,0xd6,0xbd,
    0xb3,0x27,0xfb,0x4d,0x77,0xfa,0x49,0x6c,0xba,0x81,0xab,0xff,0x7d,0xf4,0xa2,0xce,
    0x49,0x7f,0xb0,0xe6,0x51,0x8d,0x12,0xd1,0x1d,0xf3,0x01,0xee,0xa1,0xfd,0xd0,0xab,
    0xef,0x83,0xe8,0x84,0xb7,0x17,0xb2,0xd6,0x75,0x20,0x75,0x1d,0x60,0xec,0x1f,0x02,
    0x5f,0x4a,0x7d,0x06,0x81,0x75,0xa5,0x3e,0x43,0x4c,0x7d,0x44,0x37,0xd8,0x3d,0xb3,
    0xa8,0xc7,0x60,0xc3,0x33,0x8c,0x31,0x2f,0x81,0xe7,0x61,0xb0,0x8e,0xd1,0x7d,0x33,
    0x11,0xdd,0x2b,0x1f,0x05,0xcf,0xe6,0x0e,0x9c,0x87,0xef,0x63,0xe8,0x24,0xe7,0xa1,
    0xc8,0xca,0xfb,0xb8,0xc7,0xfb,0x04,0x98,0xe5,0x7d,0x0a,0x3c,0x8f,0xbb,0xb3,0xf2,
    0x3e,0x8d,0x4e,0x78,0x87,0x23,0x6b,0x2d,0x9e,0xa1,0x16,0x23,0x4c,0xac,0x91,0xe0,
    0x5a,0x8b,0x51,0x60,0x5a,0x8b,0x31,0xa6,0x16,0xa3,0xa2,0xbd,0x2b,0x08,0x26,0x50,
    0x8b,0xd1,0x86,0x67,0x1c,0x39,0xeb,0xde,0x36,0x9e,0x3b,0xfb,0x38,0x72,0x19,0x0b,
    0x26,0xe7,0xd8,0x18,0xfc,0x27,0x18,0xff,0xe7,0xbc,0x31,0x3f,0x0f,0xd6,0x91,0x3c,
    0x26,0x9b,0x3c,0x44,0x37,0xc9,0x3d,0x53,0xe0,0x99,0x44,0x8c,0x89,0xe6,0xce,0x36,
    0x19,0xdd,0x14,0x13,0xe3,0x05,0xf6,0x2b,0x95,0xa7,0x11,0x73,0x24,0x39,0x4f,0xe7,
    0x77,0xc5,0x34,0x33,0x8e,0x17,0xf1,0x9b,0x6e,0xce,0x8f,0x19,0xe0,0x53,0x4d,0xdc,
    0x19,0x5e,0xdc,0xc9,0x26,0xce,0x4c,0xf6,0x3d,0xad,0xc3,0x4c,0xaf,0x0e,0x63,0x90,
    0x87,0x20,0xcf,0x32,0xbe,0x2f,0xb1,0x2e,0xc4,0x77,0x36,0xb2,0xce,0xe7,0xcb,0x05,
    0x9c,0x9b,0xaf,0x80,0x8b,0xfd,0x1c,0x64,0x5d,0x87,0x73,0x39,0xdb,0x66,0xb3,0xcf,
    0x6a,0x3e,0x73,0x0d,0xe7,0xab,0x05,0x70,0xbe,0x06,0xae,0x35,0x99,0x07,0xd6,0xc2,
    0xf4,0xef,0x3c,0x63,0xff,0x3a,0x75,0xd6,0xb9,0x5c,0x00,0x36,0x9f,0xb9,0x5c,0x6c,
    0xe6,0x72,0x41,0xb4,0x4f,0x89,0x6d,0x3c,0xf6,0x45,0x70,0x2e,0xe4,0x37,0x9b,0xd4,
    0x65,0x31,0xba,0x25,0x26,0xc6,0x32,0x62,0x6c,0x76,0x31,0x64,0x3d,0xbc,0xc5,0xbd,
    0x75,0x19,0xf3,0x59,0x23,0xda,0x37,0xf3,0x71,0xe5,0x5c,0xee,0x71,0x2e,0x86,0x53,
    0xec,0xdf,0xe6,0xbc,0xd1,0xb5,0xb4,0x02,0x4c,0xd7,0xd2,0x0a,0x6f,0x9e,0x86,0x98,
    0x7c,0xde,0xf1,0xf6,0xf3,0x77,0x0b,0xd8,0xcf,0x57,0x82,0xeb,0x7e,0xfe,0x1e,0x7e,
    0x2b,0x8d,0xcd,0xfb,0xde,0x3a,0x58,0x05,0x66,0xf7,0xf3,0x0f,0xf0,0x5d,0x45,0x3d,
    0xd7,0x98,0x7a,0x8a,0x6e,0xb5,0x7b,0xd6,0x93,0xe3,0x6a,0x93,0xd3,0x87,0xe4,0xb4,
    0xce,0xc4,0xfb,0x08,0x5c,0xc6,0xb8,0x16,0x59,0xc6,0xb8,0x06,0xff,0xf5,0xc6,0xf6,
    0x63,0xce,0x7f,0x95,0x37,0x70,0xbe,0x6f,0xa4,0x2f,0x3e,0xc1,0x66,0x83,0xb1,0xd9,
    0xc8,0x9d,0xe0,0x53,0x6c,0x36,0x61,0xb7,0xd1,0xc4,0xdc,0xe4,0xc5,0x5c,0x63,0xfc,
    0xb7,0x70,0xe6,0x8b,0xed,0x66,0x64,0xd5,0x6d,0xe5,0xfc,0x97,0xf3,0x6a,0xab,0xb9,
    0x1f,0x65,0xf1,0x9f,0x60,0x10,0xfd,0xa7,0x94,0x7f,0x3f,0x2a,0x0b,0x7f,0x79,0xc3,
    0xf1,0x19,0xf8,0x20,0x7e,0x03,0x6c,0x03,0x13,0xce,0x6d,0xde,0x9d,0xab,0x32,0x9c,
    0x15,0x0d,0x67,0x25,0xde,0x2b,0x44,0xff,0x1d,0xc4,0xfc,0x97,0x9a,0xfb,0xc9,0x76,
    0x73,0x3f,0x11,0xfe,0xcf,0xb1,0xcb,0xa3,0xe7,0xbe,0x00,0xd3,0x9e,0xfb,0x12,0x4c,
    0xc6,0xbb,0x1d,0x59,0x73,0xdd,0x01,0x9f,0xe4,0xb6,0xc3,0xe4,0x96,0x64,0xfe,0xcb,
    0xab,0x62,0x72,0xab,0x4a,0x3e,0xd5,0xcc,0x6f,0xcb,0x6f,0x0a,0xf8,0x6d,0xf9,0x2d,
    0xb8,0xf6,0xc9,0x77,0xf4,0x49,0x9e,0xb1,0xf9,0x1e,0x5c,0xcf,0xe7,0xfd,0x60,0xcd,
    0xcd,0xbe,0xf8,0x03,0x5c,0xfb,0x8d,0xdf,0x8f,0xe4,0xa1,0x67,0xf8,0x01,0xfe,0x33,
    0xe9,0x87,0xbd,0x8c,0xf3,0x00,0x76,0xfa,0x1b,0xe5,0x3f,0x7c,0x96,0x24,0x0b,0xc8,
    0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)buffer src
// {
//     uint srcData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint outputCount;
//
//     uint componentCount;
//
//     uint srcOffset;
//     uint destOffset;
//
//     uint Ns;
//     uint Bs;
//     uint Ss;
//     uint Es;
//
//     uint Nd;
//     uint Bd;
//     uint Sd;
//     uint Ed;
//
//     uint srcEmulatedAlpha;
//
//     bool isSrcHDR;
//     bool isSrcA2BGR10;
// } params;
//
// uint getSourceComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Ss + component * params . Bs + params . srcOffset;
// }
//
// uint getDestinationComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Sd + component * 4 + params . destOffset;
// }
//
// uint getShiftBits(uint offset, uint B)
// {
//
//     uint shift =(offset % 4)* 8;
//
//     return shift;
// }
//
//       uint loadSourceComponent(uint cd)
// {
//
//     uint vertex = cd / params . Nd;
//     uint component = cd % params . Nd;
//
//     if(component >= params . Ns && component < 3)
//     {
//         return 0;
//     }
//
//     uint offset = getSourceComponentOffset(vertex, component);
//     uint block = srcData[offset / 4];
//
//     uint shiftBits;
//     uint valueBits;
//     uint valueMask;
//
//     if(params . isSrcHDR)
//     {
//         valueBits = component == 3 ? 2 : 10;
//         valueMask = component == 3 ? 0x03 : 0x3FF;
//         if(params . isSrcA2BGR10)
//         {
//             shiftBits = 10 * component;
//         }
//         else
//         {
//
//             shiftBits = component == 3 ? 0 :(valueBits *(2 - component)+ 2);
//         }
//     }
//     else
//     {
//         shiftBits = getShiftBits(offset, params . Bs);
//         valueBits = params . Bs * 8;
//         valueMask = valueBits == 32 ? - 1 :(1 << valueBits)- 1;
//     }
//
//     uint valueAsUint;
//
//     if(component >= params . Ns && component == 3)
//     {
//         valueAsUint = params . srcEmulatedAlpha;
//     }
//     else
//     {
//         valueAsUint =(block >> shiftBits)& valueMask;
//     }
//
//           uint value = valueAsUint;
//
//     return value;
// }
//
//        float convertComponent(uint srcValue)
// {
//
//     return srcValue;
// }
//
// uint makeDestinationComponent(uint cd, float value)
// {
//
//     uint valueAsUint = floatBitsToInt(value);
//
//     return valueAsUint;
// }
//
// void storeDestinationComponents(uint valueAsUint)
// {
//
//     destData[gl_GlobalInvocationID . x + params . destOffset / 4]= valueAsUint;
// }
//
// void main()
// {
//     if(gl_GlobalInvocationID . x >= params . outputCount)
//         return;
//
//     uint valueOut = 0;
//     for(uint i = 0;i < 1;++ i)
//     {
//         uint cd = gl_GlobalInvocationID . x * 1 + i;
//         if(cd >= params . componentCount)
//         {
//             break;
//         }
//
//               uint srcValue = loadSourceComponent(cd);
//                float destValue = convertComponent(srcValue);
//         valueOut |= makeDestinationComponent(cd, destValue);
//     }
//
//     storeDestinationComponents(valueOut);
// }
