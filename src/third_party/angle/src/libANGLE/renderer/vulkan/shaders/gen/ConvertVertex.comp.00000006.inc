// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertVertex.comp.00000006.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertVertex_comp_00000006[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x9d,0x98,0x79,0x94,0x8f,0x65,
    0x14,0xc7,0x7f,0xef,0x6f,0x66,0x7e,0x33,0x66,0xc6,0x98,0x31,0x8c,0x64,0xc9,0x44,
    0x45,0x84,0x64,0x4d,0xd3,0x41,0xb2,0x94,0x54,0x84,0x43,0x0a,0x99,0x16,0xca,0x16,
    0xa5,0x24,0xc9,0x16,0x59,0x42,0x96,0x50,0x21,0x24,0x4b,0xf6,0x92,0x90,0xb2,0x9c,
    0x9c,0xa3,0x72,0x0e,0x59,0xda,0x94,0x56,0x87,0x2c,0x49,0x42,0x96,0x9e,0xfb,0xfe,
    0x3e,0xb7,0xb9,0x9e,0x33,0x7f,0x35,0xe7,0xbc,0xe7,0x7d,0xef,0xf7,0xae,0xcf,0xf7,
    0xb9,0xcf,0xf2,0x9b,0x84,0x68,0xc5,0xe4,0x48,0x24,0x88,0xa4,0x46,0x52,0x22,0xa5,
    0x82,0x48,0xf8,0x97,0x15,0x89,0x46,0xe4,0x33,0x2d,0x12,0x0b,0xdf,0xcd,0x5b,0xb5,
    0x6d,0x55,0xbd,0xff,0x80,0xfc,0xea,0xb5,0xeb,0xd4,0x14,0x7d,0x46,0x24,0x21,0xb4,
    0x13,0x5d,0x31,0x67,0x93,0xe4,0xde,0x89,0xee,0xe9,0xd5,0xad,0x47,0x6f,0xc1,0xf7,
    0xbb,0x27,0xd3,0xe1,0x89,0x61,0xac,0x48,0xa4,0x11,0xb6,0xf2,0xb4,0x70,0xd6,0xd7,
    0xc4,0xd3,0x44,0x2a,0xf2,0x56,0x2c,0x00,0x4b,0x34,0x58,0x14,0x2c,0xc5,0x60,0x09,
    0x60,0xe9,0x06,0x4b,0x04,0xcb,0x34,0x58,0x12,0x58,0x09,0x83,0xc5,0xc0,0xae,0x30,
    0x58,0x32,0x58,0x59,0x83,0xa5,0x80,0x55,0x30,0x58,0x11,0xb0,0x4a,0x06,0x4b,0x05,
    0xab,0x6c,0xb0,0x34,0xb0,0x6a,0x06,0x4b,0x07,0xab,0x69,0xb0,0xa2,0x60,0xb5,0x0d,
    0x96,0x01,0x56,0x5f,0x78,0x77,0x23,0x55,0x0e,0x9a,0xbb,0x11,0x76,0xa5,0x7e,0xe5,
    0xa7,0x9b,0xc7,0xa3,0xd8,0x77,0x83,0x1f,0xb1,0xef,0xee,0xde,0x57,0xff,0xa7,0x8b,
    0xcb,0xb9,0xf0,0x2c,0xf2,0x2e,0x2f,0xde,0xee,0x42,0xe2,0xed,0x36,0xf1,0xf6,0x78,
    0xf1,0xf6,0x10,0x4f,0xe5,0xfd,0x8c,0xbd,0x2c,0x72,0x4e,0x10,0x97,0x4b,0xbb,0x27,
    0xdb,0x8d,0x22,0x1a,0xda,0x27,0x84,0xf1,0xe4,0xbb,0xa4,0xb3,0x89,0xc1,0x71,0x24,
    0x7c,0x27,0x86,0x73,0x91,0x4c,0x5d,0xb9,0xae,0xa6,0x14,0xbe,0x15,0xcf,0x71,0xde,
    0x59,0xf8,0xe4,0x3a,0xfb,0xe2,0xf4,0x58,0x32,0xfe,0x39,0x7c,0x67,0xa1,0x2f,0xc5,
    0x77,0x0e,0xf1,0xca,0x98,0x78,0x39,0xd8,0x54,0xa0,0x1e,0xc1,0xca,0x3b,0x6b,0xed,
    0x93,0xff,0xfb,0x48,0x1d,0xd7,0xd2,0x2f,0x12,0xab,0x21,0xf2,0x75,0x60,0x32,0xee,
    0xca,0x8c,0x41,0xe6,0xa2,0x2a,0x72,0x15,0xe3,0x7f,0x3d,0xb6,0x31,0xf4,0xf2,0xae,
    0xc1,0x5c,0xa9,0x7d,0x2d,0xea,0x56,0x7d,0x43,0xfa,0x56,0xf5,0x4d,0x3c,0xb9,0x15,
    0xfe,0x25,0x9c,0xd7,0xdd,0xc6,0xaf,0x0d,0x73,0x2c,0xb2,0x70,0xd5,0x81,0xf9,0x28,
    0xe7,0x50,0xed,0xb9,0xf2,0xf4,0x56,0x57,0xea,0x7b,0x88,0xdc,0xdd,0x18,0x9f,0xc8,
    0xdd,0x4d,0x3d,0x92,0x2f,0xdf,0xcc,0xeb,0xa3,0xe8,0x62,0x46,0xdf,0x93,0x35,0xa0,
    0x75,0xf4,0xc2,0x5e,0xf5,0x03,0x58,0x5f,0x2a,0x0f,0x32,0x75,0x8a,0xfc,0x9c,0x7b,
    0x2e,0x25,0x14,0xc8,0x43,0x58,0x3f,0x1a,0x6f,0xa4,0xf1,0x17,0x79,0xa2,0xc7,0xd7,
    0x2c,0xe6,0x40,0xea,0x7b,0x93,0xf9,0xaf,0x6c,0xe2,0xbf,0x25,0xf1,0xdd,0x9f,0xca,
    0xf3,0xbd,0xf9,0x5a,0xc3,0xba,0x56,0xde,0x3e,0x0a,0xab,0x1f,0x5a,0x4f,0x78,0xdb,
    0x65,0x78,0x93,0x35,0xb4,0x8b,0x3c,0x5f,0x52,0xc3,0x6e,0x78,0x13,0x79,0x0f,0x58,
    0x29,0x27,0xef,0xc5,0x2f,0x01,0xfb,0x7d,0xe4,0xdc,0x8b,0xfd,0x3e,0xf6,0xd7,0x00,
    0xfd,0x57,0x7c,0xdb,0x3e,0x39,0x69,0xea,0x14,0xb9,0x64,0x10,0xdf,0x83,0xab,0x39,
    0x49,0xe2,0xc8,0xba,0x14,0xec,0x24,0xb6,0x75,0xdd,0xba,0x88,0xd2,0x1b,0x11,0x72,
    0x9f,0x71,0x48,0x12,0x39,0x85,0x97,0xc3,0xf0,0xa3,0xf2,0x11,0x4f,0x3e,0x65,0x64,
    0x59,0x57,0x41,0x70,0xb9,0x3e,0x1a,0x5c,0xae,0x4f,0xf2,0xe4,0x98,0x67,0x5f,0xc4,
    0xd3,0xa7,0x79,0xfa,0xe2,0xc8,0x8d,0x5d,0x95,0xc2,0xc1,0x8f,0xf0,0x22,0x3d,0x94,
    0xc7,0xb8,0x7f,0x02,0x17,0x1b,0x59,0x4f,0x3f,0xb3,0x06,0xf3,0x8d,0xcd,0x2f,0xe0,
    0xcb,0x9c,0x8d,0xac,0x89,0x5f,0xf1,0x13,0xfc,0x6f,0xc7,0xc4,0x21,0x38,0x39,0xe7,
    0xec,0x45,0xf7,0x9b,0x7b,0x0e,0xc1,0x8f,0x7c,0x5f,0x70,0x4c,0xcb,0xb7,0x60,0xb7,
    0x3a,0xfb,0xc3,0xd4,0x20,0xdf,0x47,0xf8,0x3e,0xeb,0xf4,0xbf,0xe3,0x23,0xef,0xd3,
    0x2e,0xd6,0x31,0xf7,0x3e,0x4e,0x6c,0xd1,0x9f,0x40,0x7f,0xc2,0xd4,0xf6,0x07,0x3c,
    0xaf,0xa0,0xb6,0x3f,0xc1,0x4e,0x52,0x8f,0xc8,0x47,0xdd,0x73,0x0c,0xdf,0xa3,0x86,
    0x8f,0xbf,0x0a,0xe1,0xe3,0x34,0xf8,0x08,0x67,0x13,0x0b,0xc7,0x17,0xc7,0x4e,0x1a,
    0x9b,0x33,0xe4,0x1c,0x8a,0xcd,0x59,0xec,0xce,0x30,0xa6,0x53,0x60,0x6a,0x7f,0x8e,
    0xb9,0x57,0x8e,0xff,0x81,0xe3,0xf9,0xc6,0xe6,0x3c,0xb8,0x72,0x7c,0x01,0xbf,0xf3,
    0x70,0x7c,0xc9,0x70,0x2c,0xba,0x8b,0xb2,0xee,0x18,0xd3,0x45,0xf8,0xd1,0x31,0x5e,
    0x32,0x71,0x13,0x82,0x78,0x6e,0xa9,0x4b,0xfa,0x4b,0xe4,0x06,0x2e,0x87,0xac,0xc5,
    0xc4,0x20,0x7e,0xee,0x0b,0x2e,0x7a,0xe9,0x47,0xc1,0xf2,0x58,0xab,0xc9,0x41,0xbc,
    0x47,0x45,0x17,0xf6,0x9e,0xf1,0x4d,0x09,0xe2,0x67,0x56,0x0c,0xbd,0xf4,0x6a,0x4a,
    0x50,0x90,0x37,0xd5,0xe4,0x95,0x3e,0x4d,0x35,0x71,0xd3,0x83,0x78,0x6f,0x8b,0x4e,
    0x7a,0x36,0x3d,0x8c,0x1b,0x0b,0xfd,0x8a,0x06,0xb2,0x1f,0xc4,0x7b,0x3b,0xcd,0xc4,
    0xcb,0x08,0xe2,0xeb,0x6b,0x1b,0x9c,0x17,0x0b,0xe2,0x58,0xd1,0xa0,0xa0,0xa7,0x04,
    0x13,0x1e,0x8e,0xc3,0xc3,0x71,0xc3,0x43,0x66,0x70,0xf9,0x9c,0x65,0x05,0x71,0x6c,
    0xbe,0xe9,0xc3,0xac,0xe0,0xf2,0x3e,0x3c,0x66,0xfc,0xb3,0xc9,0x2f,0xb6,0xb2,0xae,
    0xb2,0xe1,0x42,0xf6,0x84,0x12,0x41,0xfc,0xcc,0x17,0x5c,0x7a,0xbd,0xbe,0x7b,0xea,
    0x92,0x27,0x8d,0x79,0x93,0x33,0xa6,0x9e,0xf3,0x4d,0xe6,0xcc,0xd2,0xef,0x54,0x72,
    0xa5,0x9b,0x5c,0x95,0xb0,0xd1,0x7e,0xa9,0x4a,0xbf,0x54,0x31,0x36,0xd5,0xc0,0xb5,
    0x4f,0x6f,0xc0,0xaf,0x9a,0xb1,0xa9,0x4e,0x7c,0xb5,0xa9,0x09,0x56,0xc3,0xf0,0x70,
    0x23,0xbe,0x35,0x4d,0xbe,0x9b,0xc8,0x57,0xcb,0xc4,0xaa,0x0d,0xae,0x7e,0x75,0xf0,
    0xad,0x1d,0xf6,0x62,0x34,0x94,0xed,0xb8,0x8b,0x15,0x32,0xee,0xa2,0xe6,0x3b,0x83,
    0x71,0x67,0x9a,0xfd,0xaa,0x3e,0xfb,0xa3,0xe6,0x6c,0x80,0xcf,0x18,0x62,0xde,0x0c,
    0x56,0xc3,0x8c,0xe9,0x16,0xf0,0x86,0xcc,0x4d,0x7d,0x30,0x8d,0x91,0x47,0x5c,0xa9,
    0x31,0xcf,0xd4,0x98,0xc5,0x9d,0x57,0xfe,0x8a,0x9b,0xba,0xb2,0xa9,0xab,0xa4,0xa9,
    0xab,0x91,0xb7,0x8f,0x37,0xf3,0xe4,0x8e,0x9e,0xdc,0xc9,0x93,0x3b,0x7b,0x72,0x17,
    0x4f,0xee,0xe7,0xc9,0x03,0x3d,0x79,0x84,0x27,0x8f,0xf5,0xe4,0xe9,0x9e,0x3c,0xc3,
    0xc8,0x72,0x66,0xcf,0xf6,0xf4,0xab,0xbd,0x73,0x68,0xa3,0x27,0x6f,0xf2,0xe6,0xa1,
    0x31,0xbc,0x68,0x7f,0xdc,0x46,0x7f,0x34,0x31,0x36,0x4d,0xc1,0x47,0x31,0x2f,0xb7,
    0xe3,0xd7,0x94,0x79,0x69,0x04,0xa6,0xf6,0xcd,0xbd,0x98,0x2d,0x0a,0x89,0xd9,0x12,
    0x5c,0xe7,0xff,0x0e,0xfc,0x5a,0x12,0xb3,0x19,0x98,0xda,0xdf,0xc9,0xdc,0x68,0xcc,
    0xbb,0x88,0xd9,0xca,0xd8,0xb4,0x06,0xd7,0x7d,0xf6,0x1e,0xfc,0x5a,0x1b,0x9b,0x7b,
    0x89,0xa3,0x67,0x4a,0x5b,0x30,0xb9,0x03,0x2e,0x04,0xbb,0x0f,0xdf,0xb6,0xec,0xcf,
    0xed,0xcd,0xfe,0x2c,0xba,0x76,0xee,0x69,0x4f,0x2f,0xb5,0xa3,0xff,0x3a,0x20,0xb7,
    0x37,0xb9,0xee,0xa7,0xbf,0x64,0x3c,0x9d,0x90,0x55,0xf7,0x00,0x75,0x88,0xae,0x33,
    0xb2,0xee,0x93,0x0f,0xb2,0xb7,0x74,0xa2,0xbf,0xc4,0xa6,0x23,0xb8,0xfa,0x3f,0x4c,
    0x6f,0xea,0x9c,0x3c,0x02,0x56,0x23,0xe4,0x28,0x16,0xde,0x37,0x1f,0xe3,0x4e,0x9a,
    0x8f,0x5e,0x7d,0x7b,0xa0,0x93,0xb8,0x5d,0x90,0x95,0xd7,0xc7,0xe1,0xb5,0xa7,0xb1,
    0x7f,0x02,0x7c,0x09,0xfc,0xf4,0x06,0xeb,0x05,0x3f,0x7d,0x0d,0x3f,0xa2,0xeb,0xe3,
    0x9e,0x69,0xf0,0xd1,0xc7,0xc4,0x79,0x92,0x31,0x2f,0x26,0x4e,0x7f,0x30,0xe1,0x7e,
    0x91,0xb3,0x90,0x3b,0xe5,0x53,0xe0,0xb5,0xb8,0xff,0x0e,0xc6,0xf7,0x69,0x74,0x52,
    0x73,0x3f,0x64,0x8d,0xfb,0x8c,0x17,0xf7,0x59,0x30,0x1b,0x77,0x30,0xf8,0x20,0xee,
    0xcd,0x1a,0xf7,0x79,0x74,0x12,0x77,0x20,0xb2,0x72,0xf1,0x02,0x5c,0x0c,0x31,0xb9,
    0x86,0x82,0x2b,0x17,0x2f,0x82,0x29,0x17,0xc3,0x0d,0x17,0xa2,0x1b,0xe6,0x9e,0xd1,
    0x70,0x31,0xcc,0xc4,0x19,0x45,0xcd,0xba,0xd7,0xbd,0xc4,0x7d,0x7d,0x14,0xb5,0x8c,
    0x00,0x93,0x33,0x6b,0x38,0xfe,0xa3,0x8d,0xff,0x18,0x6f,0xcc,0x2f,0x83,0xb5,0xa1,
    0x8e,0xf1,0xa6,0x0e,0xd1,0x8d,0x73,0xcf,0x04,0xe2,0x8c,0x23,0xc7,0x58,0x73,0x3f,
    0x1b,0x8f,0x6e,0x82,0xc9,0xf1,0x0a,0xfb,0x97,0xca,0x93,0xc8,0x39,0x8c,0x9a,0x27,
    0xf3,0x9b,0x62,0x92,0x19,0xc7,0xab,0xf8,0x4d,0x36,0xe7,0xc9,0x14,0xf0,0x89,0x26,
    0xef,0x14,0x2f,0xef,0x78,0x93,0x67,0x2a,0xfb,0xa0,0xf2,0x30,0xd5,0xe3,0x61,0x38,
    0x72,0x5f,0xe4,0x69,0xc6,0xf7,0x35,0xd6,0x85,0xf8,0x4e,0x47,0x96,0xef,0x19,0xac,
    0x0d,0x5d,0x63,0x33,0x39,0xc7,0xa6,0xb3,0xa7,0x6a,0xae,0x99,0xa6,0xc7,0x66,0x99,
    0xb8,0xaf,0xc3,0x85,0xf2,0xfd,0x06,0xd8,0x2c,0xf8,0x9e,0x6b,0xf8,0x16,0xdd,0x1c,
    0xf7,0xcc,0xa3,0xbe,0x39,0xc4,0x9c,0xcd,0x6f,0x2a,0xa9,0x7d,0x2e,0xba,0x79,0x26,
    0xc7,0x02,0x72,0x6c,0x75,0x39,0xa4,0x67,0xdf,0xe6,0x1e,0xb9,0x00,0xce,0x2b,0x87,
    0x7b,0x54,0x01,0xae,0x31,0x17,0x7a,0x31,0xe7,0x12,0x53,0xec,0xdf,0xe1,0x8c,0xd0,
    0x7e,0x5f,0x04,0xa6,0xfd,0xbe,0xc8,0xe3,0xb2,0xaf,0xa9,0x67,0xb1,0xb7,0xe7,0x2e,
    0x29,0x64,0xcf,0x5d,0x0a,0xae,0x7b,0xee,0xbb,0xf8,0x2d,0x35,0x36,0xcb,0xbc,0x5e,
    0x5d,0x0e,0x66,0xf7,0xdc,0x15,0xf8,0x2e,0x87,0xcf,0x55,0x86,0x4f,0xd1,0xad,0x74,
    0xcf,0x5a,0x6a,0x5c,0x69,0x6a,0x7a,0x8f,0x9a,0xd6,0x98,0x7c,0xef,0x83,0xcb,0x18,
    0x57,0x23,0xcb,0x18,0x57,0xe1,0xbf,0xd6,0xd8,0x7e,0xc0,0x99,0xad,0xf2,0x3a,0xce,
    0xe4,0xcd,0xf4,0xee,0x87,0xd8,0xac,0x33,0x36,0xeb,0x39,0xc7,0x3f,0xc5,0x66,0x03,
    0x76,0xeb,0x4d,0xce,0x0d,0x5e,0xce,0x55,0xe8,0x36,0xf2,0x3b,0x59,0x63,0x7d,0xcc,
    0x99,0x3d,0x98,0xf9,0xfa,0x04,0xac,0x0f,0xf7,0xe9,0xcd,0x60,0x7a,0xbf,0xde,0xc2,
    0x99,0x3e,0x92,0x7b,0xce,0x56,0x6c,0xb6,0x10,0x7f,0x13,0x98,0xda,0x6f,0xe3,0xcc,
    0x97,0x33,0x6a,0x9b,0x77,0x47,0x2a,0x0d,0xc7,0xa5,0xb8,0x23,0xe5,0xf0,0x7f,0x41,
    0xa9,0xf7,0x4a,0x13,0x63,0x3b,0xb8,0xc4,0xd8,0xee,0xdd,0x05,0xcb,0x13,0xa3,0x8c,
    0xb9,0x67,0x95,0x35,0xf1,0xca,0x11,0xef,0x2a,0x73,0x47,0xd9,0x61,0xee,0x20,0x12,
    0xff,0x33,0xec,0x94,0x83,0xcf,0xc1,0xb4,0x67,0xbf,0x00,0x93,0xf1,0xed,0x40,0x56,
    0xfe,0x76,0x12,0x4f,0x6a,0xdb,0x69,0x6a,0x8b,0x9a,0xff,0xd5,0x55,0x30,0xb5,0xe5,
    0x52,0x4f,0x45,0xf3,0x5b,0xf1,0xeb,0x42,0x7e,0x2b,0x7e,0x03,0xae,0x7d,0xf6,0x2d,
    0x7d,0x36,0xc8,0xd8,0x7c,0x07,0xae,0x67,0xf0,0x01,0x30,0x7b,0x07,0xff,0x9e,0x58,
    0x07,0x8c,0xdf,0x0f,0xd4,0xa1,0xe7,0xf4,0x41,0xfe,0x07,0x92,0x8f,0xbd,0x8c,0xf3,
    0x20,0x76,0xfa,0x9b,0xe3,0x5f,0xbf,0x03,0x7d,0xd4,0xa8,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)buffer src
// {
//     uint srcData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint outputCount;
//
//     uint componentCount;
//
//     uint srcOffset;
//     uint destOffset;
//
//     uint Ns;
//     uint Bs;
//     uint Ss;
//     uint Es;
//
//     uint Nd;
//     uint Bd;
//     uint Sd;
//     uint Ed;
//
//     uint srcEmulatedAlpha;
//
//     bool isSrcHDR;
//     bool isSrcA2BGR10;
// } params;
//
// uint getSourceComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Ss + component * 4 + params . srcOffset;
// }
//
// uint getDestinationComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Sd + component * 4 + params . destOffset;
// }
//
// uint getShiftBits(uint offset, uint B)
// {
//
//     uint shift =(offset % 4)* 8;
//
//     return shift;
// }
//
//       float loadSourceComponent(uint cd)
// {
//
//     uint vertex = cd / params . Nd;
//     uint component = cd % params . Nd;
//
//     if(component >= params . Ns && component < 3)
//     {
//         return 0;
//     }
//
//     uint offset = getSourceComponentOffset(vertex, component);
//     uint block = srcData[offset / 4];
//
//     uint shiftBits;
//     uint valueBits;
//     uint valueMask;
//
//     if(params . isSrcHDR)
//     {
//         valueBits = component == 3 ? 2 : 10;
//         valueMask = component == 3 ? 0x03 : 0x3FF;
//         if(params . isSrcA2BGR10)
//         {
//             shiftBits = 10 * component;
//         }
//         else
//         {
//
//             shiftBits = component == 3 ? 0 :(valueBits *(2 - component)+ 2);
//         }
//     }
//     else
//     {
//         shiftBits = getShiftBits(offset, 4);
//         valueBits = 4 * 8;
//         valueMask = valueBits == 32 ? - 1 :(1 << valueBits)- 1;
//     }
//
//     uint valueAsUint;
//
//     if(component >= params . Ns && component == 3)
//     {
//         valueAsUint = params . srcEmulatedAlpha;
//     }
//     else
//     {
//         valueAsUint =(block >> shiftBits)& valueMask;
//     }
//
//     float divisor = 1.0f / 65536.0f;
//           float value = int(valueAsUint)* divisor;
//
//     return value;
// }
//
//        float convertComponent(float srcValue)
// {
//
//     return srcValue;
// }
//
// uint makeDestinationComponent(uint cd, float value)
// {
//
//     uint valueAsUint = floatBitsToInt(value);
//
//     return valueAsUint;
// }
//
// void storeDestinationComponents(uint valueAsUint)
// {
//
//     destData[gl_GlobalInvocationID . x + params . destOffset / 4]= valueAsUint;
// }
//
// void main()
// {
//     if(gl_GlobalInvocationID . x >= params . outputCount)
//         return;
//
//     uint valueOut = 0;
//     for(uint i = 0;i < 1;++ i)
//     {
//         uint cd = gl_GlobalInvocationID . x * 1 + i;
//         if(cd >= params . componentCount)
//         {
//             break;
//         }
//
//               float srcValue = loadSourceComponent(cd);
//                float destValue = convertComponent(srcValue);
//         valueOut |= makeDestinationComponent(cd, destValue);
//     }
//
//     storeDestinationComponents(valueOut);
// }
