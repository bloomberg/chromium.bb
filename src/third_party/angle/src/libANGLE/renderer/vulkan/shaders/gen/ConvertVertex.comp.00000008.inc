// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertVertex.comp.00000008.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertVertex_comp_00000008[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x9d,0x98,0x79,0x94,0x8f,0x65,
    0x14,0xc7,0xdf,0x67,0x76,0xfb,0x4c,0x18,0xdb,0x18,0xc6,0x58,0x46,0x64,0x6b,0x42,
    0xb6,0x74,0x24,0x2d,0x0a,0x15,0xc5,0x21,0x91,0x4c,0x2a,0xa5,0x68,0x13,0x85,0x2c,
    0x49,0x8b,0xa2,0x4d,0xbb,0x94,0x6c,0x69,0x51,0xb2,0x94,0x6c,0xe5,0x1c,0xe7,0x48,
    0x9b,0x16,0x39,0x87,0xd0,0x5e,0x5a,0x95,0xbd,0xe7,0xbe,0xef,0xe7,0x36,0xd7,0xd3,
    0xfc,0xd5,0xef,0x9c,0xf7,0xfc,0xde,0xfb,0xbd,0xeb,0xf3,0x7d,0xee,0xb3,0xfc,0x7e,
    0xa9,0x29,0x85,0x99,0x51,0xe4,0xa2,0xf2,0x51,0x56,0xd4,0xd4,0x45,0xf1,0x27,0x27,
    0x4a,0x89,0xe4,0xb5,0x42,0x94,0x11,0x7f,0xf7,0xe8,0x79,0x61,0xcf,0x16,0xa3,0xc7,
    0x0c,0x6b,0x51,0x7c,0x4a,0x2b,0xd1,0x57,0x8e,0x52,0x63,0x3b,0xd1,0x55,0xf1,0x36,
    0xe9,0xfe,0x3b,0xcd,0x3f,0x23,0x87,0x8c,0xb8,0x56,0xf0,0xaf,0xfd,0x93,0xed,0xf1,
    0xb4,0x38,0x56,0x14,0x75,0xc5,0x56,0x9e,0xb3,0xbc,0x75,0xa3,0x24,0x4d,0x54,0xc8,
    0xb7,0x62,0x0e,0x2c,0xcd,0x60,0x29,0x60,0x59,0x06,0x4b,0x05,0xab,0x68,0xb0,0x34,
    0xb0,0x6c,0x83,0xa5,0x83,0x55,0x33,0x58,0x06,0x58,0x4d,0x83,0x65,0x82,0xe5,0x19,
    0x2c,0x0b,0xac,0xbe,0xc1,0xca,0x81,0x35,0x34,0x58,0x79,0xb0,0x22,0x83,0x55,0x00,
    0x6b,0x6e,0xb0,0x8a,0x60,0xad,0x0c,0x56,0x09,0xac,0xd8,0x60,0x95,0xc1,0xda,0x0b,
    0xef,0x7e,0xa4,0xca,0x41,0x0f,0x3f,0xc2,0xcb,0xa9,0x5f,0xf9,0x19,0x16,0xf0,0x28,
    0xf6,0xc3,0xe0,0x47,0xec,0x87,0xfb,0xef,0x06,0xff,0xea,0x12,0xb9,0x00,0x9e,0x45,
    0xde,0x19,0xc4,0xdb,0x55,0x46,0xbc,0x5d,0x26,0xde,0xee,0x20,0xde,0x6e,0xe2,0xa9,
    0xfc,0x35,0x63,0xcf,0x43,0x2e,0x72,0x89,0x5c,0xcb,0x3f,0x55,0xfd,0x28,0x52,0x62,
    0xfb,0xd4,0x38,0x9e,0xbc,0x57,0xf7,0x36,0x19,0x70,0x1c,0xc5,0xdf,0x69,0xf1,0x5c,
    0x64,0x52,0x57,0x81,0xaf,0x29,0x8b,0x77,0xc5,0x73,0xbd,0x77,0x0e,0x3e,0x05,0xde,
    0xfe,0x04,0x7a,0x2c,0x13,0xff,0x5c,0xde,0x73,0xd0,0xd7,0xe0,0x3d,0x97,0x78,0x75,
    0x4c,0xbc,0x5c,0x6c,0xea,0x53,0x8f,0x60,0xf9,0xde,0x5a,0xfb,0xe4,0xff,0x3e,0x52,
    0x47,0x63,0xfa,0x45,0x62,0x75,0x44,0x6e,0x02,0x26,0xe3,0x2e,0x62,0x0c,0x32,0x17,
    0xcd,0x90,0x9b,0x1a,0xff,0x13,0xb1,0xcd,0x30,0xfa,0x96,0xf4,0xb4,0xca,0xc5,0xd4,
    0xdd,0x0c,0x1e,0x3b,0x31,0x97,0x2a,0x77,0xa1,0x8f,0xd5,0xbe,0x7b,0x20,0xf7,0xc2,
    0xbe,0x9a,0x8f,0x72,0x81,0xf1,0xeb,0xcb,0x9c,0x8b,0x2c,0xdc,0x0d,0x60,0x7e,0xea,
    0x7a,0x54,0x7b,0x30,0x9f,0x5e,0xbb,0x9c,0x7a,0xaf,0xa0,0x96,0x61,0x8c,0x57,0xe4,
    0xe1,0xa6,0x3e,0xc9,0x57,0x62,0xe6,0xf9,0x2a,0x74,0x76,0x7c,0x23,0x59,0x13,0x5a,
    0xc7,0x28,0xec,0x55,0x7f,0x33,0xeb,0x4d,0xe5,0xf1,0xa6,0x4e,0x91,0x6f,0xf7,0xcf,
    0xb1,0xd4,0x52,0x79,0x22,0xeb,0x49,0xe3,0xdd,0x65,0xfc,0x45,0x9e,0x15,0xf0,0x37,
    0x8f,0x39,0x91,0xfa,0x5e,0xa0,0x1f,0x8a,0x4c,0xfc,0x85,0x12,0xdf,0x7f,0x54,0x5e,
    0x1c,0xcc,0xdf,0x6a,0xd6,0xb9,0xc6,0xdb,0x1a,0xe8,0x3f,0x62,0x7f,0xaa,0xe1,0xe5,
    0xcf,0xe8,0xcb,0x14,0x78,0xdd,0x69,0x78,0x95,0x35,0xb7,0x93,0x3a,0xbe,0xc2,0x66,
    0x17,0xbc,0x8a,0xbc,0x1b,0x4c,0xe2,0xec,0xc1,0x2f,0x15,0xfb,0xbd,0xe4,0xdc,0x83,
    0xfd,0x5e,0xf6,0x63,0x87,0xfe,0x1b,0xde,0x2d,0xef,0x11,0xeb,0x54,0xeb,0x6e,0xe2,
    0x92,0x3d,0xbb,0xb9,0x97,0x24,0x8e,0xac,0x63,0xc1,0xb6,0x32,0xa6,0xb6,0xbe,0x0b,
    0x53,0xe8,0x9d,0x88,0xdc,0x7f,0x7b,0x24,0x9d,0x9c,0x99,0xb1,0x9c,0xf0,0xa7,0xf2,
    0x81,0x40,0x4e,0x73,0xa5,0xb2,0xac,0xc3,0xaa,0xee,0x78,0x7d,0xb5,0x40,0x5f,0x23,
    0x90,0x6b,0x06,0xf6,0x75,0x02,0x7d,0xdd,0x40,0xdf,0x10,0xf9,0x74,0x5f,0xa5,0x70,
    0xf0,0x0b,0xbc,0x48,0x8f,0x75,0x66,0xdc,0xbf,0x82,0x8b,0x8d,0xac,0xbf,0xdf,0x58,
    0xb3,0x25,0xc6,0xe6,0x77,0xf0,0x97,0xbc,0x8d,0xac,0x99,0x3f,0xf0,0x13,0xfc,0x2f,
    0xcf,0xc4,0x7e,0x38,0x39,0xe8,0xed,0x45,0xf7,0xa7,0x7f,0xf6,0xc3,0x8f,0xbc,0x1f,
    0xf1,0x64,0xcb,0xfb,0xfe,0x78,0x7d,0xa6,0xc6,0x3c,0x8d,0xe2,0xfd,0x00,0xef,0x07,
    0xbc,0xfe,0x20,0x3e,0x07,0x63,0xff,0xb4,0xe8,0x70,0xec,0x9b,0x7c,0x44,0x7f,0x14,
    0xfd,0x51,0x53,0xdb,0x31,0x78,0xd6,0xfa,0x9d,0x4b,0xea,0x97,0xf9,0x55,0x9b,0x14,
    0x97,0xe0,0x2f,0x53,0x7f,0xaa,0x4b,0xfc,0x04,0x97,0x9a,0x45,0x3e,0xe4,0xe5,0xc3,
    0xc4,0x3f,0x64,0x38,0x4b,0x77,0xff,0xe5,0x2c,0xc3,0x25,0xb8,0xe6,0xcc,0x2c,0x23,
    0x67,0x96,0x4b,0xf0,0xc9,0xde,0x46,0xe4,0x72,0x2e,0xf1,0xcb,0x32,0x36,0xe5,0x5d,
    0x52,0xfb,0x04,0x6c,0x2a,0xb8,0xc4,0x4e,0x70,0xe1,0x46,0xfa,0xa5,0x82,0xb1,0xaf,
    0xe8,0x92,0x1e,0xd2,0xbc,0x95,0xc8,0xbb,0xd8,0xd4,0x56,0xd9,0x25,0xb8,0xce,0x55,
    0x15,0x97,0xf8,0x09,0x2e,0x73,0x95,0xe3,0x4a,0xe7,0x4a,0x74,0xd9,0xfe,0x11,0x4c,
    0xc6,0x9d,0xed,0x12,0x9e,0x95,0x87,0x1c,0x93,0xbb,0x3a,0xb9,0xa5,0x2e,0xe9,0x53,
    0x91,0x4f,0xf5,0x39,0xe2,0x73,0xc6,0x25,0xf7,0x8d,0x6a,0xe8,0xa5,0xaf,0x73,0xf1,
    0x15,0x7d,0x2d,0x97,0xf4,0xba,0xe8,0xa4,0x87,0x6b,0x19,0xdf,0xda,0x2e,0x39,0x2b,
    0x6b,0xa2,0x97,0x9e,0xaf,0x6d,0xf2,0xe6,0x99,0xbc,0xd2,0xef,0x79,0x26,0x6e,0xbe,
    0x4b,0xd6,0x88,0xe8,0xa4,0xf7,0xf3,0xe3,0xb8,0x19,0xb1,0x5f,0x3d,0x91,0x59,0x23,
    0x75,0x4d,0xbc,0xfa,0x2e,0x59,0xa7,0x1b,0xe1,0xbc,0xc0,0x25,0x58,0x3d,0x57,0xda,
    0x9b,0x05,0xf0,0x70,0x04,0x1e,0x8e,0x18,0x7e,0x1b,0x04,0x73,0x56,0xe8,0x12,0x6c,
    0xb1,0xe9,0xe7,0x42,0x77,0x7c,0x3f,0x1f,0x36,0xfe,0x8d,0xc8,0x2f,0xb6,0xb2,0x3e,
    0x1b,0xc1,0x85,0xec,0x2d,0x8d,0x5d,0x72,0xd7,0x10,0x5c,0xd6,0x4c,0x7b,0xff,0xb4,
    0xd5,0xde,0x60,0x1d,0xc8,0x59,0xd6,0xce,0xfb,0x66,0x72,0x56,0xea,0x7b,0x79,0x72,
    0x55,0x34,0xb9,0x1a,0x62,0xa3,0xfd,0xd2,0x8c,0xb5,0xdd,0xd4,0xd8,0x34,0x07,0xd7,
    0x3e,0x3d,0x09,0xbf,0xe6,0xc6,0xa6,0x05,0xf1,0x35,0x4e,0x2b,0xe2,0xb4,0x34,0x36,
    0xad,0xc1,0x35,0x4e,0x1b,0xfc,0x5a,0x1b,0xae,0x4e,0x26,0x7e,0x1b,0x13,0xeb,0x14,
    0x62,0x15,0x9b,0x58,0x6d,0xc1,0xd5,0xaf,0x1d,0xbe,0x82,0x1f,0xf5,0x63,0x6c,0x17,
    0xdf,0x15,0x4b,0xb9,0xa9,0x52,0x06,0x37,0x95,0xcc,0x7b,0x65,0xb8,0xc9,0x36,0x7b,
    0x63,0x07,0xf6,0x66,0xcd,0xd9,0x11,0x9f,0xe9,0xc4,0xec,0x0c,0xd6,0xc9,0x8c,0xe9,
    0x34,0xf0,0x2e,0xcc,0x5f,0x87,0x7f,0xb1,0x24,0x46,0x57,0xe2,0x4a,0x8d,0x5d,0x4d,
    0x8d,0x39,0xdc,0xc7,0xe5,0x73,0x82,0xa9,0xab,0x2a,0x75,0x55,0x37,0x75,0x75,0x0b,
    0xce,0x8c,0xb3,0x03,0x79,0x60,0x20,0x0f,0x0a,0xe4,0xc1,0x81,0x3c,0x34,0x90,0xc7,
    0x04,0xf2,0xd8,0x40,0x9e,0x16,0xc8,0xf7,0x05,0xf2,0x9c,0x40,0x7e,0xc2,0xc8,0x72,
    0x7f,0x98,0x1f,0xe8,0x57,0x45,0xc7,0x9f,0x51,0x1b,0x03,0xde,0xcf,0x80,0x07,0xed,
    0x87,0x33,0xe9,0x87,0xee,0xc6,0xa6,0x07,0xf8,0x54,0xe6,0xe1,0x2c,0xfc,0x7a,0x30,
    0x0f,0xdd,0xc0,0xd4,0xfe,0x9c,0x20,0xe6,0xb9,0x65,0xc4,0xec,0x09,0xae,0xf3,0x7d,
    0x1e,0x7e,0x3d,0x89,0x79,0x36,0x98,0xda,0x9f,0xcf,0x5c,0x68,0xcc,0xde,0xc4,0xec,
    0x65,0x6c,0xfa,0x80,0xeb,0xde,0x7b,0x21,0x7e,0x7d,0x8c,0xcd,0x45,0xc4,0xd1,0xb3,
    0xa8,0x1f,0x58,0xdf,0x98,0xbb,0x04,0xbb,0x18,0xdf,0x7e,0x9c,0xaf,0xfd,0xcd,0xf9,
    0x2a,0xba,0x4b,0xfc,0xd3,0x9f,0xde,0xb9,0x84,0x7e,0x1b,0x80,0xdc,0xdf,0xe4,0xba,
    0x94,0x7e,0x92,0xf1,0x0c,0x42,0x56,0xdd,0x65,0xd4,0x21,0xba,0xc1,0xc8,0xba,0x77,
    0x0e,0x61,0xbf,0x19,0x44,0x3f,0x89,0xcd,0x40,0x70,0xf5,0xbf,0x92,0x5e,0xd4,0x39,
    0x19,0x01,0xd6,0x29,0xe6,0x28,0x23,0xbe,0xeb,0x5e,0xcd,0x7d,0xb8,0x04,0xbd,0xfa,
    0x5e,0x83,0x4e,0xe2,0x0e,0x45,0x56,0x5e,0xaf,0x85,0xd7,0x91,0xc6,0xfe,0x3a,0xf0,
    0x45,0xf0,0x73,0x3d,0xd8,0x28,0xf8,0x19,0x6d,0xf8,0x11,0xdd,0x0d,0xfe,0x79,0x0c,
    0x3e,0x6e,0x30,0x71,0x6e,0x64,0xcc,0x0b,0x89,0x73,0x13,0x98,0x70,0xbf,0xc0,0x5b,
    0xc8,0xbd,0xf0,0x16,0xf0,0x62,0xee,0xde,0xe3,0xf0,0xbd,0x15,0x9d,0xd4,0x3c,0x06,
    0x59,0xe3,0xde,0x16,0xc4,0x1d,0x07,0x66,0xe3,0xde,0x01,0x3e,0x9e,0x3b,0xbb,0xc6,
    0x9d,0x80,0x4e,0xe2,0x8e,0x45,0x56,0x2e,0x26,0xc1,0xc5,0x44,0x93,0xeb,0x4e,0x70,
    0xe5,0x62,0x32,0x98,0x72,0x31,0xd5,0x70,0x21,0xba,0x29,0xfe,0x99,0x01,0x17,0x53,
    0x4c,0x9c,0xe9,0xd4,0xac,0x7b,0xdb,0xdd,0xfc,0x56,0x98,0x4e,0x2d,0xd3,0xc0,0xe4,
    0x1c,0x9b,0x8a,0xff,0x0c,0xe3,0x7f,0x4f,0x30,0xe6,0x7b,0xc1,0xfa,0x52,0xc7,0x4c,
    0x53,0x87,0xe8,0xee,0xf7,0xcf,0x03,0xc4,0xb9,0x9f,0x1c,0xf7,0x99,0xbb,0xdf,0x4c,
    0x74,0x0f,0x98,0x1c,0x0f,0xb2,0x5f,0xa9,0x3c,0x9b,0x9c,0x93,0xa8,0xf9,0x21,0x7e,
    0xcf,0xcc,0x36,0xe3,0x78,0x18,0xbf,0x87,0xcc,0xf9,0xf1,0x08,0xf8,0x2c,0x93,0xf7,
    0x91,0x20,0xef,0x4c,0x93,0xe7,0x51,0xf6,0x3d,0xe5,0xe1,0xd1,0x80,0x87,0xa9,0xc8,
    0xa3,0x91,0x1f,0x33,0xbe,0x8f,0xb3,0x2e,0xc4,0x77,0x0e,0xb2,0xce,0xe7,0x93,0x65,
    0x9c,0x9b,0x4f,0x81,0x8b,0xfd,0x13,0xc8,0xba,0x0e,0x9f,0xe6,0x6c,0x9b,0xc3,0x3e,
    0xab,0xf5,0x3c,0x6d,0x62,0x3e,0x53,0x46,0xcc,0x67,0xc1,0x95,0x93,0xb9,0x60,0x5d,
    0x4c,0xff,0xce,0x35,0xf6,0xcf,0xc1,0xb3,0xce,0xe5,0xf3,0x60,0xf3,0x98,0xcb,0x05,
    0x66,0x2e,0x45,0xf7,0x62,0xdc,0x7f,0xc9,0xd8,0x5f,0x24,0xe6,0x7c,0x7e,0x2b,0x0a,
    0x2f,0x0b,0xd0,0x2d,0x32,0x39,0x96,0x90,0x63,0x83,0xcf,0x51,0x14,0xef,0x91,0xc9,
    0x9d,0x69,0x09,0xf3,0x29,0xd8,0x52,0x83,0x6b,0xcc,0xa5,0x41,0xcc,0x05,0xc4,0x2c,
    0x8a,0xf7,0xd0,0xe4,0xbc,0xd1,0xb5,0xf4,0x0a,0x98,0xae,0xa5,0x57,0x82,0x79,0x1a,
    0x6d,0xea,0x79,0x35,0xd8,0xcf,0x5f,0x2b,0x63,0x3f,0x5f,0x06,0xae,0xfb,0xf9,0xeb,
    0xf8,0x2d,0x33,0x36,0x6f,0x04,0xeb,0x60,0x39,0x98,0xdd,0xcf,0xdf,0xc4,0x77,0x39,
    0x7c,0xae,0x34,0x7c,0x8a,0x6e,0x85,0x7f,0xd6,0x50,0xe3,0x0a,0x53,0xd3,0x5b,0xd4,
    0xb4,0xda,0xe4,0x7b,0x1b,0x5c,0xc6,0xb8,0x0a,0x59,0xc6,0xb8,0x12,0xff,0x35,0xc6,
    0xf6,0x1d,0xce,0x7f,0x95,0xd7,0x72,0xbe,0xaf,0xa3,0x2f,0xd6,0x61,0xb3,0xd6,0xd8,
    0xac,0xe7,0x4e,0xf0,0x1e,0x36,0x1b,0xb0,0x5b,0x6f,0x72,0x6e,0x08,0x72,0xae,0x34,
    0xfe,0xef,0x72,0xe6,0x8f,0xe3,0x8e,0xfe,0x1e,0x98,0xf8,0x6e,0x44,0xd6,0xfb,0xfb,
    0x26,0xee,0x03,0x72,0x7e,0x6d,0x0a,0xee,0x4b,0xb5,0xe0,0xa8,0x06,0xf7,0xa5,0x5c,
    0xfe,0xbf,0x94,0x7c,0xb5,0x4d,0x8c,0xcd,0xe0,0x12,0x63,0x73,0x70,0x2f,0xcc,0x27,
    0x46,0x1d,0x73,0xe7,0xca,0x33,0xf1,0xea,0x12,0xaf,0x9e,0xb9,0xaf,0x6c,0x09,0xee,
    0x2f,0xdb,0x82,0xfb,0xca,0xfb,0xc4,0x50,0x7e,0x3e,0x00,0xdb,0x6a,0x7a,0xe0,0x43,
    0xf0,0x51,0x66,0xff,0xff,0x18,0xbc,0x84,0xff,0x44,0xb4,0x67,0x3f,0x41,0x27,0xfc,
    0x6c,0x41,0xd6,0xb1,0x7d,0x4a,0x8d,0xbd,0x7d,0x5c,0xf9,0xef,0xe4,0x73,0xb0,0x01,
    0xf1,0x7f,0x2e,0xc9,0x1e,0xf1,0x05,0xff,0x6d,0x74,0x40,0xaf,0x75,0x6e,0x67,0x2c,
    0x1b,0xa8,0xf3,0x4b,0x6c,0xb7,0x93,0x6b,0x1b,0x98,0xda,0xef,0x60,0xac,0xc2,0xe3,
    0x0e,0xc3,0x63,0x8a,0xf9,0xff,0xb3,0xbe,0xe1,0xb1,0x00,0xee,0x0a,0xcd,0x6f,0xe5,
    0x6f,0xcb,0xf8,0x7f,0xe1,0x3b,0x70,0xed,0xe9,0xef,0xe9,0xe9,0xf1,0xc6,0xe6,0x07,
    0x70,0xbd,0x4b,0xfc,0x08,0xd6,0xc9,0xec,0xe1,0x3f,0x11,0xeb,0x47,0xe3,0xf7,0x33,
    0x75,0xe8,0x7d,0x63,0x1f,0xff,0x13,0x95,0x60,0x2f,0xe3,0xdc,0x87,0x9d,0xfe,0x9e,
    0xfa,0x07,0xfa,0x7b,0x1e,0x9d,0xfc,0x17,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)buffer src
// {
//     uint srcData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint outputCount;
//
//     uint componentCount;
//
//     uint srcOffset;
//     uint destOffset;
//
//     uint Ns;
//     uint Bs;
//     uint Ss;
//     uint Es;
//
//     uint Nd;
//     uint Bd;
//     uint Sd;
//     uint Ed;
//
//     uint srcEmulatedAlpha;
//
//     bool isSrcHDR;
//     bool isSrcA2BGR10;
// } params;
//
// uint getSourceComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Ss + component * params . Bs + params . srcOffset;
// }
//
// uint getDestinationComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Sd + component * params . Bd + params . destOffset;
// }
//
// uint getShiftBits(uint offset, uint B)
// {
//
//     uint shift =(offset % 4)* 8;
//
//     return shift;
// }
//
//       float loadSourceComponent(uint cd)
// {
//
//     uint vertex = cd / params . Nd;
//     uint component = cd % params . Nd;
//
//     if(component >= params . Ns && component < 3)
//     {
//         return 0;
//     }
//
//     uint offset = getSourceComponentOffset(vertex, component);
//     uint block = srcData[offset / 4];
//
//     uint shiftBits;
//     uint valueBits;
//     uint valueMask;
//
//     if(params . isSrcHDR)
//     {
//         valueBits = component == 3 ? 2 : 10;
//         valueMask = component == 3 ? 0x03 : 0x3FF;
//         if(params . isSrcA2BGR10)
//         {
//             shiftBits = 10 * component;
//         }
//         else
//         {
//
//             shiftBits = component == 3 ? 0 :(valueBits *(2 - component)+ 2);
//         }
//     }
//     else
//     {
//         shiftBits = getShiftBits(offset, params . Bs);
//         valueBits = params . Bs * 8;
//         valueMask = valueBits == 32 ? - 1 :(1 << valueBits)- 1;
//     }
//
//     uint valueAsUint;
//
//     if(component >= params . Ns && component == 3)
//     {
//         valueAsUint = params . srcEmulatedAlpha;
//     }
//     else
//     {
//         valueAsUint =(block >> shiftBits)& valueMask;
//     }
//
//           float value = uintBitsToFloat(valueAsUint);
//
//     return value;
// }
//
//        float convertComponent(float srcValue)
// {
//
//     return srcValue;
// }
//
// uint makeDestinationComponent(uint cd, float value)
// {
//
//     uint shift =((cd & 1)== 0)? 0 : 16;
//     uint valueAsUint = packHalf2x16(vec2(value, 0.0))<< shift;
//
//     return valueAsUint;
// }
//
// void storeDestinationComponents(uint valueAsUint)
// {
//
//     destData[gl_GlobalInvocationID . x + params . destOffset / 4]= valueAsUint;
// }
//
// void main()
// {
//     if(gl_GlobalInvocationID . x >= params . outputCount)
//         return;
//
//     uint valueOut = 0;
//     for(uint i = 0;i < params . Ed;++ i)
//     {
//         uint cd = gl_GlobalInvocationID . x * params . Ed + i;
//         if(cd >= params . componentCount)
//         {
//             break;
//         }
//
//               float srcValue = loadSourceComponent(cd);
//                float destValue = convertComponent(srcValue);
//         valueOut |= makeDestinationComponent(cd, destValue);
//     }
//
//     storeDestinationComponents(valueOut);
// }
