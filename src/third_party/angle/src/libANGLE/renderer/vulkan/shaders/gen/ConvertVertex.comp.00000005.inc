// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertVertex.comp.00000005.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertVertex_comp_00000005[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x9d,0x98,0x79,0x94,0x8f,0x65,
    0x14,0xc7,0x7f,0xef,0xcc,0x98,0x19,0x63,0x8c,0x19,0xcb,0x8c,0x65,0x6c,0x51,0x8d,
    0xc8,0xd6,0x58,0xb2,0xa5,0x23,0xa1,0x94,0x24,0xc2,0x21,0x61,0x32,0xa9,0x48,0x68,
    0x13,0x85,0x18,0xa4,0x2c,0x21,0x4b,0x4a,0x49,0xd9,0x93,0x52,0xb2,0x94,0x6c,0x51,
    0x72,0x8e,0x73,0x54,0xce,0x21,0x4b,0x9b,0xd2,0xea,0x24,0xdb,0x44,0x7a,0xee,0xfb,
    0x7e,0x2e,0xd7,0x73,0xe6,0xaf,0x7e,0xe7,0xbc,0xe7,0xf7,0xde,0xef,0xbd,0xf7,0x7b,
    0xef,0x73,0x9f,0xfb,0x2c,0xbf,0x5f,0x7c,0x5c,0x8d,0xa4,0x58,0x2c,0x88,0xa5,0xc4,
    0x92,0x63,0x55,0x83,0x58,0xf8,0xc9,0x88,0xc5,0xc5,0xe4,0xb5,0x44,0x2c,0x31,0xfc,
    0x6e,0xd7,0xb1,0x4b,0xc7,0xba,0xc3,0x86,0xe7,0xd5,0xcd,0x6d,0x54,0x5f,0xf4,0x69,
    0xb1,0xf8,0xd0,0x4e,0x74,0xa5,0x9c,0x4d,0x31,0xf7,0x9d,0xe0,0x9e,0x41,0x7d,0x07,
    0x0e,0x16,0xfc,0x88,0x7b,0xd2,0x1d,0x9e,0x10,0x72,0xc5,0x62,0xad,0xb1,0x95,0xa7,
    0xbd,0xb3,0xbe,0x32,0x0a,0x13,0xab,0xc1,0xb7,0x62,0x01,0x58,0x82,0xc1,0xe2,0xc0,
    0x92,0x0d,0x16,0x0f,0x96,0x6a,0xb0,0x04,0xb0,0x74,0x83,0x15,0x03,0x2b,0x6b,0xb0,
    0x44,0xb0,0xf2,0x06,0x4b,0x02,0xcb,0x36,0x58,0x32,0x58,0x35,0x83,0x15,0x07,0xab,
    0x69,0xb0,0x14,0xb0,0x1c,0x83,0x95,0x00,0xab,0x63,0xb0,0x54,0xb0,0xfa,0x06,0x2b,
    0x09,0x96,0x6b,0xb0,0x34,0xb0,0xa6,0x52,0x77,0x37,0x52,0xad,0x41,0x3b,0x37,0xc2,
    0xfe,0xe4,0xaf,0xf5,0xc9,0xf3,0xea,0x28,0xf6,0x79,0xd4,0x47,0xec,0x07,0xb8,0xef,
    0x2b,0x2e,0xea,0x22,0xb9,0x3a,0x75,0x16,0x79,0xbf,0xc7,0x77,0xa0,0x08,0xbe,0x03,
    0x86,0xef,0xa0,0xc7,0x77,0x10,0x3e,0x95,0x8f,0x30,0xf6,0x6c,0xe4,0x2a,0x41,0x24,
    0x57,0x70,0x4f,0x19,0x37,0x8a,0xb8,0xd0,0x3e,0x3e,0xe4,0x93,0xf7,0x72,0xce,0x26,
    0x91,0x1a,0xc7,0xc2,0xef,0x84,0x70,0x2e,0x92,0xc8,0xab,0xba,0xcb,0x29,0x99,0x77,
    0xc5,0x33,0x9d,0x77,0x06,0x3e,0xd5,0x9d,0x7d,0x69,0x7a,0x2c,0x09,0xff,0x4c,0xde,
    0x33,0xd0,0x67,0xf1,0x9e,0x09,0x5f,0x25,0xc3,0x97,0x89,0x4d,0x35,0xf2,0x11,0xac,
    0x8a,0xb3,0xd6,0x3e,0xf9,0xbf,0x8f,0xe4,0x71,0x15,0xfd,0x22,0x5c,0xcd,0x91,0xaf,
    0x06,0x93,0x71,0xe7,0x30,0x06,0x99,0x8b,0xda,0xc8,0xb5,0x8c,0xff,0x35,0xd8,0x26,
    0x1a,0x7d,0x3d,0x7a,0x5a,0xe5,0x5c,0xf2,0xae,0x4d,0x1d,0x5b,0x30,0x97,0x2a,0xb7,
    0xa2,0x8f,0xd5,0xbe,0xad,0x27,0x77,0xc2,0xbe,0xac,0x63,0xb9,0xd3,0xf8,0x75,0x65,
    0xce,0x45,0x96,0xda,0xf5,0x64,0x7e,0x2a,0x3b,0x54,0x7b,0xb0,0x0a,0xbd,0xd6,0x9f,
    0x7c,0xef,0x23,0x97,0x3c,0xc6,0x2b,0xf2,0x00,0x93,0x9f,0xc4,0xcb,0x37,0xf3,0xfc,
    0x00,0x3a,0x3b,0xbe,0x41,0xac,0x09,0xcd,0x63,0x08,0xf6,0xaa,0x7f,0x9c,0xf5,0xa6,
    0xf2,0x28,0x93,0xa7,0xc8,0x4f,0xbb,0xe7,0x42,0xfc,0x25,0x79,0x0c,0xeb,0x49,0xf9,
    0x26,0x1a,0x7f,0x91,0x67,0x78,0xf5,0x5b,0xc4,0x9c,0x48,0x7e,0x6f,0xd1,0x0f,0x39,
    0x86,0x7f,0x99,0xf0,0xbb,0x8f,0xca,0x2b,0xbc,0xf9,0xdb,0xc8,0x3a,0x97,0x3a,0xed,
    0x37,0x75,0x92,0x35,0xb4,0x1f,0xde,0x6f,0x88,0x79,0x80,0x3a,0x89,0x7c,0x10,0x2c,
    0xcb,0xc9,0x87,0xf0,0x8b,0xc7,0xfe,0x30,0x31,0x0e,0x61,0x7f,0x98,0xfd,0x35,0x40,
    0xff,0x2d,0xef,0x89,0x66,0x1c,0x85,0x26,0x2f,0x91,0x2b,0x07,0xd1,0x1e,0x5c,0xc7,
    0x49,0xc2,0x23,0xeb,0x52,0xb0,0x42,0x6c,0x1b,0xbb,0xae,0x8a,0xa3,0x17,0x62,0xc4,
    0x3e,0xe3,0x90,0x62,0xc4,0x94,0x3a,0xfc,0x45,0x3d,0x54,0x3e,0xe1,0xc9,0xe7,0x8c,
    0x2c,0xeb,0xaa,0x78,0x70,0xb9,0x3e,0x25,0xb8,0x5c,0x5f,0xd2,0x93,0xd3,0x3c,0xfb,
    0x0c,0x4f,0x5f,0xc6,0xd3,0x57,0x44,0xbe,0xd1,0x65,0x29,0x35,0xf8,0x85,0xba,0x48,
    0xcf,0xb4,0x64,0xdc,0xbf,0x82,0x8b,0x8d,0xac,0xa7,0xdf,0x58,0x83,0xf9,0xc6,0xe6,
    0x77,0xf0,0xb7,0x9d,0x8d,0xac,0x81,0x3f,0xf0,0x13,0xfc,0xb4,0xab,0xc4,0x71,0x6a,
    0x52,0xe8,0xec,0x45,0xf7,0xa7,0x7b,0x8e,0x53,0x1f,0x79,0x3f,0xef,0x2a,0x2d,0xef,
    0xc7,0xc3,0xf5,0x16,0x1f,0xd6,0x69,0x08,0xef,0x27,0x78,0x3f,0xeb,0xf4,0x7f,0xe3,
    0x23,0xdf,0xa7,0x1c,0xd7,0xa9,0x90,0x3f,0xfa,0x88,0xfe,0x0c,0xfa,0x33,0x26,0xb7,
    0xb3,0xd4,0xf9,0x1d,0x72,0xfb,0x07,0xac,0x90,0x7c,0x44,0x3e,0x19,0xf2,0x45,0xbe,
    0x27,0x4d,0x3d,0xce,0x17,0x51,0x8f,0x7f,0xc1,0xc7,0x39,0x1b,0x91,0x2f,0x80,0x15,
    0x1a,0x1b,0x69,0x1c,0x89,0x39,0x1a,0x9b,0x20,0x88,0xec,0x04,0x97,0x31,0x9d,0x03,
    0x53,0xfb,0xb8,0x20,0x9a,0x7b,0xad,0x71,0x7c,0x10,0xd5,0x78,0x85,0xe1,0x4c,0x08,
    0x22,0x5c,0x6b,0x5c,0x2c,0x88,0xfc,0x04,0x97,0x1a,0x27,0x05,0x97,0x6a,0x2c,0xba,
    0x44,0x99,0xdb,0x20,0x1a,0x93,0xbc,0x4b,0x7d,0x74,0x8c,0x49,0x26,0x76,0x09,0x62,
    0x4b,0x5e,0xd2,0x5f,0x22,0x5f,0xef,0x62,0xc8,0x9e,0x95,0x1a,0x44,0xe7,0x7e,0x0a,
    0x79,0x4b,0x3f,0xa6,0xe2,0x2b,0xfa,0x52,0x41,0xd4,0xa3,0xa2,0x93,0xde,0x2b,0x65,
    0x7c,0xd3,0x83,0xe8,0xcc,0x4a,0x43,0x2f,0xbd,0x9a,0x6e,0xe2,0x96,0x36,0x71,0xa5,
    0x4f,0x4b,0x1b,0xde,0xb2,0x41,0xd4,0xdb,0xa2,0x93,0x9e,0x2d,0x1b,0xf2,0x26,0x86,
    0x7e,0xe5,0x02,0xd9,0x0f,0xa2,0xde,0x2e,0x63,0xf8,0x32,0x83,0x68,0x7d,0x6d,0xa7,
    0xe6,0x59,0x41,0x84,0x95,0x0b,0x2e,0xf5,0x54,0x16,0x75,0x38,0x4d,0x1d,0x4e,0x9b,
    0xfa,0x96,0xf7,0xe6,0xac,0x42,0x10,0x61,0x2b,0x4c,0x1f,0x56,0x08,0x2e,0xef,0xc3,
    0x53,0xc6,0xbf,0x12,0xf1,0xc5,0x56,0xd6,0x55,0x25,0x6a,0x21,0x7b,0x42,0x76,0x10,
    0x9d,0xf9,0x82,0x4b,0xaf,0x37,0x75,0x4f,0x63,0xe2,0x94,0xa0,0x7f,0xe5,0x4c,0x69,
    0x22,0xf3,0xc8,0x99,0xa5,0xef,0x29,0xc4,0x4a,0x35,0xb1,0x6a,0x62,0xa3,0xfd,0x52,
    0x9b,0x35,0x59,0xcb,0xd8,0xd4,0x01,0xd7,0x3e,0xbd,0x16,0xbf,0x3a,0xc6,0xa6,0x2e,
    0xfc,0xca,0x53,0x1f,0x9e,0x7a,0xc6,0xa6,0x01,0xb8,0xf2,0x34,0xc4,0xaf,0x81,0xa9,
    0xd5,0x75,0xf0,0x37,0x34,0x5c,0x8d,0xe0,0xca,0x35,0x5c,0x8d,0xc1,0xd5,0xaf,0x09,
    0xbe,0x8d,0xc3,0x35,0x14,0x17,0xca,0xb6,0x36,0xa5,0x8a,0xa8,0x4d,0x49,0xf3,0x9e,
    0x46,0x6d,0xd2,0xcd,0x9e,0xd6,0x8c,0x3d,0x54,0x63,0x36,0xc7,0x67,0x12,0x9c,0x2d,
    0xc1,0x5a,0x98,0x31,0xdd,0x00,0xde,0x8a,0xf9,0x6b,0x76,0x11,0x8b,0x38,0x5a,0xc3,
    0x2b,0x39,0xb6,0x36,0x39,0x66,0x70,0x2f,0x96,0x4f,0x69,0x93,0x57,0x19,0xf2,0x2a,
    0x67,0xf2,0x6a,0xe3,0xed,0xf5,0x1d,0x3c,0xb9,0x97,0x27,0xf7,0xf6,0xe4,0x3e,0x9e,
    0xdc,0xcf,0x93,0x87,0x7b,0xf2,0x08,0x4f,0x9e,0xe0,0xc9,0x53,0x3c,0x79,0x9e,0x27,
    0xcf,0x37,0xb2,0x9c,0xe3,0x8b,0x3d,0xfd,0x06,0xef,0xac,0xda,0xee,0xc9,0x3b,0xbd,
    0x79,0xb8,0x89,0xba,0x68,0x7f,0xdc,0x4c,0x7f,0xb4,0x35,0x36,0xed,0xc0,0x0b,0x98,
    0x97,0xf6,0xf8,0xb5,0x63,0x5e,0xda,0x80,0xa9,0xfd,0x2d,0x1e,0xe7,0xad,0x45,0x70,
    0x76,0x04,0xd7,0xf9,0xbf,0x0d,0xbf,0x8e,0x70,0x76,0x00,0x53,0xfb,0xdb,0x99,0x1b,
    0xe5,0xbc,0x03,0xce,0x4e,0xc6,0xa6,0x33,0xb8,0xee,0xc5,0x5d,0xf0,0xeb,0x6c,0x6c,
    0xee,0x82,0x47,0xcf,0x9d,0x6e,0x60,0x5d,0xc3,0x5a,0x46,0xd8,0xdd,0xf8,0x76,0xe3,
    0x9c,0xec,0x61,0xce,0x49,0xd1,0x75,0x77,0x4f,0x0f,0x7a,0xa9,0x3b,0xfd,0xd7,0x13,
    0xb9,0x87,0x89,0x75,0x0f,0xfd,0x25,0xe3,0xe9,0x8d,0xac,0xba,0x7b,0xc9,0x43,0x74,
    0x7d,0x90,0x75,0x2f,0xed,0xcb,0xfe,0xd3,0x9b,0xfe,0x12,0x9b,0x5e,0xe0,0xea,0x7f,
    0x3f,0xbd,0xa9,0x73,0x32,0x10,0xac,0x45,0x58,0xa3,0xc4,0xf0,0x0e,0xfa,0x20,0xf7,
    0xd4,0x7c,0xf4,0xea,0xfb,0x10,0x3a,0xe1,0xed,0x87,0xac,0x75,0x1d,0x4c,0x5d,0x07,
    0x19,0xfb,0x87,0xc1,0x97,0x53,0x9f,0x47,0xc0,0x86,0x50,0x9f,0x61,0xa6,0x3e,0xa2,
    0x1b,0xea,0x9e,0xb9,0xd4,0x63,0xa8,0xe1,0x79,0x94,0x31,0x2f,0x83,0xe7,0x31,0x30,
    0xa9,0xfd,0x52,0x67,0x21,0xf7,0xcc,0x27,0xc0,0x73,0xb9,0x13,0x8f,0xc4,0xf7,0x49,
    0x74,0x92,0xf3,0x70,0x64,0xe5,0x7d,0xca,0xe3,0x1d,0x09,0x66,0x79,0x9f,0x01,0x1f,
    0xc5,0x5d,0x5a,0x79,0x47,0xa3,0x13,0xde,0x11,0xc8,0x5a,0x8b,0xb1,0xd4,0x62,0x8c,
    0x89,0xf5,0x2c,0xb8,0xd6,0x62,0x1c,0x98,0xd6,0xa2,0xc0,0xd4,0x42,0x74,0xe3,0xdd,
    0x33,0x99,0x5a,0x8c,0x37,0x3c,0x93,0xc8,0x59,0xf7,0xba,0xe7,0xb8,0xc3,0x4f,0x22,
    0x97,0x09,0x60,0x72,0xae,0x15,0xe0,0x3f,0xd9,0xf8,0x3f,0xef,0x8d,0xf9,0x05,0xb0,
    0xae,0xe4,0x31,0xcd,0xe4,0x21,0xba,0xa9,0xee,0x99,0x0e,0xcf,0x54,0x62,0x4c,0x31,
    0x77,0xb8,0x69,0xe8,0xa6,0x9b,0x18,0x2f,0xb2,0x7f,0xa9,0x3c,0x93,0x98,0x63,0xc9,
    0x79,0x16,0xbf,0x33,0x66,0x9a,0x71,0xbc,0x84,0xdf,0x2c,0x73,0x9e,0xcc,0x06,0x9f,
    0x61,0xe2,0xce,0xf6,0xe2,0x4e,0x33,0x71,0xe6,0xb0,0x0f,0x6a,0x1d,0xe6,0x78,0x75,
    0x28,0x40,0x1e,0x86,0x3c,0xd7,0xf8,0xbe,0xcc,0xba,0x10,0xdf,0x79,0xc8,0x3a,0x9f,
    0xaf,0x14,0x71,0x8e,0xbe,0x0a,0x2e,0xf6,0xf3,0x91,0x75,0x1d,0x2e,0xe0,0xac,0x9b,
    0xc7,0xbe,0xab,0xf9,0x2c,0x30,0x9c,0xaf,0x15,0xc1,0xf9,0x3a,0xb8,0xd6,0x64,0x21,
    0x58,0x2b,0xd3,0xbf,0x0b,0x8d,0xfd,0x1b,0xd4,0x59,0xe7,0xf2,0x4d,0xb0,0x45,0xcc,
    0xe5,0x52,0x33,0x97,0xa2,0x5b,0x12,0xf6,0x5f,0x34,0xf6,0x25,0x70,0x2e,0xe6,0x37,
    0x9c,0xd4,0x65,0x29,0xba,0xe5,0x26,0xc6,0x4a,0x62,0x6c,0x73,0x31,0x72,0xc2,0x3d,
    0x32,0xba,0x43,0xad,0x64,0x3e,0x05,0x5b,0x65,0x70,0xe5,0x5c,0xe5,0x71,0x2e,0x85,
    0x33,0x27,0xdc,0x43,0xa3,0xf3,0x47,0xd7,0xd2,0x6a,0x30,0x5d,0x4b,0xab,0xbd,0x79,
    0x1a,0x66,0xf2,0x79,0xd7,0xdb,0xcf,0xdf,0x2b,0x62,0x3f,0x5f,0x03,0xae,0xfb,0xf9,
    0xfb,0xf8,0xad,0x31,0x36,0x1f,0x78,0xeb,0x60,0x2d,0x98,0xdd,0xcf,0x3f,0xc4,0x77,
    0x2d,0xf5,0x5c,0x6f,0xea,0x29,0xba,0x75,0xee,0xd9,0x44,0x8e,0xeb,0x4c,0x4e,0x1f,
    0x91,0xd3,0x46,0x13,0xef,0x63,0x70,0x19,0xe3,0x06,0x64,0x19,0xe3,0x7a,0xfc,0x37,
    0x19,0xdb,0x4f,0xb8,0x0f,0xa8,0xbc,0x99,0xf3,0x7e,0x0b,0x7d,0xb1,0x05,0x9b,0xcd,
    0xc6,0x66,0x2b,0x77,0x84,0x1d,0xd8,0x6c,0xc3,0x6e,0xab,0x89,0xb9,0xcd,0x8b,0xb9,
    0xde,0xf8,0x7f,0x8a,0xff,0x10,0xee,0xec,0x3b,0xc0,0xc4,0x77,0x3b,0xb2,0xda,0x7e,
    0xc6,0x7d,0x41,0x6d,0x3f,0x07,0xd3,0xfb,0xfe,0x2e,0xee,0x0f,0x13,0xb9,0x53,0x7d,
    0x81,0xcd,0x2e,0xf8,0x76,0x82,0xa9,0xfd,0x6e,0xee,0x17,0x72,0x1e,0xee,0xf6,0xee,
    0x63,0x15,0xa8,0x79,0x16,0xf7,0xb1,0x4c,0xfe,0xa7,0x94,0xfc,0x2b,0x1a,0x8e,0x3d,
    0xe0,0xc2,0xb1,0xc7,0xbb,0x77,0x56,0x81,0xa3,0x92,0xb9,0xd3,0x65,0x1b,0xbe,0xca,
    0xf0,0x55,0x35,0xf7,0xa1,0xbd,0xe6,0xbe,0x23,0xfc,0x5f,0x62,0x37,0x92,0x1e,0xfe,
    0x0a,0x4c,0x7b,0xf8,0x6b,0x30,0x19,0xdf,0x5e,0x64,0xad,0xd7,0x3e,0xf8,0x24,0xb7,
    0x7d,0x26,0xb7,0x38,0xf3,0xdf,0x61,0x35,0x93,0x5b,0x75,0xf2,0xa9,0x61,0x7e,0xbb,
    0x7e,0x57,0xc4,0x6f,0xd7,0xef,0xc1,0xb5,0xef,0x7e,0xa0,0xef,0x46,0x19,0x9b,0x1f,
    0xc1,0xf5,0xbc,0x3f,0x0a,0xd6,0xc2,0xec,0xb3,0x3f,0xc1,0x75,0xd4,0xf8,0xfd,0x4c,
    0x1e,0x7a,0x27,0x38,0xc6,0x7f,0x32,0xf9,0xd8,0xcb,0x38,0x8f,0x61,0xa7,0xbf,0x81,
    0xfe,0x03,0x96,0x3c,0x99,0xa0,0x38,0x17,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)buffer src
// {
//     uint srcData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint outputCount;
//
//     uint componentCount;
//
//     uint srcOffset;
//     uint destOffset;
//
//     uint Ns;
//     uint Bs;
//     uint Ss;
//     uint Es;
//
//     uint Nd;
//     uint Bd;
//     uint Sd;
//     uint Ed;
//
//     uint srcEmulatedAlpha;
//
//     bool isSrcHDR;
//     bool isSrcA2BGR10;
// } params;
//
// uint getSourceComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Ss + component * params . Bs + params . srcOffset;
// }
//
// uint getDestinationComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Sd + component * 4 + params . destOffset;
// }
//
// uint getShiftBits(uint offset, uint B)
// {
//
//     uint shift =(offset % 4)* 8;
//
//     return shift;
// }
//
//       float loadSourceComponent(uint cd)
// {
//
//     uint vertex = cd / params . Nd;
//     uint component = cd % params . Nd;
//
//     if(component >= params . Ns && component < 3)
//     {
//         return 0;
//     }
//
//     uint offset = getSourceComponentOffset(vertex, component);
//     uint block = srcData[offset / 4];
//
//     uint shiftBits;
//     uint valueBits;
//     uint valueMask;
//
//     if(params . isSrcHDR)
//     {
//         valueBits = component == 3 ? 2 : 10;
//         valueMask = component == 3 ? 0x03 : 0x3FF;
//         if(params . isSrcA2BGR10)
//         {
//             shiftBits = 10 * component;
//         }
//         else
//         {
//
//             shiftBits = component == 3 ? 0 :(valueBits *(2 - component)+ 2);
//         }
//     }
//     else
//     {
//         shiftBits = getShiftBits(offset, params . Bs);
//         valueBits = params . Bs * 8;
//         valueMask = valueBits == 32 ? - 1 :(1 << valueBits)- 1;
//     }
//
//     uint valueAsUint;
//
//     if(component >= params . Ns && component == 3)
//     {
//         valueAsUint = params . srcEmulatedAlpha;
//     }
//     else
//     {
//         valueAsUint =(block >> shiftBits)& valueMask;
//     }
//
//     float positiveMax = valueMask;
//
//           float value = valueAsUint / positiveMax;
//
//     return value;
// }
//
//        float convertComponent(float srcValue)
// {
//
//     return srcValue;
// }
//
// uint makeDestinationComponent(uint cd, float value)
// {
//
//     uint valueAsUint = floatBitsToInt(value);
//
//     return valueAsUint;
// }
//
// void storeDestinationComponents(uint valueAsUint)
// {
//
//     destData[gl_GlobalInvocationID . x + params . destOffset / 4]= valueAsUint;
// }
//
// void main()
// {
//     if(gl_GlobalInvocationID . x >= params . outputCount)
//         return;
//
//     uint valueOut = 0;
//     for(uint i = 0;i < 1;++ i)
//     {
//         uint cd = gl_GlobalInvocationID . x * 1 + i;
//         if(cd >= params . componentCount)
//         {
//             break;
//         }
//
//               float srcValue = loadSourceComponent(cd);
//                float destValue = convertComponent(srcValue);
//         valueOut |= makeDestinationComponent(cd, destValue);
//     }
//
//     storeDestinationComponents(valueOut);
// }
