// GENERATED FILE - DO NOT EDIT.
// Generated by generate_entry_points.py using data from gl.xml and wgl.xml.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// validationGL45_autogen.h:
//   Validation functions for the OpenGL 4.5 entry points.

#ifndef LIBANGLE_VALIDATION_GL45_AUTOGEN_H_
#define LIBANGLE_VALIDATION_GL45_AUTOGEN_H_

#include "common/PackedEnums.h"

namespace gl
{
class Context;

bool ValidateBindTextureUnit(Context *context, GLuint unit, TextureID texturePacked);
bool ValidateBlitNamedFramebuffer(Context *context,
                                  GLuint readFramebuffer,
                                  GLuint drawFramebuffer,
                                  GLint srcX0,
                                  GLint srcY0,
                                  GLint srcX1,
                                  GLint srcY1,
                                  GLint dstX0,
                                  GLint dstY0,
                                  GLint dstX1,
                                  GLint dstY1,
                                  GLbitfield mask,
                                  GLenum filter);
bool ValidateCheckNamedFramebufferStatus(Context *context,
                                         FramebufferID framebufferPacked,
                                         GLenum target);
bool ValidateClearNamedBufferData(Context *context,
                                  BufferID bufferPacked,
                                  GLenum internalformat,
                                  GLenum format,
                                  GLenum type,
                                  const void *data);
bool ValidateClearNamedBufferSubData(Context *context,
                                     BufferID bufferPacked,
                                     GLenum internalformat,
                                     GLintptr offset,
                                     GLsizeiptr size,
                                     GLenum format,
                                     GLenum type,
                                     const void *data);
bool ValidateClearNamedFramebufferfi(Context *context,
                                     FramebufferID framebufferPacked,
                                     GLenum buffer,
                                     GLint drawbuffer,
                                     GLfloat depth,
                                     GLint stencil);
bool ValidateClearNamedFramebufferfv(Context *context,
                                     FramebufferID framebufferPacked,
                                     GLenum buffer,
                                     GLint drawbuffer,
                                     const GLfloat *value);
bool ValidateClearNamedFramebufferiv(Context *context,
                                     FramebufferID framebufferPacked,
                                     GLenum buffer,
                                     GLint drawbuffer,
                                     const GLint *value);
bool ValidateClearNamedFramebufferuiv(Context *context,
                                      FramebufferID framebufferPacked,
                                      GLenum buffer,
                                      GLint drawbuffer,
                                      const GLuint *value);
bool ValidateClipControl(Context *context, GLenum origin, GLenum depth);
bool ValidateCompressedTextureSubImage1D(Context *context,
                                         TextureID texturePacked,
                                         GLint level,
                                         GLint xoffset,
                                         GLsizei width,
                                         GLenum format,
                                         GLsizei imageSize,
                                         const void *data);
bool ValidateCompressedTextureSubImage2D(Context *context,
                                         TextureID texturePacked,
                                         GLint level,
                                         GLint xoffset,
                                         GLint yoffset,
                                         GLsizei width,
                                         GLsizei height,
                                         GLenum format,
                                         GLsizei imageSize,
                                         const void *data);
bool ValidateCompressedTextureSubImage3D(Context *context,
                                         TextureID texturePacked,
                                         GLint level,
                                         GLint xoffset,
                                         GLint yoffset,
                                         GLint zoffset,
                                         GLsizei width,
                                         GLsizei height,
                                         GLsizei depth,
                                         GLenum format,
                                         GLsizei imageSize,
                                         const void *data);
bool ValidateCopyNamedBufferSubData(Context *context,
                                    GLuint readBuffer,
                                    GLuint writeBuffer,
                                    GLintptr readOffset,
                                    GLintptr writeOffset,
                                    GLsizeiptr size);
bool ValidateCopyTextureSubImage1D(Context *context,
                                   TextureID texturePacked,
                                   GLint level,
                                   GLint xoffset,
                                   GLint x,
                                   GLint y,
                                   GLsizei width);
bool ValidateCopyTextureSubImage2D(Context *context,
                                   TextureID texturePacked,
                                   GLint level,
                                   GLint xoffset,
                                   GLint yoffset,
                                   GLint x,
                                   GLint y,
                                   GLsizei width,
                                   GLsizei height);
bool ValidateCopyTextureSubImage3D(Context *context,
                                   TextureID texturePacked,
                                   GLint level,
                                   GLint xoffset,
                                   GLint yoffset,
                                   GLint zoffset,
                                   GLint x,
                                   GLint y,
                                   GLsizei width,
                                   GLsizei height);
bool ValidateCreateBuffers(Context *context, GLsizei n, BufferID *buffersPacked);
bool ValidateCreateFramebuffers(Context *context, GLsizei n, GLuint *framebuffers);
bool ValidateCreateProgramPipelines(Context *context, GLsizei n, GLuint *pipelines);
bool ValidateCreateQueries(Context *context, GLenum target, GLsizei n, GLuint *ids);
bool ValidateCreateRenderbuffers(Context *context, GLsizei n, RenderbufferID *renderbuffersPacked);
bool ValidateCreateSamplers(Context *context, GLsizei n, GLuint *samplers);
bool ValidateCreateTextures(Context *context, GLenum target, GLsizei n, GLuint *textures);
bool ValidateCreateTransformFeedbacks(Context *context, GLsizei n, GLuint *ids);
bool ValidateCreateVertexArrays(Context *context, GLsizei n, VertexArrayID *arraysPacked);
bool ValidateDisableVertexArrayAttrib(Context *context, VertexArrayID vaobjPacked, GLuint index);
bool ValidateEnableVertexArrayAttrib(Context *context, VertexArrayID vaobjPacked, GLuint index);
bool ValidateFlushMappedNamedBufferRange(Context *context,
                                         BufferID bufferPacked,
                                         GLintptr offset,
                                         GLsizeiptr length);
bool ValidateGenerateTextureMipmap(Context *context, TextureID texturePacked);
bool ValidateGetCompressedTextureImage(Context *context,
                                       TextureID texturePacked,
                                       GLint level,
                                       GLsizei bufSize,
                                       void *pixels);
bool ValidateGetCompressedTextureSubImage(Context *context,
                                          TextureID texturePacked,
                                          GLint level,
                                          GLint xoffset,
                                          GLint yoffset,
                                          GLint zoffset,
                                          GLsizei width,
                                          GLsizei height,
                                          GLsizei depth,
                                          GLsizei bufSize,
                                          void *pixels);
bool ValidateGetNamedBufferParameteri64v(Context *context,
                                         BufferID bufferPacked,
                                         GLenum pname,
                                         GLint64 *params);
bool ValidateGetNamedBufferParameteriv(Context *context,
                                       BufferID bufferPacked,
                                       GLenum pname,
                                       GLint *params);
bool ValidateGetNamedBufferPointerv(Context *context,
                                    BufferID bufferPacked,
                                    GLenum pname,
                                    void **params);
bool ValidateGetNamedBufferSubData(Context *context,
                                   BufferID bufferPacked,
                                   GLintptr offset,
                                   GLsizeiptr size,
                                   void *data);
bool ValidateGetNamedFramebufferAttachmentParameteriv(Context *context,
                                                      FramebufferID framebufferPacked,
                                                      GLenum attachment,
                                                      GLenum pname,
                                                      GLint *params);
bool ValidateGetNamedFramebufferParameteriv(Context *context,
                                            FramebufferID framebufferPacked,
                                            GLenum pname,
                                            GLint *param);
bool ValidateGetNamedRenderbufferParameteriv(Context *context,
                                             RenderbufferID renderbufferPacked,
                                             GLenum pname,
                                             GLint *params);
bool ValidateGetQueryBufferObjecti64v(Context *context,
                                      GLuint id,
                                      BufferID bufferPacked,
                                      GLenum pname,
                                      GLintptr offset);
bool ValidateGetQueryBufferObjectiv(Context *context,
                                    GLuint id,
                                    BufferID bufferPacked,
                                    GLenum pname,
                                    GLintptr offset);
bool ValidateGetQueryBufferObjectui64v(Context *context,
                                       GLuint id,
                                       BufferID bufferPacked,
                                       GLenum pname,
                                       GLintptr offset);
bool ValidateGetQueryBufferObjectuiv(Context *context,
                                     GLuint id,
                                     BufferID bufferPacked,
                                     GLenum pname,
                                     GLintptr offset);
bool ValidateGetTextureImage(Context *context,
                             TextureID texturePacked,
                             GLint level,
                             GLenum format,
                             GLenum type,
                             GLsizei bufSize,
                             void *pixels);
bool ValidateGetTextureLevelParameterfv(Context *context,
                                        TextureID texturePacked,
                                        GLint level,
                                        GLenum pname,
                                        GLfloat *params);
bool ValidateGetTextureLevelParameteriv(Context *context,
                                        TextureID texturePacked,
                                        GLint level,
                                        GLenum pname,
                                        GLint *params);
bool ValidateGetTextureParameterIiv(Context *context,
                                    TextureID texturePacked,
                                    GLenum pname,
                                    GLint *params);
bool ValidateGetTextureParameterIuiv(Context *context,
                                     TextureID texturePacked,
                                     GLenum pname,
                                     GLuint *params);
bool ValidateGetTextureParameterfv(Context *context,
                                   TextureID texturePacked,
                                   GLenum pname,
                                   GLfloat *params);
bool ValidateGetTextureParameteriv(Context *context,
                                   TextureID texturePacked,
                                   GLenum pname,
                                   GLint *params);
bool ValidateGetTextureSubImage(Context *context,
                                TextureID texturePacked,
                                GLint level,
                                GLint xoffset,
                                GLint yoffset,
                                GLint zoffset,
                                GLsizei width,
                                GLsizei height,
                                GLsizei depth,
                                GLenum format,
                                GLenum type,
                                GLsizei bufSize,
                                void *pixels);
bool ValidateGetTransformFeedbacki64_v(Context *context,
                                       GLuint xfb,
                                       GLenum pname,
                                       GLuint index,
                                       GLint64 *param);
bool ValidateGetTransformFeedbacki_v(Context *context,
                                     GLuint xfb,
                                     GLenum pname,
                                     GLuint index,
                                     GLint *param);
bool ValidateGetTransformFeedbackiv(Context *context, GLuint xfb, GLenum pname, GLint *param);
bool ValidateGetVertexArrayIndexed64iv(Context *context,
                                       VertexArrayID vaobjPacked,
                                       GLuint index,
                                       GLenum pname,
                                       GLint64 *param);
bool ValidateGetVertexArrayIndexediv(Context *context,
                                     VertexArrayID vaobjPacked,
                                     GLuint index,
                                     GLenum pname,
                                     GLint *param);
bool ValidateGetVertexArrayiv(Context *context,
                              VertexArrayID vaobjPacked,
                              GLenum pname,
                              GLint *param);
bool ValidateGetnColorTable(Context *context,
                            GLenum target,
                            GLenum format,
                            GLenum type,
                            GLsizei bufSize,
                            void *table);
bool ValidateGetnCompressedTexImage(Context *context,
                                    GLenum target,
                                    GLint lod,
                                    GLsizei bufSize,
                                    void *pixels);
bool ValidateGetnConvolutionFilter(Context *context,
                                   GLenum target,
                                   GLenum format,
                                   GLenum type,
                                   GLsizei bufSize,
                                   void *image);
bool ValidateGetnHistogram(Context *context,
                           GLenum target,
                           GLboolean reset,
                           GLenum format,
                           GLenum type,
                           GLsizei bufSize,
                           void *values);
bool ValidateGetnMapdv(Context *context, GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
bool ValidateGetnMapfv(Context *context, GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
bool ValidateGetnMapiv(Context *context, GLenum target, GLenum query, GLsizei bufSize, GLint *v);
bool ValidateGetnMinmax(Context *context,
                        GLenum target,
                        GLboolean reset,
                        GLenum format,
                        GLenum type,
                        GLsizei bufSize,
                        void *values);
bool ValidateGetnPixelMapfv(Context *context, GLenum map, GLsizei bufSize, GLfloat *values);
bool ValidateGetnPixelMapuiv(Context *context, GLenum map, GLsizei bufSize, GLuint *values);
bool ValidateGetnPixelMapusv(Context *context, GLenum map, GLsizei bufSize, GLushort *values);
bool ValidateGetnPolygonStipple(Context *context, GLsizei bufSize, GLubyte *pattern);
bool ValidateGetnSeparableFilter(Context *context,
                                 GLenum target,
                                 GLenum format,
                                 GLenum type,
                                 GLsizei rowBufSize,
                                 void *row,
                                 GLsizei columnBufSize,
                                 void *column,
                                 void *span);
bool ValidateGetnTexImage(Context *context,
                          GLenum target,
                          GLint level,
                          GLenum format,
                          GLenum type,
                          GLsizei bufSize,
                          void *pixels);
bool ValidateGetnUniformdv(Context *context,
                           ShaderProgramID programPacked,
                           GLint location,
                           GLsizei bufSize,
                           GLdouble *params);
bool ValidateInvalidateNamedFramebufferData(Context *context,
                                            FramebufferID framebufferPacked,
                                            GLsizei numAttachments,
                                            const GLenum *attachments);
bool ValidateInvalidateNamedFramebufferSubData(Context *context,
                                               FramebufferID framebufferPacked,
                                               GLsizei numAttachments,
                                               const GLenum *attachments,
                                               GLint x,
                                               GLint y,
                                               GLsizei width,
                                               GLsizei height);
bool ValidateMapNamedBuffer(Context *context, BufferID bufferPacked, GLenum access);
bool ValidateMapNamedBufferRange(Context *context,
                                 BufferID bufferPacked,
                                 GLintptr offset,
                                 GLsizeiptr length,
                                 GLbitfield access);
bool ValidateNamedBufferData(Context *context,
                             BufferID bufferPacked,
                             GLsizeiptr size,
                             const void *data,
                             GLenum usage);
bool ValidateNamedBufferStorage(Context *context,
                                BufferID bufferPacked,
                                GLsizeiptr size,
                                const void *data,
                                GLbitfield flags);
bool ValidateNamedBufferSubData(Context *context,
                                BufferID bufferPacked,
                                GLintptr offset,
                                GLsizeiptr size,
                                const void *data);
bool ValidateNamedFramebufferDrawBuffer(Context *context,
                                        FramebufferID framebufferPacked,
                                        GLenum buf);
bool ValidateNamedFramebufferDrawBuffers(Context *context,
                                         FramebufferID framebufferPacked,
                                         GLsizei n,
                                         const GLenum *bufs);
bool ValidateNamedFramebufferParameteri(Context *context,
                                        FramebufferID framebufferPacked,
                                        GLenum pname,
                                        GLint param);
bool ValidateNamedFramebufferReadBuffer(Context *context,
                                        FramebufferID framebufferPacked,
                                        GLenum src);
bool ValidateNamedFramebufferRenderbuffer(Context *context,
                                          FramebufferID framebufferPacked,
                                          GLenum attachment,
                                          GLenum renderbuffertarget,
                                          RenderbufferID renderbufferPacked);
bool ValidateNamedFramebufferTexture(Context *context,
                                     FramebufferID framebufferPacked,
                                     GLenum attachment,
                                     TextureID texturePacked,
                                     GLint level);
bool ValidateNamedFramebufferTextureLayer(Context *context,
                                          FramebufferID framebufferPacked,
                                          GLenum attachment,
                                          TextureID texturePacked,
                                          GLint level,
                                          GLint layer);
bool ValidateNamedRenderbufferStorage(Context *context,
                                      RenderbufferID renderbufferPacked,
                                      GLenum internalformat,
                                      GLsizei width,
                                      GLsizei height);
bool ValidateNamedRenderbufferStorageMultisample(Context *context,
                                                 RenderbufferID renderbufferPacked,
                                                 GLsizei samples,
                                                 GLenum internalformat,
                                                 GLsizei width,
                                                 GLsizei height);
bool ValidateTextureBarrier(Context *context);
bool ValidateTextureBuffer(Context *context,
                           TextureID texturePacked,
                           GLenum internalformat,
                           BufferID bufferPacked);
bool ValidateTextureBufferRange(Context *context,
                                TextureID texturePacked,
                                GLenum internalformat,
                                BufferID bufferPacked,
                                GLintptr offset,
                                GLsizeiptr size);
bool ValidateTextureParameterIiv(Context *context,
                                 TextureID texturePacked,
                                 GLenum pname,
                                 const GLint *params);
bool ValidateTextureParameterIuiv(Context *context,
                                  TextureID texturePacked,
                                  GLenum pname,
                                  const GLuint *params);
bool ValidateTextureParameterf(Context *context,
                               TextureID texturePacked,
                               GLenum pname,
                               GLfloat param);
bool ValidateTextureParameterfv(Context *context,
                                TextureID texturePacked,
                                GLenum pname,
                                const GLfloat *param);
bool ValidateTextureParameteri(Context *context,
                               TextureID texturePacked,
                               GLenum pname,
                               GLint param);
bool ValidateTextureParameteriv(Context *context,
                                TextureID texturePacked,
                                GLenum pname,
                                const GLint *param);
bool ValidateTextureStorage1D(Context *context,
                              TextureID texturePacked,
                              GLsizei levels,
                              GLenum internalformat,
                              GLsizei width);
bool ValidateTextureStorage2D(Context *context,
                              TextureID texturePacked,
                              GLsizei levels,
                              GLenum internalformat,
                              GLsizei width,
                              GLsizei height);
bool ValidateTextureStorage2DMultisample(Context *context,
                                         TextureID texturePacked,
                                         GLsizei samples,
                                         GLenum internalformat,
                                         GLsizei width,
                                         GLsizei height,
                                         GLboolean fixedsamplelocations);
bool ValidateTextureStorage3D(Context *context,
                              TextureID texturePacked,
                              GLsizei levels,
                              GLenum internalformat,
                              GLsizei width,
                              GLsizei height,
                              GLsizei depth);
bool ValidateTextureStorage3DMultisample(Context *context,
                                         TextureID texturePacked,
                                         GLsizei samples,
                                         GLenum internalformat,
                                         GLsizei width,
                                         GLsizei height,
                                         GLsizei depth,
                                         GLboolean fixedsamplelocations);
bool ValidateTextureSubImage1D(Context *context,
                               TextureID texturePacked,
                               GLint level,
                               GLint xoffset,
                               GLsizei width,
                               GLenum format,
                               GLenum type,
                               const void *pixels);
bool ValidateTextureSubImage2D(Context *context,
                               TextureID texturePacked,
                               GLint level,
                               GLint xoffset,
                               GLint yoffset,
                               GLsizei width,
                               GLsizei height,
                               GLenum format,
                               GLenum type,
                               const void *pixels);
bool ValidateTextureSubImage3D(Context *context,
                               TextureID texturePacked,
                               GLint level,
                               GLint xoffset,
                               GLint yoffset,
                               GLint zoffset,
                               GLsizei width,
                               GLsizei height,
                               GLsizei depth,
                               GLenum format,
                               GLenum type,
                               const void *pixels);
bool ValidateTransformFeedbackBufferBase(Context *context,
                                         GLuint xfb,
                                         GLuint index,
                                         BufferID bufferPacked);
bool ValidateTransformFeedbackBufferRange(Context *context,
                                          GLuint xfb,
                                          GLuint index,
                                          BufferID bufferPacked,
                                          GLintptr offset,
                                          GLsizeiptr size);
bool ValidateUnmapNamedBuffer(Context *context, BufferID bufferPacked);
bool ValidateVertexArrayAttribBinding(Context *context,
                                      VertexArrayID vaobjPacked,
                                      GLuint attribindex,
                                      GLuint bindingindex);
bool ValidateVertexArrayAttribFormat(Context *context,
                                     VertexArrayID vaobjPacked,
                                     GLuint attribindex,
                                     GLint size,
                                     GLenum type,
                                     GLboolean normalized,
                                     GLuint relativeoffset);
bool ValidateVertexArrayAttribIFormat(Context *context,
                                      VertexArrayID vaobjPacked,
                                      GLuint attribindex,
                                      GLint size,
                                      GLenum type,
                                      GLuint relativeoffset);
bool ValidateVertexArrayAttribLFormat(Context *context,
                                      VertexArrayID vaobjPacked,
                                      GLuint attribindex,
                                      GLint size,
                                      GLenum type,
                                      GLuint relativeoffset);
bool ValidateVertexArrayBindingDivisor(Context *context,
                                       VertexArrayID vaobjPacked,
                                       GLuint bindingindex,
                                       GLuint divisor);
bool ValidateVertexArrayElementBuffer(Context *context,
                                      VertexArrayID vaobjPacked,
                                      BufferID bufferPacked);
bool ValidateVertexArrayVertexBuffer(Context *context,
                                     VertexArrayID vaobjPacked,
                                     GLuint bindingindex,
                                     BufferID bufferPacked,
                                     GLintptr offset,
                                     GLsizei stride);
bool ValidateVertexArrayVertexBuffers(Context *context,
                                      VertexArrayID vaobjPacked,
                                      GLuint first,
                                      GLsizei count,
                                      const BufferID *buffersPacked,
                                      const GLintptr *offsets,
                                      const GLsizei *strides);
}  // namespace gl

#endif  // LIBANGLE_VALIDATION_GL45_AUTOGEN_H_
