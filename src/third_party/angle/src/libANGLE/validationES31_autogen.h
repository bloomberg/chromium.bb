// GENERATED FILE - DO NOT EDIT.
// Generated by generate_entry_points.py using data from gl.xml and gl_angle_ext.xml.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// validationES31_autogen.h:
//   Validation functions for the OpenGL ES 3.1 entry points.

#ifndef LIBANGLE_VALIDATION_ES31_AUTOGEN_H_
#define LIBANGLE_VALIDATION_ES31_AUTOGEN_H_

#include "common/PackedEnums.h"

namespace gl
{
class Context;

bool ValidateActiveShaderProgram(Context *context,
                                 ProgramPipelineID pipelinePacked,
                                 ShaderProgramID programPacked);
bool ValidateBindImageTexture(Context *context,
                              GLuint unit,
                              TextureID texturePacked,
                              GLint level,
                              GLboolean layered,
                              GLint layer,
                              GLenum access,
                              GLenum format);
bool ValidateBindProgramPipeline(Context *context, ProgramPipelineID pipelinePacked);
bool ValidateBindVertexBuffer(Context *context,
                              GLuint bindingindex,
                              BufferID bufferPacked,
                              GLintptr offset,
                              GLsizei stride);
bool ValidateCreateShaderProgramv(Context *context,
                                  ShaderType typePacked,
                                  GLsizei count,
                                  const GLchar *const *strings);
bool ValidateDeleteProgramPipelines(Context *context,
                                    GLsizei n,
                                    const ProgramPipelineID *pipelinesPacked);
bool ValidateDispatchCompute(Context *context,
                             GLuint num_groups_x,
                             GLuint num_groups_y,
                             GLuint num_groups_z);
bool ValidateDispatchComputeIndirect(Context *context, GLintptr indirect);
bool ValidateDrawArraysIndirect(Context *context, PrimitiveMode modePacked, const void *indirect);
bool ValidateDrawElementsIndirect(Context *context,
                                  PrimitiveMode modePacked,
                                  DrawElementsType typePacked,
                                  const void *indirect);
bool ValidateFramebufferParameteri(Context *context, GLenum target, GLenum pname, GLint param);
bool ValidateGenProgramPipelines(Context *context, GLsizei n, ProgramPipelineID *pipelinesPacked);
bool ValidateGetBooleani_v(Context *context, GLenum target, GLuint index, GLboolean *data);
bool ValidateGetFramebufferParameteriv(Context *context,
                                       GLenum target,
                                       GLenum pname,
                                       GLint *params);
bool ValidateGetMultisamplefv(Context *context, GLenum pname, GLuint index, GLfloat *val);
bool ValidateGetProgramInterfaceiv(Context *context,
                                   ShaderProgramID programPacked,
                                   GLenum programInterface,
                                   GLenum pname,
                                   GLint *params);
bool ValidateGetProgramPipelineInfoLog(Context *context,
                                       ProgramPipelineID pipelinePacked,
                                       GLsizei bufSize,
                                       GLsizei *length,
                                       GLchar *infoLog);
bool ValidateGetProgramPipelineiv(Context *context,
                                  ProgramPipelineID pipelinePacked,
                                  GLenum pname,
                                  GLint *params);
bool ValidateGetProgramResourceIndex(Context *context,
                                     ShaderProgramID programPacked,
                                     GLenum programInterface,
                                     const GLchar *name);
bool ValidateGetProgramResourceLocation(Context *context,
                                        ShaderProgramID programPacked,
                                        GLenum programInterface,
                                        const GLchar *name);
bool ValidateGetProgramResourceName(Context *context,
                                    ShaderProgramID programPacked,
                                    GLenum programInterface,
                                    GLuint index,
                                    GLsizei bufSize,
                                    GLsizei *length,
                                    GLchar *name);
bool ValidateGetProgramResourceiv(Context *context,
                                  ShaderProgramID programPacked,
                                  GLenum programInterface,
                                  GLuint index,
                                  GLsizei propCount,
                                  const GLenum *props,
                                  GLsizei bufSize,
                                  GLsizei *length,
                                  GLint *params);
bool ValidateGetTexLevelParameterfv(Context *context,
                                    TextureTarget targetPacked,
                                    GLint level,
                                    GLenum pname,
                                    GLfloat *params);
bool ValidateGetTexLevelParameteriv(Context *context,
                                    TextureTarget targetPacked,
                                    GLint level,
                                    GLenum pname,
                                    GLint *params);
bool ValidateIsProgramPipeline(Context *context, ProgramPipelineID pipelinePacked);
bool ValidateMemoryBarrier(Context *context, GLbitfield barriers);
bool ValidateMemoryBarrierByRegion(Context *context, GLbitfield barriers);
bool ValidateProgramUniform1f(Context *context,
                              ShaderProgramID programPacked,
                              GLint location,
                              GLfloat v0);
bool ValidateProgramUniform1fv(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLsizei count,
                               const GLfloat *value);
bool ValidateProgramUniform1i(Context *context,
                              ShaderProgramID programPacked,
                              GLint location,
                              GLint v0);
bool ValidateProgramUniform1iv(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLsizei count,
                               const GLint *value);
bool ValidateProgramUniform1ui(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLuint v0);
bool ValidateProgramUniform1uiv(Context *context,
                                ShaderProgramID programPacked,
                                GLint location,
                                GLsizei count,
                                const GLuint *value);
bool ValidateProgramUniform2f(Context *context,
                              ShaderProgramID programPacked,
                              GLint location,
                              GLfloat v0,
                              GLfloat v1);
bool ValidateProgramUniform2fv(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLsizei count,
                               const GLfloat *value);
bool ValidateProgramUniform2i(Context *context,
                              ShaderProgramID programPacked,
                              GLint location,
                              GLint v0,
                              GLint v1);
bool ValidateProgramUniform2iv(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLsizei count,
                               const GLint *value);
bool ValidateProgramUniform2ui(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLuint v0,
                               GLuint v1);
bool ValidateProgramUniform2uiv(Context *context,
                                ShaderProgramID programPacked,
                                GLint location,
                                GLsizei count,
                                const GLuint *value);
bool ValidateProgramUniform3f(Context *context,
                              ShaderProgramID programPacked,
                              GLint location,
                              GLfloat v0,
                              GLfloat v1,
                              GLfloat v2);
bool ValidateProgramUniform3fv(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLsizei count,
                               const GLfloat *value);
bool ValidateProgramUniform3i(Context *context,
                              ShaderProgramID programPacked,
                              GLint location,
                              GLint v0,
                              GLint v1,
                              GLint v2);
bool ValidateProgramUniform3iv(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLsizei count,
                               const GLint *value);
bool ValidateProgramUniform3ui(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLuint v0,
                               GLuint v1,
                               GLuint v2);
bool ValidateProgramUniform3uiv(Context *context,
                                ShaderProgramID programPacked,
                                GLint location,
                                GLsizei count,
                                const GLuint *value);
bool ValidateProgramUniform4f(Context *context,
                              ShaderProgramID programPacked,
                              GLint location,
                              GLfloat v0,
                              GLfloat v1,
                              GLfloat v2,
                              GLfloat v3);
bool ValidateProgramUniform4fv(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLsizei count,
                               const GLfloat *value);
bool ValidateProgramUniform4i(Context *context,
                              ShaderProgramID programPacked,
                              GLint location,
                              GLint v0,
                              GLint v1,
                              GLint v2,
                              GLint v3);
bool ValidateProgramUniform4iv(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLsizei count,
                               const GLint *value);
bool ValidateProgramUniform4ui(Context *context,
                               ShaderProgramID programPacked,
                               GLint location,
                               GLuint v0,
                               GLuint v1,
                               GLuint v2,
                               GLuint v3);
bool ValidateProgramUniform4uiv(Context *context,
                                ShaderProgramID programPacked,
                                GLint location,
                                GLsizei count,
                                const GLuint *value);
bool ValidateProgramUniformMatrix2fv(Context *context,
                                     ShaderProgramID programPacked,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value);
bool ValidateProgramUniformMatrix2x3fv(Context *context,
                                       ShaderProgramID programPacked,
                                       GLint location,
                                       GLsizei count,
                                       GLboolean transpose,
                                       const GLfloat *value);
bool ValidateProgramUniformMatrix2x4fv(Context *context,
                                       ShaderProgramID programPacked,
                                       GLint location,
                                       GLsizei count,
                                       GLboolean transpose,
                                       const GLfloat *value);
bool ValidateProgramUniformMatrix3fv(Context *context,
                                     ShaderProgramID programPacked,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value);
bool ValidateProgramUniformMatrix3x2fv(Context *context,
                                       ShaderProgramID programPacked,
                                       GLint location,
                                       GLsizei count,
                                       GLboolean transpose,
                                       const GLfloat *value);
bool ValidateProgramUniformMatrix3x4fv(Context *context,
                                       ShaderProgramID programPacked,
                                       GLint location,
                                       GLsizei count,
                                       GLboolean transpose,
                                       const GLfloat *value);
bool ValidateProgramUniformMatrix4fv(Context *context,
                                     ShaderProgramID programPacked,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value);
bool ValidateProgramUniformMatrix4x2fv(Context *context,
                                       ShaderProgramID programPacked,
                                       GLint location,
                                       GLsizei count,
                                       GLboolean transpose,
                                       const GLfloat *value);
bool ValidateProgramUniformMatrix4x3fv(Context *context,
                                       ShaderProgramID programPacked,
                                       GLint location,
                                       GLsizei count,
                                       GLboolean transpose,
                                       const GLfloat *value);
bool ValidateSampleMaski(Context *context, GLuint maskNumber, GLbitfield mask);
bool ValidateTexStorage2DMultisample(Context *context,
                                     TextureType targetPacked,
                                     GLsizei samples,
                                     GLenum internalformat,
                                     GLsizei width,
                                     GLsizei height,
                                     GLboolean fixedsamplelocations);
bool ValidateUseProgramStages(Context *context,
                              ProgramPipelineID pipelinePacked,
                              GLbitfield stages,
                              ShaderProgramID programPacked);
bool ValidateValidateProgramPipeline(Context *context, ProgramPipelineID pipelinePacked);
bool ValidateVertexAttribBinding(Context *context, GLuint attribindex, GLuint bindingindex);
bool ValidateVertexAttribFormat(Context *context,
                                GLuint attribindex,
                                GLint size,
                                VertexAttribType typePacked,
                                GLboolean normalized,
                                GLuint relativeoffset);
bool ValidateVertexAttribIFormat(Context *context,
                                 GLuint attribindex,
                                 GLint size,
                                 VertexAttribType typePacked,
                                 GLuint relativeoffset);
bool ValidateVertexBindingDivisor(Context *context, GLuint bindingindex, GLuint divisor);
}  // namespace gl

#endif  // LIBANGLE_VALIDATION_ES31_AUTOGEN_H_
