//
// Copyright 2016 Google Inc.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
//

#ifdef __cplusplus
extern "C" {
#endif

#include "hs_cuda.h"

#ifdef __cplusplus
}
#endif

#include "hs_cuda_config.h"

#include "../hs_cuda_macros.h"

//
//
//

HS_OFFSET_BS_KERNEL_PROTO(1, 0)
{
  HS_OFFSET_SLAB_GLOBAL_PREAMBLE();
  HS_KEY_TYPE r1 = HS_SLAB_GLOBAL_LOAD(vin, 0);
  HS_KEY_TYPE r2 = HS_SLAB_GLOBAL_LOAD(vin, 1);
  HS_KEY_TYPE r3 = HS_SLAB_GLOBAL_LOAD(vin, 2);
  HS_KEY_TYPE r4 = HS_SLAB_GLOBAL_LOAD(vin, 3);
  HS_KEY_TYPE r5 = HS_SLAB_GLOBAL_LOAD(vin, 4);
  HS_KEY_TYPE r6 = HS_SLAB_GLOBAL_LOAD(vin, 5);
  HS_KEY_TYPE r7 = HS_SLAB_GLOBAL_LOAD(vin, 6);
  HS_KEY_TYPE r8 = HS_SLAB_GLOBAL_LOAD(vin, 7);
  HS_KEY_TYPE r9 = HS_SLAB_GLOBAL_LOAD(vin, 8);
  HS_KEY_TYPE r10 = HS_SLAB_GLOBAL_LOAD(vin, 9);
  HS_KEY_TYPE r11 = HS_SLAB_GLOBAL_LOAD(vin, 10);
  HS_KEY_TYPE r12 = HS_SLAB_GLOBAL_LOAD(vin, 11);
  HS_KEY_TYPE r13 = HS_SLAB_GLOBAL_LOAD(vin, 12);
  HS_KEY_TYPE r14 = HS_SLAB_GLOBAL_LOAD(vin, 13);
  HS_KEY_TYPE r15 = HS_SLAB_GLOBAL_LOAD(vin, 14);
  HS_KEY_TYPE r16 = HS_SLAB_GLOBAL_LOAD(vin, 15);
  HS_KEY_TYPE r17 = HS_SLAB_GLOBAL_LOAD(vin, 16);
  HS_KEY_TYPE r18 = HS_SLAB_GLOBAL_LOAD(vin, 17);
  HS_KEY_TYPE r19 = HS_SLAB_GLOBAL_LOAD(vin, 18);
  HS_KEY_TYPE r20 = HS_SLAB_GLOBAL_LOAD(vin, 19);
  HS_KEY_TYPE r21 = HS_SLAB_GLOBAL_LOAD(vin, 20);
  HS_KEY_TYPE r22 = HS_SLAB_GLOBAL_LOAD(vin, 21);
  HS_KEY_TYPE r23 = HS_SLAB_GLOBAL_LOAD(vin, 22);
  HS_KEY_TYPE r24 = HS_SLAB_GLOBAL_LOAD(vin, 23);
  HS_KEY_TYPE r25 = HS_SLAB_GLOBAL_LOAD(vin, 24);
  HS_KEY_TYPE r26 = HS_SLAB_GLOBAL_LOAD(vin, 25);
  HS_KEY_TYPE r27 = HS_SLAB_GLOBAL_LOAD(vin, 26);
  HS_KEY_TYPE r28 = HS_SLAB_GLOBAL_LOAD(vin, 27);
  HS_KEY_TYPE r29 = HS_SLAB_GLOBAL_LOAD(vin, 28);
  HS_KEY_TYPE r30 = HS_SLAB_GLOBAL_LOAD(vin, 29);
  HS_KEY_TYPE r31 = HS_SLAB_GLOBAL_LOAD(vin, 30);
  HS_KEY_TYPE r32 = HS_SLAB_GLOBAL_LOAD(vin, 31);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r9, r17);
  HS_CMP_XCHG(r10, r18);
  HS_CMP_XCHG(r11, r19);
  HS_CMP_XCHG(r12, r20);
  HS_CMP_XCHG(r13, r21);
  HS_CMP_XCHG(r14, r22);
  HS_CMP_XCHG(r15, r23);
  HS_CMP_XCHG(r16, r24);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r5, r17);
  HS_CMP_XCHG(r6, r18);
  HS_CMP_XCHG(r7, r19);
  HS_CMP_XCHG(r8, r20);
  HS_CMP_XCHG(r13, r25);
  HS_CMP_XCHG(r14, r26);
  HS_CMP_XCHG(r15, r27);
  HS_CMP_XCHG(r16, r28);
  HS_CMP_XCHG(r5, r9);
  HS_CMP_XCHG(r6, r10);
  HS_CMP_XCHG(r7, r11);
  HS_CMP_XCHG(r8, r12);
  HS_CMP_XCHG(r13, r17);
  HS_CMP_XCHG(r14, r18);
  HS_CMP_XCHG(r15, r19);
  HS_CMP_XCHG(r16, r20);
  HS_CMP_XCHG(r21, r25);
  HS_CMP_XCHG(r22, r26);
  HS_CMP_XCHG(r23, r27);
  HS_CMP_XCHG(r24, r28);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r3, r17);
  HS_CMP_XCHG(r4, r18);
  HS_CMP_XCHG(r7, r21);
  HS_CMP_XCHG(r8, r22);
  HS_CMP_XCHG(r11, r25);
  HS_CMP_XCHG(r12, r26);
  HS_CMP_XCHG(r15, r29);
  HS_CMP_XCHG(r16, r30);
  HS_CMP_XCHG(r3, r9);
  HS_CMP_XCHG(r4, r10);
  HS_CMP_XCHG(r7, r13);
  HS_CMP_XCHG(r8, r14);
  HS_CMP_XCHG(r11, r17);
  HS_CMP_XCHG(r12, r18);
  HS_CMP_XCHG(r15, r21);
  HS_CMP_XCHG(r16, r22);
  HS_CMP_XCHG(r19, r25);
  HS_CMP_XCHG(r20, r26);
  HS_CMP_XCHG(r23, r29);
  HS_CMP_XCHG(r24, r30);
  HS_CMP_XCHG(r3, r5);
  HS_CMP_XCHG(r4, r6);
  HS_CMP_XCHG(r7, r9);
  HS_CMP_XCHG(r8, r10);
  HS_CMP_XCHG(r11, r13);
  HS_CMP_XCHG(r12, r14);
  HS_CMP_XCHG(r15, r17);
  HS_CMP_XCHG(r16, r18);
  HS_CMP_XCHG(r19, r21);
  HS_CMP_XCHG(r20, r22);
  HS_CMP_XCHG(r23, r25);
  HS_CMP_XCHG(r24, r26);
  HS_CMP_XCHG(r27, r29);
  HS_CMP_XCHG(r28, r30);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r2, r17);
  HS_CMP_XCHG(r4, r19);
  HS_CMP_XCHG(r6, r21);
  HS_CMP_XCHG(r8, r23);
  HS_CMP_XCHG(r10, r25);
  HS_CMP_XCHG(r12, r27);
  HS_CMP_XCHG(r14, r29);
  HS_CMP_XCHG(r16, r31);
  HS_CMP_XCHG(r2, r9);
  HS_CMP_XCHG(r4, r11);
  HS_CMP_XCHG(r6, r13);
  HS_CMP_XCHG(r8, r15);
  HS_CMP_XCHG(r10, r17);
  HS_CMP_XCHG(r12, r19);
  HS_CMP_XCHG(r14, r21);
  HS_CMP_XCHG(r16, r23);
  HS_CMP_XCHG(r18, r25);
  HS_CMP_XCHG(r20, r27);
  HS_CMP_XCHG(r22, r29);
  HS_CMP_XCHG(r24, r31);
  HS_CMP_XCHG(r2, r5);
  HS_CMP_XCHG(r4, r7);
  HS_CMP_XCHG(r6, r9);
  HS_CMP_XCHG(r8, r11);
  HS_CMP_XCHG(r10, r13);
  HS_CMP_XCHG(r12, r15);
  HS_CMP_XCHG(r14, r17);
  HS_CMP_XCHG(r16, r19);
  HS_CMP_XCHG(r18, r21);
  HS_CMP_XCHG(r20, r23);
  HS_CMP_XCHG(r22, r25);
  HS_CMP_XCHG(r24, r27);
  HS_CMP_XCHG(r26, r29);
  HS_CMP_XCHG(r28, r31);
  HS_CMP_XCHG(r2, r3);
  HS_CMP_XCHG(r4, r5);
  HS_CMP_XCHG(r6, r7);
  HS_CMP_XCHG(r8, r9);
  HS_CMP_XCHG(r10, r11);
  HS_CMP_XCHG(r12, r13);
  HS_CMP_XCHG(r14, r15);
  HS_CMP_XCHG(r16, r17);
  HS_CMP_XCHG(r18, r19);
  HS_CMP_XCHG(r20, r21);
  HS_CMP_XCHG(r22, r23);
  HS_CMP_XCHG(r24, r25);
  HS_CMP_XCHG(r26, r27);
  HS_CMP_XCHG(r28, r29);
  HS_CMP_XCHG(r30, r31);
  {
    HS_SLAB_FLIP_PREAMBLE(1);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(3);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(7);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(15);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(31);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(8);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_OFFSET_BS_KERNEL_PROTO(2, 1)
{
  HS_BLOCK_LOCAL_MEM_DECL(64, 32);

  HS_OFFSET_SLAB_GLOBAL_PREAMBLE();
  HS_KEY_TYPE r1 = HS_SLAB_GLOBAL_LOAD(vin, 0);
  HS_KEY_TYPE r2 = HS_SLAB_GLOBAL_LOAD(vin, 1);
  HS_KEY_TYPE r3 = HS_SLAB_GLOBAL_LOAD(vin, 2);
  HS_KEY_TYPE r4 = HS_SLAB_GLOBAL_LOAD(vin, 3);
  HS_KEY_TYPE r5 = HS_SLAB_GLOBAL_LOAD(vin, 4);
  HS_KEY_TYPE r6 = HS_SLAB_GLOBAL_LOAD(vin, 5);
  HS_KEY_TYPE r7 = HS_SLAB_GLOBAL_LOAD(vin, 6);
  HS_KEY_TYPE r8 = HS_SLAB_GLOBAL_LOAD(vin, 7);
  HS_KEY_TYPE r9 = HS_SLAB_GLOBAL_LOAD(vin, 8);
  HS_KEY_TYPE r10 = HS_SLAB_GLOBAL_LOAD(vin, 9);
  HS_KEY_TYPE r11 = HS_SLAB_GLOBAL_LOAD(vin, 10);
  HS_KEY_TYPE r12 = HS_SLAB_GLOBAL_LOAD(vin, 11);
  HS_KEY_TYPE r13 = HS_SLAB_GLOBAL_LOAD(vin, 12);
  HS_KEY_TYPE r14 = HS_SLAB_GLOBAL_LOAD(vin, 13);
  HS_KEY_TYPE r15 = HS_SLAB_GLOBAL_LOAD(vin, 14);
  HS_KEY_TYPE r16 = HS_SLAB_GLOBAL_LOAD(vin, 15);
  HS_KEY_TYPE r17 = HS_SLAB_GLOBAL_LOAD(vin, 16);
  HS_KEY_TYPE r18 = HS_SLAB_GLOBAL_LOAD(vin, 17);
  HS_KEY_TYPE r19 = HS_SLAB_GLOBAL_LOAD(vin, 18);
  HS_KEY_TYPE r20 = HS_SLAB_GLOBAL_LOAD(vin, 19);
  HS_KEY_TYPE r21 = HS_SLAB_GLOBAL_LOAD(vin, 20);
  HS_KEY_TYPE r22 = HS_SLAB_GLOBAL_LOAD(vin, 21);
  HS_KEY_TYPE r23 = HS_SLAB_GLOBAL_LOAD(vin, 22);
  HS_KEY_TYPE r24 = HS_SLAB_GLOBAL_LOAD(vin, 23);
  HS_KEY_TYPE r25 = HS_SLAB_GLOBAL_LOAD(vin, 24);
  HS_KEY_TYPE r26 = HS_SLAB_GLOBAL_LOAD(vin, 25);
  HS_KEY_TYPE r27 = HS_SLAB_GLOBAL_LOAD(vin, 26);
  HS_KEY_TYPE r28 = HS_SLAB_GLOBAL_LOAD(vin, 27);
  HS_KEY_TYPE r29 = HS_SLAB_GLOBAL_LOAD(vin, 28);
  HS_KEY_TYPE r30 = HS_SLAB_GLOBAL_LOAD(vin, 29);
  HS_KEY_TYPE r31 = HS_SLAB_GLOBAL_LOAD(vin, 30);
  HS_KEY_TYPE r32 = HS_SLAB_GLOBAL_LOAD(vin, 31);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r9, r17);
  HS_CMP_XCHG(r10, r18);
  HS_CMP_XCHG(r11, r19);
  HS_CMP_XCHG(r12, r20);
  HS_CMP_XCHG(r13, r21);
  HS_CMP_XCHG(r14, r22);
  HS_CMP_XCHG(r15, r23);
  HS_CMP_XCHG(r16, r24);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r5, r17);
  HS_CMP_XCHG(r6, r18);
  HS_CMP_XCHG(r7, r19);
  HS_CMP_XCHG(r8, r20);
  HS_CMP_XCHG(r13, r25);
  HS_CMP_XCHG(r14, r26);
  HS_CMP_XCHG(r15, r27);
  HS_CMP_XCHG(r16, r28);
  HS_CMP_XCHG(r5, r9);
  HS_CMP_XCHG(r6, r10);
  HS_CMP_XCHG(r7, r11);
  HS_CMP_XCHG(r8, r12);
  HS_CMP_XCHG(r13, r17);
  HS_CMP_XCHG(r14, r18);
  HS_CMP_XCHG(r15, r19);
  HS_CMP_XCHG(r16, r20);
  HS_CMP_XCHG(r21, r25);
  HS_CMP_XCHG(r22, r26);
  HS_CMP_XCHG(r23, r27);
  HS_CMP_XCHG(r24, r28);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r3, r17);
  HS_CMP_XCHG(r4, r18);
  HS_CMP_XCHG(r7, r21);
  HS_CMP_XCHG(r8, r22);
  HS_CMP_XCHG(r11, r25);
  HS_CMP_XCHG(r12, r26);
  HS_CMP_XCHG(r15, r29);
  HS_CMP_XCHG(r16, r30);
  HS_CMP_XCHG(r3, r9);
  HS_CMP_XCHG(r4, r10);
  HS_CMP_XCHG(r7, r13);
  HS_CMP_XCHG(r8, r14);
  HS_CMP_XCHG(r11, r17);
  HS_CMP_XCHG(r12, r18);
  HS_CMP_XCHG(r15, r21);
  HS_CMP_XCHG(r16, r22);
  HS_CMP_XCHG(r19, r25);
  HS_CMP_XCHG(r20, r26);
  HS_CMP_XCHG(r23, r29);
  HS_CMP_XCHG(r24, r30);
  HS_CMP_XCHG(r3, r5);
  HS_CMP_XCHG(r4, r6);
  HS_CMP_XCHG(r7, r9);
  HS_CMP_XCHG(r8, r10);
  HS_CMP_XCHG(r11, r13);
  HS_CMP_XCHG(r12, r14);
  HS_CMP_XCHG(r15, r17);
  HS_CMP_XCHG(r16, r18);
  HS_CMP_XCHG(r19, r21);
  HS_CMP_XCHG(r20, r22);
  HS_CMP_XCHG(r23, r25);
  HS_CMP_XCHG(r24, r26);
  HS_CMP_XCHG(r27, r29);
  HS_CMP_XCHG(r28, r30);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r2, r17);
  HS_CMP_XCHG(r4, r19);
  HS_CMP_XCHG(r6, r21);
  HS_CMP_XCHG(r8, r23);
  HS_CMP_XCHG(r10, r25);
  HS_CMP_XCHG(r12, r27);
  HS_CMP_XCHG(r14, r29);
  HS_CMP_XCHG(r16, r31);
  HS_CMP_XCHG(r2, r9);
  HS_CMP_XCHG(r4, r11);
  HS_CMP_XCHG(r6, r13);
  HS_CMP_XCHG(r8, r15);
  HS_CMP_XCHG(r10, r17);
  HS_CMP_XCHG(r12, r19);
  HS_CMP_XCHG(r14, r21);
  HS_CMP_XCHG(r16, r23);
  HS_CMP_XCHG(r18, r25);
  HS_CMP_XCHG(r20, r27);
  HS_CMP_XCHG(r22, r29);
  HS_CMP_XCHG(r24, r31);
  HS_CMP_XCHG(r2, r5);
  HS_CMP_XCHG(r4, r7);
  HS_CMP_XCHG(r6, r9);
  HS_CMP_XCHG(r8, r11);
  HS_CMP_XCHG(r10, r13);
  HS_CMP_XCHG(r12, r15);
  HS_CMP_XCHG(r14, r17);
  HS_CMP_XCHG(r16, r19);
  HS_CMP_XCHG(r18, r21);
  HS_CMP_XCHG(r20, r23);
  HS_CMP_XCHG(r22, r25);
  HS_CMP_XCHG(r24, r27);
  HS_CMP_XCHG(r26, r29);
  HS_CMP_XCHG(r28, r31);
  HS_CMP_XCHG(r2, r3);
  HS_CMP_XCHG(r4, r5);
  HS_CMP_XCHG(r6, r7);
  HS_CMP_XCHG(r8, r9);
  HS_CMP_XCHG(r10, r11);
  HS_CMP_XCHG(r12, r13);
  HS_CMP_XCHG(r14, r15);
  HS_CMP_XCHG(r16, r17);
  HS_CMP_XCHG(r18, r19);
  HS_CMP_XCHG(r20, r21);
  HS_CMP_XCHG(r22, r23);
  HS_CMP_XCHG(r24, r25);
  HS_CMP_XCHG(r26, r27);
  HS_CMP_XCHG(r28, r29);
  HS_CMP_XCHG(r30, r31);
  {
    HS_SLAB_FLIP_PREAMBLE(1);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(3);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(7);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(15);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(31);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(8);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_BS_MERGE_H_PREAMBLE(2);
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 11) = r27;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 12) = r7;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 13) = r26;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 14) = r8;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 15) = r25;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 16) = r9;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 17) = r24;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 18) = r10;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 19) = r23;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 20) = r11;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 21) = r22;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 22) = r12;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 23) = r21;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 24) = r13;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 25) = r20;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 26) = r14;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 27) = r19;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 28) = r15;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 29) = r18;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 30) = r16;
  HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 31) = r17;
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_R(32) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(160);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(128) = r0_1;
      HS_SLAB_LOCAL_R(160) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(288);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(256) = r0_1;
      HS_SLAB_LOCAL_R(288) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(416);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(384) = r0_1;
      HS_SLAB_LOCAL_R(416) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(544);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(512) = r0_1;
      HS_SLAB_LOCAL_R(544) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(640);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(672);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(640) = r0_1;
      HS_SLAB_LOCAL_R(672) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(768);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(800);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(768) = r0_1;
      HS_SLAB_LOCAL_R(800) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(896);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(928);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(896) = r0_1;
      HS_SLAB_LOCAL_R(928) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1024);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(1056);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1024) = r0_1;
      HS_SLAB_LOCAL_R(1056) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1152);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(1184);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1152) = r0_1;
      HS_SLAB_LOCAL_R(1184) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1280);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(1312);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1280) = r0_1;
      HS_SLAB_LOCAL_R(1312) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1408);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(1440);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1408) = r0_1;
      HS_SLAB_LOCAL_R(1440) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1536);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(1568);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1536) = r0_1;
      HS_SLAB_LOCAL_R(1568) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1664);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(1696);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1664) = r0_1;
      HS_SLAB_LOCAL_R(1696) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1792);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(1824);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1792) = r0_1;
      HS_SLAB_LOCAL_R(1824) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1920);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(1952);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1920) = r0_1;
      HS_SLAB_LOCAL_R(1952) = r0_2;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 11);
  r7 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 12);
  r26 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 13);
  r8 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 14);
  r25 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 15);
  r9 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 16);
  r24 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 17);
  r10 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 18);
  r23 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 19);
  r11 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 20);
  r22 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 21);
  r12 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 22);
  r21 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 23);
  r13 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 24);
  r20 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 25);
  r14 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 26);
  r19 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 27);
  r15 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 28);
  r18 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 29);
  r16 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 30);
  r17 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 31);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_OFFSET_BS_KERNEL_PROTO(4, 2)
{
  HS_BLOCK_LOCAL_MEM_DECL(128, 32);

  HS_OFFSET_SLAB_GLOBAL_PREAMBLE();
  HS_KEY_TYPE r1 = HS_SLAB_GLOBAL_LOAD(vin, 0);
  HS_KEY_TYPE r2 = HS_SLAB_GLOBAL_LOAD(vin, 1);
  HS_KEY_TYPE r3 = HS_SLAB_GLOBAL_LOAD(vin, 2);
  HS_KEY_TYPE r4 = HS_SLAB_GLOBAL_LOAD(vin, 3);
  HS_KEY_TYPE r5 = HS_SLAB_GLOBAL_LOAD(vin, 4);
  HS_KEY_TYPE r6 = HS_SLAB_GLOBAL_LOAD(vin, 5);
  HS_KEY_TYPE r7 = HS_SLAB_GLOBAL_LOAD(vin, 6);
  HS_KEY_TYPE r8 = HS_SLAB_GLOBAL_LOAD(vin, 7);
  HS_KEY_TYPE r9 = HS_SLAB_GLOBAL_LOAD(vin, 8);
  HS_KEY_TYPE r10 = HS_SLAB_GLOBAL_LOAD(vin, 9);
  HS_KEY_TYPE r11 = HS_SLAB_GLOBAL_LOAD(vin, 10);
  HS_KEY_TYPE r12 = HS_SLAB_GLOBAL_LOAD(vin, 11);
  HS_KEY_TYPE r13 = HS_SLAB_GLOBAL_LOAD(vin, 12);
  HS_KEY_TYPE r14 = HS_SLAB_GLOBAL_LOAD(vin, 13);
  HS_KEY_TYPE r15 = HS_SLAB_GLOBAL_LOAD(vin, 14);
  HS_KEY_TYPE r16 = HS_SLAB_GLOBAL_LOAD(vin, 15);
  HS_KEY_TYPE r17 = HS_SLAB_GLOBAL_LOAD(vin, 16);
  HS_KEY_TYPE r18 = HS_SLAB_GLOBAL_LOAD(vin, 17);
  HS_KEY_TYPE r19 = HS_SLAB_GLOBAL_LOAD(vin, 18);
  HS_KEY_TYPE r20 = HS_SLAB_GLOBAL_LOAD(vin, 19);
  HS_KEY_TYPE r21 = HS_SLAB_GLOBAL_LOAD(vin, 20);
  HS_KEY_TYPE r22 = HS_SLAB_GLOBAL_LOAD(vin, 21);
  HS_KEY_TYPE r23 = HS_SLAB_GLOBAL_LOAD(vin, 22);
  HS_KEY_TYPE r24 = HS_SLAB_GLOBAL_LOAD(vin, 23);
  HS_KEY_TYPE r25 = HS_SLAB_GLOBAL_LOAD(vin, 24);
  HS_KEY_TYPE r26 = HS_SLAB_GLOBAL_LOAD(vin, 25);
  HS_KEY_TYPE r27 = HS_SLAB_GLOBAL_LOAD(vin, 26);
  HS_KEY_TYPE r28 = HS_SLAB_GLOBAL_LOAD(vin, 27);
  HS_KEY_TYPE r29 = HS_SLAB_GLOBAL_LOAD(vin, 28);
  HS_KEY_TYPE r30 = HS_SLAB_GLOBAL_LOAD(vin, 29);
  HS_KEY_TYPE r31 = HS_SLAB_GLOBAL_LOAD(vin, 30);
  HS_KEY_TYPE r32 = HS_SLAB_GLOBAL_LOAD(vin, 31);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r9, r17);
  HS_CMP_XCHG(r10, r18);
  HS_CMP_XCHG(r11, r19);
  HS_CMP_XCHG(r12, r20);
  HS_CMP_XCHG(r13, r21);
  HS_CMP_XCHG(r14, r22);
  HS_CMP_XCHG(r15, r23);
  HS_CMP_XCHG(r16, r24);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r5, r17);
  HS_CMP_XCHG(r6, r18);
  HS_CMP_XCHG(r7, r19);
  HS_CMP_XCHG(r8, r20);
  HS_CMP_XCHG(r13, r25);
  HS_CMP_XCHG(r14, r26);
  HS_CMP_XCHG(r15, r27);
  HS_CMP_XCHG(r16, r28);
  HS_CMP_XCHG(r5, r9);
  HS_CMP_XCHG(r6, r10);
  HS_CMP_XCHG(r7, r11);
  HS_CMP_XCHG(r8, r12);
  HS_CMP_XCHG(r13, r17);
  HS_CMP_XCHG(r14, r18);
  HS_CMP_XCHG(r15, r19);
  HS_CMP_XCHG(r16, r20);
  HS_CMP_XCHG(r21, r25);
  HS_CMP_XCHG(r22, r26);
  HS_CMP_XCHG(r23, r27);
  HS_CMP_XCHG(r24, r28);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r3, r17);
  HS_CMP_XCHG(r4, r18);
  HS_CMP_XCHG(r7, r21);
  HS_CMP_XCHG(r8, r22);
  HS_CMP_XCHG(r11, r25);
  HS_CMP_XCHG(r12, r26);
  HS_CMP_XCHG(r15, r29);
  HS_CMP_XCHG(r16, r30);
  HS_CMP_XCHG(r3, r9);
  HS_CMP_XCHG(r4, r10);
  HS_CMP_XCHG(r7, r13);
  HS_CMP_XCHG(r8, r14);
  HS_CMP_XCHG(r11, r17);
  HS_CMP_XCHG(r12, r18);
  HS_CMP_XCHG(r15, r21);
  HS_CMP_XCHG(r16, r22);
  HS_CMP_XCHG(r19, r25);
  HS_CMP_XCHG(r20, r26);
  HS_CMP_XCHG(r23, r29);
  HS_CMP_XCHG(r24, r30);
  HS_CMP_XCHG(r3, r5);
  HS_CMP_XCHG(r4, r6);
  HS_CMP_XCHG(r7, r9);
  HS_CMP_XCHG(r8, r10);
  HS_CMP_XCHG(r11, r13);
  HS_CMP_XCHG(r12, r14);
  HS_CMP_XCHG(r15, r17);
  HS_CMP_XCHG(r16, r18);
  HS_CMP_XCHG(r19, r21);
  HS_CMP_XCHG(r20, r22);
  HS_CMP_XCHG(r23, r25);
  HS_CMP_XCHG(r24, r26);
  HS_CMP_XCHG(r27, r29);
  HS_CMP_XCHG(r28, r30);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r2, r17);
  HS_CMP_XCHG(r4, r19);
  HS_CMP_XCHG(r6, r21);
  HS_CMP_XCHG(r8, r23);
  HS_CMP_XCHG(r10, r25);
  HS_CMP_XCHG(r12, r27);
  HS_CMP_XCHG(r14, r29);
  HS_CMP_XCHG(r16, r31);
  HS_CMP_XCHG(r2, r9);
  HS_CMP_XCHG(r4, r11);
  HS_CMP_XCHG(r6, r13);
  HS_CMP_XCHG(r8, r15);
  HS_CMP_XCHG(r10, r17);
  HS_CMP_XCHG(r12, r19);
  HS_CMP_XCHG(r14, r21);
  HS_CMP_XCHG(r16, r23);
  HS_CMP_XCHG(r18, r25);
  HS_CMP_XCHG(r20, r27);
  HS_CMP_XCHG(r22, r29);
  HS_CMP_XCHG(r24, r31);
  HS_CMP_XCHG(r2, r5);
  HS_CMP_XCHG(r4, r7);
  HS_CMP_XCHG(r6, r9);
  HS_CMP_XCHG(r8, r11);
  HS_CMP_XCHG(r10, r13);
  HS_CMP_XCHG(r12, r15);
  HS_CMP_XCHG(r14, r17);
  HS_CMP_XCHG(r16, r19);
  HS_CMP_XCHG(r18, r21);
  HS_CMP_XCHG(r20, r23);
  HS_CMP_XCHG(r22, r25);
  HS_CMP_XCHG(r24, r27);
  HS_CMP_XCHG(r26, r29);
  HS_CMP_XCHG(r28, r31);
  HS_CMP_XCHG(r2, r3);
  HS_CMP_XCHG(r4, r5);
  HS_CMP_XCHG(r6, r7);
  HS_CMP_XCHG(r8, r9);
  HS_CMP_XCHG(r10, r11);
  HS_CMP_XCHG(r12, r13);
  HS_CMP_XCHG(r14, r15);
  HS_CMP_XCHG(r16, r17);
  HS_CMP_XCHG(r18, r19);
  HS_CMP_XCHG(r20, r21);
  HS_CMP_XCHG(r22, r23);
  HS_CMP_XCHG(r24, r25);
  HS_CMP_XCHG(r26, r27);
  HS_CMP_XCHG(r28, r29);
  HS_CMP_XCHG(r30, r31);
  {
    HS_SLAB_FLIP_PREAMBLE(1);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(3);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(7);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(15);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(31);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(8);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_BS_MERGE_H_PREAMBLE(4);
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 11) = r27;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 12) = r7;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 13) = r26;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 14) = r8;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 15) = r25;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 16) = r9;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 17) = r24;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 18) = r10;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 19) = r23;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 20) = r11;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 21) = r22;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 22) = r12;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 23) = r21;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 24) = r13;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 25) = r20;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 26) = r14;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 27) = r19;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 28) = r15;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 29) = r18;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 30) = r16;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 31) = r17;
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_R(32) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(64) = r1_1;
      HS_SLAB_LOCAL_R(96) = r1_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(544);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(512) = r0_1;
      HS_SLAB_LOCAL_R(544) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(576);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(608);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(576) = r1_1;
      HS_SLAB_LOCAL_R(608) = r1_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1024);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(1056);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1024) = r0_1;
      HS_SLAB_LOCAL_R(1056) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(1088);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(1120);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(1088) = r1_1;
      HS_SLAB_LOCAL_R(1120) = r1_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1536);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(1568);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1536) = r0_1;
      HS_SLAB_LOCAL_R(1568) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(1600);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(1632);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(1600) = r1_1;
      HS_SLAB_LOCAL_R(1632) = r1_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(2048);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(2080);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(2048) = r0_1;
      HS_SLAB_LOCAL_R(2080) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(2112);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(2144);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(2112) = r1_1;
      HS_SLAB_LOCAL_R(2144) = r1_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(2560);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(2592);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(2560) = r0_1;
      HS_SLAB_LOCAL_R(2592) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(2624);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(2656);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(2624) = r1_1;
      HS_SLAB_LOCAL_R(2656) = r1_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(3072);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(3104);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(3072) = r0_1;
      HS_SLAB_LOCAL_R(3104) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(3136);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(3168);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(3136) = r1_1;
      HS_SLAB_LOCAL_R(3168) = r1_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(3584);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(3616);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(3584) = r0_1;
      HS_SLAB_LOCAL_R(3616) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(3648);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(3680);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(3648) = r1_1;
      HS_SLAB_LOCAL_R(3680) = r1_2;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 11);
  r7 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 12);
  r26 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 13);
  r8 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 14);
  r25 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 15);
  r9 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 16);
  r24 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 17);
  r10 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 18);
  r23 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 19);
  r11 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 20);
  r22 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 21);
  r12 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 22);
  r21 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 23);
  r13 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 24);
  r20 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 25);
  r14 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 26);
  r19 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 27);
  r15 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 28);
  r18 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 29);
  r16 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 30);
  r17 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 31);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 11) = r27;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 12) = r7;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 13) = r26;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 14) = r8;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 15) = r25;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 16) = r9;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 17) = r24;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 18) = r10;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 19) = r23;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 20) = r11;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 21) = r22;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 22) = r12;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 23) = r21;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 24) = r13;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 25) = r20;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 26) = r14;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 27) = r19;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 28) = r15;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 29) = r18;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 30) = r16;
  HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 31) = r17;
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_R(64) = r0_3;
      HS_SLAB_LOCAL_R(96) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(544);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(576);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(608);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(512) = r0_1;
      HS_SLAB_LOCAL_L(544) = r0_2;
      HS_SLAB_LOCAL_R(576) = r0_3;
      HS_SLAB_LOCAL_R(608) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1024);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(1056);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(1088);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(1120);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1024) = r0_1;
      HS_SLAB_LOCAL_L(1056) = r0_2;
      HS_SLAB_LOCAL_R(1088) = r0_3;
      HS_SLAB_LOCAL_R(1120) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(1536);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(1568);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(1600);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(1632);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(1536) = r0_1;
      HS_SLAB_LOCAL_L(1568) = r0_2;
      HS_SLAB_LOCAL_R(1600) = r0_3;
      HS_SLAB_LOCAL_R(1632) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(2048);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(2080);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(2112);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(2144);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(2048) = r0_1;
      HS_SLAB_LOCAL_L(2080) = r0_2;
      HS_SLAB_LOCAL_R(2112) = r0_3;
      HS_SLAB_LOCAL_R(2144) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(2560);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(2592);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(2624);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(2656);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(2560) = r0_1;
      HS_SLAB_LOCAL_L(2592) = r0_2;
      HS_SLAB_LOCAL_R(2624) = r0_3;
      HS_SLAB_LOCAL_R(2656) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(3072);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(3104);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(3136);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(3168);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(3072) = r0_1;
      HS_SLAB_LOCAL_L(3104) = r0_2;
      HS_SLAB_LOCAL_R(3136) = r0_3;
      HS_SLAB_LOCAL_R(3168) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(3584);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(3616);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(3648);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(3680);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(3584) = r0_1;
      HS_SLAB_LOCAL_L(3616) = r0_2;
      HS_SLAB_LOCAL_R(3648) = r0_3;
      HS_SLAB_LOCAL_R(3680) = r0_4;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 11);
  r7 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 12);
  r26 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 13);
  r8 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 14);
  r25 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 15);
  r9 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 16);
  r24 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 17);
  r10 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 18);
  r23 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 19);
  r11 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 20);
  r22 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 21);
  r12 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 22);
  r21 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 23);
  r13 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 24);
  r20 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 25);
  r14 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 26);
  r19 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 27);
  r15 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 28);
  r18 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 29);
  r16 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 30);
  r17 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 31);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_OFFSET_BS_KERNEL_PROTO(8, 3)
{
  HS_BLOCK_LOCAL_MEM_DECL(256, 32);

  HS_OFFSET_SLAB_GLOBAL_PREAMBLE();
  HS_KEY_TYPE r1 = HS_SLAB_GLOBAL_LOAD(vin, 0);
  HS_KEY_TYPE r2 = HS_SLAB_GLOBAL_LOAD(vin, 1);
  HS_KEY_TYPE r3 = HS_SLAB_GLOBAL_LOAD(vin, 2);
  HS_KEY_TYPE r4 = HS_SLAB_GLOBAL_LOAD(vin, 3);
  HS_KEY_TYPE r5 = HS_SLAB_GLOBAL_LOAD(vin, 4);
  HS_KEY_TYPE r6 = HS_SLAB_GLOBAL_LOAD(vin, 5);
  HS_KEY_TYPE r7 = HS_SLAB_GLOBAL_LOAD(vin, 6);
  HS_KEY_TYPE r8 = HS_SLAB_GLOBAL_LOAD(vin, 7);
  HS_KEY_TYPE r9 = HS_SLAB_GLOBAL_LOAD(vin, 8);
  HS_KEY_TYPE r10 = HS_SLAB_GLOBAL_LOAD(vin, 9);
  HS_KEY_TYPE r11 = HS_SLAB_GLOBAL_LOAD(vin, 10);
  HS_KEY_TYPE r12 = HS_SLAB_GLOBAL_LOAD(vin, 11);
  HS_KEY_TYPE r13 = HS_SLAB_GLOBAL_LOAD(vin, 12);
  HS_KEY_TYPE r14 = HS_SLAB_GLOBAL_LOAD(vin, 13);
  HS_KEY_TYPE r15 = HS_SLAB_GLOBAL_LOAD(vin, 14);
  HS_KEY_TYPE r16 = HS_SLAB_GLOBAL_LOAD(vin, 15);
  HS_KEY_TYPE r17 = HS_SLAB_GLOBAL_LOAD(vin, 16);
  HS_KEY_TYPE r18 = HS_SLAB_GLOBAL_LOAD(vin, 17);
  HS_KEY_TYPE r19 = HS_SLAB_GLOBAL_LOAD(vin, 18);
  HS_KEY_TYPE r20 = HS_SLAB_GLOBAL_LOAD(vin, 19);
  HS_KEY_TYPE r21 = HS_SLAB_GLOBAL_LOAD(vin, 20);
  HS_KEY_TYPE r22 = HS_SLAB_GLOBAL_LOAD(vin, 21);
  HS_KEY_TYPE r23 = HS_SLAB_GLOBAL_LOAD(vin, 22);
  HS_KEY_TYPE r24 = HS_SLAB_GLOBAL_LOAD(vin, 23);
  HS_KEY_TYPE r25 = HS_SLAB_GLOBAL_LOAD(vin, 24);
  HS_KEY_TYPE r26 = HS_SLAB_GLOBAL_LOAD(vin, 25);
  HS_KEY_TYPE r27 = HS_SLAB_GLOBAL_LOAD(vin, 26);
  HS_KEY_TYPE r28 = HS_SLAB_GLOBAL_LOAD(vin, 27);
  HS_KEY_TYPE r29 = HS_SLAB_GLOBAL_LOAD(vin, 28);
  HS_KEY_TYPE r30 = HS_SLAB_GLOBAL_LOAD(vin, 29);
  HS_KEY_TYPE r31 = HS_SLAB_GLOBAL_LOAD(vin, 30);
  HS_KEY_TYPE r32 = HS_SLAB_GLOBAL_LOAD(vin, 31);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r9, r17);
  HS_CMP_XCHG(r10, r18);
  HS_CMP_XCHG(r11, r19);
  HS_CMP_XCHG(r12, r20);
  HS_CMP_XCHG(r13, r21);
  HS_CMP_XCHG(r14, r22);
  HS_CMP_XCHG(r15, r23);
  HS_CMP_XCHG(r16, r24);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r5, r17);
  HS_CMP_XCHG(r6, r18);
  HS_CMP_XCHG(r7, r19);
  HS_CMP_XCHG(r8, r20);
  HS_CMP_XCHG(r13, r25);
  HS_CMP_XCHG(r14, r26);
  HS_CMP_XCHG(r15, r27);
  HS_CMP_XCHG(r16, r28);
  HS_CMP_XCHG(r5, r9);
  HS_CMP_XCHG(r6, r10);
  HS_CMP_XCHG(r7, r11);
  HS_CMP_XCHG(r8, r12);
  HS_CMP_XCHG(r13, r17);
  HS_CMP_XCHG(r14, r18);
  HS_CMP_XCHG(r15, r19);
  HS_CMP_XCHG(r16, r20);
  HS_CMP_XCHG(r21, r25);
  HS_CMP_XCHG(r22, r26);
  HS_CMP_XCHG(r23, r27);
  HS_CMP_XCHG(r24, r28);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r3, r17);
  HS_CMP_XCHG(r4, r18);
  HS_CMP_XCHG(r7, r21);
  HS_CMP_XCHG(r8, r22);
  HS_CMP_XCHG(r11, r25);
  HS_CMP_XCHG(r12, r26);
  HS_CMP_XCHG(r15, r29);
  HS_CMP_XCHG(r16, r30);
  HS_CMP_XCHG(r3, r9);
  HS_CMP_XCHG(r4, r10);
  HS_CMP_XCHG(r7, r13);
  HS_CMP_XCHG(r8, r14);
  HS_CMP_XCHG(r11, r17);
  HS_CMP_XCHG(r12, r18);
  HS_CMP_XCHG(r15, r21);
  HS_CMP_XCHG(r16, r22);
  HS_CMP_XCHG(r19, r25);
  HS_CMP_XCHG(r20, r26);
  HS_CMP_XCHG(r23, r29);
  HS_CMP_XCHG(r24, r30);
  HS_CMP_XCHG(r3, r5);
  HS_CMP_XCHG(r4, r6);
  HS_CMP_XCHG(r7, r9);
  HS_CMP_XCHG(r8, r10);
  HS_CMP_XCHG(r11, r13);
  HS_CMP_XCHG(r12, r14);
  HS_CMP_XCHG(r15, r17);
  HS_CMP_XCHG(r16, r18);
  HS_CMP_XCHG(r19, r21);
  HS_CMP_XCHG(r20, r22);
  HS_CMP_XCHG(r23, r25);
  HS_CMP_XCHG(r24, r26);
  HS_CMP_XCHG(r27, r29);
  HS_CMP_XCHG(r28, r30);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r2, r17);
  HS_CMP_XCHG(r4, r19);
  HS_CMP_XCHG(r6, r21);
  HS_CMP_XCHG(r8, r23);
  HS_CMP_XCHG(r10, r25);
  HS_CMP_XCHG(r12, r27);
  HS_CMP_XCHG(r14, r29);
  HS_CMP_XCHG(r16, r31);
  HS_CMP_XCHG(r2, r9);
  HS_CMP_XCHG(r4, r11);
  HS_CMP_XCHG(r6, r13);
  HS_CMP_XCHG(r8, r15);
  HS_CMP_XCHG(r10, r17);
  HS_CMP_XCHG(r12, r19);
  HS_CMP_XCHG(r14, r21);
  HS_CMP_XCHG(r16, r23);
  HS_CMP_XCHG(r18, r25);
  HS_CMP_XCHG(r20, r27);
  HS_CMP_XCHG(r22, r29);
  HS_CMP_XCHG(r24, r31);
  HS_CMP_XCHG(r2, r5);
  HS_CMP_XCHG(r4, r7);
  HS_CMP_XCHG(r6, r9);
  HS_CMP_XCHG(r8, r11);
  HS_CMP_XCHG(r10, r13);
  HS_CMP_XCHG(r12, r15);
  HS_CMP_XCHG(r14, r17);
  HS_CMP_XCHG(r16, r19);
  HS_CMP_XCHG(r18, r21);
  HS_CMP_XCHG(r20, r23);
  HS_CMP_XCHG(r22, r25);
  HS_CMP_XCHG(r24, r27);
  HS_CMP_XCHG(r26, r29);
  HS_CMP_XCHG(r28, r31);
  HS_CMP_XCHG(r2, r3);
  HS_CMP_XCHG(r4, r5);
  HS_CMP_XCHG(r6, r7);
  HS_CMP_XCHG(r8, r9);
  HS_CMP_XCHG(r10, r11);
  HS_CMP_XCHG(r12, r13);
  HS_CMP_XCHG(r14, r15);
  HS_CMP_XCHG(r16, r17);
  HS_CMP_XCHG(r18, r19);
  HS_CMP_XCHG(r20, r21);
  HS_CMP_XCHG(r22, r23);
  HS_CMP_XCHG(r24, r25);
  HS_CMP_XCHG(r26, r27);
  HS_CMP_XCHG(r28, r29);
  HS_CMP_XCHG(r30, r31);
  {
    HS_SLAB_FLIP_PREAMBLE(1);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(3);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(7);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(15);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(31);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(8);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_BS_MERGE_H_PREAMBLE(8);
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 11) = r27;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 12) = r7;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 13) = r26;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 14) = r8;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 15) = r25;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 16) = r9;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 17) = r24;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 18) = r10;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 19) = r23;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 20) = r11;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 21) = r22;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 22) = r12;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 23) = r21;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 24) = r13;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 25) = r20;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 26) = r14;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 27) = r19;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 28) = r15;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 29) = r18;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 30) = r16;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 31) = r17;
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_R(32) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(64) = r1_1;
      HS_SLAB_LOCAL_R(96) = r1_2;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_R(160);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(128) = r2_1;
      HS_SLAB_LOCAL_R(160) = r2_2;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(192) = r3_1;
      HS_SLAB_LOCAL_R(224) = r3_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(2048);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(2080);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(2048) = r0_1;
      HS_SLAB_LOCAL_R(2080) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(2112);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(2144);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(2112) = r1_1;
      HS_SLAB_LOCAL_R(2144) = r1_2;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(2176);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_R(2208);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(2176) = r2_1;
      HS_SLAB_LOCAL_R(2208) = r2_2;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(2240);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_R(2272);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(2240) = r3_1;
      HS_SLAB_LOCAL_R(2272) = r3_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(4096);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(4128);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(4096) = r0_1;
      HS_SLAB_LOCAL_R(4128) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(4160);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(4192);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(4160) = r1_1;
      HS_SLAB_LOCAL_R(4192) = r1_2;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(4224);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_R(4256);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(4224) = r2_1;
      HS_SLAB_LOCAL_R(4256) = r2_2;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(4288);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_R(4320);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(4288) = r3_1;
      HS_SLAB_LOCAL_R(4320) = r3_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(6144);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(6176);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(6144) = r0_1;
      HS_SLAB_LOCAL_R(6176) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(6208);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(6240);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(6208) = r1_1;
      HS_SLAB_LOCAL_R(6240) = r1_2;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(6272);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_R(6304);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(6272) = r2_1;
      HS_SLAB_LOCAL_R(6304) = r2_2;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(6336);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_R(6368);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(6336) = r3_1;
      HS_SLAB_LOCAL_R(6368) = r3_2;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 11);
  r7 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 12);
  r26 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 13);
  r8 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 14);
  r25 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 15);
  r9 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 16);
  r24 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 17);
  r10 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 18);
  r23 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 19);
  r11 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 20);
  r22 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 21);
  r12 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 22);
  r21 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 23);
  r13 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 24);
  r20 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 25);
  r14 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 26);
  r19 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 27);
  r15 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 28);
  r18 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 29);
  r16 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 30);
  r17 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 31);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 11) = r27;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 12) = r7;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 13) = r26;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 14) = r8;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 15) = r25;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 16) = r9;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 17) = r24;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 18) = r10;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 19) = r23;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 20) = r11;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 21) = r22;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 22) = r12;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 23) = r21;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 24) = r13;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 25) = r20;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 26) = r14;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 27) = r19;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 28) = r15;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 29) = r18;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 30) = r16;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 31) = r17;
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_R(64) = r0_3;
      HS_SLAB_LOCAL_R(96) = r0_4;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r1_2, r1_3);
      HS_CMP_XCHG(r1_1, r1_4);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(128) = r1_1;
      HS_SLAB_LOCAL_L(160) = r1_2;
      HS_SLAB_LOCAL_R(192) = r1_3;
      HS_SLAB_LOCAL_R(224) = r1_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(2048);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(2080);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(2112);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(2144);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(2048) = r0_1;
      HS_SLAB_LOCAL_L(2080) = r0_2;
      HS_SLAB_LOCAL_R(2112) = r0_3;
      HS_SLAB_LOCAL_R(2144) = r0_4;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(2176);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(2208);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_R(2240);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_R(2272);
      HS_CMP_XCHG(r1_2, r1_3);
      HS_CMP_XCHG(r1_1, r1_4);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(2176) = r1_1;
      HS_SLAB_LOCAL_L(2208) = r1_2;
      HS_SLAB_LOCAL_R(2240) = r1_3;
      HS_SLAB_LOCAL_R(2272) = r1_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(4096);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(4128);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(4160);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(4192);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(4096) = r0_1;
      HS_SLAB_LOCAL_L(4128) = r0_2;
      HS_SLAB_LOCAL_R(4160) = r0_3;
      HS_SLAB_LOCAL_R(4192) = r0_4;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(4224);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(4256);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_R(4288);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_R(4320);
      HS_CMP_XCHG(r1_2, r1_3);
      HS_CMP_XCHG(r1_1, r1_4);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(4224) = r1_1;
      HS_SLAB_LOCAL_L(4256) = r1_2;
      HS_SLAB_LOCAL_R(4288) = r1_3;
      HS_SLAB_LOCAL_R(4320) = r1_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(6144);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(6176);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(6208);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(6240);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(6144) = r0_1;
      HS_SLAB_LOCAL_L(6176) = r0_2;
      HS_SLAB_LOCAL_R(6208) = r0_3;
      HS_SLAB_LOCAL_R(6240) = r0_4;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(6272);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(6304);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_R(6336);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_R(6368);
      HS_CMP_XCHG(r1_2, r1_3);
      HS_CMP_XCHG(r1_1, r1_4);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(6272) = r1_1;
      HS_SLAB_LOCAL_L(6304) = r1_2;
      HS_SLAB_LOCAL_R(6336) = r1_3;
      HS_SLAB_LOCAL_R(6368) = r1_4;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 11);
  r7 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 12);
  r26 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 13);
  r8 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 14);
  r25 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 15);
  r9 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 16);
  r24 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 17);
  r10 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 18);
  r23 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 19);
  r11 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 20);
  r22 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 21);
  r12 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 22);
  r21 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 23);
  r13 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 24);
  r20 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 25);
  r14 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 26);
  r19 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 27);
  r15 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 28);
  r18 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 29);
  r16 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 30);
  r17 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 31);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 11) = r27;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 12) = r7;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 13) = r26;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 14) = r8;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 15) = r25;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 16) = r9;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 17) = r24;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 18) = r10;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 19) = r23;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 20) = r11;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 21) = r22;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 22) = r12;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 23) = r21;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 24) = r13;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 25) = r20;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 26) = r14;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 27) = r19;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 28) = r15;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 29) = r18;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 30) = r16;
  HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 31) = r17;
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_R(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_R(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r0_4, r0_5);
      HS_CMP_XCHG(r0_3, r0_6);
      HS_CMP_XCHG(r0_2, r0_7);
      HS_CMP_XCHG(r0_1, r0_8);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_R(128) = r0_5;
      HS_SLAB_LOCAL_R(160) = r0_6;
      HS_SLAB_LOCAL_R(192) = r0_7;
      HS_SLAB_LOCAL_R(224) = r0_8;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(2048);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(2080);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(2112);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(2144);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_R(2176);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_R(2208);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_R(2240);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_R(2272);
      HS_CMP_XCHG(r0_4, r0_5);
      HS_CMP_XCHG(r0_3, r0_6);
      HS_CMP_XCHG(r0_2, r0_7);
      HS_CMP_XCHG(r0_1, r0_8);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(2048) = r0_1;
      HS_SLAB_LOCAL_L(2080) = r0_2;
      HS_SLAB_LOCAL_L(2112) = r0_3;
      HS_SLAB_LOCAL_L(2144) = r0_4;
      HS_SLAB_LOCAL_R(2176) = r0_5;
      HS_SLAB_LOCAL_R(2208) = r0_6;
      HS_SLAB_LOCAL_R(2240) = r0_7;
      HS_SLAB_LOCAL_R(2272) = r0_8;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(4096);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(4128);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(4160);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(4192);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_R(4224);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_R(4256);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_R(4288);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_R(4320);
      HS_CMP_XCHG(r0_4, r0_5);
      HS_CMP_XCHG(r0_3, r0_6);
      HS_CMP_XCHG(r0_2, r0_7);
      HS_CMP_XCHG(r0_1, r0_8);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(4096) = r0_1;
      HS_SLAB_LOCAL_L(4128) = r0_2;
      HS_SLAB_LOCAL_L(4160) = r0_3;
      HS_SLAB_LOCAL_L(4192) = r0_4;
      HS_SLAB_LOCAL_R(4224) = r0_5;
      HS_SLAB_LOCAL_R(4256) = r0_6;
      HS_SLAB_LOCAL_R(4288) = r0_7;
      HS_SLAB_LOCAL_R(4320) = r0_8;
    }
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(6144);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(6176);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(6208);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(6240);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_R(6272);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_R(6304);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_R(6336);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_R(6368);
      HS_CMP_XCHG(r0_4, r0_5);
      HS_CMP_XCHG(r0_3, r0_6);
      HS_CMP_XCHG(r0_2, r0_7);
      HS_CMP_XCHG(r0_1, r0_8);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(6144) = r0_1;
      HS_SLAB_LOCAL_L(6176) = r0_2;
      HS_SLAB_LOCAL_L(6208) = r0_3;
      HS_SLAB_LOCAL_L(6240) = r0_4;
      HS_SLAB_LOCAL_R(6272) = r0_5;
      HS_SLAB_LOCAL_R(6304) = r0_6;
      HS_SLAB_LOCAL_R(6336) = r0_7;
      HS_SLAB_LOCAL_R(6368) = r0_8;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 11);
  r7 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 12);
  r26 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 13);
  r8 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 14);
  r25 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 15);
  r9 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 16);
  r24 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 17);
  r10 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 18);
  r23 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 19);
  r11 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 20);
  r22 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 21);
  r12 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 22);
  r21 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 23);
  r13 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 24);
  r20 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 25);
  r14 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 26);
  r19 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 27);
  r15 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 28);
  r18 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 29);
  r16 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 30);
  r17 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 31);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_OFFSET_BS_KERNEL_PROTO(16, 4)
{
  HS_BLOCK_LOCAL_MEM_DECL(512, 24);

  HS_OFFSET_SLAB_GLOBAL_PREAMBLE();
  HS_KEY_TYPE r1 = HS_SLAB_GLOBAL_LOAD(vin, 0);
  HS_KEY_TYPE r2 = HS_SLAB_GLOBAL_LOAD(vin, 1);
  HS_KEY_TYPE r3 = HS_SLAB_GLOBAL_LOAD(vin, 2);
  HS_KEY_TYPE r4 = HS_SLAB_GLOBAL_LOAD(vin, 3);
  HS_KEY_TYPE r5 = HS_SLAB_GLOBAL_LOAD(vin, 4);
  HS_KEY_TYPE r6 = HS_SLAB_GLOBAL_LOAD(vin, 5);
  HS_KEY_TYPE r7 = HS_SLAB_GLOBAL_LOAD(vin, 6);
  HS_KEY_TYPE r8 = HS_SLAB_GLOBAL_LOAD(vin, 7);
  HS_KEY_TYPE r9 = HS_SLAB_GLOBAL_LOAD(vin, 8);
  HS_KEY_TYPE r10 = HS_SLAB_GLOBAL_LOAD(vin, 9);
  HS_KEY_TYPE r11 = HS_SLAB_GLOBAL_LOAD(vin, 10);
  HS_KEY_TYPE r12 = HS_SLAB_GLOBAL_LOAD(vin, 11);
  HS_KEY_TYPE r13 = HS_SLAB_GLOBAL_LOAD(vin, 12);
  HS_KEY_TYPE r14 = HS_SLAB_GLOBAL_LOAD(vin, 13);
  HS_KEY_TYPE r15 = HS_SLAB_GLOBAL_LOAD(vin, 14);
  HS_KEY_TYPE r16 = HS_SLAB_GLOBAL_LOAD(vin, 15);
  HS_KEY_TYPE r17 = HS_SLAB_GLOBAL_LOAD(vin, 16);
  HS_KEY_TYPE r18 = HS_SLAB_GLOBAL_LOAD(vin, 17);
  HS_KEY_TYPE r19 = HS_SLAB_GLOBAL_LOAD(vin, 18);
  HS_KEY_TYPE r20 = HS_SLAB_GLOBAL_LOAD(vin, 19);
  HS_KEY_TYPE r21 = HS_SLAB_GLOBAL_LOAD(vin, 20);
  HS_KEY_TYPE r22 = HS_SLAB_GLOBAL_LOAD(vin, 21);
  HS_KEY_TYPE r23 = HS_SLAB_GLOBAL_LOAD(vin, 22);
  HS_KEY_TYPE r24 = HS_SLAB_GLOBAL_LOAD(vin, 23);
  HS_KEY_TYPE r25 = HS_SLAB_GLOBAL_LOAD(vin, 24);
  HS_KEY_TYPE r26 = HS_SLAB_GLOBAL_LOAD(vin, 25);
  HS_KEY_TYPE r27 = HS_SLAB_GLOBAL_LOAD(vin, 26);
  HS_KEY_TYPE r28 = HS_SLAB_GLOBAL_LOAD(vin, 27);
  HS_KEY_TYPE r29 = HS_SLAB_GLOBAL_LOAD(vin, 28);
  HS_KEY_TYPE r30 = HS_SLAB_GLOBAL_LOAD(vin, 29);
  HS_KEY_TYPE r31 = HS_SLAB_GLOBAL_LOAD(vin, 30);
  HS_KEY_TYPE r32 = HS_SLAB_GLOBAL_LOAD(vin, 31);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r9, r17);
  HS_CMP_XCHG(r10, r18);
  HS_CMP_XCHG(r11, r19);
  HS_CMP_XCHG(r12, r20);
  HS_CMP_XCHG(r13, r21);
  HS_CMP_XCHG(r14, r22);
  HS_CMP_XCHG(r15, r23);
  HS_CMP_XCHG(r16, r24);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r5, r17);
  HS_CMP_XCHG(r6, r18);
  HS_CMP_XCHG(r7, r19);
  HS_CMP_XCHG(r8, r20);
  HS_CMP_XCHG(r13, r25);
  HS_CMP_XCHG(r14, r26);
  HS_CMP_XCHG(r15, r27);
  HS_CMP_XCHG(r16, r28);
  HS_CMP_XCHG(r5, r9);
  HS_CMP_XCHG(r6, r10);
  HS_CMP_XCHG(r7, r11);
  HS_CMP_XCHG(r8, r12);
  HS_CMP_XCHG(r13, r17);
  HS_CMP_XCHG(r14, r18);
  HS_CMP_XCHG(r15, r19);
  HS_CMP_XCHG(r16, r20);
  HS_CMP_XCHG(r21, r25);
  HS_CMP_XCHG(r22, r26);
  HS_CMP_XCHG(r23, r27);
  HS_CMP_XCHG(r24, r28);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r3, r17);
  HS_CMP_XCHG(r4, r18);
  HS_CMP_XCHG(r7, r21);
  HS_CMP_XCHG(r8, r22);
  HS_CMP_XCHG(r11, r25);
  HS_CMP_XCHG(r12, r26);
  HS_CMP_XCHG(r15, r29);
  HS_CMP_XCHG(r16, r30);
  HS_CMP_XCHG(r3, r9);
  HS_CMP_XCHG(r4, r10);
  HS_CMP_XCHG(r7, r13);
  HS_CMP_XCHG(r8, r14);
  HS_CMP_XCHG(r11, r17);
  HS_CMP_XCHG(r12, r18);
  HS_CMP_XCHG(r15, r21);
  HS_CMP_XCHG(r16, r22);
  HS_CMP_XCHG(r19, r25);
  HS_CMP_XCHG(r20, r26);
  HS_CMP_XCHG(r23, r29);
  HS_CMP_XCHG(r24, r30);
  HS_CMP_XCHG(r3, r5);
  HS_CMP_XCHG(r4, r6);
  HS_CMP_XCHG(r7, r9);
  HS_CMP_XCHG(r8, r10);
  HS_CMP_XCHG(r11, r13);
  HS_CMP_XCHG(r12, r14);
  HS_CMP_XCHG(r15, r17);
  HS_CMP_XCHG(r16, r18);
  HS_CMP_XCHG(r19, r21);
  HS_CMP_XCHG(r20, r22);
  HS_CMP_XCHG(r23, r25);
  HS_CMP_XCHG(r24, r26);
  HS_CMP_XCHG(r27, r29);
  HS_CMP_XCHG(r28, r30);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r2, r17);
  HS_CMP_XCHG(r4, r19);
  HS_CMP_XCHG(r6, r21);
  HS_CMP_XCHG(r8, r23);
  HS_CMP_XCHG(r10, r25);
  HS_CMP_XCHG(r12, r27);
  HS_CMP_XCHG(r14, r29);
  HS_CMP_XCHG(r16, r31);
  HS_CMP_XCHG(r2, r9);
  HS_CMP_XCHG(r4, r11);
  HS_CMP_XCHG(r6, r13);
  HS_CMP_XCHG(r8, r15);
  HS_CMP_XCHG(r10, r17);
  HS_CMP_XCHG(r12, r19);
  HS_CMP_XCHG(r14, r21);
  HS_CMP_XCHG(r16, r23);
  HS_CMP_XCHG(r18, r25);
  HS_CMP_XCHG(r20, r27);
  HS_CMP_XCHG(r22, r29);
  HS_CMP_XCHG(r24, r31);
  HS_CMP_XCHG(r2, r5);
  HS_CMP_XCHG(r4, r7);
  HS_CMP_XCHG(r6, r9);
  HS_CMP_XCHG(r8, r11);
  HS_CMP_XCHG(r10, r13);
  HS_CMP_XCHG(r12, r15);
  HS_CMP_XCHG(r14, r17);
  HS_CMP_XCHG(r16, r19);
  HS_CMP_XCHG(r18, r21);
  HS_CMP_XCHG(r20, r23);
  HS_CMP_XCHG(r22, r25);
  HS_CMP_XCHG(r24, r27);
  HS_CMP_XCHG(r26, r29);
  HS_CMP_XCHG(r28, r31);
  HS_CMP_XCHG(r2, r3);
  HS_CMP_XCHG(r4, r5);
  HS_CMP_XCHG(r6, r7);
  HS_CMP_XCHG(r8, r9);
  HS_CMP_XCHG(r10, r11);
  HS_CMP_XCHG(r12, r13);
  HS_CMP_XCHG(r14, r15);
  HS_CMP_XCHG(r16, r17);
  HS_CMP_XCHG(r18, r19);
  HS_CMP_XCHG(r20, r21);
  HS_CMP_XCHG(r22, r23);
  HS_CMP_XCHG(r24, r25);
  HS_CMP_XCHG(r26, r27);
  HS_CMP_XCHG(r28, r29);
  HS_CMP_XCHG(r30, r31);
  {
    HS_SLAB_FLIP_PREAMBLE(1);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(3);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(7);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(15);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(31);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(8);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_BS_MERGE_H_PREAMBLE(16);
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 11) = r27;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 12) = r7;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 13) = r26;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 14) = r8;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 15) = r25;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 16) = r9;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 17) = r24;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 18) = r10;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 19) = r23;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 20) = r11;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 21) = r22;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 22) = r12;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 23) = r21;
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_R(32) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(64) = r1_1;
      HS_SLAB_LOCAL_R(96) = r1_2;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_R(160);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(128) = r2_1;
      HS_SLAB_LOCAL_R(160) = r2_2;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(192) = r3_1;
      HS_SLAB_LOCAL_R(224) = r3_2;
    }
    {
      HS_KEY_TYPE r4_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r4_2 = HS_SLAB_LOCAL_R(288);
      HS_CMP_XCHG(r4_1, r4_2);
      HS_SLAB_LOCAL_L(256) = r4_1;
      HS_SLAB_LOCAL_R(288) = r4_2;
    }
    {
      HS_KEY_TYPE r5_1 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r5_2 = HS_SLAB_LOCAL_R(352);
      HS_CMP_XCHG(r5_1, r5_2);
      HS_SLAB_LOCAL_L(320) = r5_1;
      HS_SLAB_LOCAL_R(352) = r5_2;
    }
    {
      HS_KEY_TYPE r6_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r6_2 = HS_SLAB_LOCAL_R(416);
      HS_CMP_XCHG(r6_1, r6_2);
      HS_SLAB_LOCAL_L(384) = r6_1;
      HS_SLAB_LOCAL_R(416) = r6_2;
    }
    {
      HS_KEY_TYPE r7_1 = HS_SLAB_LOCAL_L(448);
      HS_KEY_TYPE r7_2 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r7_1, r7_2);
      HS_SLAB_LOCAL_L(448) = r7_1;
      HS_SLAB_LOCAL_R(480) = r7_2;
    }
  }
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(8192);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(8224);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(8192) = r0_1;
      HS_SLAB_LOCAL_R(8224) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(8256);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(8288);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(8256) = r1_1;
      HS_SLAB_LOCAL_R(8288) = r1_2;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(8320);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_R(8352);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(8320) = r2_1;
      HS_SLAB_LOCAL_R(8352) = r2_2;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(8384);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_R(8416);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(8384) = r3_1;
      HS_SLAB_LOCAL_R(8416) = r3_2;
    }
    {
      HS_KEY_TYPE r4_1 = HS_SLAB_LOCAL_L(8448);
      HS_KEY_TYPE r4_2 = HS_SLAB_LOCAL_R(8480);
      HS_CMP_XCHG(r4_1, r4_2);
      HS_SLAB_LOCAL_L(8448) = r4_1;
      HS_SLAB_LOCAL_R(8480) = r4_2;
    }
    {
      HS_KEY_TYPE r5_1 = HS_SLAB_LOCAL_L(8512);
      HS_KEY_TYPE r5_2 = HS_SLAB_LOCAL_R(8544);
      HS_CMP_XCHG(r5_1, r5_2);
      HS_SLAB_LOCAL_L(8512) = r5_1;
      HS_SLAB_LOCAL_R(8544) = r5_2;
    }
    {
      HS_KEY_TYPE r6_1 = HS_SLAB_LOCAL_L(8576);
      HS_KEY_TYPE r6_2 = HS_SLAB_LOCAL_R(8608);
      HS_CMP_XCHG(r6_1, r6_2);
      HS_SLAB_LOCAL_L(8576) = r6_1;
      HS_SLAB_LOCAL_R(8608) = r6_2;
    }
    {
      HS_KEY_TYPE r7_1 = HS_SLAB_LOCAL_L(8640);
      HS_KEY_TYPE r7_2 = HS_SLAB_LOCAL_R(8672);
      HS_CMP_XCHG(r7_1, r7_2);
      HS_SLAB_LOCAL_L(8640) = r7_1;
      HS_SLAB_LOCAL_R(8672) = r7_2;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 11);
  r7 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 12);
  r26 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 13);
  r8 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 14);
  r25 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 15);
  r9 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 16);
  r24 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 17);
  r10 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 18);
  r23 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 19);
  r11 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 20);
  r22 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 21);
  r12 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 22);
  r21 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 23);
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0) = r13;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1) = r20;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2) = r14;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3) = r19;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4) = r15;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5) = r18;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6) = r16;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7) = r17;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_R(32) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(64) = r1_1;
      HS_SLAB_LOCAL_R(96) = r1_2;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_R(160);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(128) = r2_1;
      HS_SLAB_LOCAL_R(160) = r2_2;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(192) = r3_1;
      HS_SLAB_LOCAL_R(224) = r3_2;
    }
    {
      HS_KEY_TYPE r4_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r4_2 = HS_SLAB_LOCAL_R(288);
      HS_CMP_XCHG(r4_1, r4_2);
      HS_SLAB_LOCAL_L(256) = r4_1;
      HS_SLAB_LOCAL_R(288) = r4_2;
    }
    {
      HS_KEY_TYPE r5_1 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r5_2 = HS_SLAB_LOCAL_R(352);
      HS_CMP_XCHG(r5_1, r5_2);
      HS_SLAB_LOCAL_L(320) = r5_1;
      HS_SLAB_LOCAL_R(352) = r5_2;
    }
    {
      HS_KEY_TYPE r6_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r6_2 = HS_SLAB_LOCAL_R(416);
      HS_CMP_XCHG(r6_1, r6_2);
      HS_SLAB_LOCAL_L(384) = r6_1;
      HS_SLAB_LOCAL_R(416) = r6_2;
    }
    {
      HS_KEY_TYPE r7_1 = HS_SLAB_LOCAL_L(448);
      HS_KEY_TYPE r7_2 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r7_1, r7_2);
      HS_SLAB_LOCAL_L(448) = r7_1;
      HS_SLAB_LOCAL_R(480) = r7_2;
    }
  }
  HS_BLOCK_BARRIER();
  r13 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0);
  r20 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1);
  r14 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2);
  r19 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3);
  r15 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4);
  r18 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5);
  r16 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6);
  r17 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 11) = r27;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 12) = r7;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 13) = r26;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 14) = r8;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 15) = r25;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 16) = r9;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 17) = r24;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 18) = r10;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 19) = r23;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 20) = r11;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 21) = r22;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 22) = r12;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 23) = r21;
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_R(64) = r0_3;
      HS_SLAB_LOCAL_R(96) = r0_4;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r1_2, r1_3);
      HS_CMP_XCHG(r1_1, r1_4);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(128) = r1_1;
      HS_SLAB_LOCAL_L(160) = r1_2;
      HS_SLAB_LOCAL_R(192) = r1_3;
      HS_SLAB_LOCAL_R(224) = r1_4;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r2_3 = HS_SLAB_LOCAL_R(320);
      HS_KEY_TYPE r2_4 = HS_SLAB_LOCAL_R(352);
      HS_CMP_XCHG(r2_2, r2_3);
      HS_CMP_XCHG(r2_1, r2_4);
      HS_CMP_XCHG(r2_3, r2_4);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(256) = r2_1;
      HS_SLAB_LOCAL_L(288) = r2_2;
      HS_SLAB_LOCAL_R(320) = r2_3;
      HS_SLAB_LOCAL_R(352) = r2_4;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_L(416);
      HS_KEY_TYPE r3_3 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r3_4 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r3_2, r3_3);
      HS_CMP_XCHG(r3_1, r3_4);
      HS_CMP_XCHG(r3_3, r3_4);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(384) = r3_1;
      HS_SLAB_LOCAL_L(416) = r3_2;
      HS_SLAB_LOCAL_R(448) = r3_3;
      HS_SLAB_LOCAL_R(480) = r3_4;
    }
  }
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(8192);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(8224);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(8256);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(8288);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(8192) = r0_1;
      HS_SLAB_LOCAL_L(8224) = r0_2;
      HS_SLAB_LOCAL_R(8256) = r0_3;
      HS_SLAB_LOCAL_R(8288) = r0_4;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(8320);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(8352);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_R(8384);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_R(8416);
      HS_CMP_XCHG(r1_2, r1_3);
      HS_CMP_XCHG(r1_1, r1_4);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(8320) = r1_1;
      HS_SLAB_LOCAL_L(8352) = r1_2;
      HS_SLAB_LOCAL_R(8384) = r1_3;
      HS_SLAB_LOCAL_R(8416) = r1_4;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(8448);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_L(8480);
      HS_KEY_TYPE r2_3 = HS_SLAB_LOCAL_R(8512);
      HS_KEY_TYPE r2_4 = HS_SLAB_LOCAL_R(8544);
      HS_CMP_XCHG(r2_2, r2_3);
      HS_CMP_XCHG(r2_1, r2_4);
      HS_CMP_XCHG(r2_3, r2_4);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(8448) = r2_1;
      HS_SLAB_LOCAL_L(8480) = r2_2;
      HS_SLAB_LOCAL_R(8512) = r2_3;
      HS_SLAB_LOCAL_R(8544) = r2_4;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(8576);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_L(8608);
      HS_KEY_TYPE r3_3 = HS_SLAB_LOCAL_R(8640);
      HS_KEY_TYPE r3_4 = HS_SLAB_LOCAL_R(8672);
      HS_CMP_XCHG(r3_2, r3_3);
      HS_CMP_XCHG(r3_1, r3_4);
      HS_CMP_XCHG(r3_3, r3_4);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(8576) = r3_1;
      HS_SLAB_LOCAL_L(8608) = r3_2;
      HS_SLAB_LOCAL_R(8640) = r3_3;
      HS_SLAB_LOCAL_R(8672) = r3_4;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 11);
  r7 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 12);
  r26 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 13);
  r8 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 14);
  r25 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 15);
  r9 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 16);
  r24 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 17);
  r10 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 18);
  r23 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 19);
  r11 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 20);
  r22 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 21);
  r12 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 22);
  r21 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 23);
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0) = r13;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1) = r20;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2) = r14;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3) = r19;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4) = r15;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5) = r18;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6) = r16;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7) = r17;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_R(64) = r0_3;
      HS_SLAB_LOCAL_R(96) = r0_4;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r1_2, r1_3);
      HS_CMP_XCHG(r1_1, r1_4);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(128) = r1_1;
      HS_SLAB_LOCAL_L(160) = r1_2;
      HS_SLAB_LOCAL_R(192) = r1_3;
      HS_SLAB_LOCAL_R(224) = r1_4;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r2_3 = HS_SLAB_LOCAL_R(320);
      HS_KEY_TYPE r2_4 = HS_SLAB_LOCAL_R(352);
      HS_CMP_XCHG(r2_2, r2_3);
      HS_CMP_XCHG(r2_1, r2_4);
      HS_CMP_XCHG(r2_3, r2_4);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(256) = r2_1;
      HS_SLAB_LOCAL_L(288) = r2_2;
      HS_SLAB_LOCAL_R(320) = r2_3;
      HS_SLAB_LOCAL_R(352) = r2_4;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_L(416);
      HS_KEY_TYPE r3_3 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r3_4 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r3_2, r3_3);
      HS_CMP_XCHG(r3_1, r3_4);
      HS_CMP_XCHG(r3_3, r3_4);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(384) = r3_1;
      HS_SLAB_LOCAL_L(416) = r3_2;
      HS_SLAB_LOCAL_R(448) = r3_3;
      HS_SLAB_LOCAL_R(480) = r3_4;
    }
  }
  HS_BLOCK_BARRIER();
  r13 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0);
  r20 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1);
  r14 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2);
  r19 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3);
  r15 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4);
  r18 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5);
  r16 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6);
  r17 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 11) = r27;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 12) = r7;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 13) = r26;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 14) = r8;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 15) = r25;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 16) = r9;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 17) = r24;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 18) = r10;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 19) = r23;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 20) = r11;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 21) = r22;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 22) = r12;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 23) = r21;
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_R(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_R(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r0_4, r0_5);
      HS_CMP_XCHG(r0_3, r0_6);
      HS_CMP_XCHG(r0_2, r0_7);
      HS_CMP_XCHG(r0_1, r0_8);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_R(128) = r0_5;
      HS_SLAB_LOCAL_R(160) = r0_6;
      HS_SLAB_LOCAL_R(192) = r0_7;
      HS_SLAB_LOCAL_R(224) = r0_8;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_L(352);
      HS_KEY_TYPE r1_5 = HS_SLAB_LOCAL_R(384);
      HS_KEY_TYPE r1_6 = HS_SLAB_LOCAL_R(416);
      HS_KEY_TYPE r1_7 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r1_8 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r1_4, r1_5);
      HS_CMP_XCHG(r1_3, r1_6);
      HS_CMP_XCHG(r1_2, r1_7);
      HS_CMP_XCHG(r1_1, r1_8);
      HS_CMP_XCHG(r1_5, r1_7);
      HS_CMP_XCHG(r1_6, r1_8);
      HS_CMP_XCHG(r1_5, r1_6);
      HS_CMP_XCHG(r1_7, r1_8);
      HS_CMP_XCHG(r1_1, r1_3);
      HS_CMP_XCHG(r1_2, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_SLAB_LOCAL_L(256) = r1_1;
      HS_SLAB_LOCAL_L(288) = r1_2;
      HS_SLAB_LOCAL_L(320) = r1_3;
      HS_SLAB_LOCAL_L(352) = r1_4;
      HS_SLAB_LOCAL_R(384) = r1_5;
      HS_SLAB_LOCAL_R(416) = r1_6;
      HS_SLAB_LOCAL_R(448) = r1_7;
      HS_SLAB_LOCAL_R(480) = r1_8;
    }
  }
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(8192);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(8224);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(8256);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(8288);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_R(8320);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_R(8352);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_R(8384);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_R(8416);
      HS_CMP_XCHG(r0_4, r0_5);
      HS_CMP_XCHG(r0_3, r0_6);
      HS_CMP_XCHG(r0_2, r0_7);
      HS_CMP_XCHG(r0_1, r0_8);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(8192) = r0_1;
      HS_SLAB_LOCAL_L(8224) = r0_2;
      HS_SLAB_LOCAL_L(8256) = r0_3;
      HS_SLAB_LOCAL_L(8288) = r0_4;
      HS_SLAB_LOCAL_R(8320) = r0_5;
      HS_SLAB_LOCAL_R(8352) = r0_6;
      HS_SLAB_LOCAL_R(8384) = r0_7;
      HS_SLAB_LOCAL_R(8416) = r0_8;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(8448);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(8480);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_L(8512);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_L(8544);
      HS_KEY_TYPE r1_5 = HS_SLAB_LOCAL_R(8576);
      HS_KEY_TYPE r1_6 = HS_SLAB_LOCAL_R(8608);
      HS_KEY_TYPE r1_7 = HS_SLAB_LOCAL_R(8640);
      HS_KEY_TYPE r1_8 = HS_SLAB_LOCAL_R(8672);
      HS_CMP_XCHG(r1_4, r1_5);
      HS_CMP_XCHG(r1_3, r1_6);
      HS_CMP_XCHG(r1_2, r1_7);
      HS_CMP_XCHG(r1_1, r1_8);
      HS_CMP_XCHG(r1_5, r1_7);
      HS_CMP_XCHG(r1_6, r1_8);
      HS_CMP_XCHG(r1_5, r1_6);
      HS_CMP_XCHG(r1_7, r1_8);
      HS_CMP_XCHG(r1_1, r1_3);
      HS_CMP_XCHG(r1_2, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_SLAB_LOCAL_L(8448) = r1_1;
      HS_SLAB_LOCAL_L(8480) = r1_2;
      HS_SLAB_LOCAL_L(8512) = r1_3;
      HS_SLAB_LOCAL_L(8544) = r1_4;
      HS_SLAB_LOCAL_R(8576) = r1_5;
      HS_SLAB_LOCAL_R(8608) = r1_6;
      HS_SLAB_LOCAL_R(8640) = r1_7;
      HS_SLAB_LOCAL_R(8672) = r1_8;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 11);
  r7 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 12);
  r26 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 13);
  r8 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 14);
  r25 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 15);
  r9 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 16);
  r24 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 17);
  r10 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 18);
  r23 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 19);
  r11 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 20);
  r22 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 21);
  r12 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 22);
  r21 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 23);
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0) = r13;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1) = r20;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2) = r14;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3) = r19;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4) = r15;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5) = r18;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6) = r16;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7) = r17;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_R(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_R(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r0_4, r0_5);
      HS_CMP_XCHG(r0_3, r0_6);
      HS_CMP_XCHG(r0_2, r0_7);
      HS_CMP_XCHG(r0_1, r0_8);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_R(128) = r0_5;
      HS_SLAB_LOCAL_R(160) = r0_6;
      HS_SLAB_LOCAL_R(192) = r0_7;
      HS_SLAB_LOCAL_R(224) = r0_8;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_L(352);
      HS_KEY_TYPE r1_5 = HS_SLAB_LOCAL_R(384);
      HS_KEY_TYPE r1_6 = HS_SLAB_LOCAL_R(416);
      HS_KEY_TYPE r1_7 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r1_8 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r1_4, r1_5);
      HS_CMP_XCHG(r1_3, r1_6);
      HS_CMP_XCHG(r1_2, r1_7);
      HS_CMP_XCHG(r1_1, r1_8);
      HS_CMP_XCHG(r1_5, r1_7);
      HS_CMP_XCHG(r1_6, r1_8);
      HS_CMP_XCHG(r1_5, r1_6);
      HS_CMP_XCHG(r1_7, r1_8);
      HS_CMP_XCHG(r1_1, r1_3);
      HS_CMP_XCHG(r1_2, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_SLAB_LOCAL_L(256) = r1_1;
      HS_SLAB_LOCAL_L(288) = r1_2;
      HS_SLAB_LOCAL_L(320) = r1_3;
      HS_SLAB_LOCAL_L(352) = r1_4;
      HS_SLAB_LOCAL_R(384) = r1_5;
      HS_SLAB_LOCAL_R(416) = r1_6;
      HS_SLAB_LOCAL_R(448) = r1_7;
      HS_SLAB_LOCAL_R(480) = r1_8;
    }
  }
  HS_BLOCK_BARRIER();
  r13 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0);
  r20 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1);
  r14 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2);
  r19 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3);
  r15 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4);
  r18 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5);
  r16 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6);
  r17 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 11) = r27;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 12) = r7;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 13) = r26;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 14) = r8;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 15) = r25;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 16) = r9;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 17) = r24;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 18) = r10;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 19) = r23;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 20) = r11;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 21) = r22;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 22) = r12;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 23) = r21;
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_L(224);
      HS_KEY_TYPE r0_9 = HS_SLAB_LOCAL_R(256);
      HS_KEY_TYPE r0_10 = HS_SLAB_LOCAL_R(288);
      HS_KEY_TYPE r0_11 = HS_SLAB_LOCAL_R(320);
      HS_KEY_TYPE r0_12 = HS_SLAB_LOCAL_R(352);
      HS_KEY_TYPE r0_13 = HS_SLAB_LOCAL_R(384);
      HS_KEY_TYPE r0_14 = HS_SLAB_LOCAL_R(416);
      HS_KEY_TYPE r0_15 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r0_16 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r0_8, r0_9);
      HS_CMP_XCHG(r0_7, r0_10);
      HS_CMP_XCHG(r0_6, r0_11);
      HS_CMP_XCHG(r0_5, r0_12);
      HS_CMP_XCHG(r0_4, r0_13);
      HS_CMP_XCHG(r0_3, r0_14);
      HS_CMP_XCHG(r0_2, r0_15);
      HS_CMP_XCHG(r0_1, r0_16);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_R(256) = r0_9;
      HS_SLAB_LOCAL_R(288) = r0_10;
      HS_SLAB_LOCAL_R(320) = r0_11;
      HS_SLAB_LOCAL_R(352) = r0_12;
      HS_SLAB_LOCAL_R(384) = r0_13;
      HS_SLAB_LOCAL_R(416) = r0_14;
      HS_SLAB_LOCAL_R(448) = r0_15;
      HS_SLAB_LOCAL_R(480) = r0_16;
    }
  }
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(8192);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(8224);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(8256);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(8288);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_L(8320);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_L(8352);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_L(8384);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_L(8416);
      HS_KEY_TYPE r0_9 = HS_SLAB_LOCAL_R(8448);
      HS_KEY_TYPE r0_10 = HS_SLAB_LOCAL_R(8480);
      HS_KEY_TYPE r0_11 = HS_SLAB_LOCAL_R(8512);
      HS_KEY_TYPE r0_12 = HS_SLAB_LOCAL_R(8544);
      HS_KEY_TYPE r0_13 = HS_SLAB_LOCAL_R(8576);
      HS_KEY_TYPE r0_14 = HS_SLAB_LOCAL_R(8608);
      HS_KEY_TYPE r0_15 = HS_SLAB_LOCAL_R(8640);
      HS_KEY_TYPE r0_16 = HS_SLAB_LOCAL_R(8672);
      HS_CMP_XCHG(r0_8, r0_9);
      HS_CMP_XCHG(r0_7, r0_10);
      HS_CMP_XCHG(r0_6, r0_11);
      HS_CMP_XCHG(r0_5, r0_12);
      HS_CMP_XCHG(r0_4, r0_13);
      HS_CMP_XCHG(r0_3, r0_14);
      HS_CMP_XCHG(r0_2, r0_15);
      HS_CMP_XCHG(r0_1, r0_16);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_SLAB_LOCAL_L(8192) = r0_1;
      HS_SLAB_LOCAL_L(8224) = r0_2;
      HS_SLAB_LOCAL_L(8256) = r0_3;
      HS_SLAB_LOCAL_L(8288) = r0_4;
      HS_SLAB_LOCAL_L(8320) = r0_5;
      HS_SLAB_LOCAL_L(8352) = r0_6;
      HS_SLAB_LOCAL_L(8384) = r0_7;
      HS_SLAB_LOCAL_L(8416) = r0_8;
      HS_SLAB_LOCAL_R(8448) = r0_9;
      HS_SLAB_LOCAL_R(8480) = r0_10;
      HS_SLAB_LOCAL_R(8512) = r0_11;
      HS_SLAB_LOCAL_R(8544) = r0_12;
      HS_SLAB_LOCAL_R(8576) = r0_13;
      HS_SLAB_LOCAL_R(8608) = r0_14;
      HS_SLAB_LOCAL_R(8640) = r0_15;
      HS_SLAB_LOCAL_R(8672) = r0_16;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 11);
  r7 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 12);
  r26 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 13);
  r8 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 14);
  r25 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 15);
  r9 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 16);
  r24 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 17);
  r10 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 18);
  r23 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 19);
  r11 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 20);
  r22 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 21);
  r12 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 22);
  r21 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 23);
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0) = r13;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1) = r20;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2) = r14;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3) = r19;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4) = r15;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5) = r18;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6) = r16;
  HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7) = r17;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_L(224);
      HS_KEY_TYPE r0_9 = HS_SLAB_LOCAL_R(256);
      HS_KEY_TYPE r0_10 = HS_SLAB_LOCAL_R(288);
      HS_KEY_TYPE r0_11 = HS_SLAB_LOCAL_R(320);
      HS_KEY_TYPE r0_12 = HS_SLAB_LOCAL_R(352);
      HS_KEY_TYPE r0_13 = HS_SLAB_LOCAL_R(384);
      HS_KEY_TYPE r0_14 = HS_SLAB_LOCAL_R(416);
      HS_KEY_TYPE r0_15 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r0_16 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r0_8, r0_9);
      HS_CMP_XCHG(r0_7, r0_10);
      HS_CMP_XCHG(r0_6, r0_11);
      HS_CMP_XCHG(r0_5, r0_12);
      HS_CMP_XCHG(r0_4, r0_13);
      HS_CMP_XCHG(r0_3, r0_14);
      HS_CMP_XCHG(r0_2, r0_15);
      HS_CMP_XCHG(r0_1, r0_16);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_R(256) = r0_9;
      HS_SLAB_LOCAL_R(288) = r0_10;
      HS_SLAB_LOCAL_R(320) = r0_11;
      HS_SLAB_LOCAL_R(352) = r0_12;
      HS_SLAB_LOCAL_R(384) = r0_13;
      HS_SLAB_LOCAL_R(416) = r0_14;
      HS_SLAB_LOCAL_R(448) = r0_15;
      HS_SLAB_LOCAL_R(480) = r0_16;
    }
  }
  HS_BLOCK_BARRIER();
  r13 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0);
  r20 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1);
  r14 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2);
  r19 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3);
  r15 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4);
  r18 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5);
  r16 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6);
  r17 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_BS_KERNEL_PROTO(32, 5)
{
  HS_BLOCK_LOCAL_MEM_DECL(1024, 12);

  HS_SLAB_GLOBAL_PREAMBLE();
  HS_KEY_TYPE r1 = HS_SLAB_GLOBAL_LOAD(vin, 0);
  HS_KEY_TYPE r2 = HS_SLAB_GLOBAL_LOAD(vin, 1);
  HS_KEY_TYPE r3 = HS_SLAB_GLOBAL_LOAD(vin, 2);
  HS_KEY_TYPE r4 = HS_SLAB_GLOBAL_LOAD(vin, 3);
  HS_KEY_TYPE r5 = HS_SLAB_GLOBAL_LOAD(vin, 4);
  HS_KEY_TYPE r6 = HS_SLAB_GLOBAL_LOAD(vin, 5);
  HS_KEY_TYPE r7 = HS_SLAB_GLOBAL_LOAD(vin, 6);
  HS_KEY_TYPE r8 = HS_SLAB_GLOBAL_LOAD(vin, 7);
  HS_KEY_TYPE r9 = HS_SLAB_GLOBAL_LOAD(vin, 8);
  HS_KEY_TYPE r10 = HS_SLAB_GLOBAL_LOAD(vin, 9);
  HS_KEY_TYPE r11 = HS_SLAB_GLOBAL_LOAD(vin, 10);
  HS_KEY_TYPE r12 = HS_SLAB_GLOBAL_LOAD(vin, 11);
  HS_KEY_TYPE r13 = HS_SLAB_GLOBAL_LOAD(vin, 12);
  HS_KEY_TYPE r14 = HS_SLAB_GLOBAL_LOAD(vin, 13);
  HS_KEY_TYPE r15 = HS_SLAB_GLOBAL_LOAD(vin, 14);
  HS_KEY_TYPE r16 = HS_SLAB_GLOBAL_LOAD(vin, 15);
  HS_KEY_TYPE r17 = HS_SLAB_GLOBAL_LOAD(vin, 16);
  HS_KEY_TYPE r18 = HS_SLAB_GLOBAL_LOAD(vin, 17);
  HS_KEY_TYPE r19 = HS_SLAB_GLOBAL_LOAD(vin, 18);
  HS_KEY_TYPE r20 = HS_SLAB_GLOBAL_LOAD(vin, 19);
  HS_KEY_TYPE r21 = HS_SLAB_GLOBAL_LOAD(vin, 20);
  HS_KEY_TYPE r22 = HS_SLAB_GLOBAL_LOAD(vin, 21);
  HS_KEY_TYPE r23 = HS_SLAB_GLOBAL_LOAD(vin, 22);
  HS_KEY_TYPE r24 = HS_SLAB_GLOBAL_LOAD(vin, 23);
  HS_KEY_TYPE r25 = HS_SLAB_GLOBAL_LOAD(vin, 24);
  HS_KEY_TYPE r26 = HS_SLAB_GLOBAL_LOAD(vin, 25);
  HS_KEY_TYPE r27 = HS_SLAB_GLOBAL_LOAD(vin, 26);
  HS_KEY_TYPE r28 = HS_SLAB_GLOBAL_LOAD(vin, 27);
  HS_KEY_TYPE r29 = HS_SLAB_GLOBAL_LOAD(vin, 28);
  HS_KEY_TYPE r30 = HS_SLAB_GLOBAL_LOAD(vin, 29);
  HS_KEY_TYPE r31 = HS_SLAB_GLOBAL_LOAD(vin, 30);
  HS_KEY_TYPE r32 = HS_SLAB_GLOBAL_LOAD(vin, 31);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r9, r17);
  HS_CMP_XCHG(r10, r18);
  HS_CMP_XCHG(r11, r19);
  HS_CMP_XCHG(r12, r20);
  HS_CMP_XCHG(r13, r21);
  HS_CMP_XCHG(r14, r22);
  HS_CMP_XCHG(r15, r23);
  HS_CMP_XCHG(r16, r24);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r5, r17);
  HS_CMP_XCHG(r6, r18);
  HS_CMP_XCHG(r7, r19);
  HS_CMP_XCHG(r8, r20);
  HS_CMP_XCHG(r13, r25);
  HS_CMP_XCHG(r14, r26);
  HS_CMP_XCHG(r15, r27);
  HS_CMP_XCHG(r16, r28);
  HS_CMP_XCHG(r5, r9);
  HS_CMP_XCHG(r6, r10);
  HS_CMP_XCHG(r7, r11);
  HS_CMP_XCHG(r8, r12);
  HS_CMP_XCHG(r13, r17);
  HS_CMP_XCHG(r14, r18);
  HS_CMP_XCHG(r15, r19);
  HS_CMP_XCHG(r16, r20);
  HS_CMP_XCHG(r21, r25);
  HS_CMP_XCHG(r22, r26);
  HS_CMP_XCHG(r23, r27);
  HS_CMP_XCHG(r24, r28);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r3, r17);
  HS_CMP_XCHG(r4, r18);
  HS_CMP_XCHG(r7, r21);
  HS_CMP_XCHG(r8, r22);
  HS_CMP_XCHG(r11, r25);
  HS_CMP_XCHG(r12, r26);
  HS_CMP_XCHG(r15, r29);
  HS_CMP_XCHG(r16, r30);
  HS_CMP_XCHG(r3, r9);
  HS_CMP_XCHG(r4, r10);
  HS_CMP_XCHG(r7, r13);
  HS_CMP_XCHG(r8, r14);
  HS_CMP_XCHG(r11, r17);
  HS_CMP_XCHG(r12, r18);
  HS_CMP_XCHG(r15, r21);
  HS_CMP_XCHG(r16, r22);
  HS_CMP_XCHG(r19, r25);
  HS_CMP_XCHG(r20, r26);
  HS_CMP_XCHG(r23, r29);
  HS_CMP_XCHG(r24, r30);
  HS_CMP_XCHG(r3, r5);
  HS_CMP_XCHG(r4, r6);
  HS_CMP_XCHG(r7, r9);
  HS_CMP_XCHG(r8, r10);
  HS_CMP_XCHG(r11, r13);
  HS_CMP_XCHG(r12, r14);
  HS_CMP_XCHG(r15, r17);
  HS_CMP_XCHG(r16, r18);
  HS_CMP_XCHG(r19, r21);
  HS_CMP_XCHG(r20, r22);
  HS_CMP_XCHG(r23, r25);
  HS_CMP_XCHG(r24, r26);
  HS_CMP_XCHG(r27, r29);
  HS_CMP_XCHG(r28, r30);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r2, r17);
  HS_CMP_XCHG(r4, r19);
  HS_CMP_XCHG(r6, r21);
  HS_CMP_XCHG(r8, r23);
  HS_CMP_XCHG(r10, r25);
  HS_CMP_XCHG(r12, r27);
  HS_CMP_XCHG(r14, r29);
  HS_CMP_XCHG(r16, r31);
  HS_CMP_XCHG(r2, r9);
  HS_CMP_XCHG(r4, r11);
  HS_CMP_XCHG(r6, r13);
  HS_CMP_XCHG(r8, r15);
  HS_CMP_XCHG(r10, r17);
  HS_CMP_XCHG(r12, r19);
  HS_CMP_XCHG(r14, r21);
  HS_CMP_XCHG(r16, r23);
  HS_CMP_XCHG(r18, r25);
  HS_CMP_XCHG(r20, r27);
  HS_CMP_XCHG(r22, r29);
  HS_CMP_XCHG(r24, r31);
  HS_CMP_XCHG(r2, r5);
  HS_CMP_XCHG(r4, r7);
  HS_CMP_XCHG(r6, r9);
  HS_CMP_XCHG(r8, r11);
  HS_CMP_XCHG(r10, r13);
  HS_CMP_XCHG(r12, r15);
  HS_CMP_XCHG(r14, r17);
  HS_CMP_XCHG(r16, r19);
  HS_CMP_XCHG(r18, r21);
  HS_CMP_XCHG(r20, r23);
  HS_CMP_XCHG(r22, r25);
  HS_CMP_XCHG(r24, r27);
  HS_CMP_XCHG(r26, r29);
  HS_CMP_XCHG(r28, r31);
  HS_CMP_XCHG(r2, r3);
  HS_CMP_XCHG(r4, r5);
  HS_CMP_XCHG(r6, r7);
  HS_CMP_XCHG(r8, r9);
  HS_CMP_XCHG(r10, r11);
  HS_CMP_XCHG(r12, r13);
  HS_CMP_XCHG(r14, r15);
  HS_CMP_XCHG(r16, r17);
  HS_CMP_XCHG(r18, r19);
  HS_CMP_XCHG(r20, r21);
  HS_CMP_XCHG(r22, r23);
  HS_CMP_XCHG(r24, r25);
  HS_CMP_XCHG(r26, r27);
  HS_CMP_XCHG(r28, r29);
  HS_CMP_XCHG(r30, r31);
  {
    HS_SLAB_FLIP_PREAMBLE(1);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(3);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(7);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(15);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  {
    HS_SLAB_FLIP_PREAMBLE(31);
    HS_CMP_FLIP(0, r1, r32);
    HS_CMP_FLIP(1, r2, r31);
    HS_CMP_FLIP(2, r3, r30);
    HS_CMP_FLIP(3, r4, r29);
    HS_CMP_FLIP(4, r5, r28);
    HS_CMP_FLIP(5, r6, r27);
    HS_CMP_FLIP(6, r7, r26);
    HS_CMP_FLIP(7, r8, r25);
    HS_CMP_FLIP(8, r9, r24);
    HS_CMP_FLIP(9, r10, r23);
    HS_CMP_FLIP(10, r11, r22);
    HS_CMP_FLIP(11, r12, r21);
    HS_CMP_FLIP(12, r13, r20);
    HS_CMP_FLIP(13, r14, r19);
    HS_CMP_FLIP(14, r15, r18);
    HS_CMP_FLIP(15, r16, r17);
  }
  {
    HS_SLAB_HALF_PREAMBLE(8);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(4);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(2);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  {
    HS_SLAB_HALF_PREAMBLE(1);
    HS_CMP_HALF(0, r1);
    HS_CMP_HALF(1, r2);
    HS_CMP_HALF(2, r3);
    HS_CMP_HALF(3, r4);
    HS_CMP_HALF(4, r5);
    HS_CMP_HALF(5, r6);
    HS_CMP_HALF(6, r7);
    HS_CMP_HALF(7, r8);
    HS_CMP_HALF(8, r9);
    HS_CMP_HALF(9, r10);
    HS_CMP_HALF(10, r11);
    HS_CMP_HALF(11, r12);
    HS_CMP_HALF(12, r13);
    HS_CMP_HALF(13, r14);
    HS_CMP_HALF(14, r15);
    HS_CMP_HALF(15, r16);
    HS_CMP_HALF(16, r17);
    HS_CMP_HALF(17, r18);
    HS_CMP_HALF(18, r19);
    HS_CMP_HALF(19, r20);
    HS_CMP_HALF(20, r21);
    HS_CMP_HALF(21, r22);
    HS_CMP_HALF(22, r23);
    HS_CMP_HALF(23, r24);
    HS_CMP_HALF(24, r25);
    HS_CMP_HALF(25, r26);
    HS_CMP_HALF(26, r27);
    HS_CMP_HALF(27, r28);
    HS_CMP_HALF(28, r29);
    HS_CMP_HALF(29, r30);
    HS_CMP_HALF(30, r31);
    HS_CMP_HALF(31, r32);
  }
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_BS_MERGE_H_PREAMBLE(32);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11) = r27;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_R(32) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(64) = r1_1;
      HS_SLAB_LOCAL_R(96) = r1_2;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_R(160);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(128) = r2_1;
      HS_SLAB_LOCAL_R(160) = r2_2;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(192) = r3_1;
      HS_SLAB_LOCAL_R(224) = r3_2;
    }
    {
      HS_KEY_TYPE r4_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r4_2 = HS_SLAB_LOCAL_R(288);
      HS_CMP_XCHG(r4_1, r4_2);
      HS_SLAB_LOCAL_L(256) = r4_1;
      HS_SLAB_LOCAL_R(288) = r4_2;
    }
    {
      HS_KEY_TYPE r5_1 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r5_2 = HS_SLAB_LOCAL_R(352);
      HS_CMP_XCHG(r5_1, r5_2);
      HS_SLAB_LOCAL_L(320) = r5_1;
      HS_SLAB_LOCAL_R(352) = r5_2;
    }
    {
      HS_KEY_TYPE r6_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r6_2 = HS_SLAB_LOCAL_R(416);
      HS_CMP_XCHG(r6_1, r6_2);
      HS_SLAB_LOCAL_L(384) = r6_1;
      HS_SLAB_LOCAL_R(416) = r6_2;
    }
    {
      HS_KEY_TYPE r7_1 = HS_SLAB_LOCAL_L(448);
      HS_KEY_TYPE r7_2 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r7_1, r7_2);
      HS_SLAB_LOCAL_L(448) = r7_1;
      HS_SLAB_LOCAL_R(480) = r7_2;
    }
    {
      HS_KEY_TYPE r8_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r8_2 = HS_SLAB_LOCAL_R(544);
      HS_CMP_XCHG(r8_1, r8_2);
      HS_SLAB_LOCAL_L(512) = r8_1;
      HS_SLAB_LOCAL_R(544) = r8_2;
    }
    {
      HS_KEY_TYPE r9_1 = HS_SLAB_LOCAL_L(576);
      HS_KEY_TYPE r9_2 = HS_SLAB_LOCAL_R(608);
      HS_CMP_XCHG(r9_1, r9_2);
      HS_SLAB_LOCAL_L(576) = r9_1;
      HS_SLAB_LOCAL_R(608) = r9_2;
    }
    {
      HS_KEY_TYPE r10_1 = HS_SLAB_LOCAL_L(640);
      HS_KEY_TYPE r10_2 = HS_SLAB_LOCAL_R(672);
      HS_CMP_XCHG(r10_1, r10_2);
      HS_SLAB_LOCAL_L(640) = r10_1;
      HS_SLAB_LOCAL_R(672) = r10_2;
    }
    {
      HS_KEY_TYPE r11_1 = HS_SLAB_LOCAL_L(704);
      HS_KEY_TYPE r11_2 = HS_SLAB_LOCAL_R(736);
      HS_CMP_XCHG(r11_1, r11_2);
      HS_SLAB_LOCAL_L(704) = r11_1;
      HS_SLAB_LOCAL_R(736) = r11_2;
    }
    {
      HS_KEY_TYPE r12_1 = HS_SLAB_LOCAL_L(768);
      HS_KEY_TYPE r12_2 = HS_SLAB_LOCAL_R(800);
      HS_CMP_XCHG(r12_1, r12_2);
      HS_SLAB_LOCAL_L(768) = r12_1;
      HS_SLAB_LOCAL_R(800) = r12_2;
    }
    {
      HS_KEY_TYPE r13_1 = HS_SLAB_LOCAL_L(832);
      HS_KEY_TYPE r13_2 = HS_SLAB_LOCAL_R(864);
      HS_CMP_XCHG(r13_1, r13_2);
      HS_SLAB_LOCAL_L(832) = r13_1;
      HS_SLAB_LOCAL_R(864) = r13_2;
    }
    {
      HS_KEY_TYPE r14_1 = HS_SLAB_LOCAL_L(896);
      HS_KEY_TYPE r14_2 = HS_SLAB_LOCAL_R(928);
      HS_CMP_XCHG(r14_1, r14_2);
      HS_SLAB_LOCAL_L(896) = r14_1;
      HS_SLAB_LOCAL_R(928) = r14_2;
    }
    {
      HS_KEY_TYPE r15_1 = HS_SLAB_LOCAL_L(960);
      HS_KEY_TYPE r15_2 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r15_1, r15_2);
      HS_SLAB_LOCAL_L(960) = r15_1;
      HS_SLAB_LOCAL_R(992) = r15_2;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r7;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r26;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r8;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r25;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r9;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r24;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r10;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r23;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8) = r11;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9) = r22;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10) = r12;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11) = r21;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_R(32) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(64) = r1_1;
      HS_SLAB_LOCAL_R(96) = r1_2;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_R(160);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(128) = r2_1;
      HS_SLAB_LOCAL_R(160) = r2_2;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(192) = r3_1;
      HS_SLAB_LOCAL_R(224) = r3_2;
    }
    {
      HS_KEY_TYPE r4_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r4_2 = HS_SLAB_LOCAL_R(288);
      HS_CMP_XCHG(r4_1, r4_2);
      HS_SLAB_LOCAL_L(256) = r4_1;
      HS_SLAB_LOCAL_R(288) = r4_2;
    }
    {
      HS_KEY_TYPE r5_1 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r5_2 = HS_SLAB_LOCAL_R(352);
      HS_CMP_XCHG(r5_1, r5_2);
      HS_SLAB_LOCAL_L(320) = r5_1;
      HS_SLAB_LOCAL_R(352) = r5_2;
    }
    {
      HS_KEY_TYPE r6_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r6_2 = HS_SLAB_LOCAL_R(416);
      HS_CMP_XCHG(r6_1, r6_2);
      HS_SLAB_LOCAL_L(384) = r6_1;
      HS_SLAB_LOCAL_R(416) = r6_2;
    }
    {
      HS_KEY_TYPE r7_1 = HS_SLAB_LOCAL_L(448);
      HS_KEY_TYPE r7_2 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r7_1, r7_2);
      HS_SLAB_LOCAL_L(448) = r7_1;
      HS_SLAB_LOCAL_R(480) = r7_2;
    }
    {
      HS_KEY_TYPE r8_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r8_2 = HS_SLAB_LOCAL_R(544);
      HS_CMP_XCHG(r8_1, r8_2);
      HS_SLAB_LOCAL_L(512) = r8_1;
      HS_SLAB_LOCAL_R(544) = r8_2;
    }
    {
      HS_KEY_TYPE r9_1 = HS_SLAB_LOCAL_L(576);
      HS_KEY_TYPE r9_2 = HS_SLAB_LOCAL_R(608);
      HS_CMP_XCHG(r9_1, r9_2);
      HS_SLAB_LOCAL_L(576) = r9_1;
      HS_SLAB_LOCAL_R(608) = r9_2;
    }
    {
      HS_KEY_TYPE r10_1 = HS_SLAB_LOCAL_L(640);
      HS_KEY_TYPE r10_2 = HS_SLAB_LOCAL_R(672);
      HS_CMP_XCHG(r10_1, r10_2);
      HS_SLAB_LOCAL_L(640) = r10_1;
      HS_SLAB_LOCAL_R(672) = r10_2;
    }
    {
      HS_KEY_TYPE r11_1 = HS_SLAB_LOCAL_L(704);
      HS_KEY_TYPE r11_2 = HS_SLAB_LOCAL_R(736);
      HS_CMP_XCHG(r11_1, r11_2);
      HS_SLAB_LOCAL_L(704) = r11_1;
      HS_SLAB_LOCAL_R(736) = r11_2;
    }
    {
      HS_KEY_TYPE r12_1 = HS_SLAB_LOCAL_L(768);
      HS_KEY_TYPE r12_2 = HS_SLAB_LOCAL_R(800);
      HS_CMP_XCHG(r12_1, r12_2);
      HS_SLAB_LOCAL_L(768) = r12_1;
      HS_SLAB_LOCAL_R(800) = r12_2;
    }
    {
      HS_KEY_TYPE r13_1 = HS_SLAB_LOCAL_L(832);
      HS_KEY_TYPE r13_2 = HS_SLAB_LOCAL_R(864);
      HS_CMP_XCHG(r13_1, r13_2);
      HS_SLAB_LOCAL_L(832) = r13_1;
      HS_SLAB_LOCAL_R(864) = r13_2;
    }
    {
      HS_KEY_TYPE r14_1 = HS_SLAB_LOCAL_L(896);
      HS_KEY_TYPE r14_2 = HS_SLAB_LOCAL_R(928);
      HS_CMP_XCHG(r14_1, r14_2);
      HS_SLAB_LOCAL_L(896) = r14_1;
      HS_SLAB_LOCAL_R(928) = r14_2;
    }
    {
      HS_KEY_TYPE r15_1 = HS_SLAB_LOCAL_L(960);
      HS_KEY_TYPE r15_2 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r15_1, r15_2);
      HS_SLAB_LOCAL_L(960) = r15_1;
      HS_SLAB_LOCAL_R(992) = r15_2;
    }
  }
  HS_BLOCK_BARRIER();
  r7 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r26 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r8 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r25 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r9 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r24 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r10 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r23 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  r11 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  r22 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  r12 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  r21 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r13;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r20;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r14;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r19;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r15;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r18;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r16;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r17;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_R(32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_R(32) = r0_2;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(64) = r1_1;
      HS_SLAB_LOCAL_R(96) = r1_2;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_R(160);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(128) = r2_1;
      HS_SLAB_LOCAL_R(160) = r2_2;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(192) = r3_1;
      HS_SLAB_LOCAL_R(224) = r3_2;
    }
    {
      HS_KEY_TYPE r4_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r4_2 = HS_SLAB_LOCAL_R(288);
      HS_CMP_XCHG(r4_1, r4_2);
      HS_SLAB_LOCAL_L(256) = r4_1;
      HS_SLAB_LOCAL_R(288) = r4_2;
    }
    {
      HS_KEY_TYPE r5_1 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r5_2 = HS_SLAB_LOCAL_R(352);
      HS_CMP_XCHG(r5_1, r5_2);
      HS_SLAB_LOCAL_L(320) = r5_1;
      HS_SLAB_LOCAL_R(352) = r5_2;
    }
    {
      HS_KEY_TYPE r6_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r6_2 = HS_SLAB_LOCAL_R(416);
      HS_CMP_XCHG(r6_1, r6_2);
      HS_SLAB_LOCAL_L(384) = r6_1;
      HS_SLAB_LOCAL_R(416) = r6_2;
    }
    {
      HS_KEY_TYPE r7_1 = HS_SLAB_LOCAL_L(448);
      HS_KEY_TYPE r7_2 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r7_1, r7_2);
      HS_SLAB_LOCAL_L(448) = r7_1;
      HS_SLAB_LOCAL_R(480) = r7_2;
    }
    {
      HS_KEY_TYPE r8_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r8_2 = HS_SLAB_LOCAL_R(544);
      HS_CMP_XCHG(r8_1, r8_2);
      HS_SLAB_LOCAL_L(512) = r8_1;
      HS_SLAB_LOCAL_R(544) = r8_2;
    }
    {
      HS_KEY_TYPE r9_1 = HS_SLAB_LOCAL_L(576);
      HS_KEY_TYPE r9_2 = HS_SLAB_LOCAL_R(608);
      HS_CMP_XCHG(r9_1, r9_2);
      HS_SLAB_LOCAL_L(576) = r9_1;
      HS_SLAB_LOCAL_R(608) = r9_2;
    }
    {
      HS_KEY_TYPE r10_1 = HS_SLAB_LOCAL_L(640);
      HS_KEY_TYPE r10_2 = HS_SLAB_LOCAL_R(672);
      HS_CMP_XCHG(r10_1, r10_2);
      HS_SLAB_LOCAL_L(640) = r10_1;
      HS_SLAB_LOCAL_R(672) = r10_2;
    }
    {
      HS_KEY_TYPE r11_1 = HS_SLAB_LOCAL_L(704);
      HS_KEY_TYPE r11_2 = HS_SLAB_LOCAL_R(736);
      HS_CMP_XCHG(r11_1, r11_2);
      HS_SLAB_LOCAL_L(704) = r11_1;
      HS_SLAB_LOCAL_R(736) = r11_2;
    }
    {
      HS_KEY_TYPE r12_1 = HS_SLAB_LOCAL_L(768);
      HS_KEY_TYPE r12_2 = HS_SLAB_LOCAL_R(800);
      HS_CMP_XCHG(r12_1, r12_2);
      HS_SLAB_LOCAL_L(768) = r12_1;
      HS_SLAB_LOCAL_R(800) = r12_2;
    }
    {
      HS_KEY_TYPE r13_1 = HS_SLAB_LOCAL_L(832);
      HS_KEY_TYPE r13_2 = HS_SLAB_LOCAL_R(864);
      HS_CMP_XCHG(r13_1, r13_2);
      HS_SLAB_LOCAL_L(832) = r13_1;
      HS_SLAB_LOCAL_R(864) = r13_2;
    }
    {
      HS_KEY_TYPE r14_1 = HS_SLAB_LOCAL_L(896);
      HS_KEY_TYPE r14_2 = HS_SLAB_LOCAL_R(928);
      HS_CMP_XCHG(r14_1, r14_2);
      HS_SLAB_LOCAL_L(896) = r14_1;
      HS_SLAB_LOCAL_R(928) = r14_2;
    }
    {
      HS_KEY_TYPE r15_1 = HS_SLAB_LOCAL_L(960);
      HS_KEY_TYPE r15_2 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r15_1, r15_2);
      HS_SLAB_LOCAL_L(960) = r15_1;
      HS_SLAB_LOCAL_R(992) = r15_2;
    }
  }
  HS_BLOCK_BARRIER();
  r13 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r20 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r14 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r19 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r15 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r18 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r16 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r17 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11) = r27;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_R(64) = r0_3;
      HS_SLAB_LOCAL_R(96) = r0_4;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r1_2, r1_3);
      HS_CMP_XCHG(r1_1, r1_4);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(128) = r1_1;
      HS_SLAB_LOCAL_L(160) = r1_2;
      HS_SLAB_LOCAL_R(192) = r1_3;
      HS_SLAB_LOCAL_R(224) = r1_4;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r2_3 = HS_SLAB_LOCAL_R(320);
      HS_KEY_TYPE r2_4 = HS_SLAB_LOCAL_R(352);
      HS_CMP_XCHG(r2_2, r2_3);
      HS_CMP_XCHG(r2_1, r2_4);
      HS_CMP_XCHG(r2_3, r2_4);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(256) = r2_1;
      HS_SLAB_LOCAL_L(288) = r2_2;
      HS_SLAB_LOCAL_R(320) = r2_3;
      HS_SLAB_LOCAL_R(352) = r2_4;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_L(416);
      HS_KEY_TYPE r3_3 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r3_4 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r3_2, r3_3);
      HS_CMP_XCHG(r3_1, r3_4);
      HS_CMP_XCHG(r3_3, r3_4);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(384) = r3_1;
      HS_SLAB_LOCAL_L(416) = r3_2;
      HS_SLAB_LOCAL_R(448) = r3_3;
      HS_SLAB_LOCAL_R(480) = r3_4;
    }
    {
      HS_KEY_TYPE r4_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r4_2 = HS_SLAB_LOCAL_L(544);
      HS_KEY_TYPE r4_3 = HS_SLAB_LOCAL_R(576);
      HS_KEY_TYPE r4_4 = HS_SLAB_LOCAL_R(608);
      HS_CMP_XCHG(r4_2, r4_3);
      HS_CMP_XCHG(r4_1, r4_4);
      HS_CMP_XCHG(r4_3, r4_4);
      HS_CMP_XCHG(r4_1, r4_2);
      HS_SLAB_LOCAL_L(512) = r4_1;
      HS_SLAB_LOCAL_L(544) = r4_2;
      HS_SLAB_LOCAL_R(576) = r4_3;
      HS_SLAB_LOCAL_R(608) = r4_4;
    }
    {
      HS_KEY_TYPE r5_1 = HS_SLAB_LOCAL_L(640);
      HS_KEY_TYPE r5_2 = HS_SLAB_LOCAL_L(672);
      HS_KEY_TYPE r5_3 = HS_SLAB_LOCAL_R(704);
      HS_KEY_TYPE r5_4 = HS_SLAB_LOCAL_R(736);
      HS_CMP_XCHG(r5_2, r5_3);
      HS_CMP_XCHG(r5_1, r5_4);
      HS_CMP_XCHG(r5_3, r5_4);
      HS_CMP_XCHG(r5_1, r5_2);
      HS_SLAB_LOCAL_L(640) = r5_1;
      HS_SLAB_LOCAL_L(672) = r5_2;
      HS_SLAB_LOCAL_R(704) = r5_3;
      HS_SLAB_LOCAL_R(736) = r5_4;
    }
    {
      HS_KEY_TYPE r6_1 = HS_SLAB_LOCAL_L(768);
      HS_KEY_TYPE r6_2 = HS_SLAB_LOCAL_L(800);
      HS_KEY_TYPE r6_3 = HS_SLAB_LOCAL_R(832);
      HS_KEY_TYPE r6_4 = HS_SLAB_LOCAL_R(864);
      HS_CMP_XCHG(r6_2, r6_3);
      HS_CMP_XCHG(r6_1, r6_4);
      HS_CMP_XCHG(r6_3, r6_4);
      HS_CMP_XCHG(r6_1, r6_2);
      HS_SLAB_LOCAL_L(768) = r6_1;
      HS_SLAB_LOCAL_L(800) = r6_2;
      HS_SLAB_LOCAL_R(832) = r6_3;
      HS_SLAB_LOCAL_R(864) = r6_4;
    }
    {
      HS_KEY_TYPE r7_1 = HS_SLAB_LOCAL_L(896);
      HS_KEY_TYPE r7_2 = HS_SLAB_LOCAL_L(928);
      HS_KEY_TYPE r7_3 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r7_4 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r7_2, r7_3);
      HS_CMP_XCHG(r7_1, r7_4);
      HS_CMP_XCHG(r7_3, r7_4);
      HS_CMP_XCHG(r7_1, r7_2);
      HS_SLAB_LOCAL_L(896) = r7_1;
      HS_SLAB_LOCAL_L(928) = r7_2;
      HS_SLAB_LOCAL_R(960) = r7_3;
      HS_SLAB_LOCAL_R(992) = r7_4;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r7;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r26;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r8;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r25;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r9;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r24;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r10;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r23;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8) = r11;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9) = r22;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10) = r12;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11) = r21;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_R(64) = r0_3;
      HS_SLAB_LOCAL_R(96) = r0_4;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r1_2, r1_3);
      HS_CMP_XCHG(r1_1, r1_4);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(128) = r1_1;
      HS_SLAB_LOCAL_L(160) = r1_2;
      HS_SLAB_LOCAL_R(192) = r1_3;
      HS_SLAB_LOCAL_R(224) = r1_4;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r2_3 = HS_SLAB_LOCAL_R(320);
      HS_KEY_TYPE r2_4 = HS_SLAB_LOCAL_R(352);
      HS_CMP_XCHG(r2_2, r2_3);
      HS_CMP_XCHG(r2_1, r2_4);
      HS_CMP_XCHG(r2_3, r2_4);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(256) = r2_1;
      HS_SLAB_LOCAL_L(288) = r2_2;
      HS_SLAB_LOCAL_R(320) = r2_3;
      HS_SLAB_LOCAL_R(352) = r2_4;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_L(416);
      HS_KEY_TYPE r3_3 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r3_4 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r3_2, r3_3);
      HS_CMP_XCHG(r3_1, r3_4);
      HS_CMP_XCHG(r3_3, r3_4);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(384) = r3_1;
      HS_SLAB_LOCAL_L(416) = r3_2;
      HS_SLAB_LOCAL_R(448) = r3_3;
      HS_SLAB_LOCAL_R(480) = r3_4;
    }
    {
      HS_KEY_TYPE r4_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r4_2 = HS_SLAB_LOCAL_L(544);
      HS_KEY_TYPE r4_3 = HS_SLAB_LOCAL_R(576);
      HS_KEY_TYPE r4_4 = HS_SLAB_LOCAL_R(608);
      HS_CMP_XCHG(r4_2, r4_3);
      HS_CMP_XCHG(r4_1, r4_4);
      HS_CMP_XCHG(r4_3, r4_4);
      HS_CMP_XCHG(r4_1, r4_2);
      HS_SLAB_LOCAL_L(512) = r4_1;
      HS_SLAB_LOCAL_L(544) = r4_2;
      HS_SLAB_LOCAL_R(576) = r4_3;
      HS_SLAB_LOCAL_R(608) = r4_4;
    }
    {
      HS_KEY_TYPE r5_1 = HS_SLAB_LOCAL_L(640);
      HS_KEY_TYPE r5_2 = HS_SLAB_LOCAL_L(672);
      HS_KEY_TYPE r5_3 = HS_SLAB_LOCAL_R(704);
      HS_KEY_TYPE r5_4 = HS_SLAB_LOCAL_R(736);
      HS_CMP_XCHG(r5_2, r5_3);
      HS_CMP_XCHG(r5_1, r5_4);
      HS_CMP_XCHG(r5_3, r5_4);
      HS_CMP_XCHG(r5_1, r5_2);
      HS_SLAB_LOCAL_L(640) = r5_1;
      HS_SLAB_LOCAL_L(672) = r5_2;
      HS_SLAB_LOCAL_R(704) = r5_3;
      HS_SLAB_LOCAL_R(736) = r5_4;
    }
    {
      HS_KEY_TYPE r6_1 = HS_SLAB_LOCAL_L(768);
      HS_KEY_TYPE r6_2 = HS_SLAB_LOCAL_L(800);
      HS_KEY_TYPE r6_3 = HS_SLAB_LOCAL_R(832);
      HS_KEY_TYPE r6_4 = HS_SLAB_LOCAL_R(864);
      HS_CMP_XCHG(r6_2, r6_3);
      HS_CMP_XCHG(r6_1, r6_4);
      HS_CMP_XCHG(r6_3, r6_4);
      HS_CMP_XCHG(r6_1, r6_2);
      HS_SLAB_LOCAL_L(768) = r6_1;
      HS_SLAB_LOCAL_L(800) = r6_2;
      HS_SLAB_LOCAL_R(832) = r6_3;
      HS_SLAB_LOCAL_R(864) = r6_4;
    }
    {
      HS_KEY_TYPE r7_1 = HS_SLAB_LOCAL_L(896);
      HS_KEY_TYPE r7_2 = HS_SLAB_LOCAL_L(928);
      HS_KEY_TYPE r7_3 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r7_4 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r7_2, r7_3);
      HS_CMP_XCHG(r7_1, r7_4);
      HS_CMP_XCHG(r7_3, r7_4);
      HS_CMP_XCHG(r7_1, r7_2);
      HS_SLAB_LOCAL_L(896) = r7_1;
      HS_SLAB_LOCAL_L(928) = r7_2;
      HS_SLAB_LOCAL_R(960) = r7_3;
      HS_SLAB_LOCAL_R(992) = r7_4;
    }
  }
  HS_BLOCK_BARRIER();
  r7 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r26 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r8 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r25 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r9 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r24 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r10 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r23 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  r11 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  r22 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  r12 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  r21 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r13;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r20;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r14;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r19;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r15;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r18;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r16;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r17;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_R(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_R(96);
      HS_CMP_XCHG(r0_2, r0_3);
      HS_CMP_XCHG(r0_1, r0_4);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_R(64) = r0_3;
      HS_SLAB_LOCAL_R(96) = r0_4;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r1_2, r1_3);
      HS_CMP_XCHG(r1_1, r1_4);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_SLAB_LOCAL_L(128) = r1_1;
      HS_SLAB_LOCAL_L(160) = r1_2;
      HS_SLAB_LOCAL_R(192) = r1_3;
      HS_SLAB_LOCAL_R(224) = r1_4;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r2_3 = HS_SLAB_LOCAL_R(320);
      HS_KEY_TYPE r2_4 = HS_SLAB_LOCAL_R(352);
      HS_CMP_XCHG(r2_2, r2_3);
      HS_CMP_XCHG(r2_1, r2_4);
      HS_CMP_XCHG(r2_3, r2_4);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_SLAB_LOCAL_L(256) = r2_1;
      HS_SLAB_LOCAL_L(288) = r2_2;
      HS_SLAB_LOCAL_R(320) = r2_3;
      HS_SLAB_LOCAL_R(352) = r2_4;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_L(416);
      HS_KEY_TYPE r3_3 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r3_4 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r3_2, r3_3);
      HS_CMP_XCHG(r3_1, r3_4);
      HS_CMP_XCHG(r3_3, r3_4);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_SLAB_LOCAL_L(384) = r3_1;
      HS_SLAB_LOCAL_L(416) = r3_2;
      HS_SLAB_LOCAL_R(448) = r3_3;
      HS_SLAB_LOCAL_R(480) = r3_4;
    }
    {
      HS_KEY_TYPE r4_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r4_2 = HS_SLAB_LOCAL_L(544);
      HS_KEY_TYPE r4_3 = HS_SLAB_LOCAL_R(576);
      HS_KEY_TYPE r4_4 = HS_SLAB_LOCAL_R(608);
      HS_CMP_XCHG(r4_2, r4_3);
      HS_CMP_XCHG(r4_1, r4_4);
      HS_CMP_XCHG(r4_3, r4_4);
      HS_CMP_XCHG(r4_1, r4_2);
      HS_SLAB_LOCAL_L(512) = r4_1;
      HS_SLAB_LOCAL_L(544) = r4_2;
      HS_SLAB_LOCAL_R(576) = r4_3;
      HS_SLAB_LOCAL_R(608) = r4_4;
    }
    {
      HS_KEY_TYPE r5_1 = HS_SLAB_LOCAL_L(640);
      HS_KEY_TYPE r5_2 = HS_SLAB_LOCAL_L(672);
      HS_KEY_TYPE r5_3 = HS_SLAB_LOCAL_R(704);
      HS_KEY_TYPE r5_4 = HS_SLAB_LOCAL_R(736);
      HS_CMP_XCHG(r5_2, r5_3);
      HS_CMP_XCHG(r5_1, r5_4);
      HS_CMP_XCHG(r5_3, r5_4);
      HS_CMP_XCHG(r5_1, r5_2);
      HS_SLAB_LOCAL_L(640) = r5_1;
      HS_SLAB_LOCAL_L(672) = r5_2;
      HS_SLAB_LOCAL_R(704) = r5_3;
      HS_SLAB_LOCAL_R(736) = r5_4;
    }
    {
      HS_KEY_TYPE r6_1 = HS_SLAB_LOCAL_L(768);
      HS_KEY_TYPE r6_2 = HS_SLAB_LOCAL_L(800);
      HS_KEY_TYPE r6_3 = HS_SLAB_LOCAL_R(832);
      HS_KEY_TYPE r6_4 = HS_SLAB_LOCAL_R(864);
      HS_CMP_XCHG(r6_2, r6_3);
      HS_CMP_XCHG(r6_1, r6_4);
      HS_CMP_XCHG(r6_3, r6_4);
      HS_CMP_XCHG(r6_1, r6_2);
      HS_SLAB_LOCAL_L(768) = r6_1;
      HS_SLAB_LOCAL_L(800) = r6_2;
      HS_SLAB_LOCAL_R(832) = r6_3;
      HS_SLAB_LOCAL_R(864) = r6_4;
    }
    {
      HS_KEY_TYPE r7_1 = HS_SLAB_LOCAL_L(896);
      HS_KEY_TYPE r7_2 = HS_SLAB_LOCAL_L(928);
      HS_KEY_TYPE r7_3 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r7_4 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r7_2, r7_3);
      HS_CMP_XCHG(r7_1, r7_4);
      HS_CMP_XCHG(r7_3, r7_4);
      HS_CMP_XCHG(r7_1, r7_2);
      HS_SLAB_LOCAL_L(896) = r7_1;
      HS_SLAB_LOCAL_L(928) = r7_2;
      HS_SLAB_LOCAL_R(960) = r7_3;
      HS_SLAB_LOCAL_R(992) = r7_4;
    }
  }
  HS_BLOCK_BARRIER();
  r13 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r20 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r14 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r19 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r15 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r18 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r16 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r17 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11) = r27;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_R(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_R(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r0_4, r0_5);
      HS_CMP_XCHG(r0_3, r0_6);
      HS_CMP_XCHG(r0_2, r0_7);
      HS_CMP_XCHG(r0_1, r0_8);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_R(128) = r0_5;
      HS_SLAB_LOCAL_R(160) = r0_6;
      HS_SLAB_LOCAL_R(192) = r0_7;
      HS_SLAB_LOCAL_R(224) = r0_8;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_L(352);
      HS_KEY_TYPE r1_5 = HS_SLAB_LOCAL_R(384);
      HS_KEY_TYPE r1_6 = HS_SLAB_LOCAL_R(416);
      HS_KEY_TYPE r1_7 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r1_8 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r1_4, r1_5);
      HS_CMP_XCHG(r1_3, r1_6);
      HS_CMP_XCHG(r1_2, r1_7);
      HS_CMP_XCHG(r1_1, r1_8);
      HS_CMP_XCHG(r1_5, r1_7);
      HS_CMP_XCHG(r1_6, r1_8);
      HS_CMP_XCHG(r1_5, r1_6);
      HS_CMP_XCHG(r1_7, r1_8);
      HS_CMP_XCHG(r1_1, r1_3);
      HS_CMP_XCHG(r1_2, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_SLAB_LOCAL_L(256) = r1_1;
      HS_SLAB_LOCAL_L(288) = r1_2;
      HS_SLAB_LOCAL_L(320) = r1_3;
      HS_SLAB_LOCAL_L(352) = r1_4;
      HS_SLAB_LOCAL_R(384) = r1_5;
      HS_SLAB_LOCAL_R(416) = r1_6;
      HS_SLAB_LOCAL_R(448) = r1_7;
      HS_SLAB_LOCAL_R(480) = r1_8;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_L(544);
      HS_KEY_TYPE r2_3 = HS_SLAB_LOCAL_L(576);
      HS_KEY_TYPE r2_4 = HS_SLAB_LOCAL_L(608);
      HS_KEY_TYPE r2_5 = HS_SLAB_LOCAL_R(640);
      HS_KEY_TYPE r2_6 = HS_SLAB_LOCAL_R(672);
      HS_KEY_TYPE r2_7 = HS_SLAB_LOCAL_R(704);
      HS_KEY_TYPE r2_8 = HS_SLAB_LOCAL_R(736);
      HS_CMP_XCHG(r2_4, r2_5);
      HS_CMP_XCHG(r2_3, r2_6);
      HS_CMP_XCHG(r2_2, r2_7);
      HS_CMP_XCHG(r2_1, r2_8);
      HS_CMP_XCHG(r2_5, r2_7);
      HS_CMP_XCHG(r2_6, r2_8);
      HS_CMP_XCHG(r2_5, r2_6);
      HS_CMP_XCHG(r2_7, r2_8);
      HS_CMP_XCHG(r2_1, r2_3);
      HS_CMP_XCHG(r2_2, r2_4);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_CMP_XCHG(r2_3, r2_4);
      HS_SLAB_LOCAL_L(512) = r2_1;
      HS_SLAB_LOCAL_L(544) = r2_2;
      HS_SLAB_LOCAL_L(576) = r2_3;
      HS_SLAB_LOCAL_L(608) = r2_4;
      HS_SLAB_LOCAL_R(640) = r2_5;
      HS_SLAB_LOCAL_R(672) = r2_6;
      HS_SLAB_LOCAL_R(704) = r2_7;
      HS_SLAB_LOCAL_R(736) = r2_8;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(768);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_L(800);
      HS_KEY_TYPE r3_3 = HS_SLAB_LOCAL_L(832);
      HS_KEY_TYPE r3_4 = HS_SLAB_LOCAL_L(864);
      HS_KEY_TYPE r3_5 = HS_SLAB_LOCAL_R(896);
      HS_KEY_TYPE r3_6 = HS_SLAB_LOCAL_R(928);
      HS_KEY_TYPE r3_7 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r3_8 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r3_4, r3_5);
      HS_CMP_XCHG(r3_3, r3_6);
      HS_CMP_XCHG(r3_2, r3_7);
      HS_CMP_XCHG(r3_1, r3_8);
      HS_CMP_XCHG(r3_5, r3_7);
      HS_CMP_XCHG(r3_6, r3_8);
      HS_CMP_XCHG(r3_5, r3_6);
      HS_CMP_XCHG(r3_7, r3_8);
      HS_CMP_XCHG(r3_1, r3_3);
      HS_CMP_XCHG(r3_2, r3_4);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_CMP_XCHG(r3_3, r3_4);
      HS_SLAB_LOCAL_L(768) = r3_1;
      HS_SLAB_LOCAL_L(800) = r3_2;
      HS_SLAB_LOCAL_L(832) = r3_3;
      HS_SLAB_LOCAL_L(864) = r3_4;
      HS_SLAB_LOCAL_R(896) = r3_5;
      HS_SLAB_LOCAL_R(928) = r3_6;
      HS_SLAB_LOCAL_R(960) = r3_7;
      HS_SLAB_LOCAL_R(992) = r3_8;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r7;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r26;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r8;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r25;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r9;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r24;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r10;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r23;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8) = r11;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9) = r22;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10) = r12;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11) = r21;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_R(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_R(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r0_4, r0_5);
      HS_CMP_XCHG(r0_3, r0_6);
      HS_CMP_XCHG(r0_2, r0_7);
      HS_CMP_XCHG(r0_1, r0_8);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_R(128) = r0_5;
      HS_SLAB_LOCAL_R(160) = r0_6;
      HS_SLAB_LOCAL_R(192) = r0_7;
      HS_SLAB_LOCAL_R(224) = r0_8;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_L(352);
      HS_KEY_TYPE r1_5 = HS_SLAB_LOCAL_R(384);
      HS_KEY_TYPE r1_6 = HS_SLAB_LOCAL_R(416);
      HS_KEY_TYPE r1_7 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r1_8 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r1_4, r1_5);
      HS_CMP_XCHG(r1_3, r1_6);
      HS_CMP_XCHG(r1_2, r1_7);
      HS_CMP_XCHG(r1_1, r1_8);
      HS_CMP_XCHG(r1_5, r1_7);
      HS_CMP_XCHG(r1_6, r1_8);
      HS_CMP_XCHG(r1_5, r1_6);
      HS_CMP_XCHG(r1_7, r1_8);
      HS_CMP_XCHG(r1_1, r1_3);
      HS_CMP_XCHG(r1_2, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_SLAB_LOCAL_L(256) = r1_1;
      HS_SLAB_LOCAL_L(288) = r1_2;
      HS_SLAB_LOCAL_L(320) = r1_3;
      HS_SLAB_LOCAL_L(352) = r1_4;
      HS_SLAB_LOCAL_R(384) = r1_5;
      HS_SLAB_LOCAL_R(416) = r1_6;
      HS_SLAB_LOCAL_R(448) = r1_7;
      HS_SLAB_LOCAL_R(480) = r1_8;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_L(544);
      HS_KEY_TYPE r2_3 = HS_SLAB_LOCAL_L(576);
      HS_KEY_TYPE r2_4 = HS_SLAB_LOCAL_L(608);
      HS_KEY_TYPE r2_5 = HS_SLAB_LOCAL_R(640);
      HS_KEY_TYPE r2_6 = HS_SLAB_LOCAL_R(672);
      HS_KEY_TYPE r2_7 = HS_SLAB_LOCAL_R(704);
      HS_KEY_TYPE r2_8 = HS_SLAB_LOCAL_R(736);
      HS_CMP_XCHG(r2_4, r2_5);
      HS_CMP_XCHG(r2_3, r2_6);
      HS_CMP_XCHG(r2_2, r2_7);
      HS_CMP_XCHG(r2_1, r2_8);
      HS_CMP_XCHG(r2_5, r2_7);
      HS_CMP_XCHG(r2_6, r2_8);
      HS_CMP_XCHG(r2_5, r2_6);
      HS_CMP_XCHG(r2_7, r2_8);
      HS_CMP_XCHG(r2_1, r2_3);
      HS_CMP_XCHG(r2_2, r2_4);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_CMP_XCHG(r2_3, r2_4);
      HS_SLAB_LOCAL_L(512) = r2_1;
      HS_SLAB_LOCAL_L(544) = r2_2;
      HS_SLAB_LOCAL_L(576) = r2_3;
      HS_SLAB_LOCAL_L(608) = r2_4;
      HS_SLAB_LOCAL_R(640) = r2_5;
      HS_SLAB_LOCAL_R(672) = r2_6;
      HS_SLAB_LOCAL_R(704) = r2_7;
      HS_SLAB_LOCAL_R(736) = r2_8;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(768);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_L(800);
      HS_KEY_TYPE r3_3 = HS_SLAB_LOCAL_L(832);
      HS_KEY_TYPE r3_4 = HS_SLAB_LOCAL_L(864);
      HS_KEY_TYPE r3_5 = HS_SLAB_LOCAL_R(896);
      HS_KEY_TYPE r3_6 = HS_SLAB_LOCAL_R(928);
      HS_KEY_TYPE r3_7 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r3_8 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r3_4, r3_5);
      HS_CMP_XCHG(r3_3, r3_6);
      HS_CMP_XCHG(r3_2, r3_7);
      HS_CMP_XCHG(r3_1, r3_8);
      HS_CMP_XCHG(r3_5, r3_7);
      HS_CMP_XCHG(r3_6, r3_8);
      HS_CMP_XCHG(r3_5, r3_6);
      HS_CMP_XCHG(r3_7, r3_8);
      HS_CMP_XCHG(r3_1, r3_3);
      HS_CMP_XCHG(r3_2, r3_4);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_CMP_XCHG(r3_3, r3_4);
      HS_SLAB_LOCAL_L(768) = r3_1;
      HS_SLAB_LOCAL_L(800) = r3_2;
      HS_SLAB_LOCAL_L(832) = r3_3;
      HS_SLAB_LOCAL_L(864) = r3_4;
      HS_SLAB_LOCAL_R(896) = r3_5;
      HS_SLAB_LOCAL_R(928) = r3_6;
      HS_SLAB_LOCAL_R(960) = r3_7;
      HS_SLAB_LOCAL_R(992) = r3_8;
    }
  }
  HS_BLOCK_BARRIER();
  r7 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r26 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r8 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r25 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r9 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r24 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r10 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r23 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  r11 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  r22 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  r12 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  r21 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r13;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r20;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r14;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r19;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r15;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r18;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r16;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r17;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_R(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_R(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_R(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_R(224);
      HS_CMP_XCHG(r0_4, r0_5);
      HS_CMP_XCHG(r0_3, r0_6);
      HS_CMP_XCHG(r0_2, r0_7);
      HS_CMP_XCHG(r0_1, r0_8);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_R(128) = r0_5;
      HS_SLAB_LOCAL_R(160) = r0_6;
      HS_SLAB_LOCAL_R(192) = r0_7;
      HS_SLAB_LOCAL_R(224) = r0_8;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_L(352);
      HS_KEY_TYPE r1_5 = HS_SLAB_LOCAL_R(384);
      HS_KEY_TYPE r1_6 = HS_SLAB_LOCAL_R(416);
      HS_KEY_TYPE r1_7 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r1_8 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r1_4, r1_5);
      HS_CMP_XCHG(r1_3, r1_6);
      HS_CMP_XCHG(r1_2, r1_7);
      HS_CMP_XCHG(r1_1, r1_8);
      HS_CMP_XCHG(r1_5, r1_7);
      HS_CMP_XCHG(r1_6, r1_8);
      HS_CMP_XCHG(r1_5, r1_6);
      HS_CMP_XCHG(r1_7, r1_8);
      HS_CMP_XCHG(r1_1, r1_3);
      HS_CMP_XCHG(r1_2, r1_4);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_SLAB_LOCAL_L(256) = r1_1;
      HS_SLAB_LOCAL_L(288) = r1_2;
      HS_SLAB_LOCAL_L(320) = r1_3;
      HS_SLAB_LOCAL_L(352) = r1_4;
      HS_SLAB_LOCAL_R(384) = r1_5;
      HS_SLAB_LOCAL_R(416) = r1_6;
      HS_SLAB_LOCAL_R(448) = r1_7;
      HS_SLAB_LOCAL_R(480) = r1_8;
    }
    {
      HS_KEY_TYPE r2_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r2_2 = HS_SLAB_LOCAL_L(544);
      HS_KEY_TYPE r2_3 = HS_SLAB_LOCAL_L(576);
      HS_KEY_TYPE r2_4 = HS_SLAB_LOCAL_L(608);
      HS_KEY_TYPE r2_5 = HS_SLAB_LOCAL_R(640);
      HS_KEY_TYPE r2_6 = HS_SLAB_LOCAL_R(672);
      HS_KEY_TYPE r2_7 = HS_SLAB_LOCAL_R(704);
      HS_KEY_TYPE r2_8 = HS_SLAB_LOCAL_R(736);
      HS_CMP_XCHG(r2_4, r2_5);
      HS_CMP_XCHG(r2_3, r2_6);
      HS_CMP_XCHG(r2_2, r2_7);
      HS_CMP_XCHG(r2_1, r2_8);
      HS_CMP_XCHG(r2_5, r2_7);
      HS_CMP_XCHG(r2_6, r2_8);
      HS_CMP_XCHG(r2_5, r2_6);
      HS_CMP_XCHG(r2_7, r2_8);
      HS_CMP_XCHG(r2_1, r2_3);
      HS_CMP_XCHG(r2_2, r2_4);
      HS_CMP_XCHG(r2_1, r2_2);
      HS_CMP_XCHG(r2_3, r2_4);
      HS_SLAB_LOCAL_L(512) = r2_1;
      HS_SLAB_LOCAL_L(544) = r2_2;
      HS_SLAB_LOCAL_L(576) = r2_3;
      HS_SLAB_LOCAL_L(608) = r2_4;
      HS_SLAB_LOCAL_R(640) = r2_5;
      HS_SLAB_LOCAL_R(672) = r2_6;
      HS_SLAB_LOCAL_R(704) = r2_7;
      HS_SLAB_LOCAL_R(736) = r2_8;
    }
    {
      HS_KEY_TYPE r3_1 = HS_SLAB_LOCAL_L(768);
      HS_KEY_TYPE r3_2 = HS_SLAB_LOCAL_L(800);
      HS_KEY_TYPE r3_3 = HS_SLAB_LOCAL_L(832);
      HS_KEY_TYPE r3_4 = HS_SLAB_LOCAL_L(864);
      HS_KEY_TYPE r3_5 = HS_SLAB_LOCAL_R(896);
      HS_KEY_TYPE r3_6 = HS_SLAB_LOCAL_R(928);
      HS_KEY_TYPE r3_7 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r3_8 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r3_4, r3_5);
      HS_CMP_XCHG(r3_3, r3_6);
      HS_CMP_XCHG(r3_2, r3_7);
      HS_CMP_XCHG(r3_1, r3_8);
      HS_CMP_XCHG(r3_5, r3_7);
      HS_CMP_XCHG(r3_6, r3_8);
      HS_CMP_XCHG(r3_5, r3_6);
      HS_CMP_XCHG(r3_7, r3_8);
      HS_CMP_XCHG(r3_1, r3_3);
      HS_CMP_XCHG(r3_2, r3_4);
      HS_CMP_XCHG(r3_1, r3_2);
      HS_CMP_XCHG(r3_3, r3_4);
      HS_SLAB_LOCAL_L(768) = r3_1;
      HS_SLAB_LOCAL_L(800) = r3_2;
      HS_SLAB_LOCAL_L(832) = r3_3;
      HS_SLAB_LOCAL_L(864) = r3_4;
      HS_SLAB_LOCAL_R(896) = r3_5;
      HS_SLAB_LOCAL_R(928) = r3_6;
      HS_SLAB_LOCAL_R(960) = r3_7;
      HS_SLAB_LOCAL_R(992) = r3_8;
    }
  }
  HS_BLOCK_BARRIER();
  r13 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r20 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r14 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r19 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r15 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r18 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r16 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r17 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11) = r27;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_L(224);
      HS_KEY_TYPE r0_9 = HS_SLAB_LOCAL_R(256);
      HS_KEY_TYPE r0_10 = HS_SLAB_LOCAL_R(288);
      HS_KEY_TYPE r0_11 = HS_SLAB_LOCAL_R(320);
      HS_KEY_TYPE r0_12 = HS_SLAB_LOCAL_R(352);
      HS_KEY_TYPE r0_13 = HS_SLAB_LOCAL_R(384);
      HS_KEY_TYPE r0_14 = HS_SLAB_LOCAL_R(416);
      HS_KEY_TYPE r0_15 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r0_16 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r0_8, r0_9);
      HS_CMP_XCHG(r0_7, r0_10);
      HS_CMP_XCHG(r0_6, r0_11);
      HS_CMP_XCHG(r0_5, r0_12);
      HS_CMP_XCHG(r0_4, r0_13);
      HS_CMP_XCHG(r0_3, r0_14);
      HS_CMP_XCHG(r0_2, r0_15);
      HS_CMP_XCHG(r0_1, r0_16);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_R(256) = r0_9;
      HS_SLAB_LOCAL_R(288) = r0_10;
      HS_SLAB_LOCAL_R(320) = r0_11;
      HS_SLAB_LOCAL_R(352) = r0_12;
      HS_SLAB_LOCAL_R(384) = r0_13;
      HS_SLAB_LOCAL_R(416) = r0_14;
      HS_SLAB_LOCAL_R(448) = r0_15;
      HS_SLAB_LOCAL_R(480) = r0_16;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(544);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_L(576);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_L(608);
      HS_KEY_TYPE r1_5 = HS_SLAB_LOCAL_L(640);
      HS_KEY_TYPE r1_6 = HS_SLAB_LOCAL_L(672);
      HS_KEY_TYPE r1_7 = HS_SLAB_LOCAL_L(704);
      HS_KEY_TYPE r1_8 = HS_SLAB_LOCAL_L(736);
      HS_KEY_TYPE r1_9 = HS_SLAB_LOCAL_R(768);
      HS_KEY_TYPE r1_10 = HS_SLAB_LOCAL_R(800);
      HS_KEY_TYPE r1_11 = HS_SLAB_LOCAL_R(832);
      HS_KEY_TYPE r1_12 = HS_SLAB_LOCAL_R(864);
      HS_KEY_TYPE r1_13 = HS_SLAB_LOCAL_R(896);
      HS_KEY_TYPE r1_14 = HS_SLAB_LOCAL_R(928);
      HS_KEY_TYPE r1_15 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r1_16 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r1_8, r1_9);
      HS_CMP_XCHG(r1_7, r1_10);
      HS_CMP_XCHG(r1_6, r1_11);
      HS_CMP_XCHG(r1_5, r1_12);
      HS_CMP_XCHG(r1_4, r1_13);
      HS_CMP_XCHG(r1_3, r1_14);
      HS_CMP_XCHG(r1_2, r1_15);
      HS_CMP_XCHG(r1_1, r1_16);
      HS_CMP_XCHG(r1_9, r1_13);
      HS_CMP_XCHG(r1_11, r1_15);
      HS_CMP_XCHG(r1_9, r1_11);
      HS_CMP_XCHG(r1_13, r1_15);
      HS_CMP_XCHG(r1_10, r1_14);
      HS_CMP_XCHG(r1_12, r1_16);
      HS_CMP_XCHG(r1_10, r1_12);
      HS_CMP_XCHG(r1_14, r1_16);
      HS_CMP_XCHG(r1_9, r1_10);
      HS_CMP_XCHG(r1_11, r1_12);
      HS_CMP_XCHG(r1_13, r1_14);
      HS_CMP_XCHG(r1_15, r1_16);
      HS_CMP_XCHG(r1_1, r1_5);
      HS_CMP_XCHG(r1_3, r1_7);
      HS_CMP_XCHG(r1_1, r1_3);
      HS_CMP_XCHG(r1_5, r1_7);
      HS_CMP_XCHG(r1_2, r1_6);
      HS_CMP_XCHG(r1_4, r1_8);
      HS_CMP_XCHG(r1_2, r1_4);
      HS_CMP_XCHG(r1_6, r1_8);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_5, r1_6);
      HS_CMP_XCHG(r1_7, r1_8);
      HS_SLAB_LOCAL_L(512) = r1_1;
      HS_SLAB_LOCAL_L(544) = r1_2;
      HS_SLAB_LOCAL_L(576) = r1_3;
      HS_SLAB_LOCAL_L(608) = r1_4;
      HS_SLAB_LOCAL_L(640) = r1_5;
      HS_SLAB_LOCAL_L(672) = r1_6;
      HS_SLAB_LOCAL_L(704) = r1_7;
      HS_SLAB_LOCAL_L(736) = r1_8;
      HS_SLAB_LOCAL_R(768) = r1_9;
      HS_SLAB_LOCAL_R(800) = r1_10;
      HS_SLAB_LOCAL_R(832) = r1_11;
      HS_SLAB_LOCAL_R(864) = r1_12;
      HS_SLAB_LOCAL_R(896) = r1_13;
      HS_SLAB_LOCAL_R(928) = r1_14;
      HS_SLAB_LOCAL_R(960) = r1_15;
      HS_SLAB_LOCAL_R(992) = r1_16;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r7;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r26;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r8;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r25;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r9;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r24;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r10;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r23;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8) = r11;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9) = r22;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10) = r12;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11) = r21;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_L(224);
      HS_KEY_TYPE r0_9 = HS_SLAB_LOCAL_R(256);
      HS_KEY_TYPE r0_10 = HS_SLAB_LOCAL_R(288);
      HS_KEY_TYPE r0_11 = HS_SLAB_LOCAL_R(320);
      HS_KEY_TYPE r0_12 = HS_SLAB_LOCAL_R(352);
      HS_KEY_TYPE r0_13 = HS_SLAB_LOCAL_R(384);
      HS_KEY_TYPE r0_14 = HS_SLAB_LOCAL_R(416);
      HS_KEY_TYPE r0_15 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r0_16 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r0_8, r0_9);
      HS_CMP_XCHG(r0_7, r0_10);
      HS_CMP_XCHG(r0_6, r0_11);
      HS_CMP_XCHG(r0_5, r0_12);
      HS_CMP_XCHG(r0_4, r0_13);
      HS_CMP_XCHG(r0_3, r0_14);
      HS_CMP_XCHG(r0_2, r0_15);
      HS_CMP_XCHG(r0_1, r0_16);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_R(256) = r0_9;
      HS_SLAB_LOCAL_R(288) = r0_10;
      HS_SLAB_LOCAL_R(320) = r0_11;
      HS_SLAB_LOCAL_R(352) = r0_12;
      HS_SLAB_LOCAL_R(384) = r0_13;
      HS_SLAB_LOCAL_R(416) = r0_14;
      HS_SLAB_LOCAL_R(448) = r0_15;
      HS_SLAB_LOCAL_R(480) = r0_16;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(544);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_L(576);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_L(608);
      HS_KEY_TYPE r1_5 = HS_SLAB_LOCAL_L(640);
      HS_KEY_TYPE r1_6 = HS_SLAB_LOCAL_L(672);
      HS_KEY_TYPE r1_7 = HS_SLAB_LOCAL_L(704);
      HS_KEY_TYPE r1_8 = HS_SLAB_LOCAL_L(736);
      HS_KEY_TYPE r1_9 = HS_SLAB_LOCAL_R(768);
      HS_KEY_TYPE r1_10 = HS_SLAB_LOCAL_R(800);
      HS_KEY_TYPE r1_11 = HS_SLAB_LOCAL_R(832);
      HS_KEY_TYPE r1_12 = HS_SLAB_LOCAL_R(864);
      HS_KEY_TYPE r1_13 = HS_SLAB_LOCAL_R(896);
      HS_KEY_TYPE r1_14 = HS_SLAB_LOCAL_R(928);
      HS_KEY_TYPE r1_15 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r1_16 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r1_8, r1_9);
      HS_CMP_XCHG(r1_7, r1_10);
      HS_CMP_XCHG(r1_6, r1_11);
      HS_CMP_XCHG(r1_5, r1_12);
      HS_CMP_XCHG(r1_4, r1_13);
      HS_CMP_XCHG(r1_3, r1_14);
      HS_CMP_XCHG(r1_2, r1_15);
      HS_CMP_XCHG(r1_1, r1_16);
      HS_CMP_XCHG(r1_9, r1_13);
      HS_CMP_XCHG(r1_11, r1_15);
      HS_CMP_XCHG(r1_9, r1_11);
      HS_CMP_XCHG(r1_13, r1_15);
      HS_CMP_XCHG(r1_10, r1_14);
      HS_CMP_XCHG(r1_12, r1_16);
      HS_CMP_XCHG(r1_10, r1_12);
      HS_CMP_XCHG(r1_14, r1_16);
      HS_CMP_XCHG(r1_9, r1_10);
      HS_CMP_XCHG(r1_11, r1_12);
      HS_CMP_XCHG(r1_13, r1_14);
      HS_CMP_XCHG(r1_15, r1_16);
      HS_CMP_XCHG(r1_1, r1_5);
      HS_CMP_XCHG(r1_3, r1_7);
      HS_CMP_XCHG(r1_1, r1_3);
      HS_CMP_XCHG(r1_5, r1_7);
      HS_CMP_XCHG(r1_2, r1_6);
      HS_CMP_XCHG(r1_4, r1_8);
      HS_CMP_XCHG(r1_2, r1_4);
      HS_CMP_XCHG(r1_6, r1_8);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_5, r1_6);
      HS_CMP_XCHG(r1_7, r1_8);
      HS_SLAB_LOCAL_L(512) = r1_1;
      HS_SLAB_LOCAL_L(544) = r1_2;
      HS_SLAB_LOCAL_L(576) = r1_3;
      HS_SLAB_LOCAL_L(608) = r1_4;
      HS_SLAB_LOCAL_L(640) = r1_5;
      HS_SLAB_LOCAL_L(672) = r1_6;
      HS_SLAB_LOCAL_L(704) = r1_7;
      HS_SLAB_LOCAL_L(736) = r1_8;
      HS_SLAB_LOCAL_R(768) = r1_9;
      HS_SLAB_LOCAL_R(800) = r1_10;
      HS_SLAB_LOCAL_R(832) = r1_11;
      HS_SLAB_LOCAL_R(864) = r1_12;
      HS_SLAB_LOCAL_R(896) = r1_13;
      HS_SLAB_LOCAL_R(928) = r1_14;
      HS_SLAB_LOCAL_R(960) = r1_15;
      HS_SLAB_LOCAL_R(992) = r1_16;
    }
  }
  HS_BLOCK_BARRIER();
  r7 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r26 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r8 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r25 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r9 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r24 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r10 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r23 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  r11 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  r22 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  r12 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  r21 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r13;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r20;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r14;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r19;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r15;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r18;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r16;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r17;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_L(224);
      HS_KEY_TYPE r0_9 = HS_SLAB_LOCAL_R(256);
      HS_KEY_TYPE r0_10 = HS_SLAB_LOCAL_R(288);
      HS_KEY_TYPE r0_11 = HS_SLAB_LOCAL_R(320);
      HS_KEY_TYPE r0_12 = HS_SLAB_LOCAL_R(352);
      HS_KEY_TYPE r0_13 = HS_SLAB_LOCAL_R(384);
      HS_KEY_TYPE r0_14 = HS_SLAB_LOCAL_R(416);
      HS_KEY_TYPE r0_15 = HS_SLAB_LOCAL_R(448);
      HS_KEY_TYPE r0_16 = HS_SLAB_LOCAL_R(480);
      HS_CMP_XCHG(r0_8, r0_9);
      HS_CMP_XCHG(r0_7, r0_10);
      HS_CMP_XCHG(r0_6, r0_11);
      HS_CMP_XCHG(r0_5, r0_12);
      HS_CMP_XCHG(r0_4, r0_13);
      HS_CMP_XCHG(r0_3, r0_14);
      HS_CMP_XCHG(r0_2, r0_15);
      HS_CMP_XCHG(r0_1, r0_16);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_R(256) = r0_9;
      HS_SLAB_LOCAL_R(288) = r0_10;
      HS_SLAB_LOCAL_R(320) = r0_11;
      HS_SLAB_LOCAL_R(352) = r0_12;
      HS_SLAB_LOCAL_R(384) = r0_13;
      HS_SLAB_LOCAL_R(416) = r0_14;
      HS_SLAB_LOCAL_R(448) = r0_15;
      HS_SLAB_LOCAL_R(480) = r0_16;
    }
    {
      HS_KEY_TYPE r1_1 = HS_SLAB_LOCAL_L(512);
      HS_KEY_TYPE r1_2 = HS_SLAB_LOCAL_L(544);
      HS_KEY_TYPE r1_3 = HS_SLAB_LOCAL_L(576);
      HS_KEY_TYPE r1_4 = HS_SLAB_LOCAL_L(608);
      HS_KEY_TYPE r1_5 = HS_SLAB_LOCAL_L(640);
      HS_KEY_TYPE r1_6 = HS_SLAB_LOCAL_L(672);
      HS_KEY_TYPE r1_7 = HS_SLAB_LOCAL_L(704);
      HS_KEY_TYPE r1_8 = HS_SLAB_LOCAL_L(736);
      HS_KEY_TYPE r1_9 = HS_SLAB_LOCAL_R(768);
      HS_KEY_TYPE r1_10 = HS_SLAB_LOCAL_R(800);
      HS_KEY_TYPE r1_11 = HS_SLAB_LOCAL_R(832);
      HS_KEY_TYPE r1_12 = HS_SLAB_LOCAL_R(864);
      HS_KEY_TYPE r1_13 = HS_SLAB_LOCAL_R(896);
      HS_KEY_TYPE r1_14 = HS_SLAB_LOCAL_R(928);
      HS_KEY_TYPE r1_15 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r1_16 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r1_8, r1_9);
      HS_CMP_XCHG(r1_7, r1_10);
      HS_CMP_XCHG(r1_6, r1_11);
      HS_CMP_XCHG(r1_5, r1_12);
      HS_CMP_XCHG(r1_4, r1_13);
      HS_CMP_XCHG(r1_3, r1_14);
      HS_CMP_XCHG(r1_2, r1_15);
      HS_CMP_XCHG(r1_1, r1_16);
      HS_CMP_XCHG(r1_9, r1_13);
      HS_CMP_XCHG(r1_11, r1_15);
      HS_CMP_XCHG(r1_9, r1_11);
      HS_CMP_XCHG(r1_13, r1_15);
      HS_CMP_XCHG(r1_10, r1_14);
      HS_CMP_XCHG(r1_12, r1_16);
      HS_CMP_XCHG(r1_10, r1_12);
      HS_CMP_XCHG(r1_14, r1_16);
      HS_CMP_XCHG(r1_9, r1_10);
      HS_CMP_XCHG(r1_11, r1_12);
      HS_CMP_XCHG(r1_13, r1_14);
      HS_CMP_XCHG(r1_15, r1_16);
      HS_CMP_XCHG(r1_1, r1_5);
      HS_CMP_XCHG(r1_3, r1_7);
      HS_CMP_XCHG(r1_1, r1_3);
      HS_CMP_XCHG(r1_5, r1_7);
      HS_CMP_XCHG(r1_2, r1_6);
      HS_CMP_XCHG(r1_4, r1_8);
      HS_CMP_XCHG(r1_2, r1_4);
      HS_CMP_XCHG(r1_6, r1_8);
      HS_CMP_XCHG(r1_1, r1_2);
      HS_CMP_XCHG(r1_3, r1_4);
      HS_CMP_XCHG(r1_5, r1_6);
      HS_CMP_XCHG(r1_7, r1_8);
      HS_SLAB_LOCAL_L(512) = r1_1;
      HS_SLAB_LOCAL_L(544) = r1_2;
      HS_SLAB_LOCAL_L(576) = r1_3;
      HS_SLAB_LOCAL_L(608) = r1_4;
      HS_SLAB_LOCAL_L(640) = r1_5;
      HS_SLAB_LOCAL_L(672) = r1_6;
      HS_SLAB_LOCAL_L(704) = r1_7;
      HS_SLAB_LOCAL_L(736) = r1_8;
      HS_SLAB_LOCAL_R(768) = r1_9;
      HS_SLAB_LOCAL_R(800) = r1_10;
      HS_SLAB_LOCAL_R(832) = r1_11;
      HS_SLAB_LOCAL_R(864) = r1_12;
      HS_SLAB_LOCAL_R(896) = r1_13;
      HS_SLAB_LOCAL_R(928) = r1_14;
      HS_SLAB_LOCAL_R(960) = r1_15;
      HS_SLAB_LOCAL_R(992) = r1_16;
    }
  }
  HS_BLOCK_BARRIER();
  r13 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r20 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r14 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r19 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r15 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r18 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r16 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r17 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r1;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r32;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r2;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r31;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r3;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r30;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r4;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r29;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8) = r5;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9) = r28;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10) = r6;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11) = r27;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_L(224);
      HS_KEY_TYPE r0_9 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r0_10 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r0_11 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r0_12 = HS_SLAB_LOCAL_L(352);
      HS_KEY_TYPE r0_13 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r0_14 = HS_SLAB_LOCAL_L(416);
      HS_KEY_TYPE r0_15 = HS_SLAB_LOCAL_L(448);
      HS_KEY_TYPE r0_16 = HS_SLAB_LOCAL_L(480);
      HS_KEY_TYPE r0_17 = HS_SLAB_LOCAL_R(512);
      HS_KEY_TYPE r0_18 = HS_SLAB_LOCAL_R(544);
      HS_KEY_TYPE r0_19 = HS_SLAB_LOCAL_R(576);
      HS_KEY_TYPE r0_20 = HS_SLAB_LOCAL_R(608);
      HS_KEY_TYPE r0_21 = HS_SLAB_LOCAL_R(640);
      HS_KEY_TYPE r0_22 = HS_SLAB_LOCAL_R(672);
      HS_KEY_TYPE r0_23 = HS_SLAB_LOCAL_R(704);
      HS_KEY_TYPE r0_24 = HS_SLAB_LOCAL_R(736);
      HS_KEY_TYPE r0_25 = HS_SLAB_LOCAL_R(768);
      HS_KEY_TYPE r0_26 = HS_SLAB_LOCAL_R(800);
      HS_KEY_TYPE r0_27 = HS_SLAB_LOCAL_R(832);
      HS_KEY_TYPE r0_28 = HS_SLAB_LOCAL_R(864);
      HS_KEY_TYPE r0_29 = HS_SLAB_LOCAL_R(896);
      HS_KEY_TYPE r0_30 = HS_SLAB_LOCAL_R(928);
      HS_KEY_TYPE r0_31 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r0_32 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r0_16, r0_17);
      HS_CMP_XCHG(r0_15, r0_18);
      HS_CMP_XCHG(r0_14, r0_19);
      HS_CMP_XCHG(r0_13, r0_20);
      HS_CMP_XCHG(r0_12, r0_21);
      HS_CMP_XCHG(r0_11, r0_22);
      HS_CMP_XCHG(r0_10, r0_23);
      HS_CMP_XCHG(r0_9, r0_24);
      HS_CMP_XCHG(r0_8, r0_25);
      HS_CMP_XCHG(r0_7, r0_26);
      HS_CMP_XCHG(r0_6, r0_27);
      HS_CMP_XCHG(r0_5, r0_28);
      HS_CMP_XCHG(r0_4, r0_29);
      HS_CMP_XCHG(r0_3, r0_30);
      HS_CMP_XCHG(r0_2, r0_31);
      HS_CMP_XCHG(r0_1, r0_32);
      HS_CMP_XCHG(r0_17, r0_25);
      HS_CMP_XCHG(r0_21, r0_29);
      HS_CMP_XCHG(r0_17, r0_21);
      HS_CMP_XCHG(r0_25, r0_29);
      HS_CMP_XCHG(r0_19, r0_27);
      HS_CMP_XCHG(r0_23, r0_31);
      HS_CMP_XCHG(r0_19, r0_23);
      HS_CMP_XCHG(r0_27, r0_31);
      HS_CMP_XCHG(r0_17, r0_19);
      HS_CMP_XCHG(r0_21, r0_23);
      HS_CMP_XCHG(r0_25, r0_27);
      HS_CMP_XCHG(r0_29, r0_31);
      HS_CMP_XCHG(r0_18, r0_26);
      HS_CMP_XCHG(r0_22, r0_30);
      HS_CMP_XCHG(r0_18, r0_22);
      HS_CMP_XCHG(r0_26, r0_30);
      HS_CMP_XCHG(r0_20, r0_28);
      HS_CMP_XCHG(r0_24, r0_32);
      HS_CMP_XCHG(r0_20, r0_24);
      HS_CMP_XCHG(r0_28, r0_32);
      HS_CMP_XCHG(r0_18, r0_20);
      HS_CMP_XCHG(r0_22, r0_24);
      HS_CMP_XCHG(r0_26, r0_28);
      HS_CMP_XCHG(r0_30, r0_32);
      HS_CMP_XCHG(r0_17, r0_18);
      HS_CMP_XCHG(r0_19, r0_20);
      HS_CMP_XCHG(r0_21, r0_22);
      HS_CMP_XCHG(r0_23, r0_24);
      HS_CMP_XCHG(r0_25, r0_26);
      HS_CMP_XCHG(r0_27, r0_28);
      HS_CMP_XCHG(r0_29, r0_30);
      HS_CMP_XCHG(r0_31, r0_32);
      HS_CMP_XCHG(r0_1, r0_9);
      HS_CMP_XCHG(r0_5, r0_13);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_3, r0_11);
      HS_CMP_XCHG(r0_7, r0_15);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_2, r0_10);
      HS_CMP_XCHG(r0_6, r0_14);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_4, r0_12);
      HS_CMP_XCHG(r0_8, r0_16);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_L(256) = r0_9;
      HS_SLAB_LOCAL_L(288) = r0_10;
      HS_SLAB_LOCAL_L(320) = r0_11;
      HS_SLAB_LOCAL_L(352) = r0_12;
      HS_SLAB_LOCAL_L(384) = r0_13;
      HS_SLAB_LOCAL_L(416) = r0_14;
      HS_SLAB_LOCAL_L(448) = r0_15;
      HS_SLAB_LOCAL_L(480) = r0_16;
      HS_SLAB_LOCAL_R(512) = r0_17;
      HS_SLAB_LOCAL_R(544) = r0_18;
      HS_SLAB_LOCAL_R(576) = r0_19;
      HS_SLAB_LOCAL_R(608) = r0_20;
      HS_SLAB_LOCAL_R(640) = r0_21;
      HS_SLAB_LOCAL_R(672) = r0_22;
      HS_SLAB_LOCAL_R(704) = r0_23;
      HS_SLAB_LOCAL_R(736) = r0_24;
      HS_SLAB_LOCAL_R(768) = r0_25;
      HS_SLAB_LOCAL_R(800) = r0_26;
      HS_SLAB_LOCAL_R(832) = r0_27;
      HS_SLAB_LOCAL_R(864) = r0_28;
      HS_SLAB_LOCAL_R(896) = r0_29;
      HS_SLAB_LOCAL_R(928) = r0_30;
      HS_SLAB_LOCAL_R(960) = r0_31;
      HS_SLAB_LOCAL_R(992) = r0_32;
    }
  }
  HS_BLOCK_BARRIER();
  r1 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r32 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r2 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r31 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r3 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r30 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r4 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r29 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  r5 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  r28 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  r6 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  r27 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r7;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r26;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r8;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r25;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r9;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r24;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r10;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r23;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8) = r11;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9) = r22;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10) = r12;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11) = r21;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_L(224);
      HS_KEY_TYPE r0_9 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r0_10 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r0_11 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r0_12 = HS_SLAB_LOCAL_L(352);
      HS_KEY_TYPE r0_13 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r0_14 = HS_SLAB_LOCAL_L(416);
      HS_KEY_TYPE r0_15 = HS_SLAB_LOCAL_L(448);
      HS_KEY_TYPE r0_16 = HS_SLAB_LOCAL_L(480);
      HS_KEY_TYPE r0_17 = HS_SLAB_LOCAL_R(512);
      HS_KEY_TYPE r0_18 = HS_SLAB_LOCAL_R(544);
      HS_KEY_TYPE r0_19 = HS_SLAB_LOCAL_R(576);
      HS_KEY_TYPE r0_20 = HS_SLAB_LOCAL_R(608);
      HS_KEY_TYPE r0_21 = HS_SLAB_LOCAL_R(640);
      HS_KEY_TYPE r0_22 = HS_SLAB_LOCAL_R(672);
      HS_KEY_TYPE r0_23 = HS_SLAB_LOCAL_R(704);
      HS_KEY_TYPE r0_24 = HS_SLAB_LOCAL_R(736);
      HS_KEY_TYPE r0_25 = HS_SLAB_LOCAL_R(768);
      HS_KEY_TYPE r0_26 = HS_SLAB_LOCAL_R(800);
      HS_KEY_TYPE r0_27 = HS_SLAB_LOCAL_R(832);
      HS_KEY_TYPE r0_28 = HS_SLAB_LOCAL_R(864);
      HS_KEY_TYPE r0_29 = HS_SLAB_LOCAL_R(896);
      HS_KEY_TYPE r0_30 = HS_SLAB_LOCAL_R(928);
      HS_KEY_TYPE r0_31 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r0_32 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r0_16, r0_17);
      HS_CMP_XCHG(r0_15, r0_18);
      HS_CMP_XCHG(r0_14, r0_19);
      HS_CMP_XCHG(r0_13, r0_20);
      HS_CMP_XCHG(r0_12, r0_21);
      HS_CMP_XCHG(r0_11, r0_22);
      HS_CMP_XCHG(r0_10, r0_23);
      HS_CMP_XCHG(r0_9, r0_24);
      HS_CMP_XCHG(r0_8, r0_25);
      HS_CMP_XCHG(r0_7, r0_26);
      HS_CMP_XCHG(r0_6, r0_27);
      HS_CMP_XCHG(r0_5, r0_28);
      HS_CMP_XCHG(r0_4, r0_29);
      HS_CMP_XCHG(r0_3, r0_30);
      HS_CMP_XCHG(r0_2, r0_31);
      HS_CMP_XCHG(r0_1, r0_32);
      HS_CMP_XCHG(r0_17, r0_25);
      HS_CMP_XCHG(r0_21, r0_29);
      HS_CMP_XCHG(r0_17, r0_21);
      HS_CMP_XCHG(r0_25, r0_29);
      HS_CMP_XCHG(r0_19, r0_27);
      HS_CMP_XCHG(r0_23, r0_31);
      HS_CMP_XCHG(r0_19, r0_23);
      HS_CMP_XCHG(r0_27, r0_31);
      HS_CMP_XCHG(r0_17, r0_19);
      HS_CMP_XCHG(r0_21, r0_23);
      HS_CMP_XCHG(r0_25, r0_27);
      HS_CMP_XCHG(r0_29, r0_31);
      HS_CMP_XCHG(r0_18, r0_26);
      HS_CMP_XCHG(r0_22, r0_30);
      HS_CMP_XCHG(r0_18, r0_22);
      HS_CMP_XCHG(r0_26, r0_30);
      HS_CMP_XCHG(r0_20, r0_28);
      HS_CMP_XCHG(r0_24, r0_32);
      HS_CMP_XCHG(r0_20, r0_24);
      HS_CMP_XCHG(r0_28, r0_32);
      HS_CMP_XCHG(r0_18, r0_20);
      HS_CMP_XCHG(r0_22, r0_24);
      HS_CMP_XCHG(r0_26, r0_28);
      HS_CMP_XCHG(r0_30, r0_32);
      HS_CMP_XCHG(r0_17, r0_18);
      HS_CMP_XCHG(r0_19, r0_20);
      HS_CMP_XCHG(r0_21, r0_22);
      HS_CMP_XCHG(r0_23, r0_24);
      HS_CMP_XCHG(r0_25, r0_26);
      HS_CMP_XCHG(r0_27, r0_28);
      HS_CMP_XCHG(r0_29, r0_30);
      HS_CMP_XCHG(r0_31, r0_32);
      HS_CMP_XCHG(r0_1, r0_9);
      HS_CMP_XCHG(r0_5, r0_13);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_3, r0_11);
      HS_CMP_XCHG(r0_7, r0_15);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_2, r0_10);
      HS_CMP_XCHG(r0_6, r0_14);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_4, r0_12);
      HS_CMP_XCHG(r0_8, r0_16);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_L(256) = r0_9;
      HS_SLAB_LOCAL_L(288) = r0_10;
      HS_SLAB_LOCAL_L(320) = r0_11;
      HS_SLAB_LOCAL_L(352) = r0_12;
      HS_SLAB_LOCAL_L(384) = r0_13;
      HS_SLAB_LOCAL_L(416) = r0_14;
      HS_SLAB_LOCAL_L(448) = r0_15;
      HS_SLAB_LOCAL_L(480) = r0_16;
      HS_SLAB_LOCAL_R(512) = r0_17;
      HS_SLAB_LOCAL_R(544) = r0_18;
      HS_SLAB_LOCAL_R(576) = r0_19;
      HS_SLAB_LOCAL_R(608) = r0_20;
      HS_SLAB_LOCAL_R(640) = r0_21;
      HS_SLAB_LOCAL_R(672) = r0_22;
      HS_SLAB_LOCAL_R(704) = r0_23;
      HS_SLAB_LOCAL_R(736) = r0_24;
      HS_SLAB_LOCAL_R(768) = r0_25;
      HS_SLAB_LOCAL_R(800) = r0_26;
      HS_SLAB_LOCAL_R(832) = r0_27;
      HS_SLAB_LOCAL_R(864) = r0_28;
      HS_SLAB_LOCAL_R(896) = r0_29;
      HS_SLAB_LOCAL_R(928) = r0_30;
      HS_SLAB_LOCAL_R(960) = r0_31;
      HS_SLAB_LOCAL_R(992) = r0_32;
    }
  }
  HS_BLOCK_BARRIER();
  r7 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r26 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r8 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r25 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r9 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r24 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r10 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r23 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  r11 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  r22 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  r12 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  r21 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0) = r13;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1) = r20;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2) = r14;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3) = r19;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4) = r15;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5) = r18;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6) = r16;
  HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7) = r17;
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_SLAB_LOCAL_L(0);
      HS_KEY_TYPE r0_2 = HS_SLAB_LOCAL_L(32);
      HS_KEY_TYPE r0_3 = HS_SLAB_LOCAL_L(64);
      HS_KEY_TYPE r0_4 = HS_SLAB_LOCAL_L(96);
      HS_KEY_TYPE r0_5 = HS_SLAB_LOCAL_L(128);
      HS_KEY_TYPE r0_6 = HS_SLAB_LOCAL_L(160);
      HS_KEY_TYPE r0_7 = HS_SLAB_LOCAL_L(192);
      HS_KEY_TYPE r0_8 = HS_SLAB_LOCAL_L(224);
      HS_KEY_TYPE r0_9 = HS_SLAB_LOCAL_L(256);
      HS_KEY_TYPE r0_10 = HS_SLAB_LOCAL_L(288);
      HS_KEY_TYPE r0_11 = HS_SLAB_LOCAL_L(320);
      HS_KEY_TYPE r0_12 = HS_SLAB_LOCAL_L(352);
      HS_KEY_TYPE r0_13 = HS_SLAB_LOCAL_L(384);
      HS_KEY_TYPE r0_14 = HS_SLAB_LOCAL_L(416);
      HS_KEY_TYPE r0_15 = HS_SLAB_LOCAL_L(448);
      HS_KEY_TYPE r0_16 = HS_SLAB_LOCAL_L(480);
      HS_KEY_TYPE r0_17 = HS_SLAB_LOCAL_R(512);
      HS_KEY_TYPE r0_18 = HS_SLAB_LOCAL_R(544);
      HS_KEY_TYPE r0_19 = HS_SLAB_LOCAL_R(576);
      HS_KEY_TYPE r0_20 = HS_SLAB_LOCAL_R(608);
      HS_KEY_TYPE r0_21 = HS_SLAB_LOCAL_R(640);
      HS_KEY_TYPE r0_22 = HS_SLAB_LOCAL_R(672);
      HS_KEY_TYPE r0_23 = HS_SLAB_LOCAL_R(704);
      HS_KEY_TYPE r0_24 = HS_SLAB_LOCAL_R(736);
      HS_KEY_TYPE r0_25 = HS_SLAB_LOCAL_R(768);
      HS_KEY_TYPE r0_26 = HS_SLAB_LOCAL_R(800);
      HS_KEY_TYPE r0_27 = HS_SLAB_LOCAL_R(832);
      HS_KEY_TYPE r0_28 = HS_SLAB_LOCAL_R(864);
      HS_KEY_TYPE r0_29 = HS_SLAB_LOCAL_R(896);
      HS_KEY_TYPE r0_30 = HS_SLAB_LOCAL_R(928);
      HS_KEY_TYPE r0_31 = HS_SLAB_LOCAL_R(960);
      HS_KEY_TYPE r0_32 = HS_SLAB_LOCAL_R(992);
      HS_CMP_XCHG(r0_16, r0_17);
      HS_CMP_XCHG(r0_15, r0_18);
      HS_CMP_XCHG(r0_14, r0_19);
      HS_CMP_XCHG(r0_13, r0_20);
      HS_CMP_XCHG(r0_12, r0_21);
      HS_CMP_XCHG(r0_11, r0_22);
      HS_CMP_XCHG(r0_10, r0_23);
      HS_CMP_XCHG(r0_9, r0_24);
      HS_CMP_XCHG(r0_8, r0_25);
      HS_CMP_XCHG(r0_7, r0_26);
      HS_CMP_XCHG(r0_6, r0_27);
      HS_CMP_XCHG(r0_5, r0_28);
      HS_CMP_XCHG(r0_4, r0_29);
      HS_CMP_XCHG(r0_3, r0_30);
      HS_CMP_XCHG(r0_2, r0_31);
      HS_CMP_XCHG(r0_1, r0_32);
      HS_CMP_XCHG(r0_17, r0_25);
      HS_CMP_XCHG(r0_21, r0_29);
      HS_CMP_XCHG(r0_17, r0_21);
      HS_CMP_XCHG(r0_25, r0_29);
      HS_CMP_XCHG(r0_19, r0_27);
      HS_CMP_XCHG(r0_23, r0_31);
      HS_CMP_XCHG(r0_19, r0_23);
      HS_CMP_XCHG(r0_27, r0_31);
      HS_CMP_XCHG(r0_17, r0_19);
      HS_CMP_XCHG(r0_21, r0_23);
      HS_CMP_XCHG(r0_25, r0_27);
      HS_CMP_XCHG(r0_29, r0_31);
      HS_CMP_XCHG(r0_18, r0_26);
      HS_CMP_XCHG(r0_22, r0_30);
      HS_CMP_XCHG(r0_18, r0_22);
      HS_CMP_XCHG(r0_26, r0_30);
      HS_CMP_XCHG(r0_20, r0_28);
      HS_CMP_XCHG(r0_24, r0_32);
      HS_CMP_XCHG(r0_20, r0_24);
      HS_CMP_XCHG(r0_28, r0_32);
      HS_CMP_XCHG(r0_18, r0_20);
      HS_CMP_XCHG(r0_22, r0_24);
      HS_CMP_XCHG(r0_26, r0_28);
      HS_CMP_XCHG(r0_30, r0_32);
      HS_CMP_XCHG(r0_17, r0_18);
      HS_CMP_XCHG(r0_19, r0_20);
      HS_CMP_XCHG(r0_21, r0_22);
      HS_CMP_XCHG(r0_23, r0_24);
      HS_CMP_XCHG(r0_25, r0_26);
      HS_CMP_XCHG(r0_27, r0_28);
      HS_CMP_XCHG(r0_29, r0_30);
      HS_CMP_XCHG(r0_31, r0_32);
      HS_CMP_XCHG(r0_1, r0_9);
      HS_CMP_XCHG(r0_5, r0_13);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_3, r0_11);
      HS_CMP_XCHG(r0_7, r0_15);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_2, r0_10);
      HS_CMP_XCHG(r0_6, r0_14);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_4, r0_12);
      HS_CMP_XCHG(r0_8, r0_16);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_L(256) = r0_9;
      HS_SLAB_LOCAL_L(288) = r0_10;
      HS_SLAB_LOCAL_L(320) = r0_11;
      HS_SLAB_LOCAL_L(352) = r0_12;
      HS_SLAB_LOCAL_L(384) = r0_13;
      HS_SLAB_LOCAL_L(416) = r0_14;
      HS_SLAB_LOCAL_L(448) = r0_15;
      HS_SLAB_LOCAL_L(480) = r0_16;
      HS_SLAB_LOCAL_R(512) = r0_17;
      HS_SLAB_LOCAL_R(544) = r0_18;
      HS_SLAB_LOCAL_R(576) = r0_19;
      HS_SLAB_LOCAL_R(608) = r0_20;
      HS_SLAB_LOCAL_R(640) = r0_21;
      HS_SLAB_LOCAL_R(672) = r0_22;
      HS_SLAB_LOCAL_R(704) = r0_23;
      HS_SLAB_LOCAL_R(736) = r0_24;
      HS_SLAB_LOCAL_R(768) = r0_25;
      HS_SLAB_LOCAL_R(800) = r0_26;
      HS_SLAB_LOCAL_R(832) = r0_27;
      HS_SLAB_LOCAL_R(864) = r0_28;
      HS_SLAB_LOCAL_R(896) = r0_29;
      HS_SLAB_LOCAL_R(928) = r0_30;
      HS_SLAB_LOCAL_R(960) = r0_31;
      HS_SLAB_LOCAL_R(992) = r0_32;
    }
  }
  HS_BLOCK_BARRIER();
  r13 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  r20 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  r14 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  r19 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  r15 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  r18 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  r16 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  r17 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_BC_KERNEL_PROTO(1, 0)
{
  HS_SLAB_GLOBAL_PREAMBLE();
  HS_KEY_TYPE r1 = HS_SLAB_GLOBAL_LOAD(vout, 0);
  HS_KEY_TYPE r2 = HS_SLAB_GLOBAL_LOAD(vout, 1);
  HS_KEY_TYPE r3 = HS_SLAB_GLOBAL_LOAD(vout, 2);
  HS_KEY_TYPE r4 = HS_SLAB_GLOBAL_LOAD(vout, 3);
  HS_KEY_TYPE r5 = HS_SLAB_GLOBAL_LOAD(vout, 4);
  HS_KEY_TYPE r6 = HS_SLAB_GLOBAL_LOAD(vout, 5);
  HS_KEY_TYPE r7 = HS_SLAB_GLOBAL_LOAD(vout, 6);
  HS_KEY_TYPE r8 = HS_SLAB_GLOBAL_LOAD(vout, 7);
  HS_KEY_TYPE r9 = HS_SLAB_GLOBAL_LOAD(vout, 8);
  HS_KEY_TYPE r10 = HS_SLAB_GLOBAL_LOAD(vout, 9);
  HS_KEY_TYPE r11 = HS_SLAB_GLOBAL_LOAD(vout, 10);
  HS_KEY_TYPE r12 = HS_SLAB_GLOBAL_LOAD(vout, 11);
  HS_KEY_TYPE r13 = HS_SLAB_GLOBAL_LOAD(vout, 12);
  HS_KEY_TYPE r14 = HS_SLAB_GLOBAL_LOAD(vout, 13);
  HS_KEY_TYPE r15 = HS_SLAB_GLOBAL_LOAD(vout, 14);
  HS_KEY_TYPE r16 = HS_SLAB_GLOBAL_LOAD(vout, 15);
  HS_KEY_TYPE r17 = HS_SLAB_GLOBAL_LOAD(vout, 16);
  HS_KEY_TYPE r18 = HS_SLAB_GLOBAL_LOAD(vout, 17);
  HS_KEY_TYPE r19 = HS_SLAB_GLOBAL_LOAD(vout, 18);
  HS_KEY_TYPE r20 = HS_SLAB_GLOBAL_LOAD(vout, 19);
  HS_KEY_TYPE r21 = HS_SLAB_GLOBAL_LOAD(vout, 20);
  HS_KEY_TYPE r22 = HS_SLAB_GLOBAL_LOAD(vout, 21);
  HS_KEY_TYPE r23 = HS_SLAB_GLOBAL_LOAD(vout, 22);
  HS_KEY_TYPE r24 = HS_SLAB_GLOBAL_LOAD(vout, 23);
  HS_KEY_TYPE r25 = HS_SLAB_GLOBAL_LOAD(vout, 24);
  HS_KEY_TYPE r26 = HS_SLAB_GLOBAL_LOAD(vout, 25);
  HS_KEY_TYPE r27 = HS_SLAB_GLOBAL_LOAD(vout, 26);
  HS_KEY_TYPE r28 = HS_SLAB_GLOBAL_LOAD(vout, 27);
  HS_KEY_TYPE r29 = HS_SLAB_GLOBAL_LOAD(vout, 28);
  HS_KEY_TYPE r30 = HS_SLAB_GLOBAL_LOAD(vout, 29);
  HS_KEY_TYPE r31 = HS_SLAB_GLOBAL_LOAD(vout, 30);
  HS_KEY_TYPE r32 = HS_SLAB_GLOBAL_LOAD(vout, 31);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_BC_KERNEL_PROTO(2, 1)
{
  HS_BLOCK_LOCAL_MEM_DECL(64, 16);

  HS_SLAB_GLOBAL_PREAMBLE();
  HS_BC_MERGE_H_PREAMBLE(2);
  {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(0);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(2);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(34);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(128) = r0_1;
      HS_SLAB_LOCAL_L(160) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(4);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(36);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(256) = r0_1;
      HS_SLAB_LOCAL_L(288) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(6);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(38);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(384) = r0_1;
      HS_SLAB_LOCAL_L(416) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(8);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(40);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(512) = r0_1;
      HS_SLAB_LOCAL_L(544) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(10);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(42);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(640) = r0_1;
      HS_SLAB_LOCAL_L(672) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(12);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(44);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(768) = r0_1;
      HS_SLAB_LOCAL_L(800) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(14);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(46);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(896) = r0_1;
      HS_SLAB_LOCAL_L(928) = r0_2;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r1 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r2 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r3 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r4 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r5 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r6 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r7 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r8 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 7);
  HS_KEY_TYPE r9 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 8);
  HS_KEY_TYPE r10 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 9);
  HS_KEY_TYPE r11 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 10);
  HS_KEY_TYPE r12 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 11);
  HS_KEY_TYPE r13 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 12);
  HS_KEY_TYPE r14 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 13);
  HS_KEY_TYPE r15 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 14);
  HS_KEY_TYPE r16 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 15);
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(16);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(48);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(18);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(50);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(128) = r0_1;
      HS_SLAB_LOCAL_L(160) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(20);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(52);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(256) = r0_1;
      HS_SLAB_LOCAL_L(288) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(22);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(54);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(384) = r0_1;
      HS_SLAB_LOCAL_L(416) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(24);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(56);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(512) = r0_1;
      HS_SLAB_LOCAL_L(544) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(26);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(58);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(640) = r0_1;
      HS_SLAB_LOCAL_L(672) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(28);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(60);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(768) = r0_1;
      HS_SLAB_LOCAL_L(800) = r0_2;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(30);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(62);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_SLAB_LOCAL_L(896) = r0_1;
      HS_SLAB_LOCAL_L(928) = r0_2;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r17 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r18 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r19 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r20 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r21 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r22 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r23 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r24 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 7);
  HS_KEY_TYPE r25 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 8);
  HS_KEY_TYPE r26 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 9);
  HS_KEY_TYPE r27 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 10);
  HS_KEY_TYPE r28 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 11);
  HS_KEY_TYPE r29 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 12);
  HS_KEY_TYPE r30 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 13);
  HS_KEY_TYPE r31 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 14);
  HS_KEY_TYPE r32 = HS_BX_LOCAL_V(2 * HS_SLAB_THREADS * 15);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_BC_KERNEL_PROTO(4, 2)
{
  HS_BLOCK_LOCAL_MEM_DECL(128, 16);

  HS_SLAB_GLOBAL_PREAMBLE();
  HS_BC_MERGE_H_PREAMBLE(4);
  {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(0);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(32);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(64);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(96);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(4);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(36);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(68);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(100);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(512) = r0_1;
      HS_SLAB_LOCAL_L(544) = r0_2;
      HS_SLAB_LOCAL_L(576) = r0_3;
      HS_SLAB_LOCAL_L(608) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(8);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(40);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(72);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(104);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(1024) = r0_1;
      HS_SLAB_LOCAL_L(1056) = r0_2;
      HS_SLAB_LOCAL_L(1088) = r0_3;
      HS_SLAB_LOCAL_L(1120) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(12);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(44);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(76);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(108);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(1536) = r0_1;
      HS_SLAB_LOCAL_L(1568) = r0_2;
      HS_SLAB_LOCAL_L(1600) = r0_3;
      HS_SLAB_LOCAL_L(1632) = r0_4;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r1 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r2 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r3 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r4 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r5 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r6 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r7 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r8 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 7);
  HS_KEY_TYPE r9 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 8);
  HS_KEY_TYPE r10 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 9);
  HS_KEY_TYPE r11 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 10);
  HS_KEY_TYPE r12 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 11);
  HS_KEY_TYPE r13 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 12);
  HS_KEY_TYPE r14 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 13);
  HS_KEY_TYPE r15 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 14);
  HS_KEY_TYPE r16 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 15);
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(16);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(48);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(80);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(112);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(20);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(52);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(84);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(116);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(512) = r0_1;
      HS_SLAB_LOCAL_L(544) = r0_2;
      HS_SLAB_LOCAL_L(576) = r0_3;
      HS_SLAB_LOCAL_L(608) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(24);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(56);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(88);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(120);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(1024) = r0_1;
      HS_SLAB_LOCAL_L(1056) = r0_2;
      HS_SLAB_LOCAL_L(1088) = r0_3;
      HS_SLAB_LOCAL_L(1120) = r0_4;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(28);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(60);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(92);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(124);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_SLAB_LOCAL_L(1536) = r0_1;
      HS_SLAB_LOCAL_L(1568) = r0_2;
      HS_SLAB_LOCAL_L(1600) = r0_3;
      HS_SLAB_LOCAL_L(1632) = r0_4;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r17 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r18 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r19 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r20 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r21 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r22 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r23 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r24 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 7);
  HS_KEY_TYPE r25 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 8);
  HS_KEY_TYPE r26 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 9);
  HS_KEY_TYPE r27 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 10);
  HS_KEY_TYPE r28 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 11);
  HS_KEY_TYPE r29 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 12);
  HS_KEY_TYPE r30 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 13);
  HS_KEY_TYPE r31 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 14);
  HS_KEY_TYPE r32 = HS_BX_LOCAL_V(4 * HS_SLAB_THREADS * 15);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_BC_KERNEL_PROTO(8, 3)
{
  HS_BLOCK_LOCAL_MEM_DECL(256, 16);

  HS_SLAB_GLOBAL_PREAMBLE();
  HS_BC_MERGE_H_PREAMBLE(8);
  {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(0);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(32);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(64);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(96);
      HS_KEY_TYPE r0_5 = HS_BC_GLOBAL_LOAD_L(128);
      HS_KEY_TYPE r0_6 = HS_BC_GLOBAL_LOAD_L(160);
      HS_KEY_TYPE r0_7 = HS_BC_GLOBAL_LOAD_L(192);
      HS_KEY_TYPE r0_8 = HS_BC_GLOBAL_LOAD_L(224);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(8);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(40);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(72);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(104);
      HS_KEY_TYPE r0_5 = HS_BC_GLOBAL_LOAD_L(136);
      HS_KEY_TYPE r0_6 = HS_BC_GLOBAL_LOAD_L(168);
      HS_KEY_TYPE r0_7 = HS_BC_GLOBAL_LOAD_L(200);
      HS_KEY_TYPE r0_8 = HS_BC_GLOBAL_LOAD_L(232);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_SLAB_LOCAL_L(2048) = r0_1;
      HS_SLAB_LOCAL_L(2080) = r0_2;
      HS_SLAB_LOCAL_L(2112) = r0_3;
      HS_SLAB_LOCAL_L(2144) = r0_4;
      HS_SLAB_LOCAL_L(2176) = r0_5;
      HS_SLAB_LOCAL_L(2208) = r0_6;
      HS_SLAB_LOCAL_L(2240) = r0_7;
      HS_SLAB_LOCAL_L(2272) = r0_8;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r1 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r2 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r3 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r4 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r5 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r6 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r7 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r8 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 7);
  HS_KEY_TYPE r9 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 8);
  HS_KEY_TYPE r10 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 9);
  HS_KEY_TYPE r11 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 10);
  HS_KEY_TYPE r12 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 11);
  HS_KEY_TYPE r13 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 12);
  HS_KEY_TYPE r14 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 13);
  HS_KEY_TYPE r15 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 14);
  HS_KEY_TYPE r16 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 15);
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(16);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(48);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(80);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(112);
      HS_KEY_TYPE r0_5 = HS_BC_GLOBAL_LOAD_L(144);
      HS_KEY_TYPE r0_6 = HS_BC_GLOBAL_LOAD_L(176);
      HS_KEY_TYPE r0_7 = HS_BC_GLOBAL_LOAD_L(208);
      HS_KEY_TYPE r0_8 = HS_BC_GLOBAL_LOAD_L(240);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
    }
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(24);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(56);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(88);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(120);
      HS_KEY_TYPE r0_5 = HS_BC_GLOBAL_LOAD_L(152);
      HS_KEY_TYPE r0_6 = HS_BC_GLOBAL_LOAD_L(184);
      HS_KEY_TYPE r0_7 = HS_BC_GLOBAL_LOAD_L(216);
      HS_KEY_TYPE r0_8 = HS_BC_GLOBAL_LOAD_L(248);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_SLAB_LOCAL_L(2048) = r0_1;
      HS_SLAB_LOCAL_L(2080) = r0_2;
      HS_SLAB_LOCAL_L(2112) = r0_3;
      HS_SLAB_LOCAL_L(2144) = r0_4;
      HS_SLAB_LOCAL_L(2176) = r0_5;
      HS_SLAB_LOCAL_L(2208) = r0_6;
      HS_SLAB_LOCAL_L(2240) = r0_7;
      HS_SLAB_LOCAL_L(2272) = r0_8;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r17 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r18 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r19 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r20 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r21 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r22 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r23 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r24 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 7);
  HS_KEY_TYPE r25 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 8);
  HS_KEY_TYPE r26 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 9);
  HS_KEY_TYPE r27 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 10);
  HS_KEY_TYPE r28 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 11);
  HS_KEY_TYPE r29 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 12);
  HS_KEY_TYPE r30 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 13);
  HS_KEY_TYPE r31 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 14);
  HS_KEY_TYPE r32 = HS_BX_LOCAL_V(8 * HS_SLAB_THREADS * 15);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_BC_KERNEL_PROTO(16, 4)
{
  HS_BLOCK_LOCAL_MEM_DECL(512, 16);

  HS_SLAB_GLOBAL_PREAMBLE();
  HS_BC_MERGE_H_PREAMBLE(16);
  {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(0);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(32);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(64);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(96);
      HS_KEY_TYPE r0_5 = HS_BC_GLOBAL_LOAD_L(128);
      HS_KEY_TYPE r0_6 = HS_BC_GLOBAL_LOAD_L(160);
      HS_KEY_TYPE r0_7 = HS_BC_GLOBAL_LOAD_L(192);
      HS_KEY_TYPE r0_8 = HS_BC_GLOBAL_LOAD_L(224);
      HS_KEY_TYPE r0_9 = HS_BC_GLOBAL_LOAD_L(256);
      HS_KEY_TYPE r0_10 = HS_BC_GLOBAL_LOAD_L(288);
      HS_KEY_TYPE r0_11 = HS_BC_GLOBAL_LOAD_L(320);
      HS_KEY_TYPE r0_12 = HS_BC_GLOBAL_LOAD_L(352);
      HS_KEY_TYPE r0_13 = HS_BC_GLOBAL_LOAD_L(384);
      HS_KEY_TYPE r0_14 = HS_BC_GLOBAL_LOAD_L(416);
      HS_KEY_TYPE r0_15 = HS_BC_GLOBAL_LOAD_L(448);
      HS_KEY_TYPE r0_16 = HS_BC_GLOBAL_LOAD_L(480);
      HS_CMP_XCHG(r0_1, r0_9);
      HS_CMP_XCHG(r0_5, r0_13);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_3, r0_11);
      HS_CMP_XCHG(r0_7, r0_15);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_2, r0_10);
      HS_CMP_XCHG(r0_6, r0_14);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_4, r0_12);
      HS_CMP_XCHG(r0_8, r0_16);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_L(256) = r0_9;
      HS_SLAB_LOCAL_L(288) = r0_10;
      HS_SLAB_LOCAL_L(320) = r0_11;
      HS_SLAB_LOCAL_L(352) = r0_12;
      HS_SLAB_LOCAL_L(384) = r0_13;
      HS_SLAB_LOCAL_L(416) = r0_14;
      HS_SLAB_LOCAL_L(448) = r0_15;
      HS_SLAB_LOCAL_L(480) = r0_16;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r1 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r2 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r3 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r4 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r5 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r6 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r7 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r8 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7);
  HS_KEY_TYPE r9 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 8);
  HS_KEY_TYPE r10 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 9);
  HS_KEY_TYPE r11 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 10);
  HS_KEY_TYPE r12 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 11);
  HS_KEY_TYPE r13 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 12);
  HS_KEY_TYPE r14 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 13);
  HS_KEY_TYPE r15 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 14);
  HS_KEY_TYPE r16 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 15);
  HS_BLOCK_BARRIER();
  {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(16);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(48);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(80);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(112);
      HS_KEY_TYPE r0_5 = HS_BC_GLOBAL_LOAD_L(144);
      HS_KEY_TYPE r0_6 = HS_BC_GLOBAL_LOAD_L(176);
      HS_KEY_TYPE r0_7 = HS_BC_GLOBAL_LOAD_L(208);
      HS_KEY_TYPE r0_8 = HS_BC_GLOBAL_LOAD_L(240);
      HS_KEY_TYPE r0_9 = HS_BC_GLOBAL_LOAD_L(272);
      HS_KEY_TYPE r0_10 = HS_BC_GLOBAL_LOAD_L(304);
      HS_KEY_TYPE r0_11 = HS_BC_GLOBAL_LOAD_L(336);
      HS_KEY_TYPE r0_12 = HS_BC_GLOBAL_LOAD_L(368);
      HS_KEY_TYPE r0_13 = HS_BC_GLOBAL_LOAD_L(400);
      HS_KEY_TYPE r0_14 = HS_BC_GLOBAL_LOAD_L(432);
      HS_KEY_TYPE r0_15 = HS_BC_GLOBAL_LOAD_L(464);
      HS_KEY_TYPE r0_16 = HS_BC_GLOBAL_LOAD_L(496);
      HS_CMP_XCHG(r0_1, r0_9);
      HS_CMP_XCHG(r0_5, r0_13);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_3, r0_11);
      HS_CMP_XCHG(r0_7, r0_15);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_2, r0_10);
      HS_CMP_XCHG(r0_6, r0_14);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_4, r0_12);
      HS_CMP_XCHG(r0_8, r0_16);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_L(256) = r0_9;
      HS_SLAB_LOCAL_L(288) = r0_10;
      HS_SLAB_LOCAL_L(320) = r0_11;
      HS_SLAB_LOCAL_L(352) = r0_12;
      HS_SLAB_LOCAL_L(384) = r0_13;
      HS_SLAB_LOCAL_L(416) = r0_14;
      HS_SLAB_LOCAL_L(448) = r0_15;
      HS_SLAB_LOCAL_L(480) = r0_16;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r17 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r18 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r19 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r20 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r21 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r22 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r23 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r24 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 7);
  HS_KEY_TYPE r25 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 8);
  HS_KEY_TYPE r26 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 9);
  HS_KEY_TYPE r27 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 10);
  HS_KEY_TYPE r28 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 11);
  HS_KEY_TYPE r29 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 12);
  HS_KEY_TYPE r30 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 13);
  HS_KEY_TYPE r31 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 14);
  HS_KEY_TYPE r32 = HS_BX_LOCAL_V(16 * HS_SLAB_THREADS * 15);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_BC_KERNEL_PROTO(32, 5)
{
  HS_BLOCK_LOCAL_MEM_DECL(1024, 12);

  HS_SLAB_GLOBAL_PREAMBLE();
  HS_BC_MERGE_H_PREAMBLE(32);
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(0);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(32);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(64);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(96);
      HS_KEY_TYPE r0_5 = HS_BC_GLOBAL_LOAD_L(128);
      HS_KEY_TYPE r0_6 = HS_BC_GLOBAL_LOAD_L(160);
      HS_KEY_TYPE r0_7 = HS_BC_GLOBAL_LOAD_L(192);
      HS_KEY_TYPE r0_8 = HS_BC_GLOBAL_LOAD_L(224);
      HS_KEY_TYPE r0_9 = HS_BC_GLOBAL_LOAD_L(256);
      HS_KEY_TYPE r0_10 = HS_BC_GLOBAL_LOAD_L(288);
      HS_KEY_TYPE r0_11 = HS_BC_GLOBAL_LOAD_L(320);
      HS_KEY_TYPE r0_12 = HS_BC_GLOBAL_LOAD_L(352);
      HS_KEY_TYPE r0_13 = HS_BC_GLOBAL_LOAD_L(384);
      HS_KEY_TYPE r0_14 = HS_BC_GLOBAL_LOAD_L(416);
      HS_KEY_TYPE r0_15 = HS_BC_GLOBAL_LOAD_L(448);
      HS_KEY_TYPE r0_16 = HS_BC_GLOBAL_LOAD_L(480);
      HS_KEY_TYPE r0_17 = HS_BC_GLOBAL_LOAD_L(512);
      HS_KEY_TYPE r0_18 = HS_BC_GLOBAL_LOAD_L(544);
      HS_KEY_TYPE r0_19 = HS_BC_GLOBAL_LOAD_L(576);
      HS_KEY_TYPE r0_20 = HS_BC_GLOBAL_LOAD_L(608);
      HS_KEY_TYPE r0_21 = HS_BC_GLOBAL_LOAD_L(640);
      HS_KEY_TYPE r0_22 = HS_BC_GLOBAL_LOAD_L(672);
      HS_KEY_TYPE r0_23 = HS_BC_GLOBAL_LOAD_L(704);
      HS_KEY_TYPE r0_24 = HS_BC_GLOBAL_LOAD_L(736);
      HS_KEY_TYPE r0_25 = HS_BC_GLOBAL_LOAD_L(768);
      HS_KEY_TYPE r0_26 = HS_BC_GLOBAL_LOAD_L(800);
      HS_KEY_TYPE r0_27 = HS_BC_GLOBAL_LOAD_L(832);
      HS_KEY_TYPE r0_28 = HS_BC_GLOBAL_LOAD_L(864);
      HS_KEY_TYPE r0_29 = HS_BC_GLOBAL_LOAD_L(896);
      HS_KEY_TYPE r0_30 = HS_BC_GLOBAL_LOAD_L(928);
      HS_KEY_TYPE r0_31 = HS_BC_GLOBAL_LOAD_L(960);
      HS_KEY_TYPE r0_32 = HS_BC_GLOBAL_LOAD_L(992);
      HS_CMP_XCHG(r0_1, r0_17);
      HS_CMP_XCHG(r0_9, r0_25);
      HS_CMP_XCHG(r0_1, r0_9);
      HS_CMP_XCHG(r0_17, r0_25);
      HS_CMP_XCHG(r0_5, r0_21);
      HS_CMP_XCHG(r0_13, r0_29);
      HS_CMP_XCHG(r0_5, r0_13);
      HS_CMP_XCHG(r0_21, r0_29);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_17, r0_21);
      HS_CMP_XCHG(r0_25, r0_29);
      HS_CMP_XCHG(r0_3, r0_19);
      HS_CMP_XCHG(r0_11, r0_27);
      HS_CMP_XCHG(r0_3, r0_11);
      HS_CMP_XCHG(r0_19, r0_27);
      HS_CMP_XCHG(r0_7, r0_23);
      HS_CMP_XCHG(r0_15, r0_31);
      HS_CMP_XCHG(r0_7, r0_15);
      HS_CMP_XCHG(r0_23, r0_31);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_19, r0_23);
      HS_CMP_XCHG(r0_27, r0_31);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_17, r0_19);
      HS_CMP_XCHG(r0_21, r0_23);
      HS_CMP_XCHG(r0_25, r0_27);
      HS_CMP_XCHG(r0_29, r0_31);
      HS_CMP_XCHG(r0_2, r0_18);
      HS_CMP_XCHG(r0_10, r0_26);
      HS_CMP_XCHG(r0_2, r0_10);
      HS_CMP_XCHG(r0_18, r0_26);
      HS_CMP_XCHG(r0_6, r0_22);
      HS_CMP_XCHG(r0_14, r0_30);
      HS_CMP_XCHG(r0_6, r0_14);
      HS_CMP_XCHG(r0_22, r0_30);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_18, r0_22);
      HS_CMP_XCHG(r0_26, r0_30);
      HS_CMP_XCHG(r0_4, r0_20);
      HS_CMP_XCHG(r0_12, r0_28);
      HS_CMP_XCHG(r0_4, r0_12);
      HS_CMP_XCHG(r0_20, r0_28);
      HS_CMP_XCHG(r0_8, r0_24);
      HS_CMP_XCHG(r0_16, r0_32);
      HS_CMP_XCHG(r0_8, r0_16);
      HS_CMP_XCHG(r0_24, r0_32);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_20, r0_24);
      HS_CMP_XCHG(r0_28, r0_32);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_18, r0_20);
      HS_CMP_XCHG(r0_22, r0_24);
      HS_CMP_XCHG(r0_26, r0_28);
      HS_CMP_XCHG(r0_30, r0_32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_CMP_XCHG(r0_17, r0_18);
      HS_CMP_XCHG(r0_19, r0_20);
      HS_CMP_XCHG(r0_21, r0_22);
      HS_CMP_XCHG(r0_23, r0_24);
      HS_CMP_XCHG(r0_25, r0_26);
      HS_CMP_XCHG(r0_27, r0_28);
      HS_CMP_XCHG(r0_29, r0_30);
      HS_CMP_XCHG(r0_31, r0_32);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_L(256) = r0_9;
      HS_SLAB_LOCAL_L(288) = r0_10;
      HS_SLAB_LOCAL_L(320) = r0_11;
      HS_SLAB_LOCAL_L(352) = r0_12;
      HS_SLAB_LOCAL_L(384) = r0_13;
      HS_SLAB_LOCAL_L(416) = r0_14;
      HS_SLAB_LOCAL_L(448) = r0_15;
      HS_SLAB_LOCAL_L(480) = r0_16;
      HS_SLAB_LOCAL_L(512) = r0_17;
      HS_SLAB_LOCAL_L(544) = r0_18;
      HS_SLAB_LOCAL_L(576) = r0_19;
      HS_SLAB_LOCAL_L(608) = r0_20;
      HS_SLAB_LOCAL_L(640) = r0_21;
      HS_SLAB_LOCAL_L(672) = r0_22;
      HS_SLAB_LOCAL_L(704) = r0_23;
      HS_SLAB_LOCAL_L(736) = r0_24;
      HS_SLAB_LOCAL_L(768) = r0_25;
      HS_SLAB_LOCAL_L(800) = r0_26;
      HS_SLAB_LOCAL_L(832) = r0_27;
      HS_SLAB_LOCAL_L(864) = r0_28;
      HS_SLAB_LOCAL_L(896) = r0_29;
      HS_SLAB_LOCAL_L(928) = r0_30;
      HS_SLAB_LOCAL_L(960) = r0_31;
      HS_SLAB_LOCAL_L(992) = r0_32;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r1 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r2 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r3 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r4 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r5 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r6 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r7 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r8 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  HS_KEY_TYPE r9 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  HS_KEY_TYPE r10 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  HS_KEY_TYPE r11 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  HS_KEY_TYPE r12 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 12) {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(12);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(44);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(76);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(108);
      HS_KEY_TYPE r0_5 = HS_BC_GLOBAL_LOAD_L(140);
      HS_KEY_TYPE r0_6 = HS_BC_GLOBAL_LOAD_L(172);
      HS_KEY_TYPE r0_7 = HS_BC_GLOBAL_LOAD_L(204);
      HS_KEY_TYPE r0_8 = HS_BC_GLOBAL_LOAD_L(236);
      HS_KEY_TYPE r0_9 = HS_BC_GLOBAL_LOAD_L(268);
      HS_KEY_TYPE r0_10 = HS_BC_GLOBAL_LOAD_L(300);
      HS_KEY_TYPE r0_11 = HS_BC_GLOBAL_LOAD_L(332);
      HS_KEY_TYPE r0_12 = HS_BC_GLOBAL_LOAD_L(364);
      HS_KEY_TYPE r0_13 = HS_BC_GLOBAL_LOAD_L(396);
      HS_KEY_TYPE r0_14 = HS_BC_GLOBAL_LOAD_L(428);
      HS_KEY_TYPE r0_15 = HS_BC_GLOBAL_LOAD_L(460);
      HS_KEY_TYPE r0_16 = HS_BC_GLOBAL_LOAD_L(492);
      HS_KEY_TYPE r0_17 = HS_BC_GLOBAL_LOAD_L(524);
      HS_KEY_TYPE r0_18 = HS_BC_GLOBAL_LOAD_L(556);
      HS_KEY_TYPE r0_19 = HS_BC_GLOBAL_LOAD_L(588);
      HS_KEY_TYPE r0_20 = HS_BC_GLOBAL_LOAD_L(620);
      HS_KEY_TYPE r0_21 = HS_BC_GLOBAL_LOAD_L(652);
      HS_KEY_TYPE r0_22 = HS_BC_GLOBAL_LOAD_L(684);
      HS_KEY_TYPE r0_23 = HS_BC_GLOBAL_LOAD_L(716);
      HS_KEY_TYPE r0_24 = HS_BC_GLOBAL_LOAD_L(748);
      HS_KEY_TYPE r0_25 = HS_BC_GLOBAL_LOAD_L(780);
      HS_KEY_TYPE r0_26 = HS_BC_GLOBAL_LOAD_L(812);
      HS_KEY_TYPE r0_27 = HS_BC_GLOBAL_LOAD_L(844);
      HS_KEY_TYPE r0_28 = HS_BC_GLOBAL_LOAD_L(876);
      HS_KEY_TYPE r0_29 = HS_BC_GLOBAL_LOAD_L(908);
      HS_KEY_TYPE r0_30 = HS_BC_GLOBAL_LOAD_L(940);
      HS_KEY_TYPE r0_31 = HS_BC_GLOBAL_LOAD_L(972);
      HS_KEY_TYPE r0_32 = HS_BC_GLOBAL_LOAD_L(1004);
      HS_CMP_XCHG(r0_1, r0_17);
      HS_CMP_XCHG(r0_9, r0_25);
      HS_CMP_XCHG(r0_1, r0_9);
      HS_CMP_XCHG(r0_17, r0_25);
      HS_CMP_XCHG(r0_5, r0_21);
      HS_CMP_XCHG(r0_13, r0_29);
      HS_CMP_XCHG(r0_5, r0_13);
      HS_CMP_XCHG(r0_21, r0_29);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_17, r0_21);
      HS_CMP_XCHG(r0_25, r0_29);
      HS_CMP_XCHG(r0_3, r0_19);
      HS_CMP_XCHG(r0_11, r0_27);
      HS_CMP_XCHG(r0_3, r0_11);
      HS_CMP_XCHG(r0_19, r0_27);
      HS_CMP_XCHG(r0_7, r0_23);
      HS_CMP_XCHG(r0_15, r0_31);
      HS_CMP_XCHG(r0_7, r0_15);
      HS_CMP_XCHG(r0_23, r0_31);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_19, r0_23);
      HS_CMP_XCHG(r0_27, r0_31);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_17, r0_19);
      HS_CMP_XCHG(r0_21, r0_23);
      HS_CMP_XCHG(r0_25, r0_27);
      HS_CMP_XCHG(r0_29, r0_31);
      HS_CMP_XCHG(r0_2, r0_18);
      HS_CMP_XCHG(r0_10, r0_26);
      HS_CMP_XCHG(r0_2, r0_10);
      HS_CMP_XCHG(r0_18, r0_26);
      HS_CMP_XCHG(r0_6, r0_22);
      HS_CMP_XCHG(r0_14, r0_30);
      HS_CMP_XCHG(r0_6, r0_14);
      HS_CMP_XCHG(r0_22, r0_30);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_18, r0_22);
      HS_CMP_XCHG(r0_26, r0_30);
      HS_CMP_XCHG(r0_4, r0_20);
      HS_CMP_XCHG(r0_12, r0_28);
      HS_CMP_XCHG(r0_4, r0_12);
      HS_CMP_XCHG(r0_20, r0_28);
      HS_CMP_XCHG(r0_8, r0_24);
      HS_CMP_XCHG(r0_16, r0_32);
      HS_CMP_XCHG(r0_8, r0_16);
      HS_CMP_XCHG(r0_24, r0_32);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_20, r0_24);
      HS_CMP_XCHG(r0_28, r0_32);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_18, r0_20);
      HS_CMP_XCHG(r0_22, r0_24);
      HS_CMP_XCHG(r0_26, r0_28);
      HS_CMP_XCHG(r0_30, r0_32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_CMP_XCHG(r0_17, r0_18);
      HS_CMP_XCHG(r0_19, r0_20);
      HS_CMP_XCHG(r0_21, r0_22);
      HS_CMP_XCHG(r0_23, r0_24);
      HS_CMP_XCHG(r0_25, r0_26);
      HS_CMP_XCHG(r0_27, r0_28);
      HS_CMP_XCHG(r0_29, r0_30);
      HS_CMP_XCHG(r0_31, r0_32);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_L(256) = r0_9;
      HS_SLAB_LOCAL_L(288) = r0_10;
      HS_SLAB_LOCAL_L(320) = r0_11;
      HS_SLAB_LOCAL_L(352) = r0_12;
      HS_SLAB_LOCAL_L(384) = r0_13;
      HS_SLAB_LOCAL_L(416) = r0_14;
      HS_SLAB_LOCAL_L(448) = r0_15;
      HS_SLAB_LOCAL_L(480) = r0_16;
      HS_SLAB_LOCAL_L(512) = r0_17;
      HS_SLAB_LOCAL_L(544) = r0_18;
      HS_SLAB_LOCAL_L(576) = r0_19;
      HS_SLAB_LOCAL_L(608) = r0_20;
      HS_SLAB_LOCAL_L(640) = r0_21;
      HS_SLAB_LOCAL_L(672) = r0_22;
      HS_SLAB_LOCAL_L(704) = r0_23;
      HS_SLAB_LOCAL_L(736) = r0_24;
      HS_SLAB_LOCAL_L(768) = r0_25;
      HS_SLAB_LOCAL_L(800) = r0_26;
      HS_SLAB_LOCAL_L(832) = r0_27;
      HS_SLAB_LOCAL_L(864) = r0_28;
      HS_SLAB_LOCAL_L(896) = r0_29;
      HS_SLAB_LOCAL_L(928) = r0_30;
      HS_SLAB_LOCAL_L(960) = r0_31;
      HS_SLAB_LOCAL_L(992) = r0_32;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r13 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r14 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r15 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r16 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r17 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r18 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r19 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r20 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  HS_KEY_TYPE r21 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 8);
  HS_KEY_TYPE r22 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 9);
  HS_KEY_TYPE r23 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 10);
  HS_KEY_TYPE r24 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 11);
  HS_BLOCK_BARRIER();
  if (HS_WARP_ID_X() < 8) {
    {
      HS_KEY_TYPE r0_1 = HS_BC_GLOBAL_LOAD_L(24);
      HS_KEY_TYPE r0_2 = HS_BC_GLOBAL_LOAD_L(56);
      HS_KEY_TYPE r0_3 = HS_BC_GLOBAL_LOAD_L(88);
      HS_KEY_TYPE r0_4 = HS_BC_GLOBAL_LOAD_L(120);
      HS_KEY_TYPE r0_5 = HS_BC_GLOBAL_LOAD_L(152);
      HS_KEY_TYPE r0_6 = HS_BC_GLOBAL_LOAD_L(184);
      HS_KEY_TYPE r0_7 = HS_BC_GLOBAL_LOAD_L(216);
      HS_KEY_TYPE r0_8 = HS_BC_GLOBAL_LOAD_L(248);
      HS_KEY_TYPE r0_9 = HS_BC_GLOBAL_LOAD_L(280);
      HS_KEY_TYPE r0_10 = HS_BC_GLOBAL_LOAD_L(312);
      HS_KEY_TYPE r0_11 = HS_BC_GLOBAL_LOAD_L(344);
      HS_KEY_TYPE r0_12 = HS_BC_GLOBAL_LOAD_L(376);
      HS_KEY_TYPE r0_13 = HS_BC_GLOBAL_LOAD_L(408);
      HS_KEY_TYPE r0_14 = HS_BC_GLOBAL_LOAD_L(440);
      HS_KEY_TYPE r0_15 = HS_BC_GLOBAL_LOAD_L(472);
      HS_KEY_TYPE r0_16 = HS_BC_GLOBAL_LOAD_L(504);
      HS_KEY_TYPE r0_17 = HS_BC_GLOBAL_LOAD_L(536);
      HS_KEY_TYPE r0_18 = HS_BC_GLOBAL_LOAD_L(568);
      HS_KEY_TYPE r0_19 = HS_BC_GLOBAL_LOAD_L(600);
      HS_KEY_TYPE r0_20 = HS_BC_GLOBAL_LOAD_L(632);
      HS_KEY_TYPE r0_21 = HS_BC_GLOBAL_LOAD_L(664);
      HS_KEY_TYPE r0_22 = HS_BC_GLOBAL_LOAD_L(696);
      HS_KEY_TYPE r0_23 = HS_BC_GLOBAL_LOAD_L(728);
      HS_KEY_TYPE r0_24 = HS_BC_GLOBAL_LOAD_L(760);
      HS_KEY_TYPE r0_25 = HS_BC_GLOBAL_LOAD_L(792);
      HS_KEY_TYPE r0_26 = HS_BC_GLOBAL_LOAD_L(824);
      HS_KEY_TYPE r0_27 = HS_BC_GLOBAL_LOAD_L(856);
      HS_KEY_TYPE r0_28 = HS_BC_GLOBAL_LOAD_L(888);
      HS_KEY_TYPE r0_29 = HS_BC_GLOBAL_LOAD_L(920);
      HS_KEY_TYPE r0_30 = HS_BC_GLOBAL_LOAD_L(952);
      HS_KEY_TYPE r0_31 = HS_BC_GLOBAL_LOAD_L(984);
      HS_KEY_TYPE r0_32 = HS_BC_GLOBAL_LOAD_L(1016);
      HS_CMP_XCHG(r0_1, r0_17);
      HS_CMP_XCHG(r0_9, r0_25);
      HS_CMP_XCHG(r0_1, r0_9);
      HS_CMP_XCHG(r0_17, r0_25);
      HS_CMP_XCHG(r0_5, r0_21);
      HS_CMP_XCHG(r0_13, r0_29);
      HS_CMP_XCHG(r0_5, r0_13);
      HS_CMP_XCHG(r0_21, r0_29);
      HS_CMP_XCHG(r0_1, r0_5);
      HS_CMP_XCHG(r0_9, r0_13);
      HS_CMP_XCHG(r0_17, r0_21);
      HS_CMP_XCHG(r0_25, r0_29);
      HS_CMP_XCHG(r0_3, r0_19);
      HS_CMP_XCHG(r0_11, r0_27);
      HS_CMP_XCHG(r0_3, r0_11);
      HS_CMP_XCHG(r0_19, r0_27);
      HS_CMP_XCHG(r0_7, r0_23);
      HS_CMP_XCHG(r0_15, r0_31);
      HS_CMP_XCHG(r0_7, r0_15);
      HS_CMP_XCHG(r0_23, r0_31);
      HS_CMP_XCHG(r0_3, r0_7);
      HS_CMP_XCHG(r0_11, r0_15);
      HS_CMP_XCHG(r0_19, r0_23);
      HS_CMP_XCHG(r0_27, r0_31);
      HS_CMP_XCHG(r0_1, r0_3);
      HS_CMP_XCHG(r0_5, r0_7);
      HS_CMP_XCHG(r0_9, r0_11);
      HS_CMP_XCHG(r0_13, r0_15);
      HS_CMP_XCHG(r0_17, r0_19);
      HS_CMP_XCHG(r0_21, r0_23);
      HS_CMP_XCHG(r0_25, r0_27);
      HS_CMP_XCHG(r0_29, r0_31);
      HS_CMP_XCHG(r0_2, r0_18);
      HS_CMP_XCHG(r0_10, r0_26);
      HS_CMP_XCHG(r0_2, r0_10);
      HS_CMP_XCHG(r0_18, r0_26);
      HS_CMP_XCHG(r0_6, r0_22);
      HS_CMP_XCHG(r0_14, r0_30);
      HS_CMP_XCHG(r0_6, r0_14);
      HS_CMP_XCHG(r0_22, r0_30);
      HS_CMP_XCHG(r0_2, r0_6);
      HS_CMP_XCHG(r0_10, r0_14);
      HS_CMP_XCHG(r0_18, r0_22);
      HS_CMP_XCHG(r0_26, r0_30);
      HS_CMP_XCHG(r0_4, r0_20);
      HS_CMP_XCHG(r0_12, r0_28);
      HS_CMP_XCHG(r0_4, r0_12);
      HS_CMP_XCHG(r0_20, r0_28);
      HS_CMP_XCHG(r0_8, r0_24);
      HS_CMP_XCHG(r0_16, r0_32);
      HS_CMP_XCHG(r0_8, r0_16);
      HS_CMP_XCHG(r0_24, r0_32);
      HS_CMP_XCHG(r0_4, r0_8);
      HS_CMP_XCHG(r0_12, r0_16);
      HS_CMP_XCHG(r0_20, r0_24);
      HS_CMP_XCHG(r0_28, r0_32);
      HS_CMP_XCHG(r0_2, r0_4);
      HS_CMP_XCHG(r0_6, r0_8);
      HS_CMP_XCHG(r0_10, r0_12);
      HS_CMP_XCHG(r0_14, r0_16);
      HS_CMP_XCHG(r0_18, r0_20);
      HS_CMP_XCHG(r0_22, r0_24);
      HS_CMP_XCHG(r0_26, r0_28);
      HS_CMP_XCHG(r0_30, r0_32);
      HS_CMP_XCHG(r0_1, r0_2);
      HS_CMP_XCHG(r0_3, r0_4);
      HS_CMP_XCHG(r0_5, r0_6);
      HS_CMP_XCHG(r0_7, r0_8);
      HS_CMP_XCHG(r0_9, r0_10);
      HS_CMP_XCHG(r0_11, r0_12);
      HS_CMP_XCHG(r0_13, r0_14);
      HS_CMP_XCHG(r0_15, r0_16);
      HS_CMP_XCHG(r0_17, r0_18);
      HS_CMP_XCHG(r0_19, r0_20);
      HS_CMP_XCHG(r0_21, r0_22);
      HS_CMP_XCHG(r0_23, r0_24);
      HS_CMP_XCHG(r0_25, r0_26);
      HS_CMP_XCHG(r0_27, r0_28);
      HS_CMP_XCHG(r0_29, r0_30);
      HS_CMP_XCHG(r0_31, r0_32);
      HS_SLAB_LOCAL_L(0) = r0_1;
      HS_SLAB_LOCAL_L(32) = r0_2;
      HS_SLAB_LOCAL_L(64) = r0_3;
      HS_SLAB_LOCAL_L(96) = r0_4;
      HS_SLAB_LOCAL_L(128) = r0_5;
      HS_SLAB_LOCAL_L(160) = r0_6;
      HS_SLAB_LOCAL_L(192) = r0_7;
      HS_SLAB_LOCAL_L(224) = r0_8;
      HS_SLAB_LOCAL_L(256) = r0_9;
      HS_SLAB_LOCAL_L(288) = r0_10;
      HS_SLAB_LOCAL_L(320) = r0_11;
      HS_SLAB_LOCAL_L(352) = r0_12;
      HS_SLAB_LOCAL_L(384) = r0_13;
      HS_SLAB_LOCAL_L(416) = r0_14;
      HS_SLAB_LOCAL_L(448) = r0_15;
      HS_SLAB_LOCAL_L(480) = r0_16;
      HS_SLAB_LOCAL_L(512) = r0_17;
      HS_SLAB_LOCAL_L(544) = r0_18;
      HS_SLAB_LOCAL_L(576) = r0_19;
      HS_SLAB_LOCAL_L(608) = r0_20;
      HS_SLAB_LOCAL_L(640) = r0_21;
      HS_SLAB_LOCAL_L(672) = r0_22;
      HS_SLAB_LOCAL_L(704) = r0_23;
      HS_SLAB_LOCAL_L(736) = r0_24;
      HS_SLAB_LOCAL_L(768) = r0_25;
      HS_SLAB_LOCAL_L(800) = r0_26;
      HS_SLAB_LOCAL_L(832) = r0_27;
      HS_SLAB_LOCAL_L(864) = r0_28;
      HS_SLAB_LOCAL_L(896) = r0_29;
      HS_SLAB_LOCAL_L(928) = r0_30;
      HS_SLAB_LOCAL_L(960) = r0_31;
      HS_SLAB_LOCAL_L(992) = r0_32;
    }
  }
  HS_BLOCK_BARRIER();
  HS_KEY_TYPE r25 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 0);
  HS_KEY_TYPE r26 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 1);
  HS_KEY_TYPE r27 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 2);
  HS_KEY_TYPE r28 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 3);
  HS_KEY_TYPE r29 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 4);
  HS_KEY_TYPE r30 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 5);
  HS_KEY_TYPE r31 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 6);
  HS_KEY_TYPE r32 = HS_BX_LOCAL_V(32 * HS_SLAB_THREADS * 7);
  {
    {
      HS_SLAB_HALF_PREAMBLE(16);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(8);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(4);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(2);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    {
      HS_SLAB_HALF_PREAMBLE(1);
      HS_CMP_HALF(0, r1);
      HS_CMP_HALF(1, r2);
      HS_CMP_HALF(2, r3);
      HS_CMP_HALF(3, r4);
      HS_CMP_HALF(4, r5);
      HS_CMP_HALF(5, r6);
      HS_CMP_HALF(6, r7);
      HS_CMP_HALF(7, r8);
      HS_CMP_HALF(8, r9);
      HS_CMP_HALF(9, r10);
      HS_CMP_HALF(10, r11);
      HS_CMP_HALF(11, r12);
      HS_CMP_HALF(12, r13);
      HS_CMP_HALF(13, r14);
      HS_CMP_HALF(14, r15);
      HS_CMP_HALF(15, r16);
      HS_CMP_HALF(16, r17);
      HS_CMP_HALF(17, r18);
      HS_CMP_HALF(18, r19);
      HS_CMP_HALF(19, r20);
      HS_CMP_HALF(20, r21);
      HS_CMP_HALF(21, r22);
      HS_CMP_HALF(22, r23);
      HS_CMP_HALF(23, r24);
      HS_CMP_HALF(24, r25);
      HS_CMP_HALF(25, r26);
      HS_CMP_HALF(26, r27);
      HS_CMP_HALF(27, r28);
      HS_CMP_HALF(28, r29);
      HS_CMP_HALF(29, r30);
      HS_CMP_HALF(30, r31);
      HS_CMP_HALF(31, r32);
    }
    HS_CMP_XCHG(r1, r17);
    HS_CMP_XCHG(r9, r25);
    HS_CMP_XCHG(r1, r9);
    HS_CMP_XCHG(r17, r25);
    HS_CMP_XCHG(r5, r21);
    HS_CMP_XCHG(r13, r29);
    HS_CMP_XCHG(r5, r13);
    HS_CMP_XCHG(r21, r29);
    HS_CMP_XCHG(r1, r5);
    HS_CMP_XCHG(r9, r13);
    HS_CMP_XCHG(r17, r21);
    HS_CMP_XCHG(r25, r29);
    HS_CMP_XCHG(r3, r19);
    HS_CMP_XCHG(r11, r27);
    HS_CMP_XCHG(r3, r11);
    HS_CMP_XCHG(r19, r27);
    HS_CMP_XCHG(r7, r23);
    HS_CMP_XCHG(r15, r31);
    HS_CMP_XCHG(r7, r15);
    HS_CMP_XCHG(r23, r31);
    HS_CMP_XCHG(r3, r7);
    HS_CMP_XCHG(r11, r15);
    HS_CMP_XCHG(r19, r23);
    HS_CMP_XCHG(r27, r31);
    HS_CMP_XCHG(r1, r3);
    HS_CMP_XCHG(r5, r7);
    HS_CMP_XCHG(r9, r11);
    HS_CMP_XCHG(r13, r15);
    HS_CMP_XCHG(r17, r19);
    HS_CMP_XCHG(r21, r23);
    HS_CMP_XCHG(r25, r27);
    HS_CMP_XCHG(r29, r31);
    HS_CMP_XCHG(r2, r18);
    HS_CMP_XCHG(r10, r26);
    HS_CMP_XCHG(r2, r10);
    HS_CMP_XCHG(r18, r26);
    HS_CMP_XCHG(r6, r22);
    HS_CMP_XCHG(r14, r30);
    HS_CMP_XCHG(r6, r14);
    HS_CMP_XCHG(r22, r30);
    HS_CMP_XCHG(r2, r6);
    HS_CMP_XCHG(r10, r14);
    HS_CMP_XCHG(r18, r22);
    HS_CMP_XCHG(r26, r30);
    HS_CMP_XCHG(r4, r20);
    HS_CMP_XCHG(r12, r28);
    HS_CMP_XCHG(r4, r12);
    HS_CMP_XCHG(r20, r28);
    HS_CMP_XCHG(r8, r24);
    HS_CMP_XCHG(r16, r32);
    HS_CMP_XCHG(r8, r16);
    HS_CMP_XCHG(r24, r32);
    HS_CMP_XCHG(r4, r8);
    HS_CMP_XCHG(r12, r16);
    HS_CMP_XCHG(r20, r24);
    HS_CMP_XCHG(r28, r32);
    HS_CMP_XCHG(r2, r4);
    HS_CMP_XCHG(r6, r8);
    HS_CMP_XCHG(r10, r12);
    HS_CMP_XCHG(r14, r16);
    HS_CMP_XCHG(r18, r20);
    HS_CMP_XCHG(r22, r24);
    HS_CMP_XCHG(r26, r28);
    HS_CMP_XCHG(r30, r32);
    HS_CMP_XCHG(r1, r2);
    HS_CMP_XCHG(r3, r4);
    HS_CMP_XCHG(r5, r6);
    HS_CMP_XCHG(r7, r8);
    HS_CMP_XCHG(r9, r10);
    HS_CMP_XCHG(r11, r12);
    HS_CMP_XCHG(r13, r14);
    HS_CMP_XCHG(r15, r16);
    HS_CMP_XCHG(r17, r18);
    HS_CMP_XCHG(r19, r20);
    HS_CMP_XCHG(r21, r22);
    HS_CMP_XCHG(r23, r24);
    HS_CMP_XCHG(r25, r26);
    HS_CMP_XCHG(r27, r28);
    HS_CMP_XCHG(r29, r30);
    HS_CMP_XCHG(r31, r32);
  }
  HS_SLAB_GLOBAL_STORE(0, r1);
  HS_SLAB_GLOBAL_STORE(1, r2);
  HS_SLAB_GLOBAL_STORE(2, r3);
  HS_SLAB_GLOBAL_STORE(3, r4);
  HS_SLAB_GLOBAL_STORE(4, r5);
  HS_SLAB_GLOBAL_STORE(5, r6);
  HS_SLAB_GLOBAL_STORE(6, r7);
  HS_SLAB_GLOBAL_STORE(7, r8);
  HS_SLAB_GLOBAL_STORE(8, r9);
  HS_SLAB_GLOBAL_STORE(9, r10);
  HS_SLAB_GLOBAL_STORE(10, r11);
  HS_SLAB_GLOBAL_STORE(11, r12);
  HS_SLAB_GLOBAL_STORE(12, r13);
  HS_SLAB_GLOBAL_STORE(13, r14);
  HS_SLAB_GLOBAL_STORE(14, r15);
  HS_SLAB_GLOBAL_STORE(15, r16);
  HS_SLAB_GLOBAL_STORE(16, r17);
  HS_SLAB_GLOBAL_STORE(17, r18);
  HS_SLAB_GLOBAL_STORE(18, r19);
  HS_SLAB_GLOBAL_STORE(19, r20);
  HS_SLAB_GLOBAL_STORE(20, r21);
  HS_SLAB_GLOBAL_STORE(21, r22);
  HS_SLAB_GLOBAL_STORE(22, r23);
  HS_SLAB_GLOBAL_STORE(23, r24);
  HS_SLAB_GLOBAL_STORE(24, r25);
  HS_SLAB_GLOBAL_STORE(25, r26);
  HS_SLAB_GLOBAL_STORE(26, r27);
  HS_SLAB_GLOBAL_STORE(27, r28);
  HS_SLAB_GLOBAL_STORE(28, r29);
  HS_SLAB_GLOBAL_STORE(29, r30);
  HS_SLAB_GLOBAL_STORE(30, r31);
  HS_SLAB_GLOBAL_STORE(31, r32);
}

HS_OFFSET_FM_KERNEL_PROTO(1, 0)
{
  HS_OFFSET_FM_PREAMBLE(32);
  HS_KEY_TYPE r1 = HS_XM_GLOBAL_LOAD_L(0);
  HS_KEY_TYPE r2 = HS_XM_GLOBAL_LOAD_L(1);
  HS_KEY_TYPE r3 = HS_XM_GLOBAL_LOAD_L(2);
  HS_KEY_TYPE r4 = HS_XM_GLOBAL_LOAD_L(3);
  HS_KEY_TYPE r5 = HS_XM_GLOBAL_LOAD_L(4);
  HS_KEY_TYPE r6 = HS_XM_GLOBAL_LOAD_L(5);
  HS_KEY_TYPE r7 = HS_XM_GLOBAL_LOAD_L(6);
  HS_KEY_TYPE r8 = HS_XM_GLOBAL_LOAD_L(7);
  HS_KEY_TYPE r9 = HS_XM_GLOBAL_LOAD_L(8);
  HS_KEY_TYPE r10 = HS_XM_GLOBAL_LOAD_L(9);
  HS_KEY_TYPE r11 = HS_XM_GLOBAL_LOAD_L(10);
  HS_KEY_TYPE r12 = HS_XM_GLOBAL_LOAD_L(11);
  HS_KEY_TYPE r13 = HS_XM_GLOBAL_LOAD_L(12);
  HS_KEY_TYPE r14 = HS_XM_GLOBAL_LOAD_L(13);
  HS_KEY_TYPE r15 = HS_XM_GLOBAL_LOAD_L(14);
  HS_KEY_TYPE r16 = HS_XM_GLOBAL_LOAD_L(15);
  HS_KEY_TYPE r17 = HS_XM_GLOBAL_LOAD_L(16);
  HS_KEY_TYPE r18 = HS_XM_GLOBAL_LOAD_L(17);
  HS_KEY_TYPE r19 = HS_XM_GLOBAL_LOAD_L(18);
  HS_KEY_TYPE r20 = HS_XM_GLOBAL_LOAD_L(19);
  HS_KEY_TYPE r21 = HS_XM_GLOBAL_LOAD_L(20);
  HS_KEY_TYPE r22 = HS_XM_GLOBAL_LOAD_L(21);
  HS_KEY_TYPE r23 = HS_XM_GLOBAL_LOAD_L(22);
  HS_KEY_TYPE r24 = HS_XM_GLOBAL_LOAD_L(23);
  HS_KEY_TYPE r25 = HS_XM_GLOBAL_LOAD_L(24);
  HS_KEY_TYPE r26 = HS_XM_GLOBAL_LOAD_L(25);
  HS_KEY_TYPE r27 = HS_XM_GLOBAL_LOAD_L(26);
  HS_KEY_TYPE r28 = HS_XM_GLOBAL_LOAD_L(27);
  HS_KEY_TYPE r29 = HS_XM_GLOBAL_LOAD_L(28);
  HS_KEY_TYPE r30 = HS_XM_GLOBAL_LOAD_L(29);
  HS_KEY_TYPE r31 = HS_XM_GLOBAL_LOAD_L(30);
  HS_KEY_TYPE r32 = HS_XM_GLOBAL_LOAD_L(31);
  HS_KEY_TYPE r33 = HS_FM_GLOBAL_LOAD_R(0);
  HS_CMP_XCHG(r32, r33);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_XM_GLOBAL_STORE_L(0, r1);
  HS_XM_GLOBAL_STORE_L(1, r2);
  HS_XM_GLOBAL_STORE_L(2, r3);
  HS_XM_GLOBAL_STORE_L(3, r4);
  HS_XM_GLOBAL_STORE_L(4, r5);
  HS_XM_GLOBAL_STORE_L(5, r6);
  HS_XM_GLOBAL_STORE_L(6, r7);
  HS_XM_GLOBAL_STORE_L(7, r8);
  HS_XM_GLOBAL_STORE_L(8, r9);
  HS_XM_GLOBAL_STORE_L(9, r10);
  HS_XM_GLOBAL_STORE_L(10, r11);
  HS_XM_GLOBAL_STORE_L(11, r12);
  HS_XM_GLOBAL_STORE_L(12, r13);
  HS_XM_GLOBAL_STORE_L(13, r14);
  HS_XM_GLOBAL_STORE_L(14, r15);
  HS_XM_GLOBAL_STORE_L(15, r16);
  HS_XM_GLOBAL_STORE_L(16, r17);
  HS_XM_GLOBAL_STORE_L(17, r18);
  HS_XM_GLOBAL_STORE_L(18, r19);
  HS_XM_GLOBAL_STORE_L(19, r20);
  HS_XM_GLOBAL_STORE_L(20, r21);
  HS_XM_GLOBAL_STORE_L(21, r22);
  HS_XM_GLOBAL_STORE_L(22, r23);
  HS_XM_GLOBAL_STORE_L(23, r24);
  HS_XM_GLOBAL_STORE_L(24, r25);
  HS_XM_GLOBAL_STORE_L(25, r26);
  HS_XM_GLOBAL_STORE_L(26, r27);
  HS_XM_GLOBAL_STORE_L(27, r28);
  HS_XM_GLOBAL_STORE_L(28, r29);
  HS_XM_GLOBAL_STORE_L(29, r30);
  HS_XM_GLOBAL_STORE_L(30, r31);
  HS_XM_GLOBAL_STORE_L(31, r32);
  HS_FM_GLOBAL_STORE_R(0, r33);
}

HS_OFFSET_FM_KERNEL_PROTO(1, 1)
{
  HS_OFFSET_FM_PREAMBLE(32);
  HS_KEY_TYPE r1 = HS_XM_GLOBAL_LOAD_L(0);
  HS_KEY_TYPE r2 = HS_XM_GLOBAL_LOAD_L(1);
  HS_KEY_TYPE r3 = HS_XM_GLOBAL_LOAD_L(2);
  HS_KEY_TYPE r4 = HS_XM_GLOBAL_LOAD_L(3);
  HS_KEY_TYPE r5 = HS_XM_GLOBAL_LOAD_L(4);
  HS_KEY_TYPE r6 = HS_XM_GLOBAL_LOAD_L(5);
  HS_KEY_TYPE r7 = HS_XM_GLOBAL_LOAD_L(6);
  HS_KEY_TYPE r8 = HS_XM_GLOBAL_LOAD_L(7);
  HS_KEY_TYPE r9 = HS_XM_GLOBAL_LOAD_L(8);
  HS_KEY_TYPE r10 = HS_XM_GLOBAL_LOAD_L(9);
  HS_KEY_TYPE r11 = HS_XM_GLOBAL_LOAD_L(10);
  HS_KEY_TYPE r12 = HS_XM_GLOBAL_LOAD_L(11);
  HS_KEY_TYPE r13 = HS_XM_GLOBAL_LOAD_L(12);
  HS_KEY_TYPE r14 = HS_XM_GLOBAL_LOAD_L(13);
  HS_KEY_TYPE r15 = HS_XM_GLOBAL_LOAD_L(14);
  HS_KEY_TYPE r16 = HS_XM_GLOBAL_LOAD_L(15);
  HS_KEY_TYPE r17 = HS_XM_GLOBAL_LOAD_L(16);
  HS_KEY_TYPE r18 = HS_XM_GLOBAL_LOAD_L(17);
  HS_KEY_TYPE r19 = HS_XM_GLOBAL_LOAD_L(18);
  HS_KEY_TYPE r20 = HS_XM_GLOBAL_LOAD_L(19);
  HS_KEY_TYPE r21 = HS_XM_GLOBAL_LOAD_L(20);
  HS_KEY_TYPE r22 = HS_XM_GLOBAL_LOAD_L(21);
  HS_KEY_TYPE r23 = HS_XM_GLOBAL_LOAD_L(22);
  HS_KEY_TYPE r24 = HS_XM_GLOBAL_LOAD_L(23);
  HS_KEY_TYPE r25 = HS_XM_GLOBAL_LOAD_L(24);
  HS_KEY_TYPE r26 = HS_XM_GLOBAL_LOAD_L(25);
  HS_KEY_TYPE r27 = HS_XM_GLOBAL_LOAD_L(26);
  HS_KEY_TYPE r28 = HS_XM_GLOBAL_LOAD_L(27);
  HS_KEY_TYPE r29 = HS_XM_GLOBAL_LOAD_L(28);
  HS_KEY_TYPE r30 = HS_XM_GLOBAL_LOAD_L(29);
  HS_KEY_TYPE r31 = HS_XM_GLOBAL_LOAD_L(30);
  HS_KEY_TYPE r32 = HS_XM_GLOBAL_LOAD_L(31);
  HS_KEY_TYPE r33 = HS_FM_GLOBAL_LOAD_R(0);
  HS_KEY_TYPE r34 = HS_FM_GLOBAL_LOAD_R(1);
  HS_CMP_XCHG(r32, r33);
  HS_CMP_XCHG(r31, r34);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r33, r34);
  HS_XM_GLOBAL_STORE_L(0, r1);
  HS_XM_GLOBAL_STORE_L(1, r2);
  HS_XM_GLOBAL_STORE_L(2, r3);
  HS_XM_GLOBAL_STORE_L(3, r4);
  HS_XM_GLOBAL_STORE_L(4, r5);
  HS_XM_GLOBAL_STORE_L(5, r6);
  HS_XM_GLOBAL_STORE_L(6, r7);
  HS_XM_GLOBAL_STORE_L(7, r8);
  HS_XM_GLOBAL_STORE_L(8, r9);
  HS_XM_GLOBAL_STORE_L(9, r10);
  HS_XM_GLOBAL_STORE_L(10, r11);
  HS_XM_GLOBAL_STORE_L(11, r12);
  HS_XM_GLOBAL_STORE_L(12, r13);
  HS_XM_GLOBAL_STORE_L(13, r14);
  HS_XM_GLOBAL_STORE_L(14, r15);
  HS_XM_GLOBAL_STORE_L(15, r16);
  HS_XM_GLOBAL_STORE_L(16, r17);
  HS_XM_GLOBAL_STORE_L(17, r18);
  HS_XM_GLOBAL_STORE_L(18, r19);
  HS_XM_GLOBAL_STORE_L(19, r20);
  HS_XM_GLOBAL_STORE_L(20, r21);
  HS_XM_GLOBAL_STORE_L(21, r22);
  HS_XM_GLOBAL_STORE_L(22, r23);
  HS_XM_GLOBAL_STORE_L(23, r24);
  HS_XM_GLOBAL_STORE_L(24, r25);
  HS_XM_GLOBAL_STORE_L(25, r26);
  HS_XM_GLOBAL_STORE_L(26, r27);
  HS_XM_GLOBAL_STORE_L(27, r28);
  HS_XM_GLOBAL_STORE_L(28, r29);
  HS_XM_GLOBAL_STORE_L(29, r30);
  HS_XM_GLOBAL_STORE_L(30, r31);
  HS_XM_GLOBAL_STORE_L(31, r32);
  HS_FM_GLOBAL_STORE_R(0, r33);
  HS_FM_GLOBAL_STORE_R(1, r34);
}

HS_OFFSET_FM_KERNEL_PROTO(1, 2)
{
  HS_OFFSET_FM_PREAMBLE(32);
  HS_KEY_TYPE r1 = HS_XM_GLOBAL_LOAD_L(0);
  HS_KEY_TYPE r2 = HS_XM_GLOBAL_LOAD_L(1);
  HS_KEY_TYPE r3 = HS_XM_GLOBAL_LOAD_L(2);
  HS_KEY_TYPE r4 = HS_XM_GLOBAL_LOAD_L(3);
  HS_KEY_TYPE r5 = HS_XM_GLOBAL_LOAD_L(4);
  HS_KEY_TYPE r6 = HS_XM_GLOBAL_LOAD_L(5);
  HS_KEY_TYPE r7 = HS_XM_GLOBAL_LOAD_L(6);
  HS_KEY_TYPE r8 = HS_XM_GLOBAL_LOAD_L(7);
  HS_KEY_TYPE r9 = HS_XM_GLOBAL_LOAD_L(8);
  HS_KEY_TYPE r10 = HS_XM_GLOBAL_LOAD_L(9);
  HS_KEY_TYPE r11 = HS_XM_GLOBAL_LOAD_L(10);
  HS_KEY_TYPE r12 = HS_XM_GLOBAL_LOAD_L(11);
  HS_KEY_TYPE r13 = HS_XM_GLOBAL_LOAD_L(12);
  HS_KEY_TYPE r14 = HS_XM_GLOBAL_LOAD_L(13);
  HS_KEY_TYPE r15 = HS_XM_GLOBAL_LOAD_L(14);
  HS_KEY_TYPE r16 = HS_XM_GLOBAL_LOAD_L(15);
  HS_KEY_TYPE r17 = HS_XM_GLOBAL_LOAD_L(16);
  HS_KEY_TYPE r18 = HS_XM_GLOBAL_LOAD_L(17);
  HS_KEY_TYPE r19 = HS_XM_GLOBAL_LOAD_L(18);
  HS_KEY_TYPE r20 = HS_XM_GLOBAL_LOAD_L(19);
  HS_KEY_TYPE r21 = HS_XM_GLOBAL_LOAD_L(20);
  HS_KEY_TYPE r22 = HS_XM_GLOBAL_LOAD_L(21);
  HS_KEY_TYPE r23 = HS_XM_GLOBAL_LOAD_L(22);
  HS_KEY_TYPE r24 = HS_XM_GLOBAL_LOAD_L(23);
  HS_KEY_TYPE r25 = HS_XM_GLOBAL_LOAD_L(24);
  HS_KEY_TYPE r26 = HS_XM_GLOBAL_LOAD_L(25);
  HS_KEY_TYPE r27 = HS_XM_GLOBAL_LOAD_L(26);
  HS_KEY_TYPE r28 = HS_XM_GLOBAL_LOAD_L(27);
  HS_KEY_TYPE r29 = HS_XM_GLOBAL_LOAD_L(28);
  HS_KEY_TYPE r30 = HS_XM_GLOBAL_LOAD_L(29);
  HS_KEY_TYPE r31 = HS_XM_GLOBAL_LOAD_L(30);
  HS_KEY_TYPE r32 = HS_XM_GLOBAL_LOAD_L(31);
  HS_KEY_TYPE r33 = HS_FM_GLOBAL_LOAD_R(0);
  HS_KEY_TYPE r34 = HS_FM_GLOBAL_LOAD_R(1);
  HS_KEY_TYPE r35 = HS_FM_GLOBAL_LOAD_R(2);
  HS_KEY_TYPE r36 = HS_FM_GLOBAL_LOAD_R(3);
  HS_CMP_XCHG(r32, r33);
  HS_CMP_XCHG(r31, r34);
  HS_CMP_XCHG(r30, r35);
  HS_CMP_XCHG(r29, r36);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r33, r35);
  HS_CMP_XCHG(r34, r36);
  HS_CMP_XCHG(r33, r34);
  HS_CMP_XCHG(r35, r36);
  HS_XM_GLOBAL_STORE_L(0, r1);
  HS_XM_GLOBAL_STORE_L(1, r2);
  HS_XM_GLOBAL_STORE_L(2, r3);
  HS_XM_GLOBAL_STORE_L(3, r4);
  HS_XM_GLOBAL_STORE_L(4, r5);
  HS_XM_GLOBAL_STORE_L(5, r6);
  HS_XM_GLOBAL_STORE_L(6, r7);
  HS_XM_GLOBAL_STORE_L(7, r8);
  HS_XM_GLOBAL_STORE_L(8, r9);
  HS_XM_GLOBAL_STORE_L(9, r10);
  HS_XM_GLOBAL_STORE_L(10, r11);
  HS_XM_GLOBAL_STORE_L(11, r12);
  HS_XM_GLOBAL_STORE_L(12, r13);
  HS_XM_GLOBAL_STORE_L(13, r14);
  HS_XM_GLOBAL_STORE_L(14, r15);
  HS_XM_GLOBAL_STORE_L(15, r16);
  HS_XM_GLOBAL_STORE_L(16, r17);
  HS_XM_GLOBAL_STORE_L(17, r18);
  HS_XM_GLOBAL_STORE_L(18, r19);
  HS_XM_GLOBAL_STORE_L(19, r20);
  HS_XM_GLOBAL_STORE_L(20, r21);
  HS_XM_GLOBAL_STORE_L(21, r22);
  HS_XM_GLOBAL_STORE_L(22, r23);
  HS_XM_GLOBAL_STORE_L(23, r24);
  HS_XM_GLOBAL_STORE_L(24, r25);
  HS_XM_GLOBAL_STORE_L(25, r26);
  HS_XM_GLOBAL_STORE_L(26, r27);
  HS_XM_GLOBAL_STORE_L(27, r28);
  HS_XM_GLOBAL_STORE_L(28, r29);
  HS_XM_GLOBAL_STORE_L(29, r30);
  HS_XM_GLOBAL_STORE_L(30, r31);
  HS_XM_GLOBAL_STORE_L(31, r32);
  HS_FM_GLOBAL_STORE_R(0, r33);
  HS_FM_GLOBAL_STORE_R(1, r34);
  HS_FM_GLOBAL_STORE_R(2, r35);
  HS_FM_GLOBAL_STORE_R(3, r36);
}

HS_OFFSET_FM_KERNEL_PROTO(1, 3)
{
  HS_OFFSET_FM_PREAMBLE(32);
  HS_KEY_TYPE r1 = HS_XM_GLOBAL_LOAD_L(0);
  HS_KEY_TYPE r2 = HS_XM_GLOBAL_LOAD_L(1);
  HS_KEY_TYPE r3 = HS_XM_GLOBAL_LOAD_L(2);
  HS_KEY_TYPE r4 = HS_XM_GLOBAL_LOAD_L(3);
  HS_KEY_TYPE r5 = HS_XM_GLOBAL_LOAD_L(4);
  HS_KEY_TYPE r6 = HS_XM_GLOBAL_LOAD_L(5);
  HS_KEY_TYPE r7 = HS_XM_GLOBAL_LOAD_L(6);
  HS_KEY_TYPE r8 = HS_XM_GLOBAL_LOAD_L(7);
  HS_KEY_TYPE r9 = HS_XM_GLOBAL_LOAD_L(8);
  HS_KEY_TYPE r10 = HS_XM_GLOBAL_LOAD_L(9);
  HS_KEY_TYPE r11 = HS_XM_GLOBAL_LOAD_L(10);
  HS_KEY_TYPE r12 = HS_XM_GLOBAL_LOAD_L(11);
  HS_KEY_TYPE r13 = HS_XM_GLOBAL_LOAD_L(12);
  HS_KEY_TYPE r14 = HS_XM_GLOBAL_LOAD_L(13);
  HS_KEY_TYPE r15 = HS_XM_GLOBAL_LOAD_L(14);
  HS_KEY_TYPE r16 = HS_XM_GLOBAL_LOAD_L(15);
  HS_KEY_TYPE r17 = HS_XM_GLOBAL_LOAD_L(16);
  HS_KEY_TYPE r18 = HS_XM_GLOBAL_LOAD_L(17);
  HS_KEY_TYPE r19 = HS_XM_GLOBAL_LOAD_L(18);
  HS_KEY_TYPE r20 = HS_XM_GLOBAL_LOAD_L(19);
  HS_KEY_TYPE r21 = HS_XM_GLOBAL_LOAD_L(20);
  HS_KEY_TYPE r22 = HS_XM_GLOBAL_LOAD_L(21);
  HS_KEY_TYPE r23 = HS_XM_GLOBAL_LOAD_L(22);
  HS_KEY_TYPE r24 = HS_XM_GLOBAL_LOAD_L(23);
  HS_KEY_TYPE r25 = HS_XM_GLOBAL_LOAD_L(24);
  HS_KEY_TYPE r26 = HS_XM_GLOBAL_LOAD_L(25);
  HS_KEY_TYPE r27 = HS_XM_GLOBAL_LOAD_L(26);
  HS_KEY_TYPE r28 = HS_XM_GLOBAL_LOAD_L(27);
  HS_KEY_TYPE r29 = HS_XM_GLOBAL_LOAD_L(28);
  HS_KEY_TYPE r30 = HS_XM_GLOBAL_LOAD_L(29);
  HS_KEY_TYPE r31 = HS_XM_GLOBAL_LOAD_L(30);
  HS_KEY_TYPE r32 = HS_XM_GLOBAL_LOAD_L(31);
  HS_KEY_TYPE r33 = HS_FM_GLOBAL_LOAD_R(0);
  HS_KEY_TYPE r34 = HS_FM_GLOBAL_LOAD_R(1);
  HS_KEY_TYPE r35 = HS_FM_GLOBAL_LOAD_R(2);
  HS_KEY_TYPE r36 = HS_FM_GLOBAL_LOAD_R(3);
  HS_KEY_TYPE r37 = HS_FM_GLOBAL_LOAD_R(4);
  HS_KEY_TYPE r38 = HS_FM_GLOBAL_LOAD_R(5);
  HS_KEY_TYPE r39 = HS_FM_GLOBAL_LOAD_R(6);
  HS_KEY_TYPE r40 = HS_FM_GLOBAL_LOAD_R(7);
  HS_CMP_XCHG(r32, r33);
  HS_CMP_XCHG(r31, r34);
  HS_CMP_XCHG(r30, r35);
  HS_CMP_XCHG(r29, r36);
  HS_CMP_XCHG(r28, r37);
  HS_CMP_XCHG(r27, r38);
  HS_CMP_XCHG(r26, r39);
  HS_CMP_XCHG(r25, r40);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r33, r37);
  HS_CMP_XCHG(r35, r39);
  HS_CMP_XCHG(r33, r35);
  HS_CMP_XCHG(r37, r39);
  HS_CMP_XCHG(r34, r38);
  HS_CMP_XCHG(r36, r40);
  HS_CMP_XCHG(r34, r36);
  HS_CMP_XCHG(r38, r40);
  HS_CMP_XCHG(r33, r34);
  HS_CMP_XCHG(r35, r36);
  HS_CMP_XCHG(r37, r38);
  HS_CMP_XCHG(r39, r40);
  HS_XM_GLOBAL_STORE_L(0, r1);
  HS_XM_GLOBAL_STORE_L(1, r2);
  HS_XM_GLOBAL_STORE_L(2, r3);
  HS_XM_GLOBAL_STORE_L(3, r4);
  HS_XM_GLOBAL_STORE_L(4, r5);
  HS_XM_GLOBAL_STORE_L(5, r6);
  HS_XM_GLOBAL_STORE_L(6, r7);
  HS_XM_GLOBAL_STORE_L(7, r8);
  HS_XM_GLOBAL_STORE_L(8, r9);
  HS_XM_GLOBAL_STORE_L(9, r10);
  HS_XM_GLOBAL_STORE_L(10, r11);
  HS_XM_GLOBAL_STORE_L(11, r12);
  HS_XM_GLOBAL_STORE_L(12, r13);
  HS_XM_GLOBAL_STORE_L(13, r14);
  HS_XM_GLOBAL_STORE_L(14, r15);
  HS_XM_GLOBAL_STORE_L(15, r16);
  HS_XM_GLOBAL_STORE_L(16, r17);
  HS_XM_GLOBAL_STORE_L(17, r18);
  HS_XM_GLOBAL_STORE_L(18, r19);
  HS_XM_GLOBAL_STORE_L(19, r20);
  HS_XM_GLOBAL_STORE_L(20, r21);
  HS_XM_GLOBAL_STORE_L(21, r22);
  HS_XM_GLOBAL_STORE_L(22, r23);
  HS_XM_GLOBAL_STORE_L(23, r24);
  HS_XM_GLOBAL_STORE_L(24, r25);
  HS_XM_GLOBAL_STORE_L(25, r26);
  HS_XM_GLOBAL_STORE_L(26, r27);
  HS_XM_GLOBAL_STORE_L(27, r28);
  HS_XM_GLOBAL_STORE_L(28, r29);
  HS_XM_GLOBAL_STORE_L(29, r30);
  HS_XM_GLOBAL_STORE_L(30, r31);
  HS_XM_GLOBAL_STORE_L(31, r32);
  HS_FM_GLOBAL_STORE_R(0, r33);
  HS_FM_GLOBAL_STORE_R(1, r34);
  HS_FM_GLOBAL_STORE_R(2, r35);
  HS_FM_GLOBAL_STORE_R(3, r36);
  HS_FM_GLOBAL_STORE_R(4, r37);
  HS_FM_GLOBAL_STORE_R(5, r38);
  HS_FM_GLOBAL_STORE_R(6, r39);
  HS_FM_GLOBAL_STORE_R(7, r40);
}

HS_OFFSET_FM_KERNEL_PROTO(1, 4)
{
  HS_OFFSET_FM_PREAMBLE(32);
  HS_KEY_TYPE r1 = HS_XM_GLOBAL_LOAD_L(0);
  HS_KEY_TYPE r2 = HS_XM_GLOBAL_LOAD_L(1);
  HS_KEY_TYPE r3 = HS_XM_GLOBAL_LOAD_L(2);
  HS_KEY_TYPE r4 = HS_XM_GLOBAL_LOAD_L(3);
  HS_KEY_TYPE r5 = HS_XM_GLOBAL_LOAD_L(4);
  HS_KEY_TYPE r6 = HS_XM_GLOBAL_LOAD_L(5);
  HS_KEY_TYPE r7 = HS_XM_GLOBAL_LOAD_L(6);
  HS_KEY_TYPE r8 = HS_XM_GLOBAL_LOAD_L(7);
  HS_KEY_TYPE r9 = HS_XM_GLOBAL_LOAD_L(8);
  HS_KEY_TYPE r10 = HS_XM_GLOBAL_LOAD_L(9);
  HS_KEY_TYPE r11 = HS_XM_GLOBAL_LOAD_L(10);
  HS_KEY_TYPE r12 = HS_XM_GLOBAL_LOAD_L(11);
  HS_KEY_TYPE r13 = HS_XM_GLOBAL_LOAD_L(12);
  HS_KEY_TYPE r14 = HS_XM_GLOBAL_LOAD_L(13);
  HS_KEY_TYPE r15 = HS_XM_GLOBAL_LOAD_L(14);
  HS_KEY_TYPE r16 = HS_XM_GLOBAL_LOAD_L(15);
  HS_KEY_TYPE r17 = HS_XM_GLOBAL_LOAD_L(16);
  HS_KEY_TYPE r18 = HS_XM_GLOBAL_LOAD_L(17);
  HS_KEY_TYPE r19 = HS_XM_GLOBAL_LOAD_L(18);
  HS_KEY_TYPE r20 = HS_XM_GLOBAL_LOAD_L(19);
  HS_KEY_TYPE r21 = HS_XM_GLOBAL_LOAD_L(20);
  HS_KEY_TYPE r22 = HS_XM_GLOBAL_LOAD_L(21);
  HS_KEY_TYPE r23 = HS_XM_GLOBAL_LOAD_L(22);
  HS_KEY_TYPE r24 = HS_XM_GLOBAL_LOAD_L(23);
  HS_KEY_TYPE r25 = HS_XM_GLOBAL_LOAD_L(24);
  HS_KEY_TYPE r26 = HS_XM_GLOBAL_LOAD_L(25);
  HS_KEY_TYPE r27 = HS_XM_GLOBAL_LOAD_L(26);
  HS_KEY_TYPE r28 = HS_XM_GLOBAL_LOAD_L(27);
  HS_KEY_TYPE r29 = HS_XM_GLOBAL_LOAD_L(28);
  HS_KEY_TYPE r30 = HS_XM_GLOBAL_LOAD_L(29);
  HS_KEY_TYPE r31 = HS_XM_GLOBAL_LOAD_L(30);
  HS_KEY_TYPE r32 = HS_XM_GLOBAL_LOAD_L(31);
  HS_KEY_TYPE r33 = HS_FM_GLOBAL_LOAD_R(0);
  HS_KEY_TYPE r34 = HS_FM_GLOBAL_LOAD_R(1);
  HS_KEY_TYPE r35 = HS_FM_GLOBAL_LOAD_R(2);
  HS_KEY_TYPE r36 = HS_FM_GLOBAL_LOAD_R(3);
  HS_KEY_TYPE r37 = HS_FM_GLOBAL_LOAD_R(4);
  HS_KEY_TYPE r38 = HS_FM_GLOBAL_LOAD_R(5);
  HS_KEY_TYPE r39 = HS_FM_GLOBAL_LOAD_R(6);
  HS_KEY_TYPE r40 = HS_FM_GLOBAL_LOAD_R(7);
  HS_KEY_TYPE r41 = HS_FM_GLOBAL_LOAD_R(8);
  HS_KEY_TYPE r42 = HS_FM_GLOBAL_LOAD_R(9);
  HS_KEY_TYPE r43 = HS_FM_GLOBAL_LOAD_R(10);
  HS_KEY_TYPE r44 = HS_FM_GLOBAL_LOAD_R(11);
  HS_KEY_TYPE r45 = HS_FM_GLOBAL_LOAD_R(12);
  HS_KEY_TYPE r46 = HS_FM_GLOBAL_LOAD_R(13);
  HS_KEY_TYPE r47 = HS_FM_GLOBAL_LOAD_R(14);
  HS_KEY_TYPE r48 = HS_FM_GLOBAL_LOAD_R(15);
  HS_CMP_XCHG(r32, r33);
  HS_CMP_XCHG(r31, r34);
  HS_CMP_XCHG(r30, r35);
  HS_CMP_XCHG(r29, r36);
  HS_CMP_XCHG(r28, r37);
  HS_CMP_XCHG(r27, r38);
  HS_CMP_XCHG(r26, r39);
  HS_CMP_XCHG(r25, r40);
  HS_CMP_XCHG(r24, r41);
  HS_CMP_XCHG(r23, r42);
  HS_CMP_XCHG(r22, r43);
  HS_CMP_XCHG(r21, r44);
  HS_CMP_XCHG(r20, r45);
  HS_CMP_XCHG(r19, r46);
  HS_CMP_XCHG(r18, r47);
  HS_CMP_XCHG(r17, r48);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r33, r41);
  HS_CMP_XCHG(r37, r45);
  HS_CMP_XCHG(r33, r37);
  HS_CMP_XCHG(r41, r45);
  HS_CMP_XCHG(r35, r43);
  HS_CMP_XCHG(r39, r47);
  HS_CMP_XCHG(r35, r39);
  HS_CMP_XCHG(r43, r47);
  HS_CMP_XCHG(r33, r35);
  HS_CMP_XCHG(r37, r39);
  HS_CMP_XCHG(r41, r43);
  HS_CMP_XCHG(r45, r47);
  HS_CMP_XCHG(r34, r42);
  HS_CMP_XCHG(r38, r46);
  HS_CMP_XCHG(r34, r38);
  HS_CMP_XCHG(r42, r46);
  HS_CMP_XCHG(r36, r44);
  HS_CMP_XCHG(r40, r48);
  HS_CMP_XCHG(r36, r40);
  HS_CMP_XCHG(r44, r48);
  HS_CMP_XCHG(r34, r36);
  HS_CMP_XCHG(r38, r40);
  HS_CMP_XCHG(r42, r44);
  HS_CMP_XCHG(r46, r48);
  HS_CMP_XCHG(r33, r34);
  HS_CMP_XCHG(r35, r36);
  HS_CMP_XCHG(r37, r38);
  HS_CMP_XCHG(r39, r40);
  HS_CMP_XCHG(r41, r42);
  HS_CMP_XCHG(r43, r44);
  HS_CMP_XCHG(r45, r46);
  HS_CMP_XCHG(r47, r48);
  HS_XM_GLOBAL_STORE_L(0, r1);
  HS_XM_GLOBAL_STORE_L(1, r2);
  HS_XM_GLOBAL_STORE_L(2, r3);
  HS_XM_GLOBAL_STORE_L(3, r4);
  HS_XM_GLOBAL_STORE_L(4, r5);
  HS_XM_GLOBAL_STORE_L(5, r6);
  HS_XM_GLOBAL_STORE_L(6, r7);
  HS_XM_GLOBAL_STORE_L(7, r8);
  HS_XM_GLOBAL_STORE_L(8, r9);
  HS_XM_GLOBAL_STORE_L(9, r10);
  HS_XM_GLOBAL_STORE_L(10, r11);
  HS_XM_GLOBAL_STORE_L(11, r12);
  HS_XM_GLOBAL_STORE_L(12, r13);
  HS_XM_GLOBAL_STORE_L(13, r14);
  HS_XM_GLOBAL_STORE_L(14, r15);
  HS_XM_GLOBAL_STORE_L(15, r16);
  HS_XM_GLOBAL_STORE_L(16, r17);
  HS_XM_GLOBAL_STORE_L(17, r18);
  HS_XM_GLOBAL_STORE_L(18, r19);
  HS_XM_GLOBAL_STORE_L(19, r20);
  HS_XM_GLOBAL_STORE_L(20, r21);
  HS_XM_GLOBAL_STORE_L(21, r22);
  HS_XM_GLOBAL_STORE_L(22, r23);
  HS_XM_GLOBAL_STORE_L(23, r24);
  HS_XM_GLOBAL_STORE_L(24, r25);
  HS_XM_GLOBAL_STORE_L(25, r26);
  HS_XM_GLOBAL_STORE_L(26, r27);
  HS_XM_GLOBAL_STORE_L(27, r28);
  HS_XM_GLOBAL_STORE_L(28, r29);
  HS_XM_GLOBAL_STORE_L(29, r30);
  HS_XM_GLOBAL_STORE_L(30, r31);
  HS_XM_GLOBAL_STORE_L(31, r32);
  HS_FM_GLOBAL_STORE_R(0, r33);
  HS_FM_GLOBAL_STORE_R(1, r34);
  HS_FM_GLOBAL_STORE_R(2, r35);
  HS_FM_GLOBAL_STORE_R(3, r36);
  HS_FM_GLOBAL_STORE_R(4, r37);
  HS_FM_GLOBAL_STORE_R(5, r38);
  HS_FM_GLOBAL_STORE_R(6, r39);
  HS_FM_GLOBAL_STORE_R(7, r40);
  HS_FM_GLOBAL_STORE_R(8, r41);
  HS_FM_GLOBAL_STORE_R(9, r42);
  HS_FM_GLOBAL_STORE_R(10, r43);
  HS_FM_GLOBAL_STORE_R(11, r44);
  HS_FM_GLOBAL_STORE_R(12, r45);
  HS_FM_GLOBAL_STORE_R(13, r46);
  HS_FM_GLOBAL_STORE_R(14, r47);
  HS_FM_GLOBAL_STORE_R(15, r48);
}

HS_FM_KERNEL_PROTO(1, 5)
{
  HS_FM_PREAMBLE(32);
  HS_KEY_TYPE r1 = HS_XM_GLOBAL_LOAD_L(0);
  HS_KEY_TYPE r2 = HS_XM_GLOBAL_LOAD_L(1);
  HS_KEY_TYPE r3 = HS_XM_GLOBAL_LOAD_L(2);
  HS_KEY_TYPE r4 = HS_XM_GLOBAL_LOAD_L(3);
  HS_KEY_TYPE r5 = HS_XM_GLOBAL_LOAD_L(4);
  HS_KEY_TYPE r6 = HS_XM_GLOBAL_LOAD_L(5);
  HS_KEY_TYPE r7 = HS_XM_GLOBAL_LOAD_L(6);
  HS_KEY_TYPE r8 = HS_XM_GLOBAL_LOAD_L(7);
  HS_KEY_TYPE r9 = HS_XM_GLOBAL_LOAD_L(8);
  HS_KEY_TYPE r10 = HS_XM_GLOBAL_LOAD_L(9);
  HS_KEY_TYPE r11 = HS_XM_GLOBAL_LOAD_L(10);
  HS_KEY_TYPE r12 = HS_XM_GLOBAL_LOAD_L(11);
  HS_KEY_TYPE r13 = HS_XM_GLOBAL_LOAD_L(12);
  HS_KEY_TYPE r14 = HS_XM_GLOBAL_LOAD_L(13);
  HS_KEY_TYPE r15 = HS_XM_GLOBAL_LOAD_L(14);
  HS_KEY_TYPE r16 = HS_XM_GLOBAL_LOAD_L(15);
  HS_KEY_TYPE r17 = HS_XM_GLOBAL_LOAD_L(16);
  HS_KEY_TYPE r18 = HS_XM_GLOBAL_LOAD_L(17);
  HS_KEY_TYPE r19 = HS_XM_GLOBAL_LOAD_L(18);
  HS_KEY_TYPE r20 = HS_XM_GLOBAL_LOAD_L(19);
  HS_KEY_TYPE r21 = HS_XM_GLOBAL_LOAD_L(20);
  HS_KEY_TYPE r22 = HS_XM_GLOBAL_LOAD_L(21);
  HS_KEY_TYPE r23 = HS_XM_GLOBAL_LOAD_L(22);
  HS_KEY_TYPE r24 = HS_XM_GLOBAL_LOAD_L(23);
  HS_KEY_TYPE r25 = HS_XM_GLOBAL_LOAD_L(24);
  HS_KEY_TYPE r26 = HS_XM_GLOBAL_LOAD_L(25);
  HS_KEY_TYPE r27 = HS_XM_GLOBAL_LOAD_L(26);
  HS_KEY_TYPE r28 = HS_XM_GLOBAL_LOAD_L(27);
  HS_KEY_TYPE r29 = HS_XM_GLOBAL_LOAD_L(28);
  HS_KEY_TYPE r30 = HS_XM_GLOBAL_LOAD_L(29);
  HS_KEY_TYPE r31 = HS_XM_GLOBAL_LOAD_L(30);
  HS_KEY_TYPE r32 = HS_XM_GLOBAL_LOAD_L(31);
  HS_KEY_TYPE r33 = HS_FM_GLOBAL_LOAD_R(0);
  HS_KEY_TYPE r34 = HS_FM_GLOBAL_LOAD_R(1);
  HS_KEY_TYPE r35 = HS_FM_GLOBAL_LOAD_R(2);
  HS_KEY_TYPE r36 = HS_FM_GLOBAL_LOAD_R(3);
  HS_KEY_TYPE r37 = HS_FM_GLOBAL_LOAD_R(4);
  HS_KEY_TYPE r38 = HS_FM_GLOBAL_LOAD_R(5);
  HS_KEY_TYPE r39 = HS_FM_GLOBAL_LOAD_R(6);
  HS_KEY_TYPE r40 = HS_FM_GLOBAL_LOAD_R(7);
  HS_KEY_TYPE r41 = HS_FM_GLOBAL_LOAD_R(8);
  HS_KEY_TYPE r42 = HS_FM_GLOBAL_LOAD_R(9);
  HS_KEY_TYPE r43 = HS_FM_GLOBAL_LOAD_R(10);
  HS_KEY_TYPE r44 = HS_FM_GLOBAL_LOAD_R(11);
  HS_KEY_TYPE r45 = HS_FM_GLOBAL_LOAD_R(12);
  HS_KEY_TYPE r46 = HS_FM_GLOBAL_LOAD_R(13);
  HS_KEY_TYPE r47 = HS_FM_GLOBAL_LOAD_R(14);
  HS_KEY_TYPE r48 = HS_FM_GLOBAL_LOAD_R(15);
  HS_KEY_TYPE r49 = HS_FM_GLOBAL_LOAD_R(16);
  HS_KEY_TYPE r50 = HS_FM_GLOBAL_LOAD_R(17);
  HS_KEY_TYPE r51 = HS_FM_GLOBAL_LOAD_R(18);
  HS_KEY_TYPE r52 = HS_FM_GLOBAL_LOAD_R(19);
  HS_KEY_TYPE r53 = HS_FM_GLOBAL_LOAD_R(20);
  HS_KEY_TYPE r54 = HS_FM_GLOBAL_LOAD_R(21);
  HS_KEY_TYPE r55 = HS_FM_GLOBAL_LOAD_R(22);
  HS_KEY_TYPE r56 = HS_FM_GLOBAL_LOAD_R(23);
  HS_KEY_TYPE r57 = HS_FM_GLOBAL_LOAD_R(24);
  HS_KEY_TYPE r58 = HS_FM_GLOBAL_LOAD_R(25);
  HS_KEY_TYPE r59 = HS_FM_GLOBAL_LOAD_R(26);
  HS_KEY_TYPE r60 = HS_FM_GLOBAL_LOAD_R(27);
  HS_KEY_TYPE r61 = HS_FM_GLOBAL_LOAD_R(28);
  HS_KEY_TYPE r62 = HS_FM_GLOBAL_LOAD_R(29);
  HS_KEY_TYPE r63 = HS_FM_GLOBAL_LOAD_R(30);
  HS_KEY_TYPE r64 = HS_FM_GLOBAL_LOAD_R(31);
  HS_CMP_XCHG(r32, r33);
  HS_CMP_XCHG(r31, r34);
  HS_CMP_XCHG(r30, r35);
  HS_CMP_XCHG(r29, r36);
  HS_CMP_XCHG(r28, r37);
  HS_CMP_XCHG(r27, r38);
  HS_CMP_XCHG(r26, r39);
  HS_CMP_XCHG(r25, r40);
  HS_CMP_XCHG(r24, r41);
  HS_CMP_XCHG(r23, r42);
  HS_CMP_XCHG(r22, r43);
  HS_CMP_XCHG(r21, r44);
  HS_CMP_XCHG(r20, r45);
  HS_CMP_XCHG(r19, r46);
  HS_CMP_XCHG(r18, r47);
  HS_CMP_XCHG(r17, r48);
  HS_CMP_XCHG(r16, r49);
  HS_CMP_XCHG(r15, r50);
  HS_CMP_XCHG(r14, r51);
  HS_CMP_XCHG(r13, r52);
  HS_CMP_XCHG(r12, r53);
  HS_CMP_XCHG(r11, r54);
  HS_CMP_XCHG(r10, r55);
  HS_CMP_XCHG(r9, r56);
  HS_CMP_XCHG(r8, r57);
  HS_CMP_XCHG(r7, r58);
  HS_CMP_XCHG(r6, r59);
  HS_CMP_XCHG(r5, r60);
  HS_CMP_XCHG(r4, r61);
  HS_CMP_XCHG(r3, r62);
  HS_CMP_XCHG(r2, r63);
  HS_CMP_XCHG(r1, r64);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r33, r49);
  HS_CMP_XCHG(r41, r57);
  HS_CMP_XCHG(r33, r41);
  HS_CMP_XCHG(r49, r57);
  HS_CMP_XCHG(r37, r53);
  HS_CMP_XCHG(r45, r61);
  HS_CMP_XCHG(r37, r45);
  HS_CMP_XCHG(r53, r61);
  HS_CMP_XCHG(r33, r37);
  HS_CMP_XCHG(r41, r45);
  HS_CMP_XCHG(r49, r53);
  HS_CMP_XCHG(r57, r61);
  HS_CMP_XCHG(r35, r51);
  HS_CMP_XCHG(r43, r59);
  HS_CMP_XCHG(r35, r43);
  HS_CMP_XCHG(r51, r59);
  HS_CMP_XCHG(r39, r55);
  HS_CMP_XCHG(r47, r63);
  HS_CMP_XCHG(r39, r47);
  HS_CMP_XCHG(r55, r63);
  HS_CMP_XCHG(r35, r39);
  HS_CMP_XCHG(r43, r47);
  HS_CMP_XCHG(r51, r55);
  HS_CMP_XCHG(r59, r63);
  HS_CMP_XCHG(r33, r35);
  HS_CMP_XCHG(r37, r39);
  HS_CMP_XCHG(r41, r43);
  HS_CMP_XCHG(r45, r47);
  HS_CMP_XCHG(r49, r51);
  HS_CMP_XCHG(r53, r55);
  HS_CMP_XCHG(r57, r59);
  HS_CMP_XCHG(r61, r63);
  HS_CMP_XCHG(r34, r50);
  HS_CMP_XCHG(r42, r58);
  HS_CMP_XCHG(r34, r42);
  HS_CMP_XCHG(r50, r58);
  HS_CMP_XCHG(r38, r54);
  HS_CMP_XCHG(r46, r62);
  HS_CMP_XCHG(r38, r46);
  HS_CMP_XCHG(r54, r62);
  HS_CMP_XCHG(r34, r38);
  HS_CMP_XCHG(r42, r46);
  HS_CMP_XCHG(r50, r54);
  HS_CMP_XCHG(r58, r62);
  HS_CMP_XCHG(r36, r52);
  HS_CMP_XCHG(r44, r60);
  HS_CMP_XCHG(r36, r44);
  HS_CMP_XCHG(r52, r60);
  HS_CMP_XCHG(r40, r56);
  HS_CMP_XCHG(r48, r64);
  HS_CMP_XCHG(r40, r48);
  HS_CMP_XCHG(r56, r64);
  HS_CMP_XCHG(r36, r40);
  HS_CMP_XCHG(r44, r48);
  HS_CMP_XCHG(r52, r56);
  HS_CMP_XCHG(r60, r64);
  HS_CMP_XCHG(r34, r36);
  HS_CMP_XCHG(r38, r40);
  HS_CMP_XCHG(r42, r44);
  HS_CMP_XCHG(r46, r48);
  HS_CMP_XCHG(r50, r52);
  HS_CMP_XCHG(r54, r56);
  HS_CMP_XCHG(r58, r60);
  HS_CMP_XCHG(r62, r64);
  HS_CMP_XCHG(r33, r34);
  HS_CMP_XCHG(r35, r36);
  HS_CMP_XCHG(r37, r38);
  HS_CMP_XCHG(r39, r40);
  HS_CMP_XCHG(r41, r42);
  HS_CMP_XCHG(r43, r44);
  HS_CMP_XCHG(r45, r46);
  HS_CMP_XCHG(r47, r48);
  HS_CMP_XCHG(r49, r50);
  HS_CMP_XCHG(r51, r52);
  HS_CMP_XCHG(r53, r54);
  HS_CMP_XCHG(r55, r56);
  HS_CMP_XCHG(r57, r58);
  HS_CMP_XCHG(r59, r60);
  HS_CMP_XCHG(r61, r62);
  HS_CMP_XCHG(r63, r64);
  HS_XM_GLOBAL_STORE_L(0, r1);
  HS_XM_GLOBAL_STORE_L(1, r2);
  HS_XM_GLOBAL_STORE_L(2, r3);
  HS_XM_GLOBAL_STORE_L(3, r4);
  HS_XM_GLOBAL_STORE_L(4, r5);
  HS_XM_GLOBAL_STORE_L(5, r6);
  HS_XM_GLOBAL_STORE_L(6, r7);
  HS_XM_GLOBAL_STORE_L(7, r8);
  HS_XM_GLOBAL_STORE_L(8, r9);
  HS_XM_GLOBAL_STORE_L(9, r10);
  HS_XM_GLOBAL_STORE_L(10, r11);
  HS_XM_GLOBAL_STORE_L(11, r12);
  HS_XM_GLOBAL_STORE_L(12, r13);
  HS_XM_GLOBAL_STORE_L(13, r14);
  HS_XM_GLOBAL_STORE_L(14, r15);
  HS_XM_GLOBAL_STORE_L(15, r16);
  HS_XM_GLOBAL_STORE_L(16, r17);
  HS_XM_GLOBAL_STORE_L(17, r18);
  HS_XM_GLOBAL_STORE_L(18, r19);
  HS_XM_GLOBAL_STORE_L(19, r20);
  HS_XM_GLOBAL_STORE_L(20, r21);
  HS_XM_GLOBAL_STORE_L(21, r22);
  HS_XM_GLOBAL_STORE_L(22, r23);
  HS_XM_GLOBAL_STORE_L(23, r24);
  HS_XM_GLOBAL_STORE_L(24, r25);
  HS_XM_GLOBAL_STORE_L(25, r26);
  HS_XM_GLOBAL_STORE_L(26, r27);
  HS_XM_GLOBAL_STORE_L(27, r28);
  HS_XM_GLOBAL_STORE_L(28, r29);
  HS_XM_GLOBAL_STORE_L(29, r30);
  HS_XM_GLOBAL_STORE_L(30, r31);
  HS_XM_GLOBAL_STORE_L(31, r32);
  HS_FM_GLOBAL_STORE_R(0, r33);
  HS_FM_GLOBAL_STORE_R(1, r34);
  HS_FM_GLOBAL_STORE_R(2, r35);
  HS_FM_GLOBAL_STORE_R(3, r36);
  HS_FM_GLOBAL_STORE_R(4, r37);
  HS_FM_GLOBAL_STORE_R(5, r38);
  HS_FM_GLOBAL_STORE_R(6, r39);
  HS_FM_GLOBAL_STORE_R(7, r40);
  HS_FM_GLOBAL_STORE_R(8, r41);
  HS_FM_GLOBAL_STORE_R(9, r42);
  HS_FM_GLOBAL_STORE_R(10, r43);
  HS_FM_GLOBAL_STORE_R(11, r44);
  HS_FM_GLOBAL_STORE_R(12, r45);
  HS_FM_GLOBAL_STORE_R(13, r46);
  HS_FM_GLOBAL_STORE_R(14, r47);
  HS_FM_GLOBAL_STORE_R(15, r48);
  HS_FM_GLOBAL_STORE_R(16, r49);
  HS_FM_GLOBAL_STORE_R(17, r50);
  HS_FM_GLOBAL_STORE_R(18, r51);
  HS_FM_GLOBAL_STORE_R(19, r52);
  HS_FM_GLOBAL_STORE_R(20, r53);
  HS_FM_GLOBAL_STORE_R(21, r54);
  HS_FM_GLOBAL_STORE_R(22, r55);
  HS_FM_GLOBAL_STORE_R(23, r56);
  HS_FM_GLOBAL_STORE_R(24, r57);
  HS_FM_GLOBAL_STORE_R(25, r58);
  HS_FM_GLOBAL_STORE_R(26, r59);
  HS_FM_GLOBAL_STORE_R(27, r60);
  HS_FM_GLOBAL_STORE_R(28, r61);
  HS_FM_GLOBAL_STORE_R(29, r62);
  HS_FM_GLOBAL_STORE_R(30, r63);
  HS_FM_GLOBAL_STORE_R(31, r64);
}

HS_HM_KERNEL_PROTO(1)
{
  HS_HM_PREAMBLE(32);
  HS_KEY_TYPE r1 = HS_XM_GLOBAL_LOAD_L(0);
  HS_KEY_TYPE r2 = HS_XM_GLOBAL_LOAD_L(1);
  HS_KEY_TYPE r3 = HS_XM_GLOBAL_LOAD_L(2);
  HS_KEY_TYPE r4 = HS_XM_GLOBAL_LOAD_L(3);
  HS_KEY_TYPE r5 = HS_XM_GLOBAL_LOAD_L(4);
  HS_KEY_TYPE r6 = HS_XM_GLOBAL_LOAD_L(5);
  HS_KEY_TYPE r7 = HS_XM_GLOBAL_LOAD_L(6);
  HS_KEY_TYPE r8 = HS_XM_GLOBAL_LOAD_L(7);
  HS_KEY_TYPE r9 = HS_XM_GLOBAL_LOAD_L(8);
  HS_KEY_TYPE r10 = HS_XM_GLOBAL_LOAD_L(9);
  HS_KEY_TYPE r11 = HS_XM_GLOBAL_LOAD_L(10);
  HS_KEY_TYPE r12 = HS_XM_GLOBAL_LOAD_L(11);
  HS_KEY_TYPE r13 = HS_XM_GLOBAL_LOAD_L(12);
  HS_KEY_TYPE r14 = HS_XM_GLOBAL_LOAD_L(13);
  HS_KEY_TYPE r15 = HS_XM_GLOBAL_LOAD_L(14);
  HS_KEY_TYPE r16 = HS_XM_GLOBAL_LOAD_L(15);
  HS_KEY_TYPE r17 = HS_XM_GLOBAL_LOAD_L(16);
  HS_KEY_TYPE r18 = HS_XM_GLOBAL_LOAD_L(17);
  HS_KEY_TYPE r19 = HS_XM_GLOBAL_LOAD_L(18);
  HS_KEY_TYPE r20 = HS_XM_GLOBAL_LOAD_L(19);
  HS_KEY_TYPE r21 = HS_XM_GLOBAL_LOAD_L(20);
  HS_KEY_TYPE r22 = HS_XM_GLOBAL_LOAD_L(21);
  HS_KEY_TYPE r23 = HS_XM_GLOBAL_LOAD_L(22);
  HS_KEY_TYPE r24 = HS_XM_GLOBAL_LOAD_L(23);
  HS_KEY_TYPE r25 = HS_XM_GLOBAL_LOAD_L(24);
  HS_KEY_TYPE r26 = HS_XM_GLOBAL_LOAD_L(25);
  HS_KEY_TYPE r27 = HS_XM_GLOBAL_LOAD_L(26);
  HS_KEY_TYPE r28 = HS_XM_GLOBAL_LOAD_L(27);
  HS_KEY_TYPE r29 = HS_XM_GLOBAL_LOAD_L(28);
  HS_KEY_TYPE r30 = HS_XM_GLOBAL_LOAD_L(29);
  HS_KEY_TYPE r31 = HS_XM_GLOBAL_LOAD_L(30);
  HS_KEY_TYPE r32 = HS_XM_GLOBAL_LOAD_L(31);
  HS_KEY_TYPE r33 = HS_XM_GLOBAL_LOAD_L(32);
  HS_KEY_TYPE r34 = HS_XM_GLOBAL_LOAD_L(33);
  HS_KEY_TYPE r35 = HS_XM_GLOBAL_LOAD_L(34);
  HS_KEY_TYPE r36 = HS_XM_GLOBAL_LOAD_L(35);
  HS_KEY_TYPE r37 = HS_XM_GLOBAL_LOAD_L(36);
  HS_KEY_TYPE r38 = HS_XM_GLOBAL_LOAD_L(37);
  HS_KEY_TYPE r39 = HS_XM_GLOBAL_LOAD_L(38);
  HS_KEY_TYPE r40 = HS_XM_GLOBAL_LOAD_L(39);
  HS_KEY_TYPE r41 = HS_XM_GLOBAL_LOAD_L(40);
  HS_KEY_TYPE r42 = HS_XM_GLOBAL_LOAD_L(41);
  HS_KEY_TYPE r43 = HS_XM_GLOBAL_LOAD_L(42);
  HS_KEY_TYPE r44 = HS_XM_GLOBAL_LOAD_L(43);
  HS_KEY_TYPE r45 = HS_XM_GLOBAL_LOAD_L(44);
  HS_KEY_TYPE r46 = HS_XM_GLOBAL_LOAD_L(45);
  HS_KEY_TYPE r47 = HS_XM_GLOBAL_LOAD_L(46);
  HS_KEY_TYPE r48 = HS_XM_GLOBAL_LOAD_L(47);
  HS_KEY_TYPE r49 = HS_XM_GLOBAL_LOAD_L(48);
  HS_KEY_TYPE r50 = HS_XM_GLOBAL_LOAD_L(49);
  HS_KEY_TYPE r51 = HS_XM_GLOBAL_LOAD_L(50);
  HS_KEY_TYPE r52 = HS_XM_GLOBAL_LOAD_L(51);
  HS_KEY_TYPE r53 = HS_XM_GLOBAL_LOAD_L(52);
  HS_KEY_TYPE r54 = HS_XM_GLOBAL_LOAD_L(53);
  HS_KEY_TYPE r55 = HS_XM_GLOBAL_LOAD_L(54);
  HS_KEY_TYPE r56 = HS_XM_GLOBAL_LOAD_L(55);
  HS_KEY_TYPE r57 = HS_XM_GLOBAL_LOAD_L(56);
  HS_KEY_TYPE r58 = HS_XM_GLOBAL_LOAD_L(57);
  HS_KEY_TYPE r59 = HS_XM_GLOBAL_LOAD_L(58);
  HS_KEY_TYPE r60 = HS_XM_GLOBAL_LOAD_L(59);
  HS_KEY_TYPE r61 = HS_XM_GLOBAL_LOAD_L(60);
  HS_KEY_TYPE r62 = HS_XM_GLOBAL_LOAD_L(61);
  HS_KEY_TYPE r63 = HS_XM_GLOBAL_LOAD_L(62);
  HS_KEY_TYPE r64 = HS_XM_GLOBAL_LOAD_L(63);
  HS_CMP_XCHG(r1, r33);
  HS_CMP_XCHG(r17, r49);
  HS_CMP_XCHG(r1, r17);
  HS_CMP_XCHG(r33, r49);
  HS_CMP_XCHG(r9, r41);
  HS_CMP_XCHG(r25, r57);
  HS_CMP_XCHG(r9, r25);
  HS_CMP_XCHG(r41, r57);
  HS_CMP_XCHG(r1, r9);
  HS_CMP_XCHG(r17, r25);
  HS_CMP_XCHG(r33, r41);
  HS_CMP_XCHG(r49, r57);
  HS_CMP_XCHG(r5, r37);
  HS_CMP_XCHG(r21, r53);
  HS_CMP_XCHG(r5, r21);
  HS_CMP_XCHG(r37, r53);
  HS_CMP_XCHG(r13, r45);
  HS_CMP_XCHG(r29, r61);
  HS_CMP_XCHG(r13, r29);
  HS_CMP_XCHG(r45, r61);
  HS_CMP_XCHG(r5, r13);
  HS_CMP_XCHG(r21, r29);
  HS_CMP_XCHG(r37, r45);
  HS_CMP_XCHG(r53, r61);
  HS_CMP_XCHG(r1, r5);
  HS_CMP_XCHG(r9, r13);
  HS_CMP_XCHG(r17, r21);
  HS_CMP_XCHG(r25, r29);
  HS_CMP_XCHG(r33, r37);
  HS_CMP_XCHG(r41, r45);
  HS_CMP_XCHG(r49, r53);
  HS_CMP_XCHG(r57, r61);
  HS_CMP_XCHG(r3, r35);
  HS_CMP_XCHG(r19, r51);
  HS_CMP_XCHG(r3, r19);
  HS_CMP_XCHG(r35, r51);
  HS_CMP_XCHG(r11, r43);
  HS_CMP_XCHG(r27, r59);
  HS_CMP_XCHG(r11, r27);
  HS_CMP_XCHG(r43, r59);
  HS_CMP_XCHG(r3, r11);
  HS_CMP_XCHG(r19, r27);
  HS_CMP_XCHG(r35, r43);
  HS_CMP_XCHG(r51, r59);
  HS_CMP_XCHG(r7, r39);
  HS_CMP_XCHG(r23, r55);
  HS_CMP_XCHG(r7, r23);
  HS_CMP_XCHG(r39, r55);
  HS_CMP_XCHG(r15, r47);
  HS_CMP_XCHG(r31, r63);
  HS_CMP_XCHG(r15, r31);
  HS_CMP_XCHG(r47, r63);
  HS_CMP_XCHG(r7, r15);
  HS_CMP_XCHG(r23, r31);
  HS_CMP_XCHG(r39, r47);
  HS_CMP_XCHG(r55, r63);
  HS_CMP_XCHG(r3, r7);
  HS_CMP_XCHG(r11, r15);
  HS_CMP_XCHG(r19, r23);
  HS_CMP_XCHG(r27, r31);
  HS_CMP_XCHG(r35, r39);
  HS_CMP_XCHG(r43, r47);
  HS_CMP_XCHG(r51, r55);
  HS_CMP_XCHG(r59, r63);
  HS_CMP_XCHG(r1, r3);
  HS_CMP_XCHG(r5, r7);
  HS_CMP_XCHG(r9, r11);
  HS_CMP_XCHG(r13, r15);
  HS_CMP_XCHG(r17, r19);
  HS_CMP_XCHG(r21, r23);
  HS_CMP_XCHG(r25, r27);
  HS_CMP_XCHG(r29, r31);
  HS_CMP_XCHG(r33, r35);
  HS_CMP_XCHG(r37, r39);
  HS_CMP_XCHG(r41, r43);
  HS_CMP_XCHG(r45, r47);
  HS_CMP_XCHG(r49, r51);
  HS_CMP_XCHG(r53, r55);
  HS_CMP_XCHG(r57, r59);
  HS_CMP_XCHG(r61, r63);
  HS_CMP_XCHG(r2, r34);
  HS_CMP_XCHG(r18, r50);
  HS_CMP_XCHG(r2, r18);
  HS_CMP_XCHG(r34, r50);
  HS_CMP_XCHG(r10, r42);
  HS_CMP_XCHG(r26, r58);
  HS_CMP_XCHG(r10, r26);
  HS_CMP_XCHG(r42, r58);
  HS_CMP_XCHG(r2, r10);
  HS_CMP_XCHG(r18, r26);
  HS_CMP_XCHG(r34, r42);
  HS_CMP_XCHG(r50, r58);
  HS_CMP_XCHG(r6, r38);
  HS_CMP_XCHG(r22, r54);
  HS_CMP_XCHG(r6, r22);
  HS_CMP_XCHG(r38, r54);
  HS_CMP_XCHG(r14, r46);
  HS_CMP_XCHG(r30, r62);
  HS_CMP_XCHG(r14, r30);
  HS_CMP_XCHG(r46, r62);
  HS_CMP_XCHG(r6, r14);
  HS_CMP_XCHG(r22, r30);
  HS_CMP_XCHG(r38, r46);
  HS_CMP_XCHG(r54, r62);
  HS_CMP_XCHG(r2, r6);
  HS_CMP_XCHG(r10, r14);
  HS_CMP_XCHG(r18, r22);
  HS_CMP_XCHG(r26, r30);
  HS_CMP_XCHG(r34, r38);
  HS_CMP_XCHG(r42, r46);
  HS_CMP_XCHG(r50, r54);
  HS_CMP_XCHG(r58, r62);
  HS_CMP_XCHG(r4, r36);
  HS_CMP_XCHG(r20, r52);
  HS_CMP_XCHG(r4, r20);
  HS_CMP_XCHG(r36, r52);
  HS_CMP_XCHG(r12, r44);
  HS_CMP_XCHG(r28, r60);
  HS_CMP_XCHG(r12, r28);
  HS_CMP_XCHG(r44, r60);
  HS_CMP_XCHG(r4, r12);
  HS_CMP_XCHG(r20, r28);
  HS_CMP_XCHG(r36, r44);
  HS_CMP_XCHG(r52, r60);
  HS_CMP_XCHG(r8, r40);
  HS_CMP_XCHG(r24, r56);
  HS_CMP_XCHG(r8, r24);
  HS_CMP_XCHG(r40, r56);
  HS_CMP_XCHG(r16, r48);
  HS_CMP_XCHG(r32, r64);
  HS_CMP_XCHG(r16, r32);
  HS_CMP_XCHG(r48, r64);
  HS_CMP_XCHG(r8, r16);
  HS_CMP_XCHG(r24, r32);
  HS_CMP_XCHG(r40, r48);
  HS_CMP_XCHG(r56, r64);
  HS_CMP_XCHG(r4, r8);
  HS_CMP_XCHG(r12, r16);
  HS_CMP_XCHG(r20, r24);
  HS_CMP_XCHG(r28, r32);
  HS_CMP_XCHG(r36, r40);
  HS_CMP_XCHG(r44, r48);
  HS_CMP_XCHG(r52, r56);
  HS_CMP_XCHG(r60, r64);
  HS_CMP_XCHG(r2, r4);
  HS_CMP_XCHG(r6, r8);
  HS_CMP_XCHG(r10, r12);
  HS_CMP_XCHG(r14, r16);
  HS_CMP_XCHG(r18, r20);
  HS_CMP_XCHG(r22, r24);
  HS_CMP_XCHG(r26, r28);
  HS_CMP_XCHG(r30, r32);
  HS_CMP_XCHG(r34, r36);
  HS_CMP_XCHG(r38, r40);
  HS_CMP_XCHG(r42, r44);
  HS_CMP_XCHG(r46, r48);
  HS_CMP_XCHG(r50, r52);
  HS_CMP_XCHG(r54, r56);
  HS_CMP_XCHG(r58, r60);
  HS_CMP_XCHG(r62, r64);
  HS_CMP_XCHG(r1, r2);
  HS_CMP_XCHG(r3, r4);
  HS_CMP_XCHG(r5, r6);
  HS_CMP_XCHG(r7, r8);
  HS_CMP_XCHG(r9, r10);
  HS_CMP_XCHG(r11, r12);
  HS_CMP_XCHG(r13, r14);
  HS_CMP_XCHG(r15, r16);
  HS_CMP_XCHG(r17, r18);
  HS_CMP_XCHG(r19, r20);
  HS_CMP_XCHG(r21, r22);
  HS_CMP_XCHG(r23, r24);
  HS_CMP_XCHG(r25, r26);
  HS_CMP_XCHG(r27, r28);
  HS_CMP_XCHG(r29, r30);
  HS_CMP_XCHG(r31, r32);
  HS_CMP_XCHG(r33, r34);
  HS_CMP_XCHG(r35, r36);
  HS_CMP_XCHG(r37, r38);
  HS_CMP_XCHG(r39, r40);
  HS_CMP_XCHG(r41, r42);
  HS_CMP_XCHG(r43, r44);
  HS_CMP_XCHG(r45, r46);
  HS_CMP_XCHG(r47, r48);
  HS_CMP_XCHG(r49, r50);
  HS_CMP_XCHG(r51, r52);
  HS_CMP_XCHG(r53, r54);
  HS_CMP_XCHG(r55, r56);
  HS_CMP_XCHG(r57, r58);
  HS_CMP_XCHG(r59, r60);
  HS_CMP_XCHG(r61, r62);
  HS_CMP_XCHG(r63, r64);
  HS_XM_GLOBAL_STORE_L(0, r1);
  HS_XM_GLOBAL_STORE_L(1, r2);
  HS_XM_GLOBAL_STORE_L(2, r3);
  HS_XM_GLOBAL_STORE_L(3, r4);
  HS_XM_GLOBAL_STORE_L(4, r5);
  HS_XM_GLOBAL_STORE_L(5, r6);
  HS_XM_GLOBAL_STORE_L(6, r7);
  HS_XM_GLOBAL_STORE_L(7, r8);
  HS_XM_GLOBAL_STORE_L(8, r9);
  HS_XM_GLOBAL_STORE_L(9, r10);
  HS_XM_GLOBAL_STORE_L(10, r11);
  HS_XM_GLOBAL_STORE_L(11, r12);
  HS_XM_GLOBAL_STORE_L(12, r13);
  HS_XM_GLOBAL_STORE_L(13, r14);
  HS_XM_GLOBAL_STORE_L(14, r15);
  HS_XM_GLOBAL_STORE_L(15, r16);
  HS_XM_GLOBAL_STORE_L(16, r17);
  HS_XM_GLOBAL_STORE_L(17, r18);
  HS_XM_GLOBAL_STORE_L(18, r19);
  HS_XM_GLOBAL_STORE_L(19, r20);
  HS_XM_GLOBAL_STORE_L(20, r21);
  HS_XM_GLOBAL_STORE_L(21, r22);
  HS_XM_GLOBAL_STORE_L(22, r23);
  HS_XM_GLOBAL_STORE_L(23, r24);
  HS_XM_GLOBAL_STORE_L(24, r25);
  HS_XM_GLOBAL_STORE_L(25, r26);
  HS_XM_GLOBAL_STORE_L(26, r27);
  HS_XM_GLOBAL_STORE_L(27, r28);
  HS_XM_GLOBAL_STORE_L(28, r29);
  HS_XM_GLOBAL_STORE_L(29, r30);
  HS_XM_GLOBAL_STORE_L(30, r31);
  HS_XM_GLOBAL_STORE_L(31, r32);
  HS_XM_GLOBAL_STORE_L(32, r33);
  HS_XM_GLOBAL_STORE_L(33, r34);
  HS_XM_GLOBAL_STORE_L(34, r35);
  HS_XM_GLOBAL_STORE_L(35, r36);
  HS_XM_GLOBAL_STORE_L(36, r37);
  HS_XM_GLOBAL_STORE_L(37, r38);
  HS_XM_GLOBAL_STORE_L(38, r39);
  HS_XM_GLOBAL_STORE_L(39, r40);
  HS_XM_GLOBAL_STORE_L(40, r41);
  HS_XM_GLOBAL_STORE_L(41, r42);
  HS_XM_GLOBAL_STORE_L(42, r43);
  HS_XM_GLOBAL_STORE_L(43, r44);
  HS_XM_GLOBAL_STORE_L(44, r45);
  HS_XM_GLOBAL_STORE_L(45, r46);
  HS_XM_GLOBAL_STORE_L(46, r47);
  HS_XM_GLOBAL_STORE_L(47, r48);
  HS_XM_GLOBAL_STORE_L(48, r49);
  HS_XM_GLOBAL_STORE_L(49, r50);
  HS_XM_GLOBAL_STORE_L(50, r51);
  HS_XM_GLOBAL_STORE_L(51, r52);
  HS_XM_GLOBAL_STORE_L(52, r53);
  HS_XM_GLOBAL_STORE_L(53, r54);
  HS_XM_GLOBAL_STORE_L(54, r55);
  HS_XM_GLOBAL_STORE_L(55, r56);
  HS_XM_GLOBAL_STORE_L(56, r57);
  HS_XM_GLOBAL_STORE_L(57, r58);
  HS_XM_GLOBAL_STORE_L(58, r59);
  HS_XM_GLOBAL_STORE_L(59, r60);
  HS_XM_GLOBAL_STORE_L(60, r61);
  HS_XM_GLOBAL_STORE_L(61, r62);
  HS_XM_GLOBAL_STORE_L(62, r63);
  HS_XM_GLOBAL_STORE_L(63, r64);
}

HS_TRANSPOSE_KERNEL_PROTO()
{
  HS_SLAB_GLOBAL_PREAMBLE();
  HS_KEY_TYPE r1 = HS_SLAB_GLOBAL_LOAD(vout, 0);
  HS_KEY_TYPE r2 = HS_SLAB_GLOBAL_LOAD(vout, 1);
  HS_KEY_TYPE r3 = HS_SLAB_GLOBAL_LOAD(vout, 2);
  HS_KEY_TYPE r4 = HS_SLAB_GLOBAL_LOAD(vout, 3);
  HS_KEY_TYPE r5 = HS_SLAB_GLOBAL_LOAD(vout, 4);
  HS_KEY_TYPE r6 = HS_SLAB_GLOBAL_LOAD(vout, 5);
  HS_KEY_TYPE r7 = HS_SLAB_GLOBAL_LOAD(vout, 6);
  HS_KEY_TYPE r8 = HS_SLAB_GLOBAL_LOAD(vout, 7);
  HS_KEY_TYPE r9 = HS_SLAB_GLOBAL_LOAD(vout, 8);
  HS_KEY_TYPE r10 = HS_SLAB_GLOBAL_LOAD(vout, 9);
  HS_KEY_TYPE r11 = HS_SLAB_GLOBAL_LOAD(vout, 10);
  HS_KEY_TYPE r12 = HS_SLAB_GLOBAL_LOAD(vout, 11);
  HS_KEY_TYPE r13 = HS_SLAB_GLOBAL_LOAD(vout, 12);
  HS_KEY_TYPE r14 = HS_SLAB_GLOBAL_LOAD(vout, 13);
  HS_KEY_TYPE r15 = HS_SLAB_GLOBAL_LOAD(vout, 14);
  HS_KEY_TYPE r16 = HS_SLAB_GLOBAL_LOAD(vout, 15);
  HS_KEY_TYPE r17 = HS_SLAB_GLOBAL_LOAD(vout, 16);
  HS_KEY_TYPE r18 = HS_SLAB_GLOBAL_LOAD(vout, 17);
  HS_KEY_TYPE r19 = HS_SLAB_GLOBAL_LOAD(vout, 18);
  HS_KEY_TYPE r20 = HS_SLAB_GLOBAL_LOAD(vout, 19);
  HS_KEY_TYPE r21 = HS_SLAB_GLOBAL_LOAD(vout, 20);
  HS_KEY_TYPE r22 = HS_SLAB_GLOBAL_LOAD(vout, 21);
  HS_KEY_TYPE r23 = HS_SLAB_GLOBAL_LOAD(vout, 22);
  HS_KEY_TYPE r24 = HS_SLAB_GLOBAL_LOAD(vout, 23);
  HS_KEY_TYPE r25 = HS_SLAB_GLOBAL_LOAD(vout, 24);
  HS_KEY_TYPE r26 = HS_SLAB_GLOBAL_LOAD(vout, 25);
  HS_KEY_TYPE r27 = HS_SLAB_GLOBAL_LOAD(vout, 26);
  HS_KEY_TYPE r28 = HS_SLAB_GLOBAL_LOAD(vout, 27);
  HS_KEY_TYPE r29 = HS_SLAB_GLOBAL_LOAD(vout, 28);
  HS_KEY_TYPE r30 = HS_SLAB_GLOBAL_LOAD(vout, 29);
  HS_KEY_TYPE r31 = HS_SLAB_GLOBAL_LOAD(vout, 30);
  HS_KEY_TYPE r32 = HS_SLAB_GLOBAL_LOAD(vout, 31);
  HS_TRANSPOSE_SLAB();
}

  //
  //
  //

#include "../../hs_cuda.inl"

//
//
//
