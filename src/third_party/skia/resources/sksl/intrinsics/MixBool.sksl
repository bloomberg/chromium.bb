uniform half4 colorGreen, colorRed, colorBlack, colorWhite, testInputs;

half4 main(float2 coords) {
    int4 intGreen  = int4(colorGreen * 100);
    int4 intRed    = int4(colorRed   * 100);

    return (mix(intGreen.x,      intRed.x,      false)           == intGreen.x      &&
            mix(intGreen.xy,     intRed.xy,     bool2(false))    == intGreen.xy     &&
            mix(intGreen.xyz,    intRed.xyz,    bool3(false))    == intGreen.xyz    &&
            mix(intGreen.xyzw,   intRed.xyzw,   bool4(false))    == intGreen.xyzw   &&
            mix(intGreen.x,      intRed.x,      true)            == intRed.x        &&
            mix(intGreen.xy,     intRed.xy,     bool2(true))     == intRed.xy       &&
            mix(intGreen.xyz,    intRed.xyz,    bool3(true))     == intRed.xyz      &&
            mix(intGreen.xyzw,   intRed.xyzw,   bool4(true))     == intRed.xyzw     &&
            mix(colorGreen.x,    colorRed.x,    false)           == colorGreen.x    &&
            mix(colorGreen.xy,   colorRed.xy,   bool2(false))    == colorGreen.xy   &&
            mix(colorGreen.xyz,  colorRed.xyz,  bool3(false))    == colorGreen.xyz  &&
            mix(colorGreen.xyzw, colorRed.xyzw, bool4(false))    == colorGreen.xyzw &&
            mix(colorGreen.x,    colorRed.x,    true)            == colorRed.x      &&
            mix(colorGreen.xy,   colorRed.xy,   bool2(true))     == colorRed.xy     &&
            mix(colorGreen.xyz,  colorRed.xyz,  bool3(true))     == colorRed.xyz    &&
            mix(colorGreen.xyzw, colorRed.xyzw, bool4(true))     == colorRed.xyzw) ? colorGreen
                                                                                   : colorRed;
}

