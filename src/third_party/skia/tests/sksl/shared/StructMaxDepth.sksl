struct S1 { int x; };
struct S2 { S1 x; };
struct S3 { S2 x; };
struct S4 { S3 x; };
struct S5 { S4 x; };
struct S6 { S5 x; };
struct S7 { S6 x; };
struct S8 { S7 x; };
in S8 s8;

// This is the most deeply-nested mix of arrays and structs that we can make with our current
// limits of eight-deep structs and eight-dimensional arrays. This structure is actually too big to
// use in SkSL without hitting the maximum parse depth.
struct SA1 { int x[1][2][3][4][5][6][7][8]; };
struct SA2 { SA1 x[1][2][3][4][5][6][7][8]; };
struct SA3 { SA2 x[1][2][3][4][5][6][7][8]; };
struct SA4 { SA3 x[1][2][3][4][5][6][7][8]; };
struct SA5 { SA4 x[1][2][3][4][5][6][7][8]; };
struct SA6 { SA5 x[1][2][3][4][5][6][7][8]; };
struct SA7 { SA6 x[1][2][3][4][5][6][7][8]; };
struct SA8 { SA7 x[1][2][3][4][5][6][7][8]; };
in SA8 sa8[1][2][3][4][5][6][7][8];
