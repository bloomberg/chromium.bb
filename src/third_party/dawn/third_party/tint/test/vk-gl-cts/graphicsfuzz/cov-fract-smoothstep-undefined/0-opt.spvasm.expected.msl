#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ float el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[1];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_float_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_6, thread float4* const tint_symbol_3) {
  float2 v1 = 0.0f;
  float2 b = 0.0f;
  float a = 0.0f;
  bool x_51 = false;
  bool x_52_phi = false;
  float const x_30 = x_6.x_GLF_uniform_float_values.arr[0].el;
  v1 = float2(x_30, x_30);
  float2 const x_32 = v1;
  b = fract(x_32);
  float2 const x_34 = b;
  a = smoothstep(float2(1.0f, 1.0f), float2(1.0f, 1.0f), x_34).x;
  float const x_38 = x_6.x_GLF_uniform_float_values.arr[0].el;
  float const x_39 = a;
  float const x_40 = a;
  float const x_42 = x_6.x_GLF_uniform_float_values.arr[0].el;
  *(tint_symbol_3) = float4(x_38, x_39, x_40, x_42);
  float const x_45 = b.x;
  bool const x_46 = (x_45 < 1.0f);
  x_52_phi = x_46;
  if (x_46) {
    float const x_50 = b.y;
    x_51 = (x_50 < 1.0f);
    x_52_phi = x_51;
  }
  bool const x_52 = x_52_phi;
  if (x_52) {
    float const x_57 = x_6.x_GLF_uniform_float_values.arr[0].el;
    float const x_59 = b.x;
    float const x_61 = b.y;
    float const x_63 = x_6.x_GLF_uniform_float_values.arr[0].el;
    *(tint_symbol_3) = float4(x_57, x_59, x_61, x_63);
  } else {
    float const x_66 = x_6.x_GLF_uniform_float_values.arr[0].el;
    *(tint_symbol_3) = float4(x_66, x_66, x_66, x_66);
  }
  return;
}

main_out tint_symbol_inner(constant buf0& x_6, thread float4* const tint_symbol_4) {
  main_1(x_6, tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(constant buf0& x_6 [[buffer(0)]]) {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_6, &(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

