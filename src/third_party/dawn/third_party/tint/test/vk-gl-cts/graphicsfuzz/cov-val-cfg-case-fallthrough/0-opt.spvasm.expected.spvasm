; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 52
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "one"
               OpName %x_6 "x_6"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %a "a"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
        %int = OpTypeInt 32 1
       %buf0 = OpTypeStruct %int
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
%_ptr_Function_int = OpTypePointer Function %int
         %18 = OpConstantNull %int
      %int_0 = OpConstant %int 0
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_int = OpTypePointer Uniform %int
      %int_1 = OpConstant %int 1
      %int_2 = OpConstant %int 2
       %bool = OpTypeBool
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %39 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
         %40 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
   %main_out = OpTypeStruct %v4float
         %41 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %12
         %15 = OpLabel
          %a = OpVariable %_ptr_Function_int Function %18
               OpStore %a %int_0
         %23 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0
         %24 = OpLoad %int %23
               OpSelectionMerge %25 None
               OpSwitch %24 %26 2 %27 3 %27 4 %28
         %27 = OpLabel
               OpStore %a %int_1
               OpBranch %28
         %28 = OpLabel
               OpBranch %25
         %26 = OpLabel
               OpStore %a %int_2
               OpBranch %25
         %25 = OpLabel
         %31 = OpLoad %int %a
         %32 = OpIEqual %bool %31 %int_2
               OpSelectionMerge %34 None
               OpBranchConditional %32 %35 %36
         %35 = OpLabel
               OpStore %x_GLF_color %39
               OpBranch %34
         %36 = OpLabel
               OpStore %x_GLF_color %40
               OpBranch %34
         %34 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %41
         %44 = OpLabel
         %45 = OpFunctionCall %void %main_1
         %46 = OpLoad %v4float %x_GLF_color
         %47 = OpCompositeConstruct %main_out %46
               OpReturnValue %47
               OpFunctionEnd
       %main = OpFunction %void None %12
         %49 = OpLabel
         %50 = OpFunctionCall %main_out %main_inner
         %51 = OpCompositeExtract %v4float %50 0
               OpStore %x_GLF_color_1_1 %51
               OpReturn
               OpFunctionEnd
