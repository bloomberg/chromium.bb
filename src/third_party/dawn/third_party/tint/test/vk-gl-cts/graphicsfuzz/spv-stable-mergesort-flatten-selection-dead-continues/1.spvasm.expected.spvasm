; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 518
; Schema: 0
               OpCapability Shader
        %286 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %gl_FragCoord_param_1 %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %gl_FragCoord_param_1 "gl_FragCoord_param_1"
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %data "data"
               OpName %temp "temp"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_28 "x_28"
               OpName %gl_FragCoord "gl_FragCoord"
               OpName %x_GLF_color "x_GLF_color"
               OpName %merge_i1_i1_i1_ "merge_i1_i1_i1_"
               OpName %from "from"
               OpName %mid "mid"
               OpName %to "to"
               OpName %k "k"
               OpName %i "i"
               OpName %j "j"
               OpName %i_1 "i_1"
               OpName %x_285 "x_285"
               OpName %x_286 "x_286"
               OpName %x_305 "x_305"
               OpName %x_306 "x_306"
               OpName %x_320 "x_320"
               OpName %x_324 "x_324"
               OpName %x_339 "x_339"
               OpName %x_338 "x_338"
               OpName %x_352 "x_352"
               OpName %x_351 "x_351"
               OpName %x_366 "x_366"
               OpName %x_365 "x_365"
               OpName %x_287_phi "x_287_phi"
               OpName %x_307_phi "x_307_phi"
               OpName %x_328_phi "x_328_phi"
               OpName %x_340_phi "x_340_phi"
               OpName %x_353_phi "x_353_phi"
               OpName %x_367_phi "x_367_phi"
               OpName %mergeSort_ "mergeSort_"
               OpName %low "low"
               OpName %high "high"
               OpName %m "m"
               OpName %i_2 "i_2"
               OpName %from_1 "from_1"
               OpName %mid_1 "mid_1"
               OpName %to_1 "to_1"
               OpName %param "param"
               OpName %param_1 "param_1"
               OpName %param_2 "param_2"
               OpName %main_1 "main_1"
               OpName %i_3 "i_3"
               OpName %j_1 "j_1"
               OpName %grey "grey"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %gl_FragCoord_param "gl_FragCoord_param"
               OpName %main "main"
               OpDecorate %gl_FragCoord_param_1 BuiltIn FragCoord
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %_arr_int_uint_10 ArrayStride 4
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_28 NonWritable
               OpDecorate %x_28 DescriptorSet 0
               OpDecorate %x_28 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Input_v4float = OpTypePointer Input %v4float
%gl_FragCoord_param_1 = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %7 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %7
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %uint_10 = OpConstant %uint 10
%_arr_int_uint_10 = OpTypeArray %int %uint_10
%_ptr_Private__arr_int_uint_10 = OpTypePointer Private %_arr_int_uint_10
         %14 = OpConstantNull %_arr_int_uint_10
       %data = OpVariable %_ptr_Private__arr_int_uint_10 Private %14
       %temp = OpVariable %_ptr_Private__arr_int_uint_10 Private %14
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
       %x_28 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%gl_FragCoord = OpVariable %_ptr_Private_v4float Private %7
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %7
       %void = OpTypeVoid
%_ptr_Function_int = OpTypePointer Function %int
         %23 = OpTypeFunction %void %_ptr_Function_int %_ptr_Function_int %_ptr_Function_int
         %32 = OpConstantNull %int
      %int_1 = OpConstant %int 1
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
     %uint_1 = OpConstant %uint 1
    %float_0 = OpConstant %float 0
     %int_10 = OpConstant %int 10
        %242 = OpTypeFunction %void
      %int_9 = OpConstant %int 9
      %int_2 = OpConstant %int 2
%_ptr_Function_float = OpTypePointer Function %float
        %310 = OpConstantNull %float
     %int_n5 = OpConstant %int -5
     %int_n4 = OpConstant %int -4
     %int_n3 = OpConstant %int -3
     %int_n2 = OpConstant %int -2
     %int_n1 = OpConstant %int -1
      %int_3 = OpConstant %int 3
      %int_4 = OpConstant %int 4
%_ptr_Private_float = OpTypePointer Private %float
     %int_30 = OpConstant %int 30
  %float_0_5 = OpConstant %float 0.5
   %float_10 = OpConstant %float 10
     %int_60 = OpConstant %int 60
     %int_90 = OpConstant %int 90
    %int_120 = OpConstant %int 120
    %int_150 = OpConstant %int 150
    %int_180 = OpConstant %int 180
      %int_5 = OpConstant %int 5
    %int_210 = OpConstant %int 210
      %int_6 = OpConstant %int 6
    %int_240 = OpConstant %int 240
      %int_7 = OpConstant %int 7
    %int_270 = OpConstant %int 270
      %int_8 = OpConstant %int 8
    %v3float = OpTypeVector %float 3
   %main_out = OpTypeStruct %v4float
        %505 = OpTypeFunction %main_out %v4float
%merge_i1_i1_i1_ = OpFunction %void None %23
       %from = OpFunctionParameter %_ptr_Function_int
        %mid = OpFunctionParameter %_ptr_Function_int
         %to = OpFunctionParameter %_ptr_Function_int
         %30 = OpLabel
          %k = OpVariable %_ptr_Function_int Function %32
          %i = OpVariable %_ptr_Function_int Function %32
          %j = OpVariable %_ptr_Function_int Function %32
        %i_1 = OpVariable %_ptr_Function_int Function %32
      %x_285 = OpVariable %_ptr_Function_int Function %32
      %x_286 = OpVariable %_ptr_Function_int Function %32
      %x_305 = OpVariable %_ptr_Function_int Function %32
      %x_306 = OpVariable %_ptr_Function_int Function %32
      %x_320 = OpVariable %_ptr_Function_int Function %32
      %x_324 = OpVariable %_ptr_Function_int Function %32
      %x_339 = OpVariable %_ptr_Function_int Function %32
      %x_338 = OpVariable %_ptr_Function_int Function %32
      %x_352 = OpVariable %_ptr_Function_int Function %32
      %x_351 = OpVariable %_ptr_Function_int Function %32
      %x_366 = OpVariable %_ptr_Function_int Function %32
      %x_365 = OpVariable %_ptr_Function_int Function %32
  %x_287_phi = OpVariable %_ptr_Function_int Function %32
  %x_307_phi = OpVariable %_ptr_Function_int Function %32
  %x_328_phi = OpVariable %_ptr_Function_int Function %32
  %x_340_phi = OpVariable %_ptr_Function_int Function %32
  %x_353_phi = OpVariable %_ptr_Function_int Function %32
  %x_367_phi = OpVariable %_ptr_Function_int Function %32
         %37 = OpLoad %int %from
               OpStore %k %37
         %39 = OpLoad %int %from
               OpStore %i %39
         %41 = OpLoad %int %mid
         %43 = OpIAdd %int %41 %int_1
               OpStore %j %43
               OpBranch %44
         %44 = OpLabel
               OpLoopMerge %45 %46 None
               OpBranch %47
         %47 = OpLabel
         %68 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_0
         %69 = OpLoad %float %68
         %71 = OpFOrdGreaterThanEqual %bool %float_1 %69
               OpSelectionMerge %73 None
               OpBranchConditional %71 %74 %75
         %74 = OpLabel
               OpBranch %73
         %75 = OpLabel
               OpBranch %46
         %73 = OpLabel
         %76 = OpLoad %int %i
         %78 = OpLoad %int %mid
         %79 = OpLoad %int %j
         %81 = OpLoad %int %to
         %82 = OpSLessThanEqual %bool %76 %78
         %83 = OpSLessThanEqual %bool %79 %81
         %84 = OpLogicalAnd %bool %82 %83
               OpSelectionMerge %85 None
               OpBranchConditional %84 %86 %87
         %86 = OpLabel
               OpBranch %85
         %87 = OpLabel
               OpBranch %45
         %85 = OpLabel
         %88 = OpLoad %int %i
         %90 = OpAccessChain %_ptr_Private_int %data %88
         %91 = OpLoad %int %90
         %92 = OpLoad %int %j
         %93 = OpAccessChain %_ptr_Private_int %data %92
         %94 = OpLoad %int %93
         %95 = OpSLessThan %bool %91 %94
               OpSelectionMerge %96 None
               OpBranchConditional %95 %97 %98
         %97 = OpLabel
         %99 = OpLoad %int %k
               OpStore %x_285 %99
        %100 = OpLoad %int %x_285
               OpStore %x_287_phi %100
               OpBranch %96
         %98 = OpLabel
               OpStore %x_286 %int_0
        %102 = OpLoad %int %x_286
               OpStore %x_287_phi %102
               OpBranch %96
         %96 = OpLabel
        %103 = OpLoad %int %x_287_phi
        %104 = OpIAdd %int %103 %int_1
               OpSelectionMerge %105 None
               OpBranchConditional %95 %106 %105
        %106 = OpLabel
               OpStore %k %104
        %107 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_0
        %108 = OpLoad %float %107
        %110 = OpFOrdLessThanEqual %bool %float_1 %108
        %109 = OpLogicalNot %bool %110
               OpSelectionMerge %111 None
               OpBranchConditional %109 %112 %113
        %112 = OpLabel
               OpBranch %111
        %113 = OpLabel
               OpBranch %46
        %111 = OpLabel
               OpBranch %105
        %105 = OpLabel
        %115 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_1
        %116 = OpLoad %float %115
        %118 = OpFOrdGreaterThanEqual %bool %116 %float_0
               OpSelectionMerge %119 None
               OpBranchConditional %118 %120 %121
        %120 = OpLabel
               OpBranch %119
        %121 = OpLabel
               OpBranch %46
        %119 = OpLabel
               OpSelectionMerge %122 None
               OpBranchConditional %95 %123 %124
        %123 = OpLabel
        %125 = OpLoad %int %i
               OpStore %x_305 %125
        %126 = OpLoad %int %x_305
               OpStore %x_307_phi %126
               OpBranch %122
        %124 = OpLabel
               OpStore %x_306 %int_0
        %127 = OpLoad %int %x_306
               OpStore %x_307_phi %127
               OpBranch %122
        %122 = OpLabel
        %128 = OpLoad %int %x_307_phi
        %129 = OpSelect %int %95 %128 %int_0
               OpSelectionMerge %130 None
               OpBranchConditional %95 %131 %130
        %131 = OpLabel
        %132 = OpIAdd %int %129 %int_1
               OpStore %i %132
               OpBranch %130
        %130 = OpLabel
               OpSelectionMerge %133 None
               OpBranchConditional %95 %134 %135
        %134 = OpLabel
        %136 = OpAccessChain %_ptr_Private_int %data %129
        %137 = OpLoad %int %136
               OpStore %x_320 %137
        %138 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_1
        %139 = OpLoad %float %138
        %140 = OpLoad %int %x_320
               OpStore %x_328_phi %140
        %142 = OpFOrdLessThanEqual %bool %float_0 %139
        %141 = OpLogicalNot %bool %142
               OpSelectionMerge %143 None
               OpBranchConditional %141 %144 %143
        %144 = OpLabel
               OpBranch %46
        %143 = OpLabel
               OpBranch %133
        %135 = OpLabel
               OpStore %x_324 %int_0
        %145 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_1
        %146 = OpLoad %float %145
        %147 = OpLoad %int %x_324
               OpStore %x_328_phi %147
        %149 = OpFOrdLessThan %bool %146 %float_0
        %148 = OpLogicalNot %bool %149
               OpSelectionMerge %150 None
               OpBranchConditional %148 %151 %152
        %151 = OpLabel
               OpBranch %150
        %152 = OpLabel
               OpBranch %46
        %150 = OpLabel
               OpBranch %133
        %133 = OpLabel
        %153 = OpLoad %int %x_328_phi
               OpSelectionMerge %154 None
               OpBranchConditional %95 %155 %154
        %155 = OpLabel
        %156 = OpAccessChain %_ptr_Private_int %temp %103
        %157 = OpSelect %int %95 %153 %int_0
               OpStore %156 %157
               OpBranch %154
        %154 = OpLabel
               OpSelectionMerge %158 None
               OpBranchConditional %95 %159 %160
        %159 = OpLabel
               OpStore %x_339 %int_0
        %161 = OpLoad %int %x_339
               OpStore %x_340_phi %161
               OpBranch %158
        %160 = OpLabel
        %162 = OpLoad %int %k
               OpStore %x_338 %162
        %163 = OpLoad %int %x_338
               OpStore %x_340_phi %163
               OpBranch %158
        %158 = OpLabel
        %164 = OpLoad %int %x_340_phi
               OpSelectionMerge %165 None
               OpBranchConditional %95 %166 %167
        %166 = OpLabel
               OpBranch %165
        %167 = OpLabel
        %168 = OpIAdd %int %164 %int_1
               OpStore %k %168
               OpBranch %165
        %165 = OpLabel
        %169 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_0
        %170 = OpLoad %float %169
        %172 = OpFOrdLessThanEqual %bool %float_1 %170
        %171 = OpLogicalNot %bool %172
               OpSelectionMerge %173 None
               OpBranchConditional %171 %174 %175
        %174 = OpLabel
               OpBranch %173
        %175 = OpLabel
               OpBranch %46
        %173 = OpLabel
               OpSelectionMerge %176 None
               OpBranchConditional %95 %177 %178
        %177 = OpLabel
               OpStore %x_352 %int_0
        %179 = OpLoad %int %x_352
               OpStore %x_353_phi %179
               OpBranch %176
        %178 = OpLabel
        %180 = OpLoad %int %j
               OpStore %x_351 %180
        %181 = OpLoad %int %x_351
               OpStore %x_353_phi %181
               OpBranch %176
        %176 = OpLabel
        %182 = OpLoad %int %x_353_phi
        %183 = OpSelect %int %95 %int_0 %182
               OpSelectionMerge %184 None
               OpBranchConditional %95 %185 %186
        %185 = OpLabel
               OpBranch %184
        %186 = OpLabel
        %187 = OpIAdd %int %183 %int_1
               OpStore %j %187
               OpBranch %184
        %184 = OpLabel
               OpSelectionMerge %188 None
               OpBranchConditional %95 %189 %190
        %189 = OpLabel
               OpStore %x_366 %int_0
        %191 = OpLoad %int %x_366
               OpStore %x_367_phi %191
               OpBranch %188
        %190 = OpLabel
        %192 = OpAccessChain %_ptr_Private_int %data %183
        %193 = OpLoad %int %192
               OpStore %x_365 %193
        %194 = OpLoad %int %x_365
               OpStore %x_367_phi %194
               OpBranch %188
        %188 = OpLabel
        %195 = OpLoad %int %x_367_phi
               OpSelectionMerge %196 None
               OpBranchConditional %95 %197 %198
        %197 = OpLabel
               OpBranch %196
        %198 = OpLabel
        %199 = OpAccessChain %_ptr_Private_int %temp %164
               OpStore %199 %195
               OpBranch %196
        %196 = OpLabel
               OpBranch %46
         %46 = OpLabel
               OpBranch %44
         %45 = OpLabel
               OpBranch %200
        %200 = OpLabel
               OpLoopMerge %201 %202 None
               OpBranch %203
        %203 = OpLabel
        %204 = OpLoad %int %i
        %205 = OpLoad %int %i
        %207 = OpLoad %int %mid
        %209 = OpSLessThan %bool %204 %int_10
        %210 = OpSLessThanEqual %bool %205 %207
        %211 = OpLogicalAnd %bool %209 %210
               OpSelectionMerge %212 None
               OpBranchConditional %211 %213 %214
        %213 = OpLabel
               OpBranch %212
        %214 = OpLabel
               OpBranch %201
        %212 = OpLabel
        %215 = OpLoad %int %k
        %216 = OpIAdd %int %215 %int_1
               OpStore %k %216
        %217 = OpLoad %int %i
        %218 = OpIAdd %int %217 %int_1
               OpStore %i %218
        %219 = OpAccessChain %_ptr_Private_int %data %217
        %220 = OpLoad %int %219
        %221 = OpAccessChain %_ptr_Private_int %temp %215
               OpStore %221 %220
               OpBranch %202
        %202 = OpLabel
               OpBranch %200
        %201 = OpLabel
        %223 = OpLoad %int %from
               OpStore %i_1 %223
               OpBranch %224
        %224 = OpLabel
               OpLoopMerge %225 %226 None
               OpBranch %227
        %227 = OpLabel
        %228 = OpLoad %int %i_1
        %230 = OpLoad %int %to
        %231 = OpSLessThanEqual %bool %228 %230
               OpSelectionMerge %232 None
               OpBranchConditional %231 %233 %234
        %233 = OpLabel
               OpBranch %232
        %234 = OpLabel
               OpBranch %225
        %232 = OpLabel
        %235 = OpLoad %int %i_1
        %236 = OpLoad %int %i_1
        %237 = OpAccessChain %_ptr_Private_int %temp %236
        %238 = OpLoad %int %237
        %239 = OpAccessChain %_ptr_Private_int %data %235
               OpStore %239 %238
               OpBranch %226
        %226 = OpLabel
        %240 = OpLoad %int %i_1
        %241 = OpIAdd %int %240 %int_1
               OpStore %i_1 %241
               OpBranch %224
        %225 = OpLabel
               OpReturn
               OpFunctionEnd
 %mergeSort_ = OpFunction %void None %242
        %244 = OpLabel
        %low = OpVariable %_ptr_Function_int Function %32
       %high = OpVariable %_ptr_Function_int Function %32
          %m = OpVariable %_ptr_Function_int Function %32
        %i_2 = OpVariable %_ptr_Function_int Function %32
     %from_1 = OpVariable %_ptr_Function_int Function %32
      %mid_1 = OpVariable %_ptr_Function_int Function %32
       %to_1 = OpVariable %_ptr_Function_int Function %32
      %param = OpVariable %_ptr_Function_int Function %32
    %param_1 = OpVariable %_ptr_Function_int Function %32
    %param_2 = OpVariable %_ptr_Function_int Function %32
               OpStore %low %int_0
               OpStore %high %int_9
               OpStore %m %int_1
               OpBranch %256
        %256 = OpLabel
               OpLoopMerge %257 %258 None
               OpBranch %259
        %259 = OpLabel
        %260 = OpLoad %int %m
        %261 = OpLoad %int %high
        %262 = OpSLessThanEqual %bool %260 %261
               OpSelectionMerge %263 None
               OpBranchConditional %262 %264 %265
        %264 = OpLabel
               OpBranch %263
        %265 = OpLabel
               OpBranch %257
        %263 = OpLabel
        %266 = OpLoad %int %low
               OpStore %i_2 %266
               OpBranch %267
        %267 = OpLabel
               OpLoopMerge %268 %269 None
               OpBranch %270
        %270 = OpLabel
        %271 = OpLoad %int %i_2
        %272 = OpLoad %int %high
        %273 = OpSLessThan %bool %271 %272
               OpSelectionMerge %274 None
               OpBranchConditional %273 %275 %276
        %275 = OpLabel
               OpBranch %274
        %276 = OpLabel
               OpBranch %268
        %274 = OpLabel
        %277 = OpLoad %int %i_2
               OpStore %from_1 %277
        %278 = OpLoad %int %i_2
        %279 = OpLoad %int %m
        %280 = OpIAdd %int %278 %279
        %281 = OpISub %int %280 %int_1
               OpStore %mid_1 %281
        %282 = OpLoad %int %i_2
        %283 = OpLoad %int %m
        %284 = OpLoad %int %high
        %288 = OpIMul %int %int_2 %283
        %289 = OpIAdd %int %282 %288
        %290 = OpISub %int %289 %int_1
        %285 = OpExtInst %int %286 SMin %290 %284
               OpStore %to_1 %285
        %291 = OpLoad %int %from_1
               OpStore %param %291
        %292 = OpLoad %int %mid_1
               OpStore %param_1 %292
        %293 = OpLoad %int %to_1
               OpStore %param_2 %293
        %294 = OpFunctionCall %void %merge_i1_i1_i1_ %param %param_1 %param_2
               OpBranch %269
        %269 = OpLabel
        %298 = OpLoad %int %m
        %299 = OpLoad %int %i_2
        %300 = OpIMul %int %int_2 %298
        %301 = OpIAdd %int %299 %300
               OpStore %i_2 %301
               OpBranch %267
        %268 = OpLabel
               OpBranch %258
        %258 = OpLabel
        %302 = OpLoad %int %m
        %303 = OpIMul %int %int_2 %302
               OpStore %m %303
               OpBranch %256
        %257 = OpLabel
               OpReturn
               OpFunctionEnd
     %main_1 = OpFunction %void None %242
        %305 = OpLabel
        %i_3 = OpVariable %_ptr_Function_int Function %32
        %j_1 = OpVariable %_ptr_Function_int Function %32
       %grey = OpVariable %_ptr_Function_float Function %310
        %311 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_0
        %312 = OpLoad %float %311
        %313 = OpConvertFToS %int %312
               OpStore %i_3 %313
               OpBranch %314
        %314 = OpLabel
               OpLoopMerge %315 %316 None
               OpBranch %317
        %317 = OpLabel
        %318 = OpLoad %int %i_3
               OpSelectionMerge %319 None
               OpSwitch %318 %320 9 %321 8 %322 7 %323 6 %324 5 %325 4 %326 3 %327 2 %328 1 %329 0 %330
        %321 = OpLabel
        %331 = OpLoad %int %i_3
        %332 = OpAccessChain %_ptr_Private_int %data %331
               OpStore %332 %int_n5
               OpBranch %319
        %322 = OpLabel
        %334 = OpLoad %int %i_3
        %335 = OpAccessChain %_ptr_Private_int %data %334
               OpStore %335 %int_n4
               OpBranch %319
        %323 = OpLabel
        %337 = OpLoad %int %i_3
        %338 = OpAccessChain %_ptr_Private_int %data %337
               OpStore %338 %int_n3
               OpBranch %319
        %324 = OpLabel
        %340 = OpLoad %int %i_3
        %341 = OpAccessChain %_ptr_Private_int %data %340
               OpStore %341 %int_n2
               OpBranch %319
        %325 = OpLabel
        %343 = OpLoad %int %i_3
        %344 = OpAccessChain %_ptr_Private_int %data %343
               OpStore %344 %int_n1
               OpBranch %319
        %326 = OpLabel
        %346 = OpLoad %int %i_3
        %347 = OpAccessChain %_ptr_Private_int %data %346
               OpStore %347 %int_0
               OpBranch %319
        %327 = OpLabel
        %348 = OpLoad %int %i_3
        %349 = OpAccessChain %_ptr_Private_int %data %348
               OpStore %349 %int_1
               OpBranch %319
        %328 = OpLabel
        %350 = OpLoad %int %i_3
        %351 = OpAccessChain %_ptr_Private_int %data %350
               OpStore %351 %int_2
               OpBranch %319
        %329 = OpLabel
        %352 = OpLoad %int %i_3
        %353 = OpAccessChain %_ptr_Private_int %data %352
               OpStore %353 %int_3
               OpBranch %319
        %330 = OpLabel
        %355 = OpLoad %int %i_3
        %356 = OpAccessChain %_ptr_Private_int %data %355
               OpStore %356 %int_4
               OpBranch %319
        %320 = OpLabel
               OpBranch %319
        %319 = OpLabel
        %358 = OpLoad %int %i_3
        %359 = OpIAdd %int %358 %int_1
               OpStore %i_3 %359
               OpBranch %316
        %316 = OpLabel
        %360 = OpLoad %int %i_3
        %361 = OpSLessThan %bool %360 %int_10
               OpBranchConditional %361 %314 %315
        %315 = OpLabel
               OpStore %j_1 %int_0
               OpBranch %362
        %362 = OpLabel
               OpLoopMerge %363 %364 None
               OpBranch %365
        %365 = OpLabel
        %366 = OpLoad %int %j_1
        %367 = OpSLessThan %bool %366 %int_10
               OpSelectionMerge %368 None
               OpBranchConditional %367 %369 %370
        %369 = OpLabel
               OpBranch %368
        %370 = OpLabel
               OpBranch %363
        %368 = OpLabel
        %371 = OpLoad %int %j_1
        %372 = OpLoad %int %j_1
        %373 = OpAccessChain %_ptr_Private_int %data %372
        %374 = OpLoad %int %373
        %375 = OpAccessChain %_ptr_Private_int %temp %371
               OpStore %375 %374
               OpBranch %364
        %364 = OpLabel
        %376 = OpLoad %int %j_1
        %377 = OpIAdd %int %376 %int_1
               OpStore %j_1 %377
               OpBranch %362
        %363 = OpLabel
        %378 = OpFunctionCall %void %mergeSort_
        %380 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %381 = OpLoad %float %380
        %382 = OpConvertFToS %int %381
        %384 = OpSLessThan %bool %382 %int_30
               OpSelectionMerge %385 None
               OpBranchConditional %384 %386 %387
        %386 = OpLabel
        %388 = OpAccessChain %_ptr_Private_int %data %int_0
        %389 = OpLoad %int %388
        %391 = OpConvertSToF %float %389
        %393 = OpFDiv %float %391 %float_10
        %394 = OpFAdd %float %float_0_5 %393
               OpStore %grey %394
               OpBranch %385
        %387 = OpLabel
        %395 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %396 = OpLoad %float %395
        %397 = OpConvertFToS %int %396
        %399 = OpSLessThan %bool %397 %int_60
               OpSelectionMerge %400 None
               OpBranchConditional %399 %401 %402
        %401 = OpLabel
        %403 = OpAccessChain %_ptr_Private_int %data %int_1
        %404 = OpLoad %int %403
        %405 = OpConvertSToF %float %404
        %406 = OpFDiv %float %405 %float_10
        %407 = OpFAdd %float %float_0_5 %406
               OpStore %grey %407
               OpBranch %400
        %402 = OpLabel
        %408 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %409 = OpLoad %float %408
        %410 = OpConvertFToS %int %409
        %412 = OpSLessThan %bool %410 %int_90
               OpSelectionMerge %413 None
               OpBranchConditional %412 %414 %415
        %414 = OpLabel
        %416 = OpAccessChain %_ptr_Private_int %data %int_2
        %417 = OpLoad %int %416
        %418 = OpConvertSToF %float %417
        %419 = OpFDiv %float %418 %float_10
        %420 = OpFAdd %float %float_0_5 %419
               OpStore %grey %420
               OpBranch %413
        %415 = OpLabel
        %421 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %422 = OpLoad %float %421
        %423 = OpConvertFToS %int %422
        %425 = OpSLessThan %bool %423 %int_120
               OpSelectionMerge %426 None
               OpBranchConditional %425 %427 %428
        %427 = OpLabel
        %429 = OpAccessChain %_ptr_Private_int %data %int_3
        %430 = OpLoad %int %429
        %431 = OpConvertSToF %float %430
        %432 = OpFDiv %float %431 %float_10
        %433 = OpFAdd %float %float_0_5 %432
               OpStore %grey %433
               OpBranch %426
        %428 = OpLabel
        %434 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %435 = OpLoad %float %434
        %436 = OpConvertFToS %int %435
        %438 = OpSLessThan %bool %436 %int_150
               OpSelectionMerge %439 None
               OpBranchConditional %438 %440 %441
        %440 = OpLabel
               OpKill
        %441 = OpLabel
        %442 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %443 = OpLoad %float %442
        %444 = OpConvertFToS %int %443
        %446 = OpSLessThan %bool %444 %int_180
               OpSelectionMerge %447 None
               OpBranchConditional %446 %448 %449
        %448 = OpLabel
        %451 = OpAccessChain %_ptr_Private_int %data %int_5
        %452 = OpLoad %int %451
        %453 = OpConvertSToF %float %452
        %454 = OpFDiv %float %453 %float_10
        %455 = OpFAdd %float %float_0_5 %454
               OpStore %grey %455
               OpBranch %447
        %449 = OpLabel
        %456 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %457 = OpLoad %float %456
        %458 = OpConvertFToS %int %457
        %460 = OpSLessThan %bool %458 %int_210
               OpSelectionMerge %461 None
               OpBranchConditional %460 %462 %463
        %462 = OpLabel
        %465 = OpAccessChain %_ptr_Private_int %data %int_6
        %466 = OpLoad %int %465
        %467 = OpConvertSToF %float %466
        %468 = OpFDiv %float %467 %float_10
        %469 = OpFAdd %float %float_0_5 %468
               OpStore %grey %469
               OpBranch %461
        %463 = OpLabel
        %470 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %471 = OpLoad %float %470
        %472 = OpConvertFToS %int %471
        %474 = OpSLessThan %bool %472 %int_240
               OpSelectionMerge %475 None
               OpBranchConditional %474 %476 %477
        %476 = OpLabel
        %479 = OpAccessChain %_ptr_Private_int %data %int_7
        %480 = OpLoad %int %479
        %481 = OpConvertSToF %float %480
        %482 = OpFDiv %float %481 %float_10
        %483 = OpFAdd %float %float_0_5 %482
               OpStore %grey %483
               OpBranch %475
        %477 = OpLabel
        %484 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %485 = OpLoad %float %484
        %486 = OpConvertFToS %int %485
        %488 = OpSLessThan %bool %486 %int_270
               OpSelectionMerge %489 None
               OpBranchConditional %488 %490 %491
        %490 = OpLabel
        %493 = OpAccessChain %_ptr_Private_int %data %int_8
        %494 = OpLoad %int %493
        %495 = OpConvertSToF %float %494
        %496 = OpFDiv %float %495 %float_10
        %497 = OpFAdd %float %float_0_5 %496
               OpStore %grey %497
               OpBranch %489
        %491 = OpLabel
               OpKill
        %489 = OpLabel
               OpBranch %475
        %475 = OpLabel
               OpBranch %461
        %461 = OpLabel
               OpBranch %447
        %447 = OpLabel
               OpBranch %439
        %439 = OpLabel
               OpBranch %426
        %426 = OpLabel
               OpBranch %413
        %413 = OpLabel
               OpBranch %400
        %400 = OpLabel
               OpBranch %385
        %385 = OpLabel
        %498 = OpLoad %float %grey
        %500 = OpCompositeConstruct %v3float %498 %498 %498
        %501 = OpCompositeExtract %float %500 0
        %502 = OpCompositeExtract %float %500 1
        %503 = OpCompositeExtract %float %500 2
        %504 = OpCompositeConstruct %v4float %501 %502 %503 %float_1
               OpStore %x_GLF_color %504
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %505
%gl_FragCoord_param = OpFunctionParameter %v4float
        %509 = OpLabel
               OpStore %gl_FragCoord %gl_FragCoord_param
        %510 = OpFunctionCall %void %main_1
        %511 = OpLoad %v4float %x_GLF_color
        %512 = OpCompositeConstruct %main_out %511
               OpReturnValue %512
               OpFunctionEnd
       %main = OpFunction %void None %242
        %514 = OpLabel
        %516 = OpLoad %v4float %gl_FragCoord_param_1
        %515 = OpFunctionCall %main_out %main_inner %516
        %517 = OpCompositeExtract %v4float %515 0
               OpStore %x_GLF_color_1_1 %517
               OpReturn
               OpFunctionEnd
