#include <metal_stdlib>

using namespace metal;
struct buf0 {
  /* 0x0000 */ float one;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_6, thread float4* const tint_symbol_3) {
  float f = 0.0f;
  *(tint_symbol_3) = float4(0.0f, 0.0f, 0.0f, 0.0f);
  float const x_23 = x_6.one;
  f = clamp(x_23, 1.0f, 1.0f);
  float const x_25 = f;
  float const x_27 = x_6.one;
  if ((x_25 > x_27)) {
    *(tint_symbol_3) = float4(0.0f, 0.0f, 0.0f, 0.0f);
  } else {
    float const x_32 = f;
    *(tint_symbol_3) = float4(x_32, 0.0f, 0.0f, 1.0f);
  }
  return;
}

main_out tint_symbol_inner(constant buf0& x_6, thread float4* const tint_symbol_4) {
  main_1(x_6, tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(constant buf0& x_6 [[buffer(0)]]) {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_6, &(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

