; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 69
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_7 "x_7"
               OpName %x_GLF_color "x_GLF_color"
               OpName %mand_ "mand_"
               OpName %k "k"
               OpName %main_1 "main_1"
               OpName %j "j"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_7 NonWritable
               OpDecorate %x_7 DescriptorSet 0
               OpDecorate %x_7 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_7 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
    %v3float = OpTypeVector %float 3
         %12 = OpTypeFunction %v3float
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %19 = OpConstantNull %int
      %int_0 = OpConstant %int 0
       %bool = OpTypeBool
       %true = OpConstantTrue %bool
    %float_1 = OpConstant %float 1
         %31 = OpConstantComposite %v3float %float_1 %float_1 %float_1
       %void = OpTypeVoid
         %32 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %uint_1 = OpConstant %uint 1
    %float_0 = OpConstant %float 0
         %57 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
   %main_out = OpTypeStruct %v4float
         %58 = OpTypeFunction %main_out
      %mand_ = OpFunction %v3float None %12
         %15 = OpLabel
          %k = OpVariable %_ptr_Function_int Function %19
               OpStore %k %int_0
               OpBranch %21
         %21 = OpLabel
               OpLoopMerge %22 %23 None
               OpBranch %24
         %24 = OpLabel
               OpSelectionMerge %27 None
               OpBranchConditional %true %28 %29
         %28 = OpLabel
               OpBranch %27
         %29 = OpLabel
               OpBranch %22
         %27 = OpLabel
               OpKill
         %23 = OpLabel
               OpBranch %21
         %22 = OpLabel
               OpReturnValue %31
               OpFunctionEnd
     %main_1 = OpFunction %void None %32
         %35 = OpLabel
          %j = OpVariable %_ptr_Function_int Function %19
         %40 = OpAccessChain %_ptr_Uniform_float %x_7 %uint_0 %uint_0
         %41 = OpLoad %float %40
         %43 = OpAccessChain %_ptr_Uniform_float %x_7 %uint_0 %uint_1
         %44 = OpLoad %float %43
         %45 = OpFOrdGreaterThan %bool %41 %44
               OpSelectionMerge %46 None
               OpBranchConditional %45 %47 %46
         %47 = OpLabel
               OpStore %j %int_0
               OpBranch %48
         %48 = OpLabel
               OpLoopMerge %49 %50 None
               OpBranch %51
         %51 = OpLabel
               OpSelectionMerge %52 None
               OpBranchConditional %true %53 %54
         %53 = OpLabel
               OpBranch %52
         %54 = OpLabel
               OpBranch %49
         %52 = OpLabel
               OpBranch %50
         %50 = OpLabel
         %55 = OpFunctionCall %v3float %mand_
               OpBranch %48
         %49 = OpLabel
               OpBranch %46
         %46 = OpLabel
               OpStore %x_GLF_color %57
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %58
         %61 = OpLabel
         %62 = OpFunctionCall %void %main_1
         %63 = OpLoad %v4float %x_GLF_color
         %64 = OpCompositeConstruct %main_out %63
               OpReturnValue %64
               OpFunctionEnd
       %main = OpFunction %void None %32
         %66 = OpLabel
         %67 = OpFunctionCall %main_out %main_inner
         %68 = OpCompositeExtract %v4float %67 0
               OpStore %x_GLF_color_1_1 %68
               OpReturn
               OpFunctionEnd
