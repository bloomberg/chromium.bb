#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ float el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[2];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_float_values;
};
struct tint_padded_array_element_1 {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad_1[12];
};
struct tint_array_wrapper_1 {
  /* 0x0000 */ tint_padded_array_element_1 arr[3];
};
struct buf1 {
  /* 0x0000 */ tint_array_wrapper_1 x_GLF_uniform_int_values;
};
struct tint_array_wrapper_2 {
  float4 arr[2];
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_6, constant buf1& x_9, thread float4* const tint_symbol_5) {
  float4 v1 = 0.0f;
  int i = 0;
  int a = 0;
  tint_array_wrapper_2 indexable = {};
  tint_array_wrapper_2 indexable_1 = {};
  float const x_45 = x_6.x_GLF_uniform_float_values.arr[0].el;
  v1 = float4(x_45, x_45, x_45, x_45);
  int const x_48 = x_9.x_GLF_uniform_int_values.arr[1].el;
  i = x_48;
  while (true) {
    int const x_53 = i;
    int const x_55 = x_9.x_GLF_uniform_int_values.arr[0].el;
    if ((x_53 < x_55)) {
    } else {
      break;
    }
    int const x_58 = i;
    int const x_60 = x_9.x_GLF_uniform_int_values.arr[1].el;
    int const x_62 = x_9.x_GLF_uniform_int_values.arr[2].el;
    tint_array_wrapper_2 const tint_symbol_2 = {.arr={float4(1.0f, 1.0f, 1.0f, 1.0f), float4(0.0f, 0.0f, 0.0f, 0.0f)}};
    indexable = tint_symbol_2;
    float const x_65 = indexable.arr[clamp(x_58, x_60, x_62)].x;
    a = int(x_65);
    float const x_68 = x_6.x_GLF_uniform_float_values.arr[0].el;
    float const x_70 = x_6.x_GLF_uniform_float_values.arr[1].el;
    float const x_72 = x_6.x_GLF_uniform_float_values.arr[1].el;
    float const x_74 = x_6.x_GLF_uniform_float_values.arr[0].el;
    float const x_77 = x_6.x_GLF_uniform_float_values.arr[1].el;
    float const x_79 = x_6.x_GLF_uniform_float_values.arr[0].el;
    float const x_81 = x_6.x_GLF_uniform_float_values.arr[0].el;
    float const x_83 = x_6.x_GLF_uniform_float_values.arr[1].el;
    int const x_86 = a;
    tint_array_wrapper_2 const tint_symbol_3 = {.arr={float4(x_68, x_70, x_72, x_74), float4(x_77, x_79, x_81, x_83)}};
    indexable_1 = tint_symbol_3;
    float4 const x_88 = indexable_1.arr[x_86];
    v1 = x_88;
    {
      int const x_89 = i;
      i = as_type<int>((as_type<uint>(x_89) + as_type<uint>(1)));
    }
  }
  float4 const x_91 = v1;
  *(tint_symbol_5) = x_91;
  return;
}

main_out tint_symbol_inner(constant buf0& x_6, constant buf1& x_9, thread float4* const tint_symbol_6) {
  main_1(x_6, x_9, tint_symbol_6);
  main_out const tint_symbol_4 = {.x_GLF_color_1=*(tint_symbol_6)};
  return tint_symbol_4;
}

fragment tint_symbol_1 tint_symbol(constant buf0& x_6 [[buffer(0)]], constant buf1& x_9 [[buffer(1)]]) {
  thread float4 tint_symbol_7 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_6, x_9, &(tint_symbol_7));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

