#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[3];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_int_values;
};
struct tint_padded_array_element_1 {
  /* 0x0000 */ float el;
  /* 0x0004 */ int8_t tint_pad_1[12];
};
struct tint_array_wrapper_1 {
  /* 0x0000 */ tint_padded_array_element_1 arr[1];
};
struct buf1 {
  /* 0x0000 */ tint_array_wrapper_1 x_GLF_uniform_float_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_6, constant buf1& x_9, thread float4* const tint_symbol_3, thread float4* const tint_symbol_4) {
  int i = 0;
  int const x_34 = x_6.x_GLF_uniform_int_values.arr[2].el;
  float const x_35 = float(x_34);
  *(tint_symbol_3) = float4(x_35, x_35, x_35, x_35);
  float const x_38 = (*(tint_symbol_4)).y;
  float const x_40 = x_9.x_GLF_uniform_float_values.arr[0].el;
  i = as_type<int>((as_type<uint>(1) << as_type<uint>(select(1, 2, (x_38 >= x_40)))));
  while (true) {
    bool x_57 = false;
    bool x_58_phi = false;
    int const x_48 = i;
    int const x_50 = x_6.x_GLF_uniform_int_values.arr[0].el;
    bool const x_51 = (x_48 != x_50);
    x_58_phi = x_51;
    if (x_51) {
      int const x_54 = i;
      int const x_56 = x_6.x_GLF_uniform_int_values.arr[1].el;
      x_57 = (x_54 < x_56);
      x_58_phi = x_57;
    }
    bool const x_58 = x_58_phi;
    if (x_58) {
    } else {
      break;
    }
    int const x_61 = x_6.x_GLF_uniform_int_values.arr[0].el;
    int const x_64 = x_6.x_GLF_uniform_int_values.arr[2].el;
    int const x_67 = x_6.x_GLF_uniform_int_values.arr[2].el;
    int const x_70 = x_6.x_GLF_uniform_int_values.arr[0].el;
    *(tint_symbol_3) = float4(float(x_61), float(x_64), float(x_67), float(x_70));
    {
      int const x_73 = i;
      i = as_type<int>((as_type<uint>(x_73) + as_type<uint>(1)));
    }
  }
  return;
}

main_out tint_symbol_inner(constant buf0& x_6, constant buf1& x_9, float4 gl_FragCoord_param, thread float4* const tint_symbol_5, thread float4* const tint_symbol_6) {
  *(tint_symbol_5) = gl_FragCoord_param;
  main_1(x_6, x_9, tint_symbol_6, tint_symbol_5);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_6)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(float4 gl_FragCoord_param [[position]], constant buf0& x_6 [[buffer(0)]], constant buf1& x_9 [[buffer(1)]]) {
  thread float4 tint_symbol_7 = 0.0f;
  thread float4 tint_symbol_8 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_6, x_9, gl_FragCoord_param, &(tint_symbol_7), &(tint_symbol_8));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

