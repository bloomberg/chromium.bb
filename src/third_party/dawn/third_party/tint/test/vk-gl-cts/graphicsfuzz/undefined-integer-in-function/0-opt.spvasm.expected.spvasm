; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 83
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %x_GLF_color "x_GLF_color"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_6 "x_6"
               OpName %performPartition_ "performPartition_"
               OpName %GLF_live0i "GLF_live0i"
               OpName %i "i"
               OpName %x_11 "x_11"
               OpName %x_10_phi "x_10_phi"
               OpName %x_11_phi "x_11_phi"
               OpName %x_42 "x_42"
               OpName %main_1 "main_1"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
        %int = OpTypeInt 32 1
         %12 = OpTypeFunction %int
%_ptr_Function_int = OpTypePointer Function %int
         %18 = OpConstantNull %int
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %24 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
      %int_0 = OpConstant %int 0
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
         %35 = OpConstantNull %bool
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
      %false = OpConstantFalse %bool
       %void = OpTypeVoid
         %67 = OpTypeFunction %void
   %main_out = OpTypeStruct %v4float
         %72 = OpTypeFunction %main_out
%performPartition_ = OpFunction %int None %12
         %15 = OpLabel
 %GLF_live0i = OpVariable %_ptr_Function_int Function %18
          %i = OpVariable %_ptr_Function_int Function %18
       %x_11 = OpVariable %_ptr_Function_int Function %18
   %x_10_phi = OpVariable %_ptr_Function_int Function %18
   %x_11_phi = OpVariable %_ptr_Function_int Function %18
       %x_42 = OpVariable %_ptr_Function_bool Function %35
               OpStore %x_GLF_color %24
               OpStore %x_10_phi %int_0
               OpBranch %26
         %26 = OpLabel
               OpLoopMerge %27 %28 None
               OpBranch %29
         %29 = OpLabel
         %31 = OpLoad %int %x_10_phi
         %40 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %uint_1
         %41 = OpLoad %float %40
         %42 = OpFOrdLessThan %bool %41 %float_0
               OpStore %x_42 %42
         %43 = OpLoad %bool %x_42
               OpSelectionMerge %44 None
               OpBranchConditional %43 %45 %46
         %45 = OpLabel
               OpStore %x_11_phi %31
               OpBranch %28
         %46 = OpLabel
               OpStore %GLF_live0i %int_0
               OpBranch %47
         %47 = OpLabel
               OpLoopMerge %48 %49 None
               OpBranch %50
         %50 = OpLabel
         %52 = OpSLessThan %bool %int_0 %int_1
         %53 = OpLoad %bool %x_42
               OpSelectionMerge %54 None
               OpBranchConditional %53 %55 %54
         %55 = OpLabel
               OpBranch %48
         %54 = OpLabel
               OpReturnValue %int_1
         %49 = OpLabel
               OpBranch %47
         %48 = OpLabel
         %56 = OpLoad %bool %x_42
               OpSelectionMerge %57 None
               OpBranchConditional %56 %58 %57
         %58 = OpLabel
               OpBranch %59
         %59 = OpLabel
               OpLoopMerge %60 %61 None
               OpBranch %62
         %62 = OpLabel
               OpReturnValue %int_1
         %61 = OpLabel
               OpBranch %59
         %60 = OpLabel
               OpReturnValue %int_0
         %57 = OpLabel
               OpStore %x_11_phi %31
               OpBranch %28
         %44 = OpLabel
               OpStore %x_11_phi %int_0
               OpBranch %28
         %28 = OpLabel
         %63 = OpLoad %int %x_11_phi
               OpStore %x_11 %63
         %64 = OpLoad %int %x_11
               OpStore %x_10_phi %64
               OpBranchConditional %false %26 %27
         %27 = OpLabel
         %66 = OpLoad %int %x_11
               OpReturnValue %66
               OpFunctionEnd
     %main_1 = OpFunction %void None %67
         %70 = OpLabel
         %71 = OpFunctionCall %int %performPartition_
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %72
         %75 = OpLabel
         %76 = OpFunctionCall %void %main_1
         %77 = OpLoad %v4float %x_GLF_color
         %78 = OpCompositeConstruct %main_out %77
               OpReturnValue %78
               OpFunctionEnd
       %main = OpFunction %void None %67
         %80 = OpLabel
         %81 = OpFunctionCall %main_out %main_inner
         %82 = OpCompositeExtract %v4float %81 0
               OpStore %x_GLF_color_1_1 %82
               OpReturn
               OpFunctionEnd
