; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 85
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "x_GLF_uniform_int_values"
               OpName %x_6 "x_6"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %a "a"
               OpName %i "i"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %_arr_int_uint_4 ArrayStride 16
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
     %uint_4 = OpConstant %uint 4
%_arr_int_uint_4 = OpTypeArray %int %uint_4
       %buf0 = OpTypeStruct %_arr_int_uint_4
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %15 = OpTypeFunction %void
%_ptr_Function_int = OpTypePointer Function %int
         %21 = OpConstantNull %int
     %uint_0 = OpConstant %uint 0
      %int_1 = OpConstant %int 1
%_ptr_Uniform_int = OpTypePointer Uniform %int
      %int_3 = OpConstant %int 3
      %int_2 = OpConstant %int 2
       %bool = OpTypeBool
      %int_0 = OpConstant %int 0
   %main_out = OpTypeStruct %v4float
         %74 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %15
         %18 = OpLabel
          %a = OpVariable %_ptr_Function_int Function %21
          %i = OpVariable %_ptr_Function_int Function %21
         %26 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %27 = OpLoad %int %26
               OpStore %a %27
         %29 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_3
         %30 = OpLoad %int %29
         %31 = OpSNegate %int %30
               OpStore %i %31
               OpBranch %32
         %32 = OpLabel
               OpLoopMerge %33 %34 None
               OpBranch %35
         %35 = OpLabel
         %36 = OpLoad %int %i
         %37 = OpIAdd %int %36 %int_1
               OpStore %i %37
         %39 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_2
         %40 = OpLoad %int %39
         %41 = OpBitReverse %int %37
         %42 = OpSLessThanEqual %bool %41 %40
               OpSelectionMerge %44 None
               OpBranchConditional %42 %45 %46
         %45 = OpLabel
               OpBranch %44
         %46 = OpLabel
               OpBranch %33
         %44 = OpLabel
         %47 = OpLoad %int %a
         %48 = OpIAdd %int %47 %int_1
               OpStore %a %48
               OpBranch %34
         %34 = OpLabel
               OpBranch %32
         %33 = OpLabel
         %49 = OpLoad %int %a
         %51 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %52 = OpLoad %int %51
         %53 = OpIEqual %bool %49 %52
               OpSelectionMerge %54 None
               OpBranchConditional %53 %55 %56
         %55 = OpLabel
         %57 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_2
         %58 = OpLoad %int %57
         %59 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %60 = OpLoad %int %59
         %61 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %62 = OpLoad %int %61
         %63 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_2
         %64 = OpLoad %int %63
         %65 = OpConvertSToF %float %58
         %66 = OpConvertSToF %float %60
         %67 = OpConvertSToF %float %62
         %68 = OpConvertSToF %float %64
         %69 = OpCompositeConstruct %v4float %65 %66 %67 %68
               OpStore %x_GLF_color %69
               OpBranch %54
         %56 = OpLabel
         %70 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %71 = OpLoad %int %70
         %72 = OpConvertSToF %float %71
         %73 = OpCompositeConstruct %v4float %72 %72 %72 %72
               OpStore %x_GLF_color %73
               OpBranch %54
         %54 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %74
         %77 = OpLabel
         %78 = OpFunctionCall %void %main_1
         %79 = OpLoad %v4float %x_GLF_color
         %80 = OpCompositeConstruct %main_out %79
               OpReturnValue %80
               OpFunctionEnd
       %main = OpFunction %void None %15
         %82 = OpLabel
         %83 = OpFunctionCall %main_out %main_inner
         %84 = OpCompositeExtract %v4float %83 0
               OpStore %x_GLF_color_1_1 %84
               OpReturn
               OpFunctionEnd
