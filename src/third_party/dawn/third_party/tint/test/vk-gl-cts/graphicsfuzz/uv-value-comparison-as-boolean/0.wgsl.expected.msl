#include <metal_stdlib>

using namespace metal;
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(thread float4* const tint_symbol_3) {
  bool c1 = false;
  float2 uv = 0.0f;
  int i = 0;
  bool x_37 = false;
  bool x_37_phi = false;
  int x_9_phi = 0;
  float const x_34 = uv.y;
  bool const x_35 = (x_34 < 0.25f);
  c1 = x_35;
  i = 0;
  x_37_phi = x_35;
  x_9_phi = 0;
  while (true) {
    x_37 = x_37_phi;
    int const x_9 = x_9_phi;
    if ((x_9 < 1)) {
    } else {
      break;
    }
    *(tint_symbol_3) = float4(1.0f, 0.0f, 0.0f, 1.0f);
    return;
    {
      int const x_7 = i;
      i = as_type<int>((as_type<uint>(x_7) + as_type<uint>(1)));
      x_37_phi = false;
      x_9_phi = 0;
    }
  }
  if (x_37) {
    return;
  }
  return;
}

main_out tint_symbol_inner(thread float4* const tint_symbol_4) {
  main_1(tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol() {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(&(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

