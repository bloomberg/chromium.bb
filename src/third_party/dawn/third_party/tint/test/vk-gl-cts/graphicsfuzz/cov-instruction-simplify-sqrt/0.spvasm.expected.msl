#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ float el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[2];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_float_values;
};
struct tint_padded_array_element_1 {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad_1[12];
};
struct tint_array_wrapper_1 {
  /* 0x0000 */ tint_padded_array_element_1 arr[2];
};
struct buf1 {
  /* 0x0000 */ tint_array_wrapper_1 x_GLF_uniform_int_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_5, constant buf1& x_7, thread float4* const tint_symbol_3) {
  float const x_31 = x_5.x_GLF_uniform_float_values.arr[0].el;
  if ((sqrt(x_31) < -1.0f)) {
    int const x_10 = x_7.x_GLF_uniform_int_values.arr[1].el;
    float const x_38 = float(x_10);
    *(tint_symbol_3) = float4(x_38, x_38, x_38, x_38);
  } else {
    int const x_11 = x_7.x_GLF_uniform_int_values.arr[0].el;
    float const x_41 = float(x_11);
    int const x_12 = x_7.x_GLF_uniform_int_values.arr[1].el;
    float const x_43 = float(x_12);
    *(tint_symbol_3) = float4(x_41, x_43, x_43, x_41);
  }
  return;
}

main_out tint_symbol_inner(constant buf0& x_5, constant buf1& x_7, thread float4* const tint_symbol_4) {
  main_1(x_5, x_7, tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(constant buf0& x_5 [[buffer(0)]], constant buf1& x_7 [[buffer(1)]]) {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_5, x_7, &(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

