; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 165
; Schema: 0
               OpCapability Shader
        %124 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf1 "buf1"
               OpMemberName %buf1 0 "x_GLF_uniform_int_values"
               OpName %x_6 "x_6"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "x_GLF_uniform_float_values"
               OpName %x_10 "x_10"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %A "A"
               OpName %i "i"
               OpName %a "a"
               OpName %v1 "v1"
               OpName %v2 "v2"
               OpName %b "b"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf1 Block
               OpMemberDecorate %buf1 0 Offset 0
               OpDecorate %_arr_int_uint_3 ArrayStride 16
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 1
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %_arr_float_uint_2 ArrayStride 16
               OpDecorate %x_10 NonWritable
               OpDecorate %x_10 DescriptorSet 0
               OpDecorate %x_10 Binding 0
               OpDecorate %_arr_int_uint_2 ArrayStride 4
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
     %uint_3 = OpConstant %uint 3
%_arr_int_uint_3 = OpTypeArray %int %uint_3
       %buf1 = OpTypeStruct %_arr_int_uint_3
%_ptr_Uniform_buf1 = OpTypePointer Uniform %buf1
        %x_6 = OpVariable %_ptr_Uniform_buf1 Uniform
     %uint_2 = OpConstant %uint 2
%_arr_float_uint_2 = OpTypeArray %float %uint_2
       %buf0 = OpTypeStruct %_arr_float_uint_2
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
       %x_10 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
%_arr_int_uint_2 = OpTypeArray %int %uint_2
%_ptr_Function__arr_int_uint_2 = OpTypePointer Function %_arr_int_uint_2
         %27 = OpConstantNull %_arr_int_uint_2
%_ptr_Function_int = OpTypePointer Function %int
         %30 = OpConstantNull %int
    %v2float = OpTypeVector %float 2
%_ptr_Function_v2float = OpTypePointer Function %v2float
         %35 = OpConstantNull %v2float
     %uint_0 = OpConstant %uint 0
      %int_2 = OpConstant %int 2
%_ptr_Uniform_int = OpTypePointer Uniform %int
      %int_0 = OpConstant %int 0
      %int_1 = OpConstant %int 1
       %bool = OpTypeBool
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %v2bool = OpTypeVector %bool 2
       %true = OpConstantTrue %bool
%_ptr_Function_float = OpTypePointer Function %float
      %false = OpConstantFalse %bool
        %112 = OpConstantComposite %v2bool %false %false
   %main_out = OpTypeStruct %v4float
        %154 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %20
         %23 = OpLabel
          %A = OpVariable %_ptr_Function__arr_int_uint_2 Function %27
          %i = OpVariable %_ptr_Function_int Function %30
          %a = OpVariable %_ptr_Function_int Function %30
         %v1 = OpVariable %_ptr_Function_v2float Function %35
         %v2 = OpVariable %_ptr_Function_v2float Function %35
          %b = OpVariable %_ptr_Function_int Function %30
         %41 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_2
         %42 = OpLoad %int %41
         %44 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %45 = OpLoad %int %44
         %46 = OpAccessChain %_ptr_Function_int %A %42
               OpStore %46 %45
         %47 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %48 = OpLoad %int %47
         %50 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %51 = OpLoad %int %50
         %52 = OpAccessChain %_ptr_Function_int %A %48
               OpStore %52 %51
         %53 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %54 = OpLoad %int %53
               OpStore %i %54
               OpBranch %55
         %55 = OpLabel
               OpLoopMerge %56 %57 None
               OpBranch %58
         %58 = OpLabel
         %59 = OpLoad %int %i
         %60 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_2
         %61 = OpLoad %int %60
         %62 = OpSGreaterThan %bool %59 %61
               OpSelectionMerge %64 None
               OpBranchConditional %62 %65 %66
         %65 = OpLabel
               OpBranch %64
         %66 = OpLabel
               OpBranch %56
         %64 = OpLabel
         %67 = OpLoad %int %i
         %68 = OpISub %int %67 %int_1
               OpStore %i %68
               OpBranch %57
         %57 = OpLabel
               OpBranch %55
         %56 = OpLabel
         %70 = OpAccessChain %_ptr_Uniform_float %x_10 %uint_0 %int_1
         %71 = OpLoad %float %70
         %72 = OpAccessChain %_ptr_Uniform_float %x_10 %uint_0 %int_1
         %73 = OpLoad %float %72
         %74 = OpLoad %int %i
         %76 = OpFOrdGreaterThanEqual %bool %71 %73
         %75 = OpSelect %int %76 %int_1 %74
         %77 = OpAccessChain %_ptr_Function_int %A %75
         %78 = OpLoad %int %77
               OpStore %a %78
         %79 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %80 = OpLoad %int %79
         %81 = OpLoad %int %a
         %82 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %83 = OpLoad %int %82
         %84 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %85 = OpLoad %int %84
         %86 = OpAccessChain %_ptr_Uniform_float %x_10 %uint_0 %int_1
         %87 = OpLoad %float %86
         %88 = OpAccessChain %_ptr_Uniform_float %x_10 %uint_0 %int_0
         %89 = OpLoad %float %88
         %92 = OpFOrdLessThan %bool %87 %89
         %94 = OpCompositeConstruct %v2bool %92 %true
         %95 = OpConvertSToF %float %83
         %96 = OpConvertSToF %float %85
         %97 = OpCompositeConstruct %v2float %95 %96
         %98 = OpConvertSToF %float %80
         %99 = OpConvertSToF %float %81
        %100 = OpCompositeConstruct %v2float %98 %99
         %90 = OpSelect %v2float %94 %97 %100
               OpStore %v1 %90
        %101 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_2
        %102 = OpLoad %int %101
        %104 = OpAccessChain %_ptr_Function_float %v1 %102
        %105 = OpLoad %float %104
        %106 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
        %107 = OpLoad %int %106
        %108 = OpAccessChain %_ptr_Function_float %v1 %107
        %109 = OpLoad %float %108
        %113 = OpCompositeConstruct %v2float %109 %109
        %114 = OpCompositeConstruct %v2float %105 %105
        %110 = OpSelect %v2float %112 %113 %114
               OpStore %v2 %110
        %115 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
        %116 = OpLoad %int %115
        %117 = OpConvertSToF %float %116
        %118 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
        %119 = OpLoad %int %118
        %120 = OpConvertSToF %float %119
        %121 = OpLoad %v2float %v2
        %125 = OpCompositeConstruct %v2float %117 %117
        %126 = OpCompositeConstruct %v2float %120 %120
        %123 = OpExtInst %v2float %124 NClamp %125 %126 %121
        %127 = OpCompositeExtract %float %123 0
        %122 = OpConvertFToS %int %127
        %128 = OpAccessChain %_ptr_Function_int %A %122
        %129 = OpLoad %int %128
               OpStore %b %129
        %130 = OpLoad %int %b
        %131 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
        %132 = OpLoad %int %131
        %133 = OpIEqual %bool %130 %132
               OpSelectionMerge %134 None
               OpBranchConditional %133 %135 %136
        %135 = OpLabel
        %137 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
        %138 = OpLoad %int %137
        %139 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_2
        %140 = OpLoad %int %139
        %141 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_2
        %142 = OpLoad %int %141
        %143 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
        %144 = OpLoad %int %143
        %145 = OpConvertSToF %float %138
        %146 = OpConvertSToF %float %140
        %147 = OpConvertSToF %float %142
        %148 = OpConvertSToF %float %144
        %149 = OpCompositeConstruct %v4float %145 %146 %147 %148
               OpStore %x_GLF_color %149
               OpBranch %134
        %136 = OpLabel
        %150 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_2
        %151 = OpLoad %int %150
        %152 = OpConvertSToF %float %151
        %153 = OpCompositeConstruct %v4float %152 %152 %152 %152
               OpStore %x_GLF_color %153
               OpBranch %134
        %134 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %154
        %157 = OpLabel
        %158 = OpFunctionCall %void %main_1
        %159 = OpLoad %v4float %x_GLF_color
        %160 = OpCompositeConstruct %main_out %159
               OpReturnValue %160
               OpFunctionEnd
       %main = OpFunction %void None %20
        %162 = OpLabel
        %163 = OpFunctionCall %main_out %main_inner
        %164 = OpCompositeExtract %v4float %163 0
               OpStore %x_GLF_color_1_1 %164
               OpReturn
               OpFunctionEnd
