; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 78
; Schema: 0
               OpCapability Shader
         %55 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_6 "x_6"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %i "i"
               OpName %value "value"
               OpName %y "y"
               OpName %x_31_phi "x_31_phi"
               OpName %x_55_phi "x_55_phi"
               OpName %x_46_phi "x_46_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %19 = OpConstantNull %int
%_ptr_Function_float = OpTypePointer Function %float
         %23 = OpConstantNull %float
      %int_0 = OpConstant %int 0
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_2 = OpConstant %int 2
       %bool = OpTypeBool
  %float_0_5 = OpConstant %float 0.5
    %float_1 = OpConstant %float 1
      %int_1 = OpConstant %int 1
    %float_0 = OpConstant %float 0
   %main_out = OpTypeStruct %v4float
         %67 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %12
         %15 = OpLabel
          %i = OpVariable %_ptr_Function_int Function %19
      %value = OpVariable %_ptr_Function_int Function %19
          %y = OpVariable %_ptr_Function_float Function %23
   %x_31_phi = OpVariable %_ptr_Function_int Function %19
   %x_55_phi = OpVariable %_ptr_Function_float Function %23
   %x_46_phi = OpVariable %_ptr_Function_float Function %23
               OpStore %i %int_0
               OpStore %x_31_phi %int_0
               OpBranch %26
         %26 = OpLabel
               OpLoopMerge %27 %28 None
               OpBranch %29
         %29 = OpLabel
         %30 = OpLoad %int %x_31_phi
         %34 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %uint_0
         %35 = OpLoad %float %34
         %37 = OpConvertFToS %int %35
         %38 = OpIAdd %int %int_2 %37
         %39 = OpSLessThan %bool %30 %38
               OpSelectionMerge %41 None
               OpBranchConditional %39 %42 %43
         %42 = OpLabel
               OpBranch %41
         %43 = OpLabel
               OpBranch %27
         %41 = OpLabel
               OpStore %value %30
               OpStore %y %float_0_5
               OpStore %x_55_phi %float_0_5
               OpStore %x_46_phi %float_0_5
               OpSelectionMerge %47 None
               OpSwitch %30 %48 0 %49 1 %50 2 %51
         %49 = OpLabel
         %52 = OpFAdd %float %float_0_5 %float_0_5
               OpStore %y %52
               OpStore %x_55_phi %52
               OpBranch %50
         %50 = OpLabel
         %53 = OpLoad %float %x_55_phi
         %54 = OpExtInst %float %55 NClamp %float_1 %float_0_5 %53
               OpStore %y %54
               OpStore %x_46_phi %54
               OpBranch %48
         %48 = OpLabel
               OpBranch %51
         %51 = OpLabel
         %57 = OpLoad %float %x_46_phi
         %58 = OpFOrdEqual %bool %57 %float_1
               OpSelectionMerge %59 None
               OpBranchConditional %58 %60 %59
         %60 = OpLabel
         %63 = OpIAdd %int %30 %int_1
         %61 = OpConvertSToF %float %63
         %65 = OpCompositeConstruct %v4float %61 %float_0 %float_0 %float_1
               OpStore %x_GLF_color %65
               OpReturn
         %59 = OpLabel
               OpBranch %47
         %47 = OpLabel
               OpBranch %28
         %28 = OpLabel
         %66 = OpIAdd %int %30 %int_1
               OpStore %i %66
               OpStore %x_31_phi %66
               OpBranch %26
         %27 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %67
         %70 = OpLabel
         %71 = OpFunctionCall %void %main_1
         %72 = OpLoad %v4float %x_GLF_color
         %73 = OpCompositeConstruct %main_out %72
               OpReturnValue %73
               OpFunctionEnd
       %main = OpFunction %void None %12
         %75 = OpLabel
         %76 = OpFunctionCall %main_out %main_inner
         %77 = OpCompositeExtract %v4float %76 0
               OpStore %x_GLF_color_1_1 %77
               OpReturn
               OpFunctionEnd
