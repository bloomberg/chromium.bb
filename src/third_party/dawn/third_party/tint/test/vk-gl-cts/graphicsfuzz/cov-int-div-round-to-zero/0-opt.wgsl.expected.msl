#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[3];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_int_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_6, thread float4* const tint_symbol_3) {
  int a = 0;
  int const x_28 = x_6.x_GLF_uniform_int_values.arr[1].el;
  a = x_28;
  int const x_29 = a;
  int const x_31 = x_6.x_GLF_uniform_int_values.arr[2].el;
  int const x_37 = x_6.x_GLF_uniform_int_values.arr[0].el;
  if ((((int2(x_29, x_29) / int2(x_31, 63677))).y == x_37)) {
    int const x_43 = x_6.x_GLF_uniform_int_values.arr[2].el;
    int const x_46 = x_6.x_GLF_uniform_int_values.arr[0].el;
    int const x_49 = x_6.x_GLF_uniform_int_values.arr[0].el;
    int const x_52 = x_6.x_GLF_uniform_int_values.arr[2].el;
    *(tint_symbol_3) = float4(float(x_43), float(x_46), float(x_49), float(x_52));
  } else {
    int const x_56 = x_6.x_GLF_uniform_int_values.arr[0].el;
    float const x_57 = float(x_56);
    *(tint_symbol_3) = float4(x_57, x_57, x_57, x_57);
  }
  return;
}

main_out tint_symbol_inner(constant buf0& x_6, thread float4* const tint_symbol_4) {
  main_1(x_6, tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(constant buf0& x_6 [[buffer(0)]]) {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_6, &(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

