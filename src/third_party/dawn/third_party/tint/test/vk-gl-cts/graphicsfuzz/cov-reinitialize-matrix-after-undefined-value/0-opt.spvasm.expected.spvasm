; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 146
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "x_GLF_uniform_int_values"
               OpName %x_5 "x_5"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %m "m"
               OpName %f "f"
               OpName %i "i"
               OpName %j "j"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %_arr_int_uint_4 ArrayStride 16
               OpDecorate %x_5 NonWritable
               OpDecorate %x_5 DescriptorSet 0
               OpDecorate %x_5 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
     %uint_4 = OpConstant %uint 4
%_arr_int_uint_4 = OpTypeArray %int %uint_4
       %buf0 = OpTypeStruct %_arr_int_uint_4
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_5 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %15 = OpTypeFunction %void
    %v2float = OpTypeVector %float 2
%mat2v2float = OpTypeMatrix %v2float 2
%_ptr_Function_mat2v2float = OpTypePointer Function %mat2v2float
         %23 = OpConstantNull %mat2v2float
%_ptr_Function_float = OpTypePointer Function %float
         %26 = OpConstantNull %float
%_ptr_Function_int = OpTypePointer Function %int
         %29 = OpConstantNull %int
     %uint_0 = OpConstant %uint 0
      %int_1 = OpConstant %int 1
%_ptr_Uniform_int = OpTypePointer Uniform %int
       %bool = OpTypeBool
    %float_0 = OpConstant %float 0
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
     %v2bool = OpTypeVector %bool 2
     %uint_1 = OpConstant %uint 1
   %main_out = OpTypeStruct %v4float
        %135 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %15
         %18 = OpLabel
          %m = OpVariable %_ptr_Function_mat2v2float Function %23
          %f = OpVariable %_ptr_Function_float Function %26
          %i = OpVariable %_ptr_Function_int Function %29
          %j = OpVariable %_ptr_Function_int Function %29
         %34 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_1
         %35 = OpLoad %int %34
         %36 = OpIEqual %bool %35 %int_1
               OpSelectionMerge %38 None
               OpBranchConditional %36 %39 %38
         %39 = OpLabel
         %40 = OpLoad %float %f
         %42 = OpCompositeConstruct %v2float %40 %float_0
         %43 = OpCompositeConstruct %v2float %float_0 %40
         %44 = OpCompositeConstruct %mat2v2float %42 %43
               OpStore %m %44
               OpBranch %38
         %38 = OpLabel
         %45 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_1
         %46 = OpLoad %int %45
               OpStore %i %46
               OpBranch %47
         %47 = OpLabel
               OpLoopMerge %48 %49 None
               OpBranch %50
         %50 = OpLabel
         %51 = OpLoad %int %i
         %53 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_0
         %54 = OpLoad %int %53
         %55 = OpSLessThan %bool %51 %54
               OpSelectionMerge %56 None
               OpBranchConditional %55 %57 %58
         %57 = OpLabel
               OpBranch %56
         %58 = OpLabel
               OpBranch %48
         %56 = OpLabel
         %59 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_1
         %60 = OpLoad %int %59
               OpStore %j %60
               OpBranch %61
         %61 = OpLabel
               OpLoopMerge %62 %63 None
               OpBranch %64
         %64 = OpLabel
         %65 = OpLoad %int %j
         %66 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_0
         %67 = OpLoad %int %66
         %68 = OpSLessThan %bool %65 %67
               OpSelectionMerge %69 None
               OpBranchConditional %68 %70 %71
         %70 = OpLabel
               OpBranch %69
         %71 = OpLabel
               OpBranch %62
         %69 = OpLabel
         %72 = OpLoad %int %i
         %73 = OpLoad %int %j
         %74 = OpLoad %int %i
         %75 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_0
         %76 = OpLoad %int %75
         %77 = OpLoad %int %j
         %78 = OpAccessChain %_ptr_Function_float %m %72 %73
         %80 = OpIMul %int %74 %76
         %81 = OpIAdd %int %80 %77
         %79 = OpConvertSToF %float %81
               OpStore %78 %79
               OpBranch %63
         %63 = OpLabel
         %82 = OpLoad %int %j
         %83 = OpIAdd %int %82 %int_1
               OpStore %j %83
               OpBranch %61
         %62 = OpLabel
               OpBranch %49
         %49 = OpLabel
         %84 = OpLoad %int %i
         %85 = OpIAdd %int %84 %int_1
               OpStore %i %85
               OpBranch %47
         %48 = OpLabel
         %86 = OpLoad %mat2v2float %m
         %87 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_1
         %88 = OpLoad %int %87
         %90 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_2
         %91 = OpLoad %int %90
         %92 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_0
         %93 = OpLoad %int %92
         %95 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_3
         %96 = OpLoad %int %95
         %97 = OpConvertSToF %float %88
         %98 = OpConvertSToF %float %91
         %99 = OpCompositeConstruct %v2float %97 %98
        %100 = OpConvertSToF %float %93
        %101 = OpConvertSToF %float %96
        %102 = OpCompositeConstruct %v2float %100 %101
        %103 = OpCompositeConstruct %mat2v2float %99 %102
        %105 = OpCompositeExtract %v2float %86 0
        %106 = OpCompositeExtract %v2float %103 0
        %107 = OpFOrdEqual %v2bool %105 %106
        %104 = OpAll %bool %107
        %111 = OpCompositeExtract %v2float %86 1
        %112 = OpCompositeExtract %v2float %103 1
        %113 = OpFOrdEqual %v2bool %111 %112
        %109 = OpAll %bool %113
        %114 = OpLogicalAnd %bool %104 %109
               OpSelectionMerge %115 None
               OpBranchConditional %114 %116 %117
        %116 = OpLabel
        %118 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_2
        %119 = OpLoad %int %118
        %120 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_1
        %121 = OpLoad %int %120
        %122 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_1
        %123 = OpLoad %int %122
        %124 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_2
        %125 = OpLoad %int %124
        %126 = OpConvertSToF %float %119
        %127 = OpConvertSToF %float %121
        %128 = OpConvertSToF %float %123
        %129 = OpConvertSToF %float %125
        %130 = OpCompositeConstruct %v4float %126 %127 %128 %129
               OpStore %x_GLF_color %130
               OpBranch %115
        %117 = OpLabel
        %131 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0 %int_1
        %132 = OpLoad %int %131
        %133 = OpConvertSToF %float %132
        %134 = OpCompositeConstruct %v4float %133 %133 %133 %133
               OpStore %x_GLF_color %134
               OpBranch %115
        %115 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %135
        %138 = OpLabel
        %139 = OpFunctionCall %void %main_1
        %140 = OpLoad %v4float %x_GLF_color
        %141 = OpCompositeConstruct %main_out %140
               OpReturnValue %141
               OpFunctionEnd
       %main = OpFunction %void None %15
        %143 = OpLabel
        %144 = OpFunctionCall %main_out %main_inner
        %145 = OpCompositeExtract %v4float %144 0
               OpStore %x_GLF_color_1_1 %145
               OpReturn
               OpFunctionEnd
