; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 92
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_5 "x_5"
               OpName %x_GLF_color "x_GLF_color"
               OpName %x_51 "x_51"
               OpName %main_1 "main_1"
               OpName %x_31 "x_31"
               OpName %x_30_phi "x_30_phi"
               OpName %x_31_phi "x_31_phi"
               OpName %x_52 "x_52"
               OpName %x_54 "x_54"
               OpName %x_55_phi "x_55_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_5 NonWritable
               OpDecorate %x_5 DescriptorSet 0
               OpDecorate %x_5 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_5 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
         %25 = OpConstantNull %bool
      %false = OpConstantFalse %bool
%_ptr_Function_v4float = OpTypePointer Function %v4float
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
%_ptr_Uniform_float = OpTypePointer Uniform %float
    %float_0 = OpConstant %float 0
         %63 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
    %float_1 = OpConstant %float 1
         %66 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
       %true = OpConstantTrue %bool
   %main_out = OpTypeStruct %v4float
         %81 = OpTypeFunction %main_out
       %x_51 = OpFunction %void None %12
         %15 = OpLabel
               OpKill
               OpFunctionEnd
     %main_1 = OpFunction %void None %12
         %17 = OpLabel
       %x_31 = OpVariable %_ptr_Function_bool Function %25
   %x_30_phi = OpVariable %_ptr_Function_bool Function %25
   %x_31_phi = OpVariable %_ptr_Function_bool Function %25
       %x_52 = OpVariable %_ptr_Function_v4float Function %5
       %x_54 = OpVariable %_ptr_Function_v4float Function %5
   %x_55_phi = OpVariable %_ptr_Function_v4float Function %5
               OpBranch %18
         %18 = OpLabel
               OpLoopMerge %19 %20 None
               OpBranch %21
         %21 = OpLabel
               OpStore %x_30_phi %false
               OpBranch %28
         %28 = OpLabel
               OpLoopMerge %29 %30 None
               OpBranch %31
         %31 = OpLabel
         %33 = OpLoad %bool %x_30_phi
               OpBranch %34
         %34 = OpLabel
               OpLoopMerge %35 %36 None
               OpBranch %37
         %37 = OpLabel
         %46 = OpAccessChain %_ptr_Uniform_float %x_5 %uint_0 %uint_1
         %47 = OpLoad %float %46
               OpStore %x_31_phi %33
         %49 = OpFOrdGreaterThan %bool %47 %float_0
               OpSelectionMerge %50 None
               OpBranchConditional %49 %51 %52
         %51 = OpLabel
               OpBranch %50
         %52 = OpLabel
               OpBranch %35
         %50 = OpLabel
               OpBranch %53
         %53 = OpLabel
               OpLoopMerge %54 %55 None
               OpBranch %56
         %56 = OpLabel
         %57 = OpAccessChain %_ptr_Uniform_float %x_5 %uint_0 %uint_0
         %58 = OpLoad %float %57
         %59 = OpFOrdGreaterThan %bool %58 %float_0
               OpSelectionMerge %60 None
               OpBranchConditional %59 %61 %60
         %61 = OpLabel
         %62 = OpFunctionCall %void %x_51
               OpStore %x_52 %63
         %64 = OpLoad %v4float %x_52
               OpStore %x_55_phi %64
               OpBranch %54
         %60 = OpLabel
         %67 = OpCompositeConstruct %v4float %58 %58 %58 %58
         %68 = OpFAdd %v4float %66 %67
               OpStore %x_54 %68
         %69 = OpLoad %v4float %x_54
               OpStore %x_55_phi %69
               OpBranch %54
         %55 = OpLabel
               OpBranch %53
         %54 = OpLabel
         %70 = OpLoad %v4float %x_55_phi
               OpStore %x_GLF_color %70
               OpStore %x_31_phi %true
               OpBranch %35
         %36 = OpLabel
               OpBranch %34
         %35 = OpLabel
         %72 = OpLoad %bool %x_31_phi
               OpStore %x_31 %72
         %73 = OpLoad %bool %x_31
               OpSelectionMerge %74 None
               OpBranchConditional %73 %75 %76
         %75 = OpLabel
               OpBranch %29
         %76 = OpLabel
               OpBranch %30
         %74 = OpLabel
               OpBranch %30
         %30 = OpLabel
         %77 = OpLoad %bool %x_31
               OpStore %x_30_phi %77
               OpBranch %28
         %29 = OpLabel
         %78 = OpLoad %bool %x_31
               OpSelectionMerge %79 None
               OpBranchConditional %78 %80 %79
         %80 = OpLabel
               OpBranch %19
         %79 = OpLabel
               OpBranch %19
         %20 = OpLabel
               OpBranch %18
         %19 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %81
         %84 = OpLabel
         %85 = OpFunctionCall %void %main_1
         %86 = OpLoad %v4float %x_GLF_color
         %87 = OpCompositeConstruct %main_out %86
               OpReturnValue %87
               OpFunctionEnd
       %main = OpFunction %void None %12
         %89 = OpLabel
         %90 = OpFunctionCall %main_out %main_inner
         %91 = OpCompositeExtract %v4float %90 0
               OpStore %x_GLF_color_1_1 %91
               OpReturn
               OpFunctionEnd
