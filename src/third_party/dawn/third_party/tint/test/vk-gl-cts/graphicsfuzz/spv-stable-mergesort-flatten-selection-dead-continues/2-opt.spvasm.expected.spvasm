; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 516
; Schema: 0
               OpCapability Shader
        %284 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %gl_FragCoord_param_1 %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %gl_FragCoord_param_1 "gl_FragCoord_param_1"
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %data "data"
               OpName %temp "temp"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_28 "x_28"
               OpName %gl_FragCoord "gl_FragCoord"
               OpName %x_GLF_color "x_GLF_color"
               OpName %merge_i1_i1_i1_ "merge_i1_i1_i1_"
               OpName %from "from"
               OpName %mid "mid"
               OpName %to "to"
               OpName %k "k"
               OpName %i "i"
               OpName %j "j"
               OpName %i_1 "i_1"
               OpName %x_283 "x_283"
               OpName %x_284 "x_284"
               OpName %x_303 "x_303"
               OpName %x_304 "x_304"
               OpName %x_318 "x_318"
               OpName %x_322 "x_322"
               OpName %x_337 "x_337"
               OpName %x_336 "x_336"
               OpName %x_350 "x_350"
               OpName %x_349 "x_349"
               OpName %x_364 "x_364"
               OpName %x_363 "x_363"
               OpName %x_285_phi "x_285_phi"
               OpName %x_305_phi "x_305_phi"
               OpName %x_326_phi "x_326_phi"
               OpName %x_338_phi "x_338_phi"
               OpName %x_351_phi "x_351_phi"
               OpName %x_365_phi "x_365_phi"
               OpName %mergeSort_ "mergeSort_"
               OpName %low "low"
               OpName %high "high"
               OpName %m "m"
               OpName %i_2 "i_2"
               OpName %from_1 "from_1"
               OpName %mid_1 "mid_1"
               OpName %to_1 "to_1"
               OpName %param "param"
               OpName %param_1 "param_1"
               OpName %param_2 "param_2"
               OpName %main_1 "main_1"
               OpName %i_3 "i_3"
               OpName %j_1 "j_1"
               OpName %grey "grey"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %gl_FragCoord_param "gl_FragCoord_param"
               OpName %main "main"
               OpDecorate %gl_FragCoord_param_1 BuiltIn FragCoord
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %_arr_int_uint_10 ArrayStride 4
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_28 NonWritable
               OpDecorate %x_28 DescriptorSet 0
               OpDecorate %x_28 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Input_v4float = OpTypePointer Input %v4float
%gl_FragCoord_param_1 = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %7 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %7
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %uint_10 = OpConstant %uint 10
%_arr_int_uint_10 = OpTypeArray %int %uint_10
%_ptr_Private__arr_int_uint_10 = OpTypePointer Private %_arr_int_uint_10
         %14 = OpConstantNull %_arr_int_uint_10
       %data = OpVariable %_ptr_Private__arr_int_uint_10 Private %14
       %temp = OpVariable %_ptr_Private__arr_int_uint_10 Private %14
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
       %x_28 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%gl_FragCoord = OpVariable %_ptr_Private_v4float Private %7
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %7
       %void = OpTypeVoid
%_ptr_Function_int = OpTypePointer Function %int
         %23 = OpTypeFunction %void %_ptr_Function_int %_ptr_Function_int %_ptr_Function_int
         %32 = OpConstantNull %int
      %int_1 = OpConstant %int 1
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
       %bool = OpTypeBool
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %uint_1 = OpConstant %uint 1
     %int_10 = OpConstant %int 10
        %240 = OpTypeFunction %void
      %int_9 = OpConstant %int 9
      %int_2 = OpConstant %int 2
%_ptr_Function_float = OpTypePointer Function %float
        %308 = OpConstantNull %float
     %int_n5 = OpConstant %int -5
     %int_n4 = OpConstant %int -4
     %int_n3 = OpConstant %int -3
     %int_n2 = OpConstant %int -2
     %int_n1 = OpConstant %int -1
      %int_3 = OpConstant %int 3
      %int_4 = OpConstant %int 4
%_ptr_Private_float = OpTypePointer Private %float
     %int_30 = OpConstant %int 30
  %float_0_5 = OpConstant %float 0.5
   %float_10 = OpConstant %float 10
     %int_60 = OpConstant %int 60
     %int_90 = OpConstant %int 90
    %int_120 = OpConstant %int 120
    %int_150 = OpConstant %int 150
    %int_180 = OpConstant %int 180
      %int_5 = OpConstant %int 5
    %int_210 = OpConstant %int 210
      %int_6 = OpConstant %int 6
    %int_240 = OpConstant %int 240
      %int_7 = OpConstant %int 7
    %int_270 = OpConstant %int 270
      %int_8 = OpConstant %int 8
    %v3float = OpTypeVector %float 3
   %main_out = OpTypeStruct %v4float
        %503 = OpTypeFunction %main_out %v4float
%merge_i1_i1_i1_ = OpFunction %void None %23
       %from = OpFunctionParameter %_ptr_Function_int
        %mid = OpFunctionParameter %_ptr_Function_int
         %to = OpFunctionParameter %_ptr_Function_int
         %30 = OpLabel
          %k = OpVariable %_ptr_Function_int Function %32
          %i = OpVariable %_ptr_Function_int Function %32
          %j = OpVariable %_ptr_Function_int Function %32
        %i_1 = OpVariable %_ptr_Function_int Function %32
      %x_283 = OpVariable %_ptr_Function_int Function %32
      %x_284 = OpVariable %_ptr_Function_int Function %32
      %x_303 = OpVariable %_ptr_Function_int Function %32
      %x_304 = OpVariable %_ptr_Function_int Function %32
      %x_318 = OpVariable %_ptr_Function_int Function %32
      %x_322 = OpVariable %_ptr_Function_int Function %32
      %x_337 = OpVariable %_ptr_Function_int Function %32
      %x_336 = OpVariable %_ptr_Function_int Function %32
      %x_350 = OpVariable %_ptr_Function_int Function %32
      %x_349 = OpVariable %_ptr_Function_int Function %32
      %x_364 = OpVariable %_ptr_Function_int Function %32
      %x_363 = OpVariable %_ptr_Function_int Function %32
  %x_285_phi = OpVariable %_ptr_Function_int Function %32
  %x_305_phi = OpVariable %_ptr_Function_int Function %32
  %x_326_phi = OpVariable %_ptr_Function_int Function %32
  %x_338_phi = OpVariable %_ptr_Function_int Function %32
  %x_351_phi = OpVariable %_ptr_Function_int Function %32
  %x_365_phi = OpVariable %_ptr_Function_int Function %32
         %37 = OpLoad %int %from
               OpStore %k %37
         %39 = OpLoad %int %from
               OpStore %i %39
         %41 = OpLoad %int %mid
         %43 = OpIAdd %int %41 %int_1
               OpStore %j %43
               OpBranch %44
         %44 = OpLabel
               OpLoopMerge %45 %46 None
               OpBranch %47
         %47 = OpLabel
         %68 = OpFOrdGreaterThanEqual %bool %float_1 %float_0
               OpSelectionMerge %70 None
               OpBranchConditional %68 %71 %72
         %71 = OpLabel
               OpBranch %70
         %72 = OpLabel
               OpBranch %46
         %70 = OpLabel
         %73 = OpLoad %int %i
         %75 = OpLoad %int %mid
         %76 = OpLoad %int %j
         %78 = OpLoad %int %to
         %79 = OpSLessThanEqual %bool %73 %75
         %80 = OpSLessThanEqual %bool %76 %78
         %81 = OpLogicalAnd %bool %79 %80
               OpSelectionMerge %82 None
               OpBranchConditional %81 %83 %84
         %83 = OpLabel
               OpBranch %82
         %84 = OpLabel
               OpBranch %45
         %82 = OpLabel
         %85 = OpLoad %int %i
         %87 = OpAccessChain %_ptr_Private_int %data %85
         %88 = OpLoad %int %87
         %89 = OpLoad %int %j
         %90 = OpAccessChain %_ptr_Private_int %data %89
         %91 = OpLoad %int %90
         %92 = OpSLessThan %bool %88 %91
               OpSelectionMerge %93 None
               OpBranchConditional %92 %94 %95
         %94 = OpLabel
         %96 = OpLoad %int %k
               OpStore %x_283 %96
         %97 = OpLoad %int %x_283
               OpStore %x_285_phi %97
               OpBranch %93
         %95 = OpLabel
               OpStore %x_284 %int_0
         %99 = OpLoad %int %x_284
               OpStore %x_285_phi %99
               OpBranch %93
         %93 = OpLabel
        %100 = OpLoad %int %x_285_phi
        %101 = OpIAdd %int %100 %int_1
               OpSelectionMerge %102 None
               OpBranchConditional %92 %103 %102
        %103 = OpLabel
               OpStore %k %101
        %106 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_0
        %107 = OpLoad %float %106
        %109 = OpFOrdLessThanEqual %bool %float_1 %107
        %108 = OpLogicalNot %bool %109
               OpSelectionMerge %110 None
               OpBranchConditional %108 %111 %112
        %111 = OpLabel
               OpBranch %110
        %112 = OpLabel
               OpBranch %46
        %110 = OpLabel
               OpBranch %102
        %102 = OpLabel
        %114 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_1
        %115 = OpLoad %float %114
        %116 = OpFOrdGreaterThanEqual %bool %115 %float_0
               OpSelectionMerge %117 None
               OpBranchConditional %116 %118 %119
        %118 = OpLabel
               OpBranch %117
        %119 = OpLabel
               OpBranch %46
        %117 = OpLabel
               OpSelectionMerge %120 None
               OpBranchConditional %92 %121 %122
        %121 = OpLabel
        %123 = OpLoad %int %i
               OpStore %x_303 %123
        %124 = OpLoad %int %x_303
               OpStore %x_305_phi %124
               OpBranch %120
        %122 = OpLabel
               OpStore %x_304 %int_0
        %125 = OpLoad %int %x_304
               OpStore %x_305_phi %125
               OpBranch %120
        %120 = OpLabel
        %126 = OpLoad %int %x_305_phi
        %127 = OpSelect %int %92 %126 %int_0
               OpSelectionMerge %128 None
               OpBranchConditional %92 %129 %128
        %129 = OpLabel
        %130 = OpIAdd %int %127 %int_1
               OpStore %i %130
               OpBranch %128
        %128 = OpLabel
               OpSelectionMerge %131 None
               OpBranchConditional %92 %132 %133
        %132 = OpLabel
        %134 = OpAccessChain %_ptr_Private_int %data %127
        %135 = OpLoad %int %134
               OpStore %x_318 %135
        %136 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_1
        %137 = OpLoad %float %136
        %138 = OpLoad %int %x_318
               OpStore %x_326_phi %138
        %140 = OpFOrdLessThanEqual %bool %float_0 %137
        %139 = OpLogicalNot %bool %140
               OpSelectionMerge %141 None
               OpBranchConditional %139 %142 %141
        %142 = OpLabel
               OpBranch %46
        %141 = OpLabel
               OpBranch %131
        %133 = OpLabel
               OpStore %x_322 %int_0
        %143 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_1
        %144 = OpLoad %float %143
        %145 = OpLoad %int %x_322
               OpStore %x_326_phi %145
        %147 = OpFOrdLessThan %bool %144 %float_0
        %146 = OpLogicalNot %bool %147
               OpSelectionMerge %148 None
               OpBranchConditional %146 %149 %150
        %149 = OpLabel
               OpBranch %148
        %150 = OpLabel
               OpBranch %46
        %148 = OpLabel
               OpBranch %131
        %131 = OpLabel
        %151 = OpLoad %int %x_326_phi
               OpSelectionMerge %152 None
               OpBranchConditional %92 %153 %152
        %153 = OpLabel
        %154 = OpAccessChain %_ptr_Private_int %temp %100
        %155 = OpSelect %int %92 %151 %int_0
               OpStore %154 %155
               OpBranch %152
        %152 = OpLabel
               OpSelectionMerge %156 None
               OpBranchConditional %92 %157 %158
        %157 = OpLabel
               OpStore %x_337 %int_0
        %159 = OpLoad %int %x_337
               OpStore %x_338_phi %159
               OpBranch %156
        %158 = OpLabel
        %160 = OpLoad %int %k
               OpStore %x_336 %160
        %161 = OpLoad %int %x_336
               OpStore %x_338_phi %161
               OpBranch %156
        %156 = OpLabel
        %162 = OpLoad %int %x_338_phi
               OpSelectionMerge %163 None
               OpBranchConditional %92 %164 %165
        %164 = OpLabel
               OpBranch %163
        %165 = OpLabel
        %166 = OpIAdd %int %162 %int_1
               OpStore %k %166
               OpBranch %163
        %163 = OpLabel
        %167 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_0
        %168 = OpLoad %float %167
        %170 = OpFOrdLessThanEqual %bool %float_1 %168
        %169 = OpLogicalNot %bool %170
               OpSelectionMerge %171 None
               OpBranchConditional %169 %172 %173
        %172 = OpLabel
               OpBranch %171
        %173 = OpLabel
               OpBranch %46
        %171 = OpLabel
               OpSelectionMerge %174 None
               OpBranchConditional %92 %175 %176
        %175 = OpLabel
               OpStore %x_350 %int_0
        %177 = OpLoad %int %x_350
               OpStore %x_351_phi %177
               OpBranch %174
        %176 = OpLabel
        %178 = OpLoad %int %j
               OpStore %x_349 %178
        %179 = OpLoad %int %x_349
               OpStore %x_351_phi %179
               OpBranch %174
        %174 = OpLabel
        %180 = OpLoad %int %x_351_phi
        %181 = OpSelect %int %92 %int_0 %180
               OpSelectionMerge %182 None
               OpBranchConditional %92 %183 %184
        %183 = OpLabel
               OpBranch %182
        %184 = OpLabel
        %185 = OpIAdd %int %181 %int_1
               OpStore %j %185
               OpBranch %182
        %182 = OpLabel
               OpSelectionMerge %186 None
               OpBranchConditional %92 %187 %188
        %187 = OpLabel
               OpStore %x_364 %int_0
        %189 = OpLoad %int %x_364
               OpStore %x_365_phi %189
               OpBranch %186
        %188 = OpLabel
        %190 = OpAccessChain %_ptr_Private_int %data %181
        %191 = OpLoad %int %190
               OpStore %x_363 %191
        %192 = OpLoad %int %x_363
               OpStore %x_365_phi %192
               OpBranch %186
        %186 = OpLabel
        %193 = OpLoad %int %x_365_phi
               OpSelectionMerge %194 None
               OpBranchConditional %92 %195 %196
        %195 = OpLabel
               OpBranch %194
        %196 = OpLabel
        %197 = OpAccessChain %_ptr_Private_int %temp %162
               OpStore %197 %193
               OpBranch %194
        %194 = OpLabel
               OpBranch %46
         %46 = OpLabel
               OpBranch %44
         %45 = OpLabel
               OpBranch %198
        %198 = OpLabel
               OpLoopMerge %199 %200 None
               OpBranch %201
        %201 = OpLabel
        %202 = OpLoad %int %i
        %203 = OpLoad %int %i
        %205 = OpLoad %int %mid
        %207 = OpSLessThan %bool %202 %int_10
        %208 = OpSLessThanEqual %bool %203 %205
        %209 = OpLogicalAnd %bool %207 %208
               OpSelectionMerge %210 None
               OpBranchConditional %209 %211 %212
        %211 = OpLabel
               OpBranch %210
        %212 = OpLabel
               OpBranch %199
        %210 = OpLabel
        %213 = OpLoad %int %k
        %214 = OpIAdd %int %213 %int_1
               OpStore %k %214
        %215 = OpLoad %int %i
        %216 = OpIAdd %int %215 %int_1
               OpStore %i %216
        %217 = OpAccessChain %_ptr_Private_int %data %215
        %218 = OpLoad %int %217
        %219 = OpAccessChain %_ptr_Private_int %temp %213
               OpStore %219 %218
               OpBranch %200
        %200 = OpLabel
               OpBranch %198
        %199 = OpLabel
        %221 = OpLoad %int %from
               OpStore %i_1 %221
               OpBranch %222
        %222 = OpLabel
               OpLoopMerge %223 %224 None
               OpBranch %225
        %225 = OpLabel
        %226 = OpLoad %int %i_1
        %228 = OpLoad %int %to
        %229 = OpSLessThanEqual %bool %226 %228
               OpSelectionMerge %230 None
               OpBranchConditional %229 %231 %232
        %231 = OpLabel
               OpBranch %230
        %232 = OpLabel
               OpBranch %223
        %230 = OpLabel
        %233 = OpLoad %int %i_1
        %234 = OpLoad %int %i_1
        %235 = OpAccessChain %_ptr_Private_int %temp %234
        %236 = OpLoad %int %235
        %237 = OpAccessChain %_ptr_Private_int %data %233
               OpStore %237 %236
               OpBranch %224
        %224 = OpLabel
        %238 = OpLoad %int %i_1
        %239 = OpIAdd %int %238 %int_1
               OpStore %i_1 %239
               OpBranch %222
        %223 = OpLabel
               OpReturn
               OpFunctionEnd
 %mergeSort_ = OpFunction %void None %240
        %242 = OpLabel
        %low = OpVariable %_ptr_Function_int Function %32
       %high = OpVariable %_ptr_Function_int Function %32
          %m = OpVariable %_ptr_Function_int Function %32
        %i_2 = OpVariable %_ptr_Function_int Function %32
     %from_1 = OpVariable %_ptr_Function_int Function %32
      %mid_1 = OpVariable %_ptr_Function_int Function %32
       %to_1 = OpVariable %_ptr_Function_int Function %32
      %param = OpVariable %_ptr_Function_int Function %32
    %param_1 = OpVariable %_ptr_Function_int Function %32
    %param_2 = OpVariable %_ptr_Function_int Function %32
               OpStore %low %int_0
               OpStore %high %int_9
               OpStore %m %int_1
               OpBranch %254
        %254 = OpLabel
               OpLoopMerge %255 %256 None
               OpBranch %257
        %257 = OpLabel
        %258 = OpLoad %int %m
        %259 = OpLoad %int %high
        %260 = OpSLessThanEqual %bool %258 %259
               OpSelectionMerge %261 None
               OpBranchConditional %260 %262 %263
        %262 = OpLabel
               OpBranch %261
        %263 = OpLabel
               OpBranch %255
        %261 = OpLabel
        %264 = OpLoad %int %low
               OpStore %i_2 %264
               OpBranch %265
        %265 = OpLabel
               OpLoopMerge %266 %267 None
               OpBranch %268
        %268 = OpLabel
        %269 = OpLoad %int %i_2
        %270 = OpLoad %int %high
        %271 = OpSLessThan %bool %269 %270
               OpSelectionMerge %272 None
               OpBranchConditional %271 %273 %274
        %273 = OpLabel
               OpBranch %272
        %274 = OpLabel
               OpBranch %266
        %272 = OpLabel
        %275 = OpLoad %int %i_2
               OpStore %from_1 %275
        %276 = OpLoad %int %i_2
        %277 = OpLoad %int %m
        %278 = OpIAdd %int %276 %277
        %279 = OpISub %int %278 %int_1
               OpStore %mid_1 %279
        %280 = OpLoad %int %i_2
        %281 = OpLoad %int %m
        %282 = OpLoad %int %high
        %286 = OpIMul %int %int_2 %281
        %287 = OpIAdd %int %280 %286
        %288 = OpISub %int %287 %int_1
        %283 = OpExtInst %int %284 SMin %288 %282
               OpStore %to_1 %283
        %289 = OpLoad %int %from_1
               OpStore %param %289
        %290 = OpLoad %int %mid_1
               OpStore %param_1 %290
        %291 = OpLoad %int %to_1
               OpStore %param_2 %291
        %292 = OpFunctionCall %void %merge_i1_i1_i1_ %param %param_1 %param_2
               OpBranch %267
        %267 = OpLabel
        %296 = OpLoad %int %m
        %297 = OpLoad %int %i_2
        %298 = OpIMul %int %int_2 %296
        %299 = OpIAdd %int %297 %298
               OpStore %i_2 %299
               OpBranch %265
        %266 = OpLabel
               OpBranch %256
        %256 = OpLabel
        %300 = OpLoad %int %m
        %301 = OpIMul %int %int_2 %300
               OpStore %m %301
               OpBranch %254
        %255 = OpLabel
               OpReturn
               OpFunctionEnd
     %main_1 = OpFunction %void None %240
        %303 = OpLabel
        %i_3 = OpVariable %_ptr_Function_int Function %32
        %j_1 = OpVariable %_ptr_Function_int Function %32
       %grey = OpVariable %_ptr_Function_float Function %308
        %309 = OpAccessChain %_ptr_Uniform_float %x_28 %uint_0 %uint_0
        %310 = OpLoad %float %309
        %311 = OpConvertFToS %int %310
               OpStore %i_3 %311
               OpBranch %312
        %312 = OpLabel
               OpLoopMerge %313 %314 None
               OpBranch %315
        %315 = OpLabel
        %316 = OpLoad %int %i_3
               OpSelectionMerge %317 None
               OpSwitch %316 %318 9 %319 8 %320 7 %321 6 %322 5 %323 4 %324 3 %325 2 %326 1 %327 0 %328
        %319 = OpLabel
        %329 = OpLoad %int %i_3
        %330 = OpAccessChain %_ptr_Private_int %data %329
               OpStore %330 %int_n5
               OpBranch %317
        %320 = OpLabel
        %332 = OpLoad %int %i_3
        %333 = OpAccessChain %_ptr_Private_int %data %332
               OpStore %333 %int_n4
               OpBranch %317
        %321 = OpLabel
        %335 = OpLoad %int %i_3
        %336 = OpAccessChain %_ptr_Private_int %data %335
               OpStore %336 %int_n3
               OpBranch %317
        %322 = OpLabel
        %338 = OpLoad %int %i_3
        %339 = OpAccessChain %_ptr_Private_int %data %338
               OpStore %339 %int_n2
               OpBranch %317
        %323 = OpLabel
        %341 = OpLoad %int %i_3
        %342 = OpAccessChain %_ptr_Private_int %data %341
               OpStore %342 %int_n1
               OpBranch %317
        %324 = OpLabel
        %344 = OpLoad %int %i_3
        %345 = OpAccessChain %_ptr_Private_int %data %344
               OpStore %345 %int_0
               OpBranch %317
        %325 = OpLabel
        %346 = OpLoad %int %i_3
        %347 = OpAccessChain %_ptr_Private_int %data %346
               OpStore %347 %int_1
               OpBranch %317
        %326 = OpLabel
        %348 = OpLoad %int %i_3
        %349 = OpAccessChain %_ptr_Private_int %data %348
               OpStore %349 %int_2
               OpBranch %317
        %327 = OpLabel
        %350 = OpLoad %int %i_3
        %351 = OpAccessChain %_ptr_Private_int %data %350
               OpStore %351 %int_3
               OpBranch %317
        %328 = OpLabel
        %353 = OpLoad %int %i_3
        %354 = OpAccessChain %_ptr_Private_int %data %353
               OpStore %354 %int_4
               OpBranch %317
        %318 = OpLabel
               OpBranch %317
        %317 = OpLabel
        %356 = OpLoad %int %i_3
        %357 = OpIAdd %int %356 %int_1
               OpStore %i_3 %357
               OpBranch %314
        %314 = OpLabel
        %358 = OpLoad %int %i_3
        %359 = OpSLessThan %bool %358 %int_10
               OpBranchConditional %359 %312 %313
        %313 = OpLabel
               OpStore %j_1 %int_0
               OpBranch %360
        %360 = OpLabel
               OpLoopMerge %361 %362 None
               OpBranch %363
        %363 = OpLabel
        %364 = OpLoad %int %j_1
        %365 = OpSLessThan %bool %364 %int_10
               OpSelectionMerge %366 None
               OpBranchConditional %365 %367 %368
        %367 = OpLabel
               OpBranch %366
        %368 = OpLabel
               OpBranch %361
        %366 = OpLabel
        %369 = OpLoad %int %j_1
        %370 = OpLoad %int %j_1
        %371 = OpAccessChain %_ptr_Private_int %data %370
        %372 = OpLoad %int %371
        %373 = OpAccessChain %_ptr_Private_int %temp %369
               OpStore %373 %372
               OpBranch %362
        %362 = OpLabel
        %374 = OpLoad %int %j_1
        %375 = OpIAdd %int %374 %int_1
               OpStore %j_1 %375
               OpBranch %360
        %361 = OpLabel
        %376 = OpFunctionCall %void %mergeSort_
        %378 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %379 = OpLoad %float %378
        %380 = OpConvertFToS %int %379
        %382 = OpSLessThan %bool %380 %int_30
               OpSelectionMerge %383 None
               OpBranchConditional %382 %384 %385
        %384 = OpLabel
        %386 = OpAccessChain %_ptr_Private_int %data %int_0
        %387 = OpLoad %int %386
        %389 = OpConvertSToF %float %387
        %391 = OpFDiv %float %389 %float_10
        %392 = OpFAdd %float %float_0_5 %391
               OpStore %grey %392
               OpBranch %383
        %385 = OpLabel
        %393 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %394 = OpLoad %float %393
        %395 = OpConvertFToS %int %394
        %397 = OpSLessThan %bool %395 %int_60
               OpSelectionMerge %398 None
               OpBranchConditional %397 %399 %400
        %399 = OpLabel
        %401 = OpAccessChain %_ptr_Private_int %data %int_1
        %402 = OpLoad %int %401
        %403 = OpConvertSToF %float %402
        %404 = OpFDiv %float %403 %float_10
        %405 = OpFAdd %float %float_0_5 %404
               OpStore %grey %405
               OpBranch %398
        %400 = OpLabel
        %406 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %407 = OpLoad %float %406
        %408 = OpConvertFToS %int %407
        %410 = OpSLessThan %bool %408 %int_90
               OpSelectionMerge %411 None
               OpBranchConditional %410 %412 %413
        %412 = OpLabel
        %414 = OpAccessChain %_ptr_Private_int %data %int_2
        %415 = OpLoad %int %414
        %416 = OpConvertSToF %float %415
        %417 = OpFDiv %float %416 %float_10
        %418 = OpFAdd %float %float_0_5 %417
               OpStore %grey %418
               OpBranch %411
        %413 = OpLabel
        %419 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %420 = OpLoad %float %419
        %421 = OpConvertFToS %int %420
        %423 = OpSLessThan %bool %421 %int_120
               OpSelectionMerge %424 None
               OpBranchConditional %423 %425 %426
        %425 = OpLabel
        %427 = OpAccessChain %_ptr_Private_int %data %int_3
        %428 = OpLoad %int %427
        %429 = OpConvertSToF %float %428
        %430 = OpFDiv %float %429 %float_10
        %431 = OpFAdd %float %float_0_5 %430
               OpStore %grey %431
               OpBranch %424
        %426 = OpLabel
        %432 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %433 = OpLoad %float %432
        %434 = OpConvertFToS %int %433
        %436 = OpSLessThan %bool %434 %int_150
               OpSelectionMerge %437 None
               OpBranchConditional %436 %438 %439
        %438 = OpLabel
               OpKill
        %439 = OpLabel
        %440 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %441 = OpLoad %float %440
        %442 = OpConvertFToS %int %441
        %444 = OpSLessThan %bool %442 %int_180
               OpSelectionMerge %445 None
               OpBranchConditional %444 %446 %447
        %446 = OpLabel
        %449 = OpAccessChain %_ptr_Private_int %data %int_5
        %450 = OpLoad %int %449
        %451 = OpConvertSToF %float %450
        %452 = OpFDiv %float %451 %float_10
        %453 = OpFAdd %float %float_0_5 %452
               OpStore %grey %453
               OpBranch %445
        %447 = OpLabel
        %454 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %455 = OpLoad %float %454
        %456 = OpConvertFToS %int %455
        %458 = OpSLessThan %bool %456 %int_210
               OpSelectionMerge %459 None
               OpBranchConditional %458 %460 %461
        %460 = OpLabel
        %463 = OpAccessChain %_ptr_Private_int %data %int_6
        %464 = OpLoad %int %463
        %465 = OpConvertSToF %float %464
        %466 = OpFDiv %float %465 %float_10
        %467 = OpFAdd %float %float_0_5 %466
               OpStore %grey %467
               OpBranch %459
        %461 = OpLabel
        %468 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %469 = OpLoad %float %468
        %470 = OpConvertFToS %int %469
        %472 = OpSLessThan %bool %470 %int_240
               OpSelectionMerge %473 None
               OpBranchConditional %472 %474 %475
        %474 = OpLabel
        %477 = OpAccessChain %_ptr_Private_int %data %int_7
        %478 = OpLoad %int %477
        %479 = OpConvertSToF %float %478
        %480 = OpFDiv %float %479 %float_10
        %481 = OpFAdd %float %float_0_5 %480
               OpStore %grey %481
               OpBranch %473
        %475 = OpLabel
        %482 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %483 = OpLoad %float %482
        %484 = OpConvertFToS %int %483
        %486 = OpSLessThan %bool %484 %int_270
               OpSelectionMerge %487 None
               OpBranchConditional %486 %488 %489
        %488 = OpLabel
        %491 = OpAccessChain %_ptr_Private_int %data %int_8
        %492 = OpLoad %int %491
        %493 = OpConvertSToF %float %492
        %494 = OpFDiv %float %493 %float_10
        %495 = OpFAdd %float %float_0_5 %494
               OpStore %grey %495
               OpBranch %487
        %489 = OpLabel
               OpKill
        %487 = OpLabel
               OpBranch %473
        %473 = OpLabel
               OpBranch %459
        %459 = OpLabel
               OpBranch %445
        %445 = OpLabel
               OpBranch %437
        %437 = OpLabel
               OpBranch %424
        %424 = OpLabel
               OpBranch %411
        %411 = OpLabel
               OpBranch %398
        %398 = OpLabel
               OpBranch %383
        %383 = OpLabel
        %496 = OpLoad %float %grey
        %498 = OpCompositeConstruct %v3float %496 %496 %496
        %499 = OpCompositeExtract %float %498 0
        %500 = OpCompositeExtract %float %498 1
        %501 = OpCompositeExtract %float %498 2
        %502 = OpCompositeConstruct %v4float %499 %500 %501 %float_1
               OpStore %x_GLF_color %502
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %503
%gl_FragCoord_param = OpFunctionParameter %v4float
        %507 = OpLabel
               OpStore %gl_FragCoord %gl_FragCoord_param
        %508 = OpFunctionCall %void %main_1
        %509 = OpLoad %v4float %x_GLF_color
        %510 = OpCompositeConstruct %main_out %509
               OpReturnValue %510
               OpFunctionEnd
       %main = OpFunction %void None %240
        %512 = OpLabel
        %514 = OpLoad %v4float %gl_FragCoord_param_1
        %513 = OpFunctionCall %main_out %main_inner %514
        %515 = OpCompositeExtract %v4float %513 0
               OpStore %x_GLF_color_1_1 %515
               OpReturn
               OpFunctionEnd
