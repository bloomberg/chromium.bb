; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 78
; Schema: 0
               OpCapability Shader
         %42 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "x_GLF_uniform_float_values"
               OpName %x_6 "x_6"
               OpName %buf1 "buf1"
               OpMemberName %buf1 0 "x_GLF_uniform_int_values"
               OpName %x_8 "x_8"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %v1 "v1"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %_arr_float_uint_2 ArrayStride 16
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpDecorate %buf1 Block
               OpMemberDecorate %buf1 0 Offset 0
               OpDecorate %_arr_int_uint_2 ArrayStride 16
               OpDecorate %x_8 NonWritable
               OpDecorate %x_8 DescriptorSet 0
               OpDecorate %x_8 Binding 1
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
       %uint = OpTypeInt 32 0
     %uint_2 = OpConstant %uint 2
%_arr_float_uint_2 = OpTypeArray %float %uint_2
       %buf0 = OpTypeStruct %_arr_float_uint_2
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
        %int = OpTypeInt 32 1
%_arr_int_uint_2 = OpTypeArray %int %uint_2
       %buf1 = OpTypeStruct %_arr_int_uint_2
%_ptr_Uniform_buf1 = OpTypePointer Uniform %buf1
        %x_8 = OpVariable %_ptr_Uniform_buf1 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %19 = OpTypeFunction %void
    %v2float = OpTypeVector %float 2
%_ptr_Function_v2float = OpTypePointer Function %v2float
         %26 = OpConstantNull %v2float
     %uint_0 = OpConstant %uint 0
      %int_0 = OpConstant %int 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
%_ptr_Uniform_int = OpTypePointer Uniform %int
     %uint_1 = OpConstant %uint 1
%_ptr_Function_float = OpTypePointer Function %float
   %int_n256 = OpConstant %int -256
%mat2v2float = OpTypeMatrix %v2float 2
    %float_0 = OpConstant %float 0
       %bool = OpTypeBool
      %int_1 = OpConstant %int 1
   %main_out = OpTypeStruct %v4float
         %67 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %19
         %22 = OpLabel
         %v1 = OpVariable %_ptr_Function_v2float Function %26
         %30 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_0
         %31 = OpLoad %float %30
         %32 = OpCompositeConstruct %v2float %31 %31
               OpStore %v1 %32
         %34 = OpAccessChain %_ptr_Uniform_int %x_8 %uint_0 %int_0
         %35 = OpLoad %int %34
         %38 = OpAccessChain %_ptr_Function_float %v1 %uint_1
         %39 = OpLoad %float %38
         %40 = OpAccessChain %_ptr_Function_float %v1 %35
         %41 = OpExtInst %float %42 Ldexp %39 %int_n256
               OpStore %40 %41
         %44 = OpLoad %v2float %v1
         %47 = OpCompositeConstruct %v2float %31 %float_0
         %48 = OpCompositeConstruct %v2float %float_0 %31
         %49 = OpCompositeConstruct %mat2v2float %47 %48
         %50 = OpVectorTimesMatrix %v2float %44 %49
         %51 = OpCompositeExtract %float %50 0
         %52 = OpFOrdEqual %bool %51 %31
               OpSelectionMerge %54 None
               OpBranchConditional %52 %55 %56
         %55 = OpLabel
         %57 = OpConvertSToF %float %35
         %59 = OpAccessChain %_ptr_Uniform_int %x_8 %uint_0 %int_1
         %60 = OpLoad %int %59
         %61 = OpConvertSToF %float %60
         %62 = OpCompositeConstruct %v4float %57 %61 %61 %57
               OpStore %x_GLF_color %62
               OpBranch %54
         %56 = OpLabel
         %63 = OpAccessChain %_ptr_Uniform_int %x_8 %uint_0 %int_1
         %64 = OpLoad %int %63
         %65 = OpConvertSToF %float %64
         %66 = OpCompositeConstruct %v4float %65 %65 %65 %65
               OpStore %x_GLF_color %66
               OpBranch %54
         %54 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %67
         %70 = OpLabel
         %71 = OpFunctionCall %void %main_1
         %72 = OpLoad %v4float %x_GLF_color
         %73 = OpCompositeConstruct %main_out %72
               OpReturnValue %73
               OpFunctionEnd
       %main = OpFunction %void None %19
         %75 = OpLabel
         %76 = OpFunctionCall %main_out %main_inner
         %77 = OpCompositeExtract %v4float %76 0
               OpStore %x_GLF_color_1_1 %77
               OpReturn
               OpFunctionEnd
