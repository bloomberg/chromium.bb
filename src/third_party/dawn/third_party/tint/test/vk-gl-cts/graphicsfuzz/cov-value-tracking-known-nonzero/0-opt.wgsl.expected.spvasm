; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 93
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "x_GLF_uniform_int_values"
               OpName %x_7 "x_7"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %a "a"
               OpName %sum "sum"
               OpName %i "i"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %_arr_int_uint_4 ArrayStride 16
               OpDecorate %x_7 NonWritable
               OpDecorate %x_7 DescriptorSet 0
               OpDecorate %x_7 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
     %uint_4 = OpConstant %uint 4
%_arr_int_uint_4 = OpTypeArray %int %uint_4
       %buf0 = OpTypeStruct %_arr_int_uint_4
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_7 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %15 = OpTypeFunction %void
%_ptr_Function_int = OpTypePointer Function %int
         %21 = OpConstantNull %int
  %int_65536 = OpConstant %int 65536
     %uint_0 = OpConstant %uint 0
      %int_0 = OpConstant %int 0
%_ptr_Uniform_int = OpTypePointer Uniform %int
      %int_1 = OpConstant %int 1
       %bool = OpTypeBool
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
   %main_out = OpTypeStruct %v4float
         %82 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %15
         %18 = OpLabel
          %a = OpVariable %_ptr_Function_int Function %21
        %sum = OpVariable %_ptr_Function_int Function %21
          %i = OpVariable %_ptr_Function_int Function %21
               OpStore %a %int_65536
         %28 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0 %int_0
         %29 = OpLoad %int %28
               OpStore %sum %29
         %31 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0 %int_1
         %32 = OpLoad %int %31
         %33 = OpIEqual %bool %int_1 %32
               OpSelectionMerge %35 None
               OpBranchConditional %33 %36 %35
         %36 = OpLabel
         %37 = OpLoad %int %a
         %38 = OpISub %int %37 %int_1
               OpStore %a %38
               OpBranch %35
         %35 = OpLabel
               OpStore %i %int_0
               OpBranch %39
         %39 = OpLabel
               OpLoopMerge %40 %41 None
               OpBranch %42
         %42 = OpLabel
         %43 = OpLoad %int %i
         %44 = OpLoad %int %a
         %45 = OpSLessThan %bool %43 %44
               OpSelectionMerge %46 None
               OpBranchConditional %45 %47 %48
         %47 = OpLabel
               OpBranch %46
         %48 = OpLabel
               OpBranch %40
         %46 = OpLabel
         %49 = OpLoad %int %i
         %50 = OpLoad %int %sum
         %51 = OpIAdd %int %50 %49
               OpStore %sum %51
               OpBranch %41
         %41 = OpLabel
         %53 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0 %int_2
         %54 = OpLoad %int %53
         %55 = OpLoad %int %i
         %56 = OpIAdd %int %55 %54
               OpStore %i %56
               OpBranch %39
         %40 = OpLabel
         %57 = OpLoad %int %sum
         %59 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0 %int_3
         %60 = OpLoad %int %59
         %61 = OpIEqual %bool %57 %60
               OpSelectionMerge %62 None
               OpBranchConditional %61 %63 %64
         %63 = OpLabel
         %65 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0 %int_1
         %66 = OpLoad %int %65
         %67 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0 %int_0
         %68 = OpLoad %int %67
         %69 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0 %int_0
         %70 = OpLoad %int %69
         %71 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0 %int_1
         %72 = OpLoad %int %71
         %73 = OpConvertSToF %float %66
         %74 = OpConvertSToF %float %68
         %75 = OpConvertSToF %float %70
         %76 = OpConvertSToF %float %72
         %77 = OpCompositeConstruct %v4float %73 %74 %75 %76
               OpStore %x_GLF_color %77
               OpBranch %62
         %64 = OpLabel
         %78 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0 %int_0
         %79 = OpLoad %int %78
         %80 = OpConvertSToF %float %79
         %81 = OpCompositeConstruct %v4float %80 %80 %80 %80
               OpStore %x_GLF_color %81
               OpBranch %62
         %62 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %82
         %85 = OpLabel
         %86 = OpFunctionCall %void %main_1
         %87 = OpLoad %v4float %x_GLF_color
         %88 = OpCompositeConstruct %main_out %87
               OpReturnValue %88
               OpFunctionEnd
       %main = OpFunction %void None %15
         %90 = OpLabel
         %91 = OpFunctionCall %main_out %main_inner
         %92 = OpCompositeExtract %v4float %91 0
               OpStore %x_GLF_color_1_1 %92
               OpReturn
               OpFunctionEnd
