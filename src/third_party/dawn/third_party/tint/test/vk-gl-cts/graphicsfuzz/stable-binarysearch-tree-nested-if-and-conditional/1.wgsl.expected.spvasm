; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 354
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %BST "BST"
               OpMemberName %BST 0 "data"
               OpMemberName %BST 1 "leftIndex"
               OpMemberName %BST 2 "rightIndex"
               OpName %tree_1 "tree_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_16 "x_16"
               OpName %x_GLF_color "x_GLF_color"
               OpName %makeTreeNode_struct_BST_i1_i1_i11_i1_ "makeTreeNode_struct_BST_i1_i1_i11_i1_"
               OpName %tree "tree"
               OpName %data "data"
               OpName %insert_i1_i1_ "insert_i1_i1_"
               OpName %treeIndex "treeIndex"
               OpName %data_1 "data_1"
               OpName %baseIndex "baseIndex"
               OpName %param "param"
               OpName %param_1 "param_1"
               OpName %x_170 "x_170"
               OpName %param_2 "param_2"
               OpName %param_3 "param_3"
               OpName %search_i1_ "search_i1_"
               OpName %target "target"
               OpName %index "index"
               OpName %currentNode "currentNode"
               OpName %x_261 "x_261"
               OpName %main_1 "main_1"
               OpName %treeIndex_1 "treeIndex_1"
               OpName %param_4 "param_4"
               OpName %param_5 "param_5"
               OpName %param_6 "param_6"
               OpName %param_7 "param_7"
               OpName %param_8 "param_8"
               OpName %param_9 "param_9"
               OpName %param_10 "param_10"
               OpName %param_11 "param_11"
               OpName %param_12 "param_12"
               OpName %param_13 "param_13"
               OpName %param_14 "param_14"
               OpName %param_15 "param_15"
               OpName %param_16 "param_16"
               OpName %param_17 "param_17"
               OpName %param_18 "param_18"
               OpName %param_19 "param_19"
               OpName %param_20 "param_20"
               OpName %param_21 "param_21"
               OpName %param_22 "param_22"
               OpName %param_23 "param_23"
               OpName %count "count"
               OpName %i "i"
               OpName %result "result"
               OpName %param_24 "param_24"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpMemberDecorate %BST 0 Offset 0
               OpMemberDecorate %BST 1 Offset 4
               OpMemberDecorate %BST 2 Offset 8
               OpDecorate %_arr_BST_uint_10 ArrayStride 12
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_16 NonWritable
               OpDecorate %x_16 DescriptorSet 0
               OpDecorate %x_16 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
        %int = OpTypeInt 32 1
        %BST = OpTypeStruct %int %int %int
       %uint = OpTypeInt 32 0
    %uint_10 = OpConstant %uint 10
%_arr_BST_uint_10 = OpTypeArray %BST %uint_10
%_ptr_Private__arr_BST_uint_10 = OpTypePointer Private %_arr_BST_uint_10
         %13 = OpConstantNull %_arr_BST_uint_10
     %tree_1 = OpVariable %_ptr_Private__arr_BST_uint_10 Private %13
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
       %x_16 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
%_ptr_Function_BST = OpTypePointer Function %BST
%_ptr_Function_int = OpTypePointer Function %int
         %20 = OpTypeFunction %void %_ptr_Function_BST %_ptr_Function_int
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %int_n1 = OpConstant %int -1
     %uint_2 = OpConstant %uint 2
         %40 = OpTypeFunction %void %_ptr_Function_int %_ptr_Function_int
         %46 = OpConstantNull %int
         %48 = OpConstantNull %BST
      %int_0 = OpConstant %int 0
       %bool = OpTypeBool
%_ptr_Private_int = OpTypePointer Private %int
%_ptr_Uniform_float = OpTypePointer Uniform %float
%_ptr_Private_BST = OpTypePointer Private %BST
        %161 = OpTypeFunction %int %_ptr_Function_int
        %202 = OpTypeFunction %void
      %int_9 = OpConstant %int 9
      %int_1 = OpConstant %int 1
      %int_5 = OpConstant %int 5
     %int_12 = OpConstant %int 12
     %int_15 = OpConstant %int 15
      %int_7 = OpConstant %int 7
      %int_8 = OpConstant %int 8
      %int_2 = OpConstant %int 2
      %int_6 = OpConstant %int 6
     %int_17 = OpConstant %int 17
     %int_13 = OpConstant %int 13
     %int_20 = OpConstant %int 20
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
        %341 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
        %342 = OpConstantComposite %v4float %float_0 %float_0 %float_1 %float_1
   %main_out = OpTypeStruct %v4float
        %343 = OpTypeFunction %main_out
%makeTreeNode_struct_BST_i1_i1_i11_i1_ = OpFunction %void None %20
       %tree = OpFunctionParameter %_ptr_Function_BST
       %data = OpFunctionParameter %_ptr_Function_int
         %27 = OpLabel
         %29 = OpLoad %int %data
         %32 = OpAccessChain %_ptr_Function_int %tree %uint_0
               OpStore %32 %29
         %35 = OpAccessChain %_ptr_Function_int %tree %uint_1
               OpStore %35 %int_n1
         %39 = OpAccessChain %_ptr_Function_int %tree %uint_2
               OpStore %39 %int_n1
               OpReturn
               OpFunctionEnd
%insert_i1_i1_ = OpFunction %void None %40
  %treeIndex = OpFunctionParameter %_ptr_Function_int
     %data_1 = OpFunctionParameter %_ptr_Function_int
         %44 = OpLabel
  %baseIndex = OpVariable %_ptr_Function_int Function %46
      %param = OpVariable %_ptr_Function_BST Function %48
    %param_1 = OpVariable %_ptr_Function_int Function %46
      %x_170 = OpVariable %_ptr_Function_int Function %46
    %param_2 = OpVariable %_ptr_Function_BST Function %48
    %param_3 = OpVariable %_ptr_Function_int Function %46
               OpStore %baseIndex %int_0
               OpBranch %54
         %54 = OpLabel
               OpLoopMerge %55 %56 None
               OpBranch %57
         %57 = OpLabel
         %58 = OpLoad %int %baseIndex
         %60 = OpLoad %int %treeIndex
         %61 = OpSLessThanEqual %bool %58 %60
               OpSelectionMerge %63 None
               OpBranchConditional %61 %64 %65
         %64 = OpLabel
               OpBranch %63
         %65 = OpLabel
               OpBranch %55
         %63 = OpLabel
         %67 = OpLoad %int %data_1
         %68 = OpLoad %int %baseIndex
         %70 = OpAccessChain %_ptr_Private_int %tree_1 %68 %uint_0
         %71 = OpLoad %int %70
         %72 = OpSLessThanEqual %bool %67 %71
               OpSelectionMerge %73 None
               OpBranchConditional %72 %74 %75
         %74 = OpLabel
         %76 = OpLoad %int %baseIndex
         %77 = OpAccessChain %_ptr_Private_int %tree_1 %76 %uint_1
         %78 = OpLoad %int %77
         %79 = OpIEqual %bool %78 %int_n1
               OpSelectionMerge %80 None
               OpBranchConditional %79 %81 %82
         %81 = OpLabel
         %83 = OpLoad %int %baseIndex
         %85 = OpLoad %int %treeIndex
         %86 = OpAccessChain %_ptr_Private_int %tree_1 %83 %uint_1
               OpStore %86 %85
         %88 = OpAccessChain %_ptr_Uniform_float %x_16 %uint_0 %uint_0
         %89 = OpLoad %float %88
         %90 = OpAccessChain %_ptr_Uniform_float %x_16 %uint_0 %uint_1
         %91 = OpLoad %float %90
         %92 = OpFOrdLessThan %bool %89 %91
               OpSelectionMerge %93 None
               OpBranchConditional %92 %94 %93
         %94 = OpLabel
         %96 = OpLoad %int %treeIndex
         %98 = OpAccessChain %_ptr_Private_BST %tree_1 %96
         %99 = OpLoad %BST %98
               OpStore %param %99
        %101 = OpLoad %int %data_1
               OpStore %param_1 %101
        %102 = OpFunctionCall %void %makeTreeNode_struct_BST_i1_i1_i11_i1_ %param %param_1
        %105 = OpLoad %BST %param
        %106 = OpAccessChain %_ptr_Private_BST %tree_1 %96
               OpStore %106 %105
               OpBranch %93
         %93 = OpLabel
        %107 = OpAccessChain %_ptr_Uniform_float %x_16 %uint_0 %uint_0
        %108 = OpLoad %float %107
        %109 = OpAccessChain %_ptr_Uniform_float %x_16 %uint_0 %uint_1
        %110 = OpLoad %float %109
        %111 = OpFOrdLessThan %bool %108 %110
               OpSelectionMerge %112 None
               OpBranchConditional %111 %113 %112
        %113 = OpLabel
               OpReturn
        %112 = OpLabel
               OpBranch %80
         %82 = OpLabel
        %114 = OpLoad %int %baseIndex
        %115 = OpAccessChain %_ptr_Private_int %tree_1 %114 %uint_1
        %116 = OpLoad %int %115
               OpStore %baseIndex %116
               OpBranch %56
         %80 = OpLabel
               OpBranch %73
         %75 = OpLabel
        %117 = OpAccessChain %_ptr_Uniform_float %x_16 %uint_0 %uint_0
        %118 = OpLoad %float %117
        %119 = OpAccessChain %_ptr_Uniform_float %x_16 %uint_0 %uint_1
        %120 = OpLoad %float %119
        %121 = OpFOrdLessThan %bool %118 %120
               OpSelectionMerge %122 None
               OpBranchConditional %121 %123 %124
        %123 = OpLabel
        %125 = OpLoad %int %baseIndex
        %126 = OpAccessChain %_ptr_Private_int %tree_1 %125 %uint_2
        %127 = OpLoad %int %126
               OpStore %x_170 %127
               OpBranch %122
        %124 = OpLabel
        %128 = OpLoad %int %baseIndex
        %129 = OpAccessChain %_ptr_Private_int %tree_1 %128 %uint_2
        %130 = OpLoad %int %129
               OpStore %x_170 %130
               OpBranch %122
        %122 = OpLabel
        %131 = OpLoad %int %x_170
        %132 = OpIEqual %bool %131 %int_n1
               OpSelectionMerge %133 None
               OpBranchConditional %132 %134 %135
        %134 = OpLabel
        %136 = OpLoad %int %baseIndex
        %138 = OpLoad %int %treeIndex
        %139 = OpAccessChain %_ptr_Private_int %tree_1 %136 %uint_2
               OpStore %139 %138
        %141 = OpLoad %int %treeIndex
        %142 = OpAccessChain %_ptr_Private_BST %tree_1 %141
        %143 = OpLoad %BST %142
               OpStore %param_2 %143
        %145 = OpLoad %int %data_1
               OpStore %param_3 %145
        %146 = OpFunctionCall %void %makeTreeNode_struct_BST_i1_i1_i11_i1_ %param_2 %param_3
        %149 = OpLoad %BST %param_2
        %150 = OpAccessChain %_ptr_Private_BST %tree_1 %141
               OpStore %150 %149
               OpReturn
        %135 = OpLabel
        %151 = OpLoad %int %baseIndex
        %152 = OpAccessChain %_ptr_Private_int %tree_1 %151 %uint_2
        %153 = OpLoad %int %152
               OpStore %baseIndex %153
               OpBranch %56
        %133 = OpLabel
               OpReturn
         %73 = OpLabel
        %154 = OpAccessChain %_ptr_Uniform_float %x_16 %uint_0 %uint_0
        %155 = OpLoad %float %154
        %156 = OpAccessChain %_ptr_Uniform_float %x_16 %uint_0 %uint_1
        %157 = OpLoad %float %156
        %158 = OpFOrdGreaterThan %bool %155 %157
               OpSelectionMerge %159 None
               OpBranchConditional %158 %160 %159
        %160 = OpLabel
               OpReturn
        %159 = OpLabel
               OpBranch %56
         %56 = OpLabel
               OpBranch %54
         %55 = OpLabel
               OpReturn
               OpFunctionEnd
 %search_i1_ = OpFunction %int None %161
     %target = OpFunctionParameter %_ptr_Function_int
        %164 = OpLabel
      %index = OpVariable %_ptr_Function_int Function %46
%currentNode = OpVariable %_ptr_Function_BST Function %48
      %x_261 = OpVariable %_ptr_Function_int Function %46
               OpStore %index %int_0
               OpBranch %168
        %168 = OpLabel
               OpLoopMerge %169 %170 None
               OpBranch %171
        %171 = OpLabel
        %172 = OpLoad %int %index
        %173 = OpINotEqual %bool %172 %int_n1
               OpSelectionMerge %174 None
               OpBranchConditional %173 %175 %176
        %175 = OpLabel
               OpBranch %174
        %176 = OpLabel
               OpBranch %169
        %174 = OpLabel
        %177 = OpLoad %int %index
        %178 = OpAccessChain %_ptr_Private_BST %tree_1 %177
        %179 = OpLoad %BST %178
               OpStore %currentNode %179
        %180 = OpAccessChain %_ptr_Function_int %currentNode %uint_0
        %181 = OpLoad %int %180
        %183 = OpLoad %int %target
        %184 = OpIEqual %bool %181 %183
               OpSelectionMerge %185 None
               OpBranchConditional %184 %186 %185
        %186 = OpLabel
        %188 = OpLoad %int %target
               OpReturnValue %188
        %185 = OpLabel
        %190 = OpLoad %int %target
        %191 = OpAccessChain %_ptr_Function_int %currentNode %uint_0
        %192 = OpLoad %int %191
        %193 = OpSGreaterThan %bool %190 %192
               OpSelectionMerge %194 None
               OpBranchConditional %193 %195 %196
        %195 = OpLabel
        %197 = OpAccessChain %_ptr_Function_int %currentNode %uint_2
        %198 = OpLoad %int %197
               OpStore %x_261 %198
               OpBranch %194
        %196 = OpLabel
        %199 = OpAccessChain %_ptr_Function_int %currentNode %uint_1
        %200 = OpLoad %int %199
               OpStore %x_261 %200
               OpBranch %194
        %194 = OpLabel
        %201 = OpLoad %int %x_261
               OpStore %index %201
               OpBranch %170
        %170 = OpLabel
               OpBranch %168
        %169 = OpLabel
               OpReturnValue %int_n1
               OpFunctionEnd
     %main_1 = OpFunction %void None %202
        %204 = OpLabel
%treeIndex_1 = OpVariable %_ptr_Function_int Function %46
    %param_4 = OpVariable %_ptr_Function_BST Function %48
    %param_5 = OpVariable %_ptr_Function_int Function %46
    %param_6 = OpVariable %_ptr_Function_int Function %46
    %param_7 = OpVariable %_ptr_Function_int Function %46
    %param_8 = OpVariable %_ptr_Function_int Function %46
    %param_9 = OpVariable %_ptr_Function_int Function %46
   %param_10 = OpVariable %_ptr_Function_int Function %46
   %param_11 = OpVariable %_ptr_Function_int Function %46
   %param_12 = OpVariable %_ptr_Function_int Function %46
   %param_13 = OpVariable %_ptr_Function_int Function %46
   %param_14 = OpVariable %_ptr_Function_int Function %46
   %param_15 = OpVariable %_ptr_Function_int Function %46
   %param_16 = OpVariable %_ptr_Function_int Function %46
   %param_17 = OpVariable %_ptr_Function_int Function %46
   %param_18 = OpVariable %_ptr_Function_int Function %46
   %param_19 = OpVariable %_ptr_Function_int Function %46
   %param_20 = OpVariable %_ptr_Function_int Function %46
   %param_21 = OpVariable %_ptr_Function_int Function %46
   %param_22 = OpVariable %_ptr_Function_int Function %46
   %param_23 = OpVariable %_ptr_Function_int Function %46
      %count = OpVariable %_ptr_Function_int Function %46
          %i = OpVariable %_ptr_Function_int Function %46
     %result = OpVariable %_ptr_Function_int Function %46
   %param_24 = OpVariable %_ptr_Function_int Function %46
               OpStore %treeIndex_1 %int_0
        %230 = OpAccessChain %_ptr_Private_BST %tree_1 %int_0
        %231 = OpLoad %BST %230
               OpStore %param_4 %231
               OpStore %param_5 %int_9
        %233 = OpFunctionCall %void %makeTreeNode_struct_BST_i1_i1_i11_i1_ %param_4 %param_5
        %236 = OpLoad %BST %param_4
        %237 = OpAccessChain %_ptr_Private_BST %tree_1 %int_0
               OpStore %237 %236
        %238 = OpLoad %int %treeIndex_1
        %240 = OpIAdd %int %238 %int_1
               OpStore %treeIndex_1 %240
        %241 = OpLoad %int %treeIndex_1
               OpStore %param_6 %241
               OpStore %param_7 %int_5
        %243 = OpFunctionCall %void %insert_i1_i1_ %param_6 %param_7
        %246 = OpLoad %int %treeIndex_1
        %247 = OpIAdd %int %246 %int_1
               OpStore %treeIndex_1 %247
        %248 = OpLoad %int %treeIndex_1
               OpStore %param_8 %248
               OpStore %param_9 %int_12
        %250 = OpFunctionCall %void %insert_i1_i1_ %param_8 %param_9
        %253 = OpLoad %int %treeIndex_1
        %254 = OpIAdd %int %253 %int_1
               OpStore %treeIndex_1 %254
        %255 = OpLoad %int %treeIndex_1
               OpStore %param_10 %255
               OpStore %param_11 %int_15
        %257 = OpFunctionCall %void %insert_i1_i1_ %param_10 %param_11
        %260 = OpLoad %int %treeIndex_1
        %261 = OpIAdd %int %260 %int_1
               OpStore %treeIndex_1 %261
        %262 = OpLoad %int %treeIndex_1
               OpStore %param_12 %262
               OpStore %param_13 %int_7
        %264 = OpFunctionCall %void %insert_i1_i1_ %param_12 %param_13
        %267 = OpLoad %int %treeIndex_1
        %268 = OpIAdd %int %267 %int_1
               OpStore %treeIndex_1 %268
        %269 = OpLoad %int %treeIndex_1
               OpStore %param_14 %269
               OpStore %param_15 %int_8
        %271 = OpFunctionCall %void %insert_i1_i1_ %param_14 %param_15
        %274 = OpLoad %int %treeIndex_1
        %275 = OpIAdd %int %274 %int_1
               OpStore %treeIndex_1 %275
        %276 = OpLoad %int %treeIndex_1
               OpStore %param_16 %276
               OpStore %param_17 %int_2
        %278 = OpFunctionCall %void %insert_i1_i1_ %param_16 %param_17
        %281 = OpLoad %int %treeIndex_1
        %282 = OpIAdd %int %281 %int_1
               OpStore %treeIndex_1 %282
        %283 = OpLoad %int %treeIndex_1
               OpStore %param_18 %283
               OpStore %param_19 %int_6
        %285 = OpFunctionCall %void %insert_i1_i1_ %param_18 %param_19
        %288 = OpLoad %int %treeIndex_1
        %289 = OpIAdd %int %288 %int_1
               OpStore %treeIndex_1 %289
        %290 = OpLoad %int %treeIndex_1
               OpStore %param_20 %290
               OpStore %param_21 %int_17
        %292 = OpFunctionCall %void %insert_i1_i1_ %param_20 %param_21
        %295 = OpLoad %int %treeIndex_1
        %296 = OpIAdd %int %295 %int_1
               OpStore %treeIndex_1 %296
        %297 = OpLoad %int %treeIndex_1
               OpStore %param_22 %297
               OpStore %param_23 %int_13
        %299 = OpFunctionCall %void %insert_i1_i1_ %param_22 %param_23
               OpStore %count %int_0
               OpStore %i %int_0
               OpBranch %302
        %302 = OpLabel
               OpLoopMerge %303 %304 None
               OpBranch %305
        %305 = OpLabel
        %306 = OpLoad %int %i
        %308 = OpSLessThan %bool %306 %int_20
               OpSelectionMerge %309 None
               OpBranchConditional %308 %310 %311
        %310 = OpLabel
               OpBranch %309
        %311 = OpLabel
               OpBranch %303
        %309 = OpLabel
        %312 = OpLoad %int %i
               OpStore %param_24 %312
        %313 = OpFunctionCall %int %search_i1_ %param_24
               OpStore %result %313
        %315 = OpLoad %int %i
               OpSelectionMerge %316 None
               OpSwitch %315 %317 2 %318 5 %318 6 %318 7 %318 8 %318 9 %318 12 %318 13 %318 15 %318 17 %318
        %318 = OpLabel
        %319 = OpLoad %int %result
        %320 = OpLoad %int %i
        %321 = OpIEqual %bool %319 %320
               OpSelectionMerge %322 None
               OpBranchConditional %321 %323 %322
        %323 = OpLabel
        %324 = OpLoad %int %count
        %325 = OpIAdd %int %324 %int_1
               OpStore %count %325
               OpBranch %322
        %322 = OpLabel
               OpBranch %316
        %317 = OpLabel
        %326 = OpLoad %int %result
        %327 = OpIEqual %bool %326 %int_n1
               OpSelectionMerge %328 None
               OpBranchConditional %327 %329 %328
        %329 = OpLabel
        %330 = OpLoad %int %count
        %331 = OpIAdd %int %330 %int_1
               OpStore %count %331
               OpBranch %328
        %328 = OpLabel
               OpBranch %316
        %316 = OpLabel
               OpBranch %304
        %304 = OpLabel
        %332 = OpLoad %int %i
        %333 = OpIAdd %int %332 %int_1
               OpStore %i %333
               OpBranch %302
        %303 = OpLabel
        %334 = OpLoad %int %count
        %335 = OpIEqual %bool %334 %int_20
               OpSelectionMerge %336 None
               OpBranchConditional %335 %337 %338
        %337 = OpLabel
               OpStore %x_GLF_color %341
               OpBranch %336
        %338 = OpLabel
               OpStore %x_GLF_color %342
               OpBranch %336
        %336 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %343
        %346 = OpLabel
        %347 = OpFunctionCall %void %main_1
        %348 = OpLoad %v4float %x_GLF_color
        %349 = OpCompositeConstruct %main_out %348
               OpReturnValue %349
               OpFunctionEnd
       %main = OpFunction %void None %202
        %351 = OpLabel
        %352 = OpFunctionCall %main_out %main_inner
        %353 = OpCompositeExtract %v4float %352 0
               OpStore %x_GLF_color_1_1 %353
               OpReturn
               OpFunctionEnd
