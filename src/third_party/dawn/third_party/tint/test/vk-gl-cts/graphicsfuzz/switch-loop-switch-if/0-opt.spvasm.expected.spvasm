; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 84
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_6 "x_6"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %i "i"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %19 = OpConstantNull %int
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
      %int_5 = OpConstant %int 5
      %int_7 = OpConstant %int 7
    %int_200 = OpConstant %int 200
       %bool = OpTypeBool
    %int_100 = OpConstant %int 100
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
     %int_n2 = OpConstant %int -2
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %71 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
         %72 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_1
   %main_out = OpTypeStruct %v4float
         %73 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %12
         %15 = OpLabel
          %i = OpVariable %_ptr_Function_int Function %19
         %23 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %uint_0
         %24 = OpLoad %float %23
         %25 = OpConvertFToS %int %24
               OpStore %i %25
         %26 = OpLoad %int %i
               OpSelectionMerge %27 None
               OpSwitch %26 %28 0 %29
         %29 = OpLabel
               OpBranch %30
         %30 = OpLabel
               OpLoopMerge %31 %32 None
               OpBranch %33
         %33 = OpLabel
         %34 = OpLoad %int %i
         %36 = OpIAdd %int %34 %int_1
               OpStore %i %36
         %37 = OpLoad %int %i
               OpSelectionMerge %38 None
               OpSwitch %37 %39 2 %40 1 %41
         %40 = OpLabel
         %42 = OpLoad %int %i
         %44 = OpIAdd %int %42 %int_5
               OpStore %i %44
               OpBranch %38
         %41 = OpLabel
               OpBranch %32
         %39 = OpLabel
         %45 = OpLoad %int %i
         %47 = OpIAdd %int %45 %int_7
               OpStore %i %47
               OpBranch %38
         %38 = OpLabel
               OpBranch %32
         %32 = OpLabel
         %48 = OpLoad %int %i
         %50 = OpSGreaterThan %bool %48 %int_200
               OpBranchConditional %50 %30 %31
         %31 = OpLabel
         %52 = OpLoad %int %i
         %54 = OpSGreaterThan %bool %52 %int_100
               OpSelectionMerge %55 None
               OpBranchConditional %54 %56 %55
         %56 = OpLabel
         %57 = OpLoad %int %i
         %59 = OpISub %int %57 %int_2
               OpStore %i %59
               OpBranch %27
         %55 = OpLabel
               OpBranch %28
         %28 = OpLabel
         %60 = OpLoad %int %i
         %62 = OpISub %int %60 %int_3
               OpStore %i %62
               OpBranch %27
         %27 = OpLabel
         %63 = OpLoad %int %i
         %65 = OpIEqual %bool %63 %int_n2
               OpSelectionMerge %66 None
               OpBranchConditional %65 %67 %68
         %67 = OpLabel
               OpStore %x_GLF_color %71
               OpBranch %66
         %68 = OpLabel
               OpStore %x_GLF_color %72
               OpBranch %66
         %66 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %73
         %76 = OpLabel
         %77 = OpFunctionCall %void %main_1
         %78 = OpLoad %v4float %x_GLF_color
         %79 = OpCompositeConstruct %main_out %78
               OpReturnValue %79
               OpFunctionEnd
       %main = OpFunction %void None %12
         %81 = OpLabel
         %82 = OpFunctionCall %main_out %main_inner
         %83 = OpCompositeExtract %v4float %82 0
               OpStore %x_GLF_color_1_1 %83
               OpReturn
               OpFunctionEnd
