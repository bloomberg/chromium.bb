#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ float el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[4];
};
struct buf1 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_float_values;
};
struct tint_padded_array_element_1 {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad_1[12];
};
struct tint_array_wrapper_1 {
  /* 0x0000 */ tint_padded_array_element_1 arr[2];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper_1 x_GLF_uniform_int_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf1& x_6, constant buf0& x_9, thread float4* const tint_symbol_3) {
  float2 v1 = 0.0f;
  int2 v2 = 0;
  float2 v3 = 0.0f;
  bool x_66 = false;
  bool x_67_phi = false;
  float const x_41 = x_6.x_GLF_uniform_float_values.arr[2].el;
  float const x_43 = x_6.x_GLF_uniform_float_values.arr[3].el;
  v1 = sinh(float2(x_41, x_43));
  int const x_47 = x_9.x_GLF_uniform_int_values.arr[0].el;
  v2 = int2(x_47, -3000);
  float2 const x_49 = v1;
  int2 const x_50 = v2;
  v3 = ldexp(x_49, x_50);
  float const x_53 = v3.y;
  *(tint_symbol_3) = float4(x_53, x_53, x_53, x_53);
  float const x_56 = v3.x;
  float const x_58 = x_6.x_GLF_uniform_float_values.arr[0].el;
  bool const x_59 = (x_56 > x_58);
  x_67_phi = x_59;
  if (x_59) {
    float const x_63 = v3.x;
    float const x_65 = x_6.x_GLF_uniform_float_values.arr[1].el;
    x_66 = (x_63 < x_65);
    x_67_phi = x_66;
  }
  bool const x_67 = x_67_phi;
  if (x_67) {
    int const x_72 = x_9.x_GLF_uniform_int_values.arr[0].el;
    int const x_75 = x_9.x_GLF_uniform_int_values.arr[1].el;
    int const x_78 = x_9.x_GLF_uniform_int_values.arr[1].el;
    int const x_81 = x_9.x_GLF_uniform_int_values.arr[0].el;
    *(tint_symbol_3) = float4(float(x_72), float(x_75), float(x_78), float(x_81));
  } else {
    int const x_85 = x_9.x_GLF_uniform_int_values.arr[1].el;
    float const x_86 = float(x_85);
    *(tint_symbol_3) = float4(x_86, x_86, x_86, x_86);
  }
  return;
}

main_out tint_symbol_inner(constant buf1& x_6, constant buf0& x_9, thread float4* const tint_symbol_4) {
  main_1(x_6, x_9, tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(constant buf1& x_6 [[buffer(0)]], constant buf0& x_9 [[buffer(1)]]) {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_6, x_9, &(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

