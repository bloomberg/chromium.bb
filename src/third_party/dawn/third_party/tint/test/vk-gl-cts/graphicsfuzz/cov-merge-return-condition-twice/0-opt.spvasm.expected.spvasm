; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 67
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "three"
               OpName %x_7 "x_7"
               OpName %x_GLF_color "x_GLF_color"
               OpName %func_ "func_"
               OpName %b "b"
               OpName %x_34 "x_34"
               OpName %x_34_phi "x_34_phi"
               OpName %x_48_phi "x_48_phi"
               OpName %main_1 "main_1"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_7 NonWritable
               OpDecorate %x_7 DescriptorSet 0
               OpDecorate %x_7 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
       %buf0 = OpTypeStruct %float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_7 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
         %11 = OpTypeFunction %float
%_ptr_Function_float = OpTypePointer Function %float
         %16 = OpConstantNull %float
    %float_2 = OpConstant %float 2
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
    %float_0 = OpConstant %float 0
       %bool = OpTypeBool
    %float_1 = OpConstant %float 1
      %false = OpConstantFalse %bool
       %void = OpTypeVoid
         %45 = OpTypeFunction %void
         %54 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
         %55 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
   %main_out = OpTypeStruct %v4float
         %56 = OpTypeFunction %main_out
      %func_ = OpFunction %float None %11
         %13 = OpLabel
          %b = OpVariable %_ptr_Function_float Function %16
       %x_34 = OpVariable %_ptr_Function_float Function %16
   %x_34_phi = OpVariable %_ptr_Function_float Function %16
   %x_48_phi = OpVariable %_ptr_Function_float Function %16
               OpStore %b %float_2
               OpStore %x_34_phi %float_2
               OpBranch %21
         %21 = OpLabel
               OpLoopMerge %22 %23 None
               OpBranch %24
         %24 = OpLabel
         %25 = OpLoad %float %x_34_phi
               OpStore %x_34 %25
         %29 = OpAccessChain %_ptr_Uniform_float %x_7 %uint_0
         %30 = OpLoad %float %29
         %32 = OpFOrdEqual %bool %30 %float_0
               OpSelectionMerge %34 None
               OpBranchConditional %32 %35 %34
         %35 = OpLabel
         %36 = OpLoad %float %x_34
               OpStore %x_48_phi %36
               OpBranch %22
         %34 = OpLabel
         %37 = OpAccessChain %_ptr_Uniform_float %x_7 %uint_0
         %38 = OpLoad %float %37
         %39 = OpFOrdEqual %bool %38 %float_0
               OpSelectionMerge %40 None
               OpBranchConditional %39 %41 %40
         %41 = OpLabel
               OpReturnValue %float_1
         %40 = OpLabel
               OpStore %b %float_1
               OpBranch %23
         %23 = OpLabel
               OpStore %x_34_phi %float_1
               OpStore %x_48_phi %float_1
               OpBranchConditional %false %21 %22
         %22 = OpLabel
         %44 = OpLoad %float %x_48_phi
               OpReturnValue %44
               OpFunctionEnd
     %main_1 = OpFunction %void None %45
         %48 = OpLabel
         %49 = OpFunctionCall %float %func_
         %50 = OpFOrdEqual %bool %49 %float_1
               OpSelectionMerge %51 None
               OpBranchConditional %50 %52 %53
         %52 = OpLabel
               OpStore %x_GLF_color %54
               OpBranch %51
         %53 = OpLabel
               OpStore %x_GLF_color %55
               OpBranch %51
         %51 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %56
         %59 = OpLabel
         %60 = OpFunctionCall %void %main_1
         %61 = OpLoad %v4float %x_GLF_color
         %62 = OpCompositeConstruct %main_out %61
               OpReturnValue %62
               OpFunctionEnd
       %main = OpFunction %void None %45
         %64 = OpLabel
         %65 = OpFunctionCall %main_out %main_inner
         %66 = OpCompositeExtract %v4float %65 0
               OpStore %x_GLF_color_1_1 %66
               OpReturn
               OpFunctionEnd
