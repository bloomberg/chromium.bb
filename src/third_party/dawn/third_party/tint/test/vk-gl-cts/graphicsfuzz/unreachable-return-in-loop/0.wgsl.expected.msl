#include <metal_stdlib>

using namespace metal;
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(thread float4* const tint_symbol_3) {
  bool x_21_phi = false;
  x_21_phi = false;
  while (true) {
    bool x_25 = false;
    bool x_25_phi = false;
    bool x_30_phi = false;
    bool const x_21 = x_21_phi;
    x_25_phi = x_21;
    while (true) {
      x_25 = x_25_phi;
      x_30_phi = x_25;
      if ((1 < 0)) {
      } else {
        break;
      }
      x_30_phi = true;
      break;
      {
        x_25_phi = false;
      }
    }
    bool const x_30 = x_30_phi;
    if (x_30) {
      break;
    }
    *(tint_symbol_3) = float4(1.0f, 0.0f, 0.0f, 1.0f);
    break;
    {
      x_21_phi = false;
    }
  }
  return;
}

main_out tint_symbol_inner(thread float4* const tint_symbol_4) {
  main_1(tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol() {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(&(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

