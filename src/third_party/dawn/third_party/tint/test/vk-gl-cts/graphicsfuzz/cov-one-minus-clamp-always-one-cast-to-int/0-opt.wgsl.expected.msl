#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[2];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_int_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_7, thread float4* const tint_symbol_3) {
  float f = 0.0f;
  int a = 0;
  f = 2.0f;
  float const x_27 = f;
  a = int((1.0f - clamp(1.0f, 1.0f, x_27)));
  int const x_31 = a;
  int const x_33 = x_7.x_GLF_uniform_int_values.arr[1].el;
  if ((x_31 == x_33)) {
    int const x_39 = x_7.x_GLF_uniform_int_values.arr[0].el;
    int const x_42 = x_7.x_GLF_uniform_int_values.arr[1].el;
    int const x_45 = x_7.x_GLF_uniform_int_values.arr[1].el;
    int const x_48 = x_7.x_GLF_uniform_int_values.arr[0].el;
    *(tint_symbol_3) = float4(float(x_39), float(x_42), float(x_45), float(x_48));
  } else {
    int const x_52 = x_7.x_GLF_uniform_int_values.arr[1].el;
    float const x_53 = float(x_52);
    *(tint_symbol_3) = float4(x_53, x_53, x_53, x_53);
  }
  return;
}

main_out tint_symbol_inner(constant buf0& x_7, thread float4* const tint_symbol_4) {
  main_1(x_7, tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(constant buf0& x_7 [[buffer(0)]]) {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_7, &(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

