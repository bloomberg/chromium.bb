#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[2];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_int_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_6, thread float4* const tint_symbol_3) {
  float2x2 m = float2x2(0.0f);
  int const x_29 = x_6.x_GLF_uniform_int_values.arr[0].el;
  float const x_30 = float(x_29);
  m = transpose(transpose(float2x2(float2(x_30, 0.0f), float2(0.0f, x_30))));
  float2x2 const x_36 = m;
  int const x_38 = x_6.x_GLF_uniform_int_values.arr[0].el;
  float const x_39 = float(x_38);
  float2x2 const x_42 = float2x2(float2(x_39, 0.0f), float2(0.0f, x_39));
  if ((all((x_36[0u] == x_42[0u])) & all((x_36[1u] == x_42[1u])))) {
    int const x_56 = x_6.x_GLF_uniform_int_values.arr[0].el;
    int const x_59 = x_6.x_GLF_uniform_int_values.arr[1].el;
    int const x_62 = x_6.x_GLF_uniform_int_values.arr[1].el;
    int const x_65 = x_6.x_GLF_uniform_int_values.arr[0].el;
    *(tint_symbol_3) = float4(float(x_56), float(x_59), float(x_62), float(x_65));
  } else {
    int const x_69 = x_6.x_GLF_uniform_int_values.arr[1].el;
    float const x_70 = float(x_69);
    *(tint_symbol_3) = float4(x_70, x_70, x_70, x_70);
  }
  return;
}

main_out tint_symbol_inner(constant buf0& x_6, thread float4* const tint_symbol_4) {
  main_1(x_6, tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(constant buf0& x_6 [[buffer(0)]]) {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_6, &(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

