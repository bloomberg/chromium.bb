; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 88
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "x_GLF_uniform_int_values"
               OpName %x_6 "x_6"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %a "a"
               OpName %i "i"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %_arr_int_uint_2 ArrayStride 16
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
     %uint_2 = OpConstant %uint 2
%_arr_int_uint_2 = OpTypeArray %int %uint_2
       %buf0 = OpTypeStruct %_arr_int_uint_2
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %15 = OpTypeFunction %void
%_ptr_Function_int = OpTypePointer Function %int
         %21 = OpConstantNull %int
     %uint_0 = OpConstant %uint 0
      %int_1 = OpConstant %int 1
%_ptr_Uniform_int = OpTypePointer Uniform %int
      %int_0 = OpConstant %int 0
       %bool = OpTypeBool
   %main_out = OpTypeStruct %v4float
         %77 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %15
         %18 = OpLabel
          %a = OpVariable %_ptr_Function_int Function %21
          %i = OpVariable %_ptr_Function_int Function %21
         %26 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %27 = OpLoad %int %26
               OpStore %a %27
         %29 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %30 = OpLoad %int %29
         %31 = OpSNegate %int %30
               OpStore %i %31
               OpBranch %32
         %32 = OpLabel
               OpLoopMerge %33 %34 None
               OpBranch %35
         %35 = OpLabel
         %36 = OpLoad %int %i
         %37 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %38 = OpLoad %int %37
         %39 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %40 = OpLoad %int %39
         %41 = OpBitwiseOr %int %36 %38
         %42 = OpSLessThan %bool %41 %40
               OpSelectionMerge %44 None
               OpBranchConditional %42 %45 %46
         %45 = OpLabel
               OpBranch %44
         %46 = OpLabel
               OpBranch %33
         %44 = OpLabel
         %47 = OpLoad %int %i
         %48 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %49 = OpLoad %int %48
         %50 = OpIMul %int %47 %49
               OpStore %a %50
               OpBranch %34
         %34 = OpLabel
         %51 = OpLoad %int %i
         %52 = OpIAdd %int %51 %int_1
               OpStore %i %52
               OpBranch %32
         %33 = OpLabel
         %53 = OpLoad %int %a
         %54 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %55 = OpLoad %int %54
         %56 = OpSNegate %int %55
         %57 = OpIEqual %bool %53 %56
               OpSelectionMerge %58 None
               OpBranchConditional %57 %59 %60
         %59 = OpLabel
         %61 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %62 = OpLoad %int %61
         %63 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %64 = OpLoad %int %63
         %65 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %66 = OpLoad %int %65
         %67 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %68 = OpLoad %int %67
         %69 = OpConvertSToF %float %62
         %70 = OpConvertSToF %float %64
         %71 = OpConvertSToF %float %66
         %72 = OpConvertSToF %float %68
         %73 = OpCompositeConstruct %v4float %69 %70 %71 %72
               OpStore %x_GLF_color %73
               OpBranch %58
         %60 = OpLabel
         %74 = OpLoad %int %a
         %75 = OpConvertSToF %float %74
         %76 = OpCompositeConstruct %v4float %75 %75 %75 %75
               OpStore %x_GLF_color %76
               OpBranch %58
         %58 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %77
         %80 = OpLabel
         %81 = OpFunctionCall %void %main_1
         %82 = OpLoad %v4float %x_GLF_color
         %83 = OpCompositeConstruct %main_out %82
               OpReturnValue %83
               OpFunctionEnd
       %main = OpFunction %void None %15
         %85 = OpLabel
         %86 = OpFunctionCall %main_out %main_inner
         %87 = OpCompositeExtract %v4float %86 0
               OpStore %x_GLF_color_1_1 %87
               OpReturn
               OpFunctionEnd
