; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 402
; Schema: 0
               OpCapability Shader
        %156 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %gl_FragCoord_param_1 %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %gl_FragCoord_param_1 "gl_FragCoord_param_1"
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %QuicksortObject "QuicksortObject"
               OpMemberName %QuicksortObject 0 "numbers"
               OpName %obj "obj"
               OpName %gl_FragCoord "gl_FragCoord"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "resolution"
               OpName %x_34 "x_34"
               OpName %x_GLF_color "x_GLF_color"
               OpName %swap_i1_i1_ "swap_i1_i1_"
               OpName %i "i"
               OpName %j "j"
               OpName %temp "temp"
               OpName %performPartition_i1_i1_ "performPartition_i1_i1_"
               OpName %l "l"
               OpName %h "h"
               OpName %pivot "pivot"
               OpName %i_1 "i_1"
               OpName %j_1 "j_1"
               OpName %param "param"
               OpName %param_1 "param_1"
               OpName %param_2 "param_2"
               OpName %param_3 "param_3"
               OpName %quicksort_ "quicksort_"
               OpName %l_1 "l_1"
               OpName %h_1 "h_1"
               OpName %top "top"
               OpName %stack "stack"
               OpName %int_a "int_a"
               OpName %x_278 "x_278"
               OpName %x_279 "x_279"
               OpName %clamp_a "clamp_a"
               OpName %p "p"
               OpName %param_4 "param_4"
               OpName %param_5 "param_5"
               OpName %main_1 "main_1"
               OpName %i_2 "i_2"
               OpName %uv "uv"
               OpName %color "color"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %gl_FragCoord_param "gl_FragCoord_param"
               OpName %main "main"
               OpDecorate %gl_FragCoord_param_1 BuiltIn FragCoord
               OpDecorate %x_GLF_color_1_1 Location 0
               OpMemberDecorate %QuicksortObject 0 Offset 0
               OpDecorate %_arr_int_uint_10 ArrayStride 4
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_34 NonWritable
               OpDecorate %x_34 DescriptorSet 0
               OpDecorate %x_34 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Input_v4float = OpTypePointer Input %v4float
%gl_FragCoord_param_1 = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %7 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %7
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %uint_10 = OpConstant %uint 10
%_arr_int_uint_10 = OpTypeArray %int %uint_10
%QuicksortObject = OpTypeStruct %_arr_int_uint_10
%_ptr_Private_QuicksortObject = OpTypePointer Private %QuicksortObject
         %15 = OpConstantNull %QuicksortObject
        %obj = OpVariable %_ptr_Private_QuicksortObject Private %15
%_ptr_Private_v4float = OpTypePointer Private %v4float
%gl_FragCoord = OpVariable %_ptr_Private_v4float Private %7
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
       %x_34 = OpVariable %_ptr_Uniform_buf0 Uniform
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %7
       %void = OpTypeVoid
%_ptr_Function_int = OpTypePointer Function %int
         %23 = OpTypeFunction %void %_ptr_Function_int %_ptr_Function_int
         %31 = OpConstantNull %int
     %uint_0 = OpConstant %uint 0
%_ptr_Private_int = OpTypePointer Private %int
         %49 = OpTypeFunction %int %_ptr_Function_int %_ptr_Function_int
      %int_1 = OpConstant %int 1
       %bool = OpTypeBool
        %109 = OpTypeFunction %void
%_ptr_Function__arr_int_uint_10 = OpTypePointer Function %_arr_int_uint_10
        %117 = OpConstantNull %_arr_int_uint_10
      %int_0 = OpConstant %int 0
      %int_9 = OpConstant %int 9
     %int_n1 = OpConstant %int -1
     %uint_1 = OpConstant %uint 1
%_ptr_Private_float = OpTypePointer Private %float
    %float_0 = OpConstant %float 0
      %false = OpConstantFalse %bool
%_ptr_Function_v2float = OpTypePointer Function %v2float
        %219 = OpConstantNull %v2float
    %v3float = OpTypeVector %float 3
%_ptr_Function_v3float = OpTypePointer Function %v3float
        %223 = OpConstantNull %v3float
     %int_10 = OpConstant %int 10
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
    %float_1 = OpConstant %float 1
    %float_2 = OpConstant %float 2
    %float_3 = OpConstant %float 3
        %261 = OpConstantComposite %v3float %float_1 %float_2 %float_3
%_ptr_Function_float = OpTypePointer Function %float
 %float_0_25 = OpConstant %float 0.25
  %float_0_5 = OpConstant %float 0.5
      %int_2 = OpConstant %int 2
 %float_0_75 = OpConstant %float 0.75
      %int_3 = OpConstant %int 3
     %uint_2 = OpConstant %uint 2
      %int_4 = OpConstant %int 4
      %int_5 = OpConstant %int 5
      %int_6 = OpConstant %int 6
      %int_7 = OpConstant %int 7
      %int_8 = OpConstant %int 8
   %main_out = OpTypeStruct %v4float
        %389 = OpTypeFunction %main_out %v4float
%swap_i1_i1_ = OpFunction %void None %23
          %i = OpFunctionParameter %_ptr_Function_int
          %j = OpFunctionParameter %_ptr_Function_int
         %29 = OpLabel
       %temp = OpVariable %_ptr_Function_int Function %31
         %33 = OpLoad %int %i
         %36 = OpAccessChain %_ptr_Private_int %obj %uint_0 %33
         %37 = OpLoad %int %36
               OpStore %temp %37
         %39 = OpLoad %int %i
         %41 = OpLoad %int %j
         %42 = OpAccessChain %_ptr_Private_int %obj %uint_0 %41
         %43 = OpLoad %int %42
         %44 = OpAccessChain %_ptr_Private_int %obj %uint_0 %39
               OpStore %44 %43
         %46 = OpLoad %int %j
         %47 = OpLoad %int %temp
         %48 = OpAccessChain %_ptr_Private_int %obj %uint_0 %46
               OpStore %48 %47
               OpReturn
               OpFunctionEnd
%performPartition_i1_i1_ = OpFunction %int None %49
          %l = OpFunctionParameter %_ptr_Function_int
          %h = OpFunctionParameter %_ptr_Function_int
         %53 = OpLabel
      %pivot = OpVariable %_ptr_Function_int Function %31
        %i_1 = OpVariable %_ptr_Function_int Function %31
        %j_1 = OpVariable %_ptr_Function_int Function %31
      %param = OpVariable %_ptr_Function_int Function %31
    %param_1 = OpVariable %_ptr_Function_int Function %31
    %param_2 = OpVariable %_ptr_Function_int Function %31
    %param_3 = OpVariable %_ptr_Function_int Function %31
         %62 = OpLoad %int %h
         %63 = OpAccessChain %_ptr_Private_int %obj %uint_0 %62
         %64 = OpLoad %int %63
               OpStore %pivot %64
         %66 = OpLoad %int %l
         %68 = OpISub %int %66 %int_1
               OpStore %i_1 %68
         %70 = OpLoad %int %l
               OpStore %j_1 %70
               OpBranch %71
         %71 = OpLabel
               OpLoopMerge %72 %73 None
               OpBranch %74
         %74 = OpLabel
         %75 = OpLoad %int %j_1
         %77 = OpLoad %int %h
         %78 = OpISub %int %77 %int_1
         %79 = OpSLessThanEqual %bool %75 %78
               OpSelectionMerge %81 None
               OpBranchConditional %79 %82 %83
         %82 = OpLabel
               OpBranch %81
         %83 = OpLabel
               OpBranch %72
         %81 = OpLabel
         %84 = OpLoad %int %j_1
         %85 = OpAccessChain %_ptr_Private_int %obj %uint_0 %84
         %86 = OpLoad %int %85
         %87 = OpLoad %int %pivot
         %88 = OpSLessThanEqual %bool %86 %87
               OpSelectionMerge %89 None
               OpBranchConditional %88 %90 %89
         %90 = OpLabel
         %91 = OpLoad %int %i_1
         %92 = OpIAdd %int %91 %int_1
               OpStore %i_1 %92
         %93 = OpLoad %int %i_1
               OpStore %param %93
         %94 = OpLoad %int %j_1
               OpStore %param_1 %94
         %95 = OpFunctionCall %void %swap_i1_i1_ %param %param_1
               OpBranch %89
         %89 = OpLabel
               OpBranch %73
         %73 = OpLabel
         %98 = OpLoad %int %j_1
         %99 = OpIAdd %int %98 %int_1
               OpStore %j_1 %99
               OpBranch %71
         %72 = OpLabel
        %100 = OpLoad %int %i_1
        %101 = OpIAdd %int %100 %int_1
               OpStore %i_1 %101
        %102 = OpLoad %int %i_1
               OpStore %param_2 %102
        %104 = OpLoad %int %h
               OpStore %param_3 %104
        %105 = OpFunctionCall %void %swap_i1_i1_ %param_2 %param_3
        %108 = OpLoad %int %i_1
               OpReturnValue %108
               OpFunctionEnd
 %quicksort_ = OpFunction %void None %109
        %111 = OpLabel
        %l_1 = OpVariable %_ptr_Function_int Function %31
        %h_1 = OpVariable %_ptr_Function_int Function %31
        %top = OpVariable %_ptr_Function_int Function %31
      %stack = OpVariable %_ptr_Function__arr_int_uint_10 Function %117
      %int_a = OpVariable %_ptr_Function_int Function %31
      %x_278 = OpVariable %_ptr_Function_int Function %31
      %x_279 = OpVariable %_ptr_Function_int Function %31
    %clamp_a = OpVariable %_ptr_Function_int Function %31
          %p = OpVariable %_ptr_Function_int Function %31
    %param_4 = OpVariable %_ptr_Function_int Function %31
    %param_5 = OpVariable %_ptr_Function_int Function %31
               OpStore %l_1 %int_0
               OpStore %h_1 %int_9
               OpStore %top %int_n1
        %128 = OpLoad %int %top
        %129 = OpIAdd %int %128 %int_1
               OpStore %top %129
        %130 = OpLoad %int %l_1
        %131 = OpAccessChain %_ptr_Function_int %stack %129
               OpStore %131 %130
        %134 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %135 = OpLoad %float %134
        %137 = OpFOrdGreaterThanEqual %bool %135 %float_0
               OpSelectionMerge %138 None
               OpBranchConditional %137 %139 %140
        %139 = OpLabel
        %141 = OpLoad %int %h_1
               OpSelectionMerge %143 None
               OpBranchConditional %false %144 %145
        %144 = OpLabel
               OpStore %x_279 %int_1
               OpBranch %143
        %145 = OpLabel
        %146 = OpLoad %int %h_1
        %147 = OpBitcast %uint %int_0
        %148 = OpShiftLeftLogical %int %146 %147
               OpStore %x_279 %148
               OpBranch %143
        %143 = OpLabel
        %149 = OpLoad %int %x_279
        %150 = OpBitwiseOr %int %141 %149
               OpStore %x_278 %150
               OpBranch %138
        %140 = OpLabel
               OpStore %x_278 %int_1
               OpBranch %138
        %138 = OpLabel
        %151 = OpLoad %int %x_278
               OpStore %int_a %151
        %152 = OpLoad %int %h_1
        %153 = OpLoad %int %h_1
        %154 = OpLoad %int %int_a
        %155 = OpExtInst %int %156 SClamp %152 %153 %154
               OpStore %clamp_a %155
        %157 = OpLoad %int %top
        %158 = OpIAdd %int %157 %int_1
               OpStore %top %158
        %159 = OpLoad %int %clamp_a
        %160 = OpAccessChain %_ptr_Function_int %stack %158
        %161 = OpSDiv %int %159 %int_1
               OpStore %160 %161
               OpBranch %162
        %162 = OpLabel
               OpLoopMerge %163 %164 None
               OpBranch %165
        %165 = OpLabel
        %166 = OpLoad %int %top
        %167 = OpSGreaterThanEqual %bool %166 %int_0
               OpSelectionMerge %168 None
               OpBranchConditional %167 %169 %170
        %169 = OpLabel
               OpBranch %168
        %170 = OpLabel
               OpBranch %163
        %168 = OpLabel
        %171 = OpLoad %int %top
        %172 = OpISub %int %171 %int_1
               OpStore %top %172
        %173 = OpAccessChain %_ptr_Function_int %stack %171
        %174 = OpLoad %int %173
               OpStore %h_1 %174
        %175 = OpLoad %int %top
        %176 = OpISub %int %175 %int_1
               OpStore %top %176
        %177 = OpAccessChain %_ptr_Function_int %stack %175
        %178 = OpLoad %int %177
               OpStore %l_1 %178
        %179 = OpLoad %int %l_1
               OpStore %param_4 %179
        %180 = OpLoad %int %h_1
               OpStore %param_5 %180
        %181 = OpFunctionCall %int %performPartition_i1_i1_ %param_4 %param_5
               OpStore %p %181
        %184 = OpLoad %int %p
        %185 = OpLoad %int %l_1
        %186 = OpISub %int %184 %int_1
        %187 = OpSGreaterThan %bool %186 %185
               OpSelectionMerge %188 None
               OpBranchConditional %187 %189 %188
        %189 = OpLabel
        %190 = OpLoad %int %top
        %191 = OpIAdd %int %190 %int_1
               OpStore %top %191
        %192 = OpLoad %int %l_1
        %193 = OpAccessChain %_ptr_Function_int %stack %191
               OpStore %193 %192
        %194 = OpLoad %int %top
        %195 = OpIAdd %int %194 %int_1
               OpStore %top %195
        %196 = OpLoad %int %p
        %197 = OpAccessChain %_ptr_Function_int %stack %195
        %198 = OpISub %int %196 %int_1
               OpStore %197 %198
               OpBranch %188
        %188 = OpLabel
        %199 = OpLoad %int %p
        %200 = OpLoad %int %h_1
        %201 = OpIAdd %int %199 %int_1
        %202 = OpSLessThan %bool %201 %200
               OpSelectionMerge %203 None
               OpBranchConditional %202 %204 %203
        %204 = OpLabel
        %205 = OpLoad %int %top
        %206 = OpIAdd %int %205 %int_1
               OpStore %top %206
        %207 = OpLoad %int %p
        %208 = OpAccessChain %_ptr_Function_int %stack %206
        %209 = OpIAdd %int %207 %int_1
               OpStore %208 %209
        %210 = OpLoad %int %top
        %211 = OpIAdd %int %210 %int_1
               OpStore %top %211
        %212 = OpLoad %int %h_1
        %213 = OpAccessChain %_ptr_Function_int %stack %211
               OpStore %213 %212
               OpBranch %203
        %203 = OpLabel
               OpBranch %164
        %164 = OpLabel
               OpBranch %162
        %163 = OpLabel
               OpReturn
               OpFunctionEnd
     %main_1 = OpFunction %void None %109
        %215 = OpLabel
        %i_2 = OpVariable %_ptr_Function_int Function %31
         %uv = OpVariable %_ptr_Function_v2float Function %219
      %color = OpVariable %_ptr_Function_v3float Function %223
               OpStore %i_2 %int_0
               OpBranch %224
        %224 = OpLabel
               OpLoopMerge %225 %226 None
               OpBranch %227
        %227 = OpLabel
        %228 = OpLoad %int %i_2
        %230 = OpSLessThan %bool %228 %int_10
               OpSelectionMerge %231 None
               OpBranchConditional %230 %232 %233
        %232 = OpLabel
               OpBranch %231
        %233 = OpLabel
               OpBranch %225
        %231 = OpLabel
        %234 = OpLoad %int %i_2
        %235 = OpLoad %int %i_2
        %236 = OpAccessChain %_ptr_Private_int %obj %uint_0 %234
        %237 = OpISub %int %int_10 %235
               OpStore %236 %237
        %238 = OpLoad %int %i_2
        %239 = OpLoad %int %i_2
        %240 = OpAccessChain %_ptr_Private_int %obj %uint_0 %239
        %241 = OpLoad %int %240
        %242 = OpLoad %int %i_2
        %243 = OpAccessChain %_ptr_Private_int %obj %uint_0 %242
        %244 = OpLoad %int %243
        %245 = OpAccessChain %_ptr_Private_int %obj %uint_0 %238
        %246 = OpIMul %int %241 %244
               OpStore %245 %246
               OpBranch %226
        %226 = OpLabel
        %247 = OpLoad %int %i_2
        %248 = OpIAdd %int %247 %int_1
               OpStore %i_2 %248
               OpBranch %224
        %225 = OpLabel
        %249 = OpFunctionCall %void %quicksort_
        %250 = OpLoad %v4float %gl_FragCoord
        %252 = OpAccessChain %_ptr_Uniform_v2float %x_34 %uint_0
        %253 = OpLoad %v2float %252
        %254 = OpCompositeExtract %float %250 0
        %255 = OpCompositeExtract %float %250 1
        %256 = OpCompositeConstruct %v2float %254 %255
        %257 = OpFDiv %v2float %256 %253
               OpStore %uv %257
               OpStore %color %261
        %262 = OpAccessChain %_ptr_Private_int %obj %uint_0 %int_0
        %263 = OpLoad %int %262
        %265 = OpAccessChain %_ptr_Function_float %color %uint_0
        %266 = OpLoad %float %265
        %267 = OpAccessChain %_ptr_Function_float %color %uint_0
        %268 = OpConvertSToF %float %263
        %269 = OpFAdd %float %266 %268
               OpStore %267 %269
        %270 = OpAccessChain %_ptr_Function_float %uv %uint_0
        %271 = OpLoad %float %270
        %273 = OpFOrdGreaterThan %bool %271 %float_0_25
               OpSelectionMerge %274 None
               OpBranchConditional %273 %275 %274
        %275 = OpLabel
        %276 = OpAccessChain %_ptr_Private_int %obj %uint_0 %int_1
        %277 = OpLoad %int %276
        %278 = OpAccessChain %_ptr_Function_float %color %uint_0
        %279 = OpLoad %float %278
        %280 = OpAccessChain %_ptr_Function_float %color %uint_0
        %281 = OpConvertSToF %float %277
        %282 = OpFAdd %float %279 %281
               OpStore %280 %282
               OpBranch %274
        %274 = OpLabel
        %283 = OpAccessChain %_ptr_Function_float %uv %uint_0
        %284 = OpLoad %float %283
        %286 = OpFOrdGreaterThan %bool %284 %float_0_5
               OpSelectionMerge %287 None
               OpBranchConditional %286 %288 %287
        %288 = OpLabel
        %290 = OpAccessChain %_ptr_Private_int %obj %uint_0 %int_2
        %291 = OpLoad %int %290
        %292 = OpAccessChain %_ptr_Function_float %color %uint_1
        %293 = OpLoad %float %292
        %294 = OpAccessChain %_ptr_Function_float %color %uint_1
        %295 = OpConvertSToF %float %291
        %296 = OpFAdd %float %293 %295
               OpStore %294 %296
               OpBranch %287
        %287 = OpLabel
        %297 = OpAccessChain %_ptr_Function_float %uv %uint_0
        %298 = OpLoad %float %297
        %300 = OpFOrdGreaterThan %bool %298 %float_0_75
               OpSelectionMerge %301 None
               OpBranchConditional %300 %302 %301
        %302 = OpLabel
        %304 = OpAccessChain %_ptr_Private_int %obj %uint_0 %int_3
        %305 = OpLoad %int %304
        %307 = OpAccessChain %_ptr_Function_float %color %uint_2
        %308 = OpLoad %float %307
        %309 = OpAccessChain %_ptr_Function_float %color %uint_2
        %310 = OpConvertSToF %float %305
        %311 = OpFAdd %float %308 %310
               OpStore %309 %311
               OpBranch %301
        %301 = OpLabel
        %313 = OpAccessChain %_ptr_Private_int %obj %uint_0 %int_4
        %314 = OpLoad %int %313
        %315 = OpAccessChain %_ptr_Function_float %color %uint_1
        %316 = OpLoad %float %315
        %317 = OpAccessChain %_ptr_Function_float %color %uint_1
        %318 = OpConvertSToF %float %314
        %319 = OpFAdd %float %316 %318
               OpStore %317 %319
        %320 = OpAccessChain %_ptr_Function_float %uv %uint_1
        %321 = OpLoad %float %320
        %322 = OpFOrdGreaterThan %bool %321 %float_0_25
               OpSelectionMerge %323 None
               OpBranchConditional %322 %324 %323
        %324 = OpLabel
        %326 = OpAccessChain %_ptr_Private_int %obj %uint_0 %int_5
        %327 = OpLoad %int %326
        %328 = OpAccessChain %_ptr_Function_float %color %uint_0
        %329 = OpLoad %float %328
        %330 = OpAccessChain %_ptr_Function_float %color %uint_0
        %331 = OpConvertSToF %float %327
        %332 = OpFAdd %float %329 %331
               OpStore %330 %332
               OpBranch %323
        %323 = OpLabel
        %333 = OpAccessChain %_ptr_Function_float %uv %uint_1
        %334 = OpLoad %float %333
        %335 = OpFOrdGreaterThan %bool %334 %float_0_5
               OpSelectionMerge %336 None
               OpBranchConditional %335 %337 %336
        %337 = OpLabel
        %339 = OpAccessChain %_ptr_Private_int %obj %uint_0 %int_6
        %340 = OpLoad %int %339
        %341 = OpAccessChain %_ptr_Function_float %color %uint_1
        %342 = OpLoad %float %341
        %343 = OpAccessChain %_ptr_Function_float %color %uint_1
        %344 = OpConvertSToF %float %340
        %345 = OpFAdd %float %342 %344
               OpStore %343 %345
               OpBranch %336
        %336 = OpLabel
        %346 = OpAccessChain %_ptr_Function_float %uv %uint_1
        %347 = OpLoad %float %346
        %348 = OpFOrdGreaterThan %bool %347 %float_0_75
               OpSelectionMerge %349 None
               OpBranchConditional %348 %350 %349
        %350 = OpLabel
        %352 = OpAccessChain %_ptr_Private_int %obj %uint_0 %int_7
        %353 = OpLoad %int %352
        %354 = OpAccessChain %_ptr_Function_float %color %uint_2
        %355 = OpLoad %float %354
        %356 = OpAccessChain %_ptr_Function_float %color %uint_2
        %357 = OpConvertSToF %float %353
        %358 = OpFAdd %float %355 %357
               OpStore %356 %358
               OpBranch %349
        %349 = OpLabel
        %360 = OpAccessChain %_ptr_Private_int %obj %uint_0 %int_8
        %361 = OpLoad %int %360
        %362 = OpAccessChain %_ptr_Function_float %color %uint_2
        %363 = OpLoad %float %362
        %364 = OpAccessChain %_ptr_Function_float %color %uint_2
        %365 = OpConvertSToF %float %361
        %366 = OpFAdd %float %363 %365
               OpStore %364 %366
        %367 = OpAccessChain %_ptr_Function_float %uv %uint_0
        %368 = OpLoad %float %367
        %369 = OpAccessChain %_ptr_Function_float %uv %uint_1
        %370 = OpLoad %float %369
        %372 = OpFSub %float %368 %370
        %371 = OpExtInst %float %156 FAbs %372
        %373 = OpFOrdLessThan %bool %371 %float_0_25
               OpSelectionMerge %374 None
               OpBranchConditional %373 %375 %374
        %375 = OpLabel
        %376 = OpAccessChain %_ptr_Private_int %obj %uint_0 %int_9
        %377 = OpLoad %int %376
        %378 = OpAccessChain %_ptr_Function_float %color %uint_0
        %379 = OpLoad %float %378
        %380 = OpAccessChain %_ptr_Function_float %color %uint_0
        %381 = OpConvertSToF %float %377
        %382 = OpFAdd %float %379 %381
               OpStore %380 %382
               OpBranch %374
        %374 = OpLabel
        %383 = OpLoad %v3float %color
        %384 = OpExtInst %v3float %156 Normalize %383
        %385 = OpCompositeExtract %float %384 0
        %386 = OpCompositeExtract %float %384 1
        %387 = OpCompositeExtract %float %384 2
        %388 = OpCompositeConstruct %v4float %385 %386 %387 %float_1
               OpStore %x_GLF_color %388
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %389
%gl_FragCoord_param = OpFunctionParameter %v4float
        %393 = OpLabel
               OpStore %gl_FragCoord %gl_FragCoord_param
        %394 = OpFunctionCall %void %main_1
        %395 = OpLoad %v4float %x_GLF_color
        %396 = OpCompositeConstruct %main_out %395
               OpReturnValue %396
               OpFunctionEnd
       %main = OpFunction %void None %109
        %398 = OpLabel
        %400 = OpLoad %v4float %gl_FragCoord_param_1
        %399 = OpFunctionCall %main_out %main_inner %400
        %401 = OpCompositeExtract %v4float %399 0
               OpStore %x_GLF_color_1_1 %401
               OpReturn
               OpFunctionEnd
