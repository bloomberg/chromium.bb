; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 85
; Schema: 0
               OpCapability Shader
         %44 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "x_GLF_uniform_float_values"
               OpName %x_6 "x_6"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %a "a"
               OpName %b "b"
               OpName %x_51 "x_51"
               OpName %x_52_phi "x_52_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %_arr_float_uint_5 ArrayStride 16
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
       %uint = OpTypeInt 32 0
     %uint_5 = OpConstant %uint 5
%_arr_float_uint_5 = OpTypeArray %float %uint_5
       %buf0 = OpTypeStruct %_arr_float_uint_5
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
%_ptr_Function_float = OpTypePointer Function %float
         %20 = OpConstantNull %float
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
         %25 = OpConstantNull %bool
     %uint_0 = OpConstant %uint 0
        %int = OpTypeInt 32 1
      %int_2 = OpConstant %int 2
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_3 = OpConstant %int 3
      %int_0 = OpConstant %int 0
      %int_1 = OpConstant %int 1
      %int_4 = OpConstant %int 4
   %main_out = OpTypeStruct %v4float
         %74 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %14
         %17 = OpLabel
          %a = OpVariable %_ptr_Function_float Function %20
          %b = OpVariable %_ptr_Function_float Function %20
       %x_51 = OpVariable %_ptr_Function_bool Function %25
   %x_52_phi = OpVariable %_ptr_Function_bool Function %25
         %31 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_2
         %32 = OpLoad %float %31
         %34 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_3
         %35 = OpLoad %float %34
         %36 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_3
         %37 = OpLoad %float %36
         %38 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_2
         %39 = OpLoad %float %38
         %41 = OpFOrdGreaterThan %bool %37 %39
         %40 = OpSelect %float %41 %35 %32
               OpStore %a %40
         %42 = OpLoad %float %a
         %45 = OpExtInst %float %44 Log %42
         %43 = OpExtInst %float %44 Cos %45
               OpStore %b %43
         %46 = OpLoad %float %b
         %47 = OpCompositeConstruct %v4float %46 %46 %46 %46
               OpStore %x_GLF_color %47
         %48 = OpLoad %float %b
         %50 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_0
         %51 = OpLoad %float %50
         %52 = OpFOrdGreaterThan %bool %48 %51
               OpStore %x_52_phi %52
               OpSelectionMerge %53 None
               OpBranchConditional %52 %54 %53
         %54 = OpLabel
         %55 = OpLoad %float %b
         %57 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_1
         %58 = OpLoad %float %57
         %59 = OpFOrdLessThan %bool %55 %58
               OpStore %x_51 %59
         %60 = OpLoad %bool %x_51
               OpStore %x_52_phi %60
               OpBranch %53
         %53 = OpLabel
         %61 = OpLoad %bool %x_52_phi
               OpSelectionMerge %62 None
               OpBranchConditional %61 %63 %62
         %63 = OpLabel
         %64 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_3
         %65 = OpLoad %float %64
         %67 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_4
         %68 = OpLoad %float %67
         %69 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_4
         %70 = OpLoad %float %69
         %71 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_3
         %72 = OpLoad %float %71
         %73 = OpCompositeConstruct %v4float %65 %68 %70 %72
               OpStore %x_GLF_color %73
               OpBranch %62
         %62 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %74
         %77 = OpLabel
         %78 = OpFunctionCall %void %main_1
         %79 = OpLoad %v4float %x_GLF_color
         %80 = OpCompositeConstruct %main_out %79
               OpReturnValue %80
               OpFunctionEnd
       %main = OpFunction %void None %14
         %82 = OpLabel
         %83 = OpFunctionCall %main_out %main_inner
         %84 = OpCompositeExtract %v4float %83 0
               OpStore %x_GLF_color_1_1 %84
               OpReturn
               OpFunctionEnd
