; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 89
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "x_GLF_uniform_int_values"
               OpName %x_6 "x_6"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %m "m"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %_arr_int_uint_2 ArrayStride 16
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
     %uint_2 = OpConstant %uint 2
%_arr_int_uint_2 = OpTypeArray %int %uint_2
       %buf0 = OpTypeStruct %_arr_int_uint_2
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %15 = OpTypeFunction %void
    %v2float = OpTypeVector %float 2
%mat2v2float = OpTypeMatrix %v2float 2
%_ptr_Function_mat2v2float = OpTypePointer Function %mat2v2float
         %23 = OpConstantNull %mat2v2float
     %uint_0 = OpConstant %uint 0
      %int_0 = OpConstant %int 0
%_ptr_Uniform_int = OpTypePointer Uniform %int
    %float_0 = OpConstant %float 0
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_1 = OpConstant %uint 1
      %int_1 = OpConstant %int 1
   %main_out = OpTypeStruct %v4float
         %78 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %15
         %18 = OpLabel
          %m = OpVariable %_ptr_Function_mat2v2float Function %23
         %27 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %28 = OpLoad %int %27
         %29 = OpConvertSToF %float %28
         %33 = OpCompositeConstruct %v2float %29 %float_0
         %34 = OpCompositeConstruct %v2float %float_0 %29
         %35 = OpCompositeConstruct %mat2v2float %33 %34
         %31 = OpTranspose %mat2v2float %35
         %30 = OpTranspose %mat2v2float %31
               OpStore %m %30
         %36 = OpLoad %mat2v2float %m
         %37 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %38 = OpLoad %int %37
         %39 = OpConvertSToF %float %38
         %40 = OpCompositeConstruct %v2float %39 %float_0
         %41 = OpCompositeConstruct %v2float %float_0 %39
         %42 = OpCompositeConstruct %mat2v2float %40 %41
         %45 = OpCompositeExtract %v2float %36 0
         %46 = OpCompositeExtract %v2float %42 0
         %47 = OpFOrdEqual %v2bool %45 %46
         %43 = OpAll %bool %47
               OpSelectionMerge %49 None
               OpBranchConditional %43 %50 %49
         %50 = OpLabel
         %53 = OpCompositeExtract %v2float %36 1
         %54 = OpCompositeExtract %v2float %42 1
         %55 = OpFOrdEqual %v2bool %53 %54
         %51 = OpAll %bool %55
               OpBranch %49
         %49 = OpLabel
         %56 = OpPhi %bool %43 %18 %51 %50
               OpSelectionMerge %57 None
               OpBranchConditional %56 %58 %59
         %58 = OpLabel
         %60 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %61 = OpLoad %int %60
         %63 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %64 = OpLoad %int %63
         %65 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %66 = OpLoad %int %65
         %67 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_0
         %68 = OpLoad %int %67
         %69 = OpConvertSToF %float %61
         %70 = OpConvertSToF %float %64
         %71 = OpConvertSToF %float %66
         %72 = OpConvertSToF %float %68
         %73 = OpCompositeConstruct %v4float %69 %70 %71 %72
               OpStore %x_GLF_color %73
               OpBranch %57
         %59 = OpLabel
         %74 = OpAccessChain %_ptr_Uniform_int %x_6 %uint_0 %int_1
         %75 = OpLoad %int %74
         %76 = OpConvertSToF %float %75
         %77 = OpCompositeConstruct %v4float %76 %76 %76 %76
               OpStore %x_GLF_color %77
               OpBranch %57
         %57 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %78
         %81 = OpLabel
         %82 = OpFunctionCall %void %main_1
         %83 = OpLoad %v4float %x_GLF_color
         %84 = OpCompositeConstruct %main_out %83
               OpReturnValue %84
               OpFunctionEnd
       %main = OpFunction %void None %15
         %86 = OpLabel
         %87 = OpFunctionCall %main_out %main_inner
         %88 = OpCompositeExtract %v4float %87 0
               OpStore %x_GLF_color_1_1 %88
               OpReturn
               OpFunctionEnd
