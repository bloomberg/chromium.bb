; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 52
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %x_GLF_color "x_GLF_color"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "one"
               OpName %x_5 "x_5"
               OpName %main_1 "main_1"
               OpName %x_29 "x_29"
               OpName %x_30_phi "x_30_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_5 NonWritable
               OpDecorate %x_5 DescriptorSet 0
               OpDecorate %x_5 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %buf0 = OpTypeStruct %float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_5 = OpVariable %_ptr_Uniform_buf0 Uniform
       %void = OpTypeVoid
         %11 = OpTypeFunction %void
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
         %18 = OpConstantNull %bool
    %float_0 = OpConstant %float 0
         %21 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
    %float_1 = OpConstant %float 1
         %39 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
         %40 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
   %main_out = OpTypeStruct %v4float
         %41 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %11
         %14 = OpLabel
       %x_29 = OpVariable %_ptr_Function_bool Function %18
   %x_30_phi = OpVariable %_ptr_Function_bool Function %18
               OpStore %x_GLF_color %21
         %25 = OpAccessChain %_ptr_Uniform_float %x_5 %uint_0
         %26 = OpLoad %float %25
         %27 = OpFOrdLessThan %bool %26 %float_0
               OpStore %x_30_phi %27
               OpSelectionMerge %28 None
               OpBranchConditional %27 %29 %28
         %29 = OpLabel
         %30 = OpAccessChain %_ptr_Uniform_float %x_5 %uint_0
         %31 = OpLoad %float %30
         %32 = OpFOrdLessThan %bool %31 %float_0
               OpStore %x_29 %32
         %33 = OpLoad %bool %x_29
               OpStore %x_30_phi %33
               OpBranch %28
         %28 = OpLabel
         %34 = OpLoad %bool %x_30_phi
               OpSelectionMerge %35 None
               OpBranchConditional %34 %36 %37
         %36 = OpLabel
               OpStore %x_GLF_color %39
               OpBranch %35
         %37 = OpLabel
               OpStore %x_GLF_color %40
               OpBranch %35
         %35 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %41
         %44 = OpLabel
         %45 = OpFunctionCall %void %main_1
         %46 = OpLoad %v4float %x_GLF_color
         %47 = OpCompositeConstruct %main_out %46
               OpReturnValue %47
               OpFunctionEnd
       %main = OpFunction %void None %11
         %49 = OpLabel
         %50 = OpFunctionCall %main_out %main_inner
         %51 = OpCompositeExtract %v4float %50 0
               OpStore %x_GLF_color_1_1 %51
               OpReturn
               OpFunctionEnd
