; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 118
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "one"
               OpName %x_9 "x_9"
               OpName %x_GLF_color "x_GLF_color"
               OpName %S "S"
               OpMemberName %S 0 "arr"
               OpName %func_struct_S_i1_2_1_i1_ "func_struct_S_i1_2_1_i1_"
               OpName %s "s"
               OpName %x "x"
               OpName %main_1 "main_1"
               OpName %a "a"
               OpName %i "i"
               OpName %j "j"
               OpName %s_1 "s_1"
               OpName %param "param"
               OpName %param_1 "param_1"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_9 NonWritable
               OpDecorate %x_9 DescriptorSet 0
               OpDecorate %x_9 Binding 0
               OpMemberDecorate %S 0 Offset 0
               OpDecorate %_arr_int_uint_2 ArrayStride 4
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
        %int = OpTypeInt 32 1
       %buf0 = OpTypeStruct %int
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_9 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %uint = OpTypeInt 32 0
     %uint_2 = OpConstant %uint 2
%_arr_int_uint_2 = OpTypeArray %int %uint_2
          %S = OpTypeStruct %_arr_int_uint_2
%_ptr_Function_S = OpTypePointer Function %S
%_ptr_Function_int = OpTypePointer Function %int
         %12 = OpTypeFunction %int %_ptr_Function_S %_ptr_Function_int
     %uint_0 = OpConstant %uint 0
      %int_1 = OpConstant %int 1
%_ptr_Uniform_int = OpTypePointer Uniform %int
       %bool = OpTypeBool
     %int_n1 = OpConstant %int -1
       %void = OpTypeVoid
         %45 = OpTypeFunction %void
         %50 = OpConstantNull %int
         %54 = OpConstantNull %S
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
     %int_30 = OpConstant %int 30
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
        %105 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
        %106 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
   %main_out = OpTypeStruct %v4float
        %107 = OpTypeFunction %main_out
%func_struct_S_i1_2_1_i1_ = OpFunction %int None %12
          %s = OpFunctionParameter %_ptr_Function_S
          %x = OpFunctionParameter %_ptr_Function_int
         %22 = OpLabel
         %24 = OpLoad %int %x
         %28 = OpAccessChain %_ptr_Function_int %s %uint_0 %int_1
         %29 = OpIAdd %int %24 %int_1
               OpStore %28 %29
         %31 = OpAccessChain %_ptr_Uniform_int %x_9 %uint_0
         %32 = OpLoad %int %31
         %34 = OpAccessChain %_ptr_Function_int %s %uint_0 %32
         %35 = OpLoad %int %34
         %37 = OpLoad %int %x
         %38 = OpIEqual %bool %35 %37
               OpSelectionMerge %40 None
               OpBranchConditional %38 %41 %40
         %41 = OpLabel
               OpReturnValue %int_n1
         %40 = OpLabel
         %44 = OpLoad %int %x
               OpReturnValue %44
               OpFunctionEnd
     %main_1 = OpFunction %void None %45
         %48 = OpLabel
          %a = OpVariable %_ptr_Function_int Function %50
          %i = OpVariable %_ptr_Function_int Function %50
          %j = OpVariable %_ptr_Function_int Function %50
        %s_1 = OpVariable %_ptr_Function_S Function %54
      %param = OpVariable %_ptr_Function_S Function %54
    %param_1 = OpVariable %_ptr_Function_int Function %50
               OpStore %a %int_0
               OpStore %i %int_0
               OpBranch %58
         %58 = OpLabel
               OpLoopMerge %59 %60 None
               OpBranch %61
         %61 = OpLabel
         %62 = OpLoad %int %i
         %63 = OpAccessChain %_ptr_Uniform_int %x_9 %uint_0
         %64 = OpLoad %int %63
         %66 = OpIAdd %int %int_2 %64
         %67 = OpSLessThan %bool %62 %66
               OpSelectionMerge %68 None
               OpBranchConditional %67 %69 %70
         %69 = OpLabel
               OpBranch %68
         %70 = OpLabel
               OpBranch %59
         %68 = OpLabel
               OpStore %j %int_0
               OpBranch %71
         %71 = OpLabel
               OpLoopMerge %72 %73 None
               OpBranch %74
         %74 = OpLabel
         %75 = OpLoad %int %j
         %76 = OpAccessChain %_ptr_Uniform_int %x_9 %uint_0
         %77 = OpLoad %int %76
         %79 = OpIAdd %int %int_3 %77
         %80 = OpSLessThan %bool %75 %79
               OpSelectionMerge %81 None
               OpBranchConditional %80 %82 %83
         %82 = OpLabel
               OpBranch %81
         %83 = OpLabel
               OpBranch %72
         %81 = OpLabel
         %84 = OpLoad %int %i
         %85 = OpLoad %int %j
         %86 = OpLoad %S %s_1
               OpStore %param %86
         %87 = OpIAdd %int %84 %85
               OpStore %param_1 %87
         %88 = OpFunctionCall %int %func_struct_S_i1_2_1_i1_ %param %param_1
         %91 = OpLoad %int %a
         %92 = OpIAdd %int %91 %88
               OpStore %a %92
               OpBranch %73
         %73 = OpLabel
         %93 = OpLoad %int %j
         %94 = OpIAdd %int %93 %int_1
               OpStore %j %94
               OpBranch %71
         %72 = OpLabel
               OpBranch %60
         %60 = OpLabel
         %95 = OpLoad %int %i
         %96 = OpIAdd %int %95 %int_1
               OpStore %i %96
               OpBranch %58
         %59 = OpLabel
         %97 = OpLoad %int %a
         %99 = OpIEqual %bool %97 %int_30
               OpSelectionMerge %100 None
               OpBranchConditional %99 %101 %102
        %101 = OpLabel
               OpStore %x_GLF_color %105
               OpBranch %100
        %102 = OpLabel
               OpStore %x_GLF_color %106
               OpBranch %100
        %100 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %107
        %110 = OpLabel
        %111 = OpFunctionCall %void %main_1
        %112 = OpLoad %v4float %x_GLF_color
        %113 = OpCompositeConstruct %main_out %112
               OpReturnValue %113
               OpFunctionEnd
       %main = OpFunction %void None %45
        %115 = OpLabel
        %116 = OpFunctionCall %main_out %main_inner
        %117 = OpCompositeExtract %v4float %116 0
               OpStore %x_GLF_color_1_1 %117
               OpReturn
               OpFunctionEnd
