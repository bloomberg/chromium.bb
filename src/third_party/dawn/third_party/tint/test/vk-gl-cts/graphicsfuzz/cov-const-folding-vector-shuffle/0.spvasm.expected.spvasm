; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 84
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %x_26 "x_26"
               OpName %x_39 "x_39"
               OpName %x_26_phi "x_26_phi"
               OpName %x_5_phi "x_5_phi"
               OpName %x_40_phi "x_40_phi"
               OpName %x_27 "x_27"
               OpName %x_4 "x_4"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
          %8 = OpTypeFunction %void
    %v2float = OpTypeVector %float 2
%_ptr_Function_v2float = OpTypePointer Function %v2float
         %15 = OpConstantNull %v2float
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
         %19 = OpConstantNull %bool
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %24 = OpConstantNull %int
    %float_0 = OpConstant %float 0
         %27 = OpConstantComposite %v2float %float_0 %float_0
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
    %float_1 = OpConstant %float 1
      %int_1 = OpConstant %int 1
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Function_float = OpTypePointer Function %float
     %uint_1 = OpConstant %uint 1
    %float_2 = OpConstant %float 2
         %71 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
         %72 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
   %main_out = OpTypeStruct %v4float
         %73 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %8
         %11 = OpLabel
       %x_26 = OpVariable %_ptr_Function_v2float Function %15
       %x_39 = OpVariable %_ptr_Function_bool Function %19
   %x_26_phi = OpVariable %_ptr_Function_v2float Function %15
    %x_5_phi = OpVariable %_ptr_Function_int Function %24
   %x_40_phi = OpVariable %_ptr_Function_bool Function %19
       %x_27 = OpVariable %_ptr_Function_v2float Function %15
        %x_4 = OpVariable %_ptr_Function_int Function %24
               OpStore %x_26_phi %27
               OpStore %x_5_phi %int_2
               OpBranch %29
         %29 = OpLabel
               OpLoopMerge %30 %31 None
               OpBranch %32
         %32 = OpLabel
         %35 = OpLoad %v2float %x_26_phi
               OpStore %x_26 %35
         %36 = OpLoad %int %x_5_phi
         %38 = OpSLessThan %bool %36 %int_3
               OpSelectionMerge %39 None
               OpBranchConditional %38 %40 %41
         %40 = OpLabel
               OpBranch %39
         %41 = OpLabel
               OpBranch %30
         %39 = OpLabel
               OpBranch %31
         %31 = OpLabel
         %43 = OpConvertSToF %float %36
         %44 = OpCompositeConstruct %v2float %float_1 %43
         %45 = OpCompositeExtract %float %44 0
         %46 = OpCompositeExtract %float %44 1
         %47 = OpCompositeConstruct %v2float %45 %46
               OpStore %x_27 %47
         %49 = OpIAdd %int %36 %int_1
               OpStore %x_4 %49
         %50 = OpLoad %v2float %x_27
               OpStore %x_26_phi %50
         %51 = OpLoad %int %x_4
               OpStore %x_5_phi %51
               OpBranch %29
         %30 = OpLabel
         %55 = OpAccessChain %_ptr_Function_float %x_26 %uint_0
         %56 = OpLoad %float %55
         %57 = OpFOrdNotEqual %bool %56 %float_1
               OpStore %x_40_phi %57
         %58 = OpLogicalNot %bool %57
               OpSelectionMerge %59 None
               OpBranchConditional %58 %60 %59
         %60 = OpLabel
         %62 = OpAccessChain %_ptr_Function_float %x_26 %uint_1
         %63 = OpLoad %float %62
         %65 = OpFOrdNotEqual %bool %63 %float_2
               OpStore %x_39 %65
         %66 = OpLoad %bool %x_39
               OpStore %x_40_phi %66
               OpBranch %59
         %59 = OpLabel
         %67 = OpLoad %bool %x_40_phi
               OpSelectionMerge %68 None
               OpBranchConditional %67 %69 %70
         %69 = OpLabel
               OpStore %x_GLF_color %71
               OpBranch %68
         %70 = OpLabel
               OpStore %x_GLF_color %72
               OpBranch %68
         %68 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %73
         %76 = OpLabel
         %77 = OpFunctionCall %void %main_1
         %78 = OpLoad %v4float %x_GLF_color
         %79 = OpCompositeConstruct %main_out %78
               OpReturnValue %79
               OpFunctionEnd
       %main = OpFunction %void None %8
         %81 = OpLabel
         %82 = OpFunctionCall %main_out %main_inner
         %83 = OpCompositeExtract %v4float %82 0
               OpStore %x_GLF_color_1_1 %83
               OpReturn
               OpFunctionEnd
