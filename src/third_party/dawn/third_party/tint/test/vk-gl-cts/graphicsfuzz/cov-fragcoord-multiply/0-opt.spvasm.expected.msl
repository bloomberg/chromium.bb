#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ float el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[4];
};
struct buf1 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_float_values;
};
struct tint_padded_array_element_1 {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad_1[12];
};
struct tint_array_wrapper_1 {
  /* 0x0000 */ tint_padded_array_element_1 arr[1];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper_1 x_GLF_uniform_int_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf1& x_6, constant buf0& x_9, thread float4* const tint_symbol_3, thread float4* const tint_symbol_4) {
  int2 icoord = 0;
  float x_40 = 0.0f;
  int2 icoord_1 = 0;
  float const x_42 = (*(tint_symbol_3)).x;
  float const x_44 = x_6.x_GLF_uniform_float_values.arr[1].el;
  float const x_47 = x_6.x_GLF_uniform_float_values.arr[0].el;
  if (((x_42 * x_44) > x_47)) {
    float4 const x_52 = *(tint_symbol_3);
    float const x_55 = x_6.x_GLF_uniform_float_values.arr[1].el;
    float const x_58 = x_6.x_GLF_uniform_float_values.arr[0].el;
    float const x_60 = x_6.x_GLF_uniform_float_values.arr[2].el;
    icoord = int2(((float2(x_52.x, x_52.y) * x_55) - float2(x_58, x_60)));
    float const x_65 = x_6.x_GLF_uniform_float_values.arr[2].el;
    float const x_67 = x_6.x_GLF_uniform_float_values.arr[3].el;
    int const x_69 = icoord.x;
    int const x_71 = icoord.y;
    int const x_74 = x_9.x_GLF_uniform_int_values.arr[0].el;
    if ((as_type<int>((as_type<uint>(x_69) * as_type<uint>(x_71))) != x_74)) {
      float const x_80 = x_6.x_GLF_uniform_float_values.arr[3].el;
      x_40 = x_80;
    } else {
      float const x_82 = x_6.x_GLF_uniform_float_values.arr[2].el;
      x_40 = x_82;
    }
    float const x_83 = x_40;
    int const x_85 = x_9.x_GLF_uniform_int_values.arr[0].el;
    *(tint_symbol_4) = float4(x_65, x_67, x_83, float(x_85));
  } else {
    float4 const x_88 = *(tint_symbol_3);
    float const x_91 = x_6.x_GLF_uniform_float_values.arr[1].el;
    float const x_94 = x_6.x_GLF_uniform_float_values.arr[0].el;
    float const x_96 = x_6.x_GLF_uniform_float_values.arr[2].el;
    icoord_1 = int2(((float2(x_88.x, x_88.y) * x_91) - float2(x_94, x_96)));
    float const x_101 = x_6.x_GLF_uniform_float_values.arr[3].el;
    float const x_103 = x_6.x_GLF_uniform_float_values.arr[3].el;
    int const x_105 = icoord_1.x;
    float const x_108 = x_6.x_GLF_uniform_float_values.arr[3].el;
    *(tint_symbol_4) = float4(x_101, x_103, float(x_105), x_108);
  }
  return;
}

main_out tint_symbol_inner(constant buf1& x_6, constant buf0& x_9, float4 gl_FragCoord_param, thread float4* const tint_symbol_5, thread float4* const tint_symbol_6) {
  *(tint_symbol_5) = gl_FragCoord_param;
  main_1(x_6, x_9, tint_symbol_5, tint_symbol_6);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_6)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(float4 gl_FragCoord_param [[position]], constant buf1& x_6 [[buffer(0)]], constant buf0& x_9 [[buffer(1)]]) {
  thread float4 tint_symbol_7 = 0.0f;
  thread float4 tint_symbol_8 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_6, x_9, gl_FragCoord_param, &(tint_symbol_7), &(tint_symbol_8));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

