; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 68
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %x_GLF_color "x_GLF_color"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "zero"
               OpName %x_5 "x_5"
               OpName %main_1 "main_1"
               OpName %x_10 "x_10"
               OpName %x_9 "x_9"
               OpName %x_7 "x_7"
               OpName %x_11_phi "x_11_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_5 NonWritable
               OpDecorate %x_5 DescriptorSet 0
               OpDecorate %x_5 Binding 0
               OpDecorate %_arr_int_uint_1 ArrayStride 4
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
        %int = OpTypeInt 32 1
       %buf0 = OpTypeStruct %int
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_5 = OpVariable %_ptr_Uniform_buf0 Uniform
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_arr_int_uint_1 = OpTypeArray %int %uint_1
%_ptr_Function__arr_int_uint_1 = OpTypePointer Function %_arr_int_uint_1
         %21 = OpConstantNull %_arr_int_uint_1
%_ptr_Function_int = OpTypePointer Function %int
         %25 = OpConstantNull %int
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_int = OpTypePointer Uniform %int
      %int_0 = OpConstant %int 0
    %float_0 = OpConstant %float 0
         %39 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
       %bool = OpTypeBool
      %int_1 = OpConstant %int 1
      %int_2 = OpConstant %int 2
    %float_1 = OpConstant %float 1
         %56 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
   %main_out = OpTypeStruct %v4float
         %57 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %12
         %15 = OpLabel
       %x_10 = OpVariable %_ptr_Function__arr_int_uint_1 Function %21
        %x_9 = OpVariable %_ptr_Function__arr_int_uint_1 Function %21
        %x_7 = OpVariable %_ptr_Function_int Function %25
   %x_11_phi = OpVariable %_ptr_Function_int Function %25
         %29 = OpAccessChain %_ptr_Uniform_int %x_5 %uint_0
         %30 = OpLoad %int %29
         %32 = OpAccessChain %_ptr_Function_int %x_9 %int_0
               OpStore %32 %30
         %33 = OpLoad %_arr_int_uint_1 %x_9
               OpStore %x_10 %33
         %34 = OpAccessChain %_ptr_Function_int %x_9 %int_0
         %35 = OpLoad %int %34
               OpStore %x_7 %35
               OpSelectionMerge %36 None
               OpSwitch %uint_0 %37
         %37 = OpLabel
               OpStore %x_GLF_color %39
         %40 = OpAccessChain %_ptr_Function_int %x_10 %int_0
         %41 = OpLoad %int %40
         %43 = OpLoad %int %x_7
         %42 = OpCopyObject %int %43
         %44 = OpIEqual %bool %41 %42
               OpSelectionMerge %46 None
               OpBranchConditional %44 %47 %46
         %47 = OpLabel
               OpStore %x_11_phi %int_1
               OpBranch %36
         %46 = OpLabel
               OpStore %x_11_phi %int_2
               OpBranch %36
         %36 = OpLabel
         %50 = OpLoad %int %x_11_phi
         %51 = OpIEqual %bool %50 %int_1
               OpSelectionMerge %52 None
               OpBranchConditional %51 %53 %54
         %53 = OpLabel
               OpStore %x_GLF_color %56
               OpBranch %52
         %54 = OpLabel
               OpStore %x_GLF_color %39
               OpBranch %52
         %52 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %57
         %60 = OpLabel
         %61 = OpFunctionCall %void %main_1
         %62 = OpLoad %v4float %x_GLF_color
         %63 = OpCompositeConstruct %main_out %62
               OpReturnValue %63
               OpFunctionEnd
       %main = OpFunction %void None %12
         %65 = OpLabel
         %66 = OpFunctionCall %main_out %main_inner
         %67 = OpCompositeExtract %v4float %66 0
               OpStore %x_GLF_color_1_1 %67
               OpReturn
               OpFunctionEnd
