; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 120
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "one"
               OpName %x_6 "x_6"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %a "a"
               OpName %b "b"
               OpName %c "c"
               OpName %d "d"
               OpName %e "e"
               OpName %f "f"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
       %uint = OpTypeInt 32 0
       %buf0 = OpTypeStruct %uint
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
%_ptr_Function_uint = OpTypePointer Function %uint
         %18 = OpConstantNull %uint
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
    %uint_77 = OpConstant %uint 77
    %uint_32 = OpConstant %uint 32
  %uint_3243 = OpConstant %uint 3243
    %uint_33 = OpConstant %uint 33
    %uint_23 = OpConstant %uint 23
   %uint_345 = OpConstant %uint 345
  %uint_2395 = OpConstant %uint 2395
%uint_290485 = OpConstant %uint 290485
 %uint_44321 = OpConstant %uint 44321
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
        %107 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
        %108 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
   %main_out = OpTypeStruct %v4float
        %109 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %12
         %15 = OpLabel
          %a = OpVariable %_ptr_Function_uint Function %18
          %b = OpVariable %_ptr_Function_uint Function %18
          %c = OpVariable %_ptr_Function_uint Function %18
          %d = OpVariable %_ptr_Function_uint Function %18
          %e = OpVariable %_ptr_Function_uint Function %18
          %f = OpVariable %_ptr_Function_uint Function %18
         %26 = OpAccessChain %_ptr_Uniform_uint %x_6 %uint_0
         %27 = OpLoad %uint %26
         %29 = OpIAdd %uint %uint_77 %27
         %31 = OpShiftRightLogical %uint %29 %uint_32
               OpStore %a %31
         %32 = OpAccessChain %_ptr_Uniform_uint %x_6 %uint_0
         %33 = OpLoad %uint %32
         %35 = OpIAdd %uint %uint_3243 %33
         %37 = OpShiftRightLogical %uint %35 %uint_33
               OpStore %b %37
         %38 = OpAccessChain %_ptr_Uniform_uint %x_6 %uint_0
         %39 = OpLoad %uint %38
         %41 = OpIAdd %uint %uint_23 %39
         %43 = OpShiftRightLogical %uint %41 %uint_345
               OpStore %c %43
         %44 = OpAccessChain %_ptr_Uniform_uint %x_6 %uint_0
         %45 = OpLoad %uint %44
         %47 = OpIAdd %uint %uint_2395 %45
         %48 = OpShiftLeftLogical %uint %47 %uint_32
               OpStore %d %48
         %49 = OpAccessChain %_ptr_Uniform_uint %x_6 %uint_0
         %50 = OpLoad %uint %49
         %52 = OpIAdd %uint %uint_290485 %50
         %53 = OpShiftLeftLogical %uint %52 %uint_33
               OpStore %e %53
         %54 = OpAccessChain %_ptr_Uniform_uint %x_6 %uint_0
         %55 = OpLoad %uint %54
         %57 = OpIAdd %uint %uint_44321 %55
         %58 = OpShiftLeftLogical %uint %57 %uint_345
               OpStore %f %58
         %59 = OpLoad %uint %a
         %61 = OpINotEqual %bool %59 %uint_1
               OpSelectionMerge %63 None
               OpBranchConditional %61 %64 %63
         %64 = OpLabel
               OpStore %a %uint_1
               OpBranch %63
         %63 = OpLabel
         %65 = OpLoad %uint %b
         %66 = OpINotEqual %bool %65 %uint_0
               OpSelectionMerge %67 None
               OpBranchConditional %66 %68 %67
         %68 = OpLabel
               OpStore %b %uint_0
               OpBranch %67
         %67 = OpLabel
         %69 = OpLoad %uint %c
         %70 = OpINotEqual %bool %69 %uint_1
               OpSelectionMerge %71 None
               OpBranchConditional %70 %72 %71
         %72 = OpLabel
               OpStore %c %uint_1
               OpBranch %71
         %71 = OpLabel
         %73 = OpLoad %uint %d
         %74 = OpINotEqual %bool %73 %uint_0
               OpSelectionMerge %75 None
               OpBranchConditional %74 %76 %75
         %76 = OpLabel
               OpStore %d %uint_0
               OpBranch %75
         %75 = OpLabel
         %77 = OpLoad %uint %e
         %78 = OpINotEqual %bool %77 %uint_1
               OpSelectionMerge %79 None
               OpBranchConditional %78 %80 %79
         %80 = OpLabel
               OpStore %e %uint_1
               OpBranch %79
         %79 = OpLabel
         %81 = OpLoad %uint %f
         %82 = OpINotEqual %bool %81 %uint_0
               OpSelectionMerge %83 None
               OpBranchConditional %82 %84 %83
         %84 = OpLabel
               OpStore %f %uint_0
               OpBranch %83
         %83 = OpLabel
         %85 = OpLoad %uint %a
         %86 = OpLoad %uint %b
         %87 = OpLoad %uint %c
         %88 = OpLoad %uint %d
         %89 = OpLoad %uint %e
         %90 = OpLoad %uint %f
         %91 = OpIEqual %bool %85 %uint_1
         %92 = OpIEqual %bool %86 %uint_0
         %93 = OpLogicalAnd %bool %91 %92
         %94 = OpIEqual %bool %87 %uint_1
         %95 = OpLogicalAnd %bool %93 %94
         %96 = OpIEqual %bool %88 %uint_0
         %97 = OpLogicalAnd %bool %95 %96
         %98 = OpIEqual %bool %89 %uint_1
         %99 = OpLogicalAnd %bool %97 %98
        %100 = OpIEqual %bool %90 %uint_0
        %101 = OpLogicalAnd %bool %99 %100
               OpSelectionMerge %102 None
               OpBranchConditional %101 %103 %104
        %103 = OpLabel
               OpStore %x_GLF_color %107
               OpBranch %102
        %104 = OpLabel
               OpStore %x_GLF_color %108
               OpBranch %102
        %102 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %109
        %112 = OpLabel
        %113 = OpFunctionCall %void %main_1
        %114 = OpLoad %v4float %x_GLF_color
        %115 = OpCompositeConstruct %main_out %114
               OpReturnValue %115
               OpFunctionEnd
       %main = OpFunction %void None %12
        %117 = OpLabel
        %118 = OpFunctionCall %main_out %main_inner
        %119 = OpCompositeExtract %v4float %118 0
               OpStore %x_GLF_color_1_1 %119
               OpReturn
               OpFunctionEnd
