#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[5];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_int_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_6, thread float4* const tint_symbol_3) {
  int count0 = 0;
  int count1 = 0;
  int i = 0;
  int const x_29 = x_6.x_GLF_uniform_int_values.arr[2].el;
  count0 = x_29;
  int const x_31 = x_6.x_GLF_uniform_int_values.arr[2].el;
  count1 = x_31;
  int const x_33 = x_6.x_GLF_uniform_int_values.arr[2].el;
  i = x_33;
  while (true) {
    int const x_38 = i;
    int const x_40 = x_6.x_GLF_uniform_int_values.arr[4].el;
    if ((x_38 < x_40)) {
    } else {
      break;
    }
    int const x_43 = i;
    switch(x_43) {
      case 0:
      case 1: {
        int const x_47 = count0;
        count0 = as_type<int>((as_type<uint>(x_47) + as_type<uint>(1)));
        /* fallthrough */
      }
      case 2:
      case 3: {
        int const x_49 = count1;
        count1 = as_type<int>((as_type<uint>(x_49) + as_type<uint>(1)));
        break;
      }
      default: {
        break;
      }
    }
    {
      int const x_51 = i;
      i = as_type<int>((as_type<uint>(x_51) + as_type<uint>(1)));
    }
  }
  int const x_53 = count1;
  int const x_55 = x_6.x_GLF_uniform_int_values.arr[0].el;
  if ((x_53 == x_55)) {
    int const x_61 = x_6.x_GLF_uniform_int_values.arr[3].el;
    int const x_64 = x_6.x_GLF_uniform_int_values.arr[2].el;
    int const x_67 = x_6.x_GLF_uniform_int_values.arr[2].el;
    int const x_70 = x_6.x_GLF_uniform_int_values.arr[3].el;
    *(tint_symbol_3) = float4(float(x_61), float(x_64), float(x_67), float(x_70));
  } else {
    int const x_74 = x_6.x_GLF_uniform_int_values.arr[2].el;
    float const x_75 = float(x_74);
    *(tint_symbol_3) = float4(x_75, x_75, x_75, x_75);
  }
  int const x_77 = count0;
  int const x_79 = x_6.x_GLF_uniform_int_values.arr[1].el;
  if ((x_77 != x_79)) {
    int const x_84 = x_6.x_GLF_uniform_int_values.arr[2].el;
    float const x_85 = float(x_84);
    *(tint_symbol_3) = float4(x_85, x_85, x_85, x_85);
  }
  return;
}

main_out tint_symbol_inner(constant buf0& x_6, thread float4* const tint_symbol_4) {
  main_1(x_6, tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(constant buf0& x_6 [[buffer(0)]]) {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_6, &(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

