; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 146
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %gl_FragCoord_param_1 %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %gl_FragCoord_param_1 "gl_FragCoord_param_1"
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %x_GLF_color "x_GLF_color"
               OpName %gl_FragCoord "gl_FragCoord"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_8 "x_8"
               OpName %main_1 "main_1"
               OpName %odd_index "odd_index"
               OpName %even_index "even_index"
               OpName %j "j"
               OpName %ll "ll"
               OpName %x_59 "x_59"
               OpName %x_60_phi "x_60_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %gl_FragCoord_param "gl_FragCoord_param"
               OpName %main "main"
               OpDecorate %gl_FragCoord_param_1 BuiltIn FragCoord
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_8 NonWritable
               OpDecorate %x_8 DescriptorSet 0
               OpDecorate %x_8 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Input_v4float = OpTypePointer Input %v4float
%gl_FragCoord_param_1 = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %7 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %7
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %7
%gl_FragCoord = OpVariable %_ptr_Private_v4float Private %7
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_8 = OpVariable %_ptr_Uniform_buf0 Uniform
       %void = OpTypeVoid
         %15 = OpTypeFunction %void
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %22 = OpConstantNull %int
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
         %29 = OpConstantNull %bool
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %33 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Private_float = OpTypePointer Private %float
  %float_128 = OpConstant %float 128
     %uint_1 = OpConstant %uint 1
      %int_0 = OpConstant %int 0
      %int_1 = OpConstant %int 1
 %float_0_25 = OpConstant %float 0.25
%_ptr_Uniform_float = OpTypePointer Uniform %float
       %true = OpConstantTrue %bool
      %int_3 = OpConstant %int 3
        %130 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
   %main_out = OpTypeStruct %v4float
        %133 = OpTypeFunction %main_out %v4float
     %main_1 = OpFunction %void None %15
         %18 = OpLabel
  %odd_index = OpVariable %_ptr_Function_int Function %22
 %even_index = OpVariable %_ptr_Function_int Function %22
          %j = OpVariable %_ptr_Function_int Function %22
         %ll = OpVariable %_ptr_Function_int Function %22
       %x_59 = OpVariable %_ptr_Function_bool Function %29
   %x_60_phi = OpVariable %_ptr_Function_bool Function %29
               OpStore %x_GLF_color %33
         %37 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_0
         %38 = OpLoad %float %37
         %40 = OpFOrdLessThan %bool %38 %float_128
               OpStore %x_60_phi %40
               OpSelectionMerge %41 None
               OpBranchConditional %40 %42 %41
         %42 = OpLabel
         %44 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
         %45 = OpLoad %float %44
         %46 = OpFOrdLessThan %bool %45 %float_128
               OpStore %x_59 %46
         %47 = OpLoad %bool %x_59
               OpStore %x_60_phi %47
               OpBranch %41
         %41 = OpLabel
         %48 = OpLoad %bool %x_60_phi
               OpSelectionMerge %49 None
               OpBranchConditional %48 %50 %49
         %50 = OpLabel
               OpReturn
         %49 = OpLabel
               OpStore %odd_index %int_0
               OpBranch %52
         %52 = OpLabel
               OpLoopMerge %53 %54 None
               OpBranch %55
         %55 = OpLabel
         %56 = OpLoad %int %odd_index
         %58 = OpSLessThanEqual %bool %56 %int_1
               OpSelectionMerge %59 None
               OpBranchConditional %58 %60 %61
         %60 = OpLabel
               OpBranch %59
         %61 = OpLabel
               OpBranch %53
         %59 = OpLabel
         %62 = OpAccessChain %_ptr_Private_float %x_GLF_color %uint_0
         %63 = OpLoad %float %62
         %64 = OpAccessChain %_ptr_Private_float %x_GLF_color %uint_0
         %66 = OpFAdd %float %63 %float_0_25
               OpStore %64 %66
         %67 = OpLoad %int %odd_index
         %68 = OpIAdd %int %67 %int_1
               OpStore %odd_index %68
               OpBranch %54
         %54 = OpLabel
               OpBranch %52
         %53 = OpLabel
               OpStore %even_index %int_1
               OpBranch %69
         %69 = OpLabel
               OpLoopMerge %70 %71 None
               OpBranch %72
         %72 = OpLabel
         %73 = OpLoad %int %even_index
         %74 = OpSGreaterThanEqual %bool %73 %int_0
               OpSelectionMerge %75 None
               OpBranchConditional %74 %76 %77
         %76 = OpLabel
               OpBranch %75
         %77 = OpLabel
               OpBranch %70
         %75 = OpLabel
         %78 = OpAccessChain %_ptr_Private_float %x_GLF_color %uint_0
         %79 = OpLoad %float %78
         %80 = OpAccessChain %_ptr_Private_float %x_GLF_color %uint_0
         %81 = OpFAdd %float %79 %float_0_25
               OpStore %80 %81
         %83 = OpAccessChain %_ptr_Uniform_float %x_8 %uint_0 %uint_0
         %84 = OpLoad %float %83
         %85 = OpAccessChain %_ptr_Uniform_float %x_8 %uint_0 %uint_1
         %86 = OpLoad %float %85
         %87 = OpFOrdGreaterThan %bool %84 %86
               OpSelectionMerge %88 None
               OpBranchConditional %87 %89 %88
         %89 = OpLabel
               OpBranch %71
         %88 = OpLabel
         %90 = OpLoad %int %even_index
         %91 = OpSGreaterThanEqual %bool %90 %int_1
               OpSelectionMerge %92 None
               OpBranchConditional %91 %93 %92
         %93 = OpLabel
               OpKill
         %92 = OpLabel
               OpStore %j %int_1
               OpBranch %94
         %94 = OpLabel
               OpLoopMerge %95 %96 None
               OpBranch %97
         %97 = OpLabel
               OpSelectionMerge %99 None
               OpBranchConditional %true %100 %101
        %100 = OpLabel
               OpBranch %99
        %101 = OpLabel
               OpBranch %95
         %99 = OpLabel
        %102 = OpLoad %int %ll
        %104 = OpSGreaterThanEqual %bool %102 %int_3
               OpSelectionMerge %105 None
               OpBranchConditional %104 %106 %105
        %106 = OpLabel
               OpBranch %95
        %105 = OpLabel
        %107 = OpLoad %int %ll
        %108 = OpIAdd %int %107 %int_1
               OpStore %ll %108
        %109 = OpLoad %int %j
        %110 = OpBitcast %uint %109
        %111 = OpULessThan %bool %110 %uint_1
               OpSelectionMerge %112 None
               OpBranchConditional %111 %113 %112
        %113 = OpLabel
               OpBranch %96
        %112 = OpLabel
        %114 = OpAccessChain %_ptr_Uniform_float %x_8 %uint_0 %uint_0
        %115 = OpLoad %float %114
        %116 = OpAccessChain %_ptr_Uniform_float %x_8 %uint_0 %uint_1
        %117 = OpLoad %float %116
        %118 = OpFOrdGreaterThan %bool %115 %117
               OpSelectionMerge %119 None
               OpBranchConditional %118 %120 %119
        %120 = OpLabel
               OpBranch %95
        %119 = OpLabel
               OpBranch %96
         %96 = OpLabel
        %121 = OpLoad %int %j
        %122 = OpIAdd %int %121 %int_1
               OpStore %j %122
               OpBranch %94
         %95 = OpLabel
        %123 = OpAccessChain %_ptr_Uniform_float %x_8 %uint_0 %uint_0
        %124 = OpLoad %float %123
        %125 = OpAccessChain %_ptr_Uniform_float %x_8 %uint_0 %uint_1
        %126 = OpLoad %float %125
        %127 = OpFOrdGreaterThan %bool %124 %126
               OpSelectionMerge %128 None
               OpBranchConditional %127 %129 %128
        %129 = OpLabel
               OpStore %x_GLF_color %130
               OpBranch %128
        %128 = OpLabel
        %131 = OpLoad %int %even_index
        %132 = OpISub %int %131 %int_1
               OpStore %even_index %132
               OpBranch %71
         %71 = OpLabel
               OpBranch %69
         %70 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %133
%gl_FragCoord_param = OpFunctionParameter %v4float
        %137 = OpLabel
               OpStore %gl_FragCoord %gl_FragCoord_param
        %138 = OpFunctionCall %void %main_1
        %139 = OpLoad %v4float %x_GLF_color
        %140 = OpCompositeConstruct %main_out %139
               OpReturnValue %140
               OpFunctionEnd
       %main = OpFunction %void None %15
        %142 = OpLabel
        %144 = OpLoad %v4float %gl_FragCoord_param_1
        %143 = OpFunctionCall %main_out %main_inner %144
        %145 = OpCompositeExtract %v4float %143 0
               OpStore %x_GLF_color_1_1 %145
               OpReturn
               OpFunctionEnd
