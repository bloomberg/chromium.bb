#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[3];
};
struct buf1 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_int_values;
};
struct tint_padded_array_element_1 {
  /* 0x0000 */ float el;
  /* 0x0004 */ int8_t tint_pad_1[12];
};
struct tint_array_wrapper_1 {
  /* 0x0000 */ tint_padded_array_element_1 arr[1];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper_1 x_GLF_uniform_float_values;
};
struct tint_array_wrapper_2 {
  int arr[2];
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf1& x_7, constant buf0& x_11, thread float4* const tint_symbol_3, thread float4* const tint_symbol_4) {
  int i = 0;
  tint_array_wrapper_2 arr = {};
  int a = 0;
  int const x_40 = x_7.x_GLF_uniform_int_values.arr[0].el;
  i = x_40;
  while (true) {
    int const x_45 = i;
    int const x_47 = x_7.x_GLF_uniform_int_values.arr[2].el;
    if ((x_45 < x_47)) {
    } else {
      break;
    }
    int const x_50 = i;
    int const x_52 = x_7.x_GLF_uniform_int_values.arr[0].el;
    arr.arr[x_50] = x_52;
    {
      int const x_54 = i;
      i = as_type<int>((as_type<uint>(x_54) + as_type<uint>(1)));
    }
  }
  a = -1;
  float const x_57 = (*(tint_symbol_3)).y;
  float const x_59 = x_11.x_GLF_uniform_float_values.arr[0].el;
  if (!((x_57 < x_59))) {
    int const x_64 = a;
    int const x_65 = as_type<int>((as_type<uint>(x_64) + as_type<uint>(1)));
    a = x_65;
    int const x_67 = x_7.x_GLF_uniform_int_values.arr[1].el;
    arr.arr[x_65] = x_67;
  }
  int const x_69 = a;
  int const x_70 = as_type<int>((as_type<uint>(x_69) + as_type<uint>(1)));
  a = x_70;
  int const x_72 = x_7.x_GLF_uniform_int_values.arr[2].el;
  arr.arr[x_70] = x_72;
  int const x_75 = x_7.x_GLF_uniform_int_values.arr[0].el;
  int const x_77 = arr.arr[x_75];
  int const x_79 = x_7.x_GLF_uniform_int_values.arr[1].el;
  if ((x_77 == x_79)) {
    int const x_84 = a;
    int const x_87 = x_7.x_GLF_uniform_int_values.arr[0].el;
    int const x_90 = x_7.x_GLF_uniform_int_values.arr[0].el;
    int const x_92 = a;
    *(tint_symbol_4) = float4(float(x_84), float(x_87), float(x_90), float(x_92));
  } else {
    int const x_96 = x_7.x_GLF_uniform_int_values.arr[0].el;
    float const x_97 = float(x_96);
    *(tint_symbol_4) = float4(x_97, x_97, x_97, x_97);
  }
  return;
}

main_out tint_symbol_inner(constant buf1& x_7, constant buf0& x_11, float4 gl_FragCoord_param, thread float4* const tint_symbol_5, thread float4* const tint_symbol_6) {
  *(tint_symbol_5) = gl_FragCoord_param;
  main_1(x_7, x_11, tint_symbol_5, tint_symbol_6);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_6)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(float4 gl_FragCoord_param [[position]], constant buf1& x_7 [[buffer(0)]], constant buf0& x_11 [[buffer(1)]]) {
  thread float4 tint_symbol_7 = 0.0f;
  thread float4 tint_symbol_8 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_7, x_11, gl_FragCoord_param, &(tint_symbol_7), &(tint_symbol_8));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

