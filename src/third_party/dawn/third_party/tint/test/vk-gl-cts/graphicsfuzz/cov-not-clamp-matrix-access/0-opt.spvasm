               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %_GLF_color
               OpExecutionMode %main OriginUpperLeft
               OpSource ESSL 310
               OpName %main "main"
               OpName %M1 "M1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "_GLF_uniform_float_values"
               OpName %_ ""
               OpName %a "a"
               OpName %c "c"
               OpName %buf1 "buf1"
               OpMemberName %buf1 0 "_GLF_uniform_int_values"
               OpName %__0 ""
               OpName %_GLF_color "_GLF_color"
               OpDecorate %_arr_float_uint_5 ArrayStride 16
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %buf0 Block
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %_arr_int_uint_3 ArrayStride 16
               OpMemberDecorate %buf1 0 Offset 0
               OpDecorate %buf1 Block
               OpDecorate %__0 DescriptorSet 0
               OpDecorate %__0 Binding 1
               OpDecorate %_GLF_color Location 0
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat2v2float = OpTypeMatrix %v2float 2
%_ptr_Function_mat2v2float = OpTypePointer Function %mat2v2float
       %uint = OpTypeInt 32 0
     %uint_5 = OpConstant %uint 5
%_arr_float_uint_5 = OpTypeArray %float %uint_5
       %buf0 = OpTypeStruct %_arr_float_uint_5
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
          %_ = OpVariable %_ptr_Uniform_buf0 Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
      %int_1 = OpConstant %int 1
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
      %int_4 = OpConstant %int 4
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
%_ptr_Function_float = OpTypePointer Function %float
%_ptr_Function_int = OpTypePointer Function %int
     %uint_3 = OpConstant %uint 3
%_arr_int_uint_3 = OpTypeArray %int %uint_3
       %buf1 = OpTypeStruct %_arr_int_uint_3
%_ptr_Uniform_buf1 = OpTypePointer Uniform %buf1
        %__0 = OpVariable %_ptr_Uniform_buf1 Uniform
%_ptr_Uniform_int = OpTypePointer Uniform %int
       %bool = OpTypeBool
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
 %_GLF_color = OpVariable %_ptr_Output_v4float Output
       %main = OpFunction %void None %14
         %39 = OpLabel
         %M1 = OpVariable %_ptr_Function_mat2v2float Function
          %a = OpVariable %_ptr_Function_float Function
          %c = OpVariable %_ptr_Function_int Function
         %40 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_1
         %41 = OpLoad %float %40
         %42 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_2
         %43 = OpLoad %float %42
         %44 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_3
         %45 = OpLoad %float %44
         %46 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_4
         %47 = OpLoad %float %46
         %48 = OpCompositeConstruct %v2float %41 %43
         %49 = OpCompositeConstruct %v2float %45 %47
         %50 = OpCompositeConstruct %mat2v2float %48 %49
               OpStore %M1 %50
         %51 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_1
         %52 = OpLoad %float %51
               OpStore %a %52
         %53 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_1
         %54 = OpLoad %int %53
               OpStore %c %54
               OpBranch %55
         %55 = OpLabel
               OpLoopMerge %56 %57 None
               OpBranch %58
         %58 = OpLabel
         %59 = OpLoad %int %c
         %60 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_0
         %61 = OpLoad %int %60
         %62 = OpSLessThan %bool %59 %61
               OpBranchConditional %62 %63 %56
         %63 = OpLabel
         %64 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_2
         %65 = OpLoad %int %64
         %66 = OpLoad %int %c
         %67 = OpNot %int %66
         %68 = OpExtInst %int %1 SClamp %67 %int_0 %int_1
         %69 = OpAccessChain %_ptr_Function_float %M1 %65 %68
         %70 = OpLoad %float %69
         %71 = OpLoad %float %a
         %72 = OpFAdd %float %71 %70
               OpStore %a %72
               OpBranch %57
         %57 = OpLabel
         %73 = OpLoad %int %c
         %74 = OpIAdd %int %73 %int_1
               OpStore %c %74
               OpBranch %55
         %56 = OpLabel
         %75 = OpLoad %float %a
         %76 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_0
         %77 = OpLoad %float %76
         %78 = OpFOrdEqual %bool %75 %77
               OpSelectionMerge %79 None
               OpBranchConditional %78 %80 %81
         %80 = OpLabel
         %82 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_2
         %83 = OpLoad %int %82
         %84 = OpConvertSToF %float %83
         %85 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_1
         %86 = OpLoad %int %85
         %87 = OpConvertSToF %float %86
         %88 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_1
         %89 = OpLoad %int %88
         %90 = OpConvertSToF %float %89
         %91 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_2
         %92 = OpLoad %int %91
         %93 = OpConvertSToF %float %92
         %94 = OpCompositeConstruct %v4float %84 %87 %90 %93
               OpStore %_GLF_color %94
               OpBranch %79
         %81 = OpLabel
         %95 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_2
         %96 = OpLoad %int %95
         %97 = OpConvertSToF %float %96
         %98 = OpCompositeConstruct %v4float %97 %97 %97 %97
               OpStore %_GLF_color %98
               OpBranch %79
         %79 = OpLabel
               OpReturn
               OpFunctionEnd
