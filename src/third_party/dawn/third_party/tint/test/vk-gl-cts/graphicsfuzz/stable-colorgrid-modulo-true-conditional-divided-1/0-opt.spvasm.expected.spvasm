; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 185
; Schema: 0
               OpCapability Shader
         %64 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %gl_FragCoord_param_1 %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %gl_FragCoord_param_1 "gl_FragCoord_param_1"
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "resolution"
               OpName %x_10 "x_10"
               OpName %gl_FragCoord "gl_FragCoord"
               OpName %x_GLF_color "x_GLF_color"
               OpName %compute_value_f1_f1_ "compute_value_f1_f1_"
               OpName %limit "limit"
               OpName %thirty_two "thirty_two"
               OpName %x_91 "x_91"
               OpName %x_91_phi "x_91_phi"
               OpName %x_94_phi "x_94_phi"
               OpName %x_104 "x_104"
               OpName %x_113 "x_113"
               OpName %x_95 "x_95"
               OpName %x_92_phi "x_92_phi"
               OpName %x_112 "x_112"
               OpName %x_113_phi "x_113_phi"
               OpName %x_92 "x_92"
               OpName %main_1 "main_1"
               OpName %c "c"
               OpName %param "param"
               OpName %param_1 "param_1"
               OpName %param_2 "param_2"
               OpName %param_3 "param_3"
               OpName %x_68_phi "x_68_phi"
               OpName %x_69 "x_69"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %gl_FragCoord_param "gl_FragCoord_param"
               OpName %main "main"
               OpDecorate %gl_FragCoord_param_1 BuiltIn FragCoord
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_10 NonWritable
               OpDecorate %x_10 DescriptorSet 0
               OpDecorate %x_10 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Input_v4float = OpTypePointer Input %v4float
%gl_FragCoord_param_1 = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %7 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %7
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
       %x_10 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%gl_FragCoord = OpVariable %_ptr_Private_v4float Private %7
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %7
%_ptr_Function_float = OpTypePointer Function %float
         %15 = OpTypeFunction %float %_ptr_Function_float %_ptr_Function_float
         %22 = OpConstantNull %float
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %27 = OpConstantNull %int
 %float_n0_5 = OpConstant %float -0.5
      %int_1 = OpConstant %int 1
    %int_800 = OpConstant %int 800
       %bool = OpTypeBool
     %int_32 = OpConstant %int 32
      %int_0 = OpConstant %int 0
%float_0_400000006 = OpConstant %float 0.400000006
%float_0_00999999978 = OpConstant %float 0.00999999978
  %float_100 = OpConstant %float 100
       %void = OpTypeVoid
         %94 = OpTypeFunction %void
    %v3float = OpTypeVector %float 3
%_ptr_Function_v3float = OpTypePointer Function %v3float
        %101 = OpConstantNull %v3float
    %float_7 = OpConstant %float 7
    %float_8 = OpConstant %float 8
    %float_9 = OpConstant %float 9
        %110 = OpConstantComposite %v3float %float_7 %float_8 %float_9
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
%float_0_125 = OpConstant %float 0.125
%_ptr_Private_float = OpTypePointer Private %float
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
      %int_3 = OpConstant %int 3
    %float_1 = OpConstant %float 1
   %main_out = OpTypeStruct %v4float
        %172 = OpTypeFunction %main_out %v4float
%compute_value_f1_f1_ = OpFunction %float None %15
      %limit = OpFunctionParameter %_ptr_Function_float
 %thirty_two = OpFunctionParameter %_ptr_Function_float
         %20 = OpLabel
       %x_91 = OpVariable %_ptr_Function_float Function %22
   %x_91_phi = OpVariable %_ptr_Function_float Function %22
   %x_94_phi = OpVariable %_ptr_Function_int Function %27
      %x_104 = OpVariable %_ptr_Function_float Function %22
      %x_113 = OpVariable %_ptr_Function_float Function %22
       %x_95 = OpVariable %_ptr_Function_int Function %27
   %x_92_phi = OpVariable %_ptr_Function_float Function %22
      %x_112 = OpVariable %_ptr_Function_float Function %22
  %x_113_phi = OpVariable %_ptr_Function_float Function %22
       %x_92 = OpVariable %_ptr_Function_float Function %22
               OpStore %x_91_phi %float_n0_5
               OpStore %x_94_phi %int_1
               OpBranch %30
         %30 = OpLabel
               OpLoopMerge %31 %32 None
               OpBranch %33
         %33 = OpLabel
         %38 = OpLoad %float %x_91_phi
               OpStore %x_91 %38
         %39 = OpLoad %int %x_94_phi
         %41 = OpSLessThan %bool %39 %int_800
               OpSelectionMerge %43 None
               OpBranchConditional %41 %44 %45
         %44 = OpLabel
               OpBranch %43
         %45 = OpLabel
               OpBranch %31
         %43 = OpLabel
         %49 = OpSMod %int %39 %int_32
         %51 = OpIEqual %bool %49 %int_0
               OpSelectionMerge %52 None
               OpBranchConditional %51 %53 %54
         %53 = OpLabel
         %55 = OpLoad %float %x_91
         %57 = OpFAdd %float %55 %float_0_400000006
               OpStore %x_104 %57
         %58 = OpLoad %float %x_104
               OpStore %x_92_phi %58
               OpBranch %52
         %54 = OpLabel
         %60 = OpLoad %float %thirty_two
         %61 = OpLoad %float %x_91
               OpStore %x_113_phi %61
         %62 = OpConvertSToF %float %39
         %63 = OpExtInst %float %64 RoundEven %60
         %66 = OpConvertSToF %float %39
         %67 = OpExtInst %float %64 RoundEven %60
         %68 = OpFDiv %float %66 %67
         %65 = OpExtInst %float %64 Floor %68
         %69 = OpFMul %float %63 %65
         %70 = OpFSub %float %62 %69
         %72 = OpFOrdLessThanEqual %bool %70 %float_0_00999999978
               OpSelectionMerge %73 None
               OpBranchConditional %72 %74 %73
         %74 = OpLabel
         %75 = OpLoad %float %x_91
         %77 = OpFAdd %float %75 %float_100
               OpStore %x_112 %77
         %78 = OpLoad %float %x_112
               OpStore %x_113_phi %78
               OpBranch %73
         %73 = OpLabel
         %79 = OpLoad %float %x_113_phi
               OpStore %x_113 %79
         %80 = OpLoad %float %x_113
               OpStore %x_92_phi %80
               OpBranch %52
         %52 = OpLabel
         %82 = OpLoad %float %x_92_phi
               OpStore %x_92 %82
         %84 = OpLoad %float %limit
         %85 = OpConvertSToF %float %39
         %86 = OpFOrdGreaterThanEqual %bool %85 %84
               OpSelectionMerge %87 None
               OpBranchConditional %86 %88 %87
         %88 = OpLabel
         %89 = OpLoad %float %x_92
               OpReturnValue %89
         %87 = OpLabel
               OpBranch %32
         %32 = OpLabel
         %90 = OpIAdd %int %39 %int_1
               OpStore %x_95 %90
         %91 = OpLoad %float %x_92
               OpStore %x_91_phi %91
         %92 = OpLoad %int %x_95
               OpStore %x_94_phi %92
               OpBranch %30
         %31 = OpLabel
         %93 = OpLoad %float %x_91
               OpReturnValue %93
               OpFunctionEnd
     %main_1 = OpFunction %void None %94
         %97 = OpLabel
          %c = OpVariable %_ptr_Function_v3float Function %101
      %param = OpVariable %_ptr_Function_float Function %22
    %param_1 = OpVariable %_ptr_Function_float Function %22
    %param_2 = OpVariable %_ptr_Function_float Function %22
    %param_3 = OpVariable %_ptr_Function_float Function %22
   %x_68_phi = OpVariable %_ptr_Function_int Function %27
       %x_69 = OpVariable %_ptr_Function_int Function %27
               OpStore %c %110
        %114 = OpAccessChain %_ptr_Uniform_float %x_10 %uint_0 %uint_0
        %115 = OpLoad %float %114
        %118 = OpFMul %float %115 %float_0_125
        %116 = OpExtInst %float %64 RoundEven %118
        %120 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_0
        %121 = OpLoad %float %120
               OpStore %param %121
               OpStore %param_1 %116
        %122 = OpFunctionCall %float %compute_value_f1_f1_ %param %param_1
        %125 = OpAccessChain %_ptr_Function_float %c %uint_0
               OpStore %125 %122
        %127 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %128 = OpLoad %float %127
               OpStore %param_2 %128
               OpStore %param_3 %116
        %129 = OpFunctionCall %float %compute_value_f1_f1_ %param_2 %param_3
        %132 = OpAccessChain %_ptr_Function_float %c %uint_1
               OpStore %132 %129
        %133 = OpAccessChain %_ptr_Function_float %c %uint_0
        %134 = OpLoad %float %133
        %135 = OpAccessChain %_ptr_Function_float %c %uint_1
        %136 = OpLoad %float %135
        %138 = OpAccessChain %_ptr_Function_float %c %uint_2
        %139 = OpFAdd %float %134 %136
               OpStore %138 %139
               OpStore %x_68_phi %int_0
               OpBranch %140
        %140 = OpLabel
               OpLoopMerge %141 %142 None
               OpBranch %143
        %143 = OpLabel
        %145 = OpLoad %int %x_68_phi
        %147 = OpSLessThan %bool %145 %int_3
               OpSelectionMerge %148 None
               OpBranchConditional %147 %149 %150
        %149 = OpLabel
               OpBranch %148
        %150 = OpLabel
               OpBranch %141
        %148 = OpLabel
        %151 = OpAccessChain %_ptr_Function_float %c %145
        %152 = OpLoad %float %151
        %154 = OpFOrdGreaterThanEqual %bool %152 %float_1
               OpSelectionMerge %155 None
               OpBranchConditional %154 %156 %155
        %156 = OpLabel
        %157 = OpAccessChain %_ptr_Function_float %c %145
        %158 = OpLoad %float %157
        %159 = OpAccessChain %_ptr_Function_float %c %145
        %160 = OpLoad %float %159
        %161 = OpAccessChain %_ptr_Function_float %c %145
        %162 = OpFMul %float %158 %160
               OpStore %161 %162
               OpBranch %155
        %155 = OpLabel
               OpBranch %142
        %142 = OpLabel
        %163 = OpIAdd %int %145 %int_1
               OpStore %x_69 %163
        %164 = OpLoad %int %x_69
               OpStore %x_68_phi %164
               OpBranch %140
        %141 = OpLabel
        %165 = OpLoad %v3float %c
        %167 = OpExtInst %v3float %64 FAbs %165
        %166 = OpExtInst %v3float %64 Normalize %167
        %168 = OpCompositeExtract %float %166 0
        %169 = OpCompositeExtract %float %166 1
        %170 = OpCompositeExtract %float %166 2
        %171 = OpCompositeConstruct %v4float %168 %169 %170 %float_1
               OpStore %x_GLF_color %171
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %172
%gl_FragCoord_param = OpFunctionParameter %v4float
        %176 = OpLabel
               OpStore %gl_FragCoord %gl_FragCoord_param
        %177 = OpFunctionCall %void %main_1
        %178 = OpLoad %v4float %x_GLF_color
        %179 = OpCompositeConstruct %main_out %178
               OpReturnValue %179
               OpFunctionEnd
       %main = OpFunction %void None %94
        %181 = OpLabel
        %183 = OpLoad %v4float %gl_FragCoord_param_1
        %182 = OpFunctionCall %main_out %main_inner %183
        %184 = OpCompositeExtract %v4float %182 0
               OpStore %x_GLF_color_1_1 %184
               OpReturn
               OpFunctionEnd
