#include <metal_stdlib>

using namespace metal;
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(thread float4* const tint_symbol_3) {
  float2x2 m = float2x2(0.0f);
  m = float2x2(float2(1.0f, 2.0f), float2(3.0f, 4.0f));
  float2x2 const x_26 = m;
  float2x2 const x_28 = m;
  float2x2 const x_30 = (transpose(x_26) * transpose(x_28));
  float2x2 const x_31 = m;
  float2x2 const x_32 = m;
  float2x2 const x_34 = transpose((x_31 * x_32));
  if ((all((x_30[0u] == x_34[0u])) & all((x_30[1u] == x_34[1u])))) {
    *(tint_symbol_3) = float4(1.0f, 0.0f, 0.0f, 1.0f);
  } else {
    *(tint_symbol_3) = float4(0.0f, 0.0f, 0.0f, 0.0f);
  }
  return;
}

main_out tint_symbol_inner(thread float4* const tint_symbol_4) {
  main_1(tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol() {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(&(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

