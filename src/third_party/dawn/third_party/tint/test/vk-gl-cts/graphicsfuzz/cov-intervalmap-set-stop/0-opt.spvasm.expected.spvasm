; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 137
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %x_GLF_color "x_GLF_color"
               OpName %func_ "func_"
               OpName %v "v"
               OpName %i "i"
               OpName %k "k"
               OpName %main_1 "main_1"
               OpName %j "j"
               OpName %data "data"
               OpName %j_1 "j_1"
               OpName %x_80 "x_80"
               OpName %x_81_phi "x_81_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %_arr_v3float_uint_2 ArrayStride 16
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
    %v3float = OpTypeVector %float 3
          %8 = OpTypeFunction %v3float
    %v2float = OpTypeVector %float 2
%_ptr_Function_v2float = OpTypePointer Function %v2float
         %15 = OpConstantNull %v2float
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %19 = OpConstantNull %int
    %float_1 = OpConstant %float 1
         %22 = OpConstantComposite %v2float %float_1 %float_1
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
       %bool = OpTypeBool
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_ptr_Function_float = OpTypePointer Function %float
    %float_4 = OpConstant %float 4
      %int_1 = OpConstant %int 1
     %int_10 = OpConstant %int 10
    %float_0 = OpConstant %float 0
         %58 = OpConstantComposite %v3float %float_1 %float_0 %float_0
         %59 = OpConstantComposite %v3float %float_0 %float_0 %float_1
         %60 = OpConstantComposite %v3float %float_0 %float_0 %float_0
       %void = OpTypeVoid
         %61 = OpTypeFunction %void
     %uint_2 = OpConstant %uint 2
%_arr_v3float_uint_2 = OpTypeArray %v3float %uint_2
%_ptr_Function__arr_v3float_uint_2 = OpTypePointer Function %_arr_v3float_uint_2
         %70 = OpConstantNull %_arr_v3float_uint_2
%_ptr_Function_bool = OpTypePointer Function %bool
         %74 = OpConstantNull %bool
%_ptr_Function_v3float = OpTypePointer Function %v3float
      %int_4 = OpConstant %int 4
     %v3bool = OpTypeVector %bool 3
        %124 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
        %125 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
   %main_out = OpTypeStruct %v4float
        %126 = OpTypeFunction %main_out
      %func_ = OpFunction %v3float None %8
         %11 = OpLabel
          %v = OpVariable %_ptr_Function_v2float Function %15
          %i = OpVariable %_ptr_Function_int Function %19
          %k = OpVariable %_ptr_Function_int Function %19
               OpStore %v %22
               OpStore %i %int_0
               OpStore %k %int_0
               OpBranch %24
         %24 = OpLabel
               OpLoopMerge %25 %26 None
               OpBranch %27
         %27 = OpLabel
         %28 = OpLoad %int %k
         %30 = OpSLessThan %bool %28 %int_2
               OpSelectionMerge %32 None
               OpBranchConditional %30 %33 %34
         %33 = OpLabel
               OpBranch %32
         %34 = OpLabel
               OpBranch %25
         %32 = OpLabel
         %38 = OpAccessChain %_ptr_Function_float %v %uint_1
         %39 = OpLoad %float %38
         %40 = OpFAdd %float %39 %float_1
         %42 = OpFOrdGreaterThan %bool %40 %float_4
               OpSelectionMerge %43 None
               OpBranchConditional %42 %44 %43
         %44 = OpLabel
               OpBranch %25
         %43 = OpLabel
         %45 = OpAccessChain %_ptr_Function_float %v %uint_1
               OpStore %45 %float_1
         %46 = OpLoad %int %i
         %48 = OpIAdd %int %46 %int_1
               OpStore %i %48
               OpBranch %26
         %26 = OpLabel
         %49 = OpLoad %int %k
         %50 = OpIAdd %int %49 %int_1
               OpStore %k %50
               OpBranch %24
         %25 = OpLabel
         %51 = OpLoad %int %i
         %53 = OpSLessThan %bool %51 %int_10
               OpSelectionMerge %54 None
               OpBranchConditional %53 %55 %56
         %55 = OpLabel
               OpReturnValue %58
         %56 = OpLabel
               OpReturnValue %59
         %54 = OpLabel
               OpReturnValue %60
               OpFunctionEnd
     %main_1 = OpFunction %void None %61
         %64 = OpLabel
          %j = OpVariable %_ptr_Function_int Function %19
       %data = OpVariable %_ptr_Function__arr_v3float_uint_2 Function %70
        %j_1 = OpVariable %_ptr_Function_int Function %19
       %x_80 = OpVariable %_ptr_Function_bool Function %74
   %x_81_phi = OpVariable %_ptr_Function_bool Function %74
               OpStore %j %int_0
               OpBranch %76
         %76 = OpLabel
               OpLoopMerge %77 %78 None
               OpBranch %79
         %79 = OpLabel
         %80 = OpLoad %int %j
         %81 = OpSLessThan %bool %80 %int_1
               OpSelectionMerge %82 None
               OpBranchConditional %81 %83 %84
         %83 = OpLabel
               OpBranch %82
         %84 = OpLabel
               OpBranch %77
         %82 = OpLabel
         %85 = OpLoad %int %j
         %86 = OpFunctionCall %v3float %func_
         %88 = OpAccessChain %_ptr_Function_v3float %data %85
               OpStore %88 %86
               OpBranch %78
         %78 = OpLabel
         %89 = OpLoad %int %j
         %90 = OpIAdd %int %89 %int_1
               OpStore %j %90
               OpBranch %76
         %77 = OpLabel
               OpStore %j_1 %int_0
               OpBranch %91
         %91 = OpLabel
               OpLoopMerge %92 %93 None
               OpBranch %94
         %94 = OpLabel
         %95 = OpLoad %int %j_1
         %96 = OpSLessThan %bool %95 %int_1
               OpSelectionMerge %97 None
               OpBranchConditional %96 %98 %99
         %98 = OpLabel
               OpBranch %97
         %99 = OpLabel
               OpBranch %92
         %97 = OpLabel
        %100 = OpLoad %int %j_1
        %101 = OpFunctionCall %v3float %func_
        %103 = OpIMul %int %int_4 %100
        %104 = OpIAdd %int %103 %int_1
        %105 = OpAccessChain %_ptr_Function_v3float %data %104
               OpStore %105 %101
               OpBranch %93
         %93 = OpLabel
        %106 = OpLoad %int %j_1
        %107 = OpIAdd %int %106 %int_1
               OpStore %j_1 %107
               OpBranch %91
         %92 = OpLabel
        %108 = OpAccessChain %_ptr_Function_v3float %data %int_0
        %109 = OpLoad %v3float %108
        %111 = OpFOrdEqual %v3bool %109 %58
        %110 = OpAll %bool %111
               OpStore %x_81_phi %110
               OpSelectionMerge %113 None
               OpBranchConditional %110 %114 %113
        %114 = OpLabel
        %115 = OpAccessChain %_ptr_Function_v3float %data %int_1
        %116 = OpLoad %v3float %115
        %118 = OpFOrdEqual %v3bool %116 %58
        %117 = OpAll %bool %118
               OpStore %x_80 %117
        %119 = OpLoad %bool %x_80
               OpStore %x_81_phi %119
               OpBranch %113
        %113 = OpLabel
        %120 = OpLoad %bool %x_81_phi
               OpSelectionMerge %121 None
               OpBranchConditional %120 %122 %123
        %122 = OpLabel
               OpStore %x_GLF_color %124
               OpBranch %121
        %123 = OpLabel
               OpStore %x_GLF_color %125
               OpBranch %121
        %121 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %126
        %129 = OpLabel
        %130 = OpFunctionCall %void %main_1
        %131 = OpLoad %v4float %x_GLF_color
        %132 = OpCompositeConstruct %main_out %131
               OpReturnValue %132
               OpFunctionEnd
       %main = OpFunction %void None %61
        %134 = OpLabel
        %135 = OpFunctionCall %main_out %main_inner
        %136 = OpCompositeExtract %v4float %135 0
               OpStore %x_GLF_color_1_1 %136
               OpReturn
               OpFunctionEnd
