; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 200
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "one"
               OpName %x_7 "x_7"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %a "a"
               OpName %i0 "i0"
               OpName %i1 "i1"
               OpName %i2 "i2"
               OpName %i3 "i3"
               OpName %i4 "i4"
               OpName %i5 "i5"
               OpName %i6 "i6"
               OpName %i7 "i7"
               OpName %i8_1 "i8_1"
               OpName %i9 "i9"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_7 NonWritable
               OpDecorate %x_7 DescriptorSet 0
               OpDecorate %x_7 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
        %int = OpTypeInt 32 1
       %buf0 = OpTypeStruct %int
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_7 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
%_ptr_Function_int = OpTypePointer Function %int
         %18 = OpConstantNull %int
      %int_0 = OpConstant %int 0
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_int = OpTypePointer Uniform %int
       %bool = OpTypeBool
      %int_2 = OpConstant %int 2
      %int_1 = OpConstant %int 1
      %int_3 = OpConstant %int 3
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
        %187 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
        %188 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
   %main_out = OpTypeStruct %v4float
        %189 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %12
         %15 = OpLabel
          %a = OpVariable %_ptr_Function_int Function %18
         %i0 = OpVariable %_ptr_Function_int Function %18
         %i1 = OpVariable %_ptr_Function_int Function %18
         %i2 = OpVariable %_ptr_Function_int Function %18
         %i3 = OpVariable %_ptr_Function_int Function %18
         %i4 = OpVariable %_ptr_Function_int Function %18
         %i5 = OpVariable %_ptr_Function_int Function %18
         %i6 = OpVariable %_ptr_Function_int Function %18
         %i7 = OpVariable %_ptr_Function_int Function %18
       %i8_1 = OpVariable %_ptr_Function_int Function %18
         %i9 = OpVariable %_ptr_Function_int Function %18
               OpStore %a %int_0
               OpStore %i0 %int_0
               OpBranch %30
         %30 = OpLabel
               OpLoopMerge %31 %32 None
               OpBranch %33
         %33 = OpLabel
         %34 = OpLoad %int %i0
         %38 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
         %39 = OpLoad %int %38
         %40 = OpSLessThan %bool %34 %39
               OpSelectionMerge %42 None
               OpBranchConditional %40 %43 %44
         %43 = OpLabel
               OpBranch %42
         %44 = OpLabel
               OpBranch %31
         %42 = OpLabel
               OpStore %i1 %int_0
               OpBranch %45
         %45 = OpLabel
               OpLoopMerge %46 %47 None
               OpBranch %48
         %48 = OpLabel
         %49 = OpLoad %int %i1
         %50 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
         %51 = OpLoad %int %50
         %52 = OpSLessThan %bool %49 %51
               OpSelectionMerge %53 None
               OpBranchConditional %52 %54 %55
         %54 = OpLabel
               OpBranch %53
         %55 = OpLabel
               OpBranch %46
         %53 = OpLabel
               OpStore %i2 %int_0
               OpBranch %56
         %56 = OpLabel
               OpLoopMerge %57 %58 None
               OpBranch %59
         %59 = OpLabel
         %60 = OpLoad %int %i2
         %61 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
         %62 = OpLoad %int %61
         %63 = OpSLessThan %bool %60 %62
               OpSelectionMerge %64 None
               OpBranchConditional %63 %65 %66
         %65 = OpLabel
               OpBranch %64
         %66 = OpLabel
               OpBranch %57
         %64 = OpLabel
               OpStore %i3 %int_0
               OpBranch %67
         %67 = OpLabel
               OpLoopMerge %68 %69 None
               OpBranch %70
         %70 = OpLabel
         %71 = OpLoad %int %i3
         %72 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
         %73 = OpLoad %int %72
         %75 = OpIAdd %int %73 %int_2
         %76 = OpSLessThan %bool %71 %75
               OpSelectionMerge %77 None
               OpBranchConditional %76 %78 %79
         %78 = OpLabel
               OpBranch %77
         %79 = OpLabel
               OpBranch %68
         %77 = OpLabel
               OpStore %i4 %int_0
               OpBranch %80
         %80 = OpLabel
               OpLoopMerge %81 %82 None
               OpBranch %83
         %83 = OpLabel
         %84 = OpLoad %int %i4
         %85 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
         %86 = OpLoad %int %85
         %87 = OpSLessThan %bool %84 %86
               OpSelectionMerge %88 None
               OpBranchConditional %87 %89 %90
         %89 = OpLabel
               OpBranch %88
         %90 = OpLabel
               OpBranch %81
         %88 = OpLabel
               OpStore %i5 %int_0
               OpBranch %91
         %91 = OpLabel
               OpLoopMerge %92 %93 None
               OpBranch %94
         %94 = OpLabel
         %95 = OpLoad %int %i5
         %96 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
         %97 = OpLoad %int %96
         %98 = OpSLessThan %bool %95 %97
               OpSelectionMerge %99 None
               OpBranchConditional %98 %100 %101
        %100 = OpLabel
               OpBranch %99
        %101 = OpLabel
               OpBranch %92
         %99 = OpLabel
               OpBranch %102
        %102 = OpLabel
               OpLoopMerge %103 %104 None
               OpBranch %105
        %105 = OpLabel
        %106 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
        %107 = OpLoad %int %106
        %108 = OpSGreaterThan %bool %107 %int_0
               OpSelectionMerge %109 None
               OpBranchConditional %108 %110 %111
        %110 = OpLabel
               OpBranch %109
        %111 = OpLabel
               OpBranch %103
        %109 = OpLabel
               OpStore %i6 %int_0
               OpBranch %112
        %112 = OpLabel
               OpLoopMerge %113 %114 None
               OpBranch %115
        %115 = OpLabel
        %116 = OpLoad %int %i6
        %117 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
        %118 = OpLoad %int %117
        %119 = OpSLessThan %bool %116 %118
               OpSelectionMerge %120 None
               OpBranchConditional %119 %121 %122
        %121 = OpLabel
               OpBranch %120
        %122 = OpLabel
               OpBranch %113
        %120 = OpLabel
               OpStore %i7 %int_0
               OpBranch %123
        %123 = OpLabel
               OpLoopMerge %124 %125 None
               OpBranch %126
        %126 = OpLabel
        %127 = OpLoad %int %i7
        %128 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
        %129 = OpLoad %int %128
        %130 = OpSLessThan %bool %127 %129
               OpSelectionMerge %131 None
               OpBranchConditional %130 %132 %133
        %132 = OpLabel
               OpBranch %131
        %133 = OpLabel
               OpBranch %124
        %131 = OpLabel
               OpStore %i8_1 %int_0
               OpBranch %134
        %134 = OpLabel
               OpLoopMerge %135 %136 None
               OpBranch %137
        %137 = OpLabel
        %138 = OpLoad %int %i8_1
        %139 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
        %140 = OpLoad %int %139
        %141 = OpSLessThan %bool %138 %140
               OpSelectionMerge %142 None
               OpBranchConditional %141 %143 %144
        %143 = OpLabel
               OpBranch %142
        %144 = OpLabel
               OpBranch %135
        %142 = OpLabel
               OpStore %i9 %int_0
               OpBranch %145
        %145 = OpLabel
               OpLoopMerge %146 %147 None
               OpBranch %148
        %148 = OpLabel
        %149 = OpLoad %int %i9
        %150 = OpAccessChain %_ptr_Uniform_int %x_7 %uint_0
        %151 = OpLoad %int %150
        %152 = OpSLessThan %bool %149 %151
               OpSelectionMerge %153 None
               OpBranchConditional %152 %154 %155
        %154 = OpLabel
               OpBranch %153
        %155 = OpLabel
               OpBranch %146
        %153 = OpLabel
        %156 = OpLoad %int %a
        %158 = OpIAdd %int %156 %int_1
               OpStore %a %158
               OpBranch %147
        %147 = OpLabel
        %159 = OpLoad %int %i9
        %160 = OpIAdd %int %159 %int_1
               OpStore %i9 %160
               OpBranch %145
        %146 = OpLabel
               OpBranch %136
        %136 = OpLabel
        %161 = OpLoad %int %i8_1
        %162 = OpIAdd %int %161 %int_1
               OpStore %i8_1 %162
               OpBranch %134
        %135 = OpLabel
               OpBranch %125
        %125 = OpLabel
        %163 = OpLoad %int %i7
        %164 = OpIAdd %int %163 %int_1
               OpStore %i7 %164
               OpBranch %123
        %124 = OpLabel
               OpBranch %114
        %114 = OpLabel
        %165 = OpLoad %int %i6
        %166 = OpIAdd %int %165 %int_1
               OpStore %i6 %166
               OpBranch %112
        %113 = OpLabel
               OpBranch %103
        %104 = OpLabel
               OpBranch %102
        %103 = OpLabel
               OpBranch %93
         %93 = OpLabel
        %167 = OpLoad %int %i5
        %168 = OpIAdd %int %167 %int_1
               OpStore %i5 %168
               OpBranch %91
         %92 = OpLabel
               OpBranch %82
         %82 = OpLabel
        %169 = OpLoad %int %i4
        %170 = OpIAdd %int %169 %int_1
               OpStore %i4 %170
               OpBranch %80
         %81 = OpLabel
               OpBranch %69
         %69 = OpLabel
        %171 = OpLoad %int %i3
        %172 = OpIAdd %int %171 %int_1
               OpStore %i3 %172
               OpBranch %67
         %68 = OpLabel
               OpBranch %58
         %58 = OpLabel
        %173 = OpLoad %int %i2
        %174 = OpIAdd %int %173 %int_1
               OpStore %i2 %174
               OpBranch %56
         %57 = OpLabel
               OpBranch %47
         %47 = OpLabel
        %175 = OpLoad %int %i1
        %176 = OpIAdd %int %175 %int_1
               OpStore %i1 %176
               OpBranch %45
         %46 = OpLabel
               OpBranch %32
         %32 = OpLabel
        %177 = OpLoad %int %i0
        %178 = OpIAdd %int %177 %int_1
               OpStore %i0 %178
               OpBranch %30
         %31 = OpLabel
        %179 = OpLoad %int %a
        %181 = OpIEqual %bool %179 %int_3
               OpSelectionMerge %182 None
               OpBranchConditional %181 %183 %184
        %183 = OpLabel
               OpStore %x_GLF_color %187
               OpBranch %182
        %184 = OpLabel
               OpStore %x_GLF_color %188
               OpBranch %182
        %182 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %189
        %192 = OpLabel
        %193 = OpFunctionCall %void %main_1
        %194 = OpLoad %v4float %x_GLF_color
        %195 = OpCompositeConstruct %main_out %194
               OpReturnValue %195
               OpFunctionEnd
       %main = OpFunction %void None %12
        %197 = OpLabel
        %198 = OpFunctionCall %main_out %main_inner
        %199 = OpCompositeExtract %v4float %198 0
               OpStore %x_GLF_color_1_1 %199
               OpReturn
               OpFunctionEnd
