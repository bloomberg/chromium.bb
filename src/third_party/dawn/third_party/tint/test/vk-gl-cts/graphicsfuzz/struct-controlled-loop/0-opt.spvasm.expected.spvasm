; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 79
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_7 "x_7"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %S "S"
               OpMemberName %S 0 "f0"
               OpMemberName %S 1 "f1"
               OpName %ll "ll"
               OpName %sums "sums"
               OpName %x_51_1 "x_51_1"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_7 NonWritable
               OpDecorate %x_7 DescriptorSet 0
               OpDecorate %x_7 Binding 0
               OpMemberDecorate %S 0 Offset 0
               OpMemberDecorate %S 1 Offset 16
               OpDecorate %_arr_float_uint_9 ArrayStride 4
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_7 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
        %int = OpTypeInt 32 1
       %bool = OpTypeBool
     %v3bool = OpTypeVector %bool 3
          %S = OpTypeStruct %int %v3bool
%_ptr_Function_S = OpTypePointer Function %S
         %22 = OpConstantNull %S
       %uint = OpTypeInt 32 0
     %uint_9 = OpConstant %uint 9
%_arr_float_uint_9 = OpTypeArray %float %uint_9
%_ptr_Function__arr_float_uint_9 = OpTypePointer Function %_arr_float_uint_9
         %28 = OpConstantNull %_arr_float_uint_9
      %int_0 = OpConstant %int 0
       %true = OpConstantTrue %bool
         %31 = OpConstantComposite %v3bool %true %true %true
         %32 = OpConstantComposite %S %int_0 %31
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
%_ptr_Uniform_float = OpTypePointer Uniform %float
%_ptr_Function_float = OpTypePointer Function %float
    %float_0 = OpConstant %float 0
%_ptr_Function_int = OpTypePointer Function %int
      %int_1 = OpConstant %int 1
    %float_1 = OpConstant %float 1
   %main_out = OpTypeStruct %v4float
         %68 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %12
         %15 = OpLabel
         %ll = OpVariable %_ptr_Function_S Function %22
       %sums = OpVariable %_ptr_Function__arr_float_uint_9 Function %28
     %x_51_1 = OpVariable %_ptr_Function_S Function %22
               OpStore %ll %32
               OpBranch %33
         %33 = OpLabel
               OpLoopMerge %34 %35 None
               OpBranch %36
         %36 = OpLabel
         %37 = OpLoad %S %ll
         %41 = OpAccessChain %_ptr_Uniform_float %x_7 %uint_0 %uint_1
         %42 = OpLoad %float %41
         %43 = OpCompositeExtract %int %37 0
         %44 = OpConvertFToS %int %42
         %45 = OpINotEqual %bool %43 %44
               OpSelectionMerge %46 None
               OpBranchConditional %45 %47 %48
         %47 = OpLabel
               OpBranch %46
         %48 = OpLabel
               OpBranch %34
         %46 = OpLabel
         %50 = OpAccessChain %_ptr_Function_float %sums %int_0
               OpStore %50 %float_0
               OpBranch %35
         %35 = OpLabel
         %52 = OpLoad %S %ll
         %53 = OpLoad %S %ll
               OpStore %x_51_1 %53
         %56 = OpAccessChain %_ptr_Function_int %x_51_1 %uint_0
         %57 = OpCompositeExtract %int %52 0
         %59 = OpIAdd %int %57 %int_1
               OpStore %56 %59
         %60 = OpLoad %S %x_51_1
               OpStore %ll %60
               OpBranch %33
         %34 = OpLabel
         %61 = OpAccessChain %_ptr_Function_float %sums %int_0
         %62 = OpLoad %float %61
         %63 = OpCompositeConstruct %v2float %62 %62
         %65 = OpCompositeExtract %float %63 0
         %66 = OpCompositeExtract %float %63 1
         %67 = OpCompositeConstruct %v4float %float_1 %65 %66 %float_1
               OpStore %x_GLF_color %67
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %68
         %71 = OpLabel
         %72 = OpFunctionCall %void %main_1
         %73 = OpLoad %v4float %x_GLF_color
         %74 = OpCompositeConstruct %main_out %73
               OpReturnValue %74
               OpFunctionEnd
       %main = OpFunction %void None %12
         %76 = OpLabel
         %77 = OpFunctionCall %main_out %main_inner
         %78 = OpCompositeExtract %v4float %77 0
               OpStore %x_GLF_color_1_1 %78
               OpReturn
               OpFunctionEnd
