#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[2];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_int_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_6, thread float4* const tint_symbol_3) {
  int a = 0;
  a = 1;
  while (true) {
    int const x_29 = a;
    int const x_31 = x_6.x_GLF_uniform_int_values.arr[0].el;
    if ((x_29 >= x_31)) {
      break;
    }
    if (true) {
      discard_fragment();
    }
    int const x_37 = a;
    a = as_type<int>((as_type<uint>(x_37) + as_type<uint>(1)));
    {
      int const x_39 = a;
      if ((x_39 != 1)) {
      } else {
        break;
      }
    }
  }
  int const x_41 = a;
  if ((x_41 == 1)) {
    int const x_47 = x_6.x_GLF_uniform_int_values.arr[0].el;
    int const x_50 = x_6.x_GLF_uniform_int_values.arr[0].el;
    int const x_53 = x_6.x_GLF_uniform_int_values.arr[1].el;
    *(tint_symbol_3) = float4(1.0f, float(x_47), float(x_50), float(x_53));
  } else {
    int const x_57 = x_6.x_GLF_uniform_int_values.arr[0].el;
    float const x_58 = float(x_57);
    *(tint_symbol_3) = float4(x_58, x_58, x_58, x_58);
  }
  return;
}

main_out tint_symbol_inner(constant buf0& x_6, thread float4* const tint_symbol_4) {
  main_1(x_6, tint_symbol_4);
  main_out const tint_symbol_2 = {.x_GLF_color_1=*(tint_symbol_4)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(constant buf0& x_6 [[buffer(0)]]) {
  thread float4 tint_symbol_5 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_6, &(tint_symbol_5));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_color_1 = inner_result.x_GLF_color_1;
  return wrapper_result;
}

