; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 158
; Schema: 0
               OpCapability Shader
         %50 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %x_GLF_color_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color_1_1 "x_GLF_color_1_1"
               OpName %buf1 "buf1"
               OpMemberName %buf1 0 "x_GLF_uniform_float_values"
               OpName %x_6 "x_6"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "x_GLF_uniform_int_values"
               OpName %x_10 "x_10"
               OpName %x_GLF_color "x_GLF_color"
               OpName %main_1 "main_1"
               OpName %a "a"
               OpName %v1 "v1"
               OpName %E "E"
               OpName %x_75 "x_75"
               OpName %x_92 "x_92"
               OpName %x_109 "x_109"
               OpName %x_76_phi "x_76_phi"
               OpName %x_93_phi "x_93_phi"
               OpName %x_110_phi "x_110_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %main_inner "main_inner"
               OpName %main "main"
               OpDecorate %x_GLF_color_1_1 Location 0
               OpDecorate %buf1 Block
               OpMemberDecorate %buf1 0 Offset 0
               OpDecorate %_arr_float_uint_7 ArrayStride 16
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 1
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %_arr_int_uint_4 ArrayStride 16
               OpDecorate %x_10 NonWritable
               OpDecorate %x_10 DescriptorSet 0
               OpDecorate %x_10 Binding 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color_1_1 = OpVariable %_ptr_Output_v4float Output %5
       %uint = OpTypeInt 32 0
     %uint_7 = OpConstant %uint 7
%_arr_float_uint_7 = OpTypeArray %float %uint_7
       %buf1 = OpTypeStruct %_arr_float_uint_7
%_ptr_Uniform_buf1 = OpTypePointer Uniform %buf1
        %x_6 = OpVariable %_ptr_Uniform_buf1 Uniform
        %int = OpTypeInt 32 1
     %uint_4 = OpConstant %uint 4
%_arr_int_uint_4 = OpTypeArray %int %uint_4
       %buf0 = OpTypeStruct %_arr_int_uint_4
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
       %x_10 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
%_ptr_Function_uint = OpTypePointer Function %uint
         %26 = OpConstantNull %uint
%_ptr_Function_v4float = OpTypePointer Function %v4float
%_ptr_Function_float = OpTypePointer Function %float
         %31 = OpConstantNull %float
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
         %35 = OpConstantNull %bool
     %uint_0 = OpConstant %uint 0
      %int_0 = OpConstant %int 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
    %v2float = OpTypeVector %float 2
%float_0_00999999978 = OpConstant %float 0.00999999978
      %int_2 = OpConstant %int 2
%_ptr_Uniform_int = OpTypePointer Uniform %int
      %int_3 = OpConstant %int 3
      %int_4 = OpConstant %int 4
      %int_5 = OpConstant %int 5
      %int_6 = OpConstant %int 6
   %main_out = OpTypeStruct %v4float
        %147 = OpTypeFunction %main_out
     %main_1 = OpFunction %void None %20
         %23 = OpLabel
          %a = OpVariable %_ptr_Function_uint Function %26
         %v1 = OpVariable %_ptr_Function_v4float Function %5
          %E = OpVariable %_ptr_Function_float Function %31
       %x_75 = OpVariable %_ptr_Function_bool Function %35
       %x_92 = OpVariable %_ptr_Function_bool Function %35
      %x_109 = OpVariable %_ptr_Function_bool Function %35
   %x_76_phi = OpVariable %_ptr_Function_bool Function %35
   %x_93_phi = OpVariable %_ptr_Function_bool Function %35
  %x_110_phi = OpVariable %_ptr_Function_bool Function %35
         %44 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_0
         %45 = OpLoad %float %44
         %47 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_1
         %48 = OpLoad %float %47
         %52 = OpCompositeConstruct %v2float %45 %48
         %49 = OpExtInst %uint %50 PackUnorm2x16 %52
               OpStore %a %49
         %53 = OpLoad %uint %a
         %54 = OpExtInst %v4float %50 UnpackSnorm4x8 %53
               OpStore %v1 %54
               OpStore %E %float_0_00999999978
         %58 = OpAccessChain %_ptr_Uniform_int %x_10 %uint_0 %int_2
         %59 = OpLoad %int %58
         %60 = OpAccessChain %_ptr_Function_float %v1 %59
         %61 = OpLoad %float %60
         %62 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_2
         %63 = OpLoad %float %62
         %65 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_3
         %66 = OpLoad %float %65
         %67 = OpLoad %float %E
         %69 = OpFDiv %float %63 %66
         %70 = OpFSub %float %61 %69
         %68 = OpExtInst %float %50 FAbs %70
         %71 = OpFOrdLessThan %bool %68 %67
               OpStore %x_76_phi %71
               OpSelectionMerge %72 None
               OpBranchConditional %71 %73 %72
         %73 = OpLabel
         %74 = OpAccessChain %_ptr_Uniform_int %x_10 %uint_0 %int_1
         %75 = OpLoad %int %74
         %76 = OpAccessChain %_ptr_Function_float %v1 %75
         %77 = OpLoad %float %76
         %79 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_4
         %80 = OpLoad %float %79
         %81 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_3
         %82 = OpLoad %float %81
         %83 = OpLoad %float %E
         %85 = OpFDiv %float %80 %82
         %86 = OpFSub %float %77 %85
         %84 = OpExtInst %float %50 FAbs %86
         %87 = OpFOrdLessThan %bool %84 %83
               OpStore %x_75 %87
         %88 = OpLoad %bool %x_75
               OpStore %x_76_phi %88
               OpBranch %72
         %72 = OpLabel
         %89 = OpLoad %bool %x_76_phi
               OpStore %x_93_phi %89
               OpSelectionMerge %90 None
               OpBranchConditional %89 %91 %90
         %91 = OpLabel
         %92 = OpAccessChain %_ptr_Uniform_int %x_10 %uint_0 %int_3
         %93 = OpLoad %int %92
         %94 = OpAccessChain %_ptr_Function_float %v1 %93
         %95 = OpLoad %float %94
         %97 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_5
         %98 = OpLoad %float %97
         %99 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_3
        %100 = OpLoad %float %99
        %101 = OpLoad %float %E
        %103 = OpFNegate %float %98
        %104 = OpFDiv %float %103 %100
        %105 = OpFSub %float %95 %104
        %102 = OpExtInst %float %50 FAbs %105
        %106 = OpFOrdLessThan %bool %102 %101
               OpStore %x_92 %106
        %107 = OpLoad %bool %x_92
               OpStore %x_93_phi %107
               OpBranch %90
         %90 = OpLabel
        %108 = OpLoad %bool %x_93_phi
               OpStore %x_110_phi %108
               OpSelectionMerge %109 None
               OpBranchConditional %108 %110 %109
        %110 = OpLabel
        %111 = OpAccessChain %_ptr_Uniform_int %x_10 %uint_0 %int_0
        %112 = OpLoad %int %111
        %113 = OpAccessChain %_ptr_Function_float %v1 %112
        %114 = OpLoad %float %113
        %116 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_6
        %117 = OpLoad %float %116
        %118 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_3
        %119 = OpLoad %float %118
        %120 = OpLoad %float %E
        %122 = OpFNegate %float %117
        %123 = OpFDiv %float %122 %119
        %124 = OpFSub %float %114 %123
        %121 = OpExtInst %float %50 FAbs %124
        %125 = OpFOrdLessThan %bool %121 %120
               OpStore %x_109 %125
        %126 = OpLoad %bool %x_109
               OpStore %x_110_phi %126
               OpBranch %109
        %109 = OpLabel
        %127 = OpLoad %bool %x_110_phi
               OpSelectionMerge %128 None
               OpBranchConditional %127 %129 %130
        %129 = OpLabel
        %131 = OpAccessChain %_ptr_Uniform_int %x_10 %uint_0 %int_1
        %132 = OpLoad %int %131
        %133 = OpAccessChain %_ptr_Uniform_int %x_10 %uint_0 %int_2
        %134 = OpLoad %int %133
        %135 = OpAccessChain %_ptr_Uniform_int %x_10 %uint_0 %int_2
        %136 = OpLoad %int %135
        %137 = OpAccessChain %_ptr_Uniform_int %x_10 %uint_0 %int_1
        %138 = OpLoad %int %137
        %139 = OpConvertSToF %float %132
        %140 = OpConvertSToF %float %134
        %141 = OpConvertSToF %float %136
        %142 = OpConvertSToF %float %138
        %143 = OpCompositeConstruct %v4float %139 %140 %141 %142
               OpStore %x_GLF_color %143
               OpBranch %128
        %130 = OpLabel
        %144 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %int_5
        %145 = OpLoad %float %144
        %146 = OpCompositeConstruct %v4float %145 %145 %145 %145
               OpStore %x_GLF_color %146
               OpBranch %128
        %128 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %147
        %150 = OpLabel
        %151 = OpFunctionCall %void %main_1
        %152 = OpLoad %v4float %x_GLF_color
        %153 = OpCompositeConstruct %main_out %152
               OpReturnValue %153
               OpFunctionEnd
       %main = OpFunction %void None %20
        %155 = OpLabel
        %156 = OpFunctionCall %main_out %main_inner
        %157 = OpCompositeExtract %v4float %156 0
               OpStore %x_GLF_color_1_1 %157
               OpReturn
               OpFunctionEnd
