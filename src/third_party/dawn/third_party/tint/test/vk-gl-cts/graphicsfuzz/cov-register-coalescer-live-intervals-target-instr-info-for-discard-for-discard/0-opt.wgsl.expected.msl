#include <metal_stdlib>

using namespace metal;
struct tint_padded_array_element {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[3];
};
struct buf1 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_int_values;
};
struct tint_padded_array_element_1 {
  /* 0x0000 */ float el;
  /* 0x0004 */ int8_t tint_pad_1[12];
};
struct tint_array_wrapper_1 {
  /* 0x0000 */ tint_padded_array_element_1 arr[2];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper_1 x_GLF_uniform_float_values;
};
struct main_out {
  float4 x_GLF_v1_1;
};
struct tint_symbol_1 {
  float4 x_GLF_v1_1 [[color(0)]];
};

void main_1(constant buf1& x_7, constant buf0& x_9, thread float4* const tint_symbol_3, thread float4* const tint_symbol_4) {
  int i = 0;
  int j = 0;
  int const x_36 = x_7.x_GLF_uniform_int_values.arr[1].el;
  i = x_36;
  while (true) {
    int const x_41 = i;
    int const x_43 = x_7.x_GLF_uniform_int_values.arr[0].el;
    if ((x_41 < x_43)) {
    } else {
      break;
    }
    float const x_47 = x_9.x_GLF_uniform_float_values.arr[0].el;
    float const x_49 = x_9.x_GLF_uniform_float_values.arr[1].el;
    if ((x_47 > x_49)) {
      discard_fragment();
    }
    int const x_54 = x_7.x_GLF_uniform_int_values.arr[1].el;
    j = x_54;
    while (true) {
      int const x_59 = j;
      int const x_61 = x_7.x_GLF_uniform_int_values.arr[0].el;
      if ((x_59 < x_61)) {
      } else {
        break;
      }
      float const x_65 = (*(tint_symbol_3)).x;
      float const x_67 = x_9.x_GLF_uniform_float_values.arr[0].el;
      if ((x_65 < x_67)) {
        discard_fragment();
      }
      int const x_72 = x_7.x_GLF_uniform_int_values.arr[2].el;
      int const x_75 = x_7.x_GLF_uniform_int_values.arr[1].el;
      int const x_78 = x_7.x_GLF_uniform_int_values.arr[1].el;
      int const x_81 = x_7.x_GLF_uniform_int_values.arr[2].el;
      *(tint_symbol_4) = float4(float(x_72), float(x_75), float(x_78), float(x_81));
      {
        int const x_84 = j;
        j = as_type<int>((as_type<uint>(x_84) + as_type<uint>(1)));
      }
    }
    {
      int const x_86 = i;
      i = as_type<int>((as_type<uint>(x_86) + as_type<uint>(1)));
    }
  }
  return;
}

main_out tint_symbol_inner(constant buf1& x_7, constant buf0& x_9, float4 gl_FragCoord_param, thread float4* const tint_symbol_5, thread float4* const tint_symbol_6) {
  *(tint_symbol_5) = gl_FragCoord_param;
  main_1(x_7, x_9, tint_symbol_5, tint_symbol_6);
  main_out const tint_symbol_2 = {.x_GLF_v1_1=*(tint_symbol_6)};
  return tint_symbol_2;
}

fragment tint_symbol_1 tint_symbol(float4 gl_FragCoord_param [[position]], constant buf1& x_7 [[buffer(0)]], constant buf0& x_9 [[buffer(1)]]) {
  thread float4 tint_symbol_7 = 0.0f;
  thread float4 tint_symbol_8 = 0.0f;
  main_out const inner_result = tint_symbol_inner(x_7, x_9, gl_FragCoord_param, &(tint_symbol_7), &(tint_symbol_8));
  tint_symbol_1 wrapper_result = {};
  wrapper_result.x_GLF_v1_1 = inner_result.x_GLF_v1_1;
  return wrapper_result;
}

