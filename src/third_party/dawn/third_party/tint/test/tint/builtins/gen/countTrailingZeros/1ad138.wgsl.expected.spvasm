; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 98
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %vertex_main "vertex_main" %value %vertex_point_size
               OpEntryPoint Fragment %fragment_main "fragment_main"
               OpEntryPoint GLCompute %compute_main "compute_main"
               OpExecutionMode %fragment_main OriginUpperLeft
               OpExecutionMode %compute_main LocalSize 1 1 1
               OpName %value "value"
               OpName %vertex_point_size "vertex_point_size"
               OpName %tint_count_trailing_zeros "tint_count_trailing_zeros"
               OpName %v "v"
               OpName %x "x"
               OpName %countTrailingZeros_1ad138 "countTrailingZeros_1ad138"
               OpName %res "res"
               OpName %vertex_main_inner "vertex_main_inner"
               OpName %vertex_main "vertex_main"
               OpName %fragment_main "fragment_main"
               OpName %compute_main "compute_main"
               OpDecorate %value BuiltIn Position
               OpDecorate %vertex_point_size BuiltIn PointSize
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
      %value = OpVariable %_ptr_Output_v4float Output %5
%_ptr_Output_float = OpTypePointer Output %float
          %8 = OpConstantNull %float
%vertex_point_size = OpVariable %_ptr_Output_float Output %8
       %uint = OpTypeInt 32 0
     %v2uint = OpTypeVector %uint 2
          %9 = OpTypeFunction %v2uint %v2uint
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
         %18 = OpConstantNull %v2uint
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
 %uint_65535 = OpConstant %uint 65535
         %25 = OpConstantComposite %v2uint %uint_65535 %uint_65535
     %uint_0 = OpConstant %uint 0
         %28 = OpConstantComposite %v2uint %uint_0 %uint_0
    %uint_16 = OpConstant %uint 16
         %30 = OpConstantComposite %v2uint %uint_16 %uint_16
   %uint_255 = OpConstant %uint 255
         %37 = OpConstantComposite %v2uint %uint_255 %uint_255
     %uint_8 = OpConstant %uint 8
         %40 = OpConstantComposite %v2uint %uint_8 %uint_8
    %uint_15 = OpConstant %uint 15
         %47 = OpConstantComposite %v2uint %uint_15 %uint_15
     %uint_4 = OpConstant %uint 4
         %50 = OpConstantComposite %v2uint %uint_4 %uint_4
     %uint_3 = OpConstant %uint 3
         %57 = OpConstantComposite %v2uint %uint_3 %uint_3
     %uint_2 = OpConstant %uint 2
         %60 = OpConstantComposite %v2uint %uint_2 %uint_2
     %uint_1 = OpConstant %uint 1
         %67 = OpConstantComposite %v2uint %uint_1 %uint_1
       %void = OpTypeVoid
         %78 = OpTypeFunction %void
         %84 = OpTypeFunction %v4float
    %float_1 = OpConstant %float 1
%tint_count_trailing_zeros = OpFunction %v2uint None %9
          %v = OpFunctionParameter %v2uint
         %14 = OpLabel
          %x = OpVariable %_ptr_Function_v2uint Function %18
               OpStore %x %v
         %23 = OpLoad %v2uint %x
         %26 = OpBitwiseAnd %v2uint %23 %25
         %20 = OpINotEqual %v2bool %26 %18
         %19 = OpSelect %v2uint %20 %28 %30
         %31 = OpLoad %v2uint %x
         %32 = OpShiftRightLogical %v2uint %31 %19
               OpStore %x %32
         %35 = OpLoad %v2uint %x
         %38 = OpBitwiseAnd %v2uint %35 %37
         %34 = OpINotEqual %v2bool %38 %18
         %33 = OpSelect %v2uint %34 %28 %40
         %41 = OpLoad %v2uint %x
         %42 = OpShiftRightLogical %v2uint %41 %33
               OpStore %x %42
         %45 = OpLoad %v2uint %x
         %48 = OpBitwiseAnd %v2uint %45 %47
         %44 = OpINotEqual %v2bool %48 %18
         %43 = OpSelect %v2uint %44 %28 %50
         %51 = OpLoad %v2uint %x
         %52 = OpShiftRightLogical %v2uint %51 %43
               OpStore %x %52
         %55 = OpLoad %v2uint %x
         %58 = OpBitwiseAnd %v2uint %55 %57
         %54 = OpINotEqual %v2bool %58 %18
         %53 = OpSelect %v2uint %54 %28 %60
         %61 = OpLoad %v2uint %x
         %62 = OpShiftRightLogical %v2uint %61 %53
               OpStore %x %62
         %65 = OpLoad %v2uint %x
         %68 = OpBitwiseAnd %v2uint %65 %67
         %64 = OpINotEqual %v2bool %68 %18
         %63 = OpSelect %v2uint %64 %28 %67
         %70 = OpLoad %v2uint %x
         %71 = OpIEqual %v2bool %70 %28
         %69 = OpSelect %v2uint %71 %67 %28
         %73 = OpBitwiseOr %v2uint %19 %33
         %74 = OpBitwiseOr %v2uint %73 %43
         %75 = OpBitwiseOr %v2uint %74 %53
         %76 = OpBitwiseOr %v2uint %75 %63
         %77 = OpIAdd %v2uint %76 %69
               OpReturnValue %77
               OpFunctionEnd
%countTrailingZeros_1ad138 = OpFunction %void None %78
         %81 = OpLabel
        %res = OpVariable %_ptr_Function_v2uint Function %18
         %82 = OpFunctionCall %v2uint %tint_count_trailing_zeros %18
               OpStore %res %82
               OpReturn
               OpFunctionEnd
%vertex_main_inner = OpFunction %v4float None %84
         %86 = OpLabel
         %87 = OpFunctionCall %void %countTrailingZeros_1ad138
               OpReturnValue %5
               OpFunctionEnd
%vertex_main = OpFunction %void None %78
         %89 = OpLabel
         %90 = OpFunctionCall %v4float %vertex_main_inner
               OpStore %value %90
               OpStore %vertex_point_size %float_1
               OpReturn
               OpFunctionEnd
%fragment_main = OpFunction %void None %78
         %93 = OpLabel
         %94 = OpFunctionCall %void %countTrailingZeros_1ad138
               OpReturn
               OpFunctionEnd
%compute_main = OpFunction %void None %78
         %96 = OpLabel
         %97 = OpFunctionCall %void %countTrailingZeros_1ad138
               OpReturn
               OpFunctionEnd
