               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %_GLF_color
               OpExecutionMode %main OriginUpperLeft
               OpSource ESSL 320
               OpName %main "main"
               OpName %arr "arr"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "_GLF_uniform_float_values"
               OpName %_ ""
               OpName %i "i"
               OpName %buf1 "buf1"
               OpMemberName %buf1 0 "_GLF_uniform_int_values"
               OpName %__0 ""
               OpName %j "j"
               OpName %_GLF_color "_GLF_color"
               OpDecorate %_arr_float_uint_2 ArrayStride 16
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %buf0 Block
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %_arr_int_uint_2 ArrayStride 16
               OpMemberDecorate %buf1 0 Offset 0
               OpDecorate %buf1 Block
               OpDecorate %__0 DescriptorSet 0
               OpDecorate %__0 Binding 1
               OpDecorate %_GLF_color Location 0
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
      %float = OpTypeFloat 32
       %uint = OpTypeInt 32 0
     %uint_5 = OpConstant %uint 5
%_arr_float_uint_5 = OpTypeArray %float %uint_5
%_ptr_Function__arr_float_uint_5 = OpTypePointer Function %_arr_float_uint_5
     %uint_2 = OpConstant %uint 2
%_arr_float_uint_2 = OpTypeArray %float %uint_2
       %buf0 = OpTypeStruct %_arr_float_uint_2
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
          %_ = OpVariable %_ptr_Uniform_buf0 Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
%_ptr_Function_int = OpTypePointer Function %int
%_arr_int_uint_2 = OpTypeArray %int %uint_2
       %buf1 = OpTypeStruct %_arr_int_uint_2
%_ptr_Uniform_buf1 = OpTypePointer Uniform %buf1
        %__0 = OpVariable %_ptr_Uniform_buf1 Uniform
      %int_1 = OpConstant %int 1
%_ptr_Uniform_int = OpTypePointer Uniform %int
       %bool = OpTypeBool
     %int_n1 = OpConstant %int -1
    %float_1 = OpConstant %float 1
%_ptr_Function_float = OpTypePointer Function %float
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
 %_GLF_color = OpVariable %_ptr_Output_v4float Output
    %float_2 = OpConstant %float 2
       %main = OpFunction %void None %14
         %36 = OpLabel
        %arr = OpVariable %_ptr_Function__arr_float_uint_5 Function
          %i = OpVariable %_ptr_Function_int Function
          %j = OpVariable %_ptr_Function_int Function
         %37 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_0
         %38 = OpLoad %float %37
         %39 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_0
         %40 = OpLoad %float %39
         %41 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_0
         %42 = OpLoad %float %41
         %43 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_0
         %44 = OpLoad %float %43
         %45 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_0
         %46 = OpLoad %float %45
         %47 = OpCompositeConstruct %_arr_float_uint_5 %38 %40 %42 %44 %46
               OpStore %arr %47
         %48 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_1
         %49 = OpLoad %int %48
               OpStore %i %49
               OpStore %j %int_0
               OpBranch %50
         %50 = OpLabel
               OpLoopMerge %51 %52 None
               OpBranch %53
         %53 = OpLabel
         %54 = OpLoad %int %i
         %55 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_0
         %56 = OpLoad %int %55
         %57 = OpSLessThan %bool %54 %56
               OpBranchConditional %57 %58 %51
         %58 = OpLabel
         %59 = OpLoad %int %j
         %60 = OpSLessThan %bool %59 %int_n1
               OpSelectionMerge %61 None
               OpBranchConditional %60 %62 %61
         %62 = OpLabel
               OpBranch %51
         %61 = OpLabel
         %63 = OpLoad %int %j
         %64 = OpAccessChain %_ptr_Function_float %arr %63
         %65 = OpLoad %float %64
         %66 = OpFAdd %float %65 %float_1
         %67 = OpAccessChain %_ptr_Function_float %arr %63
               OpStore %67 %66
               OpBranch %52
         %52 = OpLabel
         %68 = OpLoad %int %i
         %69 = OpIAdd %int %68 %int_1
               OpStore %i %69
         %70 = OpLoad %int %j
         %71 = OpIAdd %int %70 %int_1
               OpStore %j %71
               OpBranch %50
         %51 = OpLabel
         %72 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_0
         %73 = OpLoad %float %72
         %74 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_1
         %75 = OpLoad %float %74
         %76 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_1
         %77 = OpLoad %float %76
         %78 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_0
         %79 = OpLoad %float %78
         %80 = OpCompositeConstruct %v4float %73 %75 %77 %79
               OpStore %_GLF_color %80
         %81 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_1
         %82 = OpLoad %int %81
               OpStore %i %82
               OpBranch %83
         %83 = OpLabel
               OpLoopMerge %84 %85 None
               OpBranch %86
         %86 = OpLabel
         %87 = OpLoad %int %i
         %88 = OpAccessChain %_ptr_Uniform_int %__0 %int_0 %int_0
         %89 = OpLoad %int %88
         %90 = OpSLessThan %bool %87 %89
               OpBranchConditional %90 %91 %84
         %91 = OpLabel
         %92 = OpLoad %int %i
         %93 = OpAccessChain %_ptr_Function_float %arr %92
         %94 = OpLoad %float %93
         %95 = OpFUnordNotEqual %bool %94 %float_2
               OpSelectionMerge %96 None
               OpBranchConditional %95 %97 %96
         %97 = OpLabel
         %98 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %int_1
         %99 = OpLoad %float %98
        %100 = OpCompositeConstruct %v4float %99 %99 %99 %99
               OpStore %_GLF_color %100
               OpBranch %96
         %96 = OpLabel
               OpBranch %85
         %85 = OpLabel
        %101 = OpLoad %int %i
        %102 = OpIAdd %int %101 %int_1
               OpStore %i %102
               OpBranch %83
         %84 = OpLabel
               OpReturn
               OpFunctionEnd
