{
    "_comment": [
        "Copyright 2017 The Dawn Authors",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "    http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],

    "_doc": "See docs/codegen.md",

    "adapter properties": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "device ID", "type": "uint32_t"},
            {"name": "vendor ID", "type": "uint32_t"},
            {"name": "name", "type": "char", "annotation": "const*"},
            {"name": "driver description", "type": "char", "annotation": "const*"},
            {"name": "adapter type", "type": "adapter type"},
            {"name": "backend type", "type": "backend type"}
        ]
    },
    "adapter type": {
        "category": "enum",
        "javascript": false,
        "values": [
            {"value": 0, "name": "discrete GPU"},
            {"value": 1, "name": "integrated GPU"},
            {"value": 2, "name": "CPU"},
            {"value": 3, "name": "unknown"}
        ]
    },
    "address mode": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "repeat"},
            {"value": 1, "name": "mirror repeat"},
            {"value": 2, "name": "clamp to edge"}
        ]
    },
    "backend type": {
        "category": "enum",
        "javascript": false,
        "values": [
            {"value": 0, "name": "null"},
            {"value": 1, "name": "D3D11"},
            {"value": 2, "name": "D3D12"},
            {"value": 3, "name": "metal"},
            {"value": 4, "name": "vulkan"},
            {"value": 5, "name": "openGL"},
            {"value": 6, "name": "openGLES"}
        ]
    },
    "bind group": {
        "category": "object"
    },
    "bind group entry": {
        "category": "structure",
        "extensible": false,
        "members": [
            {"name": "binding", "type": "uint32_t"},
            {"name": "buffer", "type": "buffer", "optional": true},
            {"name": "offset", "type": "uint64_t", "default": "0"},
            {"name": "size", "type": "uint64_t"},
            {"name": "sampler", "type": "sampler", "optional": true},
            {"name": "texture view", "type": "texture view", "optional": true}
        ]
    },
    "bind group descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "layout", "type": "bind group layout"},
            {"name": "entry count", "type": "uint32_t"},
            {"name": "entries", "type": "bind group entry", "annotation": "const*", "length": "entry count"}
        ]
    },
    "bind group layout": {
        "category": "object"
    },

    "buffer binding type": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "undefined", "jsrepr": "undefined", "valid": false},
            {"value": 1, "name": "uniform"},
            {"value": 2, "name": "storage"},
            {"value": 3, "name": "read only storage", "jsrepr": "readonly-storage"}
        ]
    },
    "buffer binding layout": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "type", "type": "buffer binding type", "default": "undefined"},
            {"name": "has dynamic offset", "type": "bool", "default": "false"},
            {"name": "min binding size", "type": "uint64_t", "default": "0"}
        ]
    },

    "sampler binding type": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "undefined", "jsrepr": "undefined", "valid": false},
            {"value": 1, "name": "filtering"},
            {"value": 2, "name": "non filtering"},
            {"value": 3, "name": "comparison"}
        ]
    },
    "sampler binding layout": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "type", "type": "sampler binding type", "default": "undefined"}
        ]
    },

    "texture sample type": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "undefined", "jsrepr": "undefined", "valid": false},
            {"value": 1, "name": "float"},
            {"value": 2, "name": "unfilterable float"},
            {"value": 3, "name": "depth"},
            {"value": 4, "name": "sint"},
            {"value": 5, "name": "uint"}
        ]
    },
    "texture binding layout": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "sample type", "type": "texture sample type", "default": "undefined"},
            {"name": "view dimension", "type": "texture view dimension", "default": "undefined"},
            {"name": "multisampled", "type": "bool", "default": "false"}
        ]
    },

    "storage texture access": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "undefined", "jsrepr": "undefined", "valid": false},
            {"value": 1, "name": "read only", "jsrepr": "readonly"},
            {"value": 2, "name": "write only", "jsrepr": "writeonly"}
        ]
    },
    "storage texture binding layout": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "access", "type": "storage texture access", "default": "undefined"},
            {"name": "format", "type": "texture format", "default": "undefined"},
            {"name": "view dimension", "type": "texture view dimension", "default": "undefined"}
        ]
    },

    "bind group layout entry": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "binding", "type": "uint32_t"},
            {"name": "visibility", "type": "shader stage"},

            {"name": "type", "type": "binding type", "default": "undefined"},
            {"name": "has dynamic offset", "type": "bool", "default": "false"},
            {"name": "min buffer binding size", "type": "uint64_t", "default": "0"},
            {"name": "view dimension", "type": "texture view dimension", "default": "undefined"},
            {"name": "texture component type", "type": "texture component type", "default": "float"},
            {"name": "storage texture format", "type": "texture format", "default": "undefined"},

            {"name": "buffer", "type": "buffer binding layout"},
            {"name": "sampler", "type": "sampler binding layout"},
            {"name": "texture", "type": "texture binding layout"},
            {"name": "storage texture", "type": "storage texture binding layout"}
        ]
    },
    "bind group layout descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "entry count", "type": "uint32_t"},
            {"name": "entries", "type": "bind group layout entry", "annotation": "const*", "length": "entry count"}
        ]
    },
    "binding type": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "undefined", "jsrepr": "undefined", "valid": false},
            {"value": 1, "name": "uniform buffer"},
            {"value": 2, "name": "storage buffer"},
            {"value": 3, "name": "readonly storage buffer"},
            {"value": 4, "name": "sampler"},
            {"value": 5, "name": "comparison sampler"},
            {"value": 6, "name": "sampled texture"},
            {"value": 7, "name": "multisampled texture"},
            {"value": 8, "name": "readonly storage texture"},
            {"value": 9, "name": "writeonly storage texture"}
        ]
    },
    "blend component": {
        "category": "structure",
        "extensible": false,
        "members": [
            {"name": "operation", "type": "blend operation", "default": "add"},
            {"name": "src factor", "type": "blend factor", "default": "one"},
            {"name": "dst factor", "type": "blend factor", "default": "zero"}
        ]
    },
    "blend descriptor": {
        "category": "typedef",
        "type": "blend component"
    },
    "blend factor": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "zero"},
            {"value": 1, "name": "one"},
            {"value": 2, "name": "src color"},
            {"value": 3, "name": "one minus src color"},
            {"value": 4, "name": "src alpha"},
            {"value": 5, "name": "one minus src alpha"},
            {"value": 6, "name": "dst color"},
            {"value": 7, "name": "one minus dst color"},
            {"value": 8, "name": "dst alpha"},
            {"value": 9, "name": "one minus dst alpha"},
            {"value": 10, "name": "src alpha saturated"},
            {"value": 11, "name": "blend color"},
            {"value": 12, "name": "one minus blend color"}
        ]
    },
    "blend operation": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "add"},
            {"value": 1, "name": "subtract"},
            {"value": 2, "name": "reverse subtract"},
            {"value": 3, "name": "min"},
            {"value": 4, "name": "max"}
        ]
    },
    "color state descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "format", "type": "texture format"},
            {"name": "alpha blend", "type": "blend component"},
            {"name": "color blend", "type": "blend component"},
            {"name": "write mask", "type": "color write mask", "default": "all"}
        ]
    },
    "bool": {
        "category": "native"
    },
    "buffer": {
        "category": "object",
        "methods": [
            {
                "name": "map async",
                "args": [
                    {"name": "mode", "type": "map mode"},
                    {"name": "offset", "type": "size_t"},
                    {"name": "size", "type": "size_t"},
                    {"name": "callback", "type": "buffer map callback"},
                    {"name": "userdata", "type": "void", "annotation": "*"}
                ]
            },
            {
                "name": "get mapped range",
                "returns": "void *",
                "args": [
                    {"name": "offset", "type": "size_t", "default": 0},
                    {"name": "size", "type": "size_t", "default": 0}
                ]
            },
            {
                "name": "get const mapped range",
                "returns": "void const *",
                "args": [
                    {"name": "offset", "type": "size_t", "default": 0},
                    {"name": "size", "type": "size_t", "default": 0}
                ]
            },
            {
                "name": "unmap"
            },
            {
                "name": "destroy"
            }
        ]
    },
    "buffer copy view": {
        "category": "typedef",
        "type": "image copy buffer"
    },
    "buffer descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "usage", "type": "buffer usage"},
            {"name": "size", "type": "uint64_t"},
            {"name": "mapped at creation", "type": "bool", "default": "false"}
        ]
    },
    "buffer map callback": {
        "category": "callback",
        "args": [
            {"name": "status", "type": "buffer map async status"},
            {"name": "userdata", "type": "void", "annotation": "*"}
        ]
    },
    "buffer map async status": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "success"},
            {"value": 1, "name": "error"},
            {"value": 2, "name": "unknown"},
            {"value": 3, "name": "device lost"},
            {"value": 4, "name": "destroyed before callback"},
            {"value": 5, "name": "unmapped before callback"}
        ]
    },
    "buffer usage": {
        "category": "bitmask",
        "values": [
            {"value": 0, "name": "none"},
            {"value": 1, "name": "map read"},
            {"value": 2, "name": "map write"},
            {"value": 4, "name": "copy src"},
            {"value": 8, "name": "copy dst"},
            {"value": 16, "name": "index"},
            {"value": 32, "name": "vertex"},
            {"value": 64, "name": "uniform"},
            {"value": 128, "name": "storage"},
            {"value": 256, "name": "indirect"},
            {"value": 512, "name": "query resolve"}
        ]
    },
    "char": {
        "category": "native"
    },
    "color": {
        "category": "structure",
        "members": [
            {"name": "r", "type": "double"},
            {"name": "g", "type": "double"},
            {"name": "b", "type": "double"},
            {"name": "a", "type": "double"}
        ]
    },
    "color write mask": {
        "category": "bitmask",
        "values": [
            {"value": 0, "name": "none"},
            {"value": 1, "name": "red"},
            {"value": 2, "name": "green"},
            {"value": 4, "name": "blue"},
            {"value": 8, "name": "alpha"},
            {"value": 15, "name": "all"}
        ]
    },
    "command buffer": {
        "category": "object"
    },
    "command buffer descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true}
        ]
    },
    "command encoder": {
        "category": "object",
        "methods": [
            {
                "name": "finish",
                "returns": "command buffer",
                "args": [
                    {"name": "descriptor", "type": "command buffer descriptor", "annotation": "const*", "optional": true}
                ]
            },
            {
                "name": "begin compute pass",
                "returns": "compute pass encoder",
                "args": [
                    {"name": "descriptor", "type": "compute pass descriptor", "annotation": "const*", "optional": true}
                ]
            },
            {
                "name": "begin render pass",
                "returns": "render pass encoder",
                "args": [
                    {"name": "descriptor", "type": "render pass descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "copy buffer to buffer",
                "args": [
                    {"name": "source", "type": "buffer"},
                    {"name": "source offset", "type": "uint64_t"},
                    {"name": "destination", "type": "buffer"},
                    {"name": "destination offset", "type": "uint64_t"},
                    {"name": "size", "type": "uint64_t"}
                ]
            },
            {
                "name": "copy buffer to texture",
                "args": [
                    {"name": "source", "type": "image copy buffer", "annotation": "const*"},
                    {"name": "destination", "type": "image copy texture", "annotation": "const*"},
                    {"name": "copy size", "type": "extent 3D", "annotation": "const*"}
                ]
            },
            {
                "name": "copy texture to buffer",
                "args": [
                    {"name": "source", "type": "image copy texture", "annotation": "const*"},
                    {"name": "destination", "type": "image copy buffer", "annotation": "const*"},
                    {"name": "copy size", "type": "extent 3D", "annotation": "const*"}
                ]
            },
            {
                "name": "copy texture to texture",
                "args": [
                    {"name": "source", "type": "image copy texture", "annotation": "const*"},
                    {"name": "destination", "type": "image copy texture", "annotation": "const*"},
                    {"name": "copy size", "type": "extent 3D", "annotation": "const*"}
                ]
            },
            {
                "name": "inject validation error",
                "args": [
                    {"name": "message", "type": "char", "annotation": "const*", "length": "strlen"}
                ],
                "TODO": "enga@: Make this a Dawn extension"
            },
            {
                "name": "insert debug marker",
                "args": [
                    {"name": "marker label", "type": "char", "annotation": "const*", "length": "strlen"}
                ]
            },
            {
                "name": "pop debug group",
                "args": []
            },
            {
                "name": "push debug group",
                "args": [
                    {"name": "group label", "type": "char", "annotation": "const*", "length": "strlen"}
                ]
            },
            {
                "name": "resolve query set",
                "args": [
                    {"name": "query set", "type": "query set"},
                    {"name": "first query", "type": "uint32_t"},
                    {"name": "query count", "type": "uint32_t"},
                    {"name": "destination", "type": "buffer"},
                    {"name": "destination offset", "type": "uint64_t"}
                ]
            },
            {
                "name": "write timestamp",
                "args": [
                    {"name": "query set", "type": "query set"},
                    {"name": "query index", "type": "uint32_t"}
                ]
            }
        ]
    },
    "command encoder descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true}
        ]
    },
    "compare function": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "undefined", "jsrepr": "undefined"},
            {"value": 1, "name": "never"},
            {"value": 2, "name": "less"},
            {"value": 3, "name": "less equal"},
            {"value": 4, "name": "greater"},
            {"value": 5, "name": "greater equal"},
            {"value": 6, "name": "equal"},
            {"value": 7, "name": "not equal"},
            {"value": 8, "name": "always"}
        ]
    },
    "compilation info": {
        "category": "structure",
        "extensible": false,
        "members": [
            {"name": "message count", "type": "uint32_t"},
            {"name": "messages", "type": "compilation message", "annotation": "const*", "length": "message count"}
        ]
    },
    "compilation info callback": {
        "category": "callback",
        "args": [
            {"name": "status", "type": "compilation info request status"},
            {"name": "compilation info", "type": "compilation info", "annotation": "const*"},
            {"name": "userdata", "type": "void", "annotation": "*"}
        ]
    },
    "compilation info request status": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "success"},
            {"value": 1, "name": "error"},
            {"value": 2, "name": "device lost"},
            {"value": 3, "name": "unknown"}
        ]
    },
    "compilation message": {
        "category": "structure",
        "extensible": false,
        "members": [
            {"name": "message", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "type", "type": "compilation message type"},
            {"name": "line num", "type": "uint64_t"},
            {"name": "line pos", "type": "uint64_t"}
        ]
    },
    "compilation message type": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "error"},
            {"value": 1, "name": "warning"},
            {"value": 2, "name": "info"}
        ]
    },
    "compute pass descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true}
        ]
    },
    "compute pass encoder": {
        "category": "object",
        "methods": [
            {
                "name": "insert debug marker",
                "args": [
                    {"name": "marker label", "type": "char", "annotation": "const*", "length": "strlen"}
                ]
            },
            {
                "name": "pop debug group",
                "args": []
            },
            {
                "name": "push debug group",
                "args": [
                    {"name": "group label", "type": "char", "annotation": "const*", "length": "strlen"}
                ]
            },
            {
                "name": "set pipeline",
                "args": [
                    {"name": "pipeline", "type": "compute pipeline"}
                ]
            },
            {
                "name": "set bind group",
                "args": [
                    {"name": "group index", "type": "uint32_t"},
                    {"name": "group", "type": "bind group"},
                    {"name": "dynamic offset count", "type": "uint32_t", "default": "0"},
                    {"name": "dynamic offsets", "type": "uint32_t", "annotation": "const*", "length": "dynamic offset count", "optional": true}
                ]
            },
            {
                "name": "write timestamp",
                "args": [
                    {"name": "query set", "type": "query set"},
                    {"name": "query index", "type": "uint32_t"}
                ]
            },
            {
                "name": "dispatch",
                "args": [
                    {"name": "x", "type": "uint32_t"},
                    {"name": "y", "type": "uint32_t", "default": "1"},
                    {"name": "z", "type": "uint32_t", "default": "1"}
                ]
            },
            {
                "name": "dispatch indirect",
                "args": [
                  {"name": "indirect buffer", "type": "buffer"},
                  {"name": "indirect offset", "type": "uint64_t"}
                ]
            },
            {
                "name": "end pass"
            }
        ]
    },
    "compute pipeline": {
        "category": "object",
        "methods": [
            {
                "name": "get bind group layout",
                "returns": "bind group layout",
                "args": [
                    {"name": "group index", "type": "uint32_t"}
                ]
            }
        ]
    },
    "compute pipeline descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "layout", "type": "pipeline layout", "optional": true},
            {"name": "compute stage", "type": "programmable stage descriptor"}
        ]
    },
    "copy texture for browser options": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "flipY", "type": "bool", "default": "false"}
        ]
    },
    "create compute pipeline async callback": {
        "category": "callback",
        "args": [
            {"name": "status", "type": "create pipeline async status"},
            {"name": "pipeline", "type": "compute pipeline"},
            {"name": "message", "type": "char", "annotation": "const*", "length": "strlen"},
            {"name": "userdata", "type": "void", "annotation": "*"}
        ]
    },
    "create pipeline async status": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "success"},
            {"value": 1, "name": "error"},
            {"value": 2, "name": "device lost"},
            {"value": 3, "name": "device destroyed"},
            {"value": 4, "name": "unknown"}
        ]
    },
    "create render pipeline async callback": {
        "category": "callback",
        "args": [
            {"name": "status", "type": "create pipeline async status"},
            {"name": "pipeline", "type": "render pipeline"},
            {"name": "message", "type": "char", "annotation": "const*", "length": "strlen"},
            {"name": "userdata", "type": "void", "annotation": "*"}
        ]
    },
    "cull mode": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "none"},
            {"value": 1, "name": "front"},
            {"value": 2, "name": "back"}
        ]
    },
    "device": {
        "category": "object",
        "methods": [
            {
                "name": "create bind group",
                "returns": "bind group",
                "args": [
                    {"name": "descriptor", "type": "bind group descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "create bind group layout",
                "returns": "bind group layout",
                "args": [
                    {"name": "descriptor", "type": "bind group layout descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "create buffer",
                "returns": "buffer",
                "args": [
                    {"name": "descriptor", "type": "buffer descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "create error buffer",
                "returns": "buffer",
                "TODO": "enga@: Make this part of a dawn_wire extension"
            },
            {
                "name": "create command encoder",
                "returns": "command encoder",
                "args": [
                    {"name": "descriptor", "type": "command encoder descriptor", "annotation": "const*", "optional": true}
                ]
            },
            {
                "name": "create compute pipeline",
                "returns": "compute pipeline",
                "args": [
                    {"name": "descriptor", "type": "compute pipeline descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "create compute pipeline async",
                "returns": "void",
                "args": [
                    {"name": "descriptor", "type": "compute pipeline descriptor", "annotation": "const*"},
                    {"name": "callback", "type": "create compute pipeline async callback"},
                    {"name": "userdata", "type": "void", "annotation": "*"}
                ]
            },
            {
                "name": "create pipeline layout",
                "returns": "pipeline layout",
                "args": [
                    {"name": "descriptor", "type": "pipeline layout descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "create query set",
                "returns": "query set",
                "args": [
                    {"name": "descriptor", "type": "query set descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "create render pipeline async",
                "returns": "void",
                "args": [
                    {"name": "descriptor", "type": "render pipeline descriptor 2", "annotation": "const*"},
                    {"name": "callback", "type": "create render pipeline async callback"},
                    {"name": "userdata", "type": "void", "annotation": "*"}
                ]
            },
            {
                "name": "create render bundle encoder",
                "returns": "render bundle encoder",
                "args": [
                    {"name": "descriptor", "type": "render bundle encoder descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "create render pipeline",
                "returns": "render pipeline",
                "args": [
                    {"name": "descriptor", "type": "render pipeline descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "create render pipeline 2",
                "returns": "render pipeline",
                "args": [
                    {"name": "descriptor", "type": "render pipeline descriptor 2", "annotation": "const*"}
                ]
            },
            {
                "name": "create sampler",
                "returns": "sampler",
                "args": [
                    {"name": "descriptor", "type": "sampler descriptor", "annotation": "const*", "optional": true}
                ]
            },
            {
                "name": "create shader module",
                "returns": "shader module",
                "args": [
                    {"name": "descriptor", "type": "shader module descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "create swap chain",
                "returns": "swap chain",
                "args": [
                    {"name": "surface", "type": "surface", "optional": true},
                    {"name": "descriptor", "type": "swap chain descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "create texture",
                "returns": "texture",
                "args": [
                    {"name": "descriptor", "type": "texture descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "get queue",
                "returns": "queue"
            },
            {
                "name": "get default queue",
                "returns": "queue"
            },
            {
                "name": "create external texture",
                "returns": "external texture",
                "args": [
                    {"name": "external texture descriptor", "type": "external texture descriptor", "annotation": "const*"}
                ]
            },
            {
                "name": "inject error",
                "args": [
                    {"name": "type", "type": "error type"},
                    {"name": "message", "type": "char", "annotation": "const*", "length": "strlen"}
                ],
                "TODO": "enga@: Make this a Dawn extension"
            },
            {
                "name": "lose for testing"
            },
            {
                "name": "tick"
            },
            {
                "name": "set uncaptured error callback",
                "args": [
                    {"name": "callback", "type": "error callback"},
                    {"name": "userdata", "type": "void", "annotation": "*"}
                ]
            },
            {
                "name": "set device lost callback",
                "args": [
                    {"name": "callback", "type": "device lost callback"},
                    {"name": "userdata", "type": "void", "annotation": "*"}
                ]
            },
            {
                "name": "push error scope",
                "args": [
                    {"name": "filter", "type": "error filter"}
                ]
            },
            {
                "name": "pop error scope",
                "returns": "bool",
                "args": [
                    {"name": "callback", "type": "error callback"},
                    {"name": "userdata", "type": "void", "annotation": "*"}
                ]
            }
        ]
    },
    "device lost callback": {
        "category": "callback",
        "args": [
            {"name": "message", "type": "char", "annotation": "const*"},
            {"name": "userdata", "type": "void", "annotation": "*"}
        ]
    },
    "device properties": {
        "category": "structure",
        "extensible": false,
        "members": [
            {"name": "texture compression BC", "type": "bool", "default": "false"},
            {"name": "shader float16", "type": "bool", "default": "false"},
            {"name": "pipeline statistics query", "type": "bool", "default": "false"},
            {"name": "timestamp query", "type": "bool", "default": "false"},
            {"name": "multi planar formats", "type": "bool", "default": "false"},
            {"name": "depth clamping", "type": "bool", "default": "false"}
        ]
    },
    "depth stencil state descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "format", "type": "texture format"},
            {"name": "depth write enabled", "type": "bool", "default": "false"},
            {"name": "depth compare", "type": "compare function", "default": "always"},
            {"name": "stencil front", "type": "stencil face state"},
            {"name": "stencil back", "type": "stencil face state"},
            {"name": "stencil read mask", "type": "uint32_t", "default": "0xFFFFFFFF"},
            {"name": "stencil write mask", "type": "uint32_t", "default": "0xFFFFFFFF"}
        ]
    },
    "double": {
        "category": "native"
    },
    "error callback": {
        "category": "callback",
        "args": [
            {"name": "type", "type": "error type"},
            {"name": "message", "type": "char", "annotation": "const*"},
            {"name": "userdata", "type": "void", "annotation": "*"}
        ]
    },
    "error filter": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "none"},
            {"value": 1, "name": "validation"},
            {"value": 2, "name": "out of memory"}
        ]
    },
    "error type": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "no error"},
            {"value": 1, "name": "validation"},
            {"value": 2, "name": "out of memory"},
            {"value": 3, "name": "unknown"},
            {"value": 4, "name": "device lost"}
        ]
    },
    "extent 3D": {
        "category": "structure",
        "members": [
            {"name": "width", "type": "uint32_t"},
            {"name": "height", "type": "uint32_t", "default": 1},
            {"name": "depth or array layers", "type": "uint32_t", "default": 1},
            {"name": "depth", "type": "uint32_t", "default": 1}
        ]
    },
    "external texture": {
        "category": "object",
        "methods": [
            {
                "name": "destroy",
                "returns": "void"
            }
        ]
    },
    "external texture descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "plane 0", "type": "texture view"},
            {"name": "format", "type": "texture format"}
        ]
    },
    "fence": {
        "category": "object",
        "methods": [
            {
                "name": "get completed value",
                "returns": "uint64_t"
            },
            {
                "name": "on completion",
                "args": [
                    {"name": "value", "type": "uint64_t"},
                    {"name": "callback", "type": "fence on completion callback"},
                    {"name": "userdata", "type": "void", "annotation": "*"}
                ]
            }
        ]
    },
    "fence on completion callback": {
        "category": "callback",
        "args": [
            {"name": "status", "type": "fence completion status"},
            {"name": "userdata", "type": "void", "annotation": "*"}
        ]
    },
    "fence completion status": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "success"},
            {"value": 1, "name": "error"},
            {"value": 2, "name": "unknown"},
            {"value": 3, "name": "device lost"}
        ]
    },
    "fence descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "initial value", "type": "uint64_t", "default": "0"}
        ]
    },
    "filter mode": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "nearest"},
            {"value": 1, "name": "linear"}
        ]
    },
    "float": {
        "category": "native"
    },
    "front face": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "CCW"},
            {"value": 1, "name": "CW"}
        ]
    },
    "image copy buffer": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "layout", "type": "texture data layout"},
            {"name": "buffer", "type": "buffer"}
        ]
    },
    "image copy texture": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "texture", "type": "texture"},
            {"name": "mip level", "type": "uint32_t", "default": "0"},
            {"name": "origin", "type": "origin 3D"},
            {"name": "aspect", "type": "texture aspect", "default": "all"}
        ]
    },
    "index format": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "undefined", "jsrepr": "undefined"},
            {"value": 1, "name": "uint16"},
            {"value": 2, "name": "uint32"}
        ]
    },
    "instance": {
        "category": "object",
        "methods": [
            {
                "name": "create surface",
                "returns": "surface",
                "args": [
                    {"name": "descriptor", "type": "surface descriptor", "annotation": "const*"}
                ]
            }
        ]
    },
    "instance descriptor": {
        "category": "structure",
        "extensible": true,
        "members": []
    },
    "vertex attribute": {
        "category": "structure",
        "extensible": false,
        "members": [
            {"name": "format", "type": "vertex format"},
            {"name": "offset", "type": "uint64_t"},
            {"name": "shader location", "type": "uint32_t"}
        ]
    },
    "vertex attribute descriptor": {
        "category": "typedef",
        "type": "vertex attribute"
    },
    "vertex buffer layout": {
        "category": "structure",
        "extensible": false,
        "members": [
            {"name": "array stride", "type": "uint64_t"},
            {"name": "step mode", "type": "input step mode", "default": "vertex"},
            {"name": "attribute count", "type": "uint32_t"},
            {"name": "attributes", "type": "vertex attribute", "annotation": "const*", "length": "attribute count"}
        ]
    },
    "vertex buffer layout descriptor": {
        "category": "typedef",
        "type": "vertex buffer layout"
    },
    "vertex state descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "index format", "type": "index format", "default": "undefined"},
            {"name": "vertex buffer count", "type": "uint32_t", "default": 0},
            {"name": "vertex buffers", "type": "vertex buffer layout", "annotation": "const*", "length": "vertex buffer count"}
        ]
    },
    "input step mode": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "vertex"},
            {"value": 1, "name": "instance"}
        ]
    },
    "load op": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "clear"},
            {"value": 1, "name": "load"}
        ]
    },
    "map mode": {
        "category": "bitmask",
        "values": [
            {"value": 0, "name": "none"},
            {"value": 1, "name": "read"},
            {"value": 2, "name": "write"}
        ]
    },
    "store op": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "store"},
            {"value": 1, "name": "clear"}
        ]
    },
    "origin 3D": {
        "category": "structure",
        "members": [
            {"name": "x", "type": "uint32_t", "default": "0"},
            {"name": "y", "type": "uint32_t", "default": "0"},
            {"name": "z", "type": "uint32_t", "default": "0"}
        ]
    },
    "pipeline layout": {
        "category": "object"
    },
    "pipeline layout descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "bind group layout count", "type": "uint32_t"},
            {"name": "bind group layouts", "type": "bind group layout", "annotation": "const*", "length": "bind group layout count"}
        ]
    },
    "pipeline statistic name": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "vertex shader invocations"},
            {"value": 1, "name": "clipper invocations"},
            {"value": 2, "name": "clipper primitives out"},
            {"value": 3, "name": "fragment shader invocations"},
            {"value": 4, "name": "compute shader invocations"}
        ]
    },
    "present mode": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "immediate"},
            {"value": 1, "name": "mailbox"},
            {"value": 2, "name": "fifo"}
        ]
    },
    "programmable stage descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "module", "type": "shader module"},
            {"name": "entry point", "type": "char", "annotation": "const*", "length": "strlen"}
        ]
    },
    "primitive topology": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "point list"},
            {"value": 1, "name": "line list"},
            {"value": 2, "name": "line strip"},
            {"value": 3, "name": "triangle list"},
            {"value": 4, "name": "triangle strip"}
        ]
    },
    "query set": {
        "category": "object",
        "methods": [
            {
                "name": "destroy"
            }
        ]
    },
    "query set descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "type", "type": "query type"},
            {"name": "count", "type": "uint32_t"},
            {"name": "pipeline statistics", "type": "pipeline statistic name", "annotation": "const*", "length": "pipeline statistics count"},
            {"name": "pipeline statistics count", "type": "uint32_t", "default": "0"}
        ]
    },
    "query type": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "occlusion"},
            {"value": 1, "name": "pipeline statistics"},
            {"value": 2, "name": "timestamp"}
        ]
    },
    "queue": {
        "category": "object",
        "methods": [
            {
                "name": "submit",
                "args": [
                    {"name": "command count", "type": "uint32_t"},
                    {"name": "commands", "type": "command buffer", "annotation": "const*", "length": "command count"}
                ]
            },
            {
                "name": "signal",
                "args": [
                    {"name": "fence", "type": "fence"},
                    {"name": "signal value", "type": "uint64_t"}
                ]
            },
            {
                "name": "create fence",
                "returns": "fence",
                "args": [
                    {"name": "descriptor", "type": "fence descriptor", "annotation": "const*", "optional": true}
                ]
            },
            {
                "name": "on submitted work done",
                "args": [
                    {"name": "signal value", "type": "uint64_t"},
                    {"name": "callback", "type": "queue work done callback"},
                    {"name": "userdata", "type": "void", "annotation": "*"}
                ]
            },
            {
                "name": "write buffer",
                "args": [
                    {"name": "buffer", "type": "buffer"},
                    {"name": "buffer offset", "type": "uint64_t"},
                    {"name": "data", "type": "void", "annotation": "const*", "length": "size"},
                    {"name": "size", "type": "size_t"}
                ]
            },
            {
                "name": "write texture",
                "args": [
                    {"name": "destination", "type": "image copy texture", "annotation": "const*"},
                    {"name": "data", "type": "void", "annotation": "const*", "length": "data size"},
                    {"name": "data size", "type": "size_t"},
                    {"name": "data layout", "type": "texture data layout", "annotation": "const*"},
                    {"name": "write size", "type": "extent 3D", "annotation": "const*"}
                ]
            },
            {
                "name": "copy texture for browser",
                "extensible": true,
                "args": [
                    {"name": "source", "type": "image copy texture", "annotation": "const*"},
                    {"name": "destination", "type": "image copy texture", "annotation": "const*"},
                    {"name": "copy size", "type": "extent 3D", "annotation": "const*"},
                    {"name": "options", "type": "copy texture for browser options", "annotation": "const*"}
                ]
            }
        ]
    },
    "queue work done callback": {
        "category": "callback",
        "args": [
            {"name": "status", "type": "queue work done status"},
            {"name": "userdata", "type": "void", "annotation": "*"}
        ]
    },
    "queue work done status": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "success"},
            {"value": 1, "name": "error"},
            {"value": 2, "name": "unknown"},
            {"value": 3, "name": "device lost"}
        ]
    },

    "rasterization state descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "front face", "type": "front face", "default": "CCW"},
            {"name": "cull mode", "type": "cull mode", "default": "none"},
            {"name": "depth bias", "type": "int32_t", "default": "0"},
            {"name": "depth bias slope scale", "type": "float", "default": "0.0f"},
            {"name": "depth bias clamp", "type": "float", "default": "0.0f"}
        ]
    },

    "render bundle": {
        "category": "object"
    },

    "render bundle encoder": {
        "category": "object",
        "methods": [
            {
                "name": "set pipeline",
                "args": [
                    {"name": "pipeline", "type": "render pipeline"}
                ]
            },
            {
                "name": "set bind group",
                "args": [
                    {"name": "group index", "type": "uint32_t"},
                    {"name": "group", "type": "bind group"},
                    {"name": "dynamic offset count", "type": "uint32_t", "default": "0"},
                    {"name": "dynamic offsets", "type": "uint32_t", "annotation": "const*", "length": "dynamic offset count", "optional": true}
                ]
            },
            {
                "name": "draw",
                "args": [
                    {"name": "vertex count", "type": "uint32_t"},
                    {"name": "instance count", "type": "uint32_t", "default": "1"},
                    {"name": "first vertex", "type": "uint32_t", "default": "0"},
                    {"name": "first instance", "type": "uint32_t",  "default": "0"}
                ]
            },
            {
                "name": "draw indexed",
                "args": [
                    {"name": "index count", "type": "uint32_t"},
                    {"name": "instance count", "type": "uint32_t", "default": "1"},
                    {"name": "first index", "type": "uint32_t", "default": "0"},
                    {"name": "base vertex", "type": "int32_t", "default": "0"},
                    {"name": "first instance", "type": "uint32_t", "default": "0"}
                ]
            },
            {
              "name": "draw indirect",
              "args": [
                    {"name": "indirect buffer", "type": "buffer"},
                    {"name": "indirect offset", "type": "uint64_t"}
              ]
            },
            {
              "name": "draw indexed indirect",
              "args": [
                    {"name": "indirect buffer", "type": "buffer"},
                    {"name": "indirect offset", "type": "uint64_t"}
              ]
            },
            {
                "name": "insert debug marker",
                "args": [
                    {"name": "marker label", "type": "char", "annotation": "const*", "length": "strlen"}
                ]
            },
            {
                "name": "pop debug group",
                "args": []
            },
            {
                "name": "push debug group",
                "args": [
                    {"name": "group label", "type": "char", "annotation": "const*", "length": "strlen"}
                ]
            },
            {
                "name": "set vertex buffer",
                "args": [
                    {"name": "slot", "type": "uint32_t"},
                    {"name": "buffer", "type": "buffer"},
                    {"name": "offset", "type": "uint64_t", "default": "0"},
                    {"name": "size", "type": "uint64_t", "default": "0"}
                ]
            },
            {
                "name": "set index buffer",
                "args": [
                    {"name": "buffer", "type": "buffer"},
                    {"name": "format", "type": "index format"},
                    {"name": "offset", "type": "uint64_t", "default": "0"},
                    {"name": "size", "type": "uint64_t", "default": "0"}
                ]
            },
            {
                "name": "set index buffer with format",
                "args": [
                    {"name": "buffer", "type": "buffer"},
                    {"name": "format", "type": "index format"},
                    {"name": "offset", "type": "uint64_t", "default": "0"},
                    {"name": "size", "type": "uint64_t", "default": "0"}
                ]
            },
            {
                "name": "finish",
                "returns": "render bundle",
                "args": [
                    {"name": "descriptor", "type": "render bundle descriptor", "annotation": "const*", "optional": true}
                ]
            }
        ]
    },

    "render bundle descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true}
        ]
    },

    "render bundle encoder descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "color formats count", "type": "uint32_t"},
            {"name": "color formats", "type": "texture format", "annotation": "const*", "length": "color formats count"},
            {"name": "depth stencil format", "type": "texture format", "default": "undefined"},
            {"name": "sample count", "type": "uint32_t", "default": "1"}
        ]
    },

    "render pass color attachment descriptor": {
        "category": "structure",
        "members": [
            {"name": "attachment", "type": "texture view"},
            {"name": "resolve target", "type": "texture view", "optional": true},
            {"name": "load op", "type": "load op"},
            {"name": "store op", "type": "store op"},
            {"name": "clear color", "type": "color"}
        ]
    },

    "render pass depth stencil attachment descriptor": {
        "category": "structure",
        "members": [
            {"name": "attachment", "type": "texture view"},
            {"name": "depth load op", "type": "load op"},
            {"name": "depth store op", "type": "store op"},
            {"name": "clear depth", "type": "float"},
            {"name": "depth read only", "type": "bool", "default": "false"},
            {"name": "stencil load op", "type": "load op"},
            {"name": "stencil store op", "type": "store op"},
            {"name": "clear stencil", "type": "uint32_t", "default": "0"},
            {"name": "stencil read only", "type": "bool", "default": "false"}
        ]
    },

    "render pass descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "color attachment count", "type": "uint32_t"},
            {"name": "color attachments", "type": "render pass color attachment descriptor", "annotation": "const*", "length": "color attachment count"},
            {"name": "depth stencil attachment", "type": "render pass depth stencil attachment descriptor", "annotation": "const*", "optional": true},
            {"name": "occlusion query set", "type": "query set", "optional": true}
        ]
    },
    "render pass encoder": {
        "category": "object",
        "methods": [
            {
                "name": "set pipeline",
                "args": [
                    {"name": "pipeline", "type": "render pipeline"}
                ]
            },
            {
                "name": "set bind group",
                "args": [
                    {"name": "group index", "type": "uint32_t"},
                    {"name": "group", "type": "bind group"},
                    {"name": "dynamic offset count", "type": "uint32_t", "default": "0"},
                    {"name": "dynamic offsets", "type": "uint32_t", "annotation": "const*", "length": "dynamic offset count", "optional": true}
                ]
            },
            {
                "name": "draw",
                "args": [
                    {"name": "vertex count", "type": "uint32_t"},
                    {"name": "instance count", "type": "uint32_t", "default": "1"},
                    {"name": "first vertex", "type": "uint32_t", "default": "0"},
                    {"name": "first instance", "type": "uint32_t",  "default": "0"}
                ]
            },
            {
                "name": "draw indexed",
                "args": [
                    {"name": "index count", "type": "uint32_t"},
                    {"name": "instance count", "type": "uint32_t", "default": "1"},
                    {"name": "first index", "type": "uint32_t", "default": "0"},
                    {"name": "base vertex", "type": "int32_t", "default": "0"},
                    {"name": "first instance", "type": "uint32_t", "default": "0"}
                ]
            },
            {
              "name": "draw indirect",
              "args": [
                    {"name": "indirect buffer", "type": "buffer"},
                    {"name": "indirect offset", "type": "uint64_t"}
              ]
            },
            {
              "name": "draw indexed indirect",
              "args": [
                    {"name": "indirect buffer", "type": "buffer"},
                    {"name": "indirect offset", "type": "uint64_t"}
              ]
            },
            {
              "name": "execute bundles",
              "args": [
                  {"name": "bundles count", "type": "uint32_t"},
                  {"name": "bundles", "type": "render bundle", "annotation": "const*", "length": "bundles count"}
              ]
            },
            {
                "name": "insert debug marker",
                "args": [
                    {"name": "marker label", "type": "char", "annotation": "const*", "length": "strlen"}
                ]
            },
            {
                "name": "pop debug group",
                "args": []
            },
            {
                "name": "push debug group",
                "args": [
                    {"name": "group label", "type": "char", "annotation": "const*", "length": "strlen"}
                ]
            },
            {
                "name": "set stencil reference",
                "args": [
                    {"name": "reference", "type": "uint32_t"}
                ]
            },
            {
                "name": "set blend color",
                "args": [
                    {"name": "color", "type": "color", "annotation": "const*"}
                ]
            },
            {
                "name": "set viewport",
                "args": [
                    {"name": "x", "type": "float"},
                    {"name": "y", "type": "float"},
                    {"name": "width", "type": "float"},
                    {"name": "height", "type": "float"},
                    {"name": "min depth", "type": "float"},
                    {"name": "max depth", "type": "float"}
                ]
            },
            {
                "name": "set scissor rect",
                "args": [
                    {"name": "x", "type": "uint32_t"},
                    {"name": "y", "type": "uint32_t"},
                    {"name": "width", "type": "uint32_t"},
                    {"name": "height", "type": "uint32_t"}
                ]
            },
            {
                "name": "set vertex buffer",
                "args": [
                    {"name": "slot", "type": "uint32_t"},
                    {"name": "buffer", "type": "buffer"},
                    {"name": "offset", "type": "uint64_t", "default": "0"},
                    {"name": "size", "type": "uint64_t", "default": "0"}
                ]
            },
            {
                "name": "set index buffer",
                "args": [
                    {"name": "buffer", "type": "buffer"},
                    {"name": "format", "type": "index format"},
                    {"name": "offset", "type": "uint64_t", "default": "0"},
                    {"name": "size", "type": "uint64_t", "default": "0"}
                ]
            },
            {
                "name": "set index buffer with format",
                "args": [
                    {"name": "buffer", "type": "buffer"},
                    {"name": "format", "type": "index format"},
                    {"name": "offset", "type": "uint64_t", "default": "0"},
                    {"name": "size", "type": "uint64_t", "default": "0"}
                ]
            },
            {
                "name": "begin occlusion query",
                "args": [
                    {"name": "query index", "type": "uint32_t"}
                ]
            },
            {
                "name": "end occlusion query"
            },
            {
                "name": "write timestamp",
                "args": [
                    {"name": "query set", "type": "query set"},
                    {"name": "query index", "type": "uint32_t"}
                ]
            },
            {
                "name": "end pass"
            }
        ]
    },
    "render pipeline": {
        "category": "object",
        "methods": [
            {
                "name": "get bind group layout",
                "returns": "bind group layout",
                "args": [
                    {"name": "group index", "type": "uint32_t"}
                ]
            }
        ]
    },

    "vertex state": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "module", "type": "shader module"},
            {"name": "entry point", "type": "char", "annotation": "const*", "length": "strlen"},
            {"name": "buffer count", "type": "uint32_t"},
            {"name": "buffers", "type": "vertex buffer layout", "annotation": "const*", "length": "buffer count"}
        ]
    },

    "primitive state": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "topology", "type": "primitive topology", "default": "triangle list"},
            {"name": "strip index format", "type": "index format", "default": "undefined"},
            {"name": "front face", "type": "front face", "default": "CCW"},
            {"name": "cull mode", "type": "cull mode", "default": "none"}
        ]
    },

    "primitive depth clamping state": {
        "category": "structure",
        "chained": true,
        "members": [
            {"name": "clamp depth", "type": "bool", "default": "false"}
        ]
    },

    "depth stencil state": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "format", "type": "texture format"},
            {"name": "depth write enabled", "type": "bool", "default": "false"},
            {"name": "depth compare", "type": "compare function", "default": "always"},
            {"name": "stencil front", "type": "stencil face state"},
            {"name": "stencil back", "type": "stencil face state"},
            {"name": "stencil read mask", "type": "uint32_t", "default": "0xFFFFFFFF"},
            {"name": "stencil write mask", "type": "uint32_t", "default": "0xFFFFFFFF"},
            {"name": "depth bias", "type": "int32_t", "default": "0"},
            {"name": "depth bias slope scale", "type": "float", "default": "0.0f"},
            {"name": "depth bias clamp", "type": "float", "default": "0.0f"}
        ]
    },

    "multisample state": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "count", "type": "uint32_t", "default": "1"},
            {"name": "mask", "type": "uint32_t", "default": "0xFFFFFFFF"},
            {"name": "alpha to coverage enabled", "type": "bool", "default": "false"}
        ]
    },

    "fragment state": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "module", "type": "shader module"},
            {"name": "entry point", "type": "char", "annotation": "const*", "length": "strlen"},
            {"name": "target count", "type": "uint32_t"},
            {"name": "targets", "type": "color target state", "annotation": "const*", "length": "target count"}
        ]
    },
    "color target state": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "format", "type": "texture format"},
            {"name": "blend", "type": "blend state", "annotation": "const*", "optional": true},
            {"name": "write mask", "type": "color write mask", "default": "all"}
        ]
    },
    "blend state": {
        "category": "structure",
        "extensible": false,
        "members": [
            {"name": "color", "type": "blend component"},
            {"name": "alpha", "type": "blend component"}
        ]
    },

    "render pipeline descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "layout", "type": "pipeline layout", "optional": true},
            {"name": "vertex stage", "type": "programmable stage descriptor"},
            {"name": "fragment stage", "type": "programmable stage descriptor", "annotation": "const*", "optional": true},
            {"name": "vertex state", "type": "vertex state descriptor", "annotation": "const*", "optional": true},
            {"name": "primitive topology", "type": "primitive topology"},
            {"name": "rasterization state", "type": "rasterization state descriptor", "annotation": "const*", "optional": true},
            {"name": "sample count", "type": "uint32_t", "default": "1"},
            {"name": "depth stencil state", "type": "depth stencil state descriptor", "annotation": "const*", "optional": true},
            {"name": "color state count", "type": "uint32_t"},
            {"name": "color states", "type": "color state descriptor", "annotation": "const*", "length": "color state count"},
            {"name": "sample mask", "type": "uint32_t", "default": "0xFFFFFFFF"},
            {"name": "alpha to coverage enabled", "type": "bool", "default": "false"}
        ]
    },

    "render pipeline descriptor 2": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "layout", "type": "pipeline layout", "optional": true},
            {"name": "vertex", "type": "vertex state"},
            {"name": "primitive", "type": "primitive state"},
            {"name": "depth stencil", "type": "depth stencil state", "annotation": "const*", "optional": true},
            {"name": "multisample", "type": "multisample state"},
            {"name": "fragment", "type": "fragment state", "annotation": "const*", "optional": true}
        ]
    },

    "render pipeline descriptor dummy extension": {
        "category": "structure",
        "chained": true,
        "members": [
            {"name": "dummy stage", "type": "programmable stage descriptor"}
        ]
    },
    "sampler": {
        "category": "object"
    },
    "sampler descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "address mode u", "type": "address mode", "default": "clamp to edge"},
            {"name": "address mode v", "type": "address mode", "default": "clamp to edge"},
            {"name": "address mode w", "type": "address mode", "default": "clamp to edge"},
            {"name": "mag filter", "type": "filter mode", "default": "nearest"},
            {"name": "min filter", "type": "filter mode", "default": "nearest"},
            {"name": "mipmap filter", "type": "filter mode", "default": "nearest"},
            {"name": "lod min clamp", "type": "float", "default": "0.0f"},
            {"name": "lod max clamp", "type": "float", "default": "1000.0f"},
            {"name": "compare", "type": "compare function", "default": "undefined"},
            {"name": "max anisotropy", "type": "uint16_t", "default": "1"}
        ]
    },
    "sampler descriptor dummy anisotropic filtering": {
        "category": "structure",
        "chained": true,
        "members": [
            {"name": "max anisotropy", "type": "float"}
        ]
    },
    "shader module": {
        "category": "object",
        "methods": [
            {
                "name": "get compilation info",
                "args": [
                    {"name": "callback", "type": "compilation info callback"},
                    {"name": "userdata", "type": "void", "annotation": "*"}
                ]
            }
        ]
    },
    "shader module descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true}
        ]
    },
    "shader module SPIRV descriptor": {
        "category": "structure",
        "chained": true,
        "members": [
            {"name": "code size", "type": "uint32_t"},
            {"name": "code", "type": "uint32_t", "annotation": "const*", "length": "code size"}
        ]
    },
    "shader module WGSL descriptor": {
        "category": "structure",
        "chained": true,
        "members": [
            {"name": "source", "type": "char", "annotation": "const*", "length": "strlen"}
        ]
    },
    "shader stage": {
        "category": "bitmask",
        "values": [
            {"value": 0, "name": "none"},
            {"value": 1, "name": "vertex"},
            {"value": 2, "name": "fragment"},
            {"value": 4, "name": "compute"}
        ]
    },
    "stencil operation": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "keep"},
            {"value": 1, "name": "zero"},
            {"value": 2, "name": "replace"},
            {"value": 3, "name": "invert"},
            {"value": 4, "name": "increment clamp"},
            {"value": 5, "name": "decrement clamp"},
            {"value": 6, "name": "increment wrap"},
            {"value": 7, "name": "decrement wrap"}
        ]
    },
    "stencil face state": {
        "category": "structure",
        "extensible": false,
        "members": [
            {"name": "compare", "type": "compare function", "default": "always"},
            {"name": "fail op", "type": "stencil operation", "default": "keep"},
            {"name": "depth fail op", "type": "stencil operation", "default": "keep"},
            {"name": "pass op", "type": "stencil operation", "default": "keep"}
        ]
    },
    "stencil state face descriptor": {
        "category": "typedef",
        "type": "stencil face state"
    },
    "surface": {
        "category": "object"
    },
    "surface descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true}
        ]
    },
    "surface descriptor from canvas HTML selector": {
        "category": "structure",
        "chained": true,
        "members": [
            {"name": "selector", "type": "char", "annotation": "const*", "length": "strlen"}
        ]
    },
    "surface descriptor from metal layer": {
        "category": "structure",
        "chained": true,
        "javascript": false,
        "members": [
            {"name": "layer", "type": "void", "annotation": "*"}
        ]
    },
    "surface descriptor from windows HWND": {
        "category": "structure",
        "chained": true,
        "javascript": false,
        "members": [
            {"name": "hinstance", "type": "void", "annotation": "*"},
            {"name": "hwnd", "type": "void", "annotation": "*"}
        ]
    },
    "surface descriptor from xlib": {
        "category": "structure",
        "chained": true,
        "javascript": false,
        "members": [
            {"name": "display", "type": "void", "annotation": "*"},
            {"name": "window", "type": "uint32_t"}
        ]
    },
    "swap chain": {
        "category": "object",
        "methods": [
            {
                "name": "configure",
                "args": [
                    {"name": "format", "type": "texture format"},
                    {"name": "allowed usage", "type": "texture usage"},
                    {"name": "width", "type": "uint32_t"},
                    {"name": "height", "type": "uint32_t"}
                ]
            },
            {"name": "get current texture view", "returns": "texture view"},
            {"name": "present"}
        ]
    },
    "swap chain descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "usage", "type": "texture usage"},
            {"name": "format", "type": "texture format"},
            {"name": "width", "type": "uint32_t"},
            {"name": "height", "type": "uint32_t"},
            {"name": "present mode", "type": "present mode"},
            {"name": "implementation", "type": "uint64_t", "default": 0}
        ]
    },
    "s type": {
        "category": "enum",
        "javascript": false,
        "values": [
            {"value": 0, "name": "invalid", "valid": false},
            {"value": 1, "name": "surface descriptor from metal layer"},
            {"value": 2, "name": "surface descriptor from windows HWND"},
            {"value": 3, "name": "surface descriptor from xlib"},
            {"value": 4, "name": "surface descriptor from canvas HTML selector"},
            {"value": 5, "name": "shader module SPIRV descriptor"},
            {"value": 6, "name": "shader module WGSL descriptor"},
            {"value": 7, "name": "sampler descriptor dummy anisotropic filtering"},
            {"value": 8, "name": "render pipeline descriptor dummy extension"},
            {"value": 9, "name": "primitive depth clamping state"}
        ]
    },
    "texture": {
        "category": "object",
        "methods": [
            {
                "name": "create view",
                "returns": "texture view",
                "args": [
                    {"name": "descriptor", "type": "texture view descriptor", "annotation": "const*", "optional": true}
                ]
            },
            {
                "name": "destroy"
            }
        ]
    },
    "texture aspect": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "all"},
            {"value": 1, "name": "stencil only"},
            {"value": 2, "name": "depth only"},
            {"value": 3, "name": "plane 0 only"},
            {"value": 4, "name": "plane 1 only"}
        ]
    },
    "texture component type": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "float"},
            {"value": 1, "name": "sint"},
            {"value": 2, "name": "uint"},
            {"value": 3, "name": "depth comparison"}
        ]
    },
    "texture copy view": {
        "category": "typedef",
        "type": "image copy texture"
    },
    "texture data layout": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "offset", "type": "uint64_t", "default": 0},
            {"name": "bytes per row", "type": "uint32_t", "default": "WGPU_COPY_STRIDE_UNDEFINED"},
            {"name": "rows per image", "type": "uint32_t", "default": "WGPU_COPY_STRIDE_UNDEFINED"}
        ]
    },
    "texture descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "usage", "type": "texture usage"},
            {"name": "dimension", "type": "texture dimension", "default": "2D"},
            {"name": "size", "type": "extent 3D"},
            {"name": "format", "type": "texture format"},
            {"name": "mip level count", "type": "uint32_t", "default": 1},
            {"name": "sample count", "type": "uint32_t", "default": 1}
        ]
    },
    "texture dimension": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "1D"},
            {"value": 1, "name": "2D"},
            {"value": 2, "name": "3D"}
        ]
    },
    "texture format": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "undefined", "valid": false, "jsrepr": "undefined"},
            {"value": 1, "name": "R8 unorm"},
            {"value": 2, "name": "R8 snorm"},
            {"value": 3, "name": "R8 uint"},
            {"value": 4, "name": "R8 sint"},

            {"value": 5, "name": "R16 uint"},
            {"value": 6, "name": "R16 sint"},
            {"value": 7, "name": "R16 float"},
            {"value": 8, "name": "RG8 unorm"},
            {"value": 9, "name": "RG8 snorm"},
            {"value": 10, "name": "RG8 uint"},
            {"value": 11, "name": "RG8 sint"},

            {"value": 12, "name": "R32 float"},
            {"value": 13, "name": "R32 uint"},
            {"value": 14, "name": "R32 sint"},
            {"value": 15, "name": "RG16 uint"},
            {"value": 16, "name": "RG16 sint"},
            {"value": 17, "name": "RG16 float"},
            {"value": 18, "name": "RGBA8 unorm"},
            {"value": 19, "name": "RGBA8 unorm srgb"},
            {"value": 20, "name": "RGBA8 snorm"},
            {"value": 21, "name": "RGBA8 uint"},
            {"value": 22, "name": "RGBA8 sint"},
            {"value": 23, "name": "BGRA8 unorm"},
            {"value": 24, "name": "BGRA8 unorm srgb"},
            {"value": 25, "name": "RGB10 A2 unorm"},
            {"value": 26, "name": "RG11 B10 ufloat"},
            {"value": 27, "name": "RGB9 E5 ufloat"},

            {"value": 28, "name": "RG32 float"},
            {"value": 29, "name": "RG32 uint"},
            {"value": 30, "name": "RG32 sint"},
            {"value": 31, "name": "RGBA16 uint"},
            {"value": 32, "name": "RGBA16 sint"},
            {"value": 33, "name": "RGBA16 float"},

            {"value": 34, "name": "RGBA32 float"},
            {"value": 35, "name": "RGBA32 uint"},
            {"value": 36, "name": "RGBA32 sint"},

            {"value": 37, "name": "depth32 float"},
            {"value": 38, "name": "depth24 plus"},
            {"value": 39, "name": "stencil8"},
            {"value": 40, "name": "depth24 plus stencil8"},

            {"value": 41, "name": "BC1 RGBA unorm"},
            {"value": 42, "name": "BC1 RGBA unorm srgb"},
            {"value": 43, "name": "BC2 RGBA unorm"},
            {"value": 44, "name": "BC2 RGBA unorm srgb"},
            {"value": 45, "name": "BC3 RGBA unorm"},
            {"value": 46, "name": "BC3 RGBA unorm srgb"},
            {"value": 47, "name": "BC4 R unorm"},
            {"value": 48, "name": "BC4 R snorm"},
            {"value": 49, "name": "BC5 RG unorm"},
            {"value": 50, "name": "BC5 RG snorm"},
            {"value": 51, "name": "BC6H RGB ufloat"},
            {"value": 52, "name": "BC6H RGB float"},
            {"value": 53, "name": "BC7 RGBA unorm"},
            {"value": 54, "name": "BC7 RGBA unorm srgb"},
            {"value": 55, "name": "R8 BG8 Biplanar 420 unorm"}
        ]
    },
    "texture usage": {
        "category": "bitmask",
        "values": [
            {"value": 0, "name": "none"},
            {"value": 1, "name": "copy src"},
            {"value": 2, "name": "copy dst"},
            {"value": 4, "name": "sampled"},
            {"value": 8, "name": "storage"},
            {"value": 16, "name": "output attachment"},
            {"value": 16, "name": "render attachment"},
            {"value": 32, "name": "present"}
        ]
    },
    "texture view descriptor": {
        "category": "structure",
        "extensible": true,
        "members": [
            {"name": "label", "type": "char", "annotation": "const*", "length": "strlen", "optional": true},
            {"name": "format", "type": "texture format", "default": "undefined"},
            {"name": "dimension", "type": "texture view dimension", "default": "undefined"},
            {"name": "base mip level", "type": "uint32_t", "default": "0"},
            {"name": "mip level count", "type": "uint32_t", "default": "0"},
            {"name": "base array layer", "type": "uint32_t", "default": "0"},
            {"name": "array layer count", "type": "uint32_t", "default": "0"},
            {"name": "aspect", "type": "texture aspect", "default": "all"}
        ]
    },
    "texture view": {
        "category": "object"
    },
    "texture view dimension": {
        "category": "enum",
        "values": [
            {"value": 0, "name": "undefined", "valid": false, "jsrepr": "undefined"},
            {"value": 1, "name": "1D"},
            {"value": 2, "name": "2D"},
            {"value": 3, "name": "2D array"},
            {"value": 4, "name": "cube"},
            {"value": 5, "name": "cube array"},
            {"value": 6, "name": "3D"}
        ]
    },
    "vertex format": {
        "category": "enum",
        "values": [
            {"value": 0,  "name": "undefined", "valid": false, "jsrepr": "undefined"},
            {"value": 1,  "name": "uint8x2"},
            {"value": 2,  "name": "uint8x4"},
            {"value": 3,  "name": "sint8x2"},
            {"value": 4,  "name": "sint8x4"},
            {"value": 5,  "name": "unorm8x2"},
            {"value": 6,  "name": "unorm8x4"},
            {"value": 7,  "name": "snorm8x2"},
            {"value": 8,  "name": "snorm8x4"},
            {"value": 9,  "name": "uint16x2"},
            {"value": 10, "name": "uint16x4"},
            {"value": 11, "name": "sint16x2"},
            {"value": 12, "name": "sint16x4"},
            {"value": 13, "name": "unorm16x2"},
            {"value": 14, "name": "unorm16x4"},
            {"value": 15, "name": "snorm16x2"},
            {"value": 16, "name": "snorm16x4"},
            {"value": 17, "name": "float16x2"},
            {"value": 18, "name": "float16x4"},
            {"value": 19, "name": "float32"},
            {"value": 20, "name": "float32x2"},
            {"value": 21, "name": "float32x3"},
            {"value": 22, "name": "float32x4"},
            {"value": 23, "name": "uint32"},
            {"value": 24, "name": "uint32x2"},
            {"value": 25, "name": "uint32x3"},
            {"value": 26, "name": "uint32x4"},
            {"value": 27, "name": "sint32"},
            {"value": 28, "name": "sint32x2"},
            {"value": 29, "name": "sint32x3"},
            {"value": 30, "name": "sint32x4"},

            {"value": 101, "name": "uChar2"},
            {"value": 102, "name": "uChar4"},
            {"value": 103, "name": "char2"},
            {"value": 104, "name": "char4"},
            {"value": 105, "name": "uChar2 norm"},
            {"value": 106, "name": "uChar4 norm"},
            {"value": 107, "name": "char2 norm"},
            {"value": 108, "name": "char4 norm"},
            {"value": 109, "name": "uShort2"},
            {"value": 110, "name": "uShort4"},
            {"value": 111, "name": "short2"},
            {"value": 112, "name": "short4"},
            {"value": 113, "name": "uShort2 norm"},
            {"value": 114, "name": "uShort4 norm"},
            {"value": 115, "name": "short2 norm"},
            {"value": 116, "name": "short4 norm"},
            {"value": 117, "name": "half2"},
            {"value": 118, "name": "half4"},
            {"value": 119, "name": "float"},
            {"value": 120, "name": "float2"},
            {"value": 121, "name": "float3"},
            {"value": 122, "name": "float4"},
            {"value": 123, "name": "uInt"},
            {"value": 124, "name": "uInt2"},
            {"value": 125, "name": "uInt3"},
            {"value": 126, "name": "uInt4"},
            {"value": 127, "name": "int"},
            {"value": 128, "name": "int2"},
            {"value": 129, "name": "int3"},
            {"value": 130, "name": "int4"}
        ]
    },
    "ObjectType": {
      "_comment": "Only used for the wire",
      "category": "native"
    },
    "ObjectId": {
      "_comment": "Only used for the wire",
      "category": "native"
    },
    "ObjectHandle": {
      "_comment": "Only used for the wire",
      "category": "native"
    },
    "void": {
        "category": "native"
    },
    "void *": {
        "category": "native"
    },
    "void const *": {
        "category": "native"
    },
    "int32_t": {
        "category": "native"
    },
    "size_t": {
        "category": "native"
    },
    "uint16_t": {
        "category": "native"
    },
    "uint32_t": {
        "category": "native"
    },
    "uint64_t": {
        "category": "native"
    },
    "uint8_t": {
        "category": "native"
    }
}
