; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 71
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpName %v2f "v2f"
               OpName %v3i "v3i"
               OpName %v4u "v4u"
               OpName %v2b "v2b"
               OpName %foo "foo"
               OpName %i "i"
               OpName %main "main"
               OpName %i_0 "i"
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%_ptr_Private_v2float = OpTypePointer Private %v2float
          %5 = OpConstantNull %v2float
        %v2f = OpVariable %_ptr_Private_v2float Private %5
        %int = OpTypeInt 32 1
      %v3int = OpTypeVector %int 3
%_ptr_Private_v3int = OpTypePointer Private %v3int
         %10 = OpConstantNull %v3int
        %v3i = OpVariable %_ptr_Private_v3int Private %10
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
%_ptr_Private_v4uint = OpTypePointer Private %v4uint
         %15 = OpConstantNull %v4uint
        %v4u = OpVariable %_ptr_Private_v4uint Private %15
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
%_ptr_Private_v2bool = OpTypePointer Private %v2bool
         %20 = OpConstantNull %v2bool
        %v2b = OpVariable %_ptr_Private_v2bool Private %20
       %void = OpTypeVoid
         %21 = OpTypeFunction %void
         %25 = OpConstantNull %int
%_ptr_Function_int = OpTypePointer Function %int
      %int_2 = OpConstant %int 2
%_ptr_Private_float = OpTypePointer Private %float
    %float_1 = OpConstant %float 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_1 = OpConstant %int 1
%_ptr_Private_uint = OpTypePointer Private %uint
     %uint_1 = OpConstant %uint 1
%_ptr_Private_bool = OpTypePointer Private %bool
       %true = OpConstantTrue %bool
        %foo = OpFunction %void None %21
         %24 = OpLabel
          %i = OpVariable %_ptr_Function_int Function %25
               OpStore %i %25
               OpBranch %28
         %28 = OpLabel
               OpLoopMerge %29 %30 None
               OpBranch %31
         %31 = OpLabel
         %33 = OpLoad %int %i
         %35 = OpSLessThan %bool %33 %int_2
         %32 = OpLogicalNot %bool %35
               OpSelectionMerge %36 None
               OpBranchConditional %32 %37 %36
         %37 = OpLabel
               OpBranch %29
         %36 = OpLabel
         %38 = OpLoad %int %i
         %40 = OpAccessChain %_ptr_Private_float %v2f %38
               OpStore %40 %float_1
         %42 = OpLoad %int %i
         %44 = OpAccessChain %_ptr_Private_int %v3i %42
               OpStore %44 %int_1
         %46 = OpLoad %int %i
         %48 = OpAccessChain %_ptr_Private_uint %v4u %46
               OpStore %48 %uint_1
         %50 = OpLoad %int %i
         %52 = OpAccessChain %_ptr_Private_bool %v2b %50
               OpStore %52 %true
               OpBranch %30
         %30 = OpLabel
         %54 = OpLoad %int %i
         %55 = OpIAdd %int %54 %int_1
               OpStore %i %55
               OpBranch %28
         %29 = OpLabel
               OpReturn
               OpFunctionEnd
       %main = OpFunction %void None %21
         %57 = OpLabel
        %i_0 = OpVariable %_ptr_Function_int Function %25
               OpStore %i_0 %25
               OpBranch %59
         %59 = OpLabel
               OpLoopMerge %60 %61 None
               OpBranch %62
         %62 = OpLabel
         %64 = OpLoad %int %i_0
         %65 = OpSLessThan %bool %64 %int_2
         %63 = OpLogicalNot %bool %65
               OpSelectionMerge %66 None
               OpBranchConditional %63 %67 %66
         %67 = OpLabel
               OpBranch %60
         %66 = OpLabel
         %68 = OpFunctionCall %void %foo
               OpBranch %61
         %61 = OpLabel
         %69 = OpLoad %int %i_0
         %70 = OpIAdd %int %69 %int_1
               OpStore %i_0 %70
               OpBranch %59
         %60 = OpLabel
               OpReturn
               OpFunctionEnd
