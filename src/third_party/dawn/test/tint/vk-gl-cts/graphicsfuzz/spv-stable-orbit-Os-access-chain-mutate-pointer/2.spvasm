               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %gl_FragCoord %_GLF_color
               OpExecutionMode %main OriginUpperLeft
               OpSource ESSL 320
               OpName %main "main"
               OpName %gl_FragCoord "gl_FragCoord"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "resolution"
               OpName %_ ""
               OpName %_GLF_color "_GLF_color"
               OpName %indexable "indexable"
               OpDecorate %gl_FragCoord BuiltIn FragCoord
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %buf0 Block
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %_GLF_color Location 0
       %void = OpTypeVoid
          %9 = OpTypeFunction %void
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
       %uint = OpTypeInt 32 0
      %int_0 = OpConstant %int 0
       %bool = OpTypeBool
      %int_1 = OpConstant %int 1
      %int_2 = OpConstant %int 2
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
    %v4float = OpTypeVector %float 4
%_ptr_Input_v4float = OpTypePointer Input %v4float
%gl_FragCoord = OpVariable %_ptr_Input_v4float Input
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
          %_ = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
    %float_8 = OpConstant %float 8
      %int_5 = OpConstant %int 5
     %int_10 = OpConstant %int 10
      %int_8 = OpConstant %int 8
    %int_100 = OpConstant %int 100
     %int_15 = OpConstant %int 15
     %int_16 = OpConstant %int 16
%_ptr_Output_v4float = OpTypePointer Output %v4float
 %_GLF_color = OpVariable %_ptr_Output_v4float Output
    %uint_16 = OpConstant %uint 16
%_arr_v4float_uint_16 = OpTypeArray %v4float %uint_16
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
         %35 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_1
  %float_0_5 = OpConstant %float 0.5
         %37 = OpConstantComposite %v4float %float_0_5 %float_0 %float_0 %float_1
         %38 = OpConstantComposite %v4float %float_0 %float_0_5 %float_0 %float_1
         %39 = OpConstantComposite %v4float %float_0_5 %float_0_5 %float_0 %float_1
         %40 = OpConstantComposite %v4float %float_0 %float_0 %float_0_5 %float_1
         %41 = OpConstantComposite %v4float %float_0_5 %float_0 %float_0_5 %float_1
         %42 = OpConstantComposite %v4float %float_0 %float_0_5 %float_0_5 %float_1
         %43 = OpConstantComposite %v4float %float_0_5 %float_0_5 %float_0_5 %float_1
         %44 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
         %45 = OpConstantComposite %v4float %float_0 %float_1 %float_0 %float_1
         %46 = OpConstantComposite %v4float %float_1 %float_1 %float_0 %float_1
         %47 = OpConstantComposite %v4float %float_0 %float_0 %float_1 %float_1
         %48 = OpConstantComposite %v4float %float_1 %float_0 %float_1 %float_1
         %49 = OpConstantComposite %v4float %float_0 %float_1 %float_1 %float_1
         %50 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
         %51 = OpConstantComposite %_arr_v4float_uint_16 %35 %37 %38 %39 %40 %41 %42 %43 %35 %44 %45 %46 %47 %48 %49 %50
%_ptr_Function__arr_v4float_uint_16 = OpTypePointer Function %_arr_v4float_uint_16
%_ptr_Function_v4float = OpTypePointer Function %v4float
  %float_0_0 = OpConstant %float 0
         %55 = OpConstantComposite %v4float %float_0_0 %float_0_0 %float_0_0 %float_0_0
         %56 = OpConstantComposite %_arr_v4float_uint_16 %55 %55 %55 %55 %55 %55 %55 %55 %55 %55 %55 %55 %55 %55 %55 %55
       %main = OpFunction %void None %9
         %57 = OpLabel
  %indexable = OpVariable %_ptr_Function__arr_v4float_uint_16 Function
         %58 = OpLoad %v4float %gl_FragCoord
         %59 = OpVectorShuffle %v2float %58 %58 0 1
         %60 = OpAccessChain %_ptr_Uniform_v2float %_ %int_0
         %61 = OpLoad %v2float %60
         %62 = OpFDiv %v2float %59 %61
         %63 = OpCompositeExtract %float %62 0
         %64 = OpFMul %float %63 %float_8
         %65 = OpConvertFToS %int %64
         %66 = OpAccessChain %_ptr_Function__arr_v4float_uint_16 %indexable
         %67 = OpCompositeExtract %float %62 1
         %68 = OpFMul %float %67 %float_8
         %69 = OpConvertFToS %int %68
         %70 = OpBitwiseAnd %int %65 %int_5
         %71 = OpBitwiseAnd %int %69 %int_10
         %72 = OpBitwiseOr %int %70 %71
         %73 = OpBitwiseAnd %int %69 %int_5
         %74 = OpBitwiseAnd %int %65 %int_10
         %75 = OpBitwiseOr %int %73 %74
         %76 = OpIMul %int %72 %int_8
         %77 = OpIAdd %int %76 %75
         %78 = OpCompositeConstruct %v2int %77 %int_0
               OpBranch %79
         %79 = OpLabel
         %80 = OpPhi %v2int %78 %57 %81 %82
         %83 = OpPhi %int %int_0 %57 %84 %82
         %85 = OpSLessThan %bool %83 %int_100
               OpLoopMerge %86 %82 None
               OpBranchConditional %85 %87 %86
         %87 = OpLabel
         %88 = OpCompositeExtract %int %80 0
         %89 = OpSGreaterThan %bool %88 %int_0
               OpSelectionMerge %90 None
               OpBranchConditional %89 %91 %90
         %91 = OpLabel
         %92 = OpCompositeExtract %int %80 1
         %93 = OpISub %int %92 %int_1
         %94 = OpCompositeInsert %v2int %93 %80 1
               OpBranch %90
         %90 = OpLabel
         %95 = OpPhi %v2int %80 %87 %94 %91
         %96 = OpCompositeExtract %int %95 0
         %97 = OpSLessThan %bool %96 %int_0
               OpSelectionMerge %98 None
               OpBranchConditional %97 %99 %98
         %99 = OpLabel
        %100 = OpCompositeExtract %int %95 1
        %101 = OpIAdd %int %100 %int_1
        %102 = OpCompositeInsert %v2int %101 %95 1
               OpBranch %98
         %98 = OpLabel
        %103 = OpPhi %v2int %95 %90 %102 %99
        %104 = OpCompositeExtract %int %103 1
        %105 = OpSDiv %int %104 %int_2
        %106 = OpCompositeExtract %int %103 0
        %107 = OpIAdd %int %106 %105
         %81 = OpCompositeInsert %v2int %107 %103 0
               OpBranch %82
         %82 = OpLabel
         %84 = OpIAdd %int %83 %int_1
               OpBranch %79
         %86 = OpLabel
        %108 = OpCompositeExtract %int %80 0
        %109 = OpSLessThan %bool %108 %int_0
               OpSelectionMerge %110 None
               OpBranchConditional %109 %111 %110
        %111 = OpLabel
        %112 = OpSNegate %int %108
        %113 = OpCompositeInsert %v2int %112 %80 0
               OpBranch %110
        %110 = OpLabel
        %114 = OpPhi %v2int %80 %86 %113 %111
               OpBranch %115
        %115 = OpLabel
        %116 = OpPhi %v2int %114 %110 %117 %118
        %119 = OpCompositeExtract %int %116 0
        %120 = OpSGreaterThan %bool %119 %int_15
               OpLoopMerge %121 %118 None
               OpBranchConditional %120 %118 %121
        %118 = OpLabel
        %122 = OpISub %int %119 %int_16
        %117 = OpCompositeInsert %v2int %122 %116 0
               OpBranch %115
        %121 = OpLabel
               OpStore %indexable %51
        %123 = OpAccessChain %_ptr_Function_v4float %indexable %119
        %124 = OpLoad %v4float %123
               OpStore %_GLF_color %124
               OpReturn
               OpFunctionEnd
