               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %_GLF_color
               OpExecutionMode %main OriginUpperLeft
               OpSource ESSL 320
               OpName %main "main"
               OpName %arr "arr"
               OpName %a "a"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "_GLF_uniform_int_values"
               OpName %_ ""
               OpName %i "i"
               OpName %_GLF_color "_GLF_color"
               OpDecorate %_arr_int_uint_3 ArrayStride 16
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %buf0 Block
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %_GLF_color Location 0
       %void = OpTypeVoid
         %11 = OpTypeFunction %void
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %uint_10 = OpConstant %uint 10
%_arr_int_uint_10 = OpTypeArray %int %uint_10
%_ptr_Function__arr_int_uint_10 = OpTypePointer Function %_arr_int_uint_10
      %int_1 = OpConstant %int 1
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
      %int_4 = OpConstant %int 4
      %int_5 = OpConstant %int 5
      %int_6 = OpConstant %int 6
      %int_7 = OpConstant %int 7
      %int_8 = OpConstant %int 8
      %int_9 = OpConstant %int 9
     %int_10 = OpConstant %int 10
         %27 = OpConstantComposite %_arr_int_uint_10 %int_1 %int_2 %int_3 %int_4 %int_5 %int_6 %int_7 %int_8 %int_9 %int_10
%_ptr_Function_int = OpTypePointer Function %int
      %int_0 = OpConstant %int 0
     %uint_3 = OpConstant %uint 3
%_arr_int_uint_3 = OpTypeArray %int %uint_3
       %buf0 = OpTypeStruct %_arr_int_uint_3
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
          %_ = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Uniform_int = OpTypePointer Uniform %int
       %bool = OpTypeBool
     %int_n1 = OpConstant %int -1
      %v2int = OpTypeVector %int 2
     %uint_1 = OpConstant %uint 1
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
 %_GLF_color = OpVariable %_ptr_Output_v4float Output
       %main = OpFunction %void None %11
         %40 = OpLabel
        %arr = OpVariable %_ptr_Function__arr_int_uint_10 Function
          %a = OpVariable %_ptr_Function_int Function
          %i = OpVariable %_ptr_Function_int Function
               OpStore %arr %27
               OpStore %a %int_0
         %41 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_1
         %42 = OpLoad %int %41
         %43 = OpAccessChain %_ptr_Function_int %arr %42
         %44 = OpLoad %int %43
         %45 = OpIEqual %bool %44 %int_2
               OpSelectionMerge %46 None
               OpBranchConditional %45 %47 %46
         %47 = OpLabel
         %48 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_2
         %49 = OpLoad %int %48
               OpStore %i %49
               OpBranch %50
         %50 = OpLabel
               OpLoopMerge %51 %52 None
               OpBranch %53
         %53 = OpLabel
         %54 = OpLoad %int %i
         %55 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_0
         %56 = OpLoad %int %55
         %57 = OpSLessThan %bool %54 %56
               OpBranchConditional %57 %58 %51
         %58 = OpLabel
               OpBranch %52
         %52 = OpLabel
         %59 = OpLoad %int %i
         %60 = OpIAdd %int %59 %int_1
               OpStore %i %60
               OpBranch %50
         %51 = OpLabel
         %61 = OpLoad %int %a
         %62 = OpIAdd %int %61 %int_1
               OpStore %a %62
               OpBranch %46
         %46 = OpLabel
         %63 = OpLoad %int %a
         %64 = OpSMod %int %int_n1 %63
         %65 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_2
         %66 = OpLoad %int %65
         %67 = OpIEqual %bool %64 %66
               OpSelectionMerge %68 None
               OpBranchConditional %67 %69 %68
         %69 = OpLabel
         %70 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_1
         %71 = OpLoad %int %70
         %72 = OpCompositeConstruct %v2int %71 %71
         %73 = OpCompositeExtract %int %72 1
         %74 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_2
         %75 = OpLoad %int %74
         %76 = OpAccessChain %_ptr_Function_int %arr %73
               OpStore %76 %75
               OpBranch %68
         %68 = OpLabel
         %77 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_1
         %78 = OpLoad %int %77
         %79 = OpAccessChain %_ptr_Function_int %arr %78
         %80 = OpLoad %int %79
         %81 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_2
         %82 = OpLoad %int %81
         %83 = OpIEqual %bool %80 %82
               OpSelectionMerge %84 None
               OpBranchConditional %83 %85 %86
         %85 = OpLabel
         %87 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_1
         %88 = OpLoad %int %87
         %89 = OpConvertSToF %float %88
         %90 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_2
         %91 = OpLoad %int %90
         %92 = OpConvertSToF %float %91
         %93 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_2
         %94 = OpLoad %int %93
         %95 = OpConvertSToF %float %94
         %96 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_1
         %97 = OpLoad %int %96
         %98 = OpConvertSToF %float %97
         %99 = OpCompositeConstruct %v4float %89 %92 %95 %98
               OpStore %_GLF_color %99
               OpBranch %84
         %86 = OpLabel
        %100 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_2
        %101 = OpLoad %int %100
        %102 = OpConvertSToF %float %101
        %103 = OpCompositeConstruct %v4float %102 %102 %102 %102
               OpStore %_GLF_color %103
               OpBranch %84
         %84 = OpLabel
               OpReturn
               OpFunctionEnd
