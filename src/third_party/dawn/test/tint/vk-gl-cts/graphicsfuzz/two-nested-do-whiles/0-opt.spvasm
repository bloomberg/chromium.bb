               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %_GLF_color %gl_FragCoord
               OpExecutionMode %main OriginUpperLeft
               OpSource ESSL 310
               OpName %main "main"
               OpName %_GLF_color "_GLF_color"
               OpName %i "i"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %_ ""
               OpName %gl_FragCoord "gl_FragCoord"
               OpName %i_0 "i"
               OpName %i_1 "i"
               OpDecorate %_GLF_color Location 0
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %buf0 Block
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %gl_FragCoord BuiltIn FragCoord
       %void = OpTypeVoid
         %11 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
 %_GLF_color = OpVariable %_ptr_Output_v4float Output
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %17 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
      %int_0 = OpConstant %int 0
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
          %_ = OpVariable %_ptr_Uniform_buf0 Uniform
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_ptr_Uniform_float = OpTypePointer Uniform %float
       %bool = OpTypeBool
%_ptr_Input_v4float = OpTypePointer Input %v4float
%gl_FragCoord = OpVariable %_ptr_Input_v4float Input
%_ptr_Input_float = OpTypePointer Input %float
   %float_n1 = OpConstant %float -1
    %int_256 = OpConstant %int 256
      %int_1 = OpConstant %int 1
      %false = OpConstantFalse %bool
       %main = OpFunction %void None %11
         %33 = OpLabel
          %i = OpVariable %_ptr_Function_int Function
        %i_0 = OpVariable %_ptr_Function_int Function
        %i_1 = OpVariable %_ptr_Function_int Function
               OpStore %_GLF_color %17
               OpStore %i %int_0
         %34 = OpAccessChain %_ptr_Uniform_float %_ %int_0 %uint_1
         %35 = OpLoad %float %34
         %36 = OpFOrdLessThan %bool %35 %float_0
               OpSelectionMerge %37 None
               OpBranchConditional %36 %38 %39
         %38 = OpLabel
               OpBranch %37
         %39 = OpLabel
         %40 = OpAccessChain %_ptr_Input_float %gl_FragCoord %uint_1
         %41 = OpLoad %float %40
         %42 = OpFOrdLessThan %bool %41 %float_n1
               OpSelectionMerge %43 None
               OpBranchConditional %42 %44 %45
         %44 = OpLabel
               OpBranch %43
         %45 = OpLabel
               OpBranch %46
         %46 = OpLabel
               OpLoopMerge %47 %48 None
               OpBranch %49
         %49 = OpLabel
         %50 = OpLoad %int %i
         %51 = OpSGreaterThanEqual %bool %50 %int_256
               OpSelectionMerge %52 None
               OpBranchConditional %51 %53 %52
         %53 = OpLabel
               OpBranch %47
         %52 = OpLabel
               OpBranch %54
         %54 = OpLabel
               OpStore %i_0 %int_0
               OpLoopMerge %55 %56 None
               OpBranch %57
         %57 = OpLabel
         %58 = OpLoad %int %i_0
         %59 = OpSLessThan %bool %58 %int_1
               OpLoopMerge %60 %61 None
               OpBranchConditional %59 %62 %60
         %62 = OpLabel
               OpSelectionMerge %63 None
               OpBranchConditional %42 %64 %63
         %64 = OpLabel
               OpStore %i_1 %int_0
               OpBranch %65
         %65 = OpLabel
         %66 = OpLoad %int %i_1
         %67 = OpSLessThan %bool %66 %int_1
               OpLoopMerge %68 %69 None
               OpBranchConditional %67 %69 %68
         %69 = OpLabel
         %70 = OpLoad %int %i_1
         %71 = OpIAdd %int %70 %int_1
               OpStore %i_1 %71
               OpBranch %65
         %68 = OpLabel
               OpBranch %61
         %61 = OpLabel
         %72 = OpLoad %int %i_0
         %73 = OpIAdd %int %72 %int_1
               OpStore %i_0 %73
               OpBranch %57
         %63 = OpLabel
               OpReturn
         %60 = OpLabel
               OpBranch %56
         %56 = OpLabel
               OpBranchConditional %false %54 %55
         %55 = OpLabel
               OpBranch %48
         %48 = OpLabel
               OpBranchConditional %false %46 %47
         %47 = OpLabel
               OpBranch %43
         %43 = OpLabel
               OpBranch %37
         %37 = OpLabel
               OpReturn
               OpFunctionEnd
