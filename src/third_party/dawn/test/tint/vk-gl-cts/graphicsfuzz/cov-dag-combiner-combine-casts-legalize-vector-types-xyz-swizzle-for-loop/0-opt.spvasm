               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %_GLF_color
               OpExecutionMode %main OriginUpperLeft
               OpSource ESSL 310
               OpName %main "main"
               OpName %v "v"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "_GLF_uniform_int_values"
               OpName %_ ""
               OpName %i "i"
               OpName %_GLF_color "_GLF_color"
               OpDecorate %_arr_int_uint_4 ArrayStride 16
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %buf0 Block
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %_GLF_color Location 0
       %void = OpTypeVoid
         %10 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Function_v4float = OpTypePointer Function %v4float
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
     %uint_4 = OpConstant %uint 4
%_arr_int_uint_4 = OpTypeArray %int %uint_4
       %buf0 = OpTypeStruct %_arr_int_uint_4
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
          %_ = OpVariable %_ptr_Uniform_buf0 Uniform
      %int_0 = OpConstant %int 0
      %int_3 = OpConstant %int 3
%_ptr_Uniform_int = OpTypePointer Uniform %int
%_ptr_Function_int = OpTypePointer Function %int
       %bool = OpTypeBool
    %v3float = OpTypeVector %float 3
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
     %v3uint = OpTypeVector %uint 3
         %28 = OpConstantComposite %v3uint %uint_0 %uint_1 %uint_2
%_ptr_Function_float = OpTypePointer Function %float
      %int_1 = OpConstant %int 1
      %int_2 = OpConstant %int 2
     %v4bool = OpTypeVector %bool 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
 %_GLF_color = OpVariable %_ptr_Output_v4float Output
       %main = OpFunction %void None %10
         %34 = OpLabel
          %v = OpVariable %_ptr_Function_v4float Function
          %i = OpVariable %_ptr_Function_int Function
         %35 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_3
         %36 = OpLoad %int %35
         %37 = OpConvertSToF %float %36
         %38 = OpCompositeConstruct %v4float %37 %37 %37 %37
               OpStore %v %38
         %39 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_0
         %40 = OpLoad %int %39
               OpStore %i %40
               OpBranch %41
         %41 = OpLabel
               OpLoopMerge %42 %43 None
               OpBranch %44
         %44 = OpLabel
         %45 = OpLoad %int %i
         %46 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_3
         %47 = OpLoad %int %46
         %48 = OpSLessThan %bool %45 %47
               OpBranchConditional %48 %49 %42
         %49 = OpLabel
         %50 = OpLoad %int %i
         %51 = OpLoad %int %i
         %52 = OpConvertSToF %float %51
         %53 = OpVectorExtractDynamic %uint %28 %50
         %54 = OpAccessChain %_ptr_Function_float %v %53
               OpStore %54 %52
               OpBranch %43
         %43 = OpLabel
         %55 = OpLoad %int %i
         %56 = OpIAdd %int %55 %int_1
               OpStore %i %56
               OpBranch %41
         %42 = OpLabel
         %57 = OpLoad %v4float %v
         %58 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_0
         %59 = OpLoad %int %58
         %60 = OpConvertSToF %float %59
         %61 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_1
         %62 = OpLoad %int %61
         %63 = OpConvertSToF %float %62
         %64 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_2
         %65 = OpLoad %int %64
         %66 = OpConvertSToF %float %65
         %67 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_3
         %68 = OpLoad %int %67
         %69 = OpConvertSToF %float %68
         %70 = OpCompositeConstruct %v4float %60 %63 %66 %69
         %71 = OpFOrdEqual %v4bool %57 %70
         %72 = OpAll %bool %71
               OpSelectionMerge %73 None
               OpBranchConditional %72 %74 %75
         %74 = OpLabel
         %76 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_1
         %77 = OpLoad %int %76
         %78 = OpConvertSToF %float %77
         %79 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_0
         %80 = OpLoad %int %79
         %81 = OpConvertSToF %float %80
         %82 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_0
         %83 = OpLoad %int %82
         %84 = OpConvertSToF %float %83
         %85 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_1
         %86 = OpLoad %int %85
         %87 = OpConvertSToF %float %86
         %88 = OpCompositeConstruct %v4float %78 %81 %84 %87
               OpStore %_GLF_color %88
               OpBranch %73
         %75 = OpLabel
         %89 = OpAccessChain %_ptr_Uniform_int %_ %int_0 %int_0
         %90 = OpLoad %int %89
         %91 = OpConvertSToF %float %90
         %92 = OpCompositeConstruct %v4float %91 %91 %91 %91
               OpStore %_GLF_color %92
               OpBranch %73
         %73 = OpLabel
               OpReturn
               OpFunctionEnd
