; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 97
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %vertex_main "vertex_main" %value %vertex_point_size
               OpEntryPoint Fragment %fragment_main "fragment_main"
               OpEntryPoint GLCompute %compute_main "compute_main"
               OpExecutionMode %fragment_main OriginUpperLeft
               OpExecutionMode %compute_main LocalSize 1 1 1
               OpName %value "value"
               OpName %vertex_point_size "vertex_point_size"
               OpName %tint_first_leading_bit "tint_first_leading_bit"
               OpName %v "v"
               OpName %x "x"
               OpName %firstLeadingBit_6fe804 "firstLeadingBit_6fe804"
               OpName %res "res"
               OpName %vertex_main_inner "vertex_main_inner"
               OpName %vertex_main "vertex_main"
               OpName %fragment_main "fragment_main"
               OpName %compute_main "compute_main"
               OpDecorate %value BuiltIn Position
               OpDecorate %vertex_point_size BuiltIn PointSize
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
          %5 = OpConstantNull %v4float
      %value = OpVariable %_ptr_Output_v4float Output %5
%_ptr_Output_float = OpTypePointer Output %float
          %8 = OpConstantNull %float
%vertex_point_size = OpVariable %_ptr_Output_float Output %8
       %uint = OpTypeInt 32 0
     %v2uint = OpTypeVector %uint 2
          %9 = OpTypeFunction %v2uint %v2uint
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
         %17 = OpConstantNull %v2uint
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
%uint_4294901760 = OpConstant %uint 4294901760
         %24 = OpConstantComposite %v2uint %uint_4294901760 %uint_4294901760
    %uint_16 = OpConstant %uint 16
         %27 = OpConstantComposite %v2uint %uint_16 %uint_16
 %uint_65280 = OpConstant %uint 65280
         %34 = OpConstantComposite %v2uint %uint_65280 %uint_65280
     %uint_8 = OpConstant %uint 8
         %37 = OpConstantComposite %v2uint %uint_8 %uint_8
   %uint_240 = OpConstant %uint 240
         %44 = OpConstantComposite %v2uint %uint_240 %uint_240
     %uint_4 = OpConstant %uint 4
         %47 = OpConstantComposite %v2uint %uint_4 %uint_4
    %uint_12 = OpConstant %uint 12
         %54 = OpConstantComposite %v2uint %uint_12 %uint_12
     %uint_2 = OpConstant %uint 2
         %57 = OpConstantComposite %v2uint %uint_2 %uint_2
     %uint_1 = OpConstant %uint 1
         %65 = OpConstantComposite %v2uint %uint_1 %uint_1
%uint_4294967295 = OpConstant %uint 4294967295
         %70 = OpConstantComposite %v2uint %uint_4294967295 %uint_4294967295
       %void = OpTypeVoid
         %77 = OpTypeFunction %void
         %83 = OpTypeFunction %v4float
    %float_1 = OpConstant %float 1
%tint_first_leading_bit = OpFunction %v2uint None %9
          %v = OpFunctionParameter %v2uint
         %14 = OpLabel
          %x = OpVariable %_ptr_Function_v2uint Function %17
               OpStore %x %v
         %22 = OpLoad %v2uint %x
         %25 = OpBitwiseAnd %v2uint %22 %24
         %19 = OpINotEqual %v2bool %25 %17
         %18 = OpSelect %v2uint %19 %27 %17
         %28 = OpLoad %v2uint %x
         %29 = OpShiftRightLogical %v2uint %28 %18
               OpStore %x %29
         %32 = OpLoad %v2uint %x
         %35 = OpBitwiseAnd %v2uint %32 %34
         %31 = OpINotEqual %v2bool %35 %17
         %30 = OpSelect %v2uint %31 %37 %17
         %38 = OpLoad %v2uint %x
         %39 = OpShiftRightLogical %v2uint %38 %30
               OpStore %x %39
         %42 = OpLoad %v2uint %x
         %45 = OpBitwiseAnd %v2uint %42 %44
         %41 = OpINotEqual %v2bool %45 %17
         %40 = OpSelect %v2uint %41 %47 %17
         %48 = OpLoad %v2uint %x
         %49 = OpShiftRightLogical %v2uint %48 %40
               OpStore %x %49
         %52 = OpLoad %v2uint %x
         %55 = OpBitwiseAnd %v2uint %52 %54
         %51 = OpINotEqual %v2bool %55 %17
         %50 = OpSelect %v2uint %51 %57 %17
         %58 = OpLoad %v2uint %x
         %59 = OpShiftRightLogical %v2uint %58 %50
               OpStore %x %59
         %62 = OpLoad %v2uint %x
         %63 = OpBitwiseAnd %v2uint %62 %57
         %61 = OpINotEqual %v2bool %63 %17
         %60 = OpSelect %v2uint %61 %65 %17
         %67 = OpLoad %v2uint %x
         %68 = OpIEqual %v2bool %67 %17
         %66 = OpSelect %v2uint %68 %70 %17
         %72 = OpBitwiseOr %v2uint %18 %30
         %73 = OpBitwiseOr %v2uint %72 %40
         %74 = OpBitwiseOr %v2uint %73 %50
         %75 = OpBitwiseOr %v2uint %74 %60
         %76 = OpBitwiseOr %v2uint %75 %66
               OpReturnValue %76
               OpFunctionEnd
%firstLeadingBit_6fe804 = OpFunction %void None %77
         %80 = OpLabel
        %res = OpVariable %_ptr_Function_v2uint Function %17
         %81 = OpFunctionCall %v2uint %tint_first_leading_bit %17
               OpStore %res %81
               OpReturn
               OpFunctionEnd
%vertex_main_inner = OpFunction %v4float None %83
         %85 = OpLabel
         %86 = OpFunctionCall %void %firstLeadingBit_6fe804
               OpReturnValue %5
               OpFunctionEnd
%vertex_main = OpFunction %void None %77
         %88 = OpLabel
         %89 = OpFunctionCall %v4float %vertex_main_inner
               OpStore %value %89
               OpStore %vertex_point_size %float_1
               OpReturn
               OpFunctionEnd
%fragment_main = OpFunction %void None %77
         %92 = OpLabel
         %93 = OpFunctionCall %void %firstLeadingBit_6fe804
               OpReturn
               OpFunctionEnd
%compute_main = OpFunction %void None %77
         %95 = OpLabel
         %96 = OpFunctionCall %void %firstLeadingBit_6fe804
               OpReturn
               OpFunctionEnd
