#include <metal_stdlib>

using namespace metal;
void textureSampleLevel_0bdd9a(texturecube_array<float, access::sample> tint_symbol_1, sampler tint_symbol_2) {
  float3 arg_2 = float3(0.0f);
  int arg_3 = 1;
  float arg_4 = 1.0f;
  float4 res = tint_symbol_1.sample(tint_symbol_2, arg_2, arg_3, level(arg_4));
}

struct tint_symbol {
  float4 value [[position]];
};

float4 vertex_main_inner(texturecube_array<float, access::sample> tint_symbol_3, sampler tint_symbol_4) {
  textureSampleLevel_0bdd9a(tint_symbol_3, tint_symbol_4);
  return float4(0.0f);
}

vertex tint_symbol vertex_main(texturecube_array<float, access::sample> tint_symbol_5 [[texture(0)]], sampler tint_symbol_6 [[sampler(0)]]) {
  float4 const inner_result = vertex_main_inner(tint_symbol_5, tint_symbol_6);
  tint_symbol wrapper_result = {};
  wrapper_result.value = inner_result;
  return wrapper_result;
}

fragment void fragment_main(texturecube_array<float, access::sample> tint_symbol_7 [[texture(0)]], sampler tint_symbol_8 [[sampler(0)]]) {
  textureSampleLevel_0bdd9a(tint_symbol_7, tint_symbol_8);
  return;
}

kernel void compute_main(texturecube_array<float, access::sample> tint_symbol_9 [[texture(0)]], sampler tint_symbol_10 [[sampler(0)]]) {
  textureSampleLevel_0bdd9a(tint_symbol_9, tint_symbol_10);
  return;
}

