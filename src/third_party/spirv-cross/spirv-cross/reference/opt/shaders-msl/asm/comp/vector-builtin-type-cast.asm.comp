#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

constant uint3 gl_WorkGroupSize = uint3(16u, 16u, 1u);

struct cb1_struct
{
    float4 _m0[1];
};

kernel void main0(constant cb1_struct& cb0_1 [[buffer(0)]], texture2d<float, access::write> u0 [[texture(1)]], uint3 gl_LocalInvocationID [[thread_position_in_threadgroup]])
{
    int2 _40 = int2(u0.get_width(), u0.get_height()) >> int2(uint2(4u));
    int _82;
    _82 = 0;
    for (; _82 < _40.y; _82++)
    {
        for (int _83 = 0; _83 < _40.x; )
        {
            u0.write(cb0_1._m0[0].xxxx, uint2(((_40 * int3(gl_LocalInvocationID).xy) + int2(_82, _83))));
            _83++;
            continue;
        }
    }
}

