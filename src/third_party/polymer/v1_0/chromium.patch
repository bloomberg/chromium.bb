diff --git a/components-chromium/html-imports/html-imports.min.js b/components-chromium/html-imports/html-imports.min.js
index 3365917e8b99..8750aefdefb1 100644
--- a/components-chromium/html-imports/html-imports.min.js
+++ b/components-chromium/html-imports/html-imports.min.js
@@ -23,5 +23,3 @@ if(d&&b.parentNode!==document.head){var e=document.createElement(b.localName);e.
 "complete"),a.dispatchEvent(y(a.import?"load":"error",{bubbles:!1,cancelable:!1,detail:void 0})))};h.prototype.w=function(a){var b=this;g(a,function(a){return g(a.addedNodes,function(a){a&&a.nodeType===Node.ELEMENT_NODE&&(r(a)?b.l(a):b.loadImports(a))})})};var x=null;if(u)g(k(document,"link[rel=import]"),function(a){a.import&&"loading"===a.import.readyState||(a.__loaded=!0)}),n=function(a){a=a.target;r(a)&&(a.__loaded=!0)},document.addEventListener("load",n,!0),document.addEventListener("error",n,
 !0);else{var p=Object.getOwnPropertyDescriptor(Node.prototype,"baseURI");Object.defineProperty((!p||p.configurable?Node:Element).prototype,"baseURI",{get:function(){var a=r(this)?this:m(this);return a?a.href:p&&p.get?p.get.call(this):(document.querySelector("base")||window.location).href},configurable:!0,enumerable:!0});Object.defineProperty(HTMLLinkElement.prototype,"import",{get:function(){return this.__import||null},configurable:!0,enumerable:!0});z(function(){x=new h})}A(function(){return document.dispatchEvent(y("HTMLImportsLoaded",
 {cancelable:!0,bubbles:!0,detail:void 0}))});q.useNative=u;q.whenReady=A;q.importForElement=m;q.loadImports=function(a){x&&x.loadImports(a)}})(window.HTMLImports=window.HTMLImports||{});
-
-//# sourceMappingURL=html-imports.min.js.map
diff --git a/components-chromium/iron-iconset-svg/iron-iconset-svg-extracted.js b/components-chromium/iron-iconset-svg/iron-iconset-svg-extracted.js
index 2edddb115d46..d3c7fbe36d63 100644
--- a/components-chromium/iron-iconset-svg/iron-iconset-svg-extracted.js
+++ b/components-chromium/iron-iconset-svg/iron-iconset-svg-extracted.js
@@ -131,6 +131,18 @@
       return null;
     },

+    /**
+     * Produce installable clone of the SVG element matching `id` in this
+     * iconset, or `undefined` if there is no matching element.
+     * @param {string} iconName Name of the icon to apply.
+     * @param {boolean} targetIsRTL Whether the target element is RTL.
+     * @return {Element} Returns an installable clone of the SVG element
+     *     matching `id`.
+     */
+    createIcon: function(iconName, targetIsRTL) {
+      return this._cloneIcon(iconName, this.rtlMirroring && targetIsRTL);
+    },
+
     /**
      * Remove an icon from the given element by undoing the changes effected
      * by `applyIcon`.
diff --git a/components-chromium/iron-list/iron-list-extracted.js b/components-chromium/iron-list/iron-list-extracted.js
index 43c59653a39b..26652936735c 100644
--- a/components-chromium/iron-list/iron-list-extracted.js
+++ b/components-chromium/iron-list/iron-list-extracted.js
@@ -128,6 +128,14 @@
       scrollOffset: {
         type: Number,
         value: 0
+      },
+
+      /**
+       * If set to true, focus on an element will be preserved after rerender.
+       */
+      preserveFocus: {
+        type: Boolean,
+        value: false
       }
     },

@@ -786,11 +794,53 @@
       newGrid && this._updateGridMetrics();
     },

+    /**
+     * Finds and returns the focused element (both within self and children's
+     * Shadow DOM).
+     * @return {?HTMLElement}
+     */
+    _getFocusedElement: function() {
+      function doSearch(node, query) {
+        let result = null;
+        let type = node.nodeType;
+        if (type == Node.ELEMENT_NODE || type == Node.DOCUMENT_FRAGMENT_NODE)
+          result = node.querySelector(query);
+        if (result)
+          return result;
+
+        let child = node.firstChild;
+        while (child !== null && result === null) {
+          result = doSearch(child, query);
+          child = child.nextSibling;
+        }
+        if (result)
+          return result;
+
+        const shadowRoot = node.shadowRoot;
+        return shadowRoot ? doSearch(shadowRoot, query) : null;
+      }
+
+      // Find out if any of the items are focused first, and only search
+      // recursively in the item that contains focus, to avoid a slow
+      // search of the entire list.
+      const focusWithin = doSearch(this, ':focus-within');
+      return focusWithin ? doSearch(focusWithin, ':focus') : null;
+    },
+
     /**
      * Called when the items have changed. That is, reassignments
      * to `items`, splices or updates to a single item.
      */
     _itemsChanged: function(change) {
+      var rendering = /^items(\.splices){0,1}$/.test(change.path);
+      var lastFocusedIndex, focusedElement;
+      if (rendering && this.preserveFocus) {
+        lastFocusedIndex = this._focusedVirtualIndex;
+        focusedElement = this._getFocusedElement();
+      }
+
+      var preservingFocus = rendering && this.preserveFocus && focusedElement;
+
       if (change.path === 'items') {
         this._virtualStart = 0;
         this._physicalTop = 0;
@@ -804,7 +854,7 @@
         this._physicalItems = this._physicalItems || [];
         this._physicalSizes = this._physicalSizes || [];
         this._physicalStart = 0;
-        if (this._scrollTop > this._scrollOffset) {
+        if (this._scrollTop > this._scrollOffset && !preservingFocus) {
           this._resetScrollPosition(0);
         }
         this._removeFocusedItem();
@@ -834,6 +884,17 @@
       } else if (change.path !== 'items.length') {
         this._forwardItemPath(change.path, change.value);
       }
+
+      // If the list was in focus when updated, preserve the focus on item.
+      if (preservingFocus) {
+        Polymer.dom.flush();
+        focusedElement.blur(); // paper- elements breaks when focused twice.
+        this._focusPhysicalItem(
+            Math.min(this.items.length - 1, lastFocusedIndex));
+        if (!this._isIndexVisible(this._focusedVirtualIndex)) {
+          this.scrollToIndex(this._focusedVirtualIndex);
+        }
+      }
     },

     _forwardItemPath: function(path, value) {
diff --git a/components-chromium/iron-overlay-behavior/iron-overlay-manager-extracted.js b/components-chromium/iron-overlay-behavior/iron-overlay-manager-extracted.js
index ccd2e3c5b551..7bca4b1ae49a 100644
--- a/components-chromium/iron-overlay-behavior/iron-overlay-manager-extracted.js
+++ b/components-chromium/iron-overlay-behavior/iron-overlay-manager-extracted.js
@@ -30,7 +30,7 @@
     // NOTE: enable tap on <html> to workaround Polymer/polymer#4459
     // Pass no-op function because MSEdge 15 doesn't handle null as 2nd argument
     // https://github.com/Microsoft/ChakraCore/issues/3863
-    Polymer.Gestures.add(document.documentElement, 'tap', function() {});
+    Polymer.Gestures.addListener(document.documentElement, 'tap', function() {});
     document.addEventListener('tap', this._onCaptureClick.bind(this), true);
     document.addEventListener('focus', this._onCaptureFocus.bind(this), true);
     document.addEventListener('keydown', this._onCaptureKeyDown.bind(this), true);
diff --git a/components-chromium/iron-flex-layout/iron-flex-layout.html b/components-chromium/iron-flex-layout/iron-flex-layout.html
index 082b0c1e4af2..d985829702a2 100644
--- a/components-chromium/iron-flex-layout/iron-flex-layout.html
+++ b/components-chromium/iron-flex-layout/iron-flex-layout.html
@@ -409,4 +409,4 @@ A complete [guide](https://elements.polymer-project.org/guides/flex-layout) to `
     }
   </style>
 </custom-style>
-<script src="iron-flex-layout-extracted.js"></script></body></html>
\ No newline at end of file
+</body></html>
\ No newline at end of file
diff --git a/components-chromium/paper-tooltip/paper-tooltip-extracted.js b/components-chromium/paper-tooltip/paper-tooltip-extracted.js
index 2830d229760c..2116f616a93b 100644
--- a/components-chromium/paper-tooltip/paper-tooltip-extracted.js
+++ b/components-chromium/paper-tooltip/paper-tooltip-extracted.js
@@ -123,12 +123,16 @@ Polymer({
       },
       /**
        * Returns the target element that this tooltip is anchored to. It is
-       * either the element given by the `for` attribute, or the immediate parent
-       * of the tooltip.
+       * either the element given by the `for` attribute, the element manually
+       * specified through the `target` attribute, or the immediate parent of
+       * the tooltip.
        *
        * @type {Node}
        */
       get target() {
+        if (this._manualTarget)
+          return this._manualTarget;
+
         var parentNode = Polymer.dom(this).parentNode;
         // If the parentNode is a document fragment, then we need to use the host.
         var ownerRoot = Polymer.dom(this).getOwnerRoot();
@@ -142,6 +146,15 @@ Polymer({
         return target;
       },

+      /**
+       * Sets the target element that this tooltip will be anchored to.
+       * @param {Node} target
+       */
+      set target(target) {
+        this._manualTarget = target;
+        this._findTarget();
+      },
+
       /**
        * @return {void}
        */
diff --git a/components-chromium/polymer2/lib/legacy/legacy-element-mixin.html b/components-chromium/polymer2/lib/legacy/legacy-element-mixin.html
index 7306c651407e..9c88699a3924 100644
--- a/components-chromium/polymer2/lib/legacy/legacy-element-mixin.html
+++ b/components-chromium/polymer2/lib/legacy/legacy-element-mixin.html
@@ -11,7 +11,6 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
 <link rel="import" href="../../../shadycss/apply-shim.html">
 <link rel="import" href="../mixins/element-mixin.html">
 <link rel="import" href="../mixins/gesture-event-listeners.html">
-<link rel="import" href="../mixins/dir-mixin.html">
 <link rel="import" href="../utils/mixin.html">
 <link rel="import" href="../utils/import-href.html">
 <link rel="import" href="../utils/render-status.html">
@@ -47,9 +46,8 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
      * @extends {base}
      * @implements {Polymer_ElementMixin}
      * @implements {Polymer_GestureEventListeners}
-     * @implements {Polymer_DirMixin}
      * @private
      */
-    const legacyElementBase = Polymer.DirMixin(Polymer.GestureEventListeners(Polymer.ElementMixin(base)));
+    const legacyElementBase = Polymer.GestureEventListeners(Polymer.ElementMixin(base));

     /**
      * Map of simple names to touch action names
diff --git a/components-chromium/paper-styles/color.html b/components-chromium/paper-styles/color.html
index 07d7d945d3a4..ca60d7e8e2a0 100644
--- a/components-chromium/paper-styles/color.html
+++ b/components-chromium/paper-styles/color.html
@@ -78,81 +78,6 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
       --paper-red-a400: #ff1744;
       --paper-red-a700: #d50000;
 
-      --paper-pink-50: #fce4ec;
-      --paper-pink-100: #f8bbd0;
-      --paper-pink-200: #f48fb1;
-      --paper-pink-300: #f06292;
-      --paper-pink-400: #ec407a;
-      --paper-pink-500: #e91e63;
-      --paper-pink-600: #d81b60;
-      --paper-pink-700: #c2185b;
-      --paper-pink-800: #ad1457;
-      --paper-pink-900: #880e4f;
-      --paper-pink-a100: #ff80ab;
-      --paper-pink-a200: #ff4081;
-      --paper-pink-a400: #f50057;
-      --paper-pink-a700: #c51162;
-
-      --paper-purple-50: #f3e5f5;
-      --paper-purple-100: #e1bee7;
-      --paper-purple-200: #ce93d8;
-      --paper-purple-300: #ba68c8;
-      --paper-purple-400: #ab47bc;
-      --paper-purple-500: #9c27b0;
-      --paper-purple-600: #8e24aa;
-      --paper-purple-700: #7b1fa2;
-      --paper-purple-800: #6a1b9a;
-      --paper-purple-900: #4a148c;
-      --paper-purple-a100: #ea80fc;
-      --paper-purple-a200: #e040fb;
-      --paper-purple-a400: #d500f9;
-      --paper-purple-a700: #aa00ff;
-
-      --paper-deep-purple-50: #ede7f6;
-      --paper-deep-purple-100: #d1c4e9;
-      --paper-deep-purple-200: #b39ddb;
-      --paper-deep-purple-300: #9575cd;
-      --paper-deep-purple-400: #7e57c2;
-      --paper-deep-purple-500: #673ab7;
-      --paper-deep-purple-600: #5e35b1;
-      --paper-deep-purple-700: #512da8;
-      --paper-deep-purple-800: #4527a0;
-      --paper-deep-purple-900: #311b92;
-      --paper-deep-purple-a100: #b388ff;
-      --paper-deep-purple-a200: #7c4dff;
-      --paper-deep-purple-a400: #651fff;
-      --paper-deep-purple-a700: #6200ea;
-
-      --paper-indigo-50: #e8eaf6;
-      --paper-indigo-100: #c5cae9;
-      --paper-indigo-200: #9fa8da;
-      --paper-indigo-300: #7986cb;
-      --paper-indigo-400: #5c6bc0;
-      --paper-indigo-500: #3f51b5;
-      --paper-indigo-600: #3949ab;
-      --paper-indigo-700: #303f9f;
-      --paper-indigo-800: #283593;
-      --paper-indigo-900: #1a237e;
-      --paper-indigo-a100: #8c9eff;
-      --paper-indigo-a200: #536dfe;
-      --paper-indigo-a400: #3d5afe;
-      --paper-indigo-a700: #304ffe;
-
-      --paper-blue-50: #e3f2fd;
-      --paper-blue-100: #bbdefb;
-      --paper-blue-200: #90caf9;
-      --paper-blue-300: #64b5f6;
-      --paper-blue-400: #42a5f5;
-      --paper-blue-500: #2196f3;
-      --paper-blue-600: #1e88e5;
-      --paper-blue-700: #1976d2;
-      --paper-blue-800: #1565c0;
-      --paper-blue-900: #0d47a1;
-      --paper-blue-a100: #82b1ff;
-      --paper-blue-a200: #448aff;
-      --paper-blue-a400: #2979ff;
-      --paper-blue-a700: #2962ff;
-
       --paper-light-blue-50: #e1f5fe;
       --paper-light-blue-100: #b3e5fc;
       --paper-light-blue-200: #81d4fa;
@@ -168,81 +93,6 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
       --paper-light-blue-a400: #00b0ff;
       --paper-light-blue-a700: #0091ea;
 
-      --paper-cyan-50: #e0f7fa;
-      --paper-cyan-100: #b2ebf2;
-      --paper-cyan-200: #80deea;
-      --paper-cyan-300: #4dd0e1;
-      --paper-cyan-400: #26c6da;
-      --paper-cyan-500: #00bcd4;
-      --paper-cyan-600: #00acc1;
-      --paper-cyan-700: #0097a7;
-      --paper-cyan-800: #00838f;
-      --paper-cyan-900: #006064;
-      --paper-cyan-a100: #84ffff;
-      --paper-cyan-a200: #18ffff;
-      --paper-cyan-a400: #00e5ff;
-      --paper-cyan-a700: #00b8d4;
-
-      --paper-teal-50: #e0f2f1;
-      --paper-teal-100: #b2dfdb;
-      --paper-teal-200: #80cbc4;
-      --paper-teal-300: #4db6ac;
-      --paper-teal-400: #26a69a;
-      --paper-teal-500: #009688;
-      --paper-teal-600: #00897b;
-      --paper-teal-700: #00796b;
-      --paper-teal-800: #00695c;
-      --paper-teal-900: #004d40;
-      --paper-teal-a100: #a7ffeb;
-      --paper-teal-a200: #64ffda;
-      --paper-teal-a400: #1de9b6;
-      --paper-teal-a700: #00bfa5;
-
-      --paper-green-50: #e8f5e9;
-      --paper-green-100: #c8e6c9;
-      --paper-green-200: #a5d6a7;
-      --paper-green-300: #81c784;
-      --paper-green-400: #66bb6a;
-      --paper-green-500: #4caf50;
-      --paper-green-600: #43a047;
-      --paper-green-700: #388e3c;
-      --paper-green-800: #2e7d32;
-      --paper-green-900: #1b5e20;
-      --paper-green-a100: #b9f6ca;
-      --paper-green-a200: #69f0ae;
-      --paper-green-a400: #00e676;
-      --paper-green-a700: #00c853;
-
-      --paper-light-green-50: #f1f8e9;
-      --paper-light-green-100: #dcedc8;
-      --paper-light-green-200: #c5e1a5;
-      --paper-light-green-300: #aed581;
-      --paper-light-green-400: #9ccc65;
-      --paper-light-green-500: #8bc34a;
-      --paper-light-green-600: #7cb342;
-      --paper-light-green-700: #689f38;
-      --paper-light-green-800: #558b2f;
-      --paper-light-green-900: #33691e;
-      --paper-light-green-a100: #ccff90;
-      --paper-light-green-a200: #b2ff59;
-      --paper-light-green-a400: #76ff03;
-      --paper-light-green-a700: #64dd17;
-
-      --paper-lime-50: #f9fbe7;
-      --paper-lime-100: #f0f4c3;
-      --paper-lime-200: #e6ee9c;
-      --paper-lime-300: #dce775;
-      --paper-lime-400: #d4e157;
-      --paper-lime-500: #cddc39;
-      --paper-lime-600: #c0ca33;
-      --paper-lime-700: #afb42b;
-      --paper-lime-800: #9e9d24;
-      --paper-lime-900: #827717;
-      --paper-lime-a100: #f4ff81;
-      --paper-lime-a200: #eeff41;
-      --paper-lime-a400: #c6ff00;
-      --paper-lime-a700: #aeea00;
-
       --paper-yellow-50: #fffde7;
       --paper-yellow-100: #fff9c4;
       --paper-yellow-200: #fff59d;
@@ -258,21 +108,6 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
       --paper-yellow-a400: #ffea00;
       --paper-yellow-a700: #ffd600;
 
-      --paper-amber-50: #fff8e1;
-      --paper-amber-100: #ffecb3;
-      --paper-amber-200: #ffe082;
-      --paper-amber-300: #ffd54f;
-      --paper-amber-400: #ffca28;
-      --paper-amber-500: #ffc107;
-      --paper-amber-600: #ffb300;
-      --paper-amber-700: #ffa000;
-      --paper-amber-800: #ff8f00;
-      --paper-amber-900: #ff6f00;
-      --paper-amber-a100: #ffe57f;
-      --paper-amber-a200: #ffd740;
-      --paper-amber-a400: #ffc400;
-      --paper-amber-a700: #ffab00;
-
       --paper-orange-50: #fff3e0;
       --paper-orange-100: #ffe0b2;
       --paper-orange-200: #ffcc80;
@@ -288,32 +123,6 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
       --paper-orange-a400: #ff9100;
       --paper-orange-a700: #ff6500;
 
-      --paper-deep-orange-50: #fbe9e7;
-      --paper-deep-orange-100: #ffccbc;
-      --paper-deep-orange-200: #ffab91;
-      --paper-deep-orange-300: #ff8a65;
-      --paper-deep-orange-400: #ff7043;
-      --paper-deep-orange-500: #ff5722;
-      --paper-deep-orange-600: #f4511e;
-      --paper-deep-orange-700: #e64a19;
-      --paper-deep-orange-800: #d84315;
-      --paper-deep-orange-900: #bf360c;
-      --paper-deep-orange-a100: #ff9e80;
-      --paper-deep-orange-a200: #ff6e40;
-      --paper-deep-orange-a400: #ff3d00;
-      --paper-deep-orange-a700: #dd2c00;
-
-      --paper-brown-50: #efebe9;
-      --paper-brown-100: #d7ccc8;
-      --paper-brown-200: #bcaaa4;
-      --paper-brown-300: #a1887f;
-      --paper-brown-400: #8d6e63;
-      --paper-brown-500: #795548;
-      --paper-brown-600: #6d4c41;
-      --paper-brown-700: #5d4037;
-      --paper-brown-800: #4e342e;
-      --paper-brown-900: #3e2723;
-
       --paper-grey-50: #fafafa;
       --paper-grey-100: #f5f5f5;
       --paper-grey-200: #eeeeee;
diff --git a/components-chromium/neon-animation/neon-animation-runner-behavior-extracted.js b/components-chromium/neon-animation/neon-animation-runner-behavior-extracted.js
index 9661322ca948..806a2b068933 100644
--- a/components-chromium/neon-animation/neon-animation-runner-behavior-extracted.js
+++ b/components-chromium/neon-animation/neon-animation-runner-behavior-extracted.js
@@ -20,7 +20,7 @@
             if (!neonAnimation.configure) {
               /**
                * @param {Object} config
-               * @return {AnimationEffectReadOnly}
+               * @return {AnimationEffect}
                */
               neonAnimation.configure = function(config) {
                 return null;
