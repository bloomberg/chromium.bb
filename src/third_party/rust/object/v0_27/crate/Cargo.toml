# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies
#
# If you believe there's an error in this file please file an
# issue against the rust-lang/cargo repository. If you're
# editing this file be aware that the upstream Cargo.toml
# will likely look very different (and much more reasonable)

[package]
edition = "2018"
name = "object"
version = "0.27.1"
exclude = ["/.github", "/testfiles"]
description = "A unified interface for reading and writing object file formats."
keywords = ["object", "elf", "mach-o", "pe", "coff"]
license = "Apache-2.0/MIT"
repository = "https://github.com/gimli-rs/object"
[package.metadata.docs.rs]
features = ["doc"]
[dependencies.alloc]
version = "1.0.0"
optional = true
package = "rustc-std-workspace-alloc"

[dependencies.compiler_builtins]
version = "0.1.2"
optional = true

[dependencies.core]
version = "1.0.0"
optional = true
package = "rustc-std-workspace-core"

[dependencies.crc32fast]
version = "1.2"
optional = true

[dependencies.flate2]
version = "1"
optional = true

[dependencies.indexmap]
version = "1.1"
optional = true

[dependencies.memchr]
version = "2.4.1"
default-features = false

[dependencies.wasmparser]
version = "0.57"
optional = true

[features]
all = ["read", "write", "std", "compression", "wasm"]
archive = []
cargo-all = []
coff = []
compression = ["flate2", "std"]
default = ["read", "compression"]
doc = ["read_core", "write_core", "std", "compression", "archive", "coff", "elf", "macho", "pe", "wasm"]
elf = []
macho = []
pe = ["coff"]
read = ["read_core", "archive", "coff", "elf", "macho", "pe", "unaligned"]
read_core = []
rustc-dep-of-std = ["core", "compiler_builtins", "alloc", "memchr/rustc-dep-of-std"]
std = ["memchr/std"]
unaligned = []
wasm = ["wasmparser"]
write = ["write_core", "coff", "elf", "macho", "pe"]
write_core = ["crc32fast", "indexmap/std", "std"]
