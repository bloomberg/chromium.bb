From ecc2c60fbcf9a771e54654d28fb3de80e55b5652 Mon Sep 17 00:00:00 2001
From: Adrian Taylor <adetaylor@chromium.org>
Date: Mon, 11 Apr 2022 13:27:26 -0700
Subject: [PATCH] backtrace fork

Change-Id: Ie86d44027d1f35dc0bdf0b912e0771a8637c6ead
---
 .../rust/backtrace/v0_3/crate/Cargo.toml      |  6 ++-
 .../rust/backtrace/v0_3/crate/build.rs        | 40 ++-----------------
 2 files changed, 8 insertions(+), 38 deletions(-)

diff --git a/third_party/rust/backtrace/v0_3/crate/Cargo.toml b/third_party/rust/backtrace/v0_3/crate/Cargo.toml
index d9fb5c12ad585..890e6a651bd3a 100644
--- a/third_party/rust/backtrace/v0_3/crate/Cargo.toml
+++ b/third_party/rust/backtrace/v0_3/crate/Cargo.toml
@@ -92,8 +92,10 @@ features = ["derive"]
 optional = true
 [dev-dependencies.libloading]
 version = "0.7"
-[build-dependencies.cc]
-version = "1.0.67"
+
+# Disabled for Chromium
+#[build-dependencies.cc]
+#version = "1.0.67"
 
 [features]
 coresymbolication = []
diff --git a/third_party/rust/backtrace/v0_3/crate/build.rs b/third_party/rust/backtrace/v0_3/crate/build.rs
index 812fbb1fe690e..86a58536c5893 100644
--- a/third_party/rust/backtrace/v0_3/crate/build.rs
+++ b/third_party/rust/backtrace/v0_3/crate/build.rs
@@ -1,41 +1,9 @@
-extern crate cc;
-
 use std::env;
 
 fn main() {
-    match env::var("CARGO_CFG_TARGET_OS").unwrap_or_default().as_str() {
-        "android" => build_android(),
-        _ => {}
-    }
+    // Chromium modification - don't check the Android version here to avoid
+    // depending on cc. It was only ever used to determine whether to print
+    // this... if API version â‰¥21. Chromium only supports 21+ anyway.
+    println!("cargo:rustc-cfg=feature=\"dl_iterate_phdr\"");
 }
 
-fn build_android() {
-    let expansion = match cc::Build::new().file("src/android-api.c").try_expand() {
-        Ok(result) => result,
-        Err(e) => {
-            println!("failed to run C compiler: {}", e);
-            return;
-        }
-    };
-    let expansion = match std::str::from_utf8(&expansion) {
-        Ok(s) => s,
-        Err(_) => return,
-    };
-    println!("expanded android version detection:\n{}", expansion);
-    let marker = "APIVERSION";
-    let i = match expansion.find(marker) {
-        Some(i) => i,
-        None => return,
-    };
-    let version = match expansion[i + marker.len() + 1..].split_whitespace().next() {
-        Some(s) => s,
-        None => return,
-    };
-    let version = match version.parse::<u32>() {
-        Ok(n) => n,
-        Err(_) => return,
-    };
-    if version >= 21 {
-        println!("cargo:rustc-cfg=feature=\"dl_iterate_phdr\"");
-    }
-}
-- 
2.35.1.1178.g4f1659d476-goog

