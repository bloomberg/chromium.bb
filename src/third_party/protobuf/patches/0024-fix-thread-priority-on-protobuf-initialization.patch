diff --git a/src/google/protobuf/generated_message_util.cc b/third_party/protobuf/src/google/protobuf/generated_message_util.cc
index e882587c6e7c..12ea55678dbe 100644
--- a/third_party/protobuf/src/google/protobuf/generated_message_util.cc
+++ b/third_party/protobuf/src/google/protobuf/generated_message_util.cc
@@ -61,6 +61,9 @@ namespace google {
 namespace protobuf {
 namespace internal {

+InitSCCCallback g_init_scc_enter = nullptr;
+InitSCCCallback g_init_scc_leave = nullptr;
+
 void DestroyMessage(const void* message) {
   static_cast<const MessageLite*>(message)->~MessageLite();
 }
@@ -82,6 +85,11 @@ void InitProtobufDefaults() {
   (void)is_inited;
 }

+void RegisterInitSCCHooks(InitSCCCallback enter, InitSCCCallback leave) {
+  g_init_scc_enter = enter;
+  g_init_scc_leave = leave;
+}
+
 const std::string& GetEmptyString() {
   InitProtobufDefaults();
   return GetEmptyStringAlreadyInited();
@@ -820,7 +828,12 @@ void InitSCCImpl(SCCInfoBase* scc) {
   InitProtobufDefaults();
   mu.Lock();
   runner.store(me, std::memory_order_relaxed);
+
+  if (g_init_scc_enter)
+    g_init_scc_enter();
   InitSCC_DFS(scc);
+  if (g_init_scc_leave)
+    g_init_scc_leave();

 #ifndef GOOGLE_PROTOBUF_SUPPORT_WINDOWS_XP
   runner.store(std::thread::id{}, std::memory_order_relaxed);
diff --git a/src/google/protobuf/generated_message_util.h b/third_party/protobuf/src/google/protobuf/generated_message_util.h
index e9b67bd15204..0e7102228142 100644
--- a/third_party/protobuf/src/google/protobuf/generated_message_util.h
+++ b/third_party/protobuf/src/google/protobuf/generated_message_util.h
@@ -87,6 +87,10 @@ inline To DownCast(From& f) {

 PROTOBUF_EXPORT void InitProtobufDefaults();

+using InitSCCCallback = void (*)(void);
+PROTOBUF_EXPORT void RegisterInitSCCHooks(InitSCCCallback enter,
+                                          InitSCCCallback leave);
+
 // This used by proto1
 PROTOBUF_EXPORT const ::std::string& GetEmptyString();

