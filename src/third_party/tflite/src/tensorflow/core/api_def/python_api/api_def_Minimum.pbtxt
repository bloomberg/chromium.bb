op {
  graph_op_name: "Minimum"
  endpoint {
    name: "math.minimum"
  }
  endpoint {
    name: "minimum"
  }
  description: <<END
Both inputs are number-type tensors (except complex).  `minimum` expects that
both tensors have the same `dtype`.

Examples:

>>> x = tf.constant([0., 0., 0., 0.])
>>> y = tf.constant([-5., -2., 0., 3.])
>>> tf.math.minimum(x, y)
<tf.Tensor: shape=(4,), dtype=float32, numpy=array([-5., -2., 0., 0.], dtype=float32)>

Note that `minimum` supports [broadcast semantics](http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html) for `x` and `y`.

>>> x = tf.constant([-5., 0., 0., 0.])
>>> y = tf.constant([-3.])
>>> tf.math.minimum(x, y)
<tf.Tensor: shape=(4,), dtype=float32, numpy=array([-5., -3., -3., -3.], dtype=float32)>

The reduction version of this elementwise operation is `tf.math.reduce_min`

END
}
