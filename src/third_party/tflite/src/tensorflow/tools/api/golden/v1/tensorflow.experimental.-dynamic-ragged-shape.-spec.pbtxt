path: "tensorflow.experimental.DynamicRaggedShape.Spec"
tf_class {
  is_instance: "<class \'tensorflow.python.ops.ragged.dynamic_ragged_shape.DynamicRaggedShape.Spec\'>"
  is_instance: "<class \'tensorflow.python.framework.extension_type.ExtensionTypeSpec\'>"
  is_instance: "<class \'tensorflow.python.framework.type_spec.TypeSpec\'>"
  is_instance: "<class \'tensorflow.python.types.trace.TraceType\'>"
  is_instance: "<type \'object\'>"
  member {
    name: "dtype"
    mtype: "<type \'property\'>"
  }
  member {
    name: "inner_rank"
    mtype: "<type \'property\'>"
  }
  member {
    name: "num_row_partitions"
    mtype: "<type \'property\'>"
  }
  member {
    name: "rank"
    mtype: "<type \'property\'>"
  }
  member {
    name: "value_type"
    mtype: "<class \'tensorflow.python.framework.extension_type.ExtensionTypeMetaclass\'>"
  }
  member_method {
    name: "__init__"
    argspec: "args=[\'self\', \'_row_partitions\', \'_inner_shape\', \'_static_inner_shape\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "from_value"
    argspec: "args=[\'cls\', \'value\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "is_compatible_with"
    argspec: "args=[\'self\', \'spec_or_value\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "is_subtype_of"
    argspec: "args=[\'self\', \'other\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "most_specific_common_supertype"
    argspec: "args=[\'self\', \'others\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "most_specific_compatible_type"
    argspec: "args=[\'self\', \'other\'], varargs=None, keywords=None, defaults=None"
  }
}
