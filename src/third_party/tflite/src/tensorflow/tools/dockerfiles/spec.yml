header: |
    # Copyright 2019 The TensorFlow Authors. All Rights Reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # ============================================================================
    #
    # THIS IS A GENERATED DOCKERFILE.
    #
    # This file was assembled from multiple pieces, whose use is documented
    # throughout. Please refer to the TensorFlow dockerfiles documentation
    # for more information.

# A combinatorial explosion of Docker images and Dockerfiles.
# Each "release" defines all of the ways to combine related but separate chunks
# of functionality ("slices") by listing all of the "slice sets" to use when
# building.
#
# Releases are all treated differently by TensorFlow's CI systems.
releases:
    # Built Nightly and pushed to tensorflow/tensorflow
    nightly:
        tag_specs:
            - "{nightly}{jupyter}"
            - "{_TAG_PREFIX}{ubuntu-devel}"
    # Built per-release and pushed to tensorflow/tensorflow
    # --arg _TAG_PREFIX=<val> should be set to "1.11" (for example) or "latest".
    versioned:
        tag_specs:
            - "{_TAG_PREFIX}{ubuntu}{jupyter}"
    onednn:
        tag_specs:
            - "{_TAG_PREFIX}{devel-onednn}"
            - "{_TAG_PREFIX}{devel-onednn-mpich-horovod}"
            - "{_TAG_PREFIX}{devel-onednn-mpich-horovod}{onednn-jupyter}"
            - "{_TAG_PREFIX}{devel-onednn-mpi-horovod}"
            - "{_TAG_PREFIX}{devel-onednn-mpi-horovod}{onednn-jupyter}"
            - "{_TAG_PREFIX}{devel-onednn}{onednn-jupyter}"
            - "{_TAG_PREFIX}{onednn}"
            - "{_TAG_PREFIX}{onednn-mpich-horovod}"
            - "{_TAG_PREFIX}{onednn-mpich-horovod}{onednn-jupyter}"
            - "{_TAG_PREFIX}{onednn-mpi-horovod}"
            - "{_TAG_PREFIX}{onednn-mpi-horovod}{onednn-jupyter}"
            - "{_TAG_PREFIX}{onednn}{onednn-jupyter}"
            - "{_TAG_PREFIX}{onednn}{onednn-jupyter}"

    # Dockerfiles stored in the TF repo; not pushed anywhere
    dockerfiles:
        is_dockerfiles: true
        upload_images: false
        tag_specs:
            - "{devel-onednn}"
            - "{devel-onednn-mpich-horovod}"
            - "{devel-onednn-mpich-horovod}{onednn-jupyter}"
            - "{devel-onednn-mpi-horovod}"
            - "{devel-onednn-mpi-horovod}{onednn-jupyter}"
            - "{devel-onednn}{onednn-jupyter}"
            - "{devel-onednn}{onednn-jupyter}"
            - "{onednn}"
            - "{onednn-mpich-horovod}"
            - "{onednn-mpich-horovod}{onednn-jupyter}"
            - "{onednn-mpi-horovod}"
            - "{onednn-mpi-horovod}{onednn-jupyter}"
            - "{onednn}{onednn-jupyter}"
            - "{ubuntu-devel-arm64v8}{jupyter}"
            - "{ubuntu-devel}{jupyter}"
            - "{ubuntu-devel-ppc64le}{jupyter}"
            - "{ubuntu}{jupyter}"
            - "{ubuntu-ppc64le}{jupyter}"

slice_sets:

    jupyter:
        - add_to_name: ""
        - add_to_name: "-jupyter"
          partials:
              - jupyter

    onednn-jupyter:
        - add_to_name: ""
        - add_to_name: "-jupyter"
          partials:
              - onednn/jupyter

    ubuntu:
        - add_to_name: ""
          dockerfile_exclusive_name: "cpu"
          args:
              - TF_PACKAGE=tensorflow-cpu
          partials:
              - ubuntu/version
              - ubuntu/cpu
              - ubuntu/python
              - tensorflow
              - shell
        - add_to_name: "-gpu"
          dockerfile_exclusive_name: "gpu"
          args:
              - TF_PACKAGE=tensorflow
          partials:
              - ubuntu/version
              - ubuntu/nvidia
              - ubuntu/python
              - tensorflow
              - shell
          tests:
              - import-gpu.sh
          test_runtime: nvidia

    ubuntu-devel:
        - add_to_name: "devel"
          dockerfile_exclusive_name: "devel-cpu"
          partials:
              - ubuntu/version
              - ubuntu/devel-cpu
              - ubuntu/python
              - ubuntu/bazel
              - shell
          tests:
              - build-cpu.sh
          args:
              - CHECKOUT_TF_SRC=1
        - add_to_name: "devel-gpu"
          dockerfile_exclusive_name: "devel-gpu"
          partials:
              - ubuntu/version
              - ubuntu/devel-nvidia
              - ubuntu/python
              - ubuntu/bazel
              - shell
          tests:
              - build-gpu.sh
          test_runtime: nvidia
          args:
              - CHECKOUT_TF_SRC=1

    ubuntu-devel-arm64v8:
        - add_to_name: "devel-arm64v8"
          dockerfile_exclusive_name: "devel-cpu-arm64v8"
          dockerfile_subdirectory: "arm64v8"
          partials:
              - ubuntu/version
              - ubuntu/devel-cpu
              - ubuntu/python
              - ubuntu/bazelbuild-arm64v8
              - shell
          tests:
              - build-cpu.sh
          args:
              - UBUNTU_VERSION=18.04
              - CHECKOUT_TF_SRC=1

    onednn:
        - add_to_name: "-16.04"
          dockerfile_exclusive_name: "ubuntu-16.04"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/cpu
              - onednn/ubuntu/python3
              - tensorflow
              - shell
          tests:
              - import-onednn.sh
          args:
              - TF_PACKAGE=intel-tensorflow
              - UBUNTU_VERSION=16.04
              - PYTHON=python3.6
        - add_to_name: "-18.04"
          dockerfile_exclusive_name: "ubuntu-18.04"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/cpu
              - onednn/ubuntu/python
              - tensorflow
              - shell
          tests:
              - import-onednn.sh
          args:
              - TF_PACKAGE=intel-tensorflow
              - UBUNTU_VERSION=18.04
              - PYTHON=python3
        - add_to_name: "-20.04"
          dockerfile_exclusive_name: "ubuntu-20.04"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/cpu
              - onednn/ubuntu/python
              - tensorflow
              - shell
          tests:
              - import-onednn.sh
          args:
              - TF_PACKAGE=intel-tensorflow
              - UBUNTU_VERSION=20.04
              - PYTHON=python3
        - add_to_name: "-7"
          dockerfile_exclusive_name: "centos-7"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/cpu
              - onednn/centos/python
              - onednn/centos/yum-py2
              - tensorflow
              - shell
          tests:
              - import-onednn.sh
          args:
              - TF_PACKAGE=intel-tensorflow
              - CENTOS_VERSION=7
              - PYTHON=python3
              - HOROVOD_VERSION=v0.21.1
        - add_to_name: "-8"
          dockerfile_exclusive_name: "centos-8"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/cpu
              - onednn/centos/python
              - tensorflow
              - shell
          tests:
              - import-onednn.sh
          args:
              - TF_PACKAGE=intel-tensorflow
              - CENTOS_VERSION=8
              - PYTHON=python3
              - HOROVOD_VERSION=v0.21.1

    devel-onednn:
        - add_to_name: "-16.04-devel"
          dockerfile_exclusive_name: "ubuntu-16.04-devel"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/devel
              - onednn/ubuntu/python3
              - onednn/ubuntu/bazel
              - shell
          tests:
              - ""
          args:
              - UBUNTU_VERSION=16.04
              - CHECKOUT_TF_SRC=1
              - TF_BRANCH=master
              - PYTHON=python3.6
        - add_to_name: "-18.04-devel"
          dockerfile_exclusive_name: "ubuntu-18.04-devel"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/devel
              - onednn/ubuntu/python
              - onednn/ubuntu/bazel
              - shell
          tests:
              - ""
          args:
              - UBUNTU_VERSION=18.04
              - CHECKOUT_TF_SRC=1
              - TF_BRANCH=master
              - PYTHON=python3
        - add_to_name: "-20.04-devel"
          dockerfile_exclusive_name: "ubuntu-20.04-devel"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/devel
              - onednn/ubuntu/python
              - onednn/ubuntu/bazel
              - shell
          tests:
              - ""
          args:
              - UBUNTU_VERSION=20.04
              - CHECKOUT_TF_SRC=1
              - TF_BRANCH=master
              - PYTHON=python3
        - add_to_name: "-7-devel"
          dockerfile_exclusive_name: "centos-7-devel"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/devel-7
              - onednn/centos/devel
              - onednn/centos/python
              - onednn/centos/yum-py2
              - onednn/centos/bazel
              - shell
          tests:
              - ""
          args:
              - CENTOS_VERSION=7
              - CHECKOUT_TF_SRC=1
              - TF_BRANCH=master
              - PYTHON=python3
              - HOROVOD_VERSION=v0.21.1
        - add_to_name: "-8-devel"
          dockerfile_exclusive_name: "centos-8-devel"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/devel-8
              - onednn/centos/devel
              - onednn/centos/python
              - onednn/centos/bazel
              - shell
          tests:
              - ""
          args:
              - CENTOS_VERSION=8
              - CHECKOUT_TF_SRC=1
              - TF_BRANCH=master
              - PYTHON=python3
              - HOROVOD_VERSION=v0.21.1

    onednn-mpi-horovod:
        - add_to_name: "-16.04-mpi-horovod"
          dockerfile_exclusive_name: "ubuntu-16.04-mpi-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/cpu
              - onednn/ubuntu/python3
              - tensorflow
              - onednn/ubuntu/mpi
              - onednn/ubuntu/1604-horovod
              - shell
          tests:
              - import-onednn-horovod.sh
          args:
              - UBUNTU_VERSION=16.04
              - DEBIAN_FRONTEND="noninteractive"
              - TF_PACKAGE=intel-tensorflow
              - PYTHON=python3.6
        - add_to_name: "-18.04-mpi-horovod"
          dockerfile_exclusive_name: "ubuntu-18.04-mpi-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/cpu
              - onednn/ubuntu/python
              - tensorflow
              - onednn/ubuntu/mpi
              - onednn/ubuntu/horovod
              - shell
          tests:
              - import-onednn-horovod.sh
          args:
              - UBUNTU_VERSION=18.04
              - DEBIAN_FRONTEND="noninteractive"
              - TF_PACKAGE=intel-tensorflow
              - PYTHON=python3
        - add_to_name: "-20.04-mpi-horovod"
          dockerfile_exclusive_name: "ubuntu-20.04-mpi-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/cpu
              - onednn/ubuntu/python
              - tensorflow
              - onednn/ubuntu/mpi
              - onednn/ubuntu/2004-horovod
              - shell
          tests:
              - import-onednn-horovod.sh
          args:
              - UBUNTU_VERSION=20.04
              - DEBIAN_FRONTEND="noninteractive"
              - TF_PACKAGE=intel-tensorflow
              - PYTHON=python3
        - add_to_name: "-7-mpi-horovod"
          dockerfile_exclusive_name: "centos-7-mpi-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/cpu
              - onednn/centos/python
              - onednn/centos/yum-py2
              - tensorflow
              - onednn/centos/mpi
              - onednn/centos/horovod-7
              - shell
          tests:
              - import-onednn-horovod.sh
          args:
              - CENTOS_VERSION=7
              - PYTHON=python3
              - TF_PACKAGE=intel-tensorflow
              - HOROVOD_VERSION=v0.21.1
        - add_to_name: "-8-mpi-horovod"
          dockerfile_exclusive_name: "centos-8-mpi-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/cpu
              - onednn/centos/python
              - tensorflow
              - onednn/centos/mpi
              - onednn/centos/horovod
              - shell
          tests:
              - import-onednn-horovod.sh
          args:
              - CENTOS_VERSION=8
              - PYTHON=python3
              - TF_PACKAGE=intel-tensorflow
              - HOROVOD_VERSION=v0.21.1
    devel-onednn-mpi-horovod:
        - add_to_name: "-16.04-devel-mpi-horovod"
          dockerfile_exclusive_name: "ubuntu-16.04-devel-mpi-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/devel
              - onednn/ubuntu/python3
              - onednn/ubuntu/bazel
              - onednn/ubuntu/mpi
              - onednn/ubuntu/devel-horovod
              - shell
          tests:
              - ""
          args:
              - UBUNTU_VERSION=16.04
              - CHECKOUT_TF_SRC=1
              - CHECKOUT_HOROVOD_SRC=1
              - HOROVOD_BRANCH=master
              - PYTHON=python3.6
        - add_to_name: "-18.04-devel-mpi-horovod"
          dockerfile_exclusive_name: "ubuntu-18.04-devel-mpi-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/devel
              - onednn/ubuntu/python
              - onednn/ubuntu/bazel
              - onednn/ubuntu/mpi
              - onednn/ubuntu/devel-horovod
              - shell
          tests:
              - ""
          args:
              - UBUNTU_VERSION=18.04
              - CHECKOUT_TF_SRC=1
              - CHECKOUT_HOROVOD_SRC=1
              - HOROVOD_BRANCH=master
              - PYTHON=python3
        - add_to_name: "-20.04-devel-mpi-horovod"
          dockerfile_exclusive_name: "ubuntu-20.04-devel-mpi-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/devel
              - onednn/ubuntu/python
              - onednn/ubuntu/bazel
              - onednn/ubuntu/mpi
              - onednn/ubuntu/devel-horovod
              - shell
          tests:
              - ""
          args:
              - UBUNTU_VERSION=20.04
              - CHECKOUT_TF_SRC=1
              - CHECKOUT_HOROVOD_SRC=1
              - HOROVOD_BRANCH=master
              - PYTHON=python3
        - add_to_name: "-7-devel-mpi-horovod"
          dockerfile_exclusive_name: "centos-7-devel-mpi-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/devel-7
              - onednn/centos/devel
              - onednn/centos/python
              - onednn/centos/yum-py2
              - onednn/centos/bazel
              - onednn/centos/mpi
              - onednn/centos/devel-horovod
              - shell
          tests:
              - ""
          args:
              - CENTOS_VERSION=7
              - PYTHON=python3
              - CHECKOUT_TF_SRC=1
              - CHECKOUT_HOROVOD_SRC=1
              - HOROVOD_BRANCH=master

        - add_to_name: "-8-devel-mpi-horovod"
          dockerfile_exclusive_name: "centos-8-devel-mpi-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/devel-8
              - onednn/centos/devel
              - onednn/centos/python
              - onednn/centos/bazel
              - onednn/centos/mpi
              - onednn/centos/devel-horovod
              - shell
          tests:
              - ""
          args:
              - CENTOS_VERSION=8
              - PYTHON=python3
              - CHECKOUT_TF_SRC=1
              - CHECKOUT_HOROVOD_SRC=1
              - HOROVOD_BRANCH=master

    onednn-mpich-horovod:
        - add_to_name: "-16.04-mpich-horovod"
          dockerfile_exclusive_name: "ubuntu-16.04-mpich-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/cpu
              - onednn/ubuntu/python3
              - tensorflow
              - onednn/ubuntu/1604-mpich
              - onednn/ubuntu/1604-horovod
              - shell
          tests:
              - import-onednn-horovod.sh
          args:
              - UBUNTU_VERSION=16.04
              - DEBIAN_FRONTEND="noninteractive"
              - TF_PACKAGE=intel-tensorflow
              - PYTHON=python3.6
        - add_to_name: "-18.04-mpich-horovod"
          dockerfile_exclusive_name: "ubuntu-18.04-mpich-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/cpu
              - onednn/ubuntu/python
              - tensorflow
              - onednn/ubuntu/mpich
              - onednn/ubuntu/horovod
              - shell
          tests:
              - import-onednn-horovod.sh
          args:
              - UBUNTU_VERSION=18.04
              - DEBIAN_FRONTEND="noninteractive"
              - TF_PACKAGE=intel-tensorflow
              - PYTHON=python3
        - add_to_name: "-20.04-mpich-horovod"
          dockerfile_exclusive_name: "ubuntu-20.04-mpich-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/cpu
              - onednn/ubuntu/python
              - tensorflow
              - onednn/ubuntu/mpich
              - onednn/ubuntu/2004-horovod
              - shell
          tests:
              - import-onednn-horovod.sh
          args:
              - UBUNTU_VERSION=20.04
              - DEBIAN_FRONTEND="noninteractive"
              - TF_PACKAGE=intel-tensorflow
              - PYTHON=python3
        - add_to_name: "-7-mpich-horovod"
          dockerfile_exclusive_name: "centos-7-mpich-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/cpu
              - onednn/centos/python
              - onednn/centos/yum-py2
              - tensorflow
              - onednn/centos/mpich
              - onednn/centos/horovod-7
              - shell
          tests:
              - import-onednn-horovod.sh
          args:
              - CENTOS_VERSION=7
              - PYTHON=python3
              - TF_PACKAGE=intel-tensorflow
              - HOROVOD_VERSION=v0.21.1
        - add_to_name: "-8-mpich-horovod"
          dockerfile_exclusive_name: "centos-8-mpich-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/cpu
              - onednn/centos/python
              - tensorflow
              - onednn/centos/mpich
              - onednn/centos/horovod
              - shell
          tests:
              - import-onednn-horovod.sh
          args:
              - CENTOS_VERSION=8
              - PYTHON=python3
              - TF_PACKAGE=intel-tensorflow
              - HOROVOD_VERSION=v0.21.1

    devel-onednn-mpich-horovod:
        - add_to_name: "-16.04-devel-mpich-horovod"
          dockerfile_exclusive_name: "ubuntu-16.04-devel-mpich-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/devel
              - onednn/ubuntu/python3
              - onednn/ubuntu/bazel
              - onednn/ubuntu/1604-mpich
              - onednn/ubuntu/devel-horovod
              - shell
          tests:
              - ""
          args:
              - UBUNTU_VERSION=16.04
              - CHECKOUT_TF_SRC=1
              - CHECKOUT_HOROVOD_SRC=1
              - HOROVOD_BRANCH=master
              - PYTHON=python3.6
        - add_to_name: "-18.04-devel-mpich-horovod"
          dockerfile_exclusive_name: "ubuntu-18.04-devel-mpich-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/devel
              - onednn/ubuntu/python
              - onednn/ubuntu/bazel
              - onednn/ubuntu/mpich
              - onednn/ubuntu/devel-horovod
              - shell
          tests:
              - ""
          args:
              - UBUNTU_VERSION=18.04
              - CHECKOUT_TF_SRC=1
              - CHECKOUT_HOROVOD_SRC=1
              - HOROVOD_BRANCH=master
              - PYTHON=python3
        - add_to_name: "-20.04-devel-mpich-horovod"
          dockerfile_exclusive_name: "ubuntu-20.04-devel-mpich-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/ubuntu/version
              - onednn/ubuntu/devel
              - onednn/ubuntu/python
              - onednn/ubuntu/bazel
              - onednn/ubuntu/mpich
              - onednn/ubuntu/devel-horovod
              - shell
          tests:
              - ""
          args:
              - UBUNTU_VERSION=20.04
              - CHECKOUT_TF_SRC=1
              - CHECKOUT_HOROVOD_SRC=1
              - HOROVOD_BRANCH=master
              - PYTHON=python3
        - add_to_name: "-7-devel-mpich-horovod"
          dockerfile_exclusive_name: "centos-7-devel-mpich-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/devel-7
              - onednn/centos/devel
              - onednn/centos/python
              - onednn/centos/yum-py2
              - onednn/centos/bazel
              - onednn/centos/mpich
              - onednn/centos/devel-horovod
              - shell
          tests:
              - ""
          args:
              - CENTOS_VERSION=7
              - PYTHON=python3
              - CHECKOUT_TF_SRC=1
              - CHECKOUT_HOROVOD_SRC=1
              - HOROVOD_BRANCH=master
        - add_to_name: "-8-devel-mpich-horovod"
          dockerfile_exclusive_name: "centos-8-devel-mpich-horovod"
          dockerfile_subdirectory: "onednn"
          partials:
              - onednn/centos/version
              - onednn/centos/devel-8
              - onednn/centos/devel
              - onednn/centos/python
              - onednn/centos/bazel
              - onednn/centos/mpich
              - onednn/centos/devel-horovod
              - shell
          tests:
              - ""
          args:
              - CENTOS_VERSION=8
              - PYTHON=python3
              - CHECKOUT_TF_SRC=1
              - CHECKOUT_HOROVOD_SRC=1
              - HOROVOD_BRANCH=master

    ubuntu-ppc64le:
        - add_to_name: "-ppc64le"
          dockerfile_exclusive_name: "cpu-ppc64le"
          dockerfile_subdirectory: "ppc64le"
          args:
              - UBUNTU_VERSION=18.04
          partials:
              - ubuntu/version
              - ubuntu/cpu
              - ubuntu/python
              - tensorflow-ppc64le
              - shell
        - add_to_name: "-gpu-ppc64le"
          dockerfile_exclusive_name: "gpu-ppc64le"
          dockerfile_subdirectory: "ppc64le"
          args:
              - UBUNTU_VERSION=18.04
              - ARCH=ppc64le
              - CUDA=10.0
              - TF_PACKAGE=tensorflow
          partials:
              - ubuntu/version
              - ubuntu/nvidia
              - ubuntu/python
              - tensorflow-ppc64le
              - shell
          tests:
              - import-gpu.sh
          test_runtime: nvidia

    ubuntu-devel-ppc64le:
        - add_to_name: "devel-ppc64le"
          dockerfile_exclusive_name: "devel-cpu-ppc64le"
          dockerfile_subdirectory: "ppc64le"
          partials:
              - ubuntu/version
              - ubuntu/devel-cpu
              - ubuntu/python
              - ubuntu/bazelbuild
              - shell
          tests:
              - build-cpu.sh
          args:
              - UBUNTU_VERSION=18.04
              - CHECKOUT_TF_SRC=1
        - add_to_name: "devel-gpu-ppc64le"
          dockerfile_exclusive_name: "devel-gpu-ppc64le"
          dockerfile_subdirectory: "ppc64le"
          args:
              - UBUNTU_VERSION=18.04
              - ARCH=ppc64le
              - CUDA=10.0
              - LIB_DIR_PREFIX=powerpc64le
              - CHECKOUT_TF_SRC=1
          partials:
              - ubuntu/version
              - ubuntu/devel-nvidia
              - ubuntu/python
              - ubuntu/bazelbuild
              - shell
          tests:
              - build-gpu.sh
          test_runtime: nvidia

    nightly:
        - add_to_name: "nightly"
          partials:
              - ubuntu/version
              - ubuntu/cpu
              - ubuntu/python
              - tensorflow
              - shell
          args:
              - TF_PACKAGE=tf-nightly-cpu
          tests:
              - import.sh
        - add_to_name: "nightly-gpu"
          partials:
              - ubuntu/version
              - ubuntu/nvidia
              - ubuntu/python
              - tensorflow
              - shell
          test_runtime: nvidia
          tests:
              - import-gpu.sh
          args:
              - TF_PACKAGE=tf-nightly
