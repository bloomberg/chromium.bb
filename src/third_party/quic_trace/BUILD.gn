import("//third_party/protobuf/proto_library.gni")

# Since most of the Chromium uses proto_lite, modify the source proto file to
# use the lite runtime.
action("quic_trace_proto_lite_runtime") {
  script = "append_lite_runtime.py"
  inputs = [ "src/lib/quic_trace.proto" ]
  outputs = [ "$target_gen_dir/quic_trace.proto" ]
  args =
      rebase_path(inputs, root_build_dir) + rebase_path(outputs, root_build_dir)
}

proto_library("quic_trace_proto") {
  # QUIC trace is only used in unit tests and stand-alone command line tools.
  # It is not linked into the network stack itself due to the Cronet binary
  # size concerns.
  visibility = [
    "//net:quic_test_tools",
    "//net/third_party/quiche:quic_test_tools_core",
  ]

  sources = [ "$target_gen_dir/quic_trace.proto" ]
  proto_deps = [ ":quic_trace_proto_lite_runtime" ]
  component_build_force_source_set = true
  testonly = true

  # The result can be included as third_party/quic_trace/lib/quic_trace.pb.h
  proto_out_dir = rebase_path(".", "//") + "/lib"

  extra_configs = [ "//build/config/compiler:wexit_time_destructors" ]
}
