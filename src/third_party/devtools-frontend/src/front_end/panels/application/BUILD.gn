# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../../scripts/build/ninja/devtools_entrypoint.gni")
import("../../../scripts/build/ninja/devtools_module.gni")
import("../../../scripts/build/ninja/generate_css.gni")
import("../visibility.gni")

generate_css("css_files") {
  sources = [
    "appManifestView.css",
    "backgroundServiceView.css",
    "cookieItemsView.css",
    "frameDetailsReportView.css",
    "indexedDBViews.css",
    "interestGroupStorageView.css",
    "reportingApiReportsView.css",
    "resourcesPanel.css",
    "resourcesSidebar.css",
    "serviceWorkerCacheViews.css",
    "serviceWorkerUpdateCycleView.css",
    "serviceWorkersView.css",
    "storageView.css",
  ]
}

devtools_module("application") {
  sources = [
    "AppManifestView.ts",
    "ApplicationPanelCacheSection.ts",
    "ApplicationPanelSidebar.ts",
    "ApplicationPanelTreeElement.ts",
    "BackgroundServiceModel.ts",
    "BackgroundServiceView.ts",
    "CookieItemsView.ts",
    "DOMStorageItemsView.ts",
    "DOMStorageModel.ts",
    "DatabaseModel.ts",
    "DatabaseQueryView.ts",
    "DatabaseTableView.ts",
    "IndexedDBModel.ts",
    "IndexedDBViews.ts",
    "InterestGroupStorageModel.ts",
    "InterestGroupStorageView.ts",
    "InterestGroupTreeElement.ts",
    "OpenedWindowDetailsView.ts",
    "ReportingApiReportsView.ts",
    "ReportingApiTreeElement.ts",
    "ReportingApiView.ts",
    "ResourcesPanel.ts",
    "ServiceWorkerCacheViews.ts",
    "ServiceWorkerUpdateCycleView.ts",
    "ServiceWorkersView.ts",
    "StorageItemsView.ts",
    "StorageView.ts",
    "TrustTokensTreeElement.ts",
  ]

  deps = [
    "../../core/common:bundle",
    "../../core/host:bundle",
    "../../core/i18n:bundle",
    "../../core/platform:bundle",
    "../../core/protocol_client:bundle",
    "../../core/root:bundle",
    "../../core/sdk:bundle",
    "../../generated:protocol",
    "../../models/bindings:bundle",
    "../../models/issues_manager:bundle",
    "../../models/logs:bundle",
    "../../models/text_utils:bundle",
    "../../models/workspace:bundle",
    "../../panels/mobile_throttling:bundle",
    "../../panels/network:bundle",
    "../../panels/network/forward:bundle",
    "../../ui/components/data_grid:bundle",
    "../../ui/components/expandable_list:bundle",
    "../../ui/components/report_view:bundle",
    "../../ui/legacy:bundle",
    "../../ui/legacy/components/cookie_table:bundle",
    "../../ui/legacy/components/data_grid:bundle",
    "../../ui/legacy/components/inline_editor:bundle",
    "../../ui/legacy/components/object_ui:bundle",
    "../../ui/legacy/components/source_frame:bundle",
    "../../ui/legacy/components/utils:bundle",
    "./components:bundle",
  ]
}

devtools_entrypoint("bundle") {
  entrypoint = "application.ts"

  deps = [
    ":application",
    ":css_files",
    "../../ui/legacy:css_files",
  ]

  visibility = [
    ":*",
    "../../../test/unittests/front_end/entrypoints/missing_entrypoints/*",
    "../../../test/unittests/front_end/panels/application/*",
    "../../entrypoints/*",
  ]

  visibility += devtools_panels_visibility
}

devtools_entrypoint("legacy") {
  entrypoint = "application-legacy.ts"

  deps = [ ":bundle" ]

  visibility = [
    "../..:legacy_entrypoints",
    "../../legacy_test_runner/*",
  ]
}

devtools_entrypoint("meta") {
  entrypoint = "application-meta.ts"

  deps = [ ":bundle" ]

  visibility = [ "../../entrypoints/*" ]
}
