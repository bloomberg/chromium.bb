/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";
option optimize_for = LITE_RUNTIME;

package perfetto.protos;

// Periodically emitted data that's common to all events emitted by the same
// thread, i.e. all events in the same packet sequence. Valid for all subsequent
// events in the same sequence.
//
// Next id: 8.
message ThreadDescriptor {
  optional int32 pid = 1;
  optional int32 tid = 2;

  // To support old UI. New UI should determine default sorting by thread_type.
  optional int32 legacy_sort_index = 3;

  enum ChromeThreadType {
    THREAD_UNSPECIFIED = 0;
    // TODO(eseckler): Add thread types.
  };
  optional ChromeThreadType thread_type = 4;

  // TODO(eseckler): Replace this with ChromeThreadType where possible.
  optional string thread_name = 5;

  // Absolute reference values. Clock values in subsequent TrackEvents can be
  // encoded accumulatively and relative to these. This reduces their var-int
  // encoding size.
  optional int64 reference_timestamp_us = 6;
  optional int64 reference_thread_time_us = 7;
}
