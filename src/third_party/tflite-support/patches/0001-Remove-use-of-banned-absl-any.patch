From 670dfffa386fd0ff28e66cfe1238af43b4e587ce Mon Sep 17 00:00:00 2001
From: Daniel Rubery <drubery@chromium.org>
Date: Thu, 6 May 2021 11:22:13 -0700
Subject: [PATCH] Remove use of banned absl::any

---
 .../cc/task/vision/core/frame_buffer.h        | 27 -------------------
 1 file changed, 27 deletions(-)

diff --git a/third_party/tflite-support/src/tensorflow_lite_support/cc/task/vision/core/frame_buffer.h b/third_party/tflite-support/src/tensorflow_lite_support/cc/task/vision/core/frame_buffer.h
index 2bea92883c4d..1556b7dfabef 100644
--- a/third_party/tflite-support/src/tensorflow_lite_support/cc/task/vision/core/frame_buffer.h
+++ b/third_party/tflite-support/src/tensorflow_lite_support/cc/task/vision/core/frame_buffer.h
@@ -27,7 +27,6 @@ limitations under the License.
 #include "absl/strings/str_cat.h"
 #include "absl/time/clock.h"
 #include "absl/time/time.h"
-#include "absl/types/any.h"
 #include "absl/types/optional.h"
 #include "tensorflow_lite_support/cc/port/integral_types.h"
 #include "tensorflow_lite_support/cc/port/statusor.h"
@@ -253,31 +252,6 @@ class FrameBuffer {
     return {};
   }
 
-  // Returns the tag associated to the tag_key.
-  absl::any GetTag(const std::string& tag_key) const {
-    auto iter = tags_.find(tag_key);
-    if (iter != tags_.end()) {
-      return iter->second;
-    }
-    return absl::any();
-  }
-
-  // Inserts or updates the tags map with key value pair (tag_key, tag_value).
-  void InsertOrUpdateTag(const std::string& tag_key, absl::any tag_value) {
-    tags_[tag_key] = std::move(tag_value);
-  }
-
-  // Inserts the key value pair (tag_key, tag_value) into tags map. If the
-  // tag_key already exists, an internal error will return.
-  absl::Status InsertTag(const std::string& tag_key, absl::any tag_value) {
-    auto iter = tags_.emplace(tag_key, tag_value);
-    if (iter.second) {
-      return absl::OkStatus();
-    }
-    return absl::InternalError(absl::StrCat(
-        "tag_key already exists in tags.tag_key was not inserted: ", tag_key));
-  }
-
   // Returns FrameBuffer dimension.
   const Dimension dimension() const { return dimension_; }
 
@@ -292,7 +266,6 @@ class FrameBuffer {
 
  private:
   std::vector<Plane> planes_;
-  std::map<std::string, absl::any> tags_;
   Dimension dimension_;
   Format format_;
   Orientation orientation_;
-- 
2.31.1.607.g51e8a6a459-goog

