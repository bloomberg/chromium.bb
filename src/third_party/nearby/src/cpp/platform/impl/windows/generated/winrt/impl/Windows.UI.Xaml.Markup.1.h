// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Xaml_Markup_1_H
#define WINRT_Windows_UI_Xaml_Markup_1_H
#include "winrt/impl/Windows.UI.Xaml.Markup.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Markup
{
    struct __declspec(empty_bases) IComponentConnector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComponentConnector>
    {
        IComponentConnector(std::nullptr_t = nullptr) noexcept {}
        IComponentConnector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComponentConnector(IComponentConnector const&) noexcept = default;
        IComponentConnector(IComponentConnector&&) noexcept = default;
        IComponentConnector& operator=(IComponentConnector const&) & noexcept = default;
        IComponentConnector& operator=(IComponentConnector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComponentConnector2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComponentConnector2>
    {
        IComponentConnector2(std::nullptr_t = nullptr) noexcept {}
        IComponentConnector2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComponentConnector2(IComponentConnector2 const&) noexcept = default;
        IComponentConnector2(IComponentConnector2&&) noexcept = default;
        IComponentConnector2& operator=(IComponentConnector2 const&) & noexcept = default;
        IComponentConnector2& operator=(IComponentConnector2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateComponent :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateComponent>
    {
        IDataTemplateComponent(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateComponent(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateComponent(IDataTemplateComponent const&) noexcept = default;
        IDataTemplateComponent(IDataTemplateComponent&&) noexcept = default;
        IDataTemplateComponent& operator=(IDataTemplateComponent const&) & noexcept = default;
        IDataTemplateComponent& operator=(IDataTemplateComponent&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMarkupExtension :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMarkupExtension>
    {
        IMarkupExtension(std::nullptr_t = nullptr) noexcept {}
        IMarkupExtension(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMarkupExtension(IMarkupExtension const&) noexcept = default;
        IMarkupExtension(IMarkupExtension&&) noexcept = default;
        IMarkupExtension& operator=(IMarkupExtension const&) & noexcept = default;
        IMarkupExtension& operator=(IMarkupExtension&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMarkupExtensionFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMarkupExtensionFactory>
    {
        IMarkupExtensionFactory(std::nullptr_t = nullptr) noexcept {}
        IMarkupExtensionFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMarkupExtensionFactory(IMarkupExtensionFactory const&) noexcept = default;
        IMarkupExtensionFactory(IMarkupExtensionFactory&&) noexcept = default;
        IMarkupExtensionFactory& operator=(IMarkupExtensionFactory const&) & noexcept = default;
        IMarkupExtensionFactory& operator=(IMarkupExtensionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMarkupExtensionOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMarkupExtensionOverrides>
    {
        IMarkupExtensionOverrides(std::nullptr_t = nullptr) noexcept {}
        IMarkupExtensionOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMarkupExtensionOverrides(IMarkupExtensionOverrides const&) noexcept = default;
        IMarkupExtensionOverrides(IMarkupExtensionOverrides&&) noexcept = default;
        IMarkupExtensionOverrides& operator=(IMarkupExtensionOverrides const&) & noexcept = default;
        IMarkupExtensionOverrides& operator=(IMarkupExtensionOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlBinaryWriter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlBinaryWriter>
    {
        IXamlBinaryWriter(std::nullptr_t = nullptr) noexcept {}
        IXamlBinaryWriter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlBinaryWriter(IXamlBinaryWriter const&) noexcept = default;
        IXamlBinaryWriter(IXamlBinaryWriter&&) noexcept = default;
        IXamlBinaryWriter& operator=(IXamlBinaryWriter const&) & noexcept = default;
        IXamlBinaryWriter& operator=(IXamlBinaryWriter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlBinaryWriterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlBinaryWriterStatics>
    {
        IXamlBinaryWriterStatics(std::nullptr_t = nullptr) noexcept {}
        IXamlBinaryWriterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlBinaryWriterStatics(IXamlBinaryWriterStatics const&) noexcept = default;
        IXamlBinaryWriterStatics(IXamlBinaryWriterStatics&&) noexcept = default;
        IXamlBinaryWriterStatics& operator=(IXamlBinaryWriterStatics const&) & noexcept = default;
        IXamlBinaryWriterStatics& operator=(IXamlBinaryWriterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlBindScopeDiagnostics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlBindScopeDiagnostics>
    {
        IXamlBindScopeDiagnostics(std::nullptr_t = nullptr) noexcept {}
        IXamlBindScopeDiagnostics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlBindScopeDiagnostics(IXamlBindScopeDiagnostics const&) noexcept = default;
        IXamlBindScopeDiagnostics(IXamlBindScopeDiagnostics&&) noexcept = default;
        IXamlBindScopeDiagnostics& operator=(IXamlBindScopeDiagnostics const&) & noexcept = default;
        IXamlBindScopeDiagnostics& operator=(IXamlBindScopeDiagnostics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlBindingHelper :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlBindingHelper>
    {
        IXamlBindingHelper(std::nullptr_t = nullptr) noexcept {}
        IXamlBindingHelper(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlBindingHelper(IXamlBindingHelper const&) noexcept = default;
        IXamlBindingHelper(IXamlBindingHelper&&) noexcept = default;
        IXamlBindingHelper& operator=(IXamlBindingHelper const&) & noexcept = default;
        IXamlBindingHelper& operator=(IXamlBindingHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlBindingHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlBindingHelperStatics>
    {
        IXamlBindingHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IXamlBindingHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlBindingHelperStatics(IXamlBindingHelperStatics const&) noexcept = default;
        IXamlBindingHelperStatics(IXamlBindingHelperStatics&&) noexcept = default;
        IXamlBindingHelperStatics& operator=(IXamlBindingHelperStatics const&) & noexcept = default;
        IXamlBindingHelperStatics& operator=(IXamlBindingHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlMarkupHelper :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlMarkupHelper>
    {
        IXamlMarkupHelper(std::nullptr_t = nullptr) noexcept {}
        IXamlMarkupHelper(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlMarkupHelper(IXamlMarkupHelper const&) noexcept = default;
        IXamlMarkupHelper(IXamlMarkupHelper&&) noexcept = default;
        IXamlMarkupHelper& operator=(IXamlMarkupHelper const&) & noexcept = default;
        IXamlMarkupHelper& operator=(IXamlMarkupHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlMarkupHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlMarkupHelperStatics>
    {
        IXamlMarkupHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IXamlMarkupHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlMarkupHelperStatics(IXamlMarkupHelperStatics const&) noexcept = default;
        IXamlMarkupHelperStatics(IXamlMarkupHelperStatics&&) noexcept = default;
        IXamlMarkupHelperStatics& operator=(IXamlMarkupHelperStatics const&) & noexcept = default;
        IXamlMarkupHelperStatics& operator=(IXamlMarkupHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlMember :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlMember>
    {
        IXamlMember(std::nullptr_t = nullptr) noexcept {}
        IXamlMember(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlMember(IXamlMember const&) noexcept = default;
        IXamlMember(IXamlMember&&) noexcept = default;
        IXamlMember& operator=(IXamlMember const&) & noexcept = default;
        IXamlMember& operator=(IXamlMember&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlMetadataProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlMetadataProvider>
    {
        IXamlMetadataProvider(std::nullptr_t = nullptr) noexcept {}
        IXamlMetadataProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlMetadataProvider(IXamlMetadataProvider const&) noexcept = default;
        IXamlMetadataProvider(IXamlMetadataProvider&&) noexcept = default;
        IXamlMetadataProvider& operator=(IXamlMetadataProvider const&) & noexcept = default;
        IXamlMetadataProvider& operator=(IXamlMetadataProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlReader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlReader>
    {
        IXamlReader(std::nullptr_t = nullptr) noexcept {}
        IXamlReader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlReader(IXamlReader const&) noexcept = default;
        IXamlReader(IXamlReader&&) noexcept = default;
        IXamlReader& operator=(IXamlReader const&) & noexcept = default;
        IXamlReader& operator=(IXamlReader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlReaderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlReaderStatics>
    {
        IXamlReaderStatics(std::nullptr_t = nullptr) noexcept {}
        IXamlReaderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlReaderStatics(IXamlReaderStatics const&) noexcept = default;
        IXamlReaderStatics(IXamlReaderStatics&&) noexcept = default;
        IXamlReaderStatics& operator=(IXamlReaderStatics const&) & noexcept = default;
        IXamlReaderStatics& operator=(IXamlReaderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlType :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlType>
    {
        IXamlType(std::nullptr_t = nullptr) noexcept {}
        IXamlType(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlType(IXamlType const&) noexcept = default;
        IXamlType(IXamlType&&) noexcept = default;
        IXamlType& operator=(IXamlType const&) & noexcept = default;
        IXamlType& operator=(IXamlType&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlType2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlType2>,
        impl::require<winrt::Windows::UI::Xaml::Markup::IXamlType2, winrt::Windows::UI::Xaml::Markup::IXamlType>
    {
        IXamlType2(std::nullptr_t = nullptr) noexcept {}
        IXamlType2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlType2(IXamlType2 const&) noexcept = default;
        IXamlType2(IXamlType2&&) noexcept = default;
        IXamlType2& operator=(IXamlType2 const&) & noexcept = default;
        IXamlType2& operator=(IXamlType2&&) & noexcept = default;
    };
}
#endif
