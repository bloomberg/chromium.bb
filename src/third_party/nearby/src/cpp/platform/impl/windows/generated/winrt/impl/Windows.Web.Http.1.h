// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Web_Http_1_H
#define WINRT_Windows_Web_Http_1_H
#include "winrt/impl/Windows.Foundation.0.h"
#include "winrt/impl/Windows.Web.Http.0.h"
WINRT_EXPORT namespace winrt::Windows::Web::Http
{
    struct __declspec(empty_bases) IHttpBufferContentFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpBufferContentFactory>
    {
        IHttpBufferContentFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpBufferContentFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpBufferContentFactory(IHttpBufferContentFactory const&) noexcept = default;
        IHttpBufferContentFactory(IHttpBufferContentFactory&&) noexcept = default;
        IHttpBufferContentFactory& operator=(IHttpBufferContentFactory const&) & noexcept = default;
        IHttpBufferContentFactory& operator=(IHttpBufferContentFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpClient :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpClient>
    {
        IHttpClient(std::nullptr_t = nullptr) noexcept {}
        IHttpClient(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpClient(IHttpClient const&) noexcept = default;
        IHttpClient(IHttpClient&&) noexcept = default;
        IHttpClient& operator=(IHttpClient const&) & noexcept = default;
        IHttpClient& operator=(IHttpClient&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpClient2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpClient2>
    {
        IHttpClient2(std::nullptr_t = nullptr) noexcept {}
        IHttpClient2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpClient2(IHttpClient2 const&) noexcept = default;
        IHttpClient2(IHttpClient2&&) noexcept = default;
        IHttpClient2& operator=(IHttpClient2 const&) & noexcept = default;
        IHttpClient2& operator=(IHttpClient2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpClientFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpClientFactory>
    {
        IHttpClientFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpClientFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpClientFactory(IHttpClientFactory const&) noexcept = default;
        IHttpClientFactory(IHttpClientFactory&&) noexcept = default;
        IHttpClientFactory& operator=(IHttpClientFactory const&) & noexcept = default;
        IHttpClientFactory& operator=(IHttpClientFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContent :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContent>,
        impl::require<winrt::Windows::Web::Http::IHttpContent, winrt::Windows::Foundation::IClosable>
    {
        IHttpContent(std::nullptr_t = nullptr) noexcept {}
        IHttpContent(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContent(IHttpContent const&) noexcept = default;
        IHttpContent(IHttpContent&&) noexcept = default;
        IHttpContent& operator=(IHttpContent const&) & noexcept = default;
        IHttpContent& operator=(IHttpContent&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpCookie :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCookie>
    {
        IHttpCookie(std::nullptr_t = nullptr) noexcept {}
        IHttpCookie(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCookie(IHttpCookie const&) noexcept = default;
        IHttpCookie(IHttpCookie&&) noexcept = default;
        IHttpCookie& operator=(IHttpCookie const&) & noexcept = default;
        IHttpCookie& operator=(IHttpCookie&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpCookieFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCookieFactory>
    {
        IHttpCookieFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpCookieFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCookieFactory(IHttpCookieFactory const&) noexcept = default;
        IHttpCookieFactory(IHttpCookieFactory&&) noexcept = default;
        IHttpCookieFactory& operator=(IHttpCookieFactory const&) & noexcept = default;
        IHttpCookieFactory& operator=(IHttpCookieFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpCookieManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCookieManager>
    {
        IHttpCookieManager(std::nullptr_t = nullptr) noexcept {}
        IHttpCookieManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCookieManager(IHttpCookieManager const&) noexcept = default;
        IHttpCookieManager(IHttpCookieManager&&) noexcept = default;
        IHttpCookieManager& operator=(IHttpCookieManager const&) & noexcept = default;
        IHttpCookieManager& operator=(IHttpCookieManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpFormUrlEncodedContentFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpFormUrlEncodedContentFactory>
    {
        IHttpFormUrlEncodedContentFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpFormUrlEncodedContentFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpFormUrlEncodedContentFactory(IHttpFormUrlEncodedContentFactory const&) noexcept = default;
        IHttpFormUrlEncodedContentFactory(IHttpFormUrlEncodedContentFactory&&) noexcept = default;
        IHttpFormUrlEncodedContentFactory& operator=(IHttpFormUrlEncodedContentFactory const&) & noexcept = default;
        IHttpFormUrlEncodedContentFactory& operator=(IHttpFormUrlEncodedContentFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpGetBufferResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpGetBufferResult>
    {
        IHttpGetBufferResult(std::nullptr_t = nullptr) noexcept {}
        IHttpGetBufferResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpGetBufferResult(IHttpGetBufferResult const&) noexcept = default;
        IHttpGetBufferResult(IHttpGetBufferResult&&) noexcept = default;
        IHttpGetBufferResult& operator=(IHttpGetBufferResult const&) & noexcept = default;
        IHttpGetBufferResult& operator=(IHttpGetBufferResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpGetInputStreamResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpGetInputStreamResult>
    {
        IHttpGetInputStreamResult(std::nullptr_t = nullptr) noexcept {}
        IHttpGetInputStreamResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpGetInputStreamResult(IHttpGetInputStreamResult const&) noexcept = default;
        IHttpGetInputStreamResult(IHttpGetInputStreamResult&&) noexcept = default;
        IHttpGetInputStreamResult& operator=(IHttpGetInputStreamResult const&) & noexcept = default;
        IHttpGetInputStreamResult& operator=(IHttpGetInputStreamResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpGetStringResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpGetStringResult>
    {
        IHttpGetStringResult(std::nullptr_t = nullptr) noexcept {}
        IHttpGetStringResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpGetStringResult(IHttpGetStringResult const&) noexcept = default;
        IHttpGetStringResult(IHttpGetStringResult&&) noexcept = default;
        IHttpGetStringResult& operator=(IHttpGetStringResult const&) & noexcept = default;
        IHttpGetStringResult& operator=(IHttpGetStringResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMethod :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMethod>
    {
        IHttpMethod(std::nullptr_t = nullptr) noexcept {}
        IHttpMethod(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMethod(IHttpMethod const&) noexcept = default;
        IHttpMethod(IHttpMethod&&) noexcept = default;
        IHttpMethod& operator=(IHttpMethod const&) & noexcept = default;
        IHttpMethod& operator=(IHttpMethod&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMethodFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMethodFactory>
    {
        IHttpMethodFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpMethodFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMethodFactory(IHttpMethodFactory const&) noexcept = default;
        IHttpMethodFactory(IHttpMethodFactory&&) noexcept = default;
        IHttpMethodFactory& operator=(IHttpMethodFactory const&) & noexcept = default;
        IHttpMethodFactory& operator=(IHttpMethodFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMethodStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMethodStatics>
    {
        IHttpMethodStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpMethodStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMethodStatics(IHttpMethodStatics const&) noexcept = default;
        IHttpMethodStatics(IHttpMethodStatics&&) noexcept = default;
        IHttpMethodStatics& operator=(IHttpMethodStatics const&) & noexcept = default;
        IHttpMethodStatics& operator=(IHttpMethodStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMultipartContent :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMultipartContent>
    {
        IHttpMultipartContent(std::nullptr_t = nullptr) noexcept {}
        IHttpMultipartContent(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMultipartContent(IHttpMultipartContent const&) noexcept = default;
        IHttpMultipartContent(IHttpMultipartContent&&) noexcept = default;
        IHttpMultipartContent& operator=(IHttpMultipartContent const&) & noexcept = default;
        IHttpMultipartContent& operator=(IHttpMultipartContent&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMultipartContentFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMultipartContentFactory>
    {
        IHttpMultipartContentFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpMultipartContentFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMultipartContentFactory(IHttpMultipartContentFactory const&) noexcept = default;
        IHttpMultipartContentFactory(IHttpMultipartContentFactory&&) noexcept = default;
        IHttpMultipartContentFactory& operator=(IHttpMultipartContentFactory const&) & noexcept = default;
        IHttpMultipartContentFactory& operator=(IHttpMultipartContentFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMultipartFormDataContent :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMultipartFormDataContent>
    {
        IHttpMultipartFormDataContent(std::nullptr_t = nullptr) noexcept {}
        IHttpMultipartFormDataContent(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMultipartFormDataContent(IHttpMultipartFormDataContent const&) noexcept = default;
        IHttpMultipartFormDataContent(IHttpMultipartFormDataContent&&) noexcept = default;
        IHttpMultipartFormDataContent& operator=(IHttpMultipartFormDataContent const&) & noexcept = default;
        IHttpMultipartFormDataContent& operator=(IHttpMultipartFormDataContent&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMultipartFormDataContentFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMultipartFormDataContentFactory>
    {
        IHttpMultipartFormDataContentFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpMultipartFormDataContentFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMultipartFormDataContentFactory(IHttpMultipartFormDataContentFactory const&) noexcept = default;
        IHttpMultipartFormDataContentFactory(IHttpMultipartFormDataContentFactory&&) noexcept = default;
        IHttpMultipartFormDataContentFactory& operator=(IHttpMultipartFormDataContentFactory const&) & noexcept = default;
        IHttpMultipartFormDataContentFactory& operator=(IHttpMultipartFormDataContentFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpRequestMessage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpRequestMessage>
    {
        IHttpRequestMessage(std::nullptr_t = nullptr) noexcept {}
        IHttpRequestMessage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpRequestMessage(IHttpRequestMessage const&) noexcept = default;
        IHttpRequestMessage(IHttpRequestMessage&&) noexcept = default;
        IHttpRequestMessage& operator=(IHttpRequestMessage const&) & noexcept = default;
        IHttpRequestMessage& operator=(IHttpRequestMessage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpRequestMessageFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpRequestMessageFactory>
    {
        IHttpRequestMessageFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpRequestMessageFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpRequestMessageFactory(IHttpRequestMessageFactory const&) noexcept = default;
        IHttpRequestMessageFactory(IHttpRequestMessageFactory&&) noexcept = default;
        IHttpRequestMessageFactory& operator=(IHttpRequestMessageFactory const&) & noexcept = default;
        IHttpRequestMessageFactory& operator=(IHttpRequestMessageFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpRequestResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpRequestResult>
    {
        IHttpRequestResult(std::nullptr_t = nullptr) noexcept {}
        IHttpRequestResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpRequestResult(IHttpRequestResult const&) noexcept = default;
        IHttpRequestResult(IHttpRequestResult&&) noexcept = default;
        IHttpRequestResult& operator=(IHttpRequestResult const&) & noexcept = default;
        IHttpRequestResult& operator=(IHttpRequestResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpResponseMessage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpResponseMessage>
    {
        IHttpResponseMessage(std::nullptr_t = nullptr) noexcept {}
        IHttpResponseMessage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpResponseMessage(IHttpResponseMessage const&) noexcept = default;
        IHttpResponseMessage(IHttpResponseMessage&&) noexcept = default;
        IHttpResponseMessage& operator=(IHttpResponseMessage const&) & noexcept = default;
        IHttpResponseMessage& operator=(IHttpResponseMessage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpResponseMessageFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpResponseMessageFactory>
    {
        IHttpResponseMessageFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpResponseMessageFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpResponseMessageFactory(IHttpResponseMessageFactory const&) noexcept = default;
        IHttpResponseMessageFactory(IHttpResponseMessageFactory&&) noexcept = default;
        IHttpResponseMessageFactory& operator=(IHttpResponseMessageFactory const&) & noexcept = default;
        IHttpResponseMessageFactory& operator=(IHttpResponseMessageFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpStreamContentFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpStreamContentFactory>
    {
        IHttpStreamContentFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpStreamContentFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpStreamContentFactory(IHttpStreamContentFactory const&) noexcept = default;
        IHttpStreamContentFactory(IHttpStreamContentFactory&&) noexcept = default;
        IHttpStreamContentFactory& operator=(IHttpStreamContentFactory const&) & noexcept = default;
        IHttpStreamContentFactory& operator=(IHttpStreamContentFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpStringContentFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpStringContentFactory>
    {
        IHttpStringContentFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpStringContentFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpStringContentFactory(IHttpStringContentFactory const&) noexcept = default;
        IHttpStringContentFactory(IHttpStringContentFactory&&) noexcept = default;
        IHttpStringContentFactory& operator=(IHttpStringContentFactory const&) & noexcept = default;
        IHttpStringContentFactory& operator=(IHttpStringContentFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpTransportInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpTransportInformation>
    {
        IHttpTransportInformation(std::nullptr_t = nullptr) noexcept {}
        IHttpTransportInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpTransportInformation(IHttpTransportInformation const&) noexcept = default;
        IHttpTransportInformation(IHttpTransportInformation&&) noexcept = default;
        IHttpTransportInformation& operator=(IHttpTransportInformation const&) & noexcept = default;
        IHttpTransportInformation& operator=(IHttpTransportInformation&&) & noexcept = default;
    };
}
#endif
