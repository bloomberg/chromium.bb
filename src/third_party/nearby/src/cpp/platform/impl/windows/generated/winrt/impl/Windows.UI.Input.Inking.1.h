// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Input_Inking_1_H
#define WINRT_Windows_UI_Input_Inking_1_H
#include "winrt/impl/Windows.UI.Input.Inking.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Input::Inking
{
    struct __declspec(empty_bases) IInkDrawingAttributes :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkDrawingAttributes>
    {
        IInkDrawingAttributes(std::nullptr_t = nullptr) noexcept {}
        IInkDrawingAttributes(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkDrawingAttributes(IInkDrawingAttributes const&) noexcept = default;
        IInkDrawingAttributes(IInkDrawingAttributes&&) noexcept = default;
        IInkDrawingAttributes& operator=(IInkDrawingAttributes const&) & noexcept = default;
        IInkDrawingAttributes& operator=(IInkDrawingAttributes&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkDrawingAttributes2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkDrawingAttributes2>
    {
        IInkDrawingAttributes2(std::nullptr_t = nullptr) noexcept {}
        IInkDrawingAttributes2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkDrawingAttributes2(IInkDrawingAttributes2 const&) noexcept = default;
        IInkDrawingAttributes2(IInkDrawingAttributes2&&) noexcept = default;
        IInkDrawingAttributes2& operator=(IInkDrawingAttributes2 const&) & noexcept = default;
        IInkDrawingAttributes2& operator=(IInkDrawingAttributes2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkDrawingAttributes3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkDrawingAttributes3>
    {
        IInkDrawingAttributes3(std::nullptr_t = nullptr) noexcept {}
        IInkDrawingAttributes3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkDrawingAttributes3(IInkDrawingAttributes3 const&) noexcept = default;
        IInkDrawingAttributes3(IInkDrawingAttributes3&&) noexcept = default;
        IInkDrawingAttributes3& operator=(IInkDrawingAttributes3 const&) & noexcept = default;
        IInkDrawingAttributes3& operator=(IInkDrawingAttributes3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkDrawingAttributes4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkDrawingAttributes4>
    {
        IInkDrawingAttributes4(std::nullptr_t = nullptr) noexcept {}
        IInkDrawingAttributes4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkDrawingAttributes4(IInkDrawingAttributes4 const&) noexcept = default;
        IInkDrawingAttributes4(IInkDrawingAttributes4&&) noexcept = default;
        IInkDrawingAttributes4& operator=(IInkDrawingAttributes4 const&) & noexcept = default;
        IInkDrawingAttributes4& operator=(IInkDrawingAttributes4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkDrawingAttributes5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkDrawingAttributes5>
    {
        IInkDrawingAttributes5(std::nullptr_t = nullptr) noexcept {}
        IInkDrawingAttributes5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkDrawingAttributes5(IInkDrawingAttributes5 const&) noexcept = default;
        IInkDrawingAttributes5(IInkDrawingAttributes5&&) noexcept = default;
        IInkDrawingAttributes5& operator=(IInkDrawingAttributes5 const&) & noexcept = default;
        IInkDrawingAttributes5& operator=(IInkDrawingAttributes5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkDrawingAttributesPencilProperties :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkDrawingAttributesPencilProperties>
    {
        IInkDrawingAttributesPencilProperties(std::nullptr_t = nullptr) noexcept {}
        IInkDrawingAttributesPencilProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkDrawingAttributesPencilProperties(IInkDrawingAttributesPencilProperties const&) noexcept = default;
        IInkDrawingAttributesPencilProperties(IInkDrawingAttributesPencilProperties&&) noexcept = default;
        IInkDrawingAttributesPencilProperties& operator=(IInkDrawingAttributesPencilProperties const&) & noexcept = default;
        IInkDrawingAttributesPencilProperties& operator=(IInkDrawingAttributesPencilProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkDrawingAttributesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkDrawingAttributesStatics>
    {
        IInkDrawingAttributesStatics(std::nullptr_t = nullptr) noexcept {}
        IInkDrawingAttributesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkDrawingAttributesStatics(IInkDrawingAttributesStatics const&) noexcept = default;
        IInkDrawingAttributesStatics(IInkDrawingAttributesStatics&&) noexcept = default;
        IInkDrawingAttributesStatics& operator=(IInkDrawingAttributesStatics const&) & noexcept = default;
        IInkDrawingAttributesStatics& operator=(IInkDrawingAttributesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkInputConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkInputConfiguration>
    {
        IInkInputConfiguration(std::nullptr_t = nullptr) noexcept {}
        IInkInputConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkInputConfiguration(IInkInputConfiguration const&) noexcept = default;
        IInkInputConfiguration(IInkInputConfiguration&&) noexcept = default;
        IInkInputConfiguration& operator=(IInkInputConfiguration const&) & noexcept = default;
        IInkInputConfiguration& operator=(IInkInputConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkInputProcessingConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkInputProcessingConfiguration>
    {
        IInkInputProcessingConfiguration(std::nullptr_t = nullptr) noexcept {}
        IInkInputProcessingConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkInputProcessingConfiguration(IInkInputProcessingConfiguration const&) noexcept = default;
        IInkInputProcessingConfiguration(IInkInputProcessingConfiguration&&) noexcept = default;
        IInkInputProcessingConfiguration& operator=(IInkInputProcessingConfiguration const&) & noexcept = default;
        IInkInputProcessingConfiguration& operator=(IInkInputProcessingConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkManager>,
        impl::require<winrt::Windows::UI::Input::Inking::IInkManager, winrt::Windows::UI::Input::Inking::IInkStrokeContainer, winrt::Windows::UI::Input::Inking::IInkRecognizerContainer>
    {
        IInkManager(std::nullptr_t = nullptr) noexcept {}
        IInkManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkManager(IInkManager const&) noexcept = default;
        IInkManager(IInkManager&&) noexcept = default;
        IInkManager& operator=(IInkManager const&) & noexcept = default;
        IInkManager& operator=(IInkManager&&) & noexcept = default;
        using impl::consume_t<IInkManager, IInkManager>::RecognizeAsync;
        using impl::consume_t<IInkManager, winrt::Windows::UI::Input::Inking::IInkRecognizerContainer>::RecognizeAsync;
    };
    struct __declspec(empty_bases) IInkModelerAttributes :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkModelerAttributes>
    {
        IInkModelerAttributes(std::nullptr_t = nullptr) noexcept {}
        IInkModelerAttributes(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkModelerAttributes(IInkModelerAttributes const&) noexcept = default;
        IInkModelerAttributes(IInkModelerAttributes&&) noexcept = default;
        IInkModelerAttributes& operator=(IInkModelerAttributes const&) & noexcept = default;
        IInkModelerAttributes& operator=(IInkModelerAttributes&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkModelerAttributes2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkModelerAttributes2>
    {
        IInkModelerAttributes2(std::nullptr_t = nullptr) noexcept {}
        IInkModelerAttributes2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkModelerAttributes2(IInkModelerAttributes2 const&) noexcept = default;
        IInkModelerAttributes2(IInkModelerAttributes2&&) noexcept = default;
        IInkModelerAttributes2& operator=(IInkModelerAttributes2 const&) & noexcept = default;
        IInkModelerAttributes2& operator=(IInkModelerAttributes2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPoint :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPoint>
    {
        IInkPoint(std::nullptr_t = nullptr) noexcept {}
        IInkPoint(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPoint(IInkPoint const&) noexcept = default;
        IInkPoint(IInkPoint&&) noexcept = default;
        IInkPoint& operator=(IInkPoint const&) & noexcept = default;
        IInkPoint& operator=(IInkPoint&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPoint2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPoint2>
    {
        IInkPoint2(std::nullptr_t = nullptr) noexcept {}
        IInkPoint2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPoint2(IInkPoint2 const&) noexcept = default;
        IInkPoint2(IInkPoint2&&) noexcept = default;
        IInkPoint2& operator=(IInkPoint2 const&) & noexcept = default;
        IInkPoint2& operator=(IInkPoint2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPointFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPointFactory>
    {
        IInkPointFactory(std::nullptr_t = nullptr) noexcept {}
        IInkPointFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPointFactory(IInkPointFactory const&) noexcept = default;
        IInkPointFactory(IInkPointFactory&&) noexcept = default;
        IInkPointFactory& operator=(IInkPointFactory const&) & noexcept = default;
        IInkPointFactory& operator=(IInkPointFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPointFactory2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPointFactory2>
    {
        IInkPointFactory2(std::nullptr_t = nullptr) noexcept {}
        IInkPointFactory2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPointFactory2(IInkPointFactory2 const&) noexcept = default;
        IInkPointFactory2(IInkPointFactory2&&) noexcept = default;
        IInkPointFactory2& operator=(IInkPointFactory2 const&) & noexcept = default;
        IInkPointFactory2& operator=(IInkPointFactory2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPresenter>
    {
        IInkPresenter(std::nullptr_t = nullptr) noexcept {}
        IInkPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPresenter(IInkPresenter const&) noexcept = default;
        IInkPresenter(IInkPresenter&&) noexcept = default;
        IInkPresenter& operator=(IInkPresenter const&) & noexcept = default;
        IInkPresenter& operator=(IInkPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPresenter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPresenter2>,
        impl::require<winrt::Windows::UI::Input::Inking::IInkPresenter2, winrt::Windows::UI::Input::Inking::IInkPresenter>
    {
        IInkPresenter2(std::nullptr_t = nullptr) noexcept {}
        IInkPresenter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPresenter2(IInkPresenter2 const&) noexcept = default;
        IInkPresenter2(IInkPresenter2&&) noexcept = default;
        IInkPresenter2& operator=(IInkPresenter2 const&) & noexcept = default;
        IInkPresenter2& operator=(IInkPresenter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPresenter3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPresenter3>
    {
        IInkPresenter3(std::nullptr_t = nullptr) noexcept {}
        IInkPresenter3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPresenter3(IInkPresenter3 const&) noexcept = default;
        IInkPresenter3(IInkPresenter3&&) noexcept = default;
        IInkPresenter3& operator=(IInkPresenter3 const&) & noexcept = default;
        IInkPresenter3& operator=(IInkPresenter3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPresenterProtractor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPresenterProtractor>,
        impl::require<winrt::Windows::UI::Input::Inking::IInkPresenterProtractor, winrt::Windows::UI::Input::Inking::IInkPresenterStencil>
    {
        IInkPresenterProtractor(std::nullptr_t = nullptr) noexcept {}
        IInkPresenterProtractor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPresenterProtractor(IInkPresenterProtractor const&) noexcept = default;
        IInkPresenterProtractor(IInkPresenterProtractor&&) noexcept = default;
        IInkPresenterProtractor& operator=(IInkPresenterProtractor const&) & noexcept = default;
        IInkPresenterProtractor& operator=(IInkPresenterProtractor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPresenterProtractorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPresenterProtractorFactory>
    {
        IInkPresenterProtractorFactory(std::nullptr_t = nullptr) noexcept {}
        IInkPresenterProtractorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPresenterProtractorFactory(IInkPresenterProtractorFactory const&) noexcept = default;
        IInkPresenterProtractorFactory(IInkPresenterProtractorFactory&&) noexcept = default;
        IInkPresenterProtractorFactory& operator=(IInkPresenterProtractorFactory const&) & noexcept = default;
        IInkPresenterProtractorFactory& operator=(IInkPresenterProtractorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPresenterRuler :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPresenterRuler>,
        impl::require<winrt::Windows::UI::Input::Inking::IInkPresenterRuler, winrt::Windows::UI::Input::Inking::IInkPresenterStencil>
    {
        IInkPresenterRuler(std::nullptr_t = nullptr) noexcept {}
        IInkPresenterRuler(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPresenterRuler(IInkPresenterRuler const&) noexcept = default;
        IInkPresenterRuler(IInkPresenterRuler&&) noexcept = default;
        IInkPresenterRuler& operator=(IInkPresenterRuler const&) & noexcept = default;
        IInkPresenterRuler& operator=(IInkPresenterRuler&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPresenterRuler2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPresenterRuler2>
    {
        IInkPresenterRuler2(std::nullptr_t = nullptr) noexcept {}
        IInkPresenterRuler2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPresenterRuler2(IInkPresenterRuler2 const&) noexcept = default;
        IInkPresenterRuler2(IInkPresenterRuler2&&) noexcept = default;
        IInkPresenterRuler2& operator=(IInkPresenterRuler2 const&) & noexcept = default;
        IInkPresenterRuler2& operator=(IInkPresenterRuler2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPresenterRulerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPresenterRulerFactory>
    {
        IInkPresenterRulerFactory(std::nullptr_t = nullptr) noexcept {}
        IInkPresenterRulerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPresenterRulerFactory(IInkPresenterRulerFactory const&) noexcept = default;
        IInkPresenterRulerFactory(IInkPresenterRulerFactory&&) noexcept = default;
        IInkPresenterRulerFactory& operator=(IInkPresenterRulerFactory const&) & noexcept = default;
        IInkPresenterRulerFactory& operator=(IInkPresenterRulerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkPresenterStencil :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkPresenterStencil>
    {
        IInkPresenterStencil(std::nullptr_t = nullptr) noexcept {}
        IInkPresenterStencil(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkPresenterStencil(IInkPresenterStencil const&) noexcept = default;
        IInkPresenterStencil(IInkPresenterStencil&&) noexcept = default;
        IInkPresenterStencil& operator=(IInkPresenterStencil const&) & noexcept = default;
        IInkPresenterStencil& operator=(IInkPresenterStencil&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkRecognitionResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkRecognitionResult>
    {
        IInkRecognitionResult(std::nullptr_t = nullptr) noexcept {}
        IInkRecognitionResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkRecognitionResult(IInkRecognitionResult const&) noexcept = default;
        IInkRecognitionResult(IInkRecognitionResult&&) noexcept = default;
        IInkRecognitionResult& operator=(IInkRecognitionResult const&) & noexcept = default;
        IInkRecognitionResult& operator=(IInkRecognitionResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkRecognizer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkRecognizer>
    {
        IInkRecognizer(std::nullptr_t = nullptr) noexcept {}
        IInkRecognizer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkRecognizer(IInkRecognizer const&) noexcept = default;
        IInkRecognizer(IInkRecognizer&&) noexcept = default;
        IInkRecognizer& operator=(IInkRecognizer const&) & noexcept = default;
        IInkRecognizer& operator=(IInkRecognizer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkRecognizerContainer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkRecognizerContainer>
    {
        IInkRecognizerContainer(std::nullptr_t = nullptr) noexcept {}
        IInkRecognizerContainer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkRecognizerContainer(IInkRecognizerContainer const&) noexcept = default;
        IInkRecognizerContainer(IInkRecognizerContainer&&) noexcept = default;
        IInkRecognizerContainer& operator=(IInkRecognizerContainer const&) & noexcept = default;
        IInkRecognizerContainer& operator=(IInkRecognizerContainer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStroke :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStroke>
    {
        IInkStroke(std::nullptr_t = nullptr) noexcept {}
        IInkStroke(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStroke(IInkStroke const&) noexcept = default;
        IInkStroke(IInkStroke&&) noexcept = default;
        IInkStroke& operator=(IInkStroke const&) & noexcept = default;
        IInkStroke& operator=(IInkStroke&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStroke2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStroke2>
    {
        IInkStroke2(std::nullptr_t = nullptr) noexcept {}
        IInkStroke2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStroke2(IInkStroke2 const&) noexcept = default;
        IInkStroke2(IInkStroke2&&) noexcept = default;
        IInkStroke2& operator=(IInkStroke2 const&) & noexcept = default;
        IInkStroke2& operator=(IInkStroke2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStroke3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStroke3>
    {
        IInkStroke3(std::nullptr_t = nullptr) noexcept {}
        IInkStroke3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStroke3(IInkStroke3 const&) noexcept = default;
        IInkStroke3(IInkStroke3&&) noexcept = default;
        IInkStroke3& operator=(IInkStroke3 const&) & noexcept = default;
        IInkStroke3& operator=(IInkStroke3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStrokeBuilder :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStrokeBuilder>
    {
        IInkStrokeBuilder(std::nullptr_t = nullptr) noexcept {}
        IInkStrokeBuilder(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStrokeBuilder(IInkStrokeBuilder const&) noexcept = default;
        IInkStrokeBuilder(IInkStrokeBuilder&&) noexcept = default;
        IInkStrokeBuilder& operator=(IInkStrokeBuilder const&) & noexcept = default;
        IInkStrokeBuilder& operator=(IInkStrokeBuilder&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStrokeBuilder2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStrokeBuilder2>
    {
        IInkStrokeBuilder2(std::nullptr_t = nullptr) noexcept {}
        IInkStrokeBuilder2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStrokeBuilder2(IInkStrokeBuilder2 const&) noexcept = default;
        IInkStrokeBuilder2(IInkStrokeBuilder2&&) noexcept = default;
        IInkStrokeBuilder2& operator=(IInkStrokeBuilder2 const&) & noexcept = default;
        IInkStrokeBuilder2& operator=(IInkStrokeBuilder2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStrokeBuilder3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStrokeBuilder3>
    {
        IInkStrokeBuilder3(std::nullptr_t = nullptr) noexcept {}
        IInkStrokeBuilder3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStrokeBuilder3(IInkStrokeBuilder3 const&) noexcept = default;
        IInkStrokeBuilder3(IInkStrokeBuilder3&&) noexcept = default;
        IInkStrokeBuilder3& operator=(IInkStrokeBuilder3 const&) & noexcept = default;
        IInkStrokeBuilder3& operator=(IInkStrokeBuilder3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStrokeContainer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStrokeContainer>
    {
        IInkStrokeContainer(std::nullptr_t = nullptr) noexcept {}
        IInkStrokeContainer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStrokeContainer(IInkStrokeContainer const&) noexcept = default;
        IInkStrokeContainer(IInkStrokeContainer&&) noexcept = default;
        IInkStrokeContainer& operator=(IInkStrokeContainer const&) & noexcept = default;
        IInkStrokeContainer& operator=(IInkStrokeContainer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStrokeContainer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStrokeContainer2>
    {
        IInkStrokeContainer2(std::nullptr_t = nullptr) noexcept {}
        IInkStrokeContainer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStrokeContainer2(IInkStrokeContainer2 const&) noexcept = default;
        IInkStrokeContainer2(IInkStrokeContainer2&&) noexcept = default;
        IInkStrokeContainer2& operator=(IInkStrokeContainer2 const&) & noexcept = default;
        IInkStrokeContainer2& operator=(IInkStrokeContainer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStrokeContainer3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStrokeContainer3>
    {
        IInkStrokeContainer3(std::nullptr_t = nullptr) noexcept {}
        IInkStrokeContainer3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStrokeContainer3(IInkStrokeContainer3 const&) noexcept = default;
        IInkStrokeContainer3(IInkStrokeContainer3&&) noexcept = default;
        IInkStrokeContainer3& operator=(IInkStrokeContainer3 const&) & noexcept = default;
        IInkStrokeContainer3& operator=(IInkStrokeContainer3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStrokeInput :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStrokeInput>
    {
        IInkStrokeInput(std::nullptr_t = nullptr) noexcept {}
        IInkStrokeInput(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStrokeInput(IInkStrokeInput const&) noexcept = default;
        IInkStrokeInput(IInkStrokeInput&&) noexcept = default;
        IInkStrokeInput& operator=(IInkStrokeInput const&) & noexcept = default;
        IInkStrokeInput& operator=(IInkStrokeInput&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStrokeRenderingSegment :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStrokeRenderingSegment>
    {
        IInkStrokeRenderingSegment(std::nullptr_t = nullptr) noexcept {}
        IInkStrokeRenderingSegment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStrokeRenderingSegment(IInkStrokeRenderingSegment const&) noexcept = default;
        IInkStrokeRenderingSegment(IInkStrokeRenderingSegment&&) noexcept = default;
        IInkStrokeRenderingSegment& operator=(IInkStrokeRenderingSegment const&) & noexcept = default;
        IInkStrokeRenderingSegment& operator=(IInkStrokeRenderingSegment&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStrokesCollectedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStrokesCollectedEventArgs>
    {
        IInkStrokesCollectedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInkStrokesCollectedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStrokesCollectedEventArgs(IInkStrokesCollectedEventArgs const&) noexcept = default;
        IInkStrokesCollectedEventArgs(IInkStrokesCollectedEventArgs&&) noexcept = default;
        IInkStrokesCollectedEventArgs& operator=(IInkStrokesCollectedEventArgs const&) & noexcept = default;
        IInkStrokesCollectedEventArgs& operator=(IInkStrokesCollectedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkStrokesErasedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkStrokesErasedEventArgs>
    {
        IInkStrokesErasedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInkStrokesErasedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkStrokesErasedEventArgs(IInkStrokesErasedEventArgs const&) noexcept = default;
        IInkStrokesErasedEventArgs(IInkStrokesErasedEventArgs&&) noexcept = default;
        IInkStrokesErasedEventArgs& operator=(IInkStrokesErasedEventArgs const&) & noexcept = default;
        IInkStrokesErasedEventArgs& operator=(IInkStrokesErasedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkSynchronizer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkSynchronizer>
    {
        IInkSynchronizer(std::nullptr_t = nullptr) noexcept {}
        IInkSynchronizer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkSynchronizer(IInkSynchronizer const&) noexcept = default;
        IInkSynchronizer(IInkSynchronizer&&) noexcept = default;
        IInkSynchronizer& operator=(IInkSynchronizer const&) & noexcept = default;
        IInkSynchronizer& operator=(IInkSynchronizer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkUnprocessedInput :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkUnprocessedInput>
    {
        IInkUnprocessedInput(std::nullptr_t = nullptr) noexcept {}
        IInkUnprocessedInput(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkUnprocessedInput(IInkUnprocessedInput const&) noexcept = default;
        IInkUnprocessedInput(IInkUnprocessedInput&&) noexcept = default;
        IInkUnprocessedInput& operator=(IInkUnprocessedInput const&) & noexcept = default;
        IInkUnprocessedInput& operator=(IInkUnprocessedInput&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPenAndInkSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPenAndInkSettings>
    {
        IPenAndInkSettings(std::nullptr_t = nullptr) noexcept {}
        IPenAndInkSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPenAndInkSettings(IPenAndInkSettings const&) noexcept = default;
        IPenAndInkSettings(IPenAndInkSettings&&) noexcept = default;
        IPenAndInkSettings& operator=(IPenAndInkSettings const&) & noexcept = default;
        IPenAndInkSettings& operator=(IPenAndInkSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPenAndInkSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPenAndInkSettingsStatics>
    {
        IPenAndInkSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        IPenAndInkSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPenAndInkSettingsStatics(IPenAndInkSettingsStatics const&) noexcept = default;
        IPenAndInkSettingsStatics(IPenAndInkSettingsStatics&&) noexcept = default;
        IPenAndInkSettingsStatics& operator=(IPenAndInkSettingsStatics const&) & noexcept = default;
        IPenAndInkSettingsStatics& operator=(IPenAndInkSettingsStatics&&) & noexcept = default;
    };
}
#endif
