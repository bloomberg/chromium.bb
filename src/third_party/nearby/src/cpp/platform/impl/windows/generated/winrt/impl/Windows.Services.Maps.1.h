// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Services_Maps_1_H
#define WINRT_Windows_Services_Maps_1_H
#include "winrt/impl/Windows.Services.Maps.0.h"
WINRT_EXPORT namespace winrt::Windows::Services::Maps
{
    struct __declspec(empty_bases) IEnhancedWaypoint :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEnhancedWaypoint>
    {
        IEnhancedWaypoint(std::nullptr_t = nullptr) noexcept {}
        IEnhancedWaypoint(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEnhancedWaypoint(IEnhancedWaypoint const&) noexcept = default;
        IEnhancedWaypoint(IEnhancedWaypoint&&) noexcept = default;
        IEnhancedWaypoint& operator=(IEnhancedWaypoint const&) & noexcept = default;
        IEnhancedWaypoint& operator=(IEnhancedWaypoint&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEnhancedWaypointFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEnhancedWaypointFactory>
    {
        IEnhancedWaypointFactory(std::nullptr_t = nullptr) noexcept {}
        IEnhancedWaypointFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEnhancedWaypointFactory(IEnhancedWaypointFactory const&) noexcept = default;
        IEnhancedWaypointFactory(IEnhancedWaypointFactory&&) noexcept = default;
        IEnhancedWaypointFactory& operator=(IEnhancedWaypointFactory const&) & noexcept = default;
        IEnhancedWaypointFactory& operator=(IEnhancedWaypointFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManeuverWarning :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManeuverWarning>
    {
        IManeuverWarning(std::nullptr_t = nullptr) noexcept {}
        IManeuverWarning(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManeuverWarning(IManeuverWarning const&) noexcept = default;
        IManeuverWarning(IManeuverWarning&&) noexcept = default;
        IManeuverWarning& operator=(IManeuverWarning const&) & noexcept = default;
        IManeuverWarning& operator=(IManeuverWarning&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapAddress :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapAddress>
    {
        IMapAddress(std::nullptr_t = nullptr) noexcept {}
        IMapAddress(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapAddress(IMapAddress const&) noexcept = default;
        IMapAddress(IMapAddress&&) noexcept = default;
        IMapAddress& operator=(IMapAddress const&) & noexcept = default;
        IMapAddress& operator=(IMapAddress&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapAddress2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapAddress2>
    {
        IMapAddress2(std::nullptr_t = nullptr) noexcept {}
        IMapAddress2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapAddress2(IMapAddress2 const&) noexcept = default;
        IMapAddress2(IMapAddress2&&) noexcept = default;
        IMapAddress2& operator=(IMapAddress2 const&) & noexcept = default;
        IMapAddress2& operator=(IMapAddress2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapLocation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapLocation>
    {
        IMapLocation(std::nullptr_t = nullptr) noexcept {}
        IMapLocation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapLocation(IMapLocation const&) noexcept = default;
        IMapLocation(IMapLocation&&) noexcept = default;
        IMapLocation& operator=(IMapLocation const&) & noexcept = default;
        IMapLocation& operator=(IMapLocation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapLocationFinderResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapLocationFinderResult>
    {
        IMapLocationFinderResult(std::nullptr_t = nullptr) noexcept {}
        IMapLocationFinderResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapLocationFinderResult(IMapLocationFinderResult const&) noexcept = default;
        IMapLocationFinderResult(IMapLocationFinderResult&&) noexcept = default;
        IMapLocationFinderResult& operator=(IMapLocationFinderResult const&) & noexcept = default;
        IMapLocationFinderResult& operator=(IMapLocationFinderResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapLocationFinderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapLocationFinderStatics>
    {
        IMapLocationFinderStatics(std::nullptr_t = nullptr) noexcept {}
        IMapLocationFinderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapLocationFinderStatics(IMapLocationFinderStatics const&) noexcept = default;
        IMapLocationFinderStatics(IMapLocationFinderStatics&&) noexcept = default;
        IMapLocationFinderStatics& operator=(IMapLocationFinderStatics const&) & noexcept = default;
        IMapLocationFinderStatics& operator=(IMapLocationFinderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapLocationFinderStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapLocationFinderStatics2>
    {
        IMapLocationFinderStatics2(std::nullptr_t = nullptr) noexcept {}
        IMapLocationFinderStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapLocationFinderStatics2(IMapLocationFinderStatics2 const&) noexcept = default;
        IMapLocationFinderStatics2(IMapLocationFinderStatics2&&) noexcept = default;
        IMapLocationFinderStatics2& operator=(IMapLocationFinderStatics2 const&) & noexcept = default;
        IMapLocationFinderStatics2& operator=(IMapLocationFinderStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapManagerStatics>
    {
        IMapManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IMapManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapManagerStatics(IMapManagerStatics const&) noexcept = default;
        IMapManagerStatics(IMapManagerStatics&&) noexcept = default;
        IMapManagerStatics& operator=(IMapManagerStatics const&) & noexcept = default;
        IMapManagerStatics& operator=(IMapManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRoute :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRoute>
    {
        IMapRoute(std::nullptr_t = nullptr) noexcept {}
        IMapRoute(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRoute(IMapRoute const&) noexcept = default;
        IMapRoute(IMapRoute&&) noexcept = default;
        IMapRoute& operator=(IMapRoute const&) & noexcept = default;
        IMapRoute& operator=(IMapRoute&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRoute2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRoute2>
    {
        IMapRoute2(std::nullptr_t = nullptr) noexcept {}
        IMapRoute2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRoute2(IMapRoute2 const&) noexcept = default;
        IMapRoute2(IMapRoute2&&) noexcept = default;
        IMapRoute2& operator=(IMapRoute2 const&) & noexcept = default;
        IMapRoute2& operator=(IMapRoute2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRoute3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRoute3>
    {
        IMapRoute3(std::nullptr_t = nullptr) noexcept {}
        IMapRoute3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRoute3(IMapRoute3 const&) noexcept = default;
        IMapRoute3(IMapRoute3&&) noexcept = default;
        IMapRoute3& operator=(IMapRoute3 const&) & noexcept = default;
        IMapRoute3& operator=(IMapRoute3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRoute4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRoute4>
    {
        IMapRoute4(std::nullptr_t = nullptr) noexcept {}
        IMapRoute4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRoute4(IMapRoute4 const&) noexcept = default;
        IMapRoute4(IMapRoute4&&) noexcept = default;
        IMapRoute4& operator=(IMapRoute4 const&) & noexcept = default;
        IMapRoute4& operator=(IMapRoute4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteDrivingOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteDrivingOptions>
    {
        IMapRouteDrivingOptions(std::nullptr_t = nullptr) noexcept {}
        IMapRouteDrivingOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteDrivingOptions(IMapRouteDrivingOptions const&) noexcept = default;
        IMapRouteDrivingOptions(IMapRouteDrivingOptions&&) noexcept = default;
        IMapRouteDrivingOptions& operator=(IMapRouteDrivingOptions const&) & noexcept = default;
        IMapRouteDrivingOptions& operator=(IMapRouteDrivingOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteDrivingOptions2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteDrivingOptions2>
    {
        IMapRouteDrivingOptions2(std::nullptr_t = nullptr) noexcept {}
        IMapRouteDrivingOptions2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteDrivingOptions2(IMapRouteDrivingOptions2 const&) noexcept = default;
        IMapRouteDrivingOptions2(IMapRouteDrivingOptions2&&) noexcept = default;
        IMapRouteDrivingOptions2& operator=(IMapRouteDrivingOptions2 const&) & noexcept = default;
        IMapRouteDrivingOptions2& operator=(IMapRouteDrivingOptions2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteFinderResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteFinderResult>
    {
        IMapRouteFinderResult(std::nullptr_t = nullptr) noexcept {}
        IMapRouteFinderResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteFinderResult(IMapRouteFinderResult const&) noexcept = default;
        IMapRouteFinderResult(IMapRouteFinderResult&&) noexcept = default;
        IMapRouteFinderResult& operator=(IMapRouteFinderResult const&) & noexcept = default;
        IMapRouteFinderResult& operator=(IMapRouteFinderResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteFinderResult2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteFinderResult2>
    {
        IMapRouteFinderResult2(std::nullptr_t = nullptr) noexcept {}
        IMapRouteFinderResult2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteFinderResult2(IMapRouteFinderResult2 const&) noexcept = default;
        IMapRouteFinderResult2(IMapRouteFinderResult2&&) noexcept = default;
        IMapRouteFinderResult2& operator=(IMapRouteFinderResult2 const&) & noexcept = default;
        IMapRouteFinderResult2& operator=(IMapRouteFinderResult2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteFinderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteFinderStatics>
    {
        IMapRouteFinderStatics(std::nullptr_t = nullptr) noexcept {}
        IMapRouteFinderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteFinderStatics(IMapRouteFinderStatics const&) noexcept = default;
        IMapRouteFinderStatics(IMapRouteFinderStatics&&) noexcept = default;
        IMapRouteFinderStatics& operator=(IMapRouteFinderStatics const&) & noexcept = default;
        IMapRouteFinderStatics& operator=(IMapRouteFinderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteFinderStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteFinderStatics2>
    {
        IMapRouteFinderStatics2(std::nullptr_t = nullptr) noexcept {}
        IMapRouteFinderStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteFinderStatics2(IMapRouteFinderStatics2 const&) noexcept = default;
        IMapRouteFinderStatics2(IMapRouteFinderStatics2&&) noexcept = default;
        IMapRouteFinderStatics2& operator=(IMapRouteFinderStatics2 const&) & noexcept = default;
        IMapRouteFinderStatics2& operator=(IMapRouteFinderStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteFinderStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteFinderStatics3>
    {
        IMapRouteFinderStatics3(std::nullptr_t = nullptr) noexcept {}
        IMapRouteFinderStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteFinderStatics3(IMapRouteFinderStatics3 const&) noexcept = default;
        IMapRouteFinderStatics3(IMapRouteFinderStatics3&&) noexcept = default;
        IMapRouteFinderStatics3& operator=(IMapRouteFinderStatics3 const&) & noexcept = default;
        IMapRouteFinderStatics3& operator=(IMapRouteFinderStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteLeg :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteLeg>
    {
        IMapRouteLeg(std::nullptr_t = nullptr) noexcept {}
        IMapRouteLeg(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteLeg(IMapRouteLeg const&) noexcept = default;
        IMapRouteLeg(IMapRouteLeg&&) noexcept = default;
        IMapRouteLeg& operator=(IMapRouteLeg const&) & noexcept = default;
        IMapRouteLeg& operator=(IMapRouteLeg&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteLeg2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteLeg2>
    {
        IMapRouteLeg2(std::nullptr_t = nullptr) noexcept {}
        IMapRouteLeg2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteLeg2(IMapRouteLeg2 const&) noexcept = default;
        IMapRouteLeg2(IMapRouteLeg2&&) noexcept = default;
        IMapRouteLeg2& operator=(IMapRouteLeg2 const&) & noexcept = default;
        IMapRouteLeg2& operator=(IMapRouteLeg2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteManeuver :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteManeuver>
    {
        IMapRouteManeuver(std::nullptr_t = nullptr) noexcept {}
        IMapRouteManeuver(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteManeuver(IMapRouteManeuver const&) noexcept = default;
        IMapRouteManeuver(IMapRouteManeuver&&) noexcept = default;
        IMapRouteManeuver& operator=(IMapRouteManeuver const&) & noexcept = default;
        IMapRouteManeuver& operator=(IMapRouteManeuver&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteManeuver2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteManeuver2>
    {
        IMapRouteManeuver2(std::nullptr_t = nullptr) noexcept {}
        IMapRouteManeuver2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteManeuver2(IMapRouteManeuver2 const&) noexcept = default;
        IMapRouteManeuver2(IMapRouteManeuver2&&) noexcept = default;
        IMapRouteManeuver2& operator=(IMapRouteManeuver2 const&) & noexcept = default;
        IMapRouteManeuver2& operator=(IMapRouteManeuver2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteManeuver3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteManeuver3>
    {
        IMapRouteManeuver3(std::nullptr_t = nullptr) noexcept {}
        IMapRouteManeuver3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteManeuver3(IMapRouteManeuver3 const&) noexcept = default;
        IMapRouteManeuver3(IMapRouteManeuver3&&) noexcept = default;
        IMapRouteManeuver3& operator=(IMapRouteManeuver3 const&) & noexcept = default;
        IMapRouteManeuver3& operator=(IMapRouteManeuver3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapServiceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapServiceStatics>
    {
        IMapServiceStatics(std::nullptr_t = nullptr) noexcept {}
        IMapServiceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapServiceStatics(IMapServiceStatics const&) noexcept = default;
        IMapServiceStatics(IMapServiceStatics&&) noexcept = default;
        IMapServiceStatics& operator=(IMapServiceStatics const&) & noexcept = default;
        IMapServiceStatics& operator=(IMapServiceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapServiceStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapServiceStatics2>
    {
        IMapServiceStatics2(std::nullptr_t = nullptr) noexcept {}
        IMapServiceStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapServiceStatics2(IMapServiceStatics2 const&) noexcept = default;
        IMapServiceStatics2(IMapServiceStatics2&&) noexcept = default;
        IMapServiceStatics2& operator=(IMapServiceStatics2 const&) & noexcept = default;
        IMapServiceStatics2& operator=(IMapServiceStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapServiceStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapServiceStatics3>
    {
        IMapServiceStatics3(std::nullptr_t = nullptr) noexcept {}
        IMapServiceStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapServiceStatics3(IMapServiceStatics3 const&) noexcept = default;
        IMapServiceStatics3(IMapServiceStatics3&&) noexcept = default;
        IMapServiceStatics3& operator=(IMapServiceStatics3 const&) & noexcept = default;
        IMapServiceStatics3& operator=(IMapServiceStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapServiceStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapServiceStatics4>
    {
        IMapServiceStatics4(std::nullptr_t = nullptr) noexcept {}
        IMapServiceStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapServiceStatics4(IMapServiceStatics4 const&) noexcept = default;
        IMapServiceStatics4(IMapServiceStatics4&&) noexcept = default;
        IMapServiceStatics4& operator=(IMapServiceStatics4 const&) & noexcept = default;
        IMapServiceStatics4& operator=(IMapServiceStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPlaceInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPlaceInfo>
    {
        IPlaceInfo(std::nullptr_t = nullptr) noexcept {}
        IPlaceInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPlaceInfo(IPlaceInfo const&) noexcept = default;
        IPlaceInfo(IPlaceInfo&&) noexcept = default;
        IPlaceInfo& operator=(IPlaceInfo const&) & noexcept = default;
        IPlaceInfo& operator=(IPlaceInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPlaceInfoCreateOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPlaceInfoCreateOptions>
    {
        IPlaceInfoCreateOptions(std::nullptr_t = nullptr) noexcept {}
        IPlaceInfoCreateOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPlaceInfoCreateOptions(IPlaceInfoCreateOptions const&) noexcept = default;
        IPlaceInfoCreateOptions(IPlaceInfoCreateOptions&&) noexcept = default;
        IPlaceInfoCreateOptions& operator=(IPlaceInfoCreateOptions const&) & noexcept = default;
        IPlaceInfoCreateOptions& operator=(IPlaceInfoCreateOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPlaceInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPlaceInfoStatics>
    {
        IPlaceInfoStatics(std::nullptr_t = nullptr) noexcept {}
        IPlaceInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPlaceInfoStatics(IPlaceInfoStatics const&) noexcept = default;
        IPlaceInfoStatics(IPlaceInfoStatics&&) noexcept = default;
        IPlaceInfoStatics& operator=(IPlaceInfoStatics const&) & noexcept = default;
        IPlaceInfoStatics& operator=(IPlaceInfoStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPlaceInfoStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPlaceInfoStatics2>
    {
        IPlaceInfoStatics2(std::nullptr_t = nullptr) noexcept {}
        IPlaceInfoStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPlaceInfoStatics2(IPlaceInfoStatics2 const&) noexcept = default;
        IPlaceInfoStatics2(IPlaceInfoStatics2&&) noexcept = default;
        IPlaceInfoStatics2& operator=(IPlaceInfoStatics2 const&) & noexcept = default;
        IPlaceInfoStatics2& operator=(IPlaceInfoStatics2&&) & noexcept = default;
    };
}
#endif
