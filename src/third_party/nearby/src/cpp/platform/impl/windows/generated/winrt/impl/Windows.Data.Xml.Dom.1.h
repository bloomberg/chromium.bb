// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Data_Xml_Dom_1_H
#define WINRT_Windows_Data_Xml_Dom_1_H
#include "winrt/impl/Windows.Foundation.Collections.0.h"
#include "winrt/impl/Windows.Data.Xml.Dom.0.h"
WINRT_EXPORT namespace winrt::Windows::Data::Xml::Dom
{
    struct __declspec(empty_bases) IDtdEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDtdEntity>,
        impl::require<winrt::Windows::Data::Xml::Dom::IDtdEntity, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode>
    {
        IDtdEntity(std::nullptr_t = nullptr) noexcept {}
        IDtdEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDtdEntity(IDtdEntity const&) noexcept = default;
        IDtdEntity(IDtdEntity&&) noexcept = default;
        IDtdEntity& operator=(IDtdEntity const&) & noexcept = default;
        IDtdEntity& operator=(IDtdEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDtdNotation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDtdNotation>,
        impl::require<winrt::Windows::Data::Xml::Dom::IDtdNotation, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode>
    {
        IDtdNotation(std::nullptr_t = nullptr) noexcept {}
        IDtdNotation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDtdNotation(IDtdNotation const&) noexcept = default;
        IDtdNotation(IDtdNotation&&) noexcept = default;
        IDtdNotation& operator=(IDtdNotation const&) & noexcept = default;
        IDtdNotation& operator=(IDtdNotation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlAttribute :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlAttribute>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlAttribute, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode>
    {
        IXmlAttribute(std::nullptr_t = nullptr) noexcept {}
        IXmlAttribute(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlAttribute(IXmlAttribute const&) noexcept = default;
        IXmlAttribute(IXmlAttribute&&) noexcept = default;
        IXmlAttribute& operator=(IXmlAttribute const&) & noexcept = default;
        IXmlAttribute& operator=(IXmlAttribute&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlCDataSection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlCDataSection>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlCDataSection, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode, winrt::Windows::Data::Xml::Dom::IXmlCharacterData, winrt::Windows::Data::Xml::Dom::IXmlText>
    {
        IXmlCDataSection(std::nullptr_t = nullptr) noexcept {}
        IXmlCDataSection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlCDataSection(IXmlCDataSection const&) noexcept = default;
        IXmlCDataSection(IXmlCDataSection&&) noexcept = default;
        IXmlCDataSection& operator=(IXmlCDataSection const&) & noexcept = default;
        IXmlCDataSection& operator=(IXmlCDataSection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlCharacterData :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlCharacterData>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlCharacterData, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode>
    {
        IXmlCharacterData(std::nullptr_t = nullptr) noexcept {}
        IXmlCharacterData(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlCharacterData(IXmlCharacterData const&) noexcept = default;
        IXmlCharacterData(IXmlCharacterData&&) noexcept = default;
        IXmlCharacterData& operator=(IXmlCharacterData const&) & noexcept = default;
        IXmlCharacterData& operator=(IXmlCharacterData&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlComment :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlComment>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlComment, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode, winrt::Windows::Data::Xml::Dom::IXmlCharacterData>
    {
        IXmlComment(std::nullptr_t = nullptr) noexcept {}
        IXmlComment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlComment(IXmlComment const&) noexcept = default;
        IXmlComment(IXmlComment&&) noexcept = default;
        IXmlComment& operator=(IXmlComment const&) & noexcept = default;
        IXmlComment& operator=(IXmlComment&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlDocument :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlDocument>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlDocument, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode>
    {
        IXmlDocument(std::nullptr_t = nullptr) noexcept {}
        IXmlDocument(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlDocument(IXmlDocument const&) noexcept = default;
        IXmlDocument(IXmlDocument&&) noexcept = default;
        IXmlDocument& operator=(IXmlDocument const&) & noexcept = default;
        IXmlDocument& operator=(IXmlDocument&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlDocumentFragment :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlDocumentFragment>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlDocumentFragment, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode>
    {
        IXmlDocumentFragment(std::nullptr_t = nullptr) noexcept {}
        IXmlDocumentFragment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlDocumentFragment(IXmlDocumentFragment const&) noexcept = default;
        IXmlDocumentFragment(IXmlDocumentFragment&&) noexcept = default;
        IXmlDocumentFragment& operator=(IXmlDocumentFragment const&) & noexcept = default;
        IXmlDocumentFragment& operator=(IXmlDocumentFragment&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlDocumentIO :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlDocumentIO>
    {
        IXmlDocumentIO(std::nullptr_t = nullptr) noexcept {}
        IXmlDocumentIO(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlDocumentIO(IXmlDocumentIO const&) noexcept = default;
        IXmlDocumentIO(IXmlDocumentIO&&) noexcept = default;
        IXmlDocumentIO& operator=(IXmlDocumentIO const&) & noexcept = default;
        IXmlDocumentIO& operator=(IXmlDocumentIO&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlDocumentIO2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlDocumentIO2>
    {
        IXmlDocumentIO2(std::nullptr_t = nullptr) noexcept {}
        IXmlDocumentIO2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlDocumentIO2(IXmlDocumentIO2 const&) noexcept = default;
        IXmlDocumentIO2(IXmlDocumentIO2&&) noexcept = default;
        IXmlDocumentIO2& operator=(IXmlDocumentIO2 const&) & noexcept = default;
        IXmlDocumentIO2& operator=(IXmlDocumentIO2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlDocumentStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlDocumentStatics>
    {
        IXmlDocumentStatics(std::nullptr_t = nullptr) noexcept {}
        IXmlDocumentStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlDocumentStatics(IXmlDocumentStatics const&) noexcept = default;
        IXmlDocumentStatics(IXmlDocumentStatics&&) noexcept = default;
        IXmlDocumentStatics& operator=(IXmlDocumentStatics const&) & noexcept = default;
        IXmlDocumentStatics& operator=(IXmlDocumentStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlDocumentType :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlDocumentType>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlDocumentType, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode>
    {
        IXmlDocumentType(std::nullptr_t = nullptr) noexcept {}
        IXmlDocumentType(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlDocumentType(IXmlDocumentType const&) noexcept = default;
        IXmlDocumentType(IXmlDocumentType&&) noexcept = default;
        IXmlDocumentType& operator=(IXmlDocumentType const&) & noexcept = default;
        IXmlDocumentType& operator=(IXmlDocumentType&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlDomImplementation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlDomImplementation>
    {
        IXmlDomImplementation(std::nullptr_t = nullptr) noexcept {}
        IXmlDomImplementation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlDomImplementation(IXmlDomImplementation const&) noexcept = default;
        IXmlDomImplementation(IXmlDomImplementation&&) noexcept = default;
        IXmlDomImplementation& operator=(IXmlDomImplementation const&) & noexcept = default;
        IXmlDomImplementation& operator=(IXmlDomImplementation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlElement>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlElement, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode>
    {
        IXmlElement(std::nullptr_t = nullptr) noexcept {}
        IXmlElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlElement(IXmlElement const&) noexcept = default;
        IXmlElement(IXmlElement&&) noexcept = default;
        IXmlElement& operator=(IXmlElement const&) & noexcept = default;
        IXmlElement& operator=(IXmlElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlEntityReference :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlEntityReference>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlEntityReference, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode>
    {
        IXmlEntityReference(std::nullptr_t = nullptr) noexcept {}
        IXmlEntityReference(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlEntityReference(IXmlEntityReference const&) noexcept = default;
        IXmlEntityReference(IXmlEntityReference&&) noexcept = default;
        IXmlEntityReference& operator=(IXmlEntityReference const&) & noexcept = default;
        IXmlEntityReference& operator=(IXmlEntityReference&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlLoadSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlLoadSettings>
    {
        IXmlLoadSettings(std::nullptr_t = nullptr) noexcept {}
        IXmlLoadSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlLoadSettings(IXmlLoadSettings const&) noexcept = default;
        IXmlLoadSettings(IXmlLoadSettings&&) noexcept = default;
        IXmlLoadSettings& operator=(IXmlLoadSettings const&) & noexcept = default;
        IXmlLoadSettings& operator=(IXmlLoadSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlNamedNodeMap :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlNamedNodeMap>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlNamedNodeMap, winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Data::Xml::Dom::IXmlNode>, winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Data::Xml::Dom::IXmlNode>>
    {
        IXmlNamedNodeMap(std::nullptr_t = nullptr) noexcept {}
        IXmlNamedNodeMap(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlNamedNodeMap(IXmlNamedNodeMap const&) noexcept = default;
        IXmlNamedNodeMap(IXmlNamedNodeMap&&) noexcept = default;
        IXmlNamedNodeMap& operator=(IXmlNamedNodeMap const&) & noexcept = default;
        IXmlNamedNodeMap& operator=(IXmlNamedNodeMap&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlNode :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlNode>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlNode, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer>
    {
        IXmlNode(std::nullptr_t = nullptr) noexcept {}
        IXmlNode(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlNode(IXmlNode const&) noexcept = default;
        IXmlNode(IXmlNode&&) noexcept = default;
        IXmlNode& operator=(IXmlNode const&) & noexcept = default;
        IXmlNode& operator=(IXmlNode&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlNodeList :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlNodeList>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlNodeList, winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Data::Xml::Dom::IXmlNode>, winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Data::Xml::Dom::IXmlNode>>
    {
        IXmlNodeList(std::nullptr_t = nullptr) noexcept {}
        IXmlNodeList(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlNodeList(IXmlNodeList const&) noexcept = default;
        IXmlNodeList(IXmlNodeList&&) noexcept = default;
        IXmlNodeList& operator=(IXmlNodeList const&) & noexcept = default;
        IXmlNodeList& operator=(IXmlNodeList&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlNodeSelector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlNodeSelector>
    {
        IXmlNodeSelector(std::nullptr_t = nullptr) noexcept {}
        IXmlNodeSelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlNodeSelector(IXmlNodeSelector const&) noexcept = default;
        IXmlNodeSelector(IXmlNodeSelector&&) noexcept = default;
        IXmlNodeSelector& operator=(IXmlNodeSelector const&) & noexcept = default;
        IXmlNodeSelector& operator=(IXmlNodeSelector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlNodeSerializer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlNodeSerializer>
    {
        IXmlNodeSerializer(std::nullptr_t = nullptr) noexcept {}
        IXmlNodeSerializer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlNodeSerializer(IXmlNodeSerializer const&) noexcept = default;
        IXmlNodeSerializer(IXmlNodeSerializer&&) noexcept = default;
        IXmlNodeSerializer& operator=(IXmlNodeSerializer const&) & noexcept = default;
        IXmlNodeSerializer& operator=(IXmlNodeSerializer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlProcessingInstruction :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlProcessingInstruction>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlProcessingInstruction, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode>
    {
        IXmlProcessingInstruction(std::nullptr_t = nullptr) noexcept {}
        IXmlProcessingInstruction(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlProcessingInstruction(IXmlProcessingInstruction const&) noexcept = default;
        IXmlProcessingInstruction(IXmlProcessingInstruction&&) noexcept = default;
        IXmlProcessingInstruction& operator=(IXmlProcessingInstruction const&) & noexcept = default;
        IXmlProcessingInstruction& operator=(IXmlProcessingInstruction&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXmlText :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXmlText>,
        impl::require<winrt::Windows::Data::Xml::Dom::IXmlText, winrt::Windows::Data::Xml::Dom::IXmlNodeSelector, winrt::Windows::Data::Xml::Dom::IXmlNodeSerializer, winrt::Windows::Data::Xml::Dom::IXmlNode, winrt::Windows::Data::Xml::Dom::IXmlCharacterData>
    {
        IXmlText(std::nullptr_t = nullptr) noexcept {}
        IXmlText(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXmlText(IXmlText const&) noexcept = default;
        IXmlText(IXmlText&&) noexcept = default;
        IXmlText& operator=(IXmlText const&) & noexcept = default;
        IXmlText& operator=(IXmlText&&) & noexcept = default;
    };
}
#endif
