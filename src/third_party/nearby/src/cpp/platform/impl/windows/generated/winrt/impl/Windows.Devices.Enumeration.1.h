// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Devices_Enumeration_1_H
#define WINRT_Windows_Devices_Enumeration_1_H
#include "winrt/impl/Windows.Devices.Enumeration.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Enumeration
{
    struct __declspec(empty_bases) IDeviceAccessChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceAccessChangedEventArgs>
    {
        IDeviceAccessChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDeviceAccessChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceAccessChangedEventArgs(IDeviceAccessChangedEventArgs const&) noexcept = default;
        IDeviceAccessChangedEventArgs(IDeviceAccessChangedEventArgs&&) noexcept = default;
        IDeviceAccessChangedEventArgs& operator=(IDeviceAccessChangedEventArgs const&) & noexcept = default;
        IDeviceAccessChangedEventArgs& operator=(IDeviceAccessChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceAccessChangedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceAccessChangedEventArgs2>,
        impl::require<winrt::Windows::Devices::Enumeration::IDeviceAccessChangedEventArgs2, winrt::Windows::Devices::Enumeration::IDeviceAccessChangedEventArgs>
    {
        IDeviceAccessChangedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IDeviceAccessChangedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceAccessChangedEventArgs2(IDeviceAccessChangedEventArgs2 const&) noexcept = default;
        IDeviceAccessChangedEventArgs2(IDeviceAccessChangedEventArgs2&&) noexcept = default;
        IDeviceAccessChangedEventArgs2& operator=(IDeviceAccessChangedEventArgs2 const&) & noexcept = default;
        IDeviceAccessChangedEventArgs2& operator=(IDeviceAccessChangedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceAccessInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceAccessInformation>
    {
        IDeviceAccessInformation(std::nullptr_t = nullptr) noexcept {}
        IDeviceAccessInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceAccessInformation(IDeviceAccessInformation const&) noexcept = default;
        IDeviceAccessInformation(IDeviceAccessInformation&&) noexcept = default;
        IDeviceAccessInformation& operator=(IDeviceAccessInformation const&) & noexcept = default;
        IDeviceAccessInformation& operator=(IDeviceAccessInformation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceAccessInformationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceAccessInformationStatics>
    {
        IDeviceAccessInformationStatics(std::nullptr_t = nullptr) noexcept {}
        IDeviceAccessInformationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceAccessInformationStatics(IDeviceAccessInformationStatics const&) noexcept = default;
        IDeviceAccessInformationStatics(IDeviceAccessInformationStatics&&) noexcept = default;
        IDeviceAccessInformationStatics& operator=(IDeviceAccessInformationStatics const&) & noexcept = default;
        IDeviceAccessInformationStatics& operator=(IDeviceAccessInformationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceConnectionChangeTriggerDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceConnectionChangeTriggerDetails>
    {
        IDeviceConnectionChangeTriggerDetails(std::nullptr_t = nullptr) noexcept {}
        IDeviceConnectionChangeTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceConnectionChangeTriggerDetails(IDeviceConnectionChangeTriggerDetails const&) noexcept = default;
        IDeviceConnectionChangeTriggerDetails(IDeviceConnectionChangeTriggerDetails&&) noexcept = default;
        IDeviceConnectionChangeTriggerDetails& operator=(IDeviceConnectionChangeTriggerDetails const&) & noexcept = default;
        IDeviceConnectionChangeTriggerDetails& operator=(IDeviceConnectionChangeTriggerDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceDisconnectButtonClickedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceDisconnectButtonClickedEventArgs>
    {
        IDeviceDisconnectButtonClickedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDeviceDisconnectButtonClickedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceDisconnectButtonClickedEventArgs(IDeviceDisconnectButtonClickedEventArgs const&) noexcept = default;
        IDeviceDisconnectButtonClickedEventArgs(IDeviceDisconnectButtonClickedEventArgs&&) noexcept = default;
        IDeviceDisconnectButtonClickedEventArgs& operator=(IDeviceDisconnectButtonClickedEventArgs const&) & noexcept = default;
        IDeviceDisconnectButtonClickedEventArgs& operator=(IDeviceDisconnectButtonClickedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformation>
    {
        IDeviceInformation(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformation(IDeviceInformation const&) noexcept = default;
        IDeviceInformation(IDeviceInformation&&) noexcept = default;
        IDeviceInformation& operator=(IDeviceInformation const&) & noexcept = default;
        IDeviceInformation& operator=(IDeviceInformation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformation2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformation2>
    {
        IDeviceInformation2(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformation2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformation2(IDeviceInformation2 const&) noexcept = default;
        IDeviceInformation2(IDeviceInformation2&&) noexcept = default;
        IDeviceInformation2& operator=(IDeviceInformation2 const&) & noexcept = default;
        IDeviceInformation2& operator=(IDeviceInformation2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformationCustomPairing :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformationCustomPairing>
    {
        IDeviceInformationCustomPairing(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformationCustomPairing(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformationCustomPairing(IDeviceInformationCustomPairing const&) noexcept = default;
        IDeviceInformationCustomPairing(IDeviceInformationCustomPairing&&) noexcept = default;
        IDeviceInformationCustomPairing& operator=(IDeviceInformationCustomPairing const&) & noexcept = default;
        IDeviceInformationCustomPairing& operator=(IDeviceInformationCustomPairing&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformationPairing :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformationPairing>
    {
        IDeviceInformationPairing(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformationPairing(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformationPairing(IDeviceInformationPairing const&) noexcept = default;
        IDeviceInformationPairing(IDeviceInformationPairing&&) noexcept = default;
        IDeviceInformationPairing& operator=(IDeviceInformationPairing const&) & noexcept = default;
        IDeviceInformationPairing& operator=(IDeviceInformationPairing&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformationPairing2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformationPairing2>
    {
        IDeviceInformationPairing2(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformationPairing2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformationPairing2(IDeviceInformationPairing2 const&) noexcept = default;
        IDeviceInformationPairing2(IDeviceInformationPairing2&&) noexcept = default;
        IDeviceInformationPairing2& operator=(IDeviceInformationPairing2 const&) & noexcept = default;
        IDeviceInformationPairing2& operator=(IDeviceInformationPairing2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformationPairingStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformationPairingStatics>
    {
        IDeviceInformationPairingStatics(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformationPairingStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformationPairingStatics(IDeviceInformationPairingStatics const&) noexcept = default;
        IDeviceInformationPairingStatics(IDeviceInformationPairingStatics&&) noexcept = default;
        IDeviceInformationPairingStatics& operator=(IDeviceInformationPairingStatics const&) & noexcept = default;
        IDeviceInformationPairingStatics& operator=(IDeviceInformationPairingStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformationPairingStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformationPairingStatics2>
    {
        IDeviceInformationPairingStatics2(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformationPairingStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformationPairingStatics2(IDeviceInformationPairingStatics2 const&) noexcept = default;
        IDeviceInformationPairingStatics2(IDeviceInformationPairingStatics2&&) noexcept = default;
        IDeviceInformationPairingStatics2& operator=(IDeviceInformationPairingStatics2 const&) & noexcept = default;
        IDeviceInformationPairingStatics2& operator=(IDeviceInformationPairingStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformationStatics>
    {
        IDeviceInformationStatics(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformationStatics(IDeviceInformationStatics const&) noexcept = default;
        IDeviceInformationStatics(IDeviceInformationStatics&&) noexcept = default;
        IDeviceInformationStatics& operator=(IDeviceInformationStatics const&) & noexcept = default;
        IDeviceInformationStatics& operator=(IDeviceInformationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformationStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformationStatics2>
    {
        IDeviceInformationStatics2(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformationStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformationStatics2(IDeviceInformationStatics2 const&) noexcept = default;
        IDeviceInformationStatics2(IDeviceInformationStatics2&&) noexcept = default;
        IDeviceInformationStatics2& operator=(IDeviceInformationStatics2 const&) & noexcept = default;
        IDeviceInformationStatics2& operator=(IDeviceInformationStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformationUpdate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformationUpdate>
    {
        IDeviceInformationUpdate(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformationUpdate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformationUpdate(IDeviceInformationUpdate const&) noexcept = default;
        IDeviceInformationUpdate(IDeviceInformationUpdate&&) noexcept = default;
        IDeviceInformationUpdate& operator=(IDeviceInformationUpdate const&) & noexcept = default;
        IDeviceInformationUpdate& operator=(IDeviceInformationUpdate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceInformationUpdate2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceInformationUpdate2>
    {
        IDeviceInformationUpdate2(std::nullptr_t = nullptr) noexcept {}
        IDeviceInformationUpdate2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceInformationUpdate2(IDeviceInformationUpdate2 const&) noexcept = default;
        IDeviceInformationUpdate2(IDeviceInformationUpdate2&&) noexcept = default;
        IDeviceInformationUpdate2& operator=(IDeviceInformationUpdate2 const&) & noexcept = default;
        IDeviceInformationUpdate2& operator=(IDeviceInformationUpdate2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDevicePairingRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDevicePairingRequestedEventArgs>
    {
        IDevicePairingRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDevicePairingRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDevicePairingRequestedEventArgs(IDevicePairingRequestedEventArgs const&) noexcept = default;
        IDevicePairingRequestedEventArgs(IDevicePairingRequestedEventArgs&&) noexcept = default;
        IDevicePairingRequestedEventArgs& operator=(IDevicePairingRequestedEventArgs const&) & noexcept = default;
        IDevicePairingRequestedEventArgs& operator=(IDevicePairingRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDevicePairingRequestedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDevicePairingRequestedEventArgs2>
    {
        IDevicePairingRequestedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IDevicePairingRequestedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDevicePairingRequestedEventArgs2(IDevicePairingRequestedEventArgs2 const&) noexcept = default;
        IDevicePairingRequestedEventArgs2(IDevicePairingRequestedEventArgs2&&) noexcept = default;
        IDevicePairingRequestedEventArgs2& operator=(IDevicePairingRequestedEventArgs2 const&) & noexcept = default;
        IDevicePairingRequestedEventArgs2& operator=(IDevicePairingRequestedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDevicePairingResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDevicePairingResult>
    {
        IDevicePairingResult(std::nullptr_t = nullptr) noexcept {}
        IDevicePairingResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDevicePairingResult(IDevicePairingResult const&) noexcept = default;
        IDevicePairingResult(IDevicePairingResult&&) noexcept = default;
        IDevicePairingResult& operator=(IDevicePairingResult const&) & noexcept = default;
        IDevicePairingResult& operator=(IDevicePairingResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDevicePairingSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDevicePairingSettings>
    {
        IDevicePairingSettings(std::nullptr_t = nullptr) noexcept {}
        IDevicePairingSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDevicePairingSettings(IDevicePairingSettings const&) noexcept = default;
        IDevicePairingSettings(IDevicePairingSettings&&) noexcept = default;
        IDevicePairingSettings& operator=(IDevicePairingSettings const&) & noexcept = default;
        IDevicePairingSettings& operator=(IDevicePairingSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDevicePicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDevicePicker>
    {
        IDevicePicker(std::nullptr_t = nullptr) noexcept {}
        IDevicePicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDevicePicker(IDevicePicker const&) noexcept = default;
        IDevicePicker(IDevicePicker&&) noexcept = default;
        IDevicePicker& operator=(IDevicePicker const&) & noexcept = default;
        IDevicePicker& operator=(IDevicePicker&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDevicePickerAppearance :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDevicePickerAppearance>
    {
        IDevicePickerAppearance(std::nullptr_t = nullptr) noexcept {}
        IDevicePickerAppearance(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDevicePickerAppearance(IDevicePickerAppearance const&) noexcept = default;
        IDevicePickerAppearance(IDevicePickerAppearance&&) noexcept = default;
        IDevicePickerAppearance& operator=(IDevicePickerAppearance const&) & noexcept = default;
        IDevicePickerAppearance& operator=(IDevicePickerAppearance&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDevicePickerFilter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDevicePickerFilter>
    {
        IDevicePickerFilter(std::nullptr_t = nullptr) noexcept {}
        IDevicePickerFilter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDevicePickerFilter(IDevicePickerFilter const&) noexcept = default;
        IDevicePickerFilter(IDevicePickerFilter&&) noexcept = default;
        IDevicePickerFilter& operator=(IDevicePickerFilter const&) & noexcept = default;
        IDevicePickerFilter& operator=(IDevicePickerFilter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceSelectedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceSelectedEventArgs>
    {
        IDeviceSelectedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDeviceSelectedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceSelectedEventArgs(IDeviceSelectedEventArgs const&) noexcept = default;
        IDeviceSelectedEventArgs(IDeviceSelectedEventArgs&&) noexcept = default;
        IDeviceSelectedEventArgs& operator=(IDeviceSelectedEventArgs const&) & noexcept = default;
        IDeviceSelectedEventArgs& operator=(IDeviceSelectedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceUnpairingResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceUnpairingResult>
    {
        IDeviceUnpairingResult(std::nullptr_t = nullptr) noexcept {}
        IDeviceUnpairingResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceUnpairingResult(IDeviceUnpairingResult const&) noexcept = default;
        IDeviceUnpairingResult(IDeviceUnpairingResult&&) noexcept = default;
        IDeviceUnpairingResult& operator=(IDeviceUnpairingResult const&) & noexcept = default;
        IDeviceUnpairingResult& operator=(IDeviceUnpairingResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceWatcher :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceWatcher>
    {
        IDeviceWatcher(std::nullptr_t = nullptr) noexcept {}
        IDeviceWatcher(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceWatcher(IDeviceWatcher const&) noexcept = default;
        IDeviceWatcher(IDeviceWatcher&&) noexcept = default;
        IDeviceWatcher& operator=(IDeviceWatcher const&) & noexcept = default;
        IDeviceWatcher& operator=(IDeviceWatcher&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceWatcher2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceWatcher2>
    {
        IDeviceWatcher2(std::nullptr_t = nullptr) noexcept {}
        IDeviceWatcher2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceWatcher2(IDeviceWatcher2 const&) noexcept = default;
        IDeviceWatcher2(IDeviceWatcher2&&) noexcept = default;
        IDeviceWatcher2& operator=(IDeviceWatcher2 const&) & noexcept = default;
        IDeviceWatcher2& operator=(IDeviceWatcher2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceWatcherEvent :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceWatcherEvent>
    {
        IDeviceWatcherEvent(std::nullptr_t = nullptr) noexcept {}
        IDeviceWatcherEvent(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceWatcherEvent(IDeviceWatcherEvent const&) noexcept = default;
        IDeviceWatcherEvent(IDeviceWatcherEvent&&) noexcept = default;
        IDeviceWatcherEvent& operator=(IDeviceWatcherEvent const&) & noexcept = default;
        IDeviceWatcherEvent& operator=(IDeviceWatcherEvent&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDeviceWatcherTriggerDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDeviceWatcherTriggerDetails>
    {
        IDeviceWatcherTriggerDetails(std::nullptr_t = nullptr) noexcept {}
        IDeviceWatcherTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDeviceWatcherTriggerDetails(IDeviceWatcherTriggerDetails const&) noexcept = default;
        IDeviceWatcherTriggerDetails(IDeviceWatcherTriggerDetails&&) noexcept = default;
        IDeviceWatcherTriggerDetails& operator=(IDeviceWatcherTriggerDetails const&) & noexcept = default;
        IDeviceWatcherTriggerDetails& operator=(IDeviceWatcherTriggerDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEnclosureLocation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEnclosureLocation>
    {
        IEnclosureLocation(std::nullptr_t = nullptr) noexcept {}
        IEnclosureLocation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEnclosureLocation(IEnclosureLocation const&) noexcept = default;
        IEnclosureLocation(IEnclosureLocation&&) noexcept = default;
        IEnclosureLocation& operator=(IEnclosureLocation const&) & noexcept = default;
        IEnclosureLocation& operator=(IEnclosureLocation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEnclosureLocation2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEnclosureLocation2>,
        impl::require<winrt::Windows::Devices::Enumeration::IEnclosureLocation2, winrt::Windows::Devices::Enumeration::IEnclosureLocation>
    {
        IEnclosureLocation2(std::nullptr_t = nullptr) noexcept {}
        IEnclosureLocation2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEnclosureLocation2(IEnclosureLocation2 const&) noexcept = default;
        IEnclosureLocation2(IEnclosureLocation2&&) noexcept = default;
        IEnclosureLocation2& operator=(IEnclosureLocation2 const&) & noexcept = default;
        IEnclosureLocation2& operator=(IEnclosureLocation2&&) & noexcept = default;
    };
}
#endif
