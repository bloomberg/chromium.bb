// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_Wallet_2_H
#define WINRT_Windows_ApplicationModel_Wallet_2_H
#include "winrt/impl/Windows.Storage.Streams.1.h"
#include "winrt/impl/Windows.ApplicationModel.Wallet.1.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::Wallet
{
    struct __declspec(empty_bases) WalletBarcode : winrt::Windows::ApplicationModel::Wallet::IWalletBarcode
    {
        WalletBarcode(std::nullptr_t) noexcept {}
        WalletBarcode(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Wallet::IWalletBarcode(ptr, take_ownership_from_abi) {}
        WalletBarcode(winrt::Windows::ApplicationModel::Wallet::WalletBarcodeSymbology const& symbology, param::hstring const& value);
        explicit WalletBarcode(winrt::Windows::Storage::Streams::IRandomAccessStreamReference const& streamToBarcodeImage);
        WalletBarcode(WalletBarcode const&) noexcept = default;
        WalletBarcode(WalletBarcode&&) noexcept = default;
        WalletBarcode& operator=(WalletBarcode const&) & noexcept = default;
        WalletBarcode& operator=(WalletBarcode&&) & noexcept = default;
    };
    struct __declspec(empty_bases) WalletItem : winrt::Windows::ApplicationModel::Wallet::IWalletItem
    {
        WalletItem(std::nullptr_t) noexcept {}
        WalletItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Wallet::IWalletItem(ptr, take_ownership_from_abi) {}
        WalletItem(winrt::Windows::ApplicationModel::Wallet::WalletItemKind const& kind, param::hstring const& displayName);
        WalletItem(WalletItem const&) noexcept = default;
        WalletItem(WalletItem&&) noexcept = default;
        WalletItem& operator=(WalletItem const&) & noexcept = default;
        WalletItem& operator=(WalletItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) WalletItemCustomProperty : winrt::Windows::ApplicationModel::Wallet::IWalletItemCustomProperty
    {
        WalletItemCustomProperty(std::nullptr_t) noexcept {}
        WalletItemCustomProperty(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Wallet::IWalletItemCustomProperty(ptr, take_ownership_from_abi) {}
        WalletItemCustomProperty(param::hstring const& name, param::hstring const& value);
        WalletItemCustomProperty(WalletItemCustomProperty const&) noexcept = default;
        WalletItemCustomProperty(WalletItemCustomProperty&&) noexcept = default;
        WalletItemCustomProperty& operator=(WalletItemCustomProperty const&) & noexcept = default;
        WalletItemCustomProperty& operator=(WalletItemCustomProperty&&) & noexcept = default;
    };
    struct __declspec(empty_bases) WalletItemStore : winrt::Windows::ApplicationModel::Wallet::IWalletItemStore
    {
        WalletItemStore(std::nullptr_t) noexcept {}
        WalletItemStore(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Wallet::IWalletItemStore(ptr, take_ownership_from_abi) {}
        WalletItemStore(WalletItemStore const&) noexcept = default;
        WalletItemStore(WalletItemStore&&) noexcept = default;
        WalletItemStore& operator=(WalletItemStore const&) & noexcept = default;
        WalletItemStore& operator=(WalletItemStore&&) & noexcept = default;
    };
    struct WalletManager
    {
        WalletManager() = delete;
        static auto RequestStoreAsync();
    };
    struct __declspec(empty_bases) WalletRelevantLocation : winrt::Windows::ApplicationModel::Wallet::IWalletRelevantLocation
    {
        WalletRelevantLocation(std::nullptr_t) noexcept {}
        WalletRelevantLocation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Wallet::IWalletRelevantLocation(ptr, take_ownership_from_abi) {}
        WalletRelevantLocation();
        WalletRelevantLocation(WalletRelevantLocation const&) noexcept = default;
        WalletRelevantLocation(WalletRelevantLocation&&) noexcept = default;
        WalletRelevantLocation& operator=(WalletRelevantLocation const&) & noexcept = default;
        WalletRelevantLocation& operator=(WalletRelevantLocation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) WalletTransaction : winrt::Windows::ApplicationModel::Wallet::IWalletTransaction
    {
        WalletTransaction(std::nullptr_t) noexcept {}
        WalletTransaction(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Wallet::IWalletTransaction(ptr, take_ownership_from_abi) {}
        WalletTransaction();
        WalletTransaction(WalletTransaction const&) noexcept = default;
        WalletTransaction(WalletTransaction&&) noexcept = default;
        WalletTransaction& operator=(WalletTransaction const&) & noexcept = default;
        WalletTransaction& operator=(WalletTransaction&&) & noexcept = default;
    };
    struct __declspec(empty_bases) WalletVerb : winrt::Windows::ApplicationModel::Wallet::IWalletVerb
    {
        WalletVerb(std::nullptr_t) noexcept {}
        WalletVerb(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Wallet::IWalletVerb(ptr, take_ownership_from_abi) {}
        explicit WalletVerb(param::hstring const& name);
        WalletVerb(WalletVerb const&) noexcept = default;
        WalletVerb(WalletVerb&&) noexcept = default;
        WalletVerb& operator=(WalletVerb const&) & noexcept = default;
        WalletVerb& operator=(WalletVerb&&) & noexcept = default;
    };
}
#endif
