// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Devices_PointOfService_1_H
#define WINRT_Windows_Devices_PointOfService_1_H
#include "winrt/impl/Windows.Devices.PointOfService.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::PointOfService
{
    struct __declspec(empty_bases) IBarcodeScanner :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScanner>
    {
        IBarcodeScanner(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScanner(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScanner(IBarcodeScanner const&) noexcept = default;
        IBarcodeScanner(IBarcodeScanner&&) noexcept = default;
        IBarcodeScanner& operator=(IBarcodeScanner const&) & noexcept = default;
        IBarcodeScanner& operator=(IBarcodeScanner&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScanner2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScanner2>
    {
        IBarcodeScanner2(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScanner2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScanner2(IBarcodeScanner2 const&) noexcept = default;
        IBarcodeScanner2(IBarcodeScanner2&&) noexcept = default;
        IBarcodeScanner2& operator=(IBarcodeScanner2 const&) & noexcept = default;
        IBarcodeScanner2& operator=(IBarcodeScanner2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerCapabilities>
    {
        IBarcodeScannerCapabilities(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerCapabilities(IBarcodeScannerCapabilities const&) noexcept = default;
        IBarcodeScannerCapabilities(IBarcodeScannerCapabilities&&) noexcept = default;
        IBarcodeScannerCapabilities& operator=(IBarcodeScannerCapabilities const&) & noexcept = default;
        IBarcodeScannerCapabilities& operator=(IBarcodeScannerCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerCapabilities1 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerCapabilities1>
    {
        IBarcodeScannerCapabilities1(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerCapabilities1(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerCapabilities1(IBarcodeScannerCapabilities1 const&) noexcept = default;
        IBarcodeScannerCapabilities1(IBarcodeScannerCapabilities1&&) noexcept = default;
        IBarcodeScannerCapabilities1& operator=(IBarcodeScannerCapabilities1 const&) & noexcept = default;
        IBarcodeScannerCapabilities1& operator=(IBarcodeScannerCapabilities1&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerCapabilities2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerCapabilities2>
    {
        IBarcodeScannerCapabilities2(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerCapabilities2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerCapabilities2(IBarcodeScannerCapabilities2 const&) noexcept = default;
        IBarcodeScannerCapabilities2(IBarcodeScannerCapabilities2&&) noexcept = default;
        IBarcodeScannerCapabilities2& operator=(IBarcodeScannerCapabilities2 const&) & noexcept = default;
        IBarcodeScannerCapabilities2& operator=(IBarcodeScannerCapabilities2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerDataReceivedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerDataReceivedEventArgs>
    {
        IBarcodeScannerDataReceivedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerDataReceivedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerDataReceivedEventArgs(IBarcodeScannerDataReceivedEventArgs const&) noexcept = default;
        IBarcodeScannerDataReceivedEventArgs(IBarcodeScannerDataReceivedEventArgs&&) noexcept = default;
        IBarcodeScannerDataReceivedEventArgs& operator=(IBarcodeScannerDataReceivedEventArgs const&) & noexcept = default;
        IBarcodeScannerDataReceivedEventArgs& operator=(IBarcodeScannerDataReceivedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerErrorOccurredEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerErrorOccurredEventArgs>
    {
        IBarcodeScannerErrorOccurredEventArgs(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerErrorOccurredEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerErrorOccurredEventArgs(IBarcodeScannerErrorOccurredEventArgs const&) noexcept = default;
        IBarcodeScannerErrorOccurredEventArgs(IBarcodeScannerErrorOccurredEventArgs&&) noexcept = default;
        IBarcodeScannerErrorOccurredEventArgs& operator=(IBarcodeScannerErrorOccurredEventArgs const&) & noexcept = default;
        IBarcodeScannerErrorOccurredEventArgs& operator=(IBarcodeScannerErrorOccurredEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerImagePreviewReceivedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerImagePreviewReceivedEventArgs>
    {
        IBarcodeScannerImagePreviewReceivedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerImagePreviewReceivedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerImagePreviewReceivedEventArgs(IBarcodeScannerImagePreviewReceivedEventArgs const&) noexcept = default;
        IBarcodeScannerImagePreviewReceivedEventArgs(IBarcodeScannerImagePreviewReceivedEventArgs&&) noexcept = default;
        IBarcodeScannerImagePreviewReceivedEventArgs& operator=(IBarcodeScannerImagePreviewReceivedEventArgs const&) & noexcept = default;
        IBarcodeScannerImagePreviewReceivedEventArgs& operator=(IBarcodeScannerImagePreviewReceivedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerReport>
    {
        IBarcodeScannerReport(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerReport(IBarcodeScannerReport const&) noexcept = default;
        IBarcodeScannerReport(IBarcodeScannerReport&&) noexcept = default;
        IBarcodeScannerReport& operator=(IBarcodeScannerReport const&) & noexcept = default;
        IBarcodeScannerReport& operator=(IBarcodeScannerReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerReportFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerReportFactory>
    {
        IBarcodeScannerReportFactory(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerReportFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerReportFactory(IBarcodeScannerReportFactory const&) noexcept = default;
        IBarcodeScannerReportFactory(IBarcodeScannerReportFactory&&) noexcept = default;
        IBarcodeScannerReportFactory& operator=(IBarcodeScannerReportFactory const&) & noexcept = default;
        IBarcodeScannerReportFactory& operator=(IBarcodeScannerReportFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerStatics>
    {
        IBarcodeScannerStatics(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerStatics(IBarcodeScannerStatics const&) noexcept = default;
        IBarcodeScannerStatics(IBarcodeScannerStatics&&) noexcept = default;
        IBarcodeScannerStatics& operator=(IBarcodeScannerStatics const&) & noexcept = default;
        IBarcodeScannerStatics& operator=(IBarcodeScannerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerStatics2>
    {
        IBarcodeScannerStatics2(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerStatics2(IBarcodeScannerStatics2 const&) noexcept = default;
        IBarcodeScannerStatics2(IBarcodeScannerStatics2&&) noexcept = default;
        IBarcodeScannerStatics2& operator=(IBarcodeScannerStatics2 const&) & noexcept = default;
        IBarcodeScannerStatics2& operator=(IBarcodeScannerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeScannerStatusUpdatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeScannerStatusUpdatedEventArgs>
    {
        IBarcodeScannerStatusUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IBarcodeScannerStatusUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeScannerStatusUpdatedEventArgs(IBarcodeScannerStatusUpdatedEventArgs const&) noexcept = default;
        IBarcodeScannerStatusUpdatedEventArgs(IBarcodeScannerStatusUpdatedEventArgs&&) noexcept = default;
        IBarcodeScannerStatusUpdatedEventArgs& operator=(IBarcodeScannerStatusUpdatedEventArgs const&) & noexcept = default;
        IBarcodeScannerStatusUpdatedEventArgs& operator=(IBarcodeScannerStatusUpdatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeSymbologiesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeSymbologiesStatics>
    {
        IBarcodeSymbologiesStatics(std::nullptr_t = nullptr) noexcept {}
        IBarcodeSymbologiesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeSymbologiesStatics(IBarcodeSymbologiesStatics const&) noexcept = default;
        IBarcodeSymbologiesStatics(IBarcodeSymbologiesStatics&&) noexcept = default;
        IBarcodeSymbologiesStatics& operator=(IBarcodeSymbologiesStatics const&) & noexcept = default;
        IBarcodeSymbologiesStatics& operator=(IBarcodeSymbologiesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeSymbologiesStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeSymbologiesStatics2>
    {
        IBarcodeSymbologiesStatics2(std::nullptr_t = nullptr) noexcept {}
        IBarcodeSymbologiesStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeSymbologiesStatics2(IBarcodeSymbologiesStatics2 const&) noexcept = default;
        IBarcodeSymbologiesStatics2(IBarcodeSymbologiesStatics2&&) noexcept = default;
        IBarcodeSymbologiesStatics2& operator=(IBarcodeSymbologiesStatics2 const&) & noexcept = default;
        IBarcodeSymbologiesStatics2& operator=(IBarcodeSymbologiesStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarcodeSymbologyAttributes :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarcodeSymbologyAttributes>
    {
        IBarcodeSymbologyAttributes(std::nullptr_t = nullptr) noexcept {}
        IBarcodeSymbologyAttributes(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarcodeSymbologyAttributes(IBarcodeSymbologyAttributes const&) noexcept = default;
        IBarcodeSymbologyAttributes(IBarcodeSymbologyAttributes&&) noexcept = default;
        IBarcodeSymbologyAttributes& operator=(IBarcodeSymbologyAttributes const&) & noexcept = default;
        IBarcodeSymbologyAttributes& operator=(IBarcodeSymbologyAttributes&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICashDrawer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICashDrawer>
    {
        ICashDrawer(std::nullptr_t = nullptr) noexcept {}
        ICashDrawer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICashDrawer(ICashDrawer const&) noexcept = default;
        ICashDrawer(ICashDrawer&&) noexcept = default;
        ICashDrawer& operator=(ICashDrawer const&) & noexcept = default;
        ICashDrawer& operator=(ICashDrawer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICashDrawerCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICashDrawerCapabilities>
    {
        ICashDrawerCapabilities(std::nullptr_t = nullptr) noexcept {}
        ICashDrawerCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICashDrawerCapabilities(ICashDrawerCapabilities const&) noexcept = default;
        ICashDrawerCapabilities(ICashDrawerCapabilities&&) noexcept = default;
        ICashDrawerCapabilities& operator=(ICashDrawerCapabilities const&) & noexcept = default;
        ICashDrawerCapabilities& operator=(ICashDrawerCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICashDrawerCloseAlarm :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICashDrawerCloseAlarm>
    {
        ICashDrawerCloseAlarm(std::nullptr_t = nullptr) noexcept {}
        ICashDrawerCloseAlarm(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICashDrawerCloseAlarm(ICashDrawerCloseAlarm const&) noexcept = default;
        ICashDrawerCloseAlarm(ICashDrawerCloseAlarm&&) noexcept = default;
        ICashDrawerCloseAlarm& operator=(ICashDrawerCloseAlarm const&) & noexcept = default;
        ICashDrawerCloseAlarm& operator=(ICashDrawerCloseAlarm&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICashDrawerEventSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICashDrawerEventSource>
    {
        ICashDrawerEventSource(std::nullptr_t = nullptr) noexcept {}
        ICashDrawerEventSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICashDrawerEventSource(ICashDrawerEventSource const&) noexcept = default;
        ICashDrawerEventSource(ICashDrawerEventSource&&) noexcept = default;
        ICashDrawerEventSource& operator=(ICashDrawerEventSource const&) & noexcept = default;
        ICashDrawerEventSource& operator=(ICashDrawerEventSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICashDrawerEventSourceEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICashDrawerEventSourceEventArgs>
    {
        ICashDrawerEventSourceEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICashDrawerEventSourceEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICashDrawerEventSourceEventArgs(ICashDrawerEventSourceEventArgs const&) noexcept = default;
        ICashDrawerEventSourceEventArgs(ICashDrawerEventSourceEventArgs&&) noexcept = default;
        ICashDrawerEventSourceEventArgs& operator=(ICashDrawerEventSourceEventArgs const&) & noexcept = default;
        ICashDrawerEventSourceEventArgs& operator=(ICashDrawerEventSourceEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICashDrawerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICashDrawerStatics>
    {
        ICashDrawerStatics(std::nullptr_t = nullptr) noexcept {}
        ICashDrawerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICashDrawerStatics(ICashDrawerStatics const&) noexcept = default;
        ICashDrawerStatics(ICashDrawerStatics&&) noexcept = default;
        ICashDrawerStatics& operator=(ICashDrawerStatics const&) & noexcept = default;
        ICashDrawerStatics& operator=(ICashDrawerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICashDrawerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICashDrawerStatics2>
    {
        ICashDrawerStatics2(std::nullptr_t = nullptr) noexcept {}
        ICashDrawerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICashDrawerStatics2(ICashDrawerStatics2 const&) noexcept = default;
        ICashDrawerStatics2(ICashDrawerStatics2&&) noexcept = default;
        ICashDrawerStatics2& operator=(ICashDrawerStatics2 const&) & noexcept = default;
        ICashDrawerStatics2& operator=(ICashDrawerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICashDrawerStatus :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICashDrawerStatus>
    {
        ICashDrawerStatus(std::nullptr_t = nullptr) noexcept {}
        ICashDrawerStatus(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICashDrawerStatus(ICashDrawerStatus const&) noexcept = default;
        ICashDrawerStatus(ICashDrawerStatus&&) noexcept = default;
        ICashDrawerStatus& operator=(ICashDrawerStatus const&) & noexcept = default;
        ICashDrawerStatus& operator=(ICashDrawerStatus&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICashDrawerStatusUpdatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICashDrawerStatusUpdatedEventArgs>
    {
        ICashDrawerStatusUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICashDrawerStatusUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICashDrawerStatusUpdatedEventArgs(ICashDrawerStatusUpdatedEventArgs const&) noexcept = default;
        ICashDrawerStatusUpdatedEventArgs(ICashDrawerStatusUpdatedEventArgs&&) noexcept = default;
        ICashDrawerStatusUpdatedEventArgs& operator=(ICashDrawerStatusUpdatedEventArgs const&) & noexcept = default;
        ICashDrawerStatusUpdatedEventArgs& operator=(ICashDrawerStatusUpdatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedBarcodeScanner :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedBarcodeScanner>
    {
        IClaimedBarcodeScanner(std::nullptr_t = nullptr) noexcept {}
        IClaimedBarcodeScanner(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedBarcodeScanner(IClaimedBarcodeScanner const&) noexcept = default;
        IClaimedBarcodeScanner(IClaimedBarcodeScanner&&) noexcept = default;
        IClaimedBarcodeScanner& operator=(IClaimedBarcodeScanner const&) & noexcept = default;
        IClaimedBarcodeScanner& operator=(IClaimedBarcodeScanner&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedBarcodeScanner1 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedBarcodeScanner1>
    {
        IClaimedBarcodeScanner1(std::nullptr_t = nullptr) noexcept {}
        IClaimedBarcodeScanner1(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedBarcodeScanner1(IClaimedBarcodeScanner1 const&) noexcept = default;
        IClaimedBarcodeScanner1(IClaimedBarcodeScanner1&&) noexcept = default;
        IClaimedBarcodeScanner1& operator=(IClaimedBarcodeScanner1 const&) & noexcept = default;
        IClaimedBarcodeScanner1& operator=(IClaimedBarcodeScanner1&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedBarcodeScanner2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedBarcodeScanner2>
    {
        IClaimedBarcodeScanner2(std::nullptr_t = nullptr) noexcept {}
        IClaimedBarcodeScanner2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedBarcodeScanner2(IClaimedBarcodeScanner2 const&) noexcept = default;
        IClaimedBarcodeScanner2(IClaimedBarcodeScanner2&&) noexcept = default;
        IClaimedBarcodeScanner2& operator=(IClaimedBarcodeScanner2 const&) & noexcept = default;
        IClaimedBarcodeScanner2& operator=(IClaimedBarcodeScanner2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedBarcodeScanner3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedBarcodeScanner3>
    {
        IClaimedBarcodeScanner3(std::nullptr_t = nullptr) noexcept {}
        IClaimedBarcodeScanner3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedBarcodeScanner3(IClaimedBarcodeScanner3 const&) noexcept = default;
        IClaimedBarcodeScanner3(IClaimedBarcodeScanner3&&) noexcept = default;
        IClaimedBarcodeScanner3& operator=(IClaimedBarcodeScanner3 const&) & noexcept = default;
        IClaimedBarcodeScanner3& operator=(IClaimedBarcodeScanner3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedBarcodeScanner4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedBarcodeScanner4>
    {
        IClaimedBarcodeScanner4(std::nullptr_t = nullptr) noexcept {}
        IClaimedBarcodeScanner4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedBarcodeScanner4(IClaimedBarcodeScanner4 const&) noexcept = default;
        IClaimedBarcodeScanner4(IClaimedBarcodeScanner4&&) noexcept = default;
        IClaimedBarcodeScanner4& operator=(IClaimedBarcodeScanner4 const&) & noexcept = default;
        IClaimedBarcodeScanner4& operator=(IClaimedBarcodeScanner4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedBarcodeScannerClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedBarcodeScannerClosedEventArgs>
    {
        IClaimedBarcodeScannerClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IClaimedBarcodeScannerClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedBarcodeScannerClosedEventArgs(IClaimedBarcodeScannerClosedEventArgs const&) noexcept = default;
        IClaimedBarcodeScannerClosedEventArgs(IClaimedBarcodeScannerClosedEventArgs&&) noexcept = default;
        IClaimedBarcodeScannerClosedEventArgs& operator=(IClaimedBarcodeScannerClosedEventArgs const&) & noexcept = default;
        IClaimedBarcodeScannerClosedEventArgs& operator=(IClaimedBarcodeScannerClosedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedCashDrawer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedCashDrawer>
    {
        IClaimedCashDrawer(std::nullptr_t = nullptr) noexcept {}
        IClaimedCashDrawer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedCashDrawer(IClaimedCashDrawer const&) noexcept = default;
        IClaimedCashDrawer(IClaimedCashDrawer&&) noexcept = default;
        IClaimedCashDrawer& operator=(IClaimedCashDrawer const&) & noexcept = default;
        IClaimedCashDrawer& operator=(IClaimedCashDrawer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedCashDrawer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedCashDrawer2>
    {
        IClaimedCashDrawer2(std::nullptr_t = nullptr) noexcept {}
        IClaimedCashDrawer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedCashDrawer2(IClaimedCashDrawer2 const&) noexcept = default;
        IClaimedCashDrawer2(IClaimedCashDrawer2&&) noexcept = default;
        IClaimedCashDrawer2& operator=(IClaimedCashDrawer2 const&) & noexcept = default;
        IClaimedCashDrawer2& operator=(IClaimedCashDrawer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedCashDrawerClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedCashDrawerClosedEventArgs>
    {
        IClaimedCashDrawerClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IClaimedCashDrawerClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedCashDrawerClosedEventArgs(IClaimedCashDrawerClosedEventArgs const&) noexcept = default;
        IClaimedCashDrawerClosedEventArgs(IClaimedCashDrawerClosedEventArgs&&) noexcept = default;
        IClaimedCashDrawerClosedEventArgs& operator=(IClaimedCashDrawerClosedEventArgs const&) & noexcept = default;
        IClaimedCashDrawerClosedEventArgs& operator=(IClaimedCashDrawerClosedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedJournalPrinter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedJournalPrinter>
    {
        IClaimedJournalPrinter(std::nullptr_t = nullptr) noexcept {}
        IClaimedJournalPrinter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedJournalPrinter(IClaimedJournalPrinter const&) noexcept = default;
        IClaimedJournalPrinter(IClaimedJournalPrinter&&) noexcept = default;
        IClaimedJournalPrinter& operator=(IClaimedJournalPrinter const&) & noexcept = default;
        IClaimedJournalPrinter& operator=(IClaimedJournalPrinter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedLineDisplay :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedLineDisplay>
    {
        IClaimedLineDisplay(std::nullptr_t = nullptr) noexcept {}
        IClaimedLineDisplay(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedLineDisplay(IClaimedLineDisplay const&) noexcept = default;
        IClaimedLineDisplay(IClaimedLineDisplay&&) noexcept = default;
        IClaimedLineDisplay& operator=(IClaimedLineDisplay const&) & noexcept = default;
        IClaimedLineDisplay& operator=(IClaimedLineDisplay&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedLineDisplay2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedLineDisplay2>
    {
        IClaimedLineDisplay2(std::nullptr_t = nullptr) noexcept {}
        IClaimedLineDisplay2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedLineDisplay2(IClaimedLineDisplay2 const&) noexcept = default;
        IClaimedLineDisplay2(IClaimedLineDisplay2&&) noexcept = default;
        IClaimedLineDisplay2& operator=(IClaimedLineDisplay2 const&) & noexcept = default;
        IClaimedLineDisplay2& operator=(IClaimedLineDisplay2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedLineDisplay3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedLineDisplay3>
    {
        IClaimedLineDisplay3(std::nullptr_t = nullptr) noexcept {}
        IClaimedLineDisplay3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedLineDisplay3(IClaimedLineDisplay3 const&) noexcept = default;
        IClaimedLineDisplay3(IClaimedLineDisplay3&&) noexcept = default;
        IClaimedLineDisplay3& operator=(IClaimedLineDisplay3 const&) & noexcept = default;
        IClaimedLineDisplay3& operator=(IClaimedLineDisplay3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedLineDisplayClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedLineDisplayClosedEventArgs>
    {
        IClaimedLineDisplayClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IClaimedLineDisplayClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedLineDisplayClosedEventArgs(IClaimedLineDisplayClosedEventArgs const&) noexcept = default;
        IClaimedLineDisplayClosedEventArgs(IClaimedLineDisplayClosedEventArgs&&) noexcept = default;
        IClaimedLineDisplayClosedEventArgs& operator=(IClaimedLineDisplayClosedEventArgs const&) & noexcept = default;
        IClaimedLineDisplayClosedEventArgs& operator=(IClaimedLineDisplayClosedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedLineDisplayStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedLineDisplayStatics>
    {
        IClaimedLineDisplayStatics(std::nullptr_t = nullptr) noexcept {}
        IClaimedLineDisplayStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedLineDisplayStatics(IClaimedLineDisplayStatics const&) noexcept = default;
        IClaimedLineDisplayStatics(IClaimedLineDisplayStatics&&) noexcept = default;
        IClaimedLineDisplayStatics& operator=(IClaimedLineDisplayStatics const&) & noexcept = default;
        IClaimedLineDisplayStatics& operator=(IClaimedLineDisplayStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedMagneticStripeReader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedMagneticStripeReader>
    {
        IClaimedMagneticStripeReader(std::nullptr_t = nullptr) noexcept {}
        IClaimedMagneticStripeReader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedMagneticStripeReader(IClaimedMagneticStripeReader const&) noexcept = default;
        IClaimedMagneticStripeReader(IClaimedMagneticStripeReader&&) noexcept = default;
        IClaimedMagneticStripeReader& operator=(IClaimedMagneticStripeReader const&) & noexcept = default;
        IClaimedMagneticStripeReader& operator=(IClaimedMagneticStripeReader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedMagneticStripeReader2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedMagneticStripeReader2>
    {
        IClaimedMagneticStripeReader2(std::nullptr_t = nullptr) noexcept {}
        IClaimedMagneticStripeReader2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedMagneticStripeReader2(IClaimedMagneticStripeReader2 const&) noexcept = default;
        IClaimedMagneticStripeReader2(IClaimedMagneticStripeReader2&&) noexcept = default;
        IClaimedMagneticStripeReader2& operator=(IClaimedMagneticStripeReader2 const&) & noexcept = default;
        IClaimedMagneticStripeReader2& operator=(IClaimedMagneticStripeReader2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedMagneticStripeReaderClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedMagneticStripeReaderClosedEventArgs>
    {
        IClaimedMagneticStripeReaderClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IClaimedMagneticStripeReaderClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedMagneticStripeReaderClosedEventArgs(IClaimedMagneticStripeReaderClosedEventArgs const&) noexcept = default;
        IClaimedMagneticStripeReaderClosedEventArgs(IClaimedMagneticStripeReaderClosedEventArgs&&) noexcept = default;
        IClaimedMagneticStripeReaderClosedEventArgs& operator=(IClaimedMagneticStripeReaderClosedEventArgs const&) & noexcept = default;
        IClaimedMagneticStripeReaderClosedEventArgs& operator=(IClaimedMagneticStripeReaderClosedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedPosPrinter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedPosPrinter>
    {
        IClaimedPosPrinter(std::nullptr_t = nullptr) noexcept {}
        IClaimedPosPrinter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedPosPrinter(IClaimedPosPrinter const&) noexcept = default;
        IClaimedPosPrinter(IClaimedPosPrinter&&) noexcept = default;
        IClaimedPosPrinter& operator=(IClaimedPosPrinter const&) & noexcept = default;
        IClaimedPosPrinter& operator=(IClaimedPosPrinter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedPosPrinter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedPosPrinter2>
    {
        IClaimedPosPrinter2(std::nullptr_t = nullptr) noexcept {}
        IClaimedPosPrinter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedPosPrinter2(IClaimedPosPrinter2 const&) noexcept = default;
        IClaimedPosPrinter2(IClaimedPosPrinter2&&) noexcept = default;
        IClaimedPosPrinter2& operator=(IClaimedPosPrinter2 const&) & noexcept = default;
        IClaimedPosPrinter2& operator=(IClaimedPosPrinter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedPosPrinterClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedPosPrinterClosedEventArgs>
    {
        IClaimedPosPrinterClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IClaimedPosPrinterClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedPosPrinterClosedEventArgs(IClaimedPosPrinterClosedEventArgs const&) noexcept = default;
        IClaimedPosPrinterClosedEventArgs(IClaimedPosPrinterClosedEventArgs&&) noexcept = default;
        IClaimedPosPrinterClosedEventArgs& operator=(IClaimedPosPrinterClosedEventArgs const&) & noexcept = default;
        IClaimedPosPrinterClosedEventArgs& operator=(IClaimedPosPrinterClosedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedReceiptPrinter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedReceiptPrinter>
    {
        IClaimedReceiptPrinter(std::nullptr_t = nullptr) noexcept {}
        IClaimedReceiptPrinter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedReceiptPrinter(IClaimedReceiptPrinter const&) noexcept = default;
        IClaimedReceiptPrinter(IClaimedReceiptPrinter&&) noexcept = default;
        IClaimedReceiptPrinter& operator=(IClaimedReceiptPrinter const&) & noexcept = default;
        IClaimedReceiptPrinter& operator=(IClaimedReceiptPrinter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClaimedSlipPrinter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClaimedSlipPrinter>
    {
        IClaimedSlipPrinter(std::nullptr_t = nullptr) noexcept {}
        IClaimedSlipPrinter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClaimedSlipPrinter(IClaimedSlipPrinter const&) noexcept = default;
        IClaimedSlipPrinter(IClaimedSlipPrinter&&) noexcept = default;
        IClaimedSlipPrinter& operator=(IClaimedSlipPrinter const&) & noexcept = default;
        IClaimedSlipPrinter& operator=(IClaimedSlipPrinter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommonClaimedPosPrinterStation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommonClaimedPosPrinterStation>
    {
        ICommonClaimedPosPrinterStation(std::nullptr_t = nullptr) noexcept {}
        ICommonClaimedPosPrinterStation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommonClaimedPosPrinterStation(ICommonClaimedPosPrinterStation const&) noexcept = default;
        ICommonClaimedPosPrinterStation(ICommonClaimedPosPrinterStation&&) noexcept = default;
        ICommonClaimedPosPrinterStation& operator=(ICommonClaimedPosPrinterStation const&) & noexcept = default;
        ICommonClaimedPosPrinterStation& operator=(ICommonClaimedPosPrinterStation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommonPosPrintStationCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommonPosPrintStationCapabilities>
    {
        ICommonPosPrintStationCapabilities(std::nullptr_t = nullptr) noexcept {}
        ICommonPosPrintStationCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommonPosPrintStationCapabilities(ICommonPosPrintStationCapabilities const&) noexcept = default;
        ICommonPosPrintStationCapabilities(ICommonPosPrintStationCapabilities&&) noexcept = default;
        ICommonPosPrintStationCapabilities& operator=(ICommonPosPrintStationCapabilities const&) & noexcept = default;
        ICommonPosPrintStationCapabilities& operator=(ICommonPosPrintStationCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommonReceiptSlipCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommonReceiptSlipCapabilities>,
        impl::require<winrt::Windows::Devices::PointOfService::ICommonReceiptSlipCapabilities, winrt::Windows::Devices::PointOfService::ICommonPosPrintStationCapabilities>
    {
        ICommonReceiptSlipCapabilities(std::nullptr_t = nullptr) noexcept {}
        ICommonReceiptSlipCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommonReceiptSlipCapabilities(ICommonReceiptSlipCapabilities const&) noexcept = default;
        ICommonReceiptSlipCapabilities(ICommonReceiptSlipCapabilities&&) noexcept = default;
        ICommonReceiptSlipCapabilities& operator=(ICommonReceiptSlipCapabilities const&) & noexcept = default;
        ICommonReceiptSlipCapabilities& operator=(ICommonReceiptSlipCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IJournalPrintJob :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJournalPrintJob>
    {
        IJournalPrintJob(std::nullptr_t = nullptr) noexcept {}
        IJournalPrintJob(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJournalPrintJob(IJournalPrintJob const&) noexcept = default;
        IJournalPrintJob(IJournalPrintJob&&) noexcept = default;
        IJournalPrintJob& operator=(IJournalPrintJob const&) & noexcept = default;
        IJournalPrintJob& operator=(IJournalPrintJob&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IJournalPrinterCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJournalPrinterCapabilities>
    {
        IJournalPrinterCapabilities(std::nullptr_t = nullptr) noexcept {}
        IJournalPrinterCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJournalPrinterCapabilities(IJournalPrinterCapabilities const&) noexcept = default;
        IJournalPrinterCapabilities(IJournalPrinterCapabilities&&) noexcept = default;
        IJournalPrinterCapabilities& operator=(IJournalPrinterCapabilities const&) & noexcept = default;
        IJournalPrinterCapabilities& operator=(IJournalPrinterCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IJournalPrinterCapabilities2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJournalPrinterCapabilities2>
    {
        IJournalPrinterCapabilities2(std::nullptr_t = nullptr) noexcept {}
        IJournalPrinterCapabilities2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJournalPrinterCapabilities2(IJournalPrinterCapabilities2 const&) noexcept = default;
        IJournalPrinterCapabilities2(IJournalPrinterCapabilities2&&) noexcept = default;
        IJournalPrinterCapabilities2& operator=(IJournalPrinterCapabilities2 const&) & noexcept = default;
        IJournalPrinterCapabilities2& operator=(IJournalPrinterCapabilities2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplay :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplay>
    {
        ILineDisplay(std::nullptr_t = nullptr) noexcept {}
        ILineDisplay(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplay(ILineDisplay const&) noexcept = default;
        ILineDisplay(ILineDisplay&&) noexcept = default;
        ILineDisplay& operator=(ILineDisplay const&) & noexcept = default;
        ILineDisplay& operator=(ILineDisplay&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplay2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplay2>
    {
        ILineDisplay2(std::nullptr_t = nullptr) noexcept {}
        ILineDisplay2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplay2(ILineDisplay2 const&) noexcept = default;
        ILineDisplay2(ILineDisplay2&&) noexcept = default;
        ILineDisplay2& operator=(ILineDisplay2 const&) & noexcept = default;
        ILineDisplay2& operator=(ILineDisplay2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayAttributes :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayAttributes>
    {
        ILineDisplayAttributes(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayAttributes(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayAttributes(ILineDisplayAttributes const&) noexcept = default;
        ILineDisplayAttributes(ILineDisplayAttributes&&) noexcept = default;
        ILineDisplayAttributes& operator=(ILineDisplayAttributes const&) & noexcept = default;
        ILineDisplayAttributes& operator=(ILineDisplayAttributes&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayCapabilities>
    {
        ILineDisplayCapabilities(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayCapabilities(ILineDisplayCapabilities const&) noexcept = default;
        ILineDisplayCapabilities(ILineDisplayCapabilities&&) noexcept = default;
        ILineDisplayCapabilities& operator=(ILineDisplayCapabilities const&) & noexcept = default;
        ILineDisplayCapabilities& operator=(ILineDisplayCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayCursor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayCursor>
    {
        ILineDisplayCursor(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayCursor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayCursor(ILineDisplayCursor const&) noexcept = default;
        ILineDisplayCursor(ILineDisplayCursor&&) noexcept = default;
        ILineDisplayCursor& operator=(ILineDisplayCursor const&) & noexcept = default;
        ILineDisplayCursor& operator=(ILineDisplayCursor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayCursorAttributes :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayCursorAttributes>
    {
        ILineDisplayCursorAttributes(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayCursorAttributes(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayCursorAttributes(ILineDisplayCursorAttributes const&) noexcept = default;
        ILineDisplayCursorAttributes(ILineDisplayCursorAttributes&&) noexcept = default;
        ILineDisplayCursorAttributes& operator=(ILineDisplayCursorAttributes const&) & noexcept = default;
        ILineDisplayCursorAttributes& operator=(ILineDisplayCursorAttributes&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayCustomGlyphs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayCustomGlyphs>
    {
        ILineDisplayCustomGlyphs(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayCustomGlyphs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayCustomGlyphs(ILineDisplayCustomGlyphs const&) noexcept = default;
        ILineDisplayCustomGlyphs(ILineDisplayCustomGlyphs&&) noexcept = default;
        ILineDisplayCustomGlyphs& operator=(ILineDisplayCustomGlyphs const&) & noexcept = default;
        ILineDisplayCustomGlyphs& operator=(ILineDisplayCustomGlyphs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayMarquee :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayMarquee>
    {
        ILineDisplayMarquee(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayMarquee(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayMarquee(ILineDisplayMarquee const&) noexcept = default;
        ILineDisplayMarquee(ILineDisplayMarquee&&) noexcept = default;
        ILineDisplayMarquee& operator=(ILineDisplayMarquee const&) & noexcept = default;
        ILineDisplayMarquee& operator=(ILineDisplayMarquee&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayStatics>
    {
        ILineDisplayStatics(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayStatics(ILineDisplayStatics const&) noexcept = default;
        ILineDisplayStatics(ILineDisplayStatics&&) noexcept = default;
        ILineDisplayStatics& operator=(ILineDisplayStatics const&) & noexcept = default;
        ILineDisplayStatics& operator=(ILineDisplayStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayStatics2>
    {
        ILineDisplayStatics2(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayStatics2(ILineDisplayStatics2 const&) noexcept = default;
        ILineDisplayStatics2(ILineDisplayStatics2&&) noexcept = default;
        ILineDisplayStatics2& operator=(ILineDisplayStatics2 const&) & noexcept = default;
        ILineDisplayStatics2& operator=(ILineDisplayStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayStatisticsCategorySelector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayStatisticsCategorySelector>
    {
        ILineDisplayStatisticsCategorySelector(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayStatisticsCategorySelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayStatisticsCategorySelector(ILineDisplayStatisticsCategorySelector const&) noexcept = default;
        ILineDisplayStatisticsCategorySelector(ILineDisplayStatisticsCategorySelector&&) noexcept = default;
        ILineDisplayStatisticsCategorySelector& operator=(ILineDisplayStatisticsCategorySelector const&) & noexcept = default;
        ILineDisplayStatisticsCategorySelector& operator=(ILineDisplayStatisticsCategorySelector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayStatusUpdatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayStatusUpdatedEventArgs>
    {
        ILineDisplayStatusUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayStatusUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayStatusUpdatedEventArgs(ILineDisplayStatusUpdatedEventArgs const&) noexcept = default;
        ILineDisplayStatusUpdatedEventArgs(ILineDisplayStatusUpdatedEventArgs&&) noexcept = default;
        ILineDisplayStatusUpdatedEventArgs& operator=(ILineDisplayStatusUpdatedEventArgs const&) & noexcept = default;
        ILineDisplayStatusUpdatedEventArgs& operator=(ILineDisplayStatusUpdatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayStoredBitmap :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayStoredBitmap>
    {
        ILineDisplayStoredBitmap(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayStoredBitmap(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayStoredBitmap(ILineDisplayStoredBitmap const&) noexcept = default;
        ILineDisplayStoredBitmap(ILineDisplayStoredBitmap&&) noexcept = default;
        ILineDisplayStoredBitmap& operator=(ILineDisplayStoredBitmap const&) & noexcept = default;
        ILineDisplayStoredBitmap& operator=(ILineDisplayStoredBitmap&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayWindow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayWindow>
    {
        ILineDisplayWindow(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayWindow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayWindow(ILineDisplayWindow const&) noexcept = default;
        ILineDisplayWindow(ILineDisplayWindow&&) noexcept = default;
        ILineDisplayWindow& operator=(ILineDisplayWindow const&) & noexcept = default;
        ILineDisplayWindow& operator=(ILineDisplayWindow&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILineDisplayWindow2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILineDisplayWindow2>
    {
        ILineDisplayWindow2(std::nullptr_t = nullptr) noexcept {}
        ILineDisplayWindow2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILineDisplayWindow2(ILineDisplayWindow2 const&) noexcept = default;
        ILineDisplayWindow2(ILineDisplayWindow2&&) noexcept = default;
        ILineDisplayWindow2& operator=(ILineDisplayWindow2 const&) & noexcept = default;
        ILineDisplayWindow2& operator=(ILineDisplayWindow2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReader>
    {
        IMagneticStripeReader(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReader(IMagneticStripeReader const&) noexcept = default;
        IMagneticStripeReader(IMagneticStripeReader&&) noexcept = default;
        IMagneticStripeReader& operator=(IMagneticStripeReader const&) & noexcept = default;
        IMagneticStripeReader& operator=(IMagneticStripeReader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderAamvaCardDataReceivedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderAamvaCardDataReceivedEventArgs>
    {
        IMagneticStripeReaderAamvaCardDataReceivedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderAamvaCardDataReceivedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderAamvaCardDataReceivedEventArgs(IMagneticStripeReaderAamvaCardDataReceivedEventArgs const&) noexcept = default;
        IMagneticStripeReaderAamvaCardDataReceivedEventArgs(IMagneticStripeReaderAamvaCardDataReceivedEventArgs&&) noexcept = default;
        IMagneticStripeReaderAamvaCardDataReceivedEventArgs& operator=(IMagneticStripeReaderAamvaCardDataReceivedEventArgs const&) & noexcept = default;
        IMagneticStripeReaderAamvaCardDataReceivedEventArgs& operator=(IMagneticStripeReaderAamvaCardDataReceivedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderBankCardDataReceivedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderBankCardDataReceivedEventArgs>
    {
        IMagneticStripeReaderBankCardDataReceivedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderBankCardDataReceivedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderBankCardDataReceivedEventArgs(IMagneticStripeReaderBankCardDataReceivedEventArgs const&) noexcept = default;
        IMagneticStripeReaderBankCardDataReceivedEventArgs(IMagneticStripeReaderBankCardDataReceivedEventArgs&&) noexcept = default;
        IMagneticStripeReaderBankCardDataReceivedEventArgs& operator=(IMagneticStripeReaderBankCardDataReceivedEventArgs const&) & noexcept = default;
        IMagneticStripeReaderBankCardDataReceivedEventArgs& operator=(IMagneticStripeReaderBankCardDataReceivedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderCapabilities>
    {
        IMagneticStripeReaderCapabilities(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderCapabilities(IMagneticStripeReaderCapabilities const&) noexcept = default;
        IMagneticStripeReaderCapabilities(IMagneticStripeReaderCapabilities&&) noexcept = default;
        IMagneticStripeReaderCapabilities& operator=(IMagneticStripeReaderCapabilities const&) & noexcept = default;
        IMagneticStripeReaderCapabilities& operator=(IMagneticStripeReaderCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderCardTypesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderCardTypesStatics>
    {
        IMagneticStripeReaderCardTypesStatics(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderCardTypesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderCardTypesStatics(IMagneticStripeReaderCardTypesStatics const&) noexcept = default;
        IMagneticStripeReaderCardTypesStatics(IMagneticStripeReaderCardTypesStatics&&) noexcept = default;
        IMagneticStripeReaderCardTypesStatics& operator=(IMagneticStripeReaderCardTypesStatics const&) & noexcept = default;
        IMagneticStripeReaderCardTypesStatics& operator=(IMagneticStripeReaderCardTypesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderEncryptionAlgorithmsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderEncryptionAlgorithmsStatics>
    {
        IMagneticStripeReaderEncryptionAlgorithmsStatics(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderEncryptionAlgorithmsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderEncryptionAlgorithmsStatics(IMagneticStripeReaderEncryptionAlgorithmsStatics const&) noexcept = default;
        IMagneticStripeReaderEncryptionAlgorithmsStatics(IMagneticStripeReaderEncryptionAlgorithmsStatics&&) noexcept = default;
        IMagneticStripeReaderEncryptionAlgorithmsStatics& operator=(IMagneticStripeReaderEncryptionAlgorithmsStatics const&) & noexcept = default;
        IMagneticStripeReaderEncryptionAlgorithmsStatics& operator=(IMagneticStripeReaderEncryptionAlgorithmsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderErrorOccurredEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderErrorOccurredEventArgs>
    {
        IMagneticStripeReaderErrorOccurredEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderErrorOccurredEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderErrorOccurredEventArgs(IMagneticStripeReaderErrorOccurredEventArgs const&) noexcept = default;
        IMagneticStripeReaderErrorOccurredEventArgs(IMagneticStripeReaderErrorOccurredEventArgs&&) noexcept = default;
        IMagneticStripeReaderErrorOccurredEventArgs& operator=(IMagneticStripeReaderErrorOccurredEventArgs const&) & noexcept = default;
        IMagneticStripeReaderErrorOccurredEventArgs& operator=(IMagneticStripeReaderErrorOccurredEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderReport>
    {
        IMagneticStripeReaderReport(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderReport(IMagneticStripeReaderReport const&) noexcept = default;
        IMagneticStripeReaderReport(IMagneticStripeReaderReport&&) noexcept = default;
        IMagneticStripeReaderReport& operator=(IMagneticStripeReaderReport const&) & noexcept = default;
        IMagneticStripeReaderReport& operator=(IMagneticStripeReaderReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderStatics>
    {
        IMagneticStripeReaderStatics(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderStatics(IMagneticStripeReaderStatics const&) noexcept = default;
        IMagneticStripeReaderStatics(IMagneticStripeReaderStatics&&) noexcept = default;
        IMagneticStripeReaderStatics& operator=(IMagneticStripeReaderStatics const&) & noexcept = default;
        IMagneticStripeReaderStatics& operator=(IMagneticStripeReaderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderStatics2>
    {
        IMagneticStripeReaderStatics2(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderStatics2(IMagneticStripeReaderStatics2 const&) noexcept = default;
        IMagneticStripeReaderStatics2(IMagneticStripeReaderStatics2&&) noexcept = default;
        IMagneticStripeReaderStatics2& operator=(IMagneticStripeReaderStatics2 const&) & noexcept = default;
        IMagneticStripeReaderStatics2& operator=(IMagneticStripeReaderStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderStatusUpdatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderStatusUpdatedEventArgs>
    {
        IMagneticStripeReaderStatusUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderStatusUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderStatusUpdatedEventArgs(IMagneticStripeReaderStatusUpdatedEventArgs const&) noexcept = default;
        IMagneticStripeReaderStatusUpdatedEventArgs(IMagneticStripeReaderStatusUpdatedEventArgs&&) noexcept = default;
        IMagneticStripeReaderStatusUpdatedEventArgs& operator=(IMagneticStripeReaderStatusUpdatedEventArgs const&) & noexcept = default;
        IMagneticStripeReaderStatusUpdatedEventArgs& operator=(IMagneticStripeReaderStatusUpdatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderTrackData :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderTrackData>
    {
        IMagneticStripeReaderTrackData(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderTrackData(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderTrackData(IMagneticStripeReaderTrackData const&) noexcept = default;
        IMagneticStripeReaderTrackData(IMagneticStripeReaderTrackData&&) noexcept = default;
        IMagneticStripeReaderTrackData& operator=(IMagneticStripeReaderTrackData const&) & noexcept = default;
        IMagneticStripeReaderTrackData& operator=(IMagneticStripeReaderTrackData&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs>
    {
        IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs(IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs const&) noexcept = default;
        IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs(IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs&&) noexcept = default;
        IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs& operator=(IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs const&) & noexcept = default;
        IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs& operator=(IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinter>
    {
        IPosPrinter(std::nullptr_t = nullptr) noexcept {}
        IPosPrinter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinter(IPosPrinter const&) noexcept = default;
        IPosPrinter(IPosPrinter&&) noexcept = default;
        IPosPrinter& operator=(IPosPrinter const&) & noexcept = default;
        IPosPrinter& operator=(IPosPrinter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinter2>
    {
        IPosPrinter2(std::nullptr_t = nullptr) noexcept {}
        IPosPrinter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinter2(IPosPrinter2 const&) noexcept = default;
        IPosPrinter2(IPosPrinter2&&) noexcept = default;
        IPosPrinter2& operator=(IPosPrinter2 const&) & noexcept = default;
        IPosPrinter2& operator=(IPosPrinter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinterCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinterCapabilities>
    {
        IPosPrinterCapabilities(std::nullptr_t = nullptr) noexcept {}
        IPosPrinterCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinterCapabilities(IPosPrinterCapabilities const&) noexcept = default;
        IPosPrinterCapabilities(IPosPrinterCapabilities&&) noexcept = default;
        IPosPrinterCapabilities& operator=(IPosPrinterCapabilities const&) & noexcept = default;
        IPosPrinterCapabilities& operator=(IPosPrinterCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinterCharacterSetIdsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinterCharacterSetIdsStatics>
    {
        IPosPrinterCharacterSetIdsStatics(std::nullptr_t = nullptr) noexcept {}
        IPosPrinterCharacterSetIdsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinterCharacterSetIdsStatics(IPosPrinterCharacterSetIdsStatics const&) noexcept = default;
        IPosPrinterCharacterSetIdsStatics(IPosPrinterCharacterSetIdsStatics&&) noexcept = default;
        IPosPrinterCharacterSetIdsStatics& operator=(IPosPrinterCharacterSetIdsStatics const&) & noexcept = default;
        IPosPrinterCharacterSetIdsStatics& operator=(IPosPrinterCharacterSetIdsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinterFontProperty :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinterFontProperty>
    {
        IPosPrinterFontProperty(std::nullptr_t = nullptr) noexcept {}
        IPosPrinterFontProperty(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinterFontProperty(IPosPrinterFontProperty const&) noexcept = default;
        IPosPrinterFontProperty(IPosPrinterFontProperty&&) noexcept = default;
        IPosPrinterFontProperty& operator=(IPosPrinterFontProperty const&) & noexcept = default;
        IPosPrinterFontProperty& operator=(IPosPrinterFontProperty&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinterJob :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinterJob>
    {
        IPosPrinterJob(std::nullptr_t = nullptr) noexcept {}
        IPosPrinterJob(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinterJob(IPosPrinterJob const&) noexcept = default;
        IPosPrinterJob(IPosPrinterJob&&) noexcept = default;
        IPosPrinterJob& operator=(IPosPrinterJob const&) & noexcept = default;
        IPosPrinterJob& operator=(IPosPrinterJob&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinterPrintOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinterPrintOptions>
    {
        IPosPrinterPrintOptions(std::nullptr_t = nullptr) noexcept {}
        IPosPrinterPrintOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinterPrintOptions(IPosPrinterPrintOptions const&) noexcept = default;
        IPosPrinterPrintOptions(IPosPrinterPrintOptions&&) noexcept = default;
        IPosPrinterPrintOptions& operator=(IPosPrinterPrintOptions const&) & noexcept = default;
        IPosPrinterPrintOptions& operator=(IPosPrinterPrintOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinterReleaseDeviceRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinterReleaseDeviceRequestedEventArgs>
    {
        IPosPrinterReleaseDeviceRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPosPrinterReleaseDeviceRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinterReleaseDeviceRequestedEventArgs(IPosPrinterReleaseDeviceRequestedEventArgs const&) noexcept = default;
        IPosPrinterReleaseDeviceRequestedEventArgs(IPosPrinterReleaseDeviceRequestedEventArgs&&) noexcept = default;
        IPosPrinterReleaseDeviceRequestedEventArgs& operator=(IPosPrinterReleaseDeviceRequestedEventArgs const&) & noexcept = default;
        IPosPrinterReleaseDeviceRequestedEventArgs& operator=(IPosPrinterReleaseDeviceRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinterStatics>
    {
        IPosPrinterStatics(std::nullptr_t = nullptr) noexcept {}
        IPosPrinterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinterStatics(IPosPrinterStatics const&) noexcept = default;
        IPosPrinterStatics(IPosPrinterStatics&&) noexcept = default;
        IPosPrinterStatics& operator=(IPosPrinterStatics const&) & noexcept = default;
        IPosPrinterStatics& operator=(IPosPrinterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinterStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinterStatics2>
    {
        IPosPrinterStatics2(std::nullptr_t = nullptr) noexcept {}
        IPosPrinterStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinterStatics2(IPosPrinterStatics2 const&) noexcept = default;
        IPosPrinterStatics2(IPosPrinterStatics2&&) noexcept = default;
        IPosPrinterStatics2& operator=(IPosPrinterStatics2 const&) & noexcept = default;
        IPosPrinterStatics2& operator=(IPosPrinterStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinterStatus :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinterStatus>
    {
        IPosPrinterStatus(std::nullptr_t = nullptr) noexcept {}
        IPosPrinterStatus(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinterStatus(IPosPrinterStatus const&) noexcept = default;
        IPosPrinterStatus(IPosPrinterStatus&&) noexcept = default;
        IPosPrinterStatus& operator=(IPosPrinterStatus const&) & noexcept = default;
        IPosPrinterStatus& operator=(IPosPrinterStatus&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPosPrinterStatusUpdatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPosPrinterStatusUpdatedEventArgs>
    {
        IPosPrinterStatusUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPosPrinterStatusUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPosPrinterStatusUpdatedEventArgs(IPosPrinterStatusUpdatedEventArgs const&) noexcept = default;
        IPosPrinterStatusUpdatedEventArgs(IPosPrinterStatusUpdatedEventArgs&&) noexcept = default;
        IPosPrinterStatusUpdatedEventArgs& operator=(IPosPrinterStatusUpdatedEventArgs const&) & noexcept = default;
        IPosPrinterStatusUpdatedEventArgs& operator=(IPosPrinterStatusUpdatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IReceiptOrSlipJob :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IReceiptOrSlipJob>,
        impl::require<winrt::Windows::Devices::PointOfService::IReceiptOrSlipJob, winrt::Windows::Devices::PointOfService::IPosPrinterJob>
    {
        IReceiptOrSlipJob(std::nullptr_t = nullptr) noexcept {}
        IReceiptOrSlipJob(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IReceiptOrSlipJob(IReceiptOrSlipJob const&) noexcept = default;
        IReceiptOrSlipJob(IReceiptOrSlipJob&&) noexcept = default;
        IReceiptOrSlipJob& operator=(IReceiptOrSlipJob const&) & noexcept = default;
        IReceiptOrSlipJob& operator=(IReceiptOrSlipJob&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IReceiptPrintJob :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IReceiptPrintJob>
    {
        IReceiptPrintJob(std::nullptr_t = nullptr) noexcept {}
        IReceiptPrintJob(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IReceiptPrintJob(IReceiptPrintJob const&) noexcept = default;
        IReceiptPrintJob(IReceiptPrintJob&&) noexcept = default;
        IReceiptPrintJob& operator=(IReceiptPrintJob const&) & noexcept = default;
        IReceiptPrintJob& operator=(IReceiptPrintJob&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IReceiptPrintJob2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IReceiptPrintJob2>
    {
        IReceiptPrintJob2(std::nullptr_t = nullptr) noexcept {}
        IReceiptPrintJob2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IReceiptPrintJob2(IReceiptPrintJob2 const&) noexcept = default;
        IReceiptPrintJob2(IReceiptPrintJob2&&) noexcept = default;
        IReceiptPrintJob2& operator=(IReceiptPrintJob2 const&) & noexcept = default;
        IReceiptPrintJob2& operator=(IReceiptPrintJob2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IReceiptPrinterCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IReceiptPrinterCapabilities>
    {
        IReceiptPrinterCapabilities(std::nullptr_t = nullptr) noexcept {}
        IReceiptPrinterCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IReceiptPrinterCapabilities(IReceiptPrinterCapabilities const&) noexcept = default;
        IReceiptPrinterCapabilities(IReceiptPrinterCapabilities&&) noexcept = default;
        IReceiptPrinterCapabilities& operator=(IReceiptPrinterCapabilities const&) & noexcept = default;
        IReceiptPrinterCapabilities& operator=(IReceiptPrinterCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IReceiptPrinterCapabilities2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IReceiptPrinterCapabilities2>
    {
        IReceiptPrinterCapabilities2(std::nullptr_t = nullptr) noexcept {}
        IReceiptPrinterCapabilities2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IReceiptPrinterCapabilities2(IReceiptPrinterCapabilities2 const&) noexcept = default;
        IReceiptPrinterCapabilities2(IReceiptPrinterCapabilities2&&) noexcept = default;
        IReceiptPrinterCapabilities2& operator=(IReceiptPrinterCapabilities2 const&) & noexcept = default;
        IReceiptPrinterCapabilities2& operator=(IReceiptPrinterCapabilities2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISlipPrintJob :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISlipPrintJob>
    {
        ISlipPrintJob(std::nullptr_t = nullptr) noexcept {}
        ISlipPrintJob(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISlipPrintJob(ISlipPrintJob const&) noexcept = default;
        ISlipPrintJob(ISlipPrintJob&&) noexcept = default;
        ISlipPrintJob& operator=(ISlipPrintJob const&) & noexcept = default;
        ISlipPrintJob& operator=(ISlipPrintJob&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISlipPrinterCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISlipPrinterCapabilities>
    {
        ISlipPrinterCapabilities(std::nullptr_t = nullptr) noexcept {}
        ISlipPrinterCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISlipPrinterCapabilities(ISlipPrinterCapabilities const&) noexcept = default;
        ISlipPrinterCapabilities(ISlipPrinterCapabilities&&) noexcept = default;
        ISlipPrinterCapabilities& operator=(ISlipPrinterCapabilities const&) & noexcept = default;
        ISlipPrinterCapabilities& operator=(ISlipPrinterCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISlipPrinterCapabilities2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISlipPrinterCapabilities2>
    {
        ISlipPrinterCapabilities2(std::nullptr_t = nullptr) noexcept {}
        ISlipPrinterCapabilities2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISlipPrinterCapabilities2(ISlipPrinterCapabilities2 const&) noexcept = default;
        ISlipPrinterCapabilities2(ISlipPrinterCapabilities2&&) noexcept = default;
        ISlipPrinterCapabilities2& operator=(ISlipPrinterCapabilities2 const&) & noexcept = default;
        ISlipPrinterCapabilities2& operator=(ISlipPrinterCapabilities2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUnifiedPosErrorData :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUnifiedPosErrorData>
    {
        IUnifiedPosErrorData(std::nullptr_t = nullptr) noexcept {}
        IUnifiedPosErrorData(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUnifiedPosErrorData(IUnifiedPosErrorData const&) noexcept = default;
        IUnifiedPosErrorData(IUnifiedPosErrorData&&) noexcept = default;
        IUnifiedPosErrorData& operator=(IUnifiedPosErrorData const&) & noexcept = default;
        IUnifiedPosErrorData& operator=(IUnifiedPosErrorData&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUnifiedPosErrorDataFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUnifiedPosErrorDataFactory>
    {
        IUnifiedPosErrorDataFactory(std::nullptr_t = nullptr) noexcept {}
        IUnifiedPosErrorDataFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUnifiedPosErrorDataFactory(IUnifiedPosErrorDataFactory const&) noexcept = default;
        IUnifiedPosErrorDataFactory(IUnifiedPosErrorDataFactory&&) noexcept = default;
        IUnifiedPosErrorDataFactory& operator=(IUnifiedPosErrorDataFactory const&) & noexcept = default;
        IUnifiedPosErrorDataFactory& operator=(IUnifiedPosErrorDataFactory&&) & noexcept = default;
    };
}
#endif
