// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Xaml_Controls_Primitives_1_H
#define WINRT_Windows_UI_Xaml_Controls_Primitives_1_H
#include "winrt/impl/Windows.UI.Xaml.Controls.Primitives.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Controls::Primitives
{
    struct __declspec(empty_bases) IAppBarButtonTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonTemplateSettings>
    {
        IAppBarButtonTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButtonTemplateSettings(IAppBarButtonTemplateSettings const&) noexcept = default;
        IAppBarButtonTemplateSettings(IAppBarButtonTemplateSettings&&) noexcept = default;
        IAppBarButtonTemplateSettings& operator=(IAppBarButtonTemplateSettings const&) & noexcept = default;
        IAppBarButtonTemplateSettings& operator=(IAppBarButtonTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarTemplateSettings>
    {
        IAppBarTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IAppBarTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarTemplateSettings(IAppBarTemplateSettings const&) noexcept = default;
        IAppBarTemplateSettings(IAppBarTemplateSettings&&) noexcept = default;
        IAppBarTemplateSettings& operator=(IAppBarTemplateSettings const&) & noexcept = default;
        IAppBarTemplateSettings& operator=(IAppBarTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarTemplateSettings2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarTemplateSettings2>
    {
        IAppBarTemplateSettings2(std::nullptr_t = nullptr) noexcept {}
        IAppBarTemplateSettings2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarTemplateSettings2(IAppBarTemplateSettings2 const&) noexcept = default;
        IAppBarTemplateSettings2(IAppBarTemplateSettings2&&) noexcept = default;
        IAppBarTemplateSettings2& operator=(IAppBarTemplateSettings2 const&) & noexcept = default;
        IAppBarTemplateSettings2& operator=(IAppBarTemplateSettings2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButtonTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonTemplateSettings>
    {
        IAppBarToggleButtonTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButtonTemplateSettings(IAppBarToggleButtonTemplateSettings const&) noexcept = default;
        IAppBarToggleButtonTemplateSettings(IAppBarToggleButtonTemplateSettings&&) noexcept = default;
        IAppBarToggleButtonTemplateSettings& operator=(IAppBarToggleButtonTemplateSettings const&) & noexcept = default;
        IAppBarToggleButtonTemplateSettings& operator=(IAppBarToggleButtonTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButtonBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonBase>
    {
        IButtonBase(std::nullptr_t = nullptr) noexcept {}
        IButtonBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButtonBase(IButtonBase const&) noexcept = default;
        IButtonBase(IButtonBase&&) noexcept = default;
        IButtonBase& operator=(IButtonBase const&) & noexcept = default;
        IButtonBase& operator=(IButtonBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButtonBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonBaseFactory>
    {
        IButtonBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IButtonBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButtonBaseFactory(IButtonBaseFactory const&) noexcept = default;
        IButtonBaseFactory(IButtonBaseFactory&&) noexcept = default;
        IButtonBaseFactory& operator=(IButtonBaseFactory const&) & noexcept = default;
        IButtonBaseFactory& operator=(IButtonBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButtonBaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonBaseStatics>
    {
        IButtonBaseStatics(std::nullptr_t = nullptr) noexcept {}
        IButtonBaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButtonBaseStatics(IButtonBaseStatics const&) noexcept = default;
        IButtonBaseStatics(IButtonBaseStatics&&) noexcept = default;
        IButtonBaseStatics& operator=(IButtonBaseStatics const&) & noexcept = default;
        IButtonBaseStatics& operator=(IButtonBaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarPanel>
    {
        ICalendarPanel(std::nullptr_t = nullptr) noexcept {}
        ICalendarPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarPanel(ICalendarPanel const&) noexcept = default;
        ICalendarPanel(ICalendarPanel&&) noexcept = default;
        ICalendarPanel& operator=(ICalendarPanel const&) & noexcept = default;
        ICalendarPanel& operator=(ICalendarPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarViewTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewTemplateSettings>
    {
        ICalendarViewTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarViewTemplateSettings(ICalendarViewTemplateSettings const&) noexcept = default;
        ICalendarViewTemplateSettings(ICalendarViewTemplateSettings&&) noexcept = default;
        ICalendarViewTemplateSettings& operator=(ICalendarViewTemplateSettings const&) & noexcept = default;
        ICalendarViewTemplateSettings& operator=(ICalendarViewTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICarouselPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICarouselPanel>
    {
        ICarouselPanel(std::nullptr_t = nullptr) noexcept {}
        ICarouselPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICarouselPanel(ICarouselPanel const&) noexcept = default;
        ICarouselPanel(ICarouselPanel&&) noexcept = default;
        ICarouselPanel& operator=(ICarouselPanel const&) & noexcept = default;
        ICarouselPanel& operator=(ICarouselPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICarouselPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICarouselPanelFactory>
    {
        ICarouselPanelFactory(std::nullptr_t = nullptr) noexcept {}
        ICarouselPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICarouselPanelFactory(ICarouselPanelFactory const&) noexcept = default;
        ICarouselPanelFactory(ICarouselPanelFactory&&) noexcept = default;
        ICarouselPanelFactory& operator=(ICarouselPanelFactory const&) & noexcept = default;
        ICarouselPanelFactory& operator=(ICarouselPanelFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorPickerSlider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerSlider>
    {
        IColorPickerSlider(std::nullptr_t = nullptr) noexcept {}
        IColorPickerSlider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorPickerSlider(IColorPickerSlider const&) noexcept = default;
        IColorPickerSlider(IColorPickerSlider&&) noexcept = default;
        IColorPickerSlider& operator=(IColorPickerSlider const&) & noexcept = default;
        IColorPickerSlider& operator=(IColorPickerSlider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorPickerSliderFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerSliderFactory>
    {
        IColorPickerSliderFactory(std::nullptr_t = nullptr) noexcept {}
        IColorPickerSliderFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorPickerSliderFactory(IColorPickerSliderFactory const&) noexcept = default;
        IColorPickerSliderFactory(IColorPickerSliderFactory&&) noexcept = default;
        IColorPickerSliderFactory& operator=(IColorPickerSliderFactory const&) & noexcept = default;
        IColorPickerSliderFactory& operator=(IColorPickerSliderFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorPickerSliderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerSliderStatics>
    {
        IColorPickerSliderStatics(std::nullptr_t = nullptr) noexcept {}
        IColorPickerSliderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorPickerSliderStatics(IColorPickerSliderStatics const&) noexcept = default;
        IColorPickerSliderStatics(IColorPickerSliderStatics&&) noexcept = default;
        IColorPickerSliderStatics& operator=(IColorPickerSliderStatics const&) & noexcept = default;
        IColorPickerSliderStatics& operator=(IColorPickerSliderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorSpectrum :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorSpectrum>
    {
        IColorSpectrum(std::nullptr_t = nullptr) noexcept {}
        IColorSpectrum(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorSpectrum(IColorSpectrum const&) noexcept = default;
        IColorSpectrum(IColorSpectrum&&) noexcept = default;
        IColorSpectrum& operator=(IColorSpectrum const&) & noexcept = default;
        IColorSpectrum& operator=(IColorSpectrum&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorSpectrumFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorSpectrumFactory>
    {
        IColorSpectrumFactory(std::nullptr_t = nullptr) noexcept {}
        IColorSpectrumFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorSpectrumFactory(IColorSpectrumFactory const&) noexcept = default;
        IColorSpectrumFactory(IColorSpectrumFactory&&) noexcept = default;
        IColorSpectrumFactory& operator=(IColorSpectrumFactory const&) & noexcept = default;
        IColorSpectrumFactory& operator=(IColorSpectrumFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorSpectrumStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorSpectrumStatics>
    {
        IColorSpectrumStatics(std::nullptr_t = nullptr) noexcept {}
        IColorSpectrumStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorSpectrumStatics(IColorSpectrumStatics const&) noexcept = default;
        IColorSpectrumStatics(IColorSpectrumStatics&&) noexcept = default;
        IColorSpectrumStatics& operator=(IColorSpectrumStatics const&) & noexcept = default;
        IColorSpectrumStatics& operator=(IColorSpectrumStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxTemplateSettings>
    {
        IComboBoxTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IComboBoxTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxTemplateSettings(IComboBoxTemplateSettings const&) noexcept = default;
        IComboBoxTemplateSettings(IComboBoxTemplateSettings&&) noexcept = default;
        IComboBoxTemplateSettings& operator=(IComboBoxTemplateSettings const&) & noexcept = default;
        IComboBoxTemplateSettings& operator=(IComboBoxTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxTemplateSettings2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxTemplateSettings2>
    {
        IComboBoxTemplateSettings2(std::nullptr_t = nullptr) noexcept {}
        IComboBoxTemplateSettings2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxTemplateSettings2(IComboBoxTemplateSettings2 const&) noexcept = default;
        IComboBoxTemplateSettings2(IComboBoxTemplateSettings2&&) noexcept = default;
        IComboBoxTemplateSettings2& operator=(IComboBoxTemplateSettings2 const&) & noexcept = default;
        IComboBoxTemplateSettings2& operator=(IComboBoxTemplateSettings2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarFlyoutCommandBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarFlyoutCommandBar>
    {
        ICommandBarFlyoutCommandBar(std::nullptr_t = nullptr) noexcept {}
        ICommandBarFlyoutCommandBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarFlyoutCommandBar(ICommandBarFlyoutCommandBar const&) noexcept = default;
        ICommandBarFlyoutCommandBar(ICommandBarFlyoutCommandBar&&) noexcept = default;
        ICommandBarFlyoutCommandBar& operator=(ICommandBarFlyoutCommandBar const&) & noexcept = default;
        ICommandBarFlyoutCommandBar& operator=(ICommandBarFlyoutCommandBar&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarFlyoutCommandBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarFlyoutCommandBarFactory>
    {
        ICommandBarFlyoutCommandBarFactory(std::nullptr_t = nullptr) noexcept {}
        ICommandBarFlyoutCommandBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarFlyoutCommandBarFactory(ICommandBarFlyoutCommandBarFactory const&) noexcept = default;
        ICommandBarFlyoutCommandBarFactory(ICommandBarFlyoutCommandBarFactory&&) noexcept = default;
        ICommandBarFlyoutCommandBarFactory& operator=(ICommandBarFlyoutCommandBarFactory const&) & noexcept = default;
        ICommandBarFlyoutCommandBarFactory& operator=(ICommandBarFlyoutCommandBarFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarFlyoutCommandBarTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarFlyoutCommandBarTemplateSettings>
    {
        ICommandBarFlyoutCommandBarTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        ICommandBarFlyoutCommandBarTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarFlyoutCommandBarTemplateSettings(ICommandBarFlyoutCommandBarTemplateSettings const&) noexcept = default;
        ICommandBarFlyoutCommandBarTemplateSettings(ICommandBarFlyoutCommandBarTemplateSettings&&) noexcept = default;
        ICommandBarFlyoutCommandBarTemplateSettings& operator=(ICommandBarFlyoutCommandBarTemplateSettings const&) & noexcept = default;
        ICommandBarFlyoutCommandBarTemplateSettings& operator=(ICommandBarFlyoutCommandBarTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarTemplateSettings>
    {
        ICommandBarTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        ICommandBarTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarTemplateSettings(ICommandBarTemplateSettings const&) noexcept = default;
        ICommandBarTemplateSettings(ICommandBarTemplateSettings&&) noexcept = default;
        ICommandBarTemplateSettings& operator=(ICommandBarTemplateSettings const&) & noexcept = default;
        ICommandBarTemplateSettings& operator=(ICommandBarTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarTemplateSettings2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarTemplateSettings2>
    {
        ICommandBarTemplateSettings2(std::nullptr_t = nullptr) noexcept {}
        ICommandBarTemplateSettings2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarTemplateSettings2(ICommandBarTemplateSettings2 const&) noexcept = default;
        ICommandBarTemplateSettings2(ICommandBarTemplateSettings2&&) noexcept = default;
        ICommandBarTemplateSettings2& operator=(ICommandBarTemplateSettings2 const&) & noexcept = default;
        ICommandBarTemplateSettings2& operator=(ICommandBarTemplateSettings2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarTemplateSettings3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarTemplateSettings3>
    {
        ICommandBarTemplateSettings3(std::nullptr_t = nullptr) noexcept {}
        ICommandBarTemplateSettings3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarTemplateSettings3(ICommandBarTemplateSettings3 const&) noexcept = default;
        ICommandBarTemplateSettings3(ICommandBarTemplateSettings3&&) noexcept = default;
        ICommandBarTemplateSettings3& operator=(ICommandBarTemplateSettings3 const&) & noexcept = default;
        ICommandBarTemplateSettings3& operator=(ICommandBarTemplateSettings3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarTemplateSettings4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarTemplateSettings4>
    {
        ICommandBarTemplateSettings4(std::nullptr_t = nullptr) noexcept {}
        ICommandBarTemplateSettings4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarTemplateSettings4(ICommandBarTemplateSettings4 const&) noexcept = default;
        ICommandBarTemplateSettings4(ICommandBarTemplateSettings4&&) noexcept = default;
        ICommandBarTemplateSettings4& operator=(ICommandBarTemplateSettings4 const&) & noexcept = default;
        ICommandBarTemplateSettings4& operator=(ICommandBarTemplateSettings4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragCompletedEventArgs>
    {
        IDragCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDragCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragCompletedEventArgs(IDragCompletedEventArgs const&) noexcept = default;
        IDragCompletedEventArgs(IDragCompletedEventArgs&&) noexcept = default;
        IDragCompletedEventArgs& operator=(IDragCompletedEventArgs const&) & noexcept = default;
        IDragCompletedEventArgs& operator=(IDragCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragCompletedEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragCompletedEventArgsFactory>
    {
        IDragCompletedEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        IDragCompletedEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragCompletedEventArgsFactory(IDragCompletedEventArgsFactory const&) noexcept = default;
        IDragCompletedEventArgsFactory(IDragCompletedEventArgsFactory&&) noexcept = default;
        IDragCompletedEventArgsFactory& operator=(IDragCompletedEventArgsFactory const&) & noexcept = default;
        IDragCompletedEventArgsFactory& operator=(IDragCompletedEventArgsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragDeltaEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragDeltaEventArgs>
    {
        IDragDeltaEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDragDeltaEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragDeltaEventArgs(IDragDeltaEventArgs const&) noexcept = default;
        IDragDeltaEventArgs(IDragDeltaEventArgs&&) noexcept = default;
        IDragDeltaEventArgs& operator=(IDragDeltaEventArgs const&) & noexcept = default;
        IDragDeltaEventArgs& operator=(IDragDeltaEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragDeltaEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragDeltaEventArgsFactory>
    {
        IDragDeltaEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        IDragDeltaEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragDeltaEventArgsFactory(IDragDeltaEventArgsFactory const&) noexcept = default;
        IDragDeltaEventArgsFactory(IDragDeltaEventArgsFactory&&) noexcept = default;
        IDragDeltaEventArgsFactory& operator=(IDragDeltaEventArgsFactory const&) & noexcept = default;
        IDragDeltaEventArgsFactory& operator=(IDragDeltaEventArgsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragStartedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragStartedEventArgs>
    {
        IDragStartedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDragStartedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragStartedEventArgs(IDragStartedEventArgs const&) noexcept = default;
        IDragStartedEventArgs(IDragStartedEventArgs&&) noexcept = default;
        IDragStartedEventArgs& operator=(IDragStartedEventArgs const&) & noexcept = default;
        IDragStartedEventArgs& operator=(IDragStartedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragStartedEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragStartedEventArgsFactory>
    {
        IDragStartedEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        IDragStartedEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragStartedEventArgsFactory(IDragStartedEventArgsFactory const&) noexcept = default;
        IDragStartedEventArgsFactory(IDragStartedEventArgsFactory&&) noexcept = default;
        IDragStartedEventArgsFactory& operator=(IDragStartedEventArgsFactory const&) & noexcept = default;
        IDragStartedEventArgsFactory& operator=(IDragStartedEventArgsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBase>
    {
        IFlyoutBase(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBase(IFlyoutBase const&) noexcept = default;
        IFlyoutBase(IFlyoutBase&&) noexcept = default;
        IFlyoutBase& operator=(IFlyoutBase const&) & noexcept = default;
        IFlyoutBase& operator=(IFlyoutBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBase2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBase2>
    {
        IFlyoutBase2(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBase2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBase2(IFlyoutBase2 const&) noexcept = default;
        IFlyoutBase2(IFlyoutBase2&&) noexcept = default;
        IFlyoutBase2& operator=(IFlyoutBase2 const&) & noexcept = default;
        IFlyoutBase2& operator=(IFlyoutBase2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBase3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBase3>
    {
        IFlyoutBase3(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBase3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBase3(IFlyoutBase3 const&) noexcept = default;
        IFlyoutBase3(IFlyoutBase3&&) noexcept = default;
        IFlyoutBase3& operator=(IFlyoutBase3 const&) & noexcept = default;
        IFlyoutBase3& operator=(IFlyoutBase3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBase4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBase4>
    {
        IFlyoutBase4(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBase4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBase4(IFlyoutBase4 const&) noexcept = default;
        IFlyoutBase4(IFlyoutBase4&&) noexcept = default;
        IFlyoutBase4& operator=(IFlyoutBase4 const&) & noexcept = default;
        IFlyoutBase4& operator=(IFlyoutBase4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBase5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBase5>
    {
        IFlyoutBase5(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBase5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBase5(IFlyoutBase5 const&) noexcept = default;
        IFlyoutBase5(IFlyoutBase5&&) noexcept = default;
        IFlyoutBase5& operator=(IFlyoutBase5 const&) & noexcept = default;
        IFlyoutBase5& operator=(IFlyoutBase5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBase6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBase6>
    {
        IFlyoutBase6(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBase6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBase6(IFlyoutBase6 const&) noexcept = default;
        IFlyoutBase6(IFlyoutBase6&&) noexcept = default;
        IFlyoutBase6& operator=(IFlyoutBase6 const&) & noexcept = default;
        IFlyoutBase6& operator=(IFlyoutBase6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBaseClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBaseClosingEventArgs>
    {
        IFlyoutBaseClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBaseClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBaseClosingEventArgs(IFlyoutBaseClosingEventArgs const&) noexcept = default;
        IFlyoutBaseClosingEventArgs(IFlyoutBaseClosingEventArgs&&) noexcept = default;
        IFlyoutBaseClosingEventArgs& operator=(IFlyoutBaseClosingEventArgs const&) & noexcept = default;
        IFlyoutBaseClosingEventArgs& operator=(IFlyoutBaseClosingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBaseFactory>
    {
        IFlyoutBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBaseFactory(IFlyoutBaseFactory const&) noexcept = default;
        IFlyoutBaseFactory(IFlyoutBaseFactory&&) noexcept = default;
        IFlyoutBaseFactory& operator=(IFlyoutBaseFactory const&) & noexcept = default;
        IFlyoutBaseFactory& operator=(IFlyoutBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBaseOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBaseOverrides>
    {
        IFlyoutBaseOverrides(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBaseOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBaseOverrides(IFlyoutBaseOverrides const&) noexcept = default;
        IFlyoutBaseOverrides(IFlyoutBaseOverrides&&) noexcept = default;
        IFlyoutBaseOverrides& operator=(IFlyoutBaseOverrides const&) & noexcept = default;
        IFlyoutBaseOverrides& operator=(IFlyoutBaseOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBaseOverrides4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBaseOverrides4>
    {
        IFlyoutBaseOverrides4(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBaseOverrides4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBaseOverrides4(IFlyoutBaseOverrides4 const&) noexcept = default;
        IFlyoutBaseOverrides4(IFlyoutBaseOverrides4&&) noexcept = default;
        IFlyoutBaseOverrides4& operator=(IFlyoutBaseOverrides4 const&) & noexcept = default;
        IFlyoutBaseOverrides4& operator=(IFlyoutBaseOverrides4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBaseStatics>
    {
        IFlyoutBaseStatics(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBaseStatics(IFlyoutBaseStatics const&) noexcept = default;
        IFlyoutBaseStatics(IFlyoutBaseStatics&&) noexcept = default;
        IFlyoutBaseStatics& operator=(IFlyoutBaseStatics const&) & noexcept = default;
        IFlyoutBaseStatics& operator=(IFlyoutBaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBaseStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBaseStatics2>
    {
        IFlyoutBaseStatics2(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBaseStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBaseStatics2(IFlyoutBaseStatics2 const&) noexcept = default;
        IFlyoutBaseStatics2(IFlyoutBaseStatics2&&) noexcept = default;
        IFlyoutBaseStatics2& operator=(IFlyoutBaseStatics2 const&) & noexcept = default;
        IFlyoutBaseStatics2& operator=(IFlyoutBaseStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBaseStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBaseStatics3>
    {
        IFlyoutBaseStatics3(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBaseStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBaseStatics3(IFlyoutBaseStatics3 const&) noexcept = default;
        IFlyoutBaseStatics3(IFlyoutBaseStatics3&&) noexcept = default;
        IFlyoutBaseStatics3& operator=(IFlyoutBaseStatics3 const&) & noexcept = default;
        IFlyoutBaseStatics3& operator=(IFlyoutBaseStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBaseStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBaseStatics5>
    {
        IFlyoutBaseStatics5(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBaseStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBaseStatics5(IFlyoutBaseStatics5 const&) noexcept = default;
        IFlyoutBaseStatics5(IFlyoutBaseStatics5&&) noexcept = default;
        IFlyoutBaseStatics5& operator=(IFlyoutBaseStatics5 const&) & noexcept = default;
        IFlyoutBaseStatics5& operator=(IFlyoutBaseStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutBaseStatics6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutBaseStatics6>
    {
        IFlyoutBaseStatics6(std::nullptr_t = nullptr) noexcept {}
        IFlyoutBaseStatics6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutBaseStatics6(IFlyoutBaseStatics6 const&) noexcept = default;
        IFlyoutBaseStatics6(IFlyoutBaseStatics6&&) noexcept = default;
        IFlyoutBaseStatics6& operator=(IFlyoutBaseStatics6 const&) & noexcept = default;
        IFlyoutBaseStatics6& operator=(IFlyoutBaseStatics6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutShowOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutShowOptions>
    {
        IFlyoutShowOptions(std::nullptr_t = nullptr) noexcept {}
        IFlyoutShowOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutShowOptions(IFlyoutShowOptions const&) noexcept = default;
        IFlyoutShowOptions(IFlyoutShowOptions&&) noexcept = default;
        IFlyoutShowOptions& operator=(IFlyoutShowOptions const&) & noexcept = default;
        IFlyoutShowOptions& operator=(IFlyoutShowOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutShowOptionsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutShowOptionsFactory>
    {
        IFlyoutShowOptionsFactory(std::nullptr_t = nullptr) noexcept {}
        IFlyoutShowOptionsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutShowOptionsFactory(IFlyoutShowOptionsFactory const&) noexcept = default;
        IFlyoutShowOptionsFactory(IFlyoutShowOptionsFactory&&) noexcept = default;
        IFlyoutShowOptionsFactory& operator=(IFlyoutShowOptionsFactory const&) & noexcept = default;
        IFlyoutShowOptionsFactory& operator=(IFlyoutShowOptionsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGeneratorPositionHelper :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGeneratorPositionHelper>
    {
        IGeneratorPositionHelper(std::nullptr_t = nullptr) noexcept {}
        IGeneratorPositionHelper(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGeneratorPositionHelper(IGeneratorPositionHelper const&) noexcept = default;
        IGeneratorPositionHelper(IGeneratorPositionHelper&&) noexcept = default;
        IGeneratorPositionHelper& operator=(IGeneratorPositionHelper const&) & noexcept = default;
        IGeneratorPositionHelper& operator=(IGeneratorPositionHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGeneratorPositionHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGeneratorPositionHelperStatics>
    {
        IGeneratorPositionHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IGeneratorPositionHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGeneratorPositionHelperStatics(IGeneratorPositionHelperStatics const&) noexcept = default;
        IGeneratorPositionHelperStatics(IGeneratorPositionHelperStatics&&) noexcept = default;
        IGeneratorPositionHelperStatics& operator=(IGeneratorPositionHelperStatics const&) & noexcept = default;
        IGeneratorPositionHelperStatics& operator=(IGeneratorPositionHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewItemPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemPresenter>
    {
        IGridViewItemPresenter(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewItemPresenter(IGridViewItemPresenter const&) noexcept = default;
        IGridViewItemPresenter(IGridViewItemPresenter&&) noexcept = default;
        IGridViewItemPresenter& operator=(IGridViewItemPresenter const&) & noexcept = default;
        IGridViewItemPresenter& operator=(IGridViewItemPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewItemPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemPresenterFactory>
    {
        IGridViewItemPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewItemPresenterFactory(IGridViewItemPresenterFactory const&) noexcept = default;
        IGridViewItemPresenterFactory(IGridViewItemPresenterFactory&&) noexcept = default;
        IGridViewItemPresenterFactory& operator=(IGridViewItemPresenterFactory const&) & noexcept = default;
        IGridViewItemPresenterFactory& operator=(IGridViewItemPresenterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewItemPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemPresenterStatics>
    {
        IGridViewItemPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewItemPresenterStatics(IGridViewItemPresenterStatics const&) noexcept = default;
        IGridViewItemPresenterStatics(IGridViewItemPresenterStatics&&) noexcept = default;
        IGridViewItemPresenterStatics& operator=(IGridViewItemPresenterStatics const&) & noexcept = default;
        IGridViewItemPresenterStatics& operator=(IGridViewItemPresenterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewItemTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemTemplateSettings>
    {
        IGridViewItemTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewItemTemplateSettings(IGridViewItemTemplateSettings const&) noexcept = default;
        IGridViewItemTemplateSettings(IGridViewItemTemplateSettings&&) noexcept = default;
        IGridViewItemTemplateSettings& operator=(IGridViewItemTemplateSettings const&) & noexcept = default;
        IGridViewItemTemplateSettings& operator=(IGridViewItemTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsChangedEventArgs>
    {
        IItemsChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemsChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsChangedEventArgs(IItemsChangedEventArgs const&) noexcept = default;
        IItemsChangedEventArgs(IItemsChangedEventArgs&&) noexcept = default;
        IItemsChangedEventArgs& operator=(IItemsChangedEventArgs const&) & noexcept = default;
        IItemsChangedEventArgs& operator=(IItemsChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IJumpListItemBackgroundConverter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJumpListItemBackgroundConverter>
    {
        IJumpListItemBackgroundConverter(std::nullptr_t = nullptr) noexcept {}
        IJumpListItemBackgroundConverter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJumpListItemBackgroundConverter(IJumpListItemBackgroundConverter const&) noexcept = default;
        IJumpListItemBackgroundConverter(IJumpListItemBackgroundConverter&&) noexcept = default;
        IJumpListItemBackgroundConverter& operator=(IJumpListItemBackgroundConverter const&) & noexcept = default;
        IJumpListItemBackgroundConverter& operator=(IJumpListItemBackgroundConverter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IJumpListItemBackgroundConverterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJumpListItemBackgroundConverterStatics>
    {
        IJumpListItemBackgroundConverterStatics(std::nullptr_t = nullptr) noexcept {}
        IJumpListItemBackgroundConverterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJumpListItemBackgroundConverterStatics(IJumpListItemBackgroundConverterStatics const&) noexcept = default;
        IJumpListItemBackgroundConverterStatics(IJumpListItemBackgroundConverterStatics&&) noexcept = default;
        IJumpListItemBackgroundConverterStatics& operator=(IJumpListItemBackgroundConverterStatics const&) & noexcept = default;
        IJumpListItemBackgroundConverterStatics& operator=(IJumpListItemBackgroundConverterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IJumpListItemForegroundConverter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJumpListItemForegroundConverter>
    {
        IJumpListItemForegroundConverter(std::nullptr_t = nullptr) noexcept {}
        IJumpListItemForegroundConverter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJumpListItemForegroundConverter(IJumpListItemForegroundConverter const&) noexcept = default;
        IJumpListItemForegroundConverter(IJumpListItemForegroundConverter&&) noexcept = default;
        IJumpListItemForegroundConverter& operator=(IJumpListItemForegroundConverter const&) & noexcept = default;
        IJumpListItemForegroundConverter& operator=(IJumpListItemForegroundConverter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IJumpListItemForegroundConverterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJumpListItemForegroundConverterStatics>
    {
        IJumpListItemForegroundConverterStatics(std::nullptr_t = nullptr) noexcept {}
        IJumpListItemForegroundConverterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJumpListItemForegroundConverterStatics(IJumpListItemForegroundConverterStatics const&) noexcept = default;
        IJumpListItemForegroundConverterStatics(IJumpListItemForegroundConverterStatics&&) noexcept = default;
        IJumpListItemForegroundConverterStatics& operator=(IJumpListItemForegroundConverterStatics const&) & noexcept = default;
        IJumpListItemForegroundConverterStatics& operator=(IJumpListItemForegroundConverterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILayoutInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayoutInformation>
    {
        ILayoutInformation(std::nullptr_t = nullptr) noexcept {}
        ILayoutInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILayoutInformation(ILayoutInformation const&) noexcept = default;
        ILayoutInformation(ILayoutInformation&&) noexcept = default;
        ILayoutInformation& operator=(ILayoutInformation const&) & noexcept = default;
        ILayoutInformation& operator=(ILayoutInformation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILayoutInformationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayoutInformationStatics>
    {
        ILayoutInformationStatics(std::nullptr_t = nullptr) noexcept {}
        ILayoutInformationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILayoutInformationStatics(ILayoutInformationStatics const&) noexcept = default;
        ILayoutInformationStatics(ILayoutInformationStatics&&) noexcept = default;
        ILayoutInformationStatics& operator=(ILayoutInformationStatics const&) & noexcept = default;
        ILayoutInformationStatics& operator=(ILayoutInformationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILayoutInformationStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayoutInformationStatics2>
    {
        ILayoutInformationStatics2(std::nullptr_t = nullptr) noexcept {}
        ILayoutInformationStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILayoutInformationStatics2(ILayoutInformationStatics2 const&) noexcept = default;
        ILayoutInformationStatics2(ILayoutInformationStatics2&&) noexcept = default;
        ILayoutInformationStatics2& operator=(ILayoutInformationStatics2 const&) & noexcept = default;
        ILayoutInformationStatics2& operator=(ILayoutInformationStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemPresenter>
    {
        IListViewItemPresenter(std::nullptr_t = nullptr) noexcept {}
        IListViewItemPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemPresenter(IListViewItemPresenter const&) noexcept = default;
        IListViewItemPresenter(IListViewItemPresenter&&) noexcept = default;
        IListViewItemPresenter& operator=(IListViewItemPresenter const&) & noexcept = default;
        IListViewItemPresenter& operator=(IListViewItemPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemPresenter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemPresenter2>
    {
        IListViewItemPresenter2(std::nullptr_t = nullptr) noexcept {}
        IListViewItemPresenter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemPresenter2(IListViewItemPresenter2 const&) noexcept = default;
        IListViewItemPresenter2(IListViewItemPresenter2&&) noexcept = default;
        IListViewItemPresenter2& operator=(IListViewItemPresenter2 const&) & noexcept = default;
        IListViewItemPresenter2& operator=(IListViewItemPresenter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemPresenter3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemPresenter3>
    {
        IListViewItemPresenter3(std::nullptr_t = nullptr) noexcept {}
        IListViewItemPresenter3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemPresenter3(IListViewItemPresenter3 const&) noexcept = default;
        IListViewItemPresenter3(IListViewItemPresenter3&&) noexcept = default;
        IListViewItemPresenter3& operator=(IListViewItemPresenter3 const&) & noexcept = default;
        IListViewItemPresenter3& operator=(IListViewItemPresenter3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemPresenterFactory>
    {
        IListViewItemPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewItemPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemPresenterFactory(IListViewItemPresenterFactory const&) noexcept = default;
        IListViewItemPresenterFactory(IListViewItemPresenterFactory&&) noexcept = default;
        IListViewItemPresenterFactory& operator=(IListViewItemPresenterFactory const&) & noexcept = default;
        IListViewItemPresenterFactory& operator=(IListViewItemPresenterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemPresenterStatics>
    {
        IListViewItemPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IListViewItemPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemPresenterStatics(IListViewItemPresenterStatics const&) noexcept = default;
        IListViewItemPresenterStatics(IListViewItemPresenterStatics&&) noexcept = default;
        IListViewItemPresenterStatics& operator=(IListViewItemPresenterStatics const&) & noexcept = default;
        IListViewItemPresenterStatics& operator=(IListViewItemPresenterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemPresenterStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemPresenterStatics2>
    {
        IListViewItemPresenterStatics2(std::nullptr_t = nullptr) noexcept {}
        IListViewItemPresenterStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemPresenterStatics2(IListViewItemPresenterStatics2 const&) noexcept = default;
        IListViewItemPresenterStatics2(IListViewItemPresenterStatics2&&) noexcept = default;
        IListViewItemPresenterStatics2& operator=(IListViewItemPresenterStatics2 const&) & noexcept = default;
        IListViewItemPresenterStatics2& operator=(IListViewItemPresenterStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemPresenterStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemPresenterStatics3>
    {
        IListViewItemPresenterStatics3(std::nullptr_t = nullptr) noexcept {}
        IListViewItemPresenterStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemPresenterStatics3(IListViewItemPresenterStatics3 const&) noexcept = default;
        IListViewItemPresenterStatics3(IListViewItemPresenterStatics3&&) noexcept = default;
        IListViewItemPresenterStatics3& operator=(IListViewItemPresenterStatics3 const&) & noexcept = default;
        IListViewItemPresenterStatics3& operator=(IListViewItemPresenterStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemTemplateSettings>
    {
        IListViewItemTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IListViewItemTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemTemplateSettings(IListViewItemTemplateSettings const&) noexcept = default;
        IListViewItemTemplateSettings(IListViewItemTemplateSettings&&) noexcept = default;
        IListViewItemTemplateSettings& operator=(IListViewItemTemplateSettings const&) & noexcept = default;
        IListViewItemTemplateSettings& operator=(IListViewItemTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILoopingSelector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILoopingSelector>
    {
        ILoopingSelector(std::nullptr_t = nullptr) noexcept {}
        ILoopingSelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILoopingSelector(ILoopingSelector const&) noexcept = default;
        ILoopingSelector(ILoopingSelector&&) noexcept = default;
        ILoopingSelector& operator=(ILoopingSelector const&) & noexcept = default;
        ILoopingSelector& operator=(ILoopingSelector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILoopingSelectorItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILoopingSelectorItem>
    {
        ILoopingSelectorItem(std::nullptr_t = nullptr) noexcept {}
        ILoopingSelectorItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILoopingSelectorItem(ILoopingSelectorItem const&) noexcept = default;
        ILoopingSelectorItem(ILoopingSelectorItem&&) noexcept = default;
        ILoopingSelectorItem& operator=(ILoopingSelectorItem const&) & noexcept = default;
        ILoopingSelectorItem& operator=(ILoopingSelectorItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILoopingSelectorPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILoopingSelectorPanel>
    {
        ILoopingSelectorPanel(std::nullptr_t = nullptr) noexcept {}
        ILoopingSelectorPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILoopingSelectorPanel(ILoopingSelectorPanel const&) noexcept = default;
        ILoopingSelectorPanel(ILoopingSelectorPanel&&) noexcept = default;
        ILoopingSelectorPanel& operator=(ILoopingSelectorPanel const&) & noexcept = default;
        ILoopingSelectorPanel& operator=(ILoopingSelectorPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILoopingSelectorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILoopingSelectorStatics>
    {
        ILoopingSelectorStatics(std::nullptr_t = nullptr) noexcept {}
        ILoopingSelectorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILoopingSelectorStatics(ILoopingSelectorStatics const&) noexcept = default;
        ILoopingSelectorStatics(ILoopingSelectorStatics&&) noexcept = default;
        ILoopingSelectorStatics& operator=(ILoopingSelectorStatics const&) & noexcept = default;
        ILoopingSelectorStatics& operator=(ILoopingSelectorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItemTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemTemplateSettings>
    {
        IMenuFlyoutItemTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItemTemplateSettings(IMenuFlyoutItemTemplateSettings const&) noexcept = default;
        IMenuFlyoutItemTemplateSettings(IMenuFlyoutItemTemplateSettings&&) noexcept = default;
        IMenuFlyoutItemTemplateSettings& operator=(IMenuFlyoutItemTemplateSettings const&) & noexcept = default;
        IMenuFlyoutItemTemplateSettings& operator=(IMenuFlyoutItemTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutPresenterTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenterTemplateSettings>
    {
        IMenuFlyoutPresenterTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenterTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutPresenterTemplateSettings(IMenuFlyoutPresenterTemplateSettings const&) noexcept = default;
        IMenuFlyoutPresenterTemplateSettings(IMenuFlyoutPresenterTemplateSettings&&) noexcept = default;
        IMenuFlyoutPresenterTemplateSettings& operator=(IMenuFlyoutPresenterTemplateSettings const&) & noexcept = default;
        IMenuFlyoutPresenterTemplateSettings& operator=(IMenuFlyoutPresenterTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemPresenter>
    {
        INavigationViewItemPresenter(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemPresenter(INavigationViewItemPresenter const&) noexcept = default;
        INavigationViewItemPresenter(INavigationViewItemPresenter&&) noexcept = default;
        INavigationViewItemPresenter& operator=(INavigationViewItemPresenter const&) & noexcept = default;
        INavigationViewItemPresenter& operator=(INavigationViewItemPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemPresenterFactory>
    {
        INavigationViewItemPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemPresenterFactory(INavigationViewItemPresenterFactory const&) noexcept = default;
        INavigationViewItemPresenterFactory(INavigationViewItemPresenterFactory&&) noexcept = default;
        INavigationViewItemPresenterFactory& operator=(INavigationViewItemPresenterFactory const&) & noexcept = default;
        INavigationViewItemPresenterFactory& operator=(INavigationViewItemPresenterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemPresenterStatics>
    {
        INavigationViewItemPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemPresenterStatics(INavigationViewItemPresenterStatics const&) noexcept = default;
        INavigationViewItemPresenterStatics(INavigationViewItemPresenterStatics&&) noexcept = default;
        INavigationViewItemPresenterStatics& operator=(INavigationViewItemPresenterStatics const&) & noexcept = default;
        INavigationViewItemPresenterStatics& operator=(INavigationViewItemPresenterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientedVirtualizingPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientedVirtualizingPanel>
    {
        IOrientedVirtualizingPanel(std::nullptr_t = nullptr) noexcept {}
        IOrientedVirtualizingPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientedVirtualizingPanel(IOrientedVirtualizingPanel const&) noexcept = default;
        IOrientedVirtualizingPanel(IOrientedVirtualizingPanel&&) noexcept = default;
        IOrientedVirtualizingPanel& operator=(IOrientedVirtualizingPanel const&) & noexcept = default;
        IOrientedVirtualizingPanel& operator=(IOrientedVirtualizingPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientedVirtualizingPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientedVirtualizingPanelFactory>
    {
        IOrientedVirtualizingPanelFactory(std::nullptr_t = nullptr) noexcept {}
        IOrientedVirtualizingPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientedVirtualizingPanelFactory(IOrientedVirtualizingPanelFactory const&) noexcept = default;
        IOrientedVirtualizingPanelFactory(IOrientedVirtualizingPanelFactory&&) noexcept = default;
        IOrientedVirtualizingPanelFactory& operator=(IOrientedVirtualizingPanelFactory const&) & noexcept = default;
        IOrientedVirtualizingPanelFactory& operator=(IOrientedVirtualizingPanelFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPickerFlyoutBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyoutBase>
    {
        IPickerFlyoutBase(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyoutBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPickerFlyoutBase(IPickerFlyoutBase const&) noexcept = default;
        IPickerFlyoutBase(IPickerFlyoutBase&&) noexcept = default;
        IPickerFlyoutBase& operator=(IPickerFlyoutBase const&) & noexcept = default;
        IPickerFlyoutBase& operator=(IPickerFlyoutBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPickerFlyoutBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyoutBaseFactory>
    {
        IPickerFlyoutBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyoutBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPickerFlyoutBaseFactory(IPickerFlyoutBaseFactory const&) noexcept = default;
        IPickerFlyoutBaseFactory(IPickerFlyoutBaseFactory&&) noexcept = default;
        IPickerFlyoutBaseFactory& operator=(IPickerFlyoutBaseFactory const&) & noexcept = default;
        IPickerFlyoutBaseFactory& operator=(IPickerFlyoutBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPickerFlyoutBaseOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyoutBaseOverrides>
    {
        IPickerFlyoutBaseOverrides(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyoutBaseOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPickerFlyoutBaseOverrides(IPickerFlyoutBaseOverrides const&) noexcept = default;
        IPickerFlyoutBaseOverrides(IPickerFlyoutBaseOverrides&&) noexcept = default;
        IPickerFlyoutBaseOverrides& operator=(IPickerFlyoutBaseOverrides const&) & noexcept = default;
        IPickerFlyoutBaseOverrides& operator=(IPickerFlyoutBaseOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPickerFlyoutBaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyoutBaseStatics>
    {
        IPickerFlyoutBaseStatics(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyoutBaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPickerFlyoutBaseStatics(IPickerFlyoutBaseStatics const&) noexcept = default;
        IPickerFlyoutBaseStatics(IPickerFlyoutBaseStatics&&) noexcept = default;
        IPickerFlyoutBaseStatics& operator=(IPickerFlyoutBaseStatics const&) & noexcept = default;
        IPickerFlyoutBaseStatics& operator=(IPickerFlyoutBaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotHeaderItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotHeaderItem>
    {
        IPivotHeaderItem(std::nullptr_t = nullptr) noexcept {}
        IPivotHeaderItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotHeaderItem(IPivotHeaderItem const&) noexcept = default;
        IPivotHeaderItem(IPivotHeaderItem&&) noexcept = default;
        IPivotHeaderItem& operator=(IPivotHeaderItem const&) & noexcept = default;
        IPivotHeaderItem& operator=(IPivotHeaderItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotHeaderItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotHeaderItemFactory>
    {
        IPivotHeaderItemFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotHeaderItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotHeaderItemFactory(IPivotHeaderItemFactory const&) noexcept = default;
        IPivotHeaderItemFactory(IPivotHeaderItemFactory&&) noexcept = default;
        IPivotHeaderItemFactory& operator=(IPivotHeaderItemFactory const&) & noexcept = default;
        IPivotHeaderItemFactory& operator=(IPivotHeaderItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotHeaderPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotHeaderPanel>
    {
        IPivotHeaderPanel(std::nullptr_t = nullptr) noexcept {}
        IPivotHeaderPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotHeaderPanel(IPivotHeaderPanel const&) noexcept = default;
        IPivotHeaderPanel(IPivotHeaderPanel&&) noexcept = default;
        IPivotHeaderPanel& operator=(IPivotHeaderPanel const&) & noexcept = default;
        IPivotHeaderPanel& operator=(IPivotHeaderPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotPanel>
    {
        IPivotPanel(std::nullptr_t = nullptr) noexcept {}
        IPivotPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotPanel(IPivotPanel const&) noexcept = default;
        IPivotPanel(IPivotPanel&&) noexcept = default;
        IPivotPanel& operator=(IPivotPanel const&) & noexcept = default;
        IPivotPanel& operator=(IPivotPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopup :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopup>
    {
        IPopup(std::nullptr_t = nullptr) noexcept {}
        IPopup(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopup(IPopup const&) noexcept = default;
        IPopup(IPopup&&) noexcept = default;
        IPopup& operator=(IPopup const&) & noexcept = default;
        IPopup& operator=(IPopup&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopup2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopup2>
    {
        IPopup2(std::nullptr_t = nullptr) noexcept {}
        IPopup2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopup2(IPopup2 const&) noexcept = default;
        IPopup2(IPopup2&&) noexcept = default;
        IPopup2& operator=(IPopup2 const&) & noexcept = default;
        IPopup2& operator=(IPopup2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopup3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopup3>
    {
        IPopup3(std::nullptr_t = nullptr) noexcept {}
        IPopup3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopup3(IPopup3 const&) noexcept = default;
        IPopup3(IPopup3&&) noexcept = default;
        IPopup3& operator=(IPopup3 const&) & noexcept = default;
        IPopup3& operator=(IPopup3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopupStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopupStatics>
    {
        IPopupStatics(std::nullptr_t = nullptr) noexcept {}
        IPopupStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopupStatics(IPopupStatics const&) noexcept = default;
        IPopupStatics(IPopupStatics&&) noexcept = default;
        IPopupStatics& operator=(IPopupStatics const&) & noexcept = default;
        IPopupStatics& operator=(IPopupStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopupStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopupStatics2>
    {
        IPopupStatics2(std::nullptr_t = nullptr) noexcept {}
        IPopupStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopupStatics2(IPopupStatics2 const&) noexcept = default;
        IPopupStatics2(IPopupStatics2&&) noexcept = default;
        IPopupStatics2& operator=(IPopupStatics2 const&) & noexcept = default;
        IPopupStatics2& operator=(IPopupStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopupStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopupStatics3>
    {
        IPopupStatics3(std::nullptr_t = nullptr) noexcept {}
        IPopupStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopupStatics3(IPopupStatics3 const&) noexcept = default;
        IPopupStatics3(IPopupStatics3&&) noexcept = default;
        IPopupStatics3& operator=(IPopupStatics3 const&) & noexcept = default;
        IPopupStatics3& operator=(IPopupStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressBarTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBarTemplateSettings>
    {
        IProgressBarTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IProgressBarTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressBarTemplateSettings(IProgressBarTemplateSettings const&) noexcept = default;
        IProgressBarTemplateSettings(IProgressBarTemplateSettings&&) noexcept = default;
        IProgressBarTemplateSettings& operator=(IProgressBarTemplateSettings const&) & noexcept = default;
        IProgressBarTemplateSettings& operator=(IProgressBarTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressRingTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRingTemplateSettings>
    {
        IProgressRingTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IProgressRingTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressRingTemplateSettings(IProgressRingTemplateSettings const&) noexcept = default;
        IProgressRingTemplateSettings(IProgressRingTemplateSettings&&) noexcept = default;
        IProgressRingTemplateSettings& operator=(IProgressRingTemplateSettings const&) & noexcept = default;
        IProgressRingTemplateSettings& operator=(IProgressRingTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRangeBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRangeBase>
    {
        IRangeBase(std::nullptr_t = nullptr) noexcept {}
        IRangeBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRangeBase(IRangeBase const&) noexcept = default;
        IRangeBase(IRangeBase&&) noexcept = default;
        IRangeBase& operator=(IRangeBase const&) & noexcept = default;
        IRangeBase& operator=(IRangeBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRangeBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRangeBaseFactory>
    {
        IRangeBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IRangeBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRangeBaseFactory(IRangeBaseFactory const&) noexcept = default;
        IRangeBaseFactory(IRangeBaseFactory&&) noexcept = default;
        IRangeBaseFactory& operator=(IRangeBaseFactory const&) & noexcept = default;
        IRangeBaseFactory& operator=(IRangeBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRangeBaseOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRangeBaseOverrides>
    {
        IRangeBaseOverrides(std::nullptr_t = nullptr) noexcept {}
        IRangeBaseOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRangeBaseOverrides(IRangeBaseOverrides const&) noexcept = default;
        IRangeBaseOverrides(IRangeBaseOverrides&&) noexcept = default;
        IRangeBaseOverrides& operator=(IRangeBaseOverrides const&) & noexcept = default;
        IRangeBaseOverrides& operator=(IRangeBaseOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRangeBaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRangeBaseStatics>
    {
        IRangeBaseStatics(std::nullptr_t = nullptr) noexcept {}
        IRangeBaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRangeBaseStatics(IRangeBaseStatics const&) noexcept = default;
        IRangeBaseStatics(IRangeBaseStatics&&) noexcept = default;
        IRangeBaseStatics& operator=(IRangeBaseStatics const&) & noexcept = default;
        IRangeBaseStatics& operator=(IRangeBaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRangeBaseValueChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRangeBaseValueChangedEventArgs>
    {
        IRangeBaseValueChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRangeBaseValueChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRangeBaseValueChangedEventArgs(IRangeBaseValueChangedEventArgs const&) noexcept = default;
        IRangeBaseValueChangedEventArgs(IRangeBaseValueChangedEventArgs&&) noexcept = default;
        IRangeBaseValueChangedEventArgs& operator=(IRangeBaseValueChangedEventArgs const&) & noexcept = default;
        IRangeBaseValueChangedEventArgs& operator=(IRangeBaseValueChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepeatButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepeatButton>
    {
        IRepeatButton(std::nullptr_t = nullptr) noexcept {}
        IRepeatButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepeatButton(IRepeatButton const&) noexcept = default;
        IRepeatButton(IRepeatButton&&) noexcept = default;
        IRepeatButton& operator=(IRepeatButton const&) & noexcept = default;
        IRepeatButton& operator=(IRepeatButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepeatButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepeatButtonStatics>
    {
        IRepeatButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IRepeatButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepeatButtonStatics(IRepeatButtonStatics const&) noexcept = default;
        IRepeatButtonStatics(IRepeatButtonStatics&&) noexcept = default;
        IRepeatButtonStatics& operator=(IRepeatButtonStatics const&) & noexcept = default;
        IRepeatButtonStatics& operator=(IRepeatButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollBar>
    {
        IScrollBar(std::nullptr_t = nullptr) noexcept {}
        IScrollBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollBar(IScrollBar const&) noexcept = default;
        IScrollBar(IScrollBar&&) noexcept = default;
        IScrollBar& operator=(IScrollBar const&) & noexcept = default;
        IScrollBar& operator=(IScrollBar&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollBarStatics>
    {
        IScrollBarStatics(std::nullptr_t = nullptr) noexcept {}
        IScrollBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollBarStatics(IScrollBarStatics const&) noexcept = default;
        IScrollBarStatics(IScrollBarStatics&&) noexcept = default;
        IScrollBarStatics& operator=(IScrollBarStatics const&) & noexcept = default;
        IScrollBarStatics& operator=(IScrollBarStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollEventArgs>
    {
        IScrollEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollEventArgs(IScrollEventArgs const&) noexcept = default;
        IScrollEventArgs(IScrollEventArgs&&) noexcept = default;
        IScrollEventArgs& operator=(IScrollEventArgs const&) & noexcept = default;
        IScrollEventArgs& operator=(IScrollEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollSnapPointsInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollSnapPointsInfo>
    {
        IScrollSnapPointsInfo(std::nullptr_t = nullptr) noexcept {}
        IScrollSnapPointsInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollSnapPointsInfo(IScrollSnapPointsInfo const&) noexcept = default;
        IScrollSnapPointsInfo(IScrollSnapPointsInfo&&) noexcept = default;
        IScrollSnapPointsInfo& operator=(IScrollSnapPointsInfo const&) & noexcept = default;
        IScrollSnapPointsInfo& operator=(IScrollSnapPointsInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelector>
    {
        ISelector(std::nullptr_t = nullptr) noexcept {}
        ISelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelector(ISelector const&) noexcept = default;
        ISelector(ISelector&&) noexcept = default;
        ISelector& operator=(ISelector const&) & noexcept = default;
        ISelector& operator=(ISelector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorFactory>
    {
        ISelectorFactory(std::nullptr_t = nullptr) noexcept {}
        ISelectorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectorFactory(ISelectorFactory const&) noexcept = default;
        ISelectorFactory(ISelectorFactory&&) noexcept = default;
        ISelectorFactory& operator=(ISelectorFactory const&) & noexcept = default;
        ISelectorFactory& operator=(ISelectorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectorItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorItem>
    {
        ISelectorItem(std::nullptr_t = nullptr) noexcept {}
        ISelectorItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectorItem(ISelectorItem const&) noexcept = default;
        ISelectorItem(ISelectorItem&&) noexcept = default;
        ISelectorItem& operator=(ISelectorItem const&) & noexcept = default;
        ISelectorItem& operator=(ISelectorItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectorItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorItemFactory>
    {
        ISelectorItemFactory(std::nullptr_t = nullptr) noexcept {}
        ISelectorItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectorItemFactory(ISelectorItemFactory const&) noexcept = default;
        ISelectorItemFactory(ISelectorItemFactory&&) noexcept = default;
        ISelectorItemFactory& operator=(ISelectorItemFactory const&) & noexcept = default;
        ISelectorItemFactory& operator=(ISelectorItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectorItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorItemStatics>
    {
        ISelectorItemStatics(std::nullptr_t = nullptr) noexcept {}
        ISelectorItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectorItemStatics(ISelectorItemStatics const&) noexcept = default;
        ISelectorItemStatics(ISelectorItemStatics&&) noexcept = default;
        ISelectorItemStatics& operator=(ISelectorItemStatics const&) & noexcept = default;
        ISelectorItemStatics& operator=(ISelectorItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorStatics>
    {
        ISelectorStatics(std::nullptr_t = nullptr) noexcept {}
        ISelectorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectorStatics(ISelectorStatics const&) noexcept = default;
        ISelectorStatics(ISelectorStatics&&) noexcept = default;
        ISelectorStatics& operator=(ISelectorStatics const&) & noexcept = default;
        ISelectorStatics& operator=(ISelectorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISettingsFlyoutTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISettingsFlyoutTemplateSettings>
    {
        ISettingsFlyoutTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        ISettingsFlyoutTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISettingsFlyoutTemplateSettings(ISettingsFlyoutTemplateSettings const&) noexcept = default;
        ISettingsFlyoutTemplateSettings(ISettingsFlyoutTemplateSettings&&) noexcept = default;
        ISettingsFlyoutTemplateSettings& operator=(ISettingsFlyoutTemplateSettings const&) & noexcept = default;
        ISettingsFlyoutTemplateSettings& operator=(ISettingsFlyoutTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitViewTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitViewTemplateSettings>
    {
        ISplitViewTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        ISplitViewTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitViewTemplateSettings(ISplitViewTemplateSettings const&) noexcept = default;
        ISplitViewTemplateSettings(ISplitViewTemplateSettings&&) noexcept = default;
        ISplitViewTemplateSettings& operator=(ISplitViewTemplateSettings const&) & noexcept = default;
        ISplitViewTemplateSettings& operator=(ISplitViewTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IThumb :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IThumb>
    {
        IThumb(std::nullptr_t = nullptr) noexcept {}
        IThumb(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IThumb(IThumb const&) noexcept = default;
        IThumb(IThumb&&) noexcept = default;
        IThumb& operator=(IThumb const&) & noexcept = default;
        IThumb& operator=(IThumb&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IThumbStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IThumbStatics>
    {
        IThumbStatics(std::nullptr_t = nullptr) noexcept {}
        IThumbStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IThumbStatics(IThumbStatics const&) noexcept = default;
        IThumbStatics(IThumbStatics&&) noexcept = default;
        IThumbStatics& operator=(IThumbStatics const&) & noexcept = default;
        IThumbStatics& operator=(IThumbStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITickBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITickBar>
    {
        ITickBar(std::nullptr_t = nullptr) noexcept {}
        ITickBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITickBar(ITickBar const&) noexcept = default;
        ITickBar(ITickBar&&) noexcept = default;
        ITickBar& operator=(ITickBar const&) & noexcept = default;
        ITickBar& operator=(ITickBar&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITickBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITickBarStatics>
    {
        ITickBarStatics(std::nullptr_t = nullptr) noexcept {}
        ITickBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITickBarStatics(ITickBarStatics const&) noexcept = default;
        ITickBarStatics(ITickBarStatics&&) noexcept = default;
        ITickBarStatics& operator=(ITickBarStatics const&) & noexcept = default;
        ITickBarStatics& operator=(ITickBarStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleButton>
    {
        IToggleButton(std::nullptr_t = nullptr) noexcept {}
        IToggleButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleButton(IToggleButton const&) noexcept = default;
        IToggleButton(IToggleButton&&) noexcept = default;
        IToggleButton& operator=(IToggleButton const&) & noexcept = default;
        IToggleButton& operator=(IToggleButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleButtonFactory>
    {
        IToggleButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleButtonFactory(IToggleButtonFactory const&) noexcept = default;
        IToggleButtonFactory(IToggleButtonFactory&&) noexcept = default;
        IToggleButtonFactory& operator=(IToggleButtonFactory const&) & noexcept = default;
        IToggleButtonFactory& operator=(IToggleButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleButtonOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleButtonOverrides>
    {
        IToggleButtonOverrides(std::nullptr_t = nullptr) noexcept {}
        IToggleButtonOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleButtonOverrides(IToggleButtonOverrides const&) noexcept = default;
        IToggleButtonOverrides(IToggleButtonOverrides&&) noexcept = default;
        IToggleButtonOverrides& operator=(IToggleButtonOverrides const&) & noexcept = default;
        IToggleButtonOverrides& operator=(IToggleButtonOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleButtonStatics>
    {
        IToggleButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IToggleButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleButtonStatics(IToggleButtonStatics const&) noexcept = default;
        IToggleButtonStatics(IToggleButtonStatics&&) noexcept = default;
        IToggleButtonStatics& operator=(IToggleButtonStatics const&) & noexcept = default;
        IToggleButtonStatics& operator=(IToggleButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSwitchTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitchTemplateSettings>
    {
        IToggleSwitchTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitchTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSwitchTemplateSettings(IToggleSwitchTemplateSettings const&) noexcept = default;
        IToggleSwitchTemplateSettings(IToggleSwitchTemplateSettings&&) noexcept = default;
        IToggleSwitchTemplateSettings& operator=(IToggleSwitchTemplateSettings const&) & noexcept = default;
        IToggleSwitchTemplateSettings& operator=(IToggleSwitchTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToolTipTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTipTemplateSettings>
    {
        IToolTipTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IToolTipTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToolTipTemplateSettings(IToolTipTemplateSettings const&) noexcept = default;
        IToolTipTemplateSettings(IToolTipTemplateSettings&&) noexcept = default;
        IToolTipTemplateSettings& operator=(IToolTipTemplateSettings const&) & noexcept = default;
        IToolTipTemplateSettings& operator=(IToolTipTemplateSettings&&) & noexcept = default;
    };
}
#endif
