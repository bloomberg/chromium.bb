// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Storage_Search_1_H
#define WINRT_Windows_Storage_Search_1_H
#include "winrt/impl/Windows.Storage.Search.0.h"
WINRT_EXPORT namespace winrt::Windows::Storage::Search
{
    struct __declspec(empty_bases) IContentIndexer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIndexer>
    {
        IContentIndexer(std::nullptr_t = nullptr) noexcept {}
        IContentIndexer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentIndexer(IContentIndexer const&) noexcept = default;
        IContentIndexer(IContentIndexer&&) noexcept = default;
        IContentIndexer& operator=(IContentIndexer const&) & noexcept = default;
        IContentIndexer& operator=(IContentIndexer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentIndexerQuery :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIndexerQuery>
    {
        IContentIndexerQuery(std::nullptr_t = nullptr) noexcept {}
        IContentIndexerQuery(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentIndexerQuery(IContentIndexerQuery const&) noexcept = default;
        IContentIndexerQuery(IContentIndexerQuery&&) noexcept = default;
        IContentIndexerQuery& operator=(IContentIndexerQuery const&) & noexcept = default;
        IContentIndexerQuery& operator=(IContentIndexerQuery&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentIndexerQueryOperations :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIndexerQueryOperations>
    {
        IContentIndexerQueryOperations(std::nullptr_t = nullptr) noexcept {}
        IContentIndexerQueryOperations(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentIndexerQueryOperations(IContentIndexerQueryOperations const&) noexcept = default;
        IContentIndexerQueryOperations(IContentIndexerQueryOperations&&) noexcept = default;
        IContentIndexerQueryOperations& operator=(IContentIndexerQueryOperations const&) & noexcept = default;
        IContentIndexerQueryOperations& operator=(IContentIndexerQueryOperations&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentIndexerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIndexerStatics>
    {
        IContentIndexerStatics(std::nullptr_t = nullptr) noexcept {}
        IContentIndexerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentIndexerStatics(IContentIndexerStatics const&) noexcept = default;
        IContentIndexerStatics(IContentIndexerStatics&&) noexcept = default;
        IContentIndexerStatics& operator=(IContentIndexerStatics const&) & noexcept = default;
        IContentIndexerStatics& operator=(IContentIndexerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIndexableContent :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIndexableContent>
    {
        IIndexableContent(std::nullptr_t = nullptr) noexcept {}
        IIndexableContent(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIndexableContent(IIndexableContent const&) noexcept = default;
        IIndexableContent(IIndexableContent&&) noexcept = default;
        IIndexableContent& operator=(IIndexableContent const&) & noexcept = default;
        IIndexableContent& operator=(IIndexableContent&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IQueryOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IQueryOptions>
    {
        IQueryOptions(std::nullptr_t = nullptr) noexcept {}
        IQueryOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IQueryOptions(IQueryOptions const&) noexcept = default;
        IQueryOptions(IQueryOptions&&) noexcept = default;
        IQueryOptions& operator=(IQueryOptions const&) & noexcept = default;
        IQueryOptions& operator=(IQueryOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IQueryOptionsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IQueryOptionsFactory>
    {
        IQueryOptionsFactory(std::nullptr_t = nullptr) noexcept {}
        IQueryOptionsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IQueryOptionsFactory(IQueryOptionsFactory const&) noexcept = default;
        IQueryOptionsFactory(IQueryOptionsFactory&&) noexcept = default;
        IQueryOptionsFactory& operator=(IQueryOptionsFactory const&) & noexcept = default;
        IQueryOptionsFactory& operator=(IQueryOptionsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IQueryOptionsWithProviderFilter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IQueryOptionsWithProviderFilter>
    {
        IQueryOptionsWithProviderFilter(std::nullptr_t = nullptr) noexcept {}
        IQueryOptionsWithProviderFilter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IQueryOptionsWithProviderFilter(IQueryOptionsWithProviderFilter const&) noexcept = default;
        IQueryOptionsWithProviderFilter(IQueryOptionsWithProviderFilter&&) noexcept = default;
        IQueryOptionsWithProviderFilter& operator=(IQueryOptionsWithProviderFilter const&) & noexcept = default;
        IQueryOptionsWithProviderFilter& operator=(IQueryOptionsWithProviderFilter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStorageFileQueryResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStorageFileQueryResult>,
        impl::require<winrt::Windows::Storage::Search::IStorageFileQueryResult, winrt::Windows::Storage::Search::IStorageQueryResultBase>
    {
        IStorageFileQueryResult(std::nullptr_t = nullptr) noexcept {}
        IStorageFileQueryResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStorageFileQueryResult(IStorageFileQueryResult const&) noexcept = default;
        IStorageFileQueryResult(IStorageFileQueryResult&&) noexcept = default;
        IStorageFileQueryResult& operator=(IStorageFileQueryResult const&) & noexcept = default;
        IStorageFileQueryResult& operator=(IStorageFileQueryResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStorageFileQueryResult2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStorageFileQueryResult2>,
        impl::require<winrt::Windows::Storage::Search::IStorageFileQueryResult2, winrt::Windows::Storage::Search::IStorageQueryResultBase>
    {
        IStorageFileQueryResult2(std::nullptr_t = nullptr) noexcept {}
        IStorageFileQueryResult2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStorageFileQueryResult2(IStorageFileQueryResult2 const&) noexcept = default;
        IStorageFileQueryResult2(IStorageFileQueryResult2&&) noexcept = default;
        IStorageFileQueryResult2& operator=(IStorageFileQueryResult2 const&) & noexcept = default;
        IStorageFileQueryResult2& operator=(IStorageFileQueryResult2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStorageFolderQueryOperations :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStorageFolderQueryOperations>
    {
        IStorageFolderQueryOperations(std::nullptr_t = nullptr) noexcept {}
        IStorageFolderQueryOperations(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStorageFolderQueryOperations(IStorageFolderQueryOperations const&) noexcept = default;
        IStorageFolderQueryOperations(IStorageFolderQueryOperations&&) noexcept = default;
        IStorageFolderQueryOperations& operator=(IStorageFolderQueryOperations const&) & noexcept = default;
        IStorageFolderQueryOperations& operator=(IStorageFolderQueryOperations&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStorageFolderQueryResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStorageFolderQueryResult>,
        impl::require<winrt::Windows::Storage::Search::IStorageFolderQueryResult, winrt::Windows::Storage::Search::IStorageQueryResultBase>
    {
        IStorageFolderQueryResult(std::nullptr_t = nullptr) noexcept {}
        IStorageFolderQueryResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStorageFolderQueryResult(IStorageFolderQueryResult const&) noexcept = default;
        IStorageFolderQueryResult(IStorageFolderQueryResult&&) noexcept = default;
        IStorageFolderQueryResult& operator=(IStorageFolderQueryResult const&) & noexcept = default;
        IStorageFolderQueryResult& operator=(IStorageFolderQueryResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStorageItemQueryResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStorageItemQueryResult>,
        impl::require<winrt::Windows::Storage::Search::IStorageItemQueryResult, winrt::Windows::Storage::Search::IStorageQueryResultBase>
    {
        IStorageItemQueryResult(std::nullptr_t = nullptr) noexcept {}
        IStorageItemQueryResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStorageItemQueryResult(IStorageItemQueryResult const&) noexcept = default;
        IStorageItemQueryResult(IStorageItemQueryResult&&) noexcept = default;
        IStorageItemQueryResult& operator=(IStorageItemQueryResult const&) & noexcept = default;
        IStorageItemQueryResult& operator=(IStorageItemQueryResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStorageLibraryChangeTrackerTriggerDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStorageLibraryChangeTrackerTriggerDetails>
    {
        IStorageLibraryChangeTrackerTriggerDetails(std::nullptr_t = nullptr) noexcept {}
        IStorageLibraryChangeTrackerTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStorageLibraryChangeTrackerTriggerDetails(IStorageLibraryChangeTrackerTriggerDetails const&) noexcept = default;
        IStorageLibraryChangeTrackerTriggerDetails(IStorageLibraryChangeTrackerTriggerDetails&&) noexcept = default;
        IStorageLibraryChangeTrackerTriggerDetails& operator=(IStorageLibraryChangeTrackerTriggerDetails const&) & noexcept = default;
        IStorageLibraryChangeTrackerTriggerDetails& operator=(IStorageLibraryChangeTrackerTriggerDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStorageLibraryContentChangedTriggerDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStorageLibraryContentChangedTriggerDetails>
    {
        IStorageLibraryContentChangedTriggerDetails(std::nullptr_t = nullptr) noexcept {}
        IStorageLibraryContentChangedTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStorageLibraryContentChangedTriggerDetails(IStorageLibraryContentChangedTriggerDetails const&) noexcept = default;
        IStorageLibraryContentChangedTriggerDetails(IStorageLibraryContentChangedTriggerDetails&&) noexcept = default;
        IStorageLibraryContentChangedTriggerDetails& operator=(IStorageLibraryContentChangedTriggerDetails const&) & noexcept = default;
        IStorageLibraryContentChangedTriggerDetails& operator=(IStorageLibraryContentChangedTriggerDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStorageQueryResultBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStorageQueryResultBase>
    {
        IStorageQueryResultBase(std::nullptr_t = nullptr) noexcept {}
        IStorageQueryResultBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStorageQueryResultBase(IStorageQueryResultBase const&) noexcept = default;
        IStorageQueryResultBase(IStorageQueryResultBase&&) noexcept = default;
        IStorageQueryResultBase& operator=(IStorageQueryResultBase const&) & noexcept = default;
        IStorageQueryResultBase& operator=(IStorageQueryResultBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IValueAndLanguage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IValueAndLanguage>
    {
        IValueAndLanguage(std::nullptr_t = nullptr) noexcept {}
        IValueAndLanguage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IValueAndLanguage(IValueAndLanguage const&) noexcept = default;
        IValueAndLanguage(IValueAndLanguage&&) noexcept = default;
        IValueAndLanguage& operator=(IValueAndLanguage const&) & noexcept = default;
        IValueAndLanguage& operator=(IValueAndLanguage&&) & noexcept = default;
    };
}
#endif
