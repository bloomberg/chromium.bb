// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Xaml_Media_Imaging_1_H
#define WINRT_Windows_UI_Xaml_Media_Imaging_1_H
#include "winrt/impl/Windows.UI.Xaml.Media.Imaging.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Media::Imaging
{
    struct __declspec(empty_bases) IBitmapImage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapImage>
    {
        IBitmapImage(std::nullptr_t = nullptr) noexcept {}
        IBitmapImage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapImage(IBitmapImage const&) noexcept = default;
        IBitmapImage(IBitmapImage&&) noexcept = default;
        IBitmapImage& operator=(IBitmapImage const&) & noexcept = default;
        IBitmapImage& operator=(IBitmapImage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapImage2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapImage2>
    {
        IBitmapImage2(std::nullptr_t = nullptr) noexcept {}
        IBitmapImage2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapImage2(IBitmapImage2 const&) noexcept = default;
        IBitmapImage2(IBitmapImage2&&) noexcept = default;
        IBitmapImage2& operator=(IBitmapImage2 const&) & noexcept = default;
        IBitmapImage2& operator=(IBitmapImage2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapImage3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapImage3>
    {
        IBitmapImage3(std::nullptr_t = nullptr) noexcept {}
        IBitmapImage3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapImage3(IBitmapImage3 const&) noexcept = default;
        IBitmapImage3(IBitmapImage3&&) noexcept = default;
        IBitmapImage3& operator=(IBitmapImage3 const&) & noexcept = default;
        IBitmapImage3& operator=(IBitmapImage3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapImageFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapImageFactory>
    {
        IBitmapImageFactory(std::nullptr_t = nullptr) noexcept {}
        IBitmapImageFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapImageFactory(IBitmapImageFactory const&) noexcept = default;
        IBitmapImageFactory(IBitmapImageFactory&&) noexcept = default;
        IBitmapImageFactory& operator=(IBitmapImageFactory const&) & noexcept = default;
        IBitmapImageFactory& operator=(IBitmapImageFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapImageStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapImageStatics>
    {
        IBitmapImageStatics(std::nullptr_t = nullptr) noexcept {}
        IBitmapImageStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapImageStatics(IBitmapImageStatics const&) noexcept = default;
        IBitmapImageStatics(IBitmapImageStatics&&) noexcept = default;
        IBitmapImageStatics& operator=(IBitmapImageStatics const&) & noexcept = default;
        IBitmapImageStatics& operator=(IBitmapImageStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapImageStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapImageStatics2>
    {
        IBitmapImageStatics2(std::nullptr_t = nullptr) noexcept {}
        IBitmapImageStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapImageStatics2(IBitmapImageStatics2 const&) noexcept = default;
        IBitmapImageStatics2(IBitmapImageStatics2&&) noexcept = default;
        IBitmapImageStatics2& operator=(IBitmapImageStatics2 const&) & noexcept = default;
        IBitmapImageStatics2& operator=(IBitmapImageStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapImageStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapImageStatics3>
    {
        IBitmapImageStatics3(std::nullptr_t = nullptr) noexcept {}
        IBitmapImageStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapImageStatics3(IBitmapImageStatics3 const&) noexcept = default;
        IBitmapImageStatics3(IBitmapImageStatics3&&) noexcept = default;
        IBitmapImageStatics3& operator=(IBitmapImageStatics3 const&) & noexcept = default;
        IBitmapImageStatics3& operator=(IBitmapImageStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapSource>
    {
        IBitmapSource(std::nullptr_t = nullptr) noexcept {}
        IBitmapSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapSource(IBitmapSource const&) noexcept = default;
        IBitmapSource(IBitmapSource&&) noexcept = default;
        IBitmapSource& operator=(IBitmapSource const&) & noexcept = default;
        IBitmapSource& operator=(IBitmapSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapSourceFactory>
    {
        IBitmapSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IBitmapSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapSourceFactory(IBitmapSourceFactory const&) noexcept = default;
        IBitmapSourceFactory(IBitmapSourceFactory&&) noexcept = default;
        IBitmapSourceFactory& operator=(IBitmapSourceFactory const&) & noexcept = default;
        IBitmapSourceFactory& operator=(IBitmapSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapSourceStatics>
    {
        IBitmapSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IBitmapSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapSourceStatics(IBitmapSourceStatics const&) noexcept = default;
        IBitmapSourceStatics(IBitmapSourceStatics&&) noexcept = default;
        IBitmapSourceStatics& operator=(IBitmapSourceStatics const&) & noexcept = default;
        IBitmapSourceStatics& operator=(IBitmapSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDownloadProgressEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDownloadProgressEventArgs>
    {
        IDownloadProgressEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDownloadProgressEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDownloadProgressEventArgs(IDownloadProgressEventArgs const&) noexcept = default;
        IDownloadProgressEventArgs(IDownloadProgressEventArgs&&) noexcept = default;
        IDownloadProgressEventArgs& operator=(IDownloadProgressEventArgs const&) & noexcept = default;
        IDownloadProgressEventArgs& operator=(IDownloadProgressEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRenderTargetBitmap :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRenderTargetBitmap>
    {
        IRenderTargetBitmap(std::nullptr_t = nullptr) noexcept {}
        IRenderTargetBitmap(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRenderTargetBitmap(IRenderTargetBitmap const&) noexcept = default;
        IRenderTargetBitmap(IRenderTargetBitmap&&) noexcept = default;
        IRenderTargetBitmap& operator=(IRenderTargetBitmap const&) & noexcept = default;
        IRenderTargetBitmap& operator=(IRenderTargetBitmap&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRenderTargetBitmapStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRenderTargetBitmapStatics>
    {
        IRenderTargetBitmapStatics(std::nullptr_t = nullptr) noexcept {}
        IRenderTargetBitmapStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRenderTargetBitmapStatics(IRenderTargetBitmapStatics const&) noexcept = default;
        IRenderTargetBitmapStatics(IRenderTargetBitmapStatics&&) noexcept = default;
        IRenderTargetBitmapStatics& operator=(IRenderTargetBitmapStatics const&) & noexcept = default;
        IRenderTargetBitmapStatics& operator=(IRenderTargetBitmapStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISoftwareBitmapSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISoftwareBitmapSource>
    {
        ISoftwareBitmapSource(std::nullptr_t = nullptr) noexcept {}
        ISoftwareBitmapSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISoftwareBitmapSource(ISoftwareBitmapSource const&) noexcept = default;
        ISoftwareBitmapSource(ISoftwareBitmapSource&&) noexcept = default;
        ISoftwareBitmapSource& operator=(ISoftwareBitmapSource const&) & noexcept = default;
        ISoftwareBitmapSource& operator=(ISoftwareBitmapSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISurfaceImageSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISurfaceImageSource>
    {
        ISurfaceImageSource(std::nullptr_t = nullptr) noexcept {}
        ISurfaceImageSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISurfaceImageSource(ISurfaceImageSource const&) noexcept = default;
        ISurfaceImageSource(ISurfaceImageSource&&) noexcept = default;
        ISurfaceImageSource& operator=(ISurfaceImageSource const&) & noexcept = default;
        ISurfaceImageSource& operator=(ISurfaceImageSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISurfaceImageSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISurfaceImageSourceFactory>
    {
        ISurfaceImageSourceFactory(std::nullptr_t = nullptr) noexcept {}
        ISurfaceImageSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISurfaceImageSourceFactory(ISurfaceImageSourceFactory const&) noexcept = default;
        ISurfaceImageSourceFactory(ISurfaceImageSourceFactory&&) noexcept = default;
        ISurfaceImageSourceFactory& operator=(ISurfaceImageSourceFactory const&) & noexcept = default;
        ISurfaceImageSourceFactory& operator=(ISurfaceImageSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISvgImageSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISvgImageSource>
    {
        ISvgImageSource(std::nullptr_t = nullptr) noexcept {}
        ISvgImageSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISvgImageSource(ISvgImageSource const&) noexcept = default;
        ISvgImageSource(ISvgImageSource&&) noexcept = default;
        ISvgImageSource& operator=(ISvgImageSource const&) & noexcept = default;
        ISvgImageSource& operator=(ISvgImageSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISvgImageSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISvgImageSourceFactory>
    {
        ISvgImageSourceFactory(std::nullptr_t = nullptr) noexcept {}
        ISvgImageSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISvgImageSourceFactory(ISvgImageSourceFactory const&) noexcept = default;
        ISvgImageSourceFactory(ISvgImageSourceFactory&&) noexcept = default;
        ISvgImageSourceFactory& operator=(ISvgImageSourceFactory const&) & noexcept = default;
        ISvgImageSourceFactory& operator=(ISvgImageSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISvgImageSourceFailedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISvgImageSourceFailedEventArgs>
    {
        ISvgImageSourceFailedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISvgImageSourceFailedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISvgImageSourceFailedEventArgs(ISvgImageSourceFailedEventArgs const&) noexcept = default;
        ISvgImageSourceFailedEventArgs(ISvgImageSourceFailedEventArgs&&) noexcept = default;
        ISvgImageSourceFailedEventArgs& operator=(ISvgImageSourceFailedEventArgs const&) & noexcept = default;
        ISvgImageSourceFailedEventArgs& operator=(ISvgImageSourceFailedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISvgImageSourceOpenedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISvgImageSourceOpenedEventArgs>
    {
        ISvgImageSourceOpenedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISvgImageSourceOpenedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISvgImageSourceOpenedEventArgs(ISvgImageSourceOpenedEventArgs const&) noexcept = default;
        ISvgImageSourceOpenedEventArgs(ISvgImageSourceOpenedEventArgs&&) noexcept = default;
        ISvgImageSourceOpenedEventArgs& operator=(ISvgImageSourceOpenedEventArgs const&) & noexcept = default;
        ISvgImageSourceOpenedEventArgs& operator=(ISvgImageSourceOpenedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISvgImageSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISvgImageSourceStatics>
    {
        ISvgImageSourceStatics(std::nullptr_t = nullptr) noexcept {}
        ISvgImageSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISvgImageSourceStatics(ISvgImageSourceStatics const&) noexcept = default;
        ISvgImageSourceStatics(ISvgImageSourceStatics&&) noexcept = default;
        ISvgImageSourceStatics& operator=(ISvgImageSourceStatics const&) & noexcept = default;
        ISvgImageSourceStatics& operator=(ISvgImageSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualSurfaceImageSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualSurfaceImageSource>
    {
        IVirtualSurfaceImageSource(std::nullptr_t = nullptr) noexcept {}
        IVirtualSurfaceImageSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualSurfaceImageSource(IVirtualSurfaceImageSource const&) noexcept = default;
        IVirtualSurfaceImageSource(IVirtualSurfaceImageSource&&) noexcept = default;
        IVirtualSurfaceImageSource& operator=(IVirtualSurfaceImageSource const&) & noexcept = default;
        IVirtualSurfaceImageSource& operator=(IVirtualSurfaceImageSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualSurfaceImageSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualSurfaceImageSourceFactory>
    {
        IVirtualSurfaceImageSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IVirtualSurfaceImageSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualSurfaceImageSourceFactory(IVirtualSurfaceImageSourceFactory const&) noexcept = default;
        IVirtualSurfaceImageSourceFactory(IVirtualSurfaceImageSourceFactory&&) noexcept = default;
        IVirtualSurfaceImageSourceFactory& operator=(IVirtualSurfaceImageSourceFactory const&) & noexcept = default;
        IVirtualSurfaceImageSourceFactory& operator=(IVirtualSurfaceImageSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWriteableBitmap :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWriteableBitmap>
    {
        IWriteableBitmap(std::nullptr_t = nullptr) noexcept {}
        IWriteableBitmap(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWriteableBitmap(IWriteableBitmap const&) noexcept = default;
        IWriteableBitmap(IWriteableBitmap&&) noexcept = default;
        IWriteableBitmap& operator=(IWriteableBitmap const&) & noexcept = default;
        IWriteableBitmap& operator=(IWriteableBitmap&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWriteableBitmapFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWriteableBitmapFactory>
    {
        IWriteableBitmapFactory(std::nullptr_t = nullptr) noexcept {}
        IWriteableBitmapFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWriteableBitmapFactory(IWriteableBitmapFactory const&) noexcept = default;
        IWriteableBitmapFactory(IWriteableBitmapFactory&&) noexcept = default;
        IWriteableBitmapFactory& operator=(IWriteableBitmapFactory const&) & noexcept = default;
        IWriteableBitmapFactory& operator=(IWriteableBitmapFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlRenderingBackgroundTask :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlRenderingBackgroundTask>
    {
        IXamlRenderingBackgroundTask(std::nullptr_t = nullptr) noexcept {}
        IXamlRenderingBackgroundTask(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlRenderingBackgroundTask(IXamlRenderingBackgroundTask const&) noexcept = default;
        IXamlRenderingBackgroundTask(IXamlRenderingBackgroundTask&&) noexcept = default;
        IXamlRenderingBackgroundTask& operator=(IXamlRenderingBackgroundTask const&) & noexcept = default;
        IXamlRenderingBackgroundTask& operator=(IXamlRenderingBackgroundTask&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlRenderingBackgroundTaskFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlRenderingBackgroundTaskFactory>
    {
        IXamlRenderingBackgroundTaskFactory(std::nullptr_t = nullptr) noexcept {}
        IXamlRenderingBackgroundTaskFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlRenderingBackgroundTaskFactory(IXamlRenderingBackgroundTaskFactory const&) noexcept = default;
        IXamlRenderingBackgroundTaskFactory(IXamlRenderingBackgroundTaskFactory&&) noexcept = default;
        IXamlRenderingBackgroundTaskFactory& operator=(IXamlRenderingBackgroundTaskFactory const&) & noexcept = default;
        IXamlRenderingBackgroundTaskFactory& operator=(IXamlRenderingBackgroundTaskFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlRenderingBackgroundTaskOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlRenderingBackgroundTaskOverrides>
    {
        IXamlRenderingBackgroundTaskOverrides(std::nullptr_t = nullptr) noexcept {}
        IXamlRenderingBackgroundTaskOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlRenderingBackgroundTaskOverrides(IXamlRenderingBackgroundTaskOverrides const&) noexcept = default;
        IXamlRenderingBackgroundTaskOverrides(IXamlRenderingBackgroundTaskOverrides&&) noexcept = default;
        IXamlRenderingBackgroundTaskOverrides& operator=(IXamlRenderingBackgroundTaskOverrides const&) & noexcept = default;
        IXamlRenderingBackgroundTaskOverrides& operator=(IXamlRenderingBackgroundTaskOverrides&&) & noexcept = default;
    };
}
#endif
