// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Media_Core_1_H
#define WINRT_Windows_Media_Core_1_H
#include "winrt/impl/Windows.Foundation.0.h"
#include "winrt/impl/Windows.Media.0.h"
#include "winrt/impl/Windows.Media.Effects.0.h"
#include "winrt/impl/Windows.Media.Playback.0.h"
#include "winrt/impl/Windows.Media.Core.0.h"
WINRT_EXPORT namespace winrt::Windows::Media::Core
{
    struct __declspec(empty_bases) IAudioStreamDescriptor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAudioStreamDescriptor>,
        impl::require<winrt::Windows::Media::Core::IAudioStreamDescriptor, winrt::Windows::Media::Core::IMediaStreamDescriptor>
    {
        IAudioStreamDescriptor(std::nullptr_t = nullptr) noexcept {}
        IAudioStreamDescriptor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAudioStreamDescriptor(IAudioStreamDescriptor const&) noexcept = default;
        IAudioStreamDescriptor(IAudioStreamDescriptor&&) noexcept = default;
        IAudioStreamDescriptor& operator=(IAudioStreamDescriptor const&) & noexcept = default;
        IAudioStreamDescriptor& operator=(IAudioStreamDescriptor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAudioStreamDescriptor2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAudioStreamDescriptor2>,
        impl::require<winrt::Windows::Media::Core::IAudioStreamDescriptor2, winrt::Windows::Media::Core::IMediaStreamDescriptor>
    {
        IAudioStreamDescriptor2(std::nullptr_t = nullptr) noexcept {}
        IAudioStreamDescriptor2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAudioStreamDescriptor2(IAudioStreamDescriptor2 const&) noexcept = default;
        IAudioStreamDescriptor2(IAudioStreamDescriptor2&&) noexcept = default;
        IAudioStreamDescriptor2& operator=(IAudioStreamDescriptor2 const&) & noexcept = default;
        IAudioStreamDescriptor2& operator=(IAudioStreamDescriptor2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAudioStreamDescriptor3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAudioStreamDescriptor3>
    {
        IAudioStreamDescriptor3(std::nullptr_t = nullptr) noexcept {}
        IAudioStreamDescriptor3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAudioStreamDescriptor3(IAudioStreamDescriptor3 const&) noexcept = default;
        IAudioStreamDescriptor3(IAudioStreamDescriptor3&&) noexcept = default;
        IAudioStreamDescriptor3& operator=(IAudioStreamDescriptor3 const&) & noexcept = default;
        IAudioStreamDescriptor3& operator=(IAudioStreamDescriptor3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAudioStreamDescriptorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAudioStreamDescriptorFactory>
    {
        IAudioStreamDescriptorFactory(std::nullptr_t = nullptr) noexcept {}
        IAudioStreamDescriptorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAudioStreamDescriptorFactory(IAudioStreamDescriptorFactory const&) noexcept = default;
        IAudioStreamDescriptorFactory(IAudioStreamDescriptorFactory&&) noexcept = default;
        IAudioStreamDescriptorFactory& operator=(IAudioStreamDescriptorFactory const&) & noexcept = default;
        IAudioStreamDescriptorFactory& operator=(IAudioStreamDescriptorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAudioTrack :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAudioTrack>
    {
        IAudioTrack(std::nullptr_t = nullptr) noexcept {}
        IAudioTrack(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAudioTrack(IAudioTrack const&) noexcept = default;
        IAudioTrack(IAudioTrack&&) noexcept = default;
        IAudioTrack& operator=(IAudioTrack const&) & noexcept = default;
        IAudioTrack& operator=(IAudioTrack&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAudioTrackOpenFailedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAudioTrackOpenFailedEventArgs>
    {
        IAudioTrackOpenFailedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAudioTrackOpenFailedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAudioTrackOpenFailedEventArgs(IAudioTrackOpenFailedEventArgs const&) noexcept = default;
        IAudioTrackOpenFailedEventArgs(IAudioTrackOpenFailedEventArgs&&) noexcept = default;
        IAudioTrackOpenFailedEventArgs& operator=(IAudioTrackOpenFailedEventArgs const&) & noexcept = default;
        IAudioTrackOpenFailedEventArgs& operator=(IAudioTrackOpenFailedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAudioTrackSupportInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAudioTrackSupportInfo>
    {
        IAudioTrackSupportInfo(std::nullptr_t = nullptr) noexcept {}
        IAudioTrackSupportInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAudioTrackSupportInfo(IAudioTrackSupportInfo const&) noexcept = default;
        IAudioTrackSupportInfo(IAudioTrackSupportInfo&&) noexcept = default;
        IAudioTrackSupportInfo& operator=(IAudioTrackSupportInfo const&) & noexcept = default;
        IAudioTrackSupportInfo& operator=(IAudioTrackSupportInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IChapterCue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IChapterCue>,
        impl::require<winrt::Windows::Media::Core::IChapterCue, winrt::Windows::Media::Core::IMediaCue>
    {
        IChapterCue(std::nullptr_t = nullptr) noexcept {}
        IChapterCue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IChapterCue(IChapterCue const&) noexcept = default;
        IChapterCue(IChapterCue&&) noexcept = default;
        IChapterCue& operator=(IChapterCue const&) & noexcept = default;
        IChapterCue& operator=(IChapterCue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICodecInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICodecInfo>
    {
        ICodecInfo(std::nullptr_t = nullptr) noexcept {}
        ICodecInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICodecInfo(ICodecInfo const&) noexcept = default;
        ICodecInfo(ICodecInfo&&) noexcept = default;
        ICodecInfo& operator=(ICodecInfo const&) & noexcept = default;
        ICodecInfo& operator=(ICodecInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICodecQuery :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICodecQuery>
    {
        ICodecQuery(std::nullptr_t = nullptr) noexcept {}
        ICodecQuery(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICodecQuery(ICodecQuery const&) noexcept = default;
        ICodecQuery(ICodecQuery&&) noexcept = default;
        ICodecQuery& operator=(ICodecQuery const&) & noexcept = default;
        ICodecQuery& operator=(ICodecQuery&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICodecSubtypesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICodecSubtypesStatics>
    {
        ICodecSubtypesStatics(std::nullptr_t = nullptr) noexcept {}
        ICodecSubtypesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICodecSubtypesStatics(ICodecSubtypesStatics const&) noexcept = default;
        ICodecSubtypesStatics(ICodecSubtypesStatics&&) noexcept = default;
        ICodecSubtypesStatics& operator=(ICodecSubtypesStatics const&) & noexcept = default;
        ICodecSubtypesStatics& operator=(ICodecSubtypesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataCue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataCue>,
        impl::require<winrt::Windows::Media::Core::IDataCue, winrt::Windows::Media::Core::IMediaCue>
    {
        IDataCue(std::nullptr_t = nullptr) noexcept {}
        IDataCue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataCue(IDataCue const&) noexcept = default;
        IDataCue(IDataCue&&) noexcept = default;
        IDataCue& operator=(IDataCue const&) & noexcept = default;
        IDataCue& operator=(IDataCue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataCue2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataCue2>,
        impl::require<winrt::Windows::Media::Core::IDataCue2, winrt::Windows::Media::Core::IMediaCue, winrt::Windows::Media::Core::IDataCue>
    {
        IDataCue2(std::nullptr_t = nullptr) noexcept {}
        IDataCue2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataCue2(IDataCue2 const&) noexcept = default;
        IDataCue2(IDataCue2&&) noexcept = default;
        IDataCue2& operator=(IDataCue2 const&) & noexcept = default;
        IDataCue2& operator=(IDataCue2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFaceDetectedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFaceDetectedEventArgs>
    {
        IFaceDetectedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IFaceDetectedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFaceDetectedEventArgs(IFaceDetectedEventArgs const&) noexcept = default;
        IFaceDetectedEventArgs(IFaceDetectedEventArgs&&) noexcept = default;
        IFaceDetectedEventArgs& operator=(IFaceDetectedEventArgs const&) & noexcept = default;
        IFaceDetectedEventArgs& operator=(IFaceDetectedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFaceDetectionEffect :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFaceDetectionEffect>,
        impl::require<winrt::Windows::Media::Core::IFaceDetectionEffect, winrt::Windows::Media::IMediaExtension>
    {
        IFaceDetectionEffect(std::nullptr_t = nullptr) noexcept {}
        IFaceDetectionEffect(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFaceDetectionEffect(IFaceDetectionEffect const&) noexcept = default;
        IFaceDetectionEffect(IFaceDetectionEffect&&) noexcept = default;
        IFaceDetectionEffect& operator=(IFaceDetectionEffect const&) & noexcept = default;
        IFaceDetectionEffect& operator=(IFaceDetectionEffect&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFaceDetectionEffectDefinition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFaceDetectionEffectDefinition>,
        impl::require<winrt::Windows::Media::Core::IFaceDetectionEffectDefinition, winrt::Windows::Media::Effects::IVideoEffectDefinition>
    {
        IFaceDetectionEffectDefinition(std::nullptr_t = nullptr) noexcept {}
        IFaceDetectionEffectDefinition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFaceDetectionEffectDefinition(IFaceDetectionEffectDefinition const&) noexcept = default;
        IFaceDetectionEffectDefinition(IFaceDetectionEffectDefinition&&) noexcept = default;
        IFaceDetectionEffectDefinition& operator=(IFaceDetectionEffectDefinition const&) & noexcept = default;
        IFaceDetectionEffectDefinition& operator=(IFaceDetectionEffectDefinition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFaceDetectionEffectFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFaceDetectionEffectFrame>,
        impl::require<winrt::Windows::Media::Core::IFaceDetectionEffectFrame, winrt::Windows::Foundation::IClosable, winrt::Windows::Media::IMediaFrame>
    {
        IFaceDetectionEffectFrame(std::nullptr_t = nullptr) noexcept {}
        IFaceDetectionEffectFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFaceDetectionEffectFrame(IFaceDetectionEffectFrame const&) noexcept = default;
        IFaceDetectionEffectFrame(IFaceDetectionEffectFrame&&) noexcept = default;
        IFaceDetectionEffectFrame& operator=(IFaceDetectionEffectFrame const&) & noexcept = default;
        IFaceDetectionEffectFrame& operator=(IFaceDetectionEffectFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHighDynamicRangeControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHighDynamicRangeControl>
    {
        IHighDynamicRangeControl(std::nullptr_t = nullptr) noexcept {}
        IHighDynamicRangeControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHighDynamicRangeControl(IHighDynamicRangeControl const&) noexcept = default;
        IHighDynamicRangeControl(IHighDynamicRangeControl&&) noexcept = default;
        IHighDynamicRangeControl& operator=(IHighDynamicRangeControl const&) & noexcept = default;
        IHighDynamicRangeControl& operator=(IHighDynamicRangeControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHighDynamicRangeOutput :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHighDynamicRangeOutput>
    {
        IHighDynamicRangeOutput(std::nullptr_t = nullptr) noexcept {}
        IHighDynamicRangeOutput(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHighDynamicRangeOutput(IHighDynamicRangeOutput const&) noexcept = default;
        IHighDynamicRangeOutput(IHighDynamicRangeOutput&&) noexcept = default;
        IHighDynamicRangeOutput& operator=(IHighDynamicRangeOutput const&) & noexcept = default;
        IHighDynamicRangeOutput& operator=(IHighDynamicRangeOutput&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IImageCue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageCue>,
        impl::require<winrt::Windows::Media::Core::IImageCue, winrt::Windows::Media::Core::IMediaCue>
    {
        IImageCue(std::nullptr_t = nullptr) noexcept {}
        IImageCue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImageCue(IImageCue const&) noexcept = default;
        IImageCue(IImageCue&&) noexcept = default;
        IImageCue& operator=(IImageCue const&) & noexcept = default;
        IImageCue& operator=(IImageCue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInitializeMediaStreamSourceRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInitializeMediaStreamSourceRequestedEventArgs>
    {
        IInitializeMediaStreamSourceRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInitializeMediaStreamSourceRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInitializeMediaStreamSourceRequestedEventArgs(IInitializeMediaStreamSourceRequestedEventArgs const&) noexcept = default;
        IInitializeMediaStreamSourceRequestedEventArgs(IInitializeMediaStreamSourceRequestedEventArgs&&) noexcept = default;
        IInitializeMediaStreamSourceRequestedEventArgs& operator=(IInitializeMediaStreamSourceRequestedEventArgs const&) & noexcept = default;
        IInitializeMediaStreamSourceRequestedEventArgs& operator=(IInitializeMediaStreamSourceRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILowLightFusionResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILowLightFusionResult>
    {
        ILowLightFusionResult(std::nullptr_t = nullptr) noexcept {}
        ILowLightFusionResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILowLightFusionResult(ILowLightFusionResult const&) noexcept = default;
        ILowLightFusionResult(ILowLightFusionResult&&) noexcept = default;
        ILowLightFusionResult& operator=(ILowLightFusionResult const&) & noexcept = default;
        ILowLightFusionResult& operator=(ILowLightFusionResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILowLightFusionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILowLightFusionStatics>
    {
        ILowLightFusionStatics(std::nullptr_t = nullptr) noexcept {}
        ILowLightFusionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILowLightFusionStatics(ILowLightFusionStatics const&) noexcept = default;
        ILowLightFusionStatics(ILowLightFusionStatics&&) noexcept = default;
        ILowLightFusionStatics& operator=(ILowLightFusionStatics const&) & noexcept = default;
        ILowLightFusionStatics& operator=(ILowLightFusionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaBinder :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaBinder>
    {
        IMediaBinder(std::nullptr_t = nullptr) noexcept {}
        IMediaBinder(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaBinder(IMediaBinder const&) noexcept = default;
        IMediaBinder(IMediaBinder&&) noexcept = default;
        IMediaBinder& operator=(IMediaBinder const&) & noexcept = default;
        IMediaBinder& operator=(IMediaBinder&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaBindingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaBindingEventArgs>
    {
        IMediaBindingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMediaBindingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaBindingEventArgs(IMediaBindingEventArgs const&) noexcept = default;
        IMediaBindingEventArgs(IMediaBindingEventArgs&&) noexcept = default;
        IMediaBindingEventArgs& operator=(IMediaBindingEventArgs const&) & noexcept = default;
        IMediaBindingEventArgs& operator=(IMediaBindingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaBindingEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaBindingEventArgs2>
    {
        IMediaBindingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IMediaBindingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaBindingEventArgs2(IMediaBindingEventArgs2 const&) noexcept = default;
        IMediaBindingEventArgs2(IMediaBindingEventArgs2&&) noexcept = default;
        IMediaBindingEventArgs2& operator=(IMediaBindingEventArgs2 const&) & noexcept = default;
        IMediaBindingEventArgs2& operator=(IMediaBindingEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaBindingEventArgs3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaBindingEventArgs3>
    {
        IMediaBindingEventArgs3(std::nullptr_t = nullptr) noexcept {}
        IMediaBindingEventArgs3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaBindingEventArgs3(IMediaBindingEventArgs3 const&) noexcept = default;
        IMediaBindingEventArgs3(IMediaBindingEventArgs3&&) noexcept = default;
        IMediaBindingEventArgs3& operator=(IMediaBindingEventArgs3 const&) & noexcept = default;
        IMediaBindingEventArgs3& operator=(IMediaBindingEventArgs3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaCue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaCue>
    {
        IMediaCue(std::nullptr_t = nullptr) noexcept {}
        IMediaCue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaCue(IMediaCue const&) noexcept = default;
        IMediaCue(IMediaCue&&) noexcept = default;
        IMediaCue& operator=(IMediaCue const&) & noexcept = default;
        IMediaCue& operator=(IMediaCue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaCueEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaCueEventArgs>
    {
        IMediaCueEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMediaCueEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaCueEventArgs(IMediaCueEventArgs const&) noexcept = default;
        IMediaCueEventArgs(IMediaCueEventArgs&&) noexcept = default;
        IMediaCueEventArgs& operator=(IMediaCueEventArgs const&) & noexcept = default;
        IMediaCueEventArgs& operator=(IMediaCueEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSource>
    {
        IMediaSource(std::nullptr_t = nullptr) noexcept {}
        IMediaSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSource(IMediaSource const&) noexcept = default;
        IMediaSource(IMediaSource&&) noexcept = default;
        IMediaSource& operator=(IMediaSource const&) & noexcept = default;
        IMediaSource& operator=(IMediaSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSource2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSource2>,
        impl::require<winrt::Windows::Media::Core::IMediaSource2, winrt::Windows::Media::Playback::IMediaPlaybackSource, winrt::Windows::Foundation::IClosable>
    {
        IMediaSource2(std::nullptr_t = nullptr) noexcept {}
        IMediaSource2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSource2(IMediaSource2 const&) noexcept = default;
        IMediaSource2(IMediaSource2&&) noexcept = default;
        IMediaSource2& operator=(IMediaSource2 const&) & noexcept = default;
        IMediaSource2& operator=(IMediaSource2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSource3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSource3>,
        impl::require<winrt::Windows::Media::Core::IMediaSource3, winrt::Windows::Media::Playback::IMediaPlaybackSource, winrt::Windows::Foundation::IClosable, winrt::Windows::Media::Core::IMediaSource2>
    {
        IMediaSource3(std::nullptr_t = nullptr) noexcept {}
        IMediaSource3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSource3(IMediaSource3 const&) noexcept = default;
        IMediaSource3(IMediaSource3&&) noexcept = default;
        IMediaSource3& operator=(IMediaSource3 const&) & noexcept = default;
        IMediaSource3& operator=(IMediaSource3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSource4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSource4>,
        impl::require<winrt::Windows::Media::Core::IMediaSource4, winrt::Windows::Media::Playback::IMediaPlaybackSource, winrt::Windows::Foundation::IClosable, winrt::Windows::Media::Core::IMediaSource2, winrt::Windows::Media::Core::IMediaSource3>
    {
        IMediaSource4(std::nullptr_t = nullptr) noexcept {}
        IMediaSource4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSource4(IMediaSource4 const&) noexcept = default;
        IMediaSource4(IMediaSource4&&) noexcept = default;
        IMediaSource4& operator=(IMediaSource4 const&) & noexcept = default;
        IMediaSource4& operator=(IMediaSource4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSource5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSource5>
    {
        IMediaSource5(std::nullptr_t = nullptr) noexcept {}
        IMediaSource5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSource5(IMediaSource5 const&) noexcept = default;
        IMediaSource5(IMediaSource5&&) noexcept = default;
        IMediaSource5& operator=(IMediaSource5 const&) & noexcept = default;
        IMediaSource5& operator=(IMediaSource5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSourceAppServiceConnection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSourceAppServiceConnection>
    {
        IMediaSourceAppServiceConnection(std::nullptr_t = nullptr) noexcept {}
        IMediaSourceAppServiceConnection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSourceAppServiceConnection(IMediaSourceAppServiceConnection const&) noexcept = default;
        IMediaSourceAppServiceConnection(IMediaSourceAppServiceConnection&&) noexcept = default;
        IMediaSourceAppServiceConnection& operator=(IMediaSourceAppServiceConnection const&) & noexcept = default;
        IMediaSourceAppServiceConnection& operator=(IMediaSourceAppServiceConnection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSourceAppServiceConnectionFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSourceAppServiceConnectionFactory>
    {
        IMediaSourceAppServiceConnectionFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaSourceAppServiceConnectionFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSourceAppServiceConnectionFactory(IMediaSourceAppServiceConnectionFactory const&) noexcept = default;
        IMediaSourceAppServiceConnectionFactory(IMediaSourceAppServiceConnectionFactory&&) noexcept = default;
        IMediaSourceAppServiceConnectionFactory& operator=(IMediaSourceAppServiceConnectionFactory const&) & noexcept = default;
        IMediaSourceAppServiceConnectionFactory& operator=(IMediaSourceAppServiceConnectionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSourceError :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSourceError>
    {
        IMediaSourceError(std::nullptr_t = nullptr) noexcept {}
        IMediaSourceError(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSourceError(IMediaSourceError const&) noexcept = default;
        IMediaSourceError(IMediaSourceError&&) noexcept = default;
        IMediaSourceError& operator=(IMediaSourceError const&) & noexcept = default;
        IMediaSourceError& operator=(IMediaSourceError&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSourceOpenOperationCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSourceOpenOperationCompletedEventArgs>
    {
        IMediaSourceOpenOperationCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMediaSourceOpenOperationCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSourceOpenOperationCompletedEventArgs(IMediaSourceOpenOperationCompletedEventArgs const&) noexcept = default;
        IMediaSourceOpenOperationCompletedEventArgs(IMediaSourceOpenOperationCompletedEventArgs&&) noexcept = default;
        IMediaSourceOpenOperationCompletedEventArgs& operator=(IMediaSourceOpenOperationCompletedEventArgs const&) & noexcept = default;
        IMediaSourceOpenOperationCompletedEventArgs& operator=(IMediaSourceOpenOperationCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSourceStateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSourceStateChangedEventArgs>
    {
        IMediaSourceStateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMediaSourceStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSourceStateChangedEventArgs(IMediaSourceStateChangedEventArgs const&) noexcept = default;
        IMediaSourceStateChangedEventArgs(IMediaSourceStateChangedEventArgs&&) noexcept = default;
        IMediaSourceStateChangedEventArgs& operator=(IMediaSourceStateChangedEventArgs const&) & noexcept = default;
        IMediaSourceStateChangedEventArgs& operator=(IMediaSourceStateChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSourceStatics>
    {
        IMediaSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSourceStatics(IMediaSourceStatics const&) noexcept = default;
        IMediaSourceStatics(IMediaSourceStatics&&) noexcept = default;
        IMediaSourceStatics& operator=(IMediaSourceStatics const&) & noexcept = default;
        IMediaSourceStatics& operator=(IMediaSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSourceStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSourceStatics2>
    {
        IMediaSourceStatics2(std::nullptr_t = nullptr) noexcept {}
        IMediaSourceStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSourceStatics2(IMediaSourceStatics2 const&) noexcept = default;
        IMediaSourceStatics2(IMediaSourceStatics2&&) noexcept = default;
        IMediaSourceStatics2& operator=(IMediaSourceStatics2 const&) & noexcept = default;
        IMediaSourceStatics2& operator=(IMediaSourceStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSourceStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSourceStatics3>
    {
        IMediaSourceStatics3(std::nullptr_t = nullptr) noexcept {}
        IMediaSourceStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSourceStatics3(IMediaSourceStatics3 const&) noexcept = default;
        IMediaSourceStatics3(IMediaSourceStatics3&&) noexcept = default;
        IMediaSourceStatics3& operator=(IMediaSourceStatics3 const&) & noexcept = default;
        IMediaSourceStatics3& operator=(IMediaSourceStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaSourceStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaSourceStatics4>
    {
        IMediaSourceStatics4(std::nullptr_t = nullptr) noexcept {}
        IMediaSourceStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaSourceStatics4(IMediaSourceStatics4 const&) noexcept = default;
        IMediaSourceStatics4(IMediaSourceStatics4&&) noexcept = default;
        IMediaSourceStatics4& operator=(IMediaSourceStatics4 const&) & noexcept = default;
        IMediaSourceStatics4& operator=(IMediaSourceStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamDescriptor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamDescriptor>
    {
        IMediaStreamDescriptor(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamDescriptor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamDescriptor(IMediaStreamDescriptor const&) noexcept = default;
        IMediaStreamDescriptor(IMediaStreamDescriptor&&) noexcept = default;
        IMediaStreamDescriptor& operator=(IMediaStreamDescriptor const&) & noexcept = default;
        IMediaStreamDescriptor& operator=(IMediaStreamDescriptor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamDescriptor2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamDescriptor2>,
        impl::require<winrt::Windows::Media::Core::IMediaStreamDescriptor2, winrt::Windows::Media::Core::IMediaStreamDescriptor>
    {
        IMediaStreamDescriptor2(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamDescriptor2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamDescriptor2(IMediaStreamDescriptor2 const&) noexcept = default;
        IMediaStreamDescriptor2(IMediaStreamDescriptor2&&) noexcept = default;
        IMediaStreamDescriptor2& operator=(IMediaStreamDescriptor2 const&) & noexcept = default;
        IMediaStreamDescriptor2& operator=(IMediaStreamDescriptor2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSample :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSample>
    {
        IMediaStreamSample(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSample(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSample(IMediaStreamSample const&) noexcept = default;
        IMediaStreamSample(IMediaStreamSample&&) noexcept = default;
        IMediaStreamSample& operator=(IMediaStreamSample const&) & noexcept = default;
        IMediaStreamSample& operator=(IMediaStreamSample&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSample2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSample2>
    {
        IMediaStreamSample2(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSample2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSample2(IMediaStreamSample2 const&) noexcept = default;
        IMediaStreamSample2(IMediaStreamSample2&&) noexcept = default;
        IMediaStreamSample2& operator=(IMediaStreamSample2 const&) & noexcept = default;
        IMediaStreamSample2& operator=(IMediaStreamSample2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSampleProtectionProperties :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSampleProtectionProperties>
    {
        IMediaStreamSampleProtectionProperties(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSampleProtectionProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSampleProtectionProperties(IMediaStreamSampleProtectionProperties const&) noexcept = default;
        IMediaStreamSampleProtectionProperties(IMediaStreamSampleProtectionProperties&&) noexcept = default;
        IMediaStreamSampleProtectionProperties& operator=(IMediaStreamSampleProtectionProperties const&) & noexcept = default;
        IMediaStreamSampleProtectionProperties& operator=(IMediaStreamSampleProtectionProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSampleStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSampleStatics>
    {
        IMediaStreamSampleStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSampleStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSampleStatics(IMediaStreamSampleStatics const&) noexcept = default;
        IMediaStreamSampleStatics(IMediaStreamSampleStatics&&) noexcept = default;
        IMediaStreamSampleStatics& operator=(IMediaStreamSampleStatics const&) & noexcept = default;
        IMediaStreamSampleStatics& operator=(IMediaStreamSampleStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSampleStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSampleStatics2>
    {
        IMediaStreamSampleStatics2(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSampleStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSampleStatics2(IMediaStreamSampleStatics2 const&) noexcept = default;
        IMediaStreamSampleStatics2(IMediaStreamSampleStatics2&&) noexcept = default;
        IMediaStreamSampleStatics2& operator=(IMediaStreamSampleStatics2 const&) & noexcept = default;
        IMediaStreamSampleStatics2& operator=(IMediaStreamSampleStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSource>,
        impl::require<winrt::Windows::Media::Core::IMediaStreamSource, winrt::Windows::Media::Core::IMediaSource>
    {
        IMediaStreamSource(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSource(IMediaStreamSource const&) noexcept = default;
        IMediaStreamSource(IMediaStreamSource&&) noexcept = default;
        IMediaStreamSource& operator=(IMediaStreamSource const&) & noexcept = default;
        IMediaStreamSource& operator=(IMediaStreamSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSource2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSource2>,
        impl::require<winrt::Windows::Media::Core::IMediaStreamSource2, winrt::Windows::Media::Core::IMediaSource, winrt::Windows::Media::Core::IMediaStreamSource>
    {
        IMediaStreamSource2(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSource2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSource2(IMediaStreamSource2 const&) noexcept = default;
        IMediaStreamSource2(IMediaStreamSource2&&) noexcept = default;
        IMediaStreamSource2& operator=(IMediaStreamSource2 const&) & noexcept = default;
        IMediaStreamSource2& operator=(IMediaStreamSource2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSource3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSource3>,
        impl::require<winrt::Windows::Media::Core::IMediaStreamSource3, winrt::Windows::Media::Core::IMediaSource, winrt::Windows::Media::Core::IMediaStreamSource>
    {
        IMediaStreamSource3(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSource3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSource3(IMediaStreamSource3 const&) noexcept = default;
        IMediaStreamSource3(IMediaStreamSource3&&) noexcept = default;
        IMediaStreamSource3& operator=(IMediaStreamSource3 const&) & noexcept = default;
        IMediaStreamSource3& operator=(IMediaStreamSource3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSource4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSource4>,
        impl::require<winrt::Windows::Media::Core::IMediaStreamSource4, winrt::Windows::Media::Core::IMediaSource, winrt::Windows::Media::Core::IMediaStreamSource>
    {
        IMediaStreamSource4(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSource4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSource4(IMediaStreamSource4 const&) noexcept = default;
        IMediaStreamSource4(IMediaStreamSource4&&) noexcept = default;
        IMediaStreamSource4& operator=(IMediaStreamSource4 const&) & noexcept = default;
        IMediaStreamSource4& operator=(IMediaStreamSource4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceClosedEventArgs>
    {
        IMediaStreamSourceClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceClosedEventArgs(IMediaStreamSourceClosedEventArgs const&) noexcept = default;
        IMediaStreamSourceClosedEventArgs(IMediaStreamSourceClosedEventArgs&&) noexcept = default;
        IMediaStreamSourceClosedEventArgs& operator=(IMediaStreamSourceClosedEventArgs const&) & noexcept = default;
        IMediaStreamSourceClosedEventArgs& operator=(IMediaStreamSourceClosedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceClosedRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceClosedRequest>
    {
        IMediaStreamSourceClosedRequest(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceClosedRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceClosedRequest(IMediaStreamSourceClosedRequest const&) noexcept = default;
        IMediaStreamSourceClosedRequest(IMediaStreamSourceClosedRequest&&) noexcept = default;
        IMediaStreamSourceClosedRequest& operator=(IMediaStreamSourceClosedRequest const&) & noexcept = default;
        IMediaStreamSourceClosedRequest& operator=(IMediaStreamSourceClosedRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceFactory>
    {
        IMediaStreamSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceFactory(IMediaStreamSourceFactory const&) noexcept = default;
        IMediaStreamSourceFactory(IMediaStreamSourceFactory&&) noexcept = default;
        IMediaStreamSourceFactory& operator=(IMediaStreamSourceFactory const&) & noexcept = default;
        IMediaStreamSourceFactory& operator=(IMediaStreamSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceSampleRenderedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceSampleRenderedEventArgs>
    {
        IMediaStreamSourceSampleRenderedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceSampleRenderedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceSampleRenderedEventArgs(IMediaStreamSourceSampleRenderedEventArgs const&) noexcept = default;
        IMediaStreamSourceSampleRenderedEventArgs(IMediaStreamSourceSampleRenderedEventArgs&&) noexcept = default;
        IMediaStreamSourceSampleRenderedEventArgs& operator=(IMediaStreamSourceSampleRenderedEventArgs const&) & noexcept = default;
        IMediaStreamSourceSampleRenderedEventArgs& operator=(IMediaStreamSourceSampleRenderedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceSampleRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceSampleRequest>
    {
        IMediaStreamSourceSampleRequest(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceSampleRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceSampleRequest(IMediaStreamSourceSampleRequest const&) noexcept = default;
        IMediaStreamSourceSampleRequest(IMediaStreamSourceSampleRequest&&) noexcept = default;
        IMediaStreamSourceSampleRequest& operator=(IMediaStreamSourceSampleRequest const&) & noexcept = default;
        IMediaStreamSourceSampleRequest& operator=(IMediaStreamSourceSampleRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceSampleRequestDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceSampleRequestDeferral>
    {
        IMediaStreamSourceSampleRequestDeferral(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceSampleRequestDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceSampleRequestDeferral(IMediaStreamSourceSampleRequestDeferral const&) noexcept = default;
        IMediaStreamSourceSampleRequestDeferral(IMediaStreamSourceSampleRequestDeferral&&) noexcept = default;
        IMediaStreamSourceSampleRequestDeferral& operator=(IMediaStreamSourceSampleRequestDeferral const&) & noexcept = default;
        IMediaStreamSourceSampleRequestDeferral& operator=(IMediaStreamSourceSampleRequestDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceSampleRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceSampleRequestedEventArgs>
    {
        IMediaStreamSourceSampleRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceSampleRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceSampleRequestedEventArgs(IMediaStreamSourceSampleRequestedEventArgs const&) noexcept = default;
        IMediaStreamSourceSampleRequestedEventArgs(IMediaStreamSourceSampleRequestedEventArgs&&) noexcept = default;
        IMediaStreamSourceSampleRequestedEventArgs& operator=(IMediaStreamSourceSampleRequestedEventArgs const&) & noexcept = default;
        IMediaStreamSourceSampleRequestedEventArgs& operator=(IMediaStreamSourceSampleRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceStartingEventArgs>
    {
        IMediaStreamSourceStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceStartingEventArgs(IMediaStreamSourceStartingEventArgs const&) noexcept = default;
        IMediaStreamSourceStartingEventArgs(IMediaStreamSourceStartingEventArgs&&) noexcept = default;
        IMediaStreamSourceStartingEventArgs& operator=(IMediaStreamSourceStartingEventArgs const&) & noexcept = default;
        IMediaStreamSourceStartingEventArgs& operator=(IMediaStreamSourceStartingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceStartingRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceStartingRequest>
    {
        IMediaStreamSourceStartingRequest(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceStartingRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceStartingRequest(IMediaStreamSourceStartingRequest const&) noexcept = default;
        IMediaStreamSourceStartingRequest(IMediaStreamSourceStartingRequest&&) noexcept = default;
        IMediaStreamSourceStartingRequest& operator=(IMediaStreamSourceStartingRequest const&) & noexcept = default;
        IMediaStreamSourceStartingRequest& operator=(IMediaStreamSourceStartingRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceStartingRequestDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceStartingRequestDeferral>
    {
        IMediaStreamSourceStartingRequestDeferral(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceStartingRequestDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceStartingRequestDeferral(IMediaStreamSourceStartingRequestDeferral const&) noexcept = default;
        IMediaStreamSourceStartingRequestDeferral(IMediaStreamSourceStartingRequestDeferral&&) noexcept = default;
        IMediaStreamSourceStartingRequestDeferral& operator=(IMediaStreamSourceStartingRequestDeferral const&) & noexcept = default;
        IMediaStreamSourceStartingRequestDeferral& operator=(IMediaStreamSourceStartingRequestDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceSwitchStreamsRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceSwitchStreamsRequest>
    {
        IMediaStreamSourceSwitchStreamsRequest(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceSwitchStreamsRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceSwitchStreamsRequest(IMediaStreamSourceSwitchStreamsRequest const&) noexcept = default;
        IMediaStreamSourceSwitchStreamsRequest(IMediaStreamSourceSwitchStreamsRequest&&) noexcept = default;
        IMediaStreamSourceSwitchStreamsRequest& operator=(IMediaStreamSourceSwitchStreamsRequest const&) & noexcept = default;
        IMediaStreamSourceSwitchStreamsRequest& operator=(IMediaStreamSourceSwitchStreamsRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceSwitchStreamsRequestDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceSwitchStreamsRequestDeferral>
    {
        IMediaStreamSourceSwitchStreamsRequestDeferral(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceSwitchStreamsRequestDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceSwitchStreamsRequestDeferral(IMediaStreamSourceSwitchStreamsRequestDeferral const&) noexcept = default;
        IMediaStreamSourceSwitchStreamsRequestDeferral(IMediaStreamSourceSwitchStreamsRequestDeferral&&) noexcept = default;
        IMediaStreamSourceSwitchStreamsRequestDeferral& operator=(IMediaStreamSourceSwitchStreamsRequestDeferral const&) & noexcept = default;
        IMediaStreamSourceSwitchStreamsRequestDeferral& operator=(IMediaStreamSourceSwitchStreamsRequestDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaStreamSourceSwitchStreamsRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaStreamSourceSwitchStreamsRequestedEventArgs>
    {
        IMediaStreamSourceSwitchStreamsRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMediaStreamSourceSwitchStreamsRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaStreamSourceSwitchStreamsRequestedEventArgs(IMediaStreamSourceSwitchStreamsRequestedEventArgs const&) noexcept = default;
        IMediaStreamSourceSwitchStreamsRequestedEventArgs(IMediaStreamSourceSwitchStreamsRequestedEventArgs&&) noexcept = default;
        IMediaStreamSourceSwitchStreamsRequestedEventArgs& operator=(IMediaStreamSourceSwitchStreamsRequestedEventArgs const&) & noexcept = default;
        IMediaStreamSourceSwitchStreamsRequestedEventArgs& operator=(IMediaStreamSourceSwitchStreamsRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTrack :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTrack>
    {
        IMediaTrack(std::nullptr_t = nullptr) noexcept {}
        IMediaTrack(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTrack(IMediaTrack const&) noexcept = default;
        IMediaTrack(IMediaTrack&&) noexcept = default;
        IMediaTrack& operator=(IMediaTrack const&) & noexcept = default;
        IMediaTrack& operator=(IMediaTrack&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMseSourceBuffer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMseSourceBuffer>
    {
        IMseSourceBuffer(std::nullptr_t = nullptr) noexcept {}
        IMseSourceBuffer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMseSourceBuffer(IMseSourceBuffer const&) noexcept = default;
        IMseSourceBuffer(IMseSourceBuffer&&) noexcept = default;
        IMseSourceBuffer& operator=(IMseSourceBuffer const&) & noexcept = default;
        IMseSourceBuffer& operator=(IMseSourceBuffer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMseSourceBufferList :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMseSourceBufferList>
    {
        IMseSourceBufferList(std::nullptr_t = nullptr) noexcept {}
        IMseSourceBufferList(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMseSourceBufferList(IMseSourceBufferList const&) noexcept = default;
        IMseSourceBufferList(IMseSourceBufferList&&) noexcept = default;
        IMseSourceBufferList& operator=(IMseSourceBufferList const&) & noexcept = default;
        IMseSourceBufferList& operator=(IMseSourceBufferList&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMseStreamSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMseStreamSource>,
        impl::require<winrt::Windows::Media::Core::IMseStreamSource, winrt::Windows::Media::Core::IMediaSource>
    {
        IMseStreamSource(std::nullptr_t = nullptr) noexcept {}
        IMseStreamSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMseStreamSource(IMseStreamSource const&) noexcept = default;
        IMseStreamSource(IMseStreamSource&&) noexcept = default;
        IMseStreamSource& operator=(IMseStreamSource const&) & noexcept = default;
        IMseStreamSource& operator=(IMseStreamSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMseStreamSource2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMseStreamSource2>
    {
        IMseStreamSource2(std::nullptr_t = nullptr) noexcept {}
        IMseStreamSource2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMseStreamSource2(IMseStreamSource2 const&) noexcept = default;
        IMseStreamSource2(IMseStreamSource2&&) noexcept = default;
        IMseStreamSource2& operator=(IMseStreamSource2 const&) & noexcept = default;
        IMseStreamSource2& operator=(IMseStreamSource2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMseStreamSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMseStreamSourceStatics>
    {
        IMseStreamSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IMseStreamSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMseStreamSourceStatics(IMseStreamSourceStatics const&) noexcept = default;
        IMseStreamSourceStatics(IMseStreamSourceStatics&&) noexcept = default;
        IMseStreamSourceStatics& operator=(IMseStreamSourceStatics const&) & noexcept = default;
        IMseStreamSourceStatics& operator=(IMseStreamSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISceneAnalysisEffect :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISceneAnalysisEffect>,
        impl::require<winrt::Windows::Media::Core::ISceneAnalysisEffect, winrt::Windows::Media::IMediaExtension>
    {
        ISceneAnalysisEffect(std::nullptr_t = nullptr) noexcept {}
        ISceneAnalysisEffect(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISceneAnalysisEffect(ISceneAnalysisEffect const&) noexcept = default;
        ISceneAnalysisEffect(ISceneAnalysisEffect&&) noexcept = default;
        ISceneAnalysisEffect& operator=(ISceneAnalysisEffect const&) & noexcept = default;
        ISceneAnalysisEffect& operator=(ISceneAnalysisEffect&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISceneAnalysisEffectFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISceneAnalysisEffectFrame>,
        impl::require<winrt::Windows::Media::Core::ISceneAnalysisEffectFrame, winrt::Windows::Foundation::IClosable, winrt::Windows::Media::IMediaFrame>
    {
        ISceneAnalysisEffectFrame(std::nullptr_t = nullptr) noexcept {}
        ISceneAnalysisEffectFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISceneAnalysisEffectFrame(ISceneAnalysisEffectFrame const&) noexcept = default;
        ISceneAnalysisEffectFrame(ISceneAnalysisEffectFrame&&) noexcept = default;
        ISceneAnalysisEffectFrame& operator=(ISceneAnalysisEffectFrame const&) & noexcept = default;
        ISceneAnalysisEffectFrame& operator=(ISceneAnalysisEffectFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISceneAnalysisEffectFrame2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISceneAnalysisEffectFrame2>,
        impl::require<winrt::Windows::Media::Core::ISceneAnalysisEffectFrame2, winrt::Windows::Foundation::IClosable, winrt::Windows::Media::IMediaFrame>
    {
        ISceneAnalysisEffectFrame2(std::nullptr_t = nullptr) noexcept {}
        ISceneAnalysisEffectFrame2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISceneAnalysisEffectFrame2(ISceneAnalysisEffectFrame2 const&) noexcept = default;
        ISceneAnalysisEffectFrame2(ISceneAnalysisEffectFrame2&&) noexcept = default;
        ISceneAnalysisEffectFrame2& operator=(ISceneAnalysisEffectFrame2 const&) & noexcept = default;
        ISceneAnalysisEffectFrame2& operator=(ISceneAnalysisEffectFrame2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISceneAnalyzedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISceneAnalyzedEventArgs>
    {
        ISceneAnalyzedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISceneAnalyzedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISceneAnalyzedEventArgs(ISceneAnalyzedEventArgs const&) noexcept = default;
        ISceneAnalyzedEventArgs(ISceneAnalyzedEventArgs&&) noexcept = default;
        ISceneAnalyzedEventArgs& operator=(ISceneAnalyzedEventArgs const&) & noexcept = default;
        ISceneAnalyzedEventArgs& operator=(ISceneAnalyzedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISingleSelectMediaTrackList :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISingleSelectMediaTrackList>
    {
        ISingleSelectMediaTrackList(std::nullptr_t = nullptr) noexcept {}
        ISingleSelectMediaTrackList(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISingleSelectMediaTrackList(ISingleSelectMediaTrackList const&) noexcept = default;
        ISingleSelectMediaTrackList(ISingleSelectMediaTrackList&&) noexcept = default;
        ISingleSelectMediaTrackList& operator=(ISingleSelectMediaTrackList const&) & noexcept = default;
        ISingleSelectMediaTrackList& operator=(ISingleSelectMediaTrackList&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpeechCue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpeechCue>,
        impl::require<winrt::Windows::Media::Core::ISpeechCue, winrt::Windows::Media::Core::IMediaCue>
    {
        ISpeechCue(std::nullptr_t = nullptr) noexcept {}
        ISpeechCue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpeechCue(ISpeechCue const&) noexcept = default;
        ISpeechCue(ISpeechCue&&) noexcept = default;
        ISpeechCue& operator=(ISpeechCue const&) & noexcept = default;
        ISpeechCue& operator=(ISpeechCue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedMetadataStreamDescriptor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedMetadataStreamDescriptor>
    {
        ITimedMetadataStreamDescriptor(std::nullptr_t = nullptr) noexcept {}
        ITimedMetadataStreamDescriptor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedMetadataStreamDescriptor(ITimedMetadataStreamDescriptor const&) noexcept = default;
        ITimedMetadataStreamDescriptor(ITimedMetadataStreamDescriptor&&) noexcept = default;
        ITimedMetadataStreamDescriptor& operator=(ITimedMetadataStreamDescriptor const&) & noexcept = default;
        ITimedMetadataStreamDescriptor& operator=(ITimedMetadataStreamDescriptor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedMetadataStreamDescriptorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedMetadataStreamDescriptorFactory>
    {
        ITimedMetadataStreamDescriptorFactory(std::nullptr_t = nullptr) noexcept {}
        ITimedMetadataStreamDescriptorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedMetadataStreamDescriptorFactory(ITimedMetadataStreamDescriptorFactory const&) noexcept = default;
        ITimedMetadataStreamDescriptorFactory(ITimedMetadataStreamDescriptorFactory&&) noexcept = default;
        ITimedMetadataStreamDescriptorFactory& operator=(ITimedMetadataStreamDescriptorFactory const&) & noexcept = default;
        ITimedMetadataStreamDescriptorFactory& operator=(ITimedMetadataStreamDescriptorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedMetadataTrack :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedMetadataTrack>,
        impl::require<winrt::Windows::Media::Core::ITimedMetadataTrack, winrt::Windows::Media::Core::IMediaTrack>
    {
        ITimedMetadataTrack(std::nullptr_t = nullptr) noexcept {}
        ITimedMetadataTrack(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedMetadataTrack(ITimedMetadataTrack const&) noexcept = default;
        ITimedMetadataTrack(ITimedMetadataTrack&&) noexcept = default;
        ITimedMetadataTrack& operator=(ITimedMetadataTrack const&) & noexcept = default;
        ITimedMetadataTrack& operator=(ITimedMetadataTrack&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedMetadataTrack2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedMetadataTrack2>,
        impl::require<winrt::Windows::Media::Core::ITimedMetadataTrack2, winrt::Windows::Media::Core::IMediaTrack, winrt::Windows::Media::Core::ITimedMetadataTrack>
    {
        ITimedMetadataTrack2(std::nullptr_t = nullptr) noexcept {}
        ITimedMetadataTrack2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedMetadataTrack2(ITimedMetadataTrack2 const&) noexcept = default;
        ITimedMetadataTrack2(ITimedMetadataTrack2&&) noexcept = default;
        ITimedMetadataTrack2& operator=(ITimedMetadataTrack2 const&) & noexcept = default;
        ITimedMetadataTrack2& operator=(ITimedMetadataTrack2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedMetadataTrackError :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedMetadataTrackError>
    {
        ITimedMetadataTrackError(std::nullptr_t = nullptr) noexcept {}
        ITimedMetadataTrackError(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedMetadataTrackError(ITimedMetadataTrackError const&) noexcept = default;
        ITimedMetadataTrackError(ITimedMetadataTrackError&&) noexcept = default;
        ITimedMetadataTrackError& operator=(ITimedMetadataTrackError const&) & noexcept = default;
        ITimedMetadataTrackError& operator=(ITimedMetadataTrackError&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedMetadataTrackFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedMetadataTrackFactory>
    {
        ITimedMetadataTrackFactory(std::nullptr_t = nullptr) noexcept {}
        ITimedMetadataTrackFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedMetadataTrackFactory(ITimedMetadataTrackFactory const&) noexcept = default;
        ITimedMetadataTrackFactory(ITimedMetadataTrackFactory&&) noexcept = default;
        ITimedMetadataTrackFactory& operator=(ITimedMetadataTrackFactory const&) & noexcept = default;
        ITimedMetadataTrackFactory& operator=(ITimedMetadataTrackFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedMetadataTrackFailedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedMetadataTrackFailedEventArgs>
    {
        ITimedMetadataTrackFailedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITimedMetadataTrackFailedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedMetadataTrackFailedEventArgs(ITimedMetadataTrackFailedEventArgs const&) noexcept = default;
        ITimedMetadataTrackFailedEventArgs(ITimedMetadataTrackFailedEventArgs&&) noexcept = default;
        ITimedMetadataTrackFailedEventArgs& operator=(ITimedMetadataTrackFailedEventArgs const&) & noexcept = default;
        ITimedMetadataTrackFailedEventArgs& operator=(ITimedMetadataTrackFailedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedMetadataTrackProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedMetadataTrackProvider>
    {
        ITimedMetadataTrackProvider(std::nullptr_t = nullptr) noexcept {}
        ITimedMetadataTrackProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedMetadataTrackProvider(ITimedMetadataTrackProvider const&) noexcept = default;
        ITimedMetadataTrackProvider(ITimedMetadataTrackProvider&&) noexcept = default;
        ITimedMetadataTrackProvider& operator=(ITimedMetadataTrackProvider const&) & noexcept = default;
        ITimedMetadataTrackProvider& operator=(ITimedMetadataTrackProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedTextCue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedTextCue>,
        impl::require<winrt::Windows::Media::Core::ITimedTextCue, winrt::Windows::Media::Core::IMediaCue>
    {
        ITimedTextCue(std::nullptr_t = nullptr) noexcept {}
        ITimedTextCue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedTextCue(ITimedTextCue const&) noexcept = default;
        ITimedTextCue(ITimedTextCue&&) noexcept = default;
        ITimedTextCue& operator=(ITimedTextCue const&) & noexcept = default;
        ITimedTextCue& operator=(ITimedTextCue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedTextLine :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedTextLine>
    {
        ITimedTextLine(std::nullptr_t = nullptr) noexcept {}
        ITimedTextLine(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedTextLine(ITimedTextLine const&) noexcept = default;
        ITimedTextLine(ITimedTextLine&&) noexcept = default;
        ITimedTextLine& operator=(ITimedTextLine const&) & noexcept = default;
        ITimedTextLine& operator=(ITimedTextLine&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedTextRegion :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedTextRegion>
    {
        ITimedTextRegion(std::nullptr_t = nullptr) noexcept {}
        ITimedTextRegion(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedTextRegion(ITimedTextRegion const&) noexcept = default;
        ITimedTextRegion(ITimedTextRegion&&) noexcept = default;
        ITimedTextRegion& operator=(ITimedTextRegion const&) & noexcept = default;
        ITimedTextRegion& operator=(ITimedTextRegion&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedTextSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedTextSource>
    {
        ITimedTextSource(std::nullptr_t = nullptr) noexcept {}
        ITimedTextSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedTextSource(ITimedTextSource const&) noexcept = default;
        ITimedTextSource(ITimedTextSource&&) noexcept = default;
        ITimedTextSource& operator=(ITimedTextSource const&) & noexcept = default;
        ITimedTextSource& operator=(ITimedTextSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedTextSourceResolveResultEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedTextSourceResolveResultEventArgs>
    {
        ITimedTextSourceResolveResultEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITimedTextSourceResolveResultEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedTextSourceResolveResultEventArgs(ITimedTextSourceResolveResultEventArgs const&) noexcept = default;
        ITimedTextSourceResolveResultEventArgs(ITimedTextSourceResolveResultEventArgs&&) noexcept = default;
        ITimedTextSourceResolveResultEventArgs& operator=(ITimedTextSourceResolveResultEventArgs const&) & noexcept = default;
        ITimedTextSourceResolveResultEventArgs& operator=(ITimedTextSourceResolveResultEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedTextSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedTextSourceStatics>
    {
        ITimedTextSourceStatics(std::nullptr_t = nullptr) noexcept {}
        ITimedTextSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedTextSourceStatics(ITimedTextSourceStatics const&) noexcept = default;
        ITimedTextSourceStatics(ITimedTextSourceStatics&&) noexcept = default;
        ITimedTextSourceStatics& operator=(ITimedTextSourceStatics const&) & noexcept = default;
        ITimedTextSourceStatics& operator=(ITimedTextSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedTextSourceStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedTextSourceStatics2>
    {
        ITimedTextSourceStatics2(std::nullptr_t = nullptr) noexcept {}
        ITimedTextSourceStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedTextSourceStatics2(ITimedTextSourceStatics2 const&) noexcept = default;
        ITimedTextSourceStatics2(ITimedTextSourceStatics2&&) noexcept = default;
        ITimedTextSourceStatics2& operator=(ITimedTextSourceStatics2 const&) & noexcept = default;
        ITimedTextSourceStatics2& operator=(ITimedTextSourceStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedTextStyle :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedTextStyle>
    {
        ITimedTextStyle(std::nullptr_t = nullptr) noexcept {}
        ITimedTextStyle(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedTextStyle(ITimedTextStyle const&) noexcept = default;
        ITimedTextStyle(ITimedTextStyle&&) noexcept = default;
        ITimedTextStyle& operator=(ITimedTextStyle const&) & noexcept = default;
        ITimedTextStyle& operator=(ITimedTextStyle&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedTextStyle2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedTextStyle2>
    {
        ITimedTextStyle2(std::nullptr_t = nullptr) noexcept {}
        ITimedTextStyle2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedTextStyle2(ITimedTextStyle2 const&) noexcept = default;
        ITimedTextStyle2(ITimedTextStyle2&&) noexcept = default;
        ITimedTextStyle2& operator=(ITimedTextStyle2 const&) & noexcept = default;
        ITimedTextStyle2& operator=(ITimedTextStyle2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimedTextSubformat :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimedTextSubformat>
    {
        ITimedTextSubformat(std::nullptr_t = nullptr) noexcept {}
        ITimedTextSubformat(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimedTextSubformat(ITimedTextSubformat const&) noexcept = default;
        ITimedTextSubformat(ITimedTextSubformat&&) noexcept = default;
        ITimedTextSubformat& operator=(ITimedTextSubformat const&) & noexcept = default;
        ITimedTextSubformat& operator=(ITimedTextSubformat&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVideoStabilizationEffect :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVideoStabilizationEffect>,
        impl::require<winrt::Windows::Media::Core::IVideoStabilizationEffect, winrt::Windows::Media::IMediaExtension>
    {
        IVideoStabilizationEffect(std::nullptr_t = nullptr) noexcept {}
        IVideoStabilizationEffect(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVideoStabilizationEffect(IVideoStabilizationEffect const&) noexcept = default;
        IVideoStabilizationEffect(IVideoStabilizationEffect&&) noexcept = default;
        IVideoStabilizationEffect& operator=(IVideoStabilizationEffect const&) & noexcept = default;
        IVideoStabilizationEffect& operator=(IVideoStabilizationEffect&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVideoStabilizationEffectEnabledChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVideoStabilizationEffectEnabledChangedEventArgs>
    {
        IVideoStabilizationEffectEnabledChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IVideoStabilizationEffectEnabledChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVideoStabilizationEffectEnabledChangedEventArgs(IVideoStabilizationEffectEnabledChangedEventArgs const&) noexcept = default;
        IVideoStabilizationEffectEnabledChangedEventArgs(IVideoStabilizationEffectEnabledChangedEventArgs&&) noexcept = default;
        IVideoStabilizationEffectEnabledChangedEventArgs& operator=(IVideoStabilizationEffectEnabledChangedEventArgs const&) & noexcept = default;
        IVideoStabilizationEffectEnabledChangedEventArgs& operator=(IVideoStabilizationEffectEnabledChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVideoStreamDescriptor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVideoStreamDescriptor>,
        impl::require<winrt::Windows::Media::Core::IVideoStreamDescriptor, winrt::Windows::Media::Core::IMediaStreamDescriptor>
    {
        IVideoStreamDescriptor(std::nullptr_t = nullptr) noexcept {}
        IVideoStreamDescriptor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVideoStreamDescriptor(IVideoStreamDescriptor const&) noexcept = default;
        IVideoStreamDescriptor(IVideoStreamDescriptor&&) noexcept = default;
        IVideoStreamDescriptor& operator=(IVideoStreamDescriptor const&) & noexcept = default;
        IVideoStreamDescriptor& operator=(IVideoStreamDescriptor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVideoStreamDescriptor2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVideoStreamDescriptor2>
    {
        IVideoStreamDescriptor2(std::nullptr_t = nullptr) noexcept {}
        IVideoStreamDescriptor2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVideoStreamDescriptor2(IVideoStreamDescriptor2 const&) noexcept = default;
        IVideoStreamDescriptor2(IVideoStreamDescriptor2&&) noexcept = default;
        IVideoStreamDescriptor2& operator=(IVideoStreamDescriptor2 const&) & noexcept = default;
        IVideoStreamDescriptor2& operator=(IVideoStreamDescriptor2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVideoStreamDescriptorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVideoStreamDescriptorFactory>
    {
        IVideoStreamDescriptorFactory(std::nullptr_t = nullptr) noexcept {}
        IVideoStreamDescriptorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVideoStreamDescriptorFactory(IVideoStreamDescriptorFactory const&) noexcept = default;
        IVideoStreamDescriptorFactory(IVideoStreamDescriptorFactory&&) noexcept = default;
        IVideoStreamDescriptorFactory& operator=(IVideoStreamDescriptorFactory const&) & noexcept = default;
        IVideoStreamDescriptorFactory& operator=(IVideoStreamDescriptorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVideoTrack :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVideoTrack>
    {
        IVideoTrack(std::nullptr_t = nullptr) noexcept {}
        IVideoTrack(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVideoTrack(IVideoTrack const&) noexcept = default;
        IVideoTrack(IVideoTrack&&) noexcept = default;
        IVideoTrack& operator=(IVideoTrack const&) & noexcept = default;
        IVideoTrack& operator=(IVideoTrack&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVideoTrackOpenFailedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVideoTrackOpenFailedEventArgs>
    {
        IVideoTrackOpenFailedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IVideoTrackOpenFailedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVideoTrackOpenFailedEventArgs(IVideoTrackOpenFailedEventArgs const&) noexcept = default;
        IVideoTrackOpenFailedEventArgs(IVideoTrackOpenFailedEventArgs&&) noexcept = default;
        IVideoTrackOpenFailedEventArgs& operator=(IVideoTrackOpenFailedEventArgs const&) & noexcept = default;
        IVideoTrackOpenFailedEventArgs& operator=(IVideoTrackOpenFailedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVideoTrackSupportInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVideoTrackSupportInfo>
    {
        IVideoTrackSupportInfo(std::nullptr_t = nullptr) noexcept {}
        IVideoTrackSupportInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVideoTrackSupportInfo(IVideoTrackSupportInfo const&) noexcept = default;
        IVideoTrackSupportInfo(IVideoTrackSupportInfo&&) noexcept = default;
        IVideoTrackSupportInfo& operator=(IVideoTrackSupportInfo const&) & noexcept = default;
        IVideoTrackSupportInfo& operator=(IVideoTrackSupportInfo&&) & noexcept = default;
    };
}
#endif
