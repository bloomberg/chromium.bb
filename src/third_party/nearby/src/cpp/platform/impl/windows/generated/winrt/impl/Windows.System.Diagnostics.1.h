// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_System_Diagnostics_1_H
#define WINRT_Windows_System_Diagnostics_1_H
#include "winrt/impl/Windows.System.Diagnostics.0.h"
WINRT_EXPORT namespace winrt::Windows::System::Diagnostics
{
    struct __declspec(empty_bases) IDiagnosticActionResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDiagnosticActionResult>
    {
        IDiagnosticActionResult(std::nullptr_t = nullptr) noexcept {}
        IDiagnosticActionResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDiagnosticActionResult(IDiagnosticActionResult const&) noexcept = default;
        IDiagnosticActionResult(IDiagnosticActionResult&&) noexcept = default;
        IDiagnosticActionResult& operator=(IDiagnosticActionResult const&) & noexcept = default;
        IDiagnosticActionResult& operator=(IDiagnosticActionResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDiagnosticInvoker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDiagnosticInvoker>
    {
        IDiagnosticInvoker(std::nullptr_t = nullptr) noexcept {}
        IDiagnosticInvoker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDiagnosticInvoker(IDiagnosticInvoker const&) noexcept = default;
        IDiagnosticInvoker(IDiagnosticInvoker&&) noexcept = default;
        IDiagnosticInvoker& operator=(IDiagnosticInvoker const&) & noexcept = default;
        IDiagnosticInvoker& operator=(IDiagnosticInvoker&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDiagnosticInvoker2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDiagnosticInvoker2>
    {
        IDiagnosticInvoker2(std::nullptr_t = nullptr) noexcept {}
        IDiagnosticInvoker2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDiagnosticInvoker2(IDiagnosticInvoker2 const&) noexcept = default;
        IDiagnosticInvoker2(IDiagnosticInvoker2&&) noexcept = default;
        IDiagnosticInvoker2& operator=(IDiagnosticInvoker2 const&) & noexcept = default;
        IDiagnosticInvoker2& operator=(IDiagnosticInvoker2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDiagnosticInvokerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDiagnosticInvokerStatics>
    {
        IDiagnosticInvokerStatics(std::nullptr_t = nullptr) noexcept {}
        IDiagnosticInvokerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDiagnosticInvokerStatics(IDiagnosticInvokerStatics const&) noexcept = default;
        IDiagnosticInvokerStatics(IDiagnosticInvokerStatics&&) noexcept = default;
        IDiagnosticInvokerStatics& operator=(IDiagnosticInvokerStatics const&) & noexcept = default;
        IDiagnosticInvokerStatics& operator=(IDiagnosticInvokerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessCpuUsage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessCpuUsage>
    {
        IProcessCpuUsage(std::nullptr_t = nullptr) noexcept {}
        IProcessCpuUsage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessCpuUsage(IProcessCpuUsage const&) noexcept = default;
        IProcessCpuUsage(IProcessCpuUsage&&) noexcept = default;
        IProcessCpuUsage& operator=(IProcessCpuUsage const&) & noexcept = default;
        IProcessCpuUsage& operator=(IProcessCpuUsage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessCpuUsageReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessCpuUsageReport>
    {
        IProcessCpuUsageReport(std::nullptr_t = nullptr) noexcept {}
        IProcessCpuUsageReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessCpuUsageReport(IProcessCpuUsageReport const&) noexcept = default;
        IProcessCpuUsageReport(IProcessCpuUsageReport&&) noexcept = default;
        IProcessCpuUsageReport& operator=(IProcessCpuUsageReport const&) & noexcept = default;
        IProcessCpuUsageReport& operator=(IProcessCpuUsageReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessDiagnosticInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessDiagnosticInfo>
    {
        IProcessDiagnosticInfo(std::nullptr_t = nullptr) noexcept {}
        IProcessDiagnosticInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessDiagnosticInfo(IProcessDiagnosticInfo const&) noexcept = default;
        IProcessDiagnosticInfo(IProcessDiagnosticInfo&&) noexcept = default;
        IProcessDiagnosticInfo& operator=(IProcessDiagnosticInfo const&) & noexcept = default;
        IProcessDiagnosticInfo& operator=(IProcessDiagnosticInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessDiagnosticInfo2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessDiagnosticInfo2>
    {
        IProcessDiagnosticInfo2(std::nullptr_t = nullptr) noexcept {}
        IProcessDiagnosticInfo2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessDiagnosticInfo2(IProcessDiagnosticInfo2 const&) noexcept = default;
        IProcessDiagnosticInfo2(IProcessDiagnosticInfo2&&) noexcept = default;
        IProcessDiagnosticInfo2& operator=(IProcessDiagnosticInfo2 const&) & noexcept = default;
        IProcessDiagnosticInfo2& operator=(IProcessDiagnosticInfo2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessDiagnosticInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessDiagnosticInfoStatics>
    {
        IProcessDiagnosticInfoStatics(std::nullptr_t = nullptr) noexcept {}
        IProcessDiagnosticInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessDiagnosticInfoStatics(IProcessDiagnosticInfoStatics const&) noexcept = default;
        IProcessDiagnosticInfoStatics(IProcessDiagnosticInfoStatics&&) noexcept = default;
        IProcessDiagnosticInfoStatics& operator=(IProcessDiagnosticInfoStatics const&) & noexcept = default;
        IProcessDiagnosticInfoStatics& operator=(IProcessDiagnosticInfoStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessDiagnosticInfoStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessDiagnosticInfoStatics2>
    {
        IProcessDiagnosticInfoStatics2(std::nullptr_t = nullptr) noexcept {}
        IProcessDiagnosticInfoStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessDiagnosticInfoStatics2(IProcessDiagnosticInfoStatics2 const&) noexcept = default;
        IProcessDiagnosticInfoStatics2(IProcessDiagnosticInfoStatics2&&) noexcept = default;
        IProcessDiagnosticInfoStatics2& operator=(IProcessDiagnosticInfoStatics2 const&) & noexcept = default;
        IProcessDiagnosticInfoStatics2& operator=(IProcessDiagnosticInfoStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessDiskUsage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessDiskUsage>
    {
        IProcessDiskUsage(std::nullptr_t = nullptr) noexcept {}
        IProcessDiskUsage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessDiskUsage(IProcessDiskUsage const&) noexcept = default;
        IProcessDiskUsage(IProcessDiskUsage&&) noexcept = default;
        IProcessDiskUsage& operator=(IProcessDiskUsage const&) & noexcept = default;
        IProcessDiskUsage& operator=(IProcessDiskUsage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessDiskUsageReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessDiskUsageReport>
    {
        IProcessDiskUsageReport(std::nullptr_t = nullptr) noexcept {}
        IProcessDiskUsageReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessDiskUsageReport(IProcessDiskUsageReport const&) noexcept = default;
        IProcessDiskUsageReport(IProcessDiskUsageReport&&) noexcept = default;
        IProcessDiskUsageReport& operator=(IProcessDiskUsageReport const&) & noexcept = default;
        IProcessDiskUsageReport& operator=(IProcessDiskUsageReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessMemoryUsage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessMemoryUsage>
    {
        IProcessMemoryUsage(std::nullptr_t = nullptr) noexcept {}
        IProcessMemoryUsage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessMemoryUsage(IProcessMemoryUsage const&) noexcept = default;
        IProcessMemoryUsage(IProcessMemoryUsage&&) noexcept = default;
        IProcessMemoryUsage& operator=(IProcessMemoryUsage const&) & noexcept = default;
        IProcessMemoryUsage& operator=(IProcessMemoryUsage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessMemoryUsageReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessMemoryUsageReport>
    {
        IProcessMemoryUsageReport(std::nullptr_t = nullptr) noexcept {}
        IProcessMemoryUsageReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessMemoryUsageReport(IProcessMemoryUsageReport const&) noexcept = default;
        IProcessMemoryUsageReport(IProcessMemoryUsageReport&&) noexcept = default;
        IProcessMemoryUsageReport& operator=(IProcessMemoryUsageReport const&) & noexcept = default;
        IProcessMemoryUsageReport& operator=(IProcessMemoryUsageReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemCpuUsage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemCpuUsage>
    {
        ISystemCpuUsage(std::nullptr_t = nullptr) noexcept {}
        ISystemCpuUsage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemCpuUsage(ISystemCpuUsage const&) noexcept = default;
        ISystemCpuUsage(ISystemCpuUsage&&) noexcept = default;
        ISystemCpuUsage& operator=(ISystemCpuUsage const&) & noexcept = default;
        ISystemCpuUsage& operator=(ISystemCpuUsage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemCpuUsageReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemCpuUsageReport>
    {
        ISystemCpuUsageReport(std::nullptr_t = nullptr) noexcept {}
        ISystemCpuUsageReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemCpuUsageReport(ISystemCpuUsageReport const&) noexcept = default;
        ISystemCpuUsageReport(ISystemCpuUsageReport&&) noexcept = default;
        ISystemCpuUsageReport& operator=(ISystemCpuUsageReport const&) & noexcept = default;
        ISystemCpuUsageReport& operator=(ISystemCpuUsageReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemDiagnosticInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemDiagnosticInfo>
    {
        ISystemDiagnosticInfo(std::nullptr_t = nullptr) noexcept {}
        ISystemDiagnosticInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemDiagnosticInfo(ISystemDiagnosticInfo const&) noexcept = default;
        ISystemDiagnosticInfo(ISystemDiagnosticInfo&&) noexcept = default;
        ISystemDiagnosticInfo& operator=(ISystemDiagnosticInfo const&) & noexcept = default;
        ISystemDiagnosticInfo& operator=(ISystemDiagnosticInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemDiagnosticInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemDiagnosticInfoStatics>
    {
        ISystemDiagnosticInfoStatics(std::nullptr_t = nullptr) noexcept {}
        ISystemDiagnosticInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemDiagnosticInfoStatics(ISystemDiagnosticInfoStatics const&) noexcept = default;
        ISystemDiagnosticInfoStatics(ISystemDiagnosticInfoStatics&&) noexcept = default;
        ISystemDiagnosticInfoStatics& operator=(ISystemDiagnosticInfoStatics const&) & noexcept = default;
        ISystemDiagnosticInfoStatics& operator=(ISystemDiagnosticInfoStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemMemoryUsage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemMemoryUsage>
    {
        ISystemMemoryUsage(std::nullptr_t = nullptr) noexcept {}
        ISystemMemoryUsage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemMemoryUsage(ISystemMemoryUsage const&) noexcept = default;
        ISystemMemoryUsage(ISystemMemoryUsage&&) noexcept = default;
        ISystemMemoryUsage& operator=(ISystemMemoryUsage const&) & noexcept = default;
        ISystemMemoryUsage& operator=(ISystemMemoryUsage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemMemoryUsageReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemMemoryUsageReport>
    {
        ISystemMemoryUsageReport(std::nullptr_t = nullptr) noexcept {}
        ISystemMemoryUsageReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemMemoryUsageReport(ISystemMemoryUsageReport const&) noexcept = default;
        ISystemMemoryUsageReport(ISystemMemoryUsageReport&&) noexcept = default;
        ISystemMemoryUsageReport& operator=(ISystemMemoryUsageReport const&) & noexcept = default;
        ISystemMemoryUsageReport& operator=(ISystemMemoryUsageReport&&) & noexcept = default;
    };
}
#endif
