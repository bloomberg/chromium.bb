// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_WindowManagement_1_H
#define WINRT_Windows_UI_WindowManagement_1_H
#include "winrt/impl/Windows.UI.WindowManagement.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::WindowManagement
{
    struct __declspec(empty_bases) IAppWindow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindow>
    {
        IAppWindow(std::nullptr_t = nullptr) noexcept {}
        IAppWindow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindow(IAppWindow const&) noexcept = default;
        IAppWindow(IAppWindow&&) noexcept = default;
        IAppWindow& operator=(IAppWindow const&) & noexcept = default;
        IAppWindow& operator=(IAppWindow&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowChangedEventArgs>
    {
        IAppWindowChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppWindowChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowChangedEventArgs(IAppWindowChangedEventArgs const&) noexcept = default;
        IAppWindowChangedEventArgs(IAppWindowChangedEventArgs&&) noexcept = default;
        IAppWindowChangedEventArgs& operator=(IAppWindowChangedEventArgs const&) & noexcept = default;
        IAppWindowChangedEventArgs& operator=(IAppWindowChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowCloseRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowCloseRequestedEventArgs>
    {
        IAppWindowCloseRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppWindowCloseRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowCloseRequestedEventArgs(IAppWindowCloseRequestedEventArgs const&) noexcept = default;
        IAppWindowCloseRequestedEventArgs(IAppWindowCloseRequestedEventArgs&&) noexcept = default;
        IAppWindowCloseRequestedEventArgs& operator=(IAppWindowCloseRequestedEventArgs const&) & noexcept = default;
        IAppWindowCloseRequestedEventArgs& operator=(IAppWindowCloseRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowClosedEventArgs>
    {
        IAppWindowClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppWindowClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowClosedEventArgs(IAppWindowClosedEventArgs const&) noexcept = default;
        IAppWindowClosedEventArgs(IAppWindowClosedEventArgs&&) noexcept = default;
        IAppWindowClosedEventArgs& operator=(IAppWindowClosedEventArgs const&) & noexcept = default;
        IAppWindowClosedEventArgs& operator=(IAppWindowClosedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowFrame>
    {
        IAppWindowFrame(std::nullptr_t = nullptr) noexcept {}
        IAppWindowFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowFrame(IAppWindowFrame const&) noexcept = default;
        IAppWindowFrame(IAppWindowFrame&&) noexcept = default;
        IAppWindowFrame& operator=(IAppWindowFrame const&) & noexcept = default;
        IAppWindowFrame& operator=(IAppWindowFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowFrameStyle :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowFrameStyle>
    {
        IAppWindowFrameStyle(std::nullptr_t = nullptr) noexcept {}
        IAppWindowFrameStyle(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowFrameStyle(IAppWindowFrameStyle const&) noexcept = default;
        IAppWindowFrameStyle(IAppWindowFrameStyle&&) noexcept = default;
        IAppWindowFrameStyle& operator=(IAppWindowFrameStyle const&) & noexcept = default;
        IAppWindowFrameStyle& operator=(IAppWindowFrameStyle&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowPlacement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowPlacement>
    {
        IAppWindowPlacement(std::nullptr_t = nullptr) noexcept {}
        IAppWindowPlacement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowPlacement(IAppWindowPlacement const&) noexcept = default;
        IAppWindowPlacement(IAppWindowPlacement&&) noexcept = default;
        IAppWindowPlacement& operator=(IAppWindowPlacement const&) & noexcept = default;
        IAppWindowPlacement& operator=(IAppWindowPlacement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowPresentationConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowPresentationConfiguration>
    {
        IAppWindowPresentationConfiguration(std::nullptr_t = nullptr) noexcept {}
        IAppWindowPresentationConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowPresentationConfiguration(IAppWindowPresentationConfiguration const&) noexcept = default;
        IAppWindowPresentationConfiguration(IAppWindowPresentationConfiguration&&) noexcept = default;
        IAppWindowPresentationConfiguration& operator=(IAppWindowPresentationConfiguration const&) & noexcept = default;
        IAppWindowPresentationConfiguration& operator=(IAppWindowPresentationConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowPresentationConfigurationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowPresentationConfigurationFactory>
    {
        IAppWindowPresentationConfigurationFactory(std::nullptr_t = nullptr) noexcept {}
        IAppWindowPresentationConfigurationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowPresentationConfigurationFactory(IAppWindowPresentationConfigurationFactory const&) noexcept = default;
        IAppWindowPresentationConfigurationFactory(IAppWindowPresentationConfigurationFactory&&) noexcept = default;
        IAppWindowPresentationConfigurationFactory& operator=(IAppWindowPresentationConfigurationFactory const&) & noexcept = default;
        IAppWindowPresentationConfigurationFactory& operator=(IAppWindowPresentationConfigurationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowPresenter>
    {
        IAppWindowPresenter(std::nullptr_t = nullptr) noexcept {}
        IAppWindowPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowPresenter(IAppWindowPresenter const&) noexcept = default;
        IAppWindowPresenter(IAppWindowPresenter&&) noexcept = default;
        IAppWindowPresenter& operator=(IAppWindowPresenter const&) & noexcept = default;
        IAppWindowPresenter& operator=(IAppWindowPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowStatics>
    {
        IAppWindowStatics(std::nullptr_t = nullptr) noexcept {}
        IAppWindowStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowStatics(IAppWindowStatics const&) noexcept = default;
        IAppWindowStatics(IAppWindowStatics&&) noexcept = default;
        IAppWindowStatics& operator=(IAppWindowStatics const&) & noexcept = default;
        IAppWindowStatics& operator=(IAppWindowStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowTitleBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowTitleBar>
    {
        IAppWindowTitleBar(std::nullptr_t = nullptr) noexcept {}
        IAppWindowTitleBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowTitleBar(IAppWindowTitleBar const&) noexcept = default;
        IAppWindowTitleBar(IAppWindowTitleBar&&) noexcept = default;
        IAppWindowTitleBar& operator=(IAppWindowTitleBar const&) & noexcept = default;
        IAppWindowTitleBar& operator=(IAppWindowTitleBar&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowTitleBarOcclusion :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowTitleBarOcclusion>
    {
        IAppWindowTitleBarOcclusion(std::nullptr_t = nullptr) noexcept {}
        IAppWindowTitleBarOcclusion(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowTitleBarOcclusion(IAppWindowTitleBarOcclusion const&) noexcept = default;
        IAppWindowTitleBarOcclusion(IAppWindowTitleBarOcclusion&&) noexcept = default;
        IAppWindowTitleBarOcclusion& operator=(IAppWindowTitleBarOcclusion const&) & noexcept = default;
        IAppWindowTitleBarOcclusion& operator=(IAppWindowTitleBarOcclusion&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppWindowTitleBarVisibility :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppWindowTitleBarVisibility>
    {
        IAppWindowTitleBarVisibility(std::nullptr_t = nullptr) noexcept {}
        IAppWindowTitleBarVisibility(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppWindowTitleBarVisibility(IAppWindowTitleBarVisibility const&) noexcept = default;
        IAppWindowTitleBarVisibility(IAppWindowTitleBarVisibility&&) noexcept = default;
        IAppWindowTitleBarVisibility& operator=(IAppWindowTitleBarVisibility const&) & noexcept = default;
        IAppWindowTitleBarVisibility& operator=(IAppWindowTitleBarVisibility&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompactOverlayPresentationConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompactOverlayPresentationConfiguration>
    {
        ICompactOverlayPresentationConfiguration(std::nullptr_t = nullptr) noexcept {}
        ICompactOverlayPresentationConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompactOverlayPresentationConfiguration(ICompactOverlayPresentationConfiguration const&) noexcept = default;
        ICompactOverlayPresentationConfiguration(ICompactOverlayPresentationConfiguration&&) noexcept = default;
        ICompactOverlayPresentationConfiguration& operator=(ICompactOverlayPresentationConfiguration const&) & noexcept = default;
        ICompactOverlayPresentationConfiguration& operator=(ICompactOverlayPresentationConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDefaultPresentationConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDefaultPresentationConfiguration>
    {
        IDefaultPresentationConfiguration(std::nullptr_t = nullptr) noexcept {}
        IDefaultPresentationConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDefaultPresentationConfiguration(IDefaultPresentationConfiguration const&) noexcept = default;
        IDefaultPresentationConfiguration(IDefaultPresentationConfiguration&&) noexcept = default;
        IDefaultPresentationConfiguration& operator=(IDefaultPresentationConfiguration const&) & noexcept = default;
        IDefaultPresentationConfiguration& operator=(IDefaultPresentationConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDisplayRegion :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDisplayRegion>
    {
        IDisplayRegion(std::nullptr_t = nullptr) noexcept {}
        IDisplayRegion(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDisplayRegion(IDisplayRegion const&) noexcept = default;
        IDisplayRegion(IDisplayRegion&&) noexcept = default;
        IDisplayRegion& operator=(IDisplayRegion const&) & noexcept = default;
        IDisplayRegion& operator=(IDisplayRegion&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFullScreenPresentationConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFullScreenPresentationConfiguration>
    {
        IFullScreenPresentationConfiguration(std::nullptr_t = nullptr) noexcept {}
        IFullScreenPresentationConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFullScreenPresentationConfiguration(IFullScreenPresentationConfiguration const&) noexcept = default;
        IFullScreenPresentationConfiguration(IFullScreenPresentationConfiguration&&) noexcept = default;
        IFullScreenPresentationConfiguration& operator=(IFullScreenPresentationConfiguration const&) & noexcept = default;
        IFullScreenPresentationConfiguration& operator=(IFullScreenPresentationConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowingEnvironment :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowingEnvironment>
    {
        IWindowingEnvironment(std::nullptr_t = nullptr) noexcept {}
        IWindowingEnvironment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowingEnvironment(IWindowingEnvironment const&) noexcept = default;
        IWindowingEnvironment(IWindowingEnvironment&&) noexcept = default;
        IWindowingEnvironment& operator=(IWindowingEnvironment const&) & noexcept = default;
        IWindowingEnvironment& operator=(IWindowingEnvironment&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowingEnvironmentAddedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowingEnvironmentAddedEventArgs>
    {
        IWindowingEnvironmentAddedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWindowingEnvironmentAddedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowingEnvironmentAddedEventArgs(IWindowingEnvironmentAddedEventArgs const&) noexcept = default;
        IWindowingEnvironmentAddedEventArgs(IWindowingEnvironmentAddedEventArgs&&) noexcept = default;
        IWindowingEnvironmentAddedEventArgs& operator=(IWindowingEnvironmentAddedEventArgs const&) & noexcept = default;
        IWindowingEnvironmentAddedEventArgs& operator=(IWindowingEnvironmentAddedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowingEnvironmentChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowingEnvironmentChangedEventArgs>
    {
        IWindowingEnvironmentChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWindowingEnvironmentChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowingEnvironmentChangedEventArgs(IWindowingEnvironmentChangedEventArgs const&) noexcept = default;
        IWindowingEnvironmentChangedEventArgs(IWindowingEnvironmentChangedEventArgs&&) noexcept = default;
        IWindowingEnvironmentChangedEventArgs& operator=(IWindowingEnvironmentChangedEventArgs const&) & noexcept = default;
        IWindowingEnvironmentChangedEventArgs& operator=(IWindowingEnvironmentChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowingEnvironmentRemovedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowingEnvironmentRemovedEventArgs>
    {
        IWindowingEnvironmentRemovedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWindowingEnvironmentRemovedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowingEnvironmentRemovedEventArgs(IWindowingEnvironmentRemovedEventArgs const&) noexcept = default;
        IWindowingEnvironmentRemovedEventArgs(IWindowingEnvironmentRemovedEventArgs&&) noexcept = default;
        IWindowingEnvironmentRemovedEventArgs& operator=(IWindowingEnvironmentRemovedEventArgs const&) & noexcept = default;
        IWindowingEnvironmentRemovedEventArgs& operator=(IWindowingEnvironmentRemovedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowingEnvironmentStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowingEnvironmentStatics>
    {
        IWindowingEnvironmentStatics(std::nullptr_t = nullptr) noexcept {}
        IWindowingEnvironmentStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowingEnvironmentStatics(IWindowingEnvironmentStatics const&) noexcept = default;
        IWindowingEnvironmentStatics(IWindowingEnvironmentStatics&&) noexcept = default;
        IWindowingEnvironmentStatics& operator=(IWindowingEnvironmentStatics const&) & noexcept = default;
        IWindowingEnvironmentStatics& operator=(IWindowingEnvironmentStatics&&) & noexcept = default;
    };
}
#endif
