// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Storage_BulkAccess_1_H
#define WINRT_Windows_Storage_BulkAccess_1_H
#include "winrt/impl/Windows.Storage.BulkAccess.0.h"
WINRT_EXPORT namespace winrt::Windows::Storage::BulkAccess
{
    struct __declspec(empty_bases) IFileInformationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFileInformationFactory>
    {
        IFileInformationFactory(std::nullptr_t = nullptr) noexcept {}
        IFileInformationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFileInformationFactory(IFileInformationFactory const&) noexcept = default;
        IFileInformationFactory(IFileInformationFactory&&) noexcept = default;
        IFileInformationFactory& operator=(IFileInformationFactory const&) & noexcept = default;
        IFileInformationFactory& operator=(IFileInformationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFileInformationFactoryFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFileInformationFactoryFactory>
    {
        IFileInformationFactoryFactory(std::nullptr_t = nullptr) noexcept {}
        IFileInformationFactoryFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFileInformationFactoryFactory(IFileInformationFactoryFactory const&) noexcept = default;
        IFileInformationFactoryFactory(IFileInformationFactoryFactory&&) noexcept = default;
        IFileInformationFactoryFactory& operator=(IFileInformationFactoryFactory const&) & noexcept = default;
        IFileInformationFactoryFactory& operator=(IFileInformationFactoryFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStorageItemInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStorageItemInformation>
    {
        IStorageItemInformation(std::nullptr_t = nullptr) noexcept {}
        IStorageItemInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStorageItemInformation(IStorageItemInformation const&) noexcept = default;
        IStorageItemInformation(IStorageItemInformation&&) noexcept = default;
        IStorageItemInformation& operator=(IStorageItemInformation const&) & noexcept = default;
        IStorageItemInformation& operator=(IStorageItemInformation&&) & noexcept = default;
    };
}
#endif
