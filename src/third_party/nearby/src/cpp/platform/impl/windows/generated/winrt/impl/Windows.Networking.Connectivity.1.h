// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Networking_Connectivity_1_H
#define WINRT_Windows_Networking_Connectivity_1_H
#include "winrt/impl/Windows.Foundation.0.h"
#include "winrt/impl/Windows.Networking.Connectivity.0.h"
WINRT_EXPORT namespace winrt::Windows::Networking::Connectivity
{
    struct __declspec(empty_bases) IAttributedNetworkUsage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAttributedNetworkUsage>
    {
        IAttributedNetworkUsage(std::nullptr_t = nullptr) noexcept {}
        IAttributedNetworkUsage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAttributedNetworkUsage(IAttributedNetworkUsage const&) noexcept = default;
        IAttributedNetworkUsage(IAttributedNetworkUsage&&) noexcept = default;
        IAttributedNetworkUsage& operator=(IAttributedNetworkUsage const&) & noexcept = default;
        IAttributedNetworkUsage& operator=(IAttributedNetworkUsage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICellularApnContext :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICellularApnContext>
    {
        ICellularApnContext(std::nullptr_t = nullptr) noexcept {}
        ICellularApnContext(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICellularApnContext(ICellularApnContext const&) noexcept = default;
        ICellularApnContext(ICellularApnContext&&) noexcept = default;
        ICellularApnContext& operator=(ICellularApnContext const&) & noexcept = default;
        ICellularApnContext& operator=(ICellularApnContext&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICellularApnContext2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICellularApnContext2>
    {
        ICellularApnContext2(std::nullptr_t = nullptr) noexcept {}
        ICellularApnContext2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICellularApnContext2(ICellularApnContext2 const&) noexcept = default;
        ICellularApnContext2(ICellularApnContext2&&) noexcept = default;
        ICellularApnContext2& operator=(ICellularApnContext2 const&) & noexcept = default;
        ICellularApnContext2& operator=(ICellularApnContext2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionCost :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionCost>
    {
        IConnectionCost(std::nullptr_t = nullptr) noexcept {}
        IConnectionCost(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionCost(IConnectionCost const&) noexcept = default;
        IConnectionCost(IConnectionCost&&) noexcept = default;
        IConnectionCost& operator=(IConnectionCost const&) & noexcept = default;
        IConnectionCost& operator=(IConnectionCost&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionCost2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionCost2>
    {
        IConnectionCost2(std::nullptr_t = nullptr) noexcept {}
        IConnectionCost2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionCost2(IConnectionCost2 const&) noexcept = default;
        IConnectionCost2(IConnectionCost2&&) noexcept = default;
        IConnectionCost2& operator=(IConnectionCost2 const&) & noexcept = default;
        IConnectionCost2& operator=(IConnectionCost2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionProfile :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionProfile>
    {
        IConnectionProfile(std::nullptr_t = nullptr) noexcept {}
        IConnectionProfile(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionProfile(IConnectionProfile const&) noexcept = default;
        IConnectionProfile(IConnectionProfile&&) noexcept = default;
        IConnectionProfile& operator=(IConnectionProfile const&) & noexcept = default;
        IConnectionProfile& operator=(IConnectionProfile&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionProfile2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionProfile2>
    {
        IConnectionProfile2(std::nullptr_t = nullptr) noexcept {}
        IConnectionProfile2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionProfile2(IConnectionProfile2 const&) noexcept = default;
        IConnectionProfile2(IConnectionProfile2&&) noexcept = default;
        IConnectionProfile2& operator=(IConnectionProfile2 const&) & noexcept = default;
        IConnectionProfile2& operator=(IConnectionProfile2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionProfile3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionProfile3>
    {
        IConnectionProfile3(std::nullptr_t = nullptr) noexcept {}
        IConnectionProfile3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionProfile3(IConnectionProfile3 const&) noexcept = default;
        IConnectionProfile3(IConnectionProfile3&&) noexcept = default;
        IConnectionProfile3& operator=(IConnectionProfile3 const&) & noexcept = default;
        IConnectionProfile3& operator=(IConnectionProfile3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionProfile4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionProfile4>
    {
        IConnectionProfile4(std::nullptr_t = nullptr) noexcept {}
        IConnectionProfile4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionProfile4(IConnectionProfile4 const&) noexcept = default;
        IConnectionProfile4(IConnectionProfile4&&) noexcept = default;
        IConnectionProfile4& operator=(IConnectionProfile4 const&) & noexcept = default;
        IConnectionProfile4& operator=(IConnectionProfile4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionProfile5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionProfile5>
    {
        IConnectionProfile5(std::nullptr_t = nullptr) noexcept {}
        IConnectionProfile5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionProfile5(IConnectionProfile5 const&) noexcept = default;
        IConnectionProfile5(IConnectionProfile5&&) noexcept = default;
        IConnectionProfile5& operator=(IConnectionProfile5 const&) & noexcept = default;
        IConnectionProfile5& operator=(IConnectionProfile5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionProfileFilter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionProfileFilter>
    {
        IConnectionProfileFilter(std::nullptr_t = nullptr) noexcept {}
        IConnectionProfileFilter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionProfileFilter(IConnectionProfileFilter const&) noexcept = default;
        IConnectionProfileFilter(IConnectionProfileFilter&&) noexcept = default;
        IConnectionProfileFilter& operator=(IConnectionProfileFilter const&) & noexcept = default;
        IConnectionProfileFilter& operator=(IConnectionProfileFilter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionProfileFilter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionProfileFilter2>
    {
        IConnectionProfileFilter2(std::nullptr_t = nullptr) noexcept {}
        IConnectionProfileFilter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionProfileFilter2(IConnectionProfileFilter2 const&) noexcept = default;
        IConnectionProfileFilter2(IConnectionProfileFilter2&&) noexcept = default;
        IConnectionProfileFilter2& operator=(IConnectionProfileFilter2 const&) & noexcept = default;
        IConnectionProfileFilter2& operator=(IConnectionProfileFilter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionProfileFilter3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionProfileFilter3>
    {
        IConnectionProfileFilter3(std::nullptr_t = nullptr) noexcept {}
        IConnectionProfileFilter3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionProfileFilter3(IConnectionProfileFilter3 const&) noexcept = default;
        IConnectionProfileFilter3(IConnectionProfileFilter3&&) noexcept = default;
        IConnectionProfileFilter3& operator=(IConnectionProfileFilter3 const&) & noexcept = default;
        IConnectionProfileFilter3& operator=(IConnectionProfileFilter3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectionSession :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectionSession>,
        impl::require<winrt::Windows::Networking::Connectivity::IConnectionSession, winrt::Windows::Foundation::IClosable>
    {
        IConnectionSession(std::nullptr_t = nullptr) noexcept {}
        IConnectionSession(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectionSession(IConnectionSession const&) noexcept = default;
        IConnectionSession(IConnectionSession&&) noexcept = default;
        IConnectionSession& operator=(IConnectionSession const&) & noexcept = default;
        IConnectionSession& operator=(IConnectionSession&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectivityInterval :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectivityInterval>
    {
        IConnectivityInterval(std::nullptr_t = nullptr) noexcept {}
        IConnectivityInterval(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectivityInterval(IConnectivityInterval const&) noexcept = default;
        IConnectivityInterval(IConnectivityInterval&&) noexcept = default;
        IConnectivityInterval& operator=(IConnectivityInterval const&) & noexcept = default;
        IConnectivityInterval& operator=(IConnectivityInterval&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectivityManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectivityManagerStatics>
    {
        IConnectivityManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IConnectivityManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectivityManagerStatics(IConnectivityManagerStatics const&) noexcept = default;
        IConnectivityManagerStatics(IConnectivityManagerStatics&&) noexcept = default;
        IConnectivityManagerStatics& operator=(IConnectivityManagerStatics const&) & noexcept = default;
        IConnectivityManagerStatics& operator=(IConnectivityManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPlanStatus :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPlanStatus>
    {
        IDataPlanStatus(std::nullptr_t = nullptr) noexcept {}
        IDataPlanStatus(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPlanStatus(IDataPlanStatus const&) noexcept = default;
        IDataPlanStatus(IDataPlanStatus&&) noexcept = default;
        IDataPlanStatus& operator=(IDataPlanStatus const&) & noexcept = default;
        IDataPlanStatus& operator=(IDataPlanStatus&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPlanUsage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPlanUsage>
    {
        IDataPlanUsage(std::nullptr_t = nullptr) noexcept {}
        IDataPlanUsage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPlanUsage(IDataPlanUsage const&) noexcept = default;
        IDataPlanUsage(IDataPlanUsage&&) noexcept = default;
        IDataPlanUsage& operator=(IDataPlanUsage const&) & noexcept = default;
        IDataPlanUsage& operator=(IDataPlanUsage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataUsage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataUsage>
    {
        IDataUsage(std::nullptr_t = nullptr) noexcept {}
        IDataUsage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataUsage(IDataUsage const&) noexcept = default;
        IDataUsage(IDataUsage&&) noexcept = default;
        IDataUsage& operator=(IDataUsage const&) & noexcept = default;
        IDataUsage& operator=(IDataUsage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIPInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIPInformation>
    {
        IIPInformation(std::nullptr_t = nullptr) noexcept {}
        IIPInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIPInformation(IIPInformation const&) noexcept = default;
        IIPInformation(IIPInformation&&) noexcept = default;
        IIPInformation& operator=(IIPInformation const&) & noexcept = default;
        IIPInformation& operator=(IIPInformation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILanIdentifier :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILanIdentifier>
    {
        ILanIdentifier(std::nullptr_t = nullptr) noexcept {}
        ILanIdentifier(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILanIdentifier(ILanIdentifier const&) noexcept = default;
        ILanIdentifier(ILanIdentifier&&) noexcept = default;
        ILanIdentifier& operator=(ILanIdentifier const&) & noexcept = default;
        ILanIdentifier& operator=(ILanIdentifier&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILanIdentifierData :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILanIdentifierData>
    {
        ILanIdentifierData(std::nullptr_t = nullptr) noexcept {}
        ILanIdentifierData(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILanIdentifierData(ILanIdentifierData const&) noexcept = default;
        ILanIdentifierData(ILanIdentifierData&&) noexcept = default;
        ILanIdentifierData& operator=(ILanIdentifierData const&) & noexcept = default;
        ILanIdentifierData& operator=(ILanIdentifierData&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INetworkAdapter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INetworkAdapter>
    {
        INetworkAdapter(std::nullptr_t = nullptr) noexcept {}
        INetworkAdapter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INetworkAdapter(INetworkAdapter const&) noexcept = default;
        INetworkAdapter(INetworkAdapter&&) noexcept = default;
        INetworkAdapter& operator=(INetworkAdapter const&) & noexcept = default;
        INetworkAdapter& operator=(INetworkAdapter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INetworkInformationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INetworkInformationStatics>
    {
        INetworkInformationStatics(std::nullptr_t = nullptr) noexcept {}
        INetworkInformationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INetworkInformationStatics(INetworkInformationStatics const&) noexcept = default;
        INetworkInformationStatics(INetworkInformationStatics&&) noexcept = default;
        INetworkInformationStatics& operator=(INetworkInformationStatics const&) & noexcept = default;
        INetworkInformationStatics& operator=(INetworkInformationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INetworkInformationStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INetworkInformationStatics2>
    {
        INetworkInformationStatics2(std::nullptr_t = nullptr) noexcept {}
        INetworkInformationStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INetworkInformationStatics2(INetworkInformationStatics2 const&) noexcept = default;
        INetworkInformationStatics2(INetworkInformationStatics2&&) noexcept = default;
        INetworkInformationStatics2& operator=(INetworkInformationStatics2 const&) & noexcept = default;
        INetworkInformationStatics2& operator=(INetworkInformationStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INetworkItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INetworkItem>
    {
        INetworkItem(std::nullptr_t = nullptr) noexcept {}
        INetworkItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INetworkItem(INetworkItem const&) noexcept = default;
        INetworkItem(INetworkItem&&) noexcept = default;
        INetworkItem& operator=(INetworkItem const&) & noexcept = default;
        INetworkItem& operator=(INetworkItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INetworkSecuritySettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INetworkSecuritySettings>
    {
        INetworkSecuritySettings(std::nullptr_t = nullptr) noexcept {}
        INetworkSecuritySettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INetworkSecuritySettings(INetworkSecuritySettings const&) noexcept = default;
        INetworkSecuritySettings(INetworkSecuritySettings&&) noexcept = default;
        INetworkSecuritySettings& operator=(INetworkSecuritySettings const&) & noexcept = default;
        INetworkSecuritySettings& operator=(INetworkSecuritySettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INetworkStateChangeEventDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INetworkStateChangeEventDetails>
    {
        INetworkStateChangeEventDetails(std::nullptr_t = nullptr) noexcept {}
        INetworkStateChangeEventDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INetworkStateChangeEventDetails(INetworkStateChangeEventDetails const&) noexcept = default;
        INetworkStateChangeEventDetails(INetworkStateChangeEventDetails&&) noexcept = default;
        INetworkStateChangeEventDetails& operator=(INetworkStateChangeEventDetails const&) & noexcept = default;
        INetworkStateChangeEventDetails& operator=(INetworkStateChangeEventDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INetworkStateChangeEventDetails2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INetworkStateChangeEventDetails2>
    {
        INetworkStateChangeEventDetails2(std::nullptr_t = nullptr) noexcept {}
        INetworkStateChangeEventDetails2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INetworkStateChangeEventDetails2(INetworkStateChangeEventDetails2 const&) noexcept = default;
        INetworkStateChangeEventDetails2(INetworkStateChangeEventDetails2&&) noexcept = default;
        INetworkStateChangeEventDetails2& operator=(INetworkStateChangeEventDetails2 const&) & noexcept = default;
        INetworkStateChangeEventDetails2& operator=(INetworkStateChangeEventDetails2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INetworkUsage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INetworkUsage>
    {
        INetworkUsage(std::nullptr_t = nullptr) noexcept {}
        INetworkUsage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INetworkUsage(INetworkUsage const&) noexcept = default;
        INetworkUsage(INetworkUsage&&) noexcept = default;
        INetworkUsage& operator=(INetworkUsage const&) & noexcept = default;
        INetworkUsage& operator=(INetworkUsage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProviderNetworkUsage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProviderNetworkUsage>
    {
        IProviderNetworkUsage(std::nullptr_t = nullptr) noexcept {}
        IProviderNetworkUsage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProviderNetworkUsage(IProviderNetworkUsage const&) noexcept = default;
        IProviderNetworkUsage(IProviderNetworkUsage&&) noexcept = default;
        IProviderNetworkUsage& operator=(IProviderNetworkUsage const&) & noexcept = default;
        IProviderNetworkUsage& operator=(IProviderNetworkUsage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProxyConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProxyConfiguration>
    {
        IProxyConfiguration(std::nullptr_t = nullptr) noexcept {}
        IProxyConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProxyConfiguration(IProxyConfiguration const&) noexcept = default;
        IProxyConfiguration(IProxyConfiguration&&) noexcept = default;
        IProxyConfiguration& operator=(IProxyConfiguration const&) & noexcept = default;
        IProxyConfiguration& operator=(IProxyConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRoutePolicy :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRoutePolicy>
    {
        IRoutePolicy(std::nullptr_t = nullptr) noexcept {}
        IRoutePolicy(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRoutePolicy(IRoutePolicy const&) noexcept = default;
        IRoutePolicy(IRoutePolicy&&) noexcept = default;
        IRoutePolicy& operator=(IRoutePolicy const&) & noexcept = default;
        IRoutePolicy& operator=(IRoutePolicy&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRoutePolicyFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRoutePolicyFactory>
    {
        IRoutePolicyFactory(std::nullptr_t = nullptr) noexcept {}
        IRoutePolicyFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRoutePolicyFactory(IRoutePolicyFactory const&) noexcept = default;
        IRoutePolicyFactory(IRoutePolicyFactory&&) noexcept = default;
        IRoutePolicyFactory& operator=(IRoutePolicyFactory const&) & noexcept = default;
        IRoutePolicyFactory& operator=(IRoutePolicyFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWlanConnectionProfileDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWlanConnectionProfileDetails>
    {
        IWlanConnectionProfileDetails(std::nullptr_t = nullptr) noexcept {}
        IWlanConnectionProfileDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWlanConnectionProfileDetails(IWlanConnectionProfileDetails const&) noexcept = default;
        IWlanConnectionProfileDetails(IWlanConnectionProfileDetails&&) noexcept = default;
        IWlanConnectionProfileDetails& operator=(IWlanConnectionProfileDetails const&) & noexcept = default;
        IWlanConnectionProfileDetails& operator=(IWlanConnectionProfileDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWwanConnectionProfileDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWwanConnectionProfileDetails>
    {
        IWwanConnectionProfileDetails(std::nullptr_t = nullptr) noexcept {}
        IWwanConnectionProfileDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWwanConnectionProfileDetails(IWwanConnectionProfileDetails const&) noexcept = default;
        IWwanConnectionProfileDetails(IWwanConnectionProfileDetails&&) noexcept = default;
        IWwanConnectionProfileDetails& operator=(IWwanConnectionProfileDetails const&) & noexcept = default;
        IWwanConnectionProfileDetails& operator=(IWwanConnectionProfileDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWwanConnectionProfileDetails2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWwanConnectionProfileDetails2>
    {
        IWwanConnectionProfileDetails2(std::nullptr_t = nullptr) noexcept {}
        IWwanConnectionProfileDetails2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWwanConnectionProfileDetails2(IWwanConnectionProfileDetails2 const&) noexcept = default;
        IWwanConnectionProfileDetails2(IWwanConnectionProfileDetails2&&) noexcept = default;
        IWwanConnectionProfileDetails2& operator=(IWwanConnectionProfileDetails2 const&) & noexcept = default;
        IWwanConnectionProfileDetails2& operator=(IWwanConnectionProfileDetails2&&) & noexcept = default;
    };
}
#endif
