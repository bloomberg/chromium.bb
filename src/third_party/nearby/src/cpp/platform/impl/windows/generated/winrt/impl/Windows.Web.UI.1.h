// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Web_UI_1_H
#define WINRT_Windows_Web_UI_1_H
#include "winrt/impl/Windows.Web.UI.0.h"
WINRT_EXPORT namespace winrt::Windows::Web::UI
{
    struct __declspec(empty_bases) IWebViewControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControl>
    {
        IWebViewControl(std::nullptr_t = nullptr) noexcept {}
        IWebViewControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControl(IWebViewControl const&) noexcept = default;
        IWebViewControl(IWebViewControl&&) noexcept = default;
        IWebViewControl& operator=(IWebViewControl const&) & noexcept = default;
        IWebViewControl& operator=(IWebViewControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControl2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControl2>
    {
        IWebViewControl2(std::nullptr_t = nullptr) noexcept {}
        IWebViewControl2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControl2(IWebViewControl2 const&) noexcept = default;
        IWebViewControl2(IWebViewControl2&&) noexcept = default;
        IWebViewControl2& operator=(IWebViewControl2 const&) & noexcept = default;
        IWebViewControl2& operator=(IWebViewControl2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlContentLoadingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlContentLoadingEventArgs>
    {
        IWebViewControlContentLoadingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlContentLoadingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlContentLoadingEventArgs(IWebViewControlContentLoadingEventArgs const&) noexcept = default;
        IWebViewControlContentLoadingEventArgs(IWebViewControlContentLoadingEventArgs&&) noexcept = default;
        IWebViewControlContentLoadingEventArgs& operator=(IWebViewControlContentLoadingEventArgs const&) & noexcept = default;
        IWebViewControlContentLoadingEventArgs& operator=(IWebViewControlContentLoadingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlDOMContentLoadedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlDOMContentLoadedEventArgs>
    {
        IWebViewControlDOMContentLoadedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlDOMContentLoadedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlDOMContentLoadedEventArgs(IWebViewControlDOMContentLoadedEventArgs const&) noexcept = default;
        IWebViewControlDOMContentLoadedEventArgs(IWebViewControlDOMContentLoadedEventArgs&&) noexcept = default;
        IWebViewControlDOMContentLoadedEventArgs& operator=(IWebViewControlDOMContentLoadedEventArgs const&) & noexcept = default;
        IWebViewControlDOMContentLoadedEventArgs& operator=(IWebViewControlDOMContentLoadedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlDeferredPermissionRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlDeferredPermissionRequest>
    {
        IWebViewControlDeferredPermissionRequest(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlDeferredPermissionRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlDeferredPermissionRequest(IWebViewControlDeferredPermissionRequest const&) noexcept = default;
        IWebViewControlDeferredPermissionRequest(IWebViewControlDeferredPermissionRequest&&) noexcept = default;
        IWebViewControlDeferredPermissionRequest& operator=(IWebViewControlDeferredPermissionRequest const&) & noexcept = default;
        IWebViewControlDeferredPermissionRequest& operator=(IWebViewControlDeferredPermissionRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlLongRunningScriptDetectedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlLongRunningScriptDetectedEventArgs>
    {
        IWebViewControlLongRunningScriptDetectedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlLongRunningScriptDetectedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlLongRunningScriptDetectedEventArgs(IWebViewControlLongRunningScriptDetectedEventArgs const&) noexcept = default;
        IWebViewControlLongRunningScriptDetectedEventArgs(IWebViewControlLongRunningScriptDetectedEventArgs&&) noexcept = default;
        IWebViewControlLongRunningScriptDetectedEventArgs& operator=(IWebViewControlLongRunningScriptDetectedEventArgs const&) & noexcept = default;
        IWebViewControlLongRunningScriptDetectedEventArgs& operator=(IWebViewControlLongRunningScriptDetectedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlNavigationCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlNavigationCompletedEventArgs>
    {
        IWebViewControlNavigationCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlNavigationCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlNavigationCompletedEventArgs(IWebViewControlNavigationCompletedEventArgs const&) noexcept = default;
        IWebViewControlNavigationCompletedEventArgs(IWebViewControlNavigationCompletedEventArgs&&) noexcept = default;
        IWebViewControlNavigationCompletedEventArgs& operator=(IWebViewControlNavigationCompletedEventArgs const&) & noexcept = default;
        IWebViewControlNavigationCompletedEventArgs& operator=(IWebViewControlNavigationCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlNavigationStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlNavigationStartingEventArgs>
    {
        IWebViewControlNavigationStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlNavigationStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlNavigationStartingEventArgs(IWebViewControlNavigationStartingEventArgs const&) noexcept = default;
        IWebViewControlNavigationStartingEventArgs(IWebViewControlNavigationStartingEventArgs&&) noexcept = default;
        IWebViewControlNavigationStartingEventArgs& operator=(IWebViewControlNavigationStartingEventArgs const&) & noexcept = default;
        IWebViewControlNavigationStartingEventArgs& operator=(IWebViewControlNavigationStartingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlNewWindowRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlNewWindowRequestedEventArgs>
    {
        IWebViewControlNewWindowRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlNewWindowRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlNewWindowRequestedEventArgs(IWebViewControlNewWindowRequestedEventArgs const&) noexcept = default;
        IWebViewControlNewWindowRequestedEventArgs(IWebViewControlNewWindowRequestedEventArgs&&) noexcept = default;
        IWebViewControlNewWindowRequestedEventArgs& operator=(IWebViewControlNewWindowRequestedEventArgs const&) & noexcept = default;
        IWebViewControlNewWindowRequestedEventArgs& operator=(IWebViewControlNewWindowRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlNewWindowRequestedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlNewWindowRequestedEventArgs2>
    {
        IWebViewControlNewWindowRequestedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlNewWindowRequestedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlNewWindowRequestedEventArgs2(IWebViewControlNewWindowRequestedEventArgs2 const&) noexcept = default;
        IWebViewControlNewWindowRequestedEventArgs2(IWebViewControlNewWindowRequestedEventArgs2&&) noexcept = default;
        IWebViewControlNewWindowRequestedEventArgs2& operator=(IWebViewControlNewWindowRequestedEventArgs2 const&) & noexcept = default;
        IWebViewControlNewWindowRequestedEventArgs2& operator=(IWebViewControlNewWindowRequestedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlPermissionRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlPermissionRequest>
    {
        IWebViewControlPermissionRequest(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlPermissionRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlPermissionRequest(IWebViewControlPermissionRequest const&) noexcept = default;
        IWebViewControlPermissionRequest(IWebViewControlPermissionRequest&&) noexcept = default;
        IWebViewControlPermissionRequest& operator=(IWebViewControlPermissionRequest const&) & noexcept = default;
        IWebViewControlPermissionRequest& operator=(IWebViewControlPermissionRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlPermissionRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlPermissionRequestedEventArgs>
    {
        IWebViewControlPermissionRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlPermissionRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlPermissionRequestedEventArgs(IWebViewControlPermissionRequestedEventArgs const&) noexcept = default;
        IWebViewControlPermissionRequestedEventArgs(IWebViewControlPermissionRequestedEventArgs&&) noexcept = default;
        IWebViewControlPermissionRequestedEventArgs& operator=(IWebViewControlPermissionRequestedEventArgs const&) & noexcept = default;
        IWebViewControlPermissionRequestedEventArgs& operator=(IWebViewControlPermissionRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlScriptNotifyEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlScriptNotifyEventArgs>
    {
        IWebViewControlScriptNotifyEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlScriptNotifyEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlScriptNotifyEventArgs(IWebViewControlScriptNotifyEventArgs const&) noexcept = default;
        IWebViewControlScriptNotifyEventArgs(IWebViewControlScriptNotifyEventArgs&&) noexcept = default;
        IWebViewControlScriptNotifyEventArgs& operator=(IWebViewControlScriptNotifyEventArgs const&) & noexcept = default;
        IWebViewControlScriptNotifyEventArgs& operator=(IWebViewControlScriptNotifyEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlSettings>
    {
        IWebViewControlSettings(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlSettings(IWebViewControlSettings const&) noexcept = default;
        IWebViewControlSettings(IWebViewControlSettings&&) noexcept = default;
        IWebViewControlSettings& operator=(IWebViewControlSettings const&) & noexcept = default;
        IWebViewControlSettings& operator=(IWebViewControlSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs>
    {
        IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs(IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs const&) noexcept = default;
        IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs(IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs&&) noexcept = default;
        IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs& operator=(IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs const&) & noexcept = default;
        IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs& operator=(IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlUnviewableContentIdentifiedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlUnviewableContentIdentifiedEventArgs>
    {
        IWebViewControlUnviewableContentIdentifiedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlUnviewableContentIdentifiedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlUnviewableContentIdentifiedEventArgs(IWebViewControlUnviewableContentIdentifiedEventArgs const&) noexcept = default;
        IWebViewControlUnviewableContentIdentifiedEventArgs(IWebViewControlUnviewableContentIdentifiedEventArgs&&) noexcept = default;
        IWebViewControlUnviewableContentIdentifiedEventArgs& operator=(IWebViewControlUnviewableContentIdentifiedEventArgs const&) & noexcept = default;
        IWebViewControlUnviewableContentIdentifiedEventArgs& operator=(IWebViewControlUnviewableContentIdentifiedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewControlWebResourceRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewControlWebResourceRequestedEventArgs>
    {
        IWebViewControlWebResourceRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewControlWebResourceRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewControlWebResourceRequestedEventArgs(IWebViewControlWebResourceRequestedEventArgs const&) noexcept = default;
        IWebViewControlWebResourceRequestedEventArgs(IWebViewControlWebResourceRequestedEventArgs&&) noexcept = default;
        IWebViewControlWebResourceRequestedEventArgs& operator=(IWebViewControlWebResourceRequestedEventArgs const&) & noexcept = default;
        IWebViewControlWebResourceRequestedEventArgs& operator=(IWebViewControlWebResourceRequestedEventArgs&&) & noexcept = default;
    };
}
#endif
