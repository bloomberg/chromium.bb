// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Composition_1_H
#define WINRT_Windows_UI_Composition_1_H
#include "winrt/impl/Windows.UI.Composition.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Composition
{
    struct __declspec(empty_bases) IAmbientLight :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAmbientLight>
    {
        IAmbientLight(std::nullptr_t = nullptr) noexcept {}
        IAmbientLight(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAmbientLight(IAmbientLight const&) noexcept = default;
        IAmbientLight(IAmbientLight&&) noexcept = default;
        IAmbientLight& operator=(IAmbientLight const&) & noexcept = default;
        IAmbientLight& operator=(IAmbientLight&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAmbientLight2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAmbientLight2>
    {
        IAmbientLight2(std::nullptr_t = nullptr) noexcept {}
        IAmbientLight2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAmbientLight2(IAmbientLight2 const&) noexcept = default;
        IAmbientLight2(IAmbientLight2&&) noexcept = default;
        IAmbientLight2& operator=(IAmbientLight2 const&) & noexcept = default;
        IAmbientLight2& operator=(IAmbientLight2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAnimationController :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimationController>
    {
        IAnimationController(std::nullptr_t = nullptr) noexcept {}
        IAnimationController(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAnimationController(IAnimationController const&) noexcept = default;
        IAnimationController(IAnimationController&&) noexcept = default;
        IAnimationController& operator=(IAnimationController const&) & noexcept = default;
        IAnimationController& operator=(IAnimationController&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAnimationControllerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimationControllerStatics>
    {
        IAnimationControllerStatics(std::nullptr_t = nullptr) noexcept {}
        IAnimationControllerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAnimationControllerStatics(IAnimationControllerStatics const&) noexcept = default;
        IAnimationControllerStatics(IAnimationControllerStatics&&) noexcept = default;
        IAnimationControllerStatics& operator=(IAnimationControllerStatics const&) & noexcept = default;
        IAnimationControllerStatics& operator=(IAnimationControllerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAnimationObject :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimationObject>
    {
        IAnimationObject(std::nullptr_t = nullptr) noexcept {}
        IAnimationObject(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAnimationObject(IAnimationObject const&) noexcept = default;
        IAnimationObject(IAnimationObject&&) noexcept = default;
        IAnimationObject& operator=(IAnimationObject const&) & noexcept = default;
        IAnimationObject& operator=(IAnimationObject&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAnimationPropertyInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimationPropertyInfo>
    {
        IAnimationPropertyInfo(std::nullptr_t = nullptr) noexcept {}
        IAnimationPropertyInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAnimationPropertyInfo(IAnimationPropertyInfo const&) noexcept = default;
        IAnimationPropertyInfo(IAnimationPropertyInfo&&) noexcept = default;
        IAnimationPropertyInfo& operator=(IAnimationPropertyInfo const&) & noexcept = default;
        IAnimationPropertyInfo& operator=(IAnimationPropertyInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBooleanKeyFrameAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBooleanKeyFrameAnimation>
    {
        IBooleanKeyFrameAnimation(std::nullptr_t = nullptr) noexcept {}
        IBooleanKeyFrameAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBooleanKeyFrameAnimation(IBooleanKeyFrameAnimation const&) noexcept = default;
        IBooleanKeyFrameAnimation(IBooleanKeyFrameAnimation&&) noexcept = default;
        IBooleanKeyFrameAnimation& operator=(IBooleanKeyFrameAnimation const&) & noexcept = default;
        IBooleanKeyFrameAnimation& operator=(IBooleanKeyFrameAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBounceScalarNaturalMotionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBounceScalarNaturalMotionAnimation>
    {
        IBounceScalarNaturalMotionAnimation(std::nullptr_t = nullptr) noexcept {}
        IBounceScalarNaturalMotionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBounceScalarNaturalMotionAnimation(IBounceScalarNaturalMotionAnimation const&) noexcept = default;
        IBounceScalarNaturalMotionAnimation(IBounceScalarNaturalMotionAnimation&&) noexcept = default;
        IBounceScalarNaturalMotionAnimation& operator=(IBounceScalarNaturalMotionAnimation const&) & noexcept = default;
        IBounceScalarNaturalMotionAnimation& operator=(IBounceScalarNaturalMotionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBounceVector2NaturalMotionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBounceVector2NaturalMotionAnimation>
    {
        IBounceVector2NaturalMotionAnimation(std::nullptr_t = nullptr) noexcept {}
        IBounceVector2NaturalMotionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBounceVector2NaturalMotionAnimation(IBounceVector2NaturalMotionAnimation const&) noexcept = default;
        IBounceVector2NaturalMotionAnimation(IBounceVector2NaturalMotionAnimation&&) noexcept = default;
        IBounceVector2NaturalMotionAnimation& operator=(IBounceVector2NaturalMotionAnimation const&) & noexcept = default;
        IBounceVector2NaturalMotionAnimation& operator=(IBounceVector2NaturalMotionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBounceVector3NaturalMotionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBounceVector3NaturalMotionAnimation>
    {
        IBounceVector3NaturalMotionAnimation(std::nullptr_t = nullptr) noexcept {}
        IBounceVector3NaturalMotionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBounceVector3NaturalMotionAnimation(IBounceVector3NaturalMotionAnimation const&) noexcept = default;
        IBounceVector3NaturalMotionAnimation(IBounceVector3NaturalMotionAnimation&&) noexcept = default;
        IBounceVector3NaturalMotionAnimation& operator=(IBounceVector3NaturalMotionAnimation const&) & noexcept = default;
        IBounceVector3NaturalMotionAnimation& operator=(IBounceVector3NaturalMotionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorKeyFrameAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorKeyFrameAnimation>
    {
        IColorKeyFrameAnimation(std::nullptr_t = nullptr) noexcept {}
        IColorKeyFrameAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorKeyFrameAnimation(IColorKeyFrameAnimation const&) noexcept = default;
        IColorKeyFrameAnimation(IColorKeyFrameAnimation&&) noexcept = default;
        IColorKeyFrameAnimation& operator=(IColorKeyFrameAnimation const&) & noexcept = default;
        IColorKeyFrameAnimation& operator=(IColorKeyFrameAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionAnimation>
    {
        ICompositionAnimation(std::nullptr_t = nullptr) noexcept {}
        ICompositionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionAnimation(ICompositionAnimation const&) noexcept = default;
        ICompositionAnimation(ICompositionAnimation&&) noexcept = default;
        ICompositionAnimation& operator=(ICompositionAnimation const&) & noexcept = default;
        ICompositionAnimation& operator=(ICompositionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionAnimation2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionAnimation2>
    {
        ICompositionAnimation2(std::nullptr_t = nullptr) noexcept {}
        ICompositionAnimation2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionAnimation2(ICompositionAnimation2 const&) noexcept = default;
        ICompositionAnimation2(ICompositionAnimation2&&) noexcept = default;
        ICompositionAnimation2& operator=(ICompositionAnimation2 const&) & noexcept = default;
        ICompositionAnimation2& operator=(ICompositionAnimation2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionAnimation3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionAnimation3>
    {
        ICompositionAnimation3(std::nullptr_t = nullptr) noexcept {}
        ICompositionAnimation3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionAnimation3(ICompositionAnimation3 const&) noexcept = default;
        ICompositionAnimation3(ICompositionAnimation3&&) noexcept = default;
        ICompositionAnimation3& operator=(ICompositionAnimation3 const&) & noexcept = default;
        ICompositionAnimation3& operator=(ICompositionAnimation3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionAnimation4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionAnimation4>
    {
        ICompositionAnimation4(std::nullptr_t = nullptr) noexcept {}
        ICompositionAnimation4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionAnimation4(ICompositionAnimation4 const&) noexcept = default;
        ICompositionAnimation4(ICompositionAnimation4&&) noexcept = default;
        ICompositionAnimation4& operator=(ICompositionAnimation4 const&) & noexcept = default;
        ICompositionAnimation4& operator=(ICompositionAnimation4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionAnimationBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionAnimationBase>
    {
        ICompositionAnimationBase(std::nullptr_t = nullptr) noexcept {}
        ICompositionAnimationBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionAnimationBase(ICompositionAnimationBase const&) noexcept = default;
        ICompositionAnimationBase(ICompositionAnimationBase&&) noexcept = default;
        ICompositionAnimationBase& operator=(ICompositionAnimationBase const&) & noexcept = default;
        ICompositionAnimationBase& operator=(ICompositionAnimationBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionAnimationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionAnimationFactory>
    {
        ICompositionAnimationFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionAnimationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionAnimationFactory(ICompositionAnimationFactory const&) noexcept = default;
        ICompositionAnimationFactory(ICompositionAnimationFactory&&) noexcept = default;
        ICompositionAnimationFactory& operator=(ICompositionAnimationFactory const&) & noexcept = default;
        ICompositionAnimationFactory& operator=(ICompositionAnimationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionAnimationGroup :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionAnimationGroup>
    {
        ICompositionAnimationGroup(std::nullptr_t = nullptr) noexcept {}
        ICompositionAnimationGroup(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionAnimationGroup(ICompositionAnimationGroup const&) noexcept = default;
        ICompositionAnimationGroup(ICompositionAnimationGroup&&) noexcept = default;
        ICompositionAnimationGroup& operator=(ICompositionAnimationGroup const&) & noexcept = default;
        ICompositionAnimationGroup& operator=(ICompositionAnimationGroup&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionBackdropBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionBackdropBrush>
    {
        ICompositionBackdropBrush(std::nullptr_t = nullptr) noexcept {}
        ICompositionBackdropBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionBackdropBrush(ICompositionBackdropBrush const&) noexcept = default;
        ICompositionBackdropBrush(ICompositionBackdropBrush&&) noexcept = default;
        ICompositionBackdropBrush& operator=(ICompositionBackdropBrush const&) & noexcept = default;
        ICompositionBackdropBrush& operator=(ICompositionBackdropBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionBatchCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionBatchCompletedEventArgs>
    {
        ICompositionBatchCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICompositionBatchCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionBatchCompletedEventArgs(ICompositionBatchCompletedEventArgs const&) noexcept = default;
        ICompositionBatchCompletedEventArgs(ICompositionBatchCompletedEventArgs&&) noexcept = default;
        ICompositionBatchCompletedEventArgs& operator=(ICompositionBatchCompletedEventArgs const&) & noexcept = default;
        ICompositionBatchCompletedEventArgs& operator=(ICompositionBatchCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionBrush>
    {
        ICompositionBrush(std::nullptr_t = nullptr) noexcept {}
        ICompositionBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionBrush(ICompositionBrush const&) noexcept = default;
        ICompositionBrush(ICompositionBrush&&) noexcept = default;
        ICompositionBrush& operator=(ICompositionBrush const&) & noexcept = default;
        ICompositionBrush& operator=(ICompositionBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionBrushFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionBrushFactory>
    {
        ICompositionBrushFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionBrushFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionBrushFactory(ICompositionBrushFactory const&) noexcept = default;
        ICompositionBrushFactory(ICompositionBrushFactory&&) noexcept = default;
        ICompositionBrushFactory& operator=(ICompositionBrushFactory const&) & noexcept = default;
        ICompositionBrushFactory& operator=(ICompositionBrushFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionCapabilities>
    {
        ICompositionCapabilities(std::nullptr_t = nullptr) noexcept {}
        ICompositionCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionCapabilities(ICompositionCapabilities const&) noexcept = default;
        ICompositionCapabilities(ICompositionCapabilities&&) noexcept = default;
        ICompositionCapabilities& operator=(ICompositionCapabilities const&) & noexcept = default;
        ICompositionCapabilities& operator=(ICompositionCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionCapabilitiesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionCapabilitiesStatics>
    {
        ICompositionCapabilitiesStatics(std::nullptr_t = nullptr) noexcept {}
        ICompositionCapabilitiesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionCapabilitiesStatics(ICompositionCapabilitiesStatics const&) noexcept = default;
        ICompositionCapabilitiesStatics(ICompositionCapabilitiesStatics&&) noexcept = default;
        ICompositionCapabilitiesStatics& operator=(ICompositionCapabilitiesStatics const&) & noexcept = default;
        ICompositionCapabilitiesStatics& operator=(ICompositionCapabilitiesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionClip :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionClip>
    {
        ICompositionClip(std::nullptr_t = nullptr) noexcept {}
        ICompositionClip(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionClip(ICompositionClip const&) noexcept = default;
        ICompositionClip(ICompositionClip&&) noexcept = default;
        ICompositionClip& operator=(ICompositionClip const&) & noexcept = default;
        ICompositionClip& operator=(ICompositionClip&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionClip2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionClip2>
    {
        ICompositionClip2(std::nullptr_t = nullptr) noexcept {}
        ICompositionClip2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionClip2(ICompositionClip2 const&) noexcept = default;
        ICompositionClip2(ICompositionClip2&&) noexcept = default;
        ICompositionClip2& operator=(ICompositionClip2 const&) & noexcept = default;
        ICompositionClip2& operator=(ICompositionClip2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionClipFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionClipFactory>
    {
        ICompositionClipFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionClipFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionClipFactory(ICompositionClipFactory const&) noexcept = default;
        ICompositionClipFactory(ICompositionClipFactory&&) noexcept = default;
        ICompositionClipFactory& operator=(ICompositionClipFactory const&) & noexcept = default;
        ICompositionClipFactory& operator=(ICompositionClipFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionColorBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionColorBrush>
    {
        ICompositionColorBrush(std::nullptr_t = nullptr) noexcept {}
        ICompositionColorBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionColorBrush(ICompositionColorBrush const&) noexcept = default;
        ICompositionColorBrush(ICompositionColorBrush&&) noexcept = default;
        ICompositionColorBrush& operator=(ICompositionColorBrush const&) & noexcept = default;
        ICompositionColorBrush& operator=(ICompositionColorBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionColorGradientStop :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionColorGradientStop>
    {
        ICompositionColorGradientStop(std::nullptr_t = nullptr) noexcept {}
        ICompositionColorGradientStop(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionColorGradientStop(ICompositionColorGradientStop const&) noexcept = default;
        ICompositionColorGradientStop(ICompositionColorGradientStop&&) noexcept = default;
        ICompositionColorGradientStop& operator=(ICompositionColorGradientStop const&) & noexcept = default;
        ICompositionColorGradientStop& operator=(ICompositionColorGradientStop&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionColorGradientStopCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionColorGradientStopCollection>
    {
        ICompositionColorGradientStopCollection(std::nullptr_t = nullptr) noexcept {}
        ICompositionColorGradientStopCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionColorGradientStopCollection(ICompositionColorGradientStopCollection const&) noexcept = default;
        ICompositionColorGradientStopCollection(ICompositionColorGradientStopCollection&&) noexcept = default;
        ICompositionColorGradientStopCollection& operator=(ICompositionColorGradientStopCollection const&) & noexcept = default;
        ICompositionColorGradientStopCollection& operator=(ICompositionColorGradientStopCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionCommitBatch :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionCommitBatch>
    {
        ICompositionCommitBatch(std::nullptr_t = nullptr) noexcept {}
        ICompositionCommitBatch(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionCommitBatch(ICompositionCommitBatch const&) noexcept = default;
        ICompositionCommitBatch(ICompositionCommitBatch&&) noexcept = default;
        ICompositionCommitBatch& operator=(ICompositionCommitBatch const&) & noexcept = default;
        ICompositionCommitBatch& operator=(ICompositionCommitBatch&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionContainerShape :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionContainerShape>
    {
        ICompositionContainerShape(std::nullptr_t = nullptr) noexcept {}
        ICompositionContainerShape(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionContainerShape(ICompositionContainerShape const&) noexcept = default;
        ICompositionContainerShape(ICompositionContainerShape&&) noexcept = default;
        ICompositionContainerShape& operator=(ICompositionContainerShape const&) & noexcept = default;
        ICompositionContainerShape& operator=(ICompositionContainerShape&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionDrawingSurface :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionDrawingSurface>
    {
        ICompositionDrawingSurface(std::nullptr_t = nullptr) noexcept {}
        ICompositionDrawingSurface(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionDrawingSurface(ICompositionDrawingSurface const&) noexcept = default;
        ICompositionDrawingSurface(ICompositionDrawingSurface&&) noexcept = default;
        ICompositionDrawingSurface& operator=(ICompositionDrawingSurface const&) & noexcept = default;
        ICompositionDrawingSurface& operator=(ICompositionDrawingSurface&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionDrawingSurface2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionDrawingSurface2>
    {
        ICompositionDrawingSurface2(std::nullptr_t = nullptr) noexcept {}
        ICompositionDrawingSurface2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionDrawingSurface2(ICompositionDrawingSurface2 const&) noexcept = default;
        ICompositionDrawingSurface2(ICompositionDrawingSurface2&&) noexcept = default;
        ICompositionDrawingSurface2& operator=(ICompositionDrawingSurface2 const&) & noexcept = default;
        ICompositionDrawingSurface2& operator=(ICompositionDrawingSurface2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionDrawingSurfaceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionDrawingSurfaceFactory>
    {
        ICompositionDrawingSurfaceFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionDrawingSurfaceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionDrawingSurfaceFactory(ICompositionDrawingSurfaceFactory const&) noexcept = default;
        ICompositionDrawingSurfaceFactory(ICompositionDrawingSurfaceFactory&&) noexcept = default;
        ICompositionDrawingSurfaceFactory& operator=(ICompositionDrawingSurfaceFactory const&) & noexcept = default;
        ICompositionDrawingSurfaceFactory& operator=(ICompositionDrawingSurfaceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionEasingFunction :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionEasingFunction>
    {
        ICompositionEasingFunction(std::nullptr_t = nullptr) noexcept {}
        ICompositionEasingFunction(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionEasingFunction(ICompositionEasingFunction const&) noexcept = default;
        ICompositionEasingFunction(ICompositionEasingFunction&&) noexcept = default;
        ICompositionEasingFunction& operator=(ICompositionEasingFunction const&) & noexcept = default;
        ICompositionEasingFunction& operator=(ICompositionEasingFunction&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionEasingFunctionFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionEasingFunctionFactory>
    {
        ICompositionEasingFunctionFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionEasingFunctionFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionEasingFunctionFactory(ICompositionEasingFunctionFactory const&) noexcept = default;
        ICompositionEasingFunctionFactory(ICompositionEasingFunctionFactory&&) noexcept = default;
        ICompositionEasingFunctionFactory& operator=(ICompositionEasingFunctionFactory const&) & noexcept = default;
        ICompositionEasingFunctionFactory& operator=(ICompositionEasingFunctionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionEffectBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionEffectBrush>
    {
        ICompositionEffectBrush(std::nullptr_t = nullptr) noexcept {}
        ICompositionEffectBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionEffectBrush(ICompositionEffectBrush const&) noexcept = default;
        ICompositionEffectBrush(ICompositionEffectBrush&&) noexcept = default;
        ICompositionEffectBrush& operator=(ICompositionEffectBrush const&) & noexcept = default;
        ICompositionEffectBrush& operator=(ICompositionEffectBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionEffectFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionEffectFactory>
    {
        ICompositionEffectFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionEffectFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionEffectFactory(ICompositionEffectFactory const&) noexcept = default;
        ICompositionEffectFactory(ICompositionEffectFactory&&) noexcept = default;
        ICompositionEffectFactory& operator=(ICompositionEffectFactory const&) & noexcept = default;
        ICompositionEffectFactory& operator=(ICompositionEffectFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionEffectSourceParameter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionEffectSourceParameter>
    {
        ICompositionEffectSourceParameter(std::nullptr_t = nullptr) noexcept {}
        ICompositionEffectSourceParameter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionEffectSourceParameter(ICompositionEffectSourceParameter const&) noexcept = default;
        ICompositionEffectSourceParameter(ICompositionEffectSourceParameter&&) noexcept = default;
        ICompositionEffectSourceParameter& operator=(ICompositionEffectSourceParameter const&) & noexcept = default;
        ICompositionEffectSourceParameter& operator=(ICompositionEffectSourceParameter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionEffectSourceParameterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionEffectSourceParameterFactory>
    {
        ICompositionEffectSourceParameterFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionEffectSourceParameterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionEffectSourceParameterFactory(ICompositionEffectSourceParameterFactory const&) noexcept = default;
        ICompositionEffectSourceParameterFactory(ICompositionEffectSourceParameterFactory&&) noexcept = default;
        ICompositionEffectSourceParameterFactory& operator=(ICompositionEffectSourceParameterFactory const&) & noexcept = default;
        ICompositionEffectSourceParameterFactory& operator=(ICompositionEffectSourceParameterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionEllipseGeometry :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionEllipseGeometry>
    {
        ICompositionEllipseGeometry(std::nullptr_t = nullptr) noexcept {}
        ICompositionEllipseGeometry(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionEllipseGeometry(ICompositionEllipseGeometry const&) noexcept = default;
        ICompositionEllipseGeometry(ICompositionEllipseGeometry&&) noexcept = default;
        ICompositionEllipseGeometry& operator=(ICompositionEllipseGeometry const&) & noexcept = default;
        ICompositionEllipseGeometry& operator=(ICompositionEllipseGeometry&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionGeometricClip :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionGeometricClip>
    {
        ICompositionGeometricClip(std::nullptr_t = nullptr) noexcept {}
        ICompositionGeometricClip(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionGeometricClip(ICompositionGeometricClip const&) noexcept = default;
        ICompositionGeometricClip(ICompositionGeometricClip&&) noexcept = default;
        ICompositionGeometricClip& operator=(ICompositionGeometricClip const&) & noexcept = default;
        ICompositionGeometricClip& operator=(ICompositionGeometricClip&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionGeometry :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionGeometry>
    {
        ICompositionGeometry(std::nullptr_t = nullptr) noexcept {}
        ICompositionGeometry(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionGeometry(ICompositionGeometry const&) noexcept = default;
        ICompositionGeometry(ICompositionGeometry&&) noexcept = default;
        ICompositionGeometry& operator=(ICompositionGeometry const&) & noexcept = default;
        ICompositionGeometry& operator=(ICompositionGeometry&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionGeometryFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionGeometryFactory>
    {
        ICompositionGeometryFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionGeometryFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionGeometryFactory(ICompositionGeometryFactory const&) noexcept = default;
        ICompositionGeometryFactory(ICompositionGeometryFactory&&) noexcept = default;
        ICompositionGeometryFactory& operator=(ICompositionGeometryFactory const&) & noexcept = default;
        ICompositionGeometryFactory& operator=(ICompositionGeometryFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionGradientBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionGradientBrush>
    {
        ICompositionGradientBrush(std::nullptr_t = nullptr) noexcept {}
        ICompositionGradientBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionGradientBrush(ICompositionGradientBrush const&) noexcept = default;
        ICompositionGradientBrush(ICompositionGradientBrush&&) noexcept = default;
        ICompositionGradientBrush& operator=(ICompositionGradientBrush const&) & noexcept = default;
        ICompositionGradientBrush& operator=(ICompositionGradientBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionGradientBrush2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionGradientBrush2>
    {
        ICompositionGradientBrush2(std::nullptr_t = nullptr) noexcept {}
        ICompositionGradientBrush2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionGradientBrush2(ICompositionGradientBrush2 const&) noexcept = default;
        ICompositionGradientBrush2(ICompositionGradientBrush2&&) noexcept = default;
        ICompositionGradientBrush2& operator=(ICompositionGradientBrush2 const&) & noexcept = default;
        ICompositionGradientBrush2& operator=(ICompositionGradientBrush2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionGradientBrushFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionGradientBrushFactory>
    {
        ICompositionGradientBrushFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionGradientBrushFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionGradientBrushFactory(ICompositionGradientBrushFactory const&) noexcept = default;
        ICompositionGradientBrushFactory(ICompositionGradientBrushFactory&&) noexcept = default;
        ICompositionGradientBrushFactory& operator=(ICompositionGradientBrushFactory const&) & noexcept = default;
        ICompositionGradientBrushFactory& operator=(ICompositionGradientBrushFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionGraphicsDevice :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionGraphicsDevice>
    {
        ICompositionGraphicsDevice(std::nullptr_t = nullptr) noexcept {}
        ICompositionGraphicsDevice(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionGraphicsDevice(ICompositionGraphicsDevice const&) noexcept = default;
        ICompositionGraphicsDevice(ICompositionGraphicsDevice&&) noexcept = default;
        ICompositionGraphicsDevice& operator=(ICompositionGraphicsDevice const&) & noexcept = default;
        ICompositionGraphicsDevice& operator=(ICompositionGraphicsDevice&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionGraphicsDevice2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionGraphicsDevice2>
    {
        ICompositionGraphicsDevice2(std::nullptr_t = nullptr) noexcept {}
        ICompositionGraphicsDevice2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionGraphicsDevice2(ICompositionGraphicsDevice2 const&) noexcept = default;
        ICompositionGraphicsDevice2(ICompositionGraphicsDevice2&&) noexcept = default;
        ICompositionGraphicsDevice2& operator=(ICompositionGraphicsDevice2 const&) & noexcept = default;
        ICompositionGraphicsDevice2& operator=(ICompositionGraphicsDevice2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionGraphicsDevice3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionGraphicsDevice3>
    {
        ICompositionGraphicsDevice3(std::nullptr_t = nullptr) noexcept {}
        ICompositionGraphicsDevice3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionGraphicsDevice3(ICompositionGraphicsDevice3 const&) noexcept = default;
        ICompositionGraphicsDevice3(ICompositionGraphicsDevice3&&) noexcept = default;
        ICompositionGraphicsDevice3& operator=(ICompositionGraphicsDevice3 const&) & noexcept = default;
        ICompositionGraphicsDevice3& operator=(ICompositionGraphicsDevice3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionLight :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionLight>
    {
        ICompositionLight(std::nullptr_t = nullptr) noexcept {}
        ICompositionLight(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionLight(ICompositionLight const&) noexcept = default;
        ICompositionLight(ICompositionLight&&) noexcept = default;
        ICompositionLight& operator=(ICompositionLight const&) & noexcept = default;
        ICompositionLight& operator=(ICompositionLight&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionLight2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionLight2>
    {
        ICompositionLight2(std::nullptr_t = nullptr) noexcept {}
        ICompositionLight2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionLight2(ICompositionLight2 const&) noexcept = default;
        ICompositionLight2(ICompositionLight2&&) noexcept = default;
        ICompositionLight2& operator=(ICompositionLight2 const&) & noexcept = default;
        ICompositionLight2& operator=(ICompositionLight2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionLight3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionLight3>
    {
        ICompositionLight3(std::nullptr_t = nullptr) noexcept {}
        ICompositionLight3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionLight3(ICompositionLight3 const&) noexcept = default;
        ICompositionLight3(ICompositionLight3&&) noexcept = default;
        ICompositionLight3& operator=(ICompositionLight3 const&) & noexcept = default;
        ICompositionLight3& operator=(ICompositionLight3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionLightFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionLightFactory>
    {
        ICompositionLightFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionLightFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionLightFactory(ICompositionLightFactory const&) noexcept = default;
        ICompositionLightFactory(ICompositionLightFactory&&) noexcept = default;
        ICompositionLightFactory& operator=(ICompositionLightFactory const&) & noexcept = default;
        ICompositionLightFactory& operator=(ICompositionLightFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionLineGeometry :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionLineGeometry>
    {
        ICompositionLineGeometry(std::nullptr_t = nullptr) noexcept {}
        ICompositionLineGeometry(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionLineGeometry(ICompositionLineGeometry const&) noexcept = default;
        ICompositionLineGeometry(ICompositionLineGeometry&&) noexcept = default;
        ICompositionLineGeometry& operator=(ICompositionLineGeometry const&) & noexcept = default;
        ICompositionLineGeometry& operator=(ICompositionLineGeometry&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionLinearGradientBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionLinearGradientBrush>
    {
        ICompositionLinearGradientBrush(std::nullptr_t = nullptr) noexcept {}
        ICompositionLinearGradientBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionLinearGradientBrush(ICompositionLinearGradientBrush const&) noexcept = default;
        ICompositionLinearGradientBrush(ICompositionLinearGradientBrush&&) noexcept = default;
        ICompositionLinearGradientBrush& operator=(ICompositionLinearGradientBrush const&) & noexcept = default;
        ICompositionLinearGradientBrush& operator=(ICompositionLinearGradientBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionMaskBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionMaskBrush>
    {
        ICompositionMaskBrush(std::nullptr_t = nullptr) noexcept {}
        ICompositionMaskBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionMaskBrush(ICompositionMaskBrush const&) noexcept = default;
        ICompositionMaskBrush(ICompositionMaskBrush&&) noexcept = default;
        ICompositionMaskBrush& operator=(ICompositionMaskBrush const&) & noexcept = default;
        ICompositionMaskBrush& operator=(ICompositionMaskBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionMipmapSurface :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionMipmapSurface>
    {
        ICompositionMipmapSurface(std::nullptr_t = nullptr) noexcept {}
        ICompositionMipmapSurface(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionMipmapSurface(ICompositionMipmapSurface const&) noexcept = default;
        ICompositionMipmapSurface(ICompositionMipmapSurface&&) noexcept = default;
        ICompositionMipmapSurface& operator=(ICompositionMipmapSurface const&) & noexcept = default;
        ICompositionMipmapSurface& operator=(ICompositionMipmapSurface&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionNineGridBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionNineGridBrush>
    {
        ICompositionNineGridBrush(std::nullptr_t = nullptr) noexcept {}
        ICompositionNineGridBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionNineGridBrush(ICompositionNineGridBrush const&) noexcept = default;
        ICompositionNineGridBrush(ICompositionNineGridBrush&&) noexcept = default;
        ICompositionNineGridBrush& operator=(ICompositionNineGridBrush const&) & noexcept = default;
        ICompositionNineGridBrush& operator=(ICompositionNineGridBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionObject :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionObject>
    {
        ICompositionObject(std::nullptr_t = nullptr) noexcept {}
        ICompositionObject(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionObject(ICompositionObject const&) noexcept = default;
        ICompositionObject(ICompositionObject&&) noexcept = default;
        ICompositionObject& operator=(ICompositionObject const&) & noexcept = default;
        ICompositionObject& operator=(ICompositionObject&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionObject2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionObject2>
    {
        ICompositionObject2(std::nullptr_t = nullptr) noexcept {}
        ICompositionObject2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionObject2(ICompositionObject2 const&) noexcept = default;
        ICompositionObject2(ICompositionObject2&&) noexcept = default;
        ICompositionObject2& operator=(ICompositionObject2 const&) & noexcept = default;
        ICompositionObject2& operator=(ICompositionObject2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionObject3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionObject3>
    {
        ICompositionObject3(std::nullptr_t = nullptr) noexcept {}
        ICompositionObject3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionObject3(ICompositionObject3 const&) noexcept = default;
        ICompositionObject3(ICompositionObject3&&) noexcept = default;
        ICompositionObject3& operator=(ICompositionObject3 const&) & noexcept = default;
        ICompositionObject3& operator=(ICompositionObject3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionObject4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionObject4>
    {
        ICompositionObject4(std::nullptr_t = nullptr) noexcept {}
        ICompositionObject4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionObject4(ICompositionObject4 const&) noexcept = default;
        ICompositionObject4(ICompositionObject4&&) noexcept = default;
        ICompositionObject4& operator=(ICompositionObject4 const&) & noexcept = default;
        ICompositionObject4& operator=(ICompositionObject4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionObjectFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionObjectFactory>
    {
        ICompositionObjectFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionObjectFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionObjectFactory(ICompositionObjectFactory const&) noexcept = default;
        ICompositionObjectFactory(ICompositionObjectFactory&&) noexcept = default;
        ICompositionObjectFactory& operator=(ICompositionObjectFactory const&) & noexcept = default;
        ICompositionObjectFactory& operator=(ICompositionObjectFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionObjectStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionObjectStatics>
    {
        ICompositionObjectStatics(std::nullptr_t = nullptr) noexcept {}
        ICompositionObjectStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionObjectStatics(ICompositionObjectStatics const&) noexcept = default;
        ICompositionObjectStatics(ICompositionObjectStatics&&) noexcept = default;
        ICompositionObjectStatics& operator=(ICompositionObjectStatics const&) & noexcept = default;
        ICompositionObjectStatics& operator=(ICompositionObjectStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionPath :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionPath>
    {
        ICompositionPath(std::nullptr_t = nullptr) noexcept {}
        ICompositionPath(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionPath(ICompositionPath const&) noexcept = default;
        ICompositionPath(ICompositionPath&&) noexcept = default;
        ICompositionPath& operator=(ICompositionPath const&) & noexcept = default;
        ICompositionPath& operator=(ICompositionPath&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionPathFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionPathFactory>
    {
        ICompositionPathFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionPathFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionPathFactory(ICompositionPathFactory const&) noexcept = default;
        ICompositionPathFactory(ICompositionPathFactory&&) noexcept = default;
        ICompositionPathFactory& operator=(ICompositionPathFactory const&) & noexcept = default;
        ICompositionPathFactory& operator=(ICompositionPathFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionPathGeometry :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionPathGeometry>
    {
        ICompositionPathGeometry(std::nullptr_t = nullptr) noexcept {}
        ICompositionPathGeometry(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionPathGeometry(ICompositionPathGeometry const&) noexcept = default;
        ICompositionPathGeometry(ICompositionPathGeometry&&) noexcept = default;
        ICompositionPathGeometry& operator=(ICompositionPathGeometry const&) & noexcept = default;
        ICompositionPathGeometry& operator=(ICompositionPathGeometry&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionProjectedShadow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionProjectedShadow>
    {
        ICompositionProjectedShadow(std::nullptr_t = nullptr) noexcept {}
        ICompositionProjectedShadow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionProjectedShadow(ICompositionProjectedShadow const&) noexcept = default;
        ICompositionProjectedShadow(ICompositionProjectedShadow&&) noexcept = default;
        ICompositionProjectedShadow& operator=(ICompositionProjectedShadow const&) & noexcept = default;
        ICompositionProjectedShadow& operator=(ICompositionProjectedShadow&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionProjectedShadowCaster :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionProjectedShadowCaster>
    {
        ICompositionProjectedShadowCaster(std::nullptr_t = nullptr) noexcept {}
        ICompositionProjectedShadowCaster(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionProjectedShadowCaster(ICompositionProjectedShadowCaster const&) noexcept = default;
        ICompositionProjectedShadowCaster(ICompositionProjectedShadowCaster&&) noexcept = default;
        ICompositionProjectedShadowCaster& operator=(ICompositionProjectedShadowCaster const&) & noexcept = default;
        ICompositionProjectedShadowCaster& operator=(ICompositionProjectedShadowCaster&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionProjectedShadowCasterCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionProjectedShadowCasterCollection>
    {
        ICompositionProjectedShadowCasterCollection(std::nullptr_t = nullptr) noexcept {}
        ICompositionProjectedShadowCasterCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionProjectedShadowCasterCollection(ICompositionProjectedShadowCasterCollection const&) noexcept = default;
        ICompositionProjectedShadowCasterCollection(ICompositionProjectedShadowCasterCollection&&) noexcept = default;
        ICompositionProjectedShadowCasterCollection& operator=(ICompositionProjectedShadowCasterCollection const&) & noexcept = default;
        ICompositionProjectedShadowCasterCollection& operator=(ICompositionProjectedShadowCasterCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionProjectedShadowCasterCollectionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionProjectedShadowCasterCollectionStatics>
    {
        ICompositionProjectedShadowCasterCollectionStatics(std::nullptr_t = nullptr) noexcept {}
        ICompositionProjectedShadowCasterCollectionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionProjectedShadowCasterCollectionStatics(ICompositionProjectedShadowCasterCollectionStatics const&) noexcept = default;
        ICompositionProjectedShadowCasterCollectionStatics(ICompositionProjectedShadowCasterCollectionStatics&&) noexcept = default;
        ICompositionProjectedShadowCasterCollectionStatics& operator=(ICompositionProjectedShadowCasterCollectionStatics const&) & noexcept = default;
        ICompositionProjectedShadowCasterCollectionStatics& operator=(ICompositionProjectedShadowCasterCollectionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionProjectedShadowReceiver :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionProjectedShadowReceiver>
    {
        ICompositionProjectedShadowReceiver(std::nullptr_t = nullptr) noexcept {}
        ICompositionProjectedShadowReceiver(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionProjectedShadowReceiver(ICompositionProjectedShadowReceiver const&) noexcept = default;
        ICompositionProjectedShadowReceiver(ICompositionProjectedShadowReceiver&&) noexcept = default;
        ICompositionProjectedShadowReceiver& operator=(ICompositionProjectedShadowReceiver const&) & noexcept = default;
        ICompositionProjectedShadowReceiver& operator=(ICompositionProjectedShadowReceiver&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionProjectedShadowReceiverUnorderedCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionProjectedShadowReceiverUnorderedCollection>
    {
        ICompositionProjectedShadowReceiverUnorderedCollection(std::nullptr_t = nullptr) noexcept {}
        ICompositionProjectedShadowReceiverUnorderedCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionProjectedShadowReceiverUnorderedCollection(ICompositionProjectedShadowReceiverUnorderedCollection const&) noexcept = default;
        ICompositionProjectedShadowReceiverUnorderedCollection(ICompositionProjectedShadowReceiverUnorderedCollection&&) noexcept = default;
        ICompositionProjectedShadowReceiverUnorderedCollection& operator=(ICompositionProjectedShadowReceiverUnorderedCollection const&) & noexcept = default;
        ICompositionProjectedShadowReceiverUnorderedCollection& operator=(ICompositionProjectedShadowReceiverUnorderedCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionPropertySet :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionPropertySet>
    {
        ICompositionPropertySet(std::nullptr_t = nullptr) noexcept {}
        ICompositionPropertySet(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionPropertySet(ICompositionPropertySet const&) noexcept = default;
        ICompositionPropertySet(ICompositionPropertySet&&) noexcept = default;
        ICompositionPropertySet& operator=(ICompositionPropertySet const&) & noexcept = default;
        ICompositionPropertySet& operator=(ICompositionPropertySet&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionPropertySet2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionPropertySet2>
    {
        ICompositionPropertySet2(std::nullptr_t = nullptr) noexcept {}
        ICompositionPropertySet2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionPropertySet2(ICompositionPropertySet2 const&) noexcept = default;
        ICompositionPropertySet2(ICompositionPropertySet2&&) noexcept = default;
        ICompositionPropertySet2& operator=(ICompositionPropertySet2 const&) & noexcept = default;
        ICompositionPropertySet2& operator=(ICompositionPropertySet2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionRadialGradientBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionRadialGradientBrush>
    {
        ICompositionRadialGradientBrush(std::nullptr_t = nullptr) noexcept {}
        ICompositionRadialGradientBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionRadialGradientBrush(ICompositionRadialGradientBrush const&) noexcept = default;
        ICompositionRadialGradientBrush(ICompositionRadialGradientBrush&&) noexcept = default;
        ICompositionRadialGradientBrush& operator=(ICompositionRadialGradientBrush const&) & noexcept = default;
        ICompositionRadialGradientBrush& operator=(ICompositionRadialGradientBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionRectangleGeometry :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionRectangleGeometry>
    {
        ICompositionRectangleGeometry(std::nullptr_t = nullptr) noexcept {}
        ICompositionRectangleGeometry(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionRectangleGeometry(ICompositionRectangleGeometry const&) noexcept = default;
        ICompositionRectangleGeometry(ICompositionRectangleGeometry&&) noexcept = default;
        ICompositionRectangleGeometry& operator=(ICompositionRectangleGeometry const&) & noexcept = default;
        ICompositionRectangleGeometry& operator=(ICompositionRectangleGeometry&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionRoundedRectangleGeometry :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionRoundedRectangleGeometry>
    {
        ICompositionRoundedRectangleGeometry(std::nullptr_t = nullptr) noexcept {}
        ICompositionRoundedRectangleGeometry(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionRoundedRectangleGeometry(ICompositionRoundedRectangleGeometry const&) noexcept = default;
        ICompositionRoundedRectangleGeometry(ICompositionRoundedRectangleGeometry&&) noexcept = default;
        ICompositionRoundedRectangleGeometry& operator=(ICompositionRoundedRectangleGeometry const&) & noexcept = default;
        ICompositionRoundedRectangleGeometry& operator=(ICompositionRoundedRectangleGeometry&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionScopedBatch :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionScopedBatch>
    {
        ICompositionScopedBatch(std::nullptr_t = nullptr) noexcept {}
        ICompositionScopedBatch(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionScopedBatch(ICompositionScopedBatch const&) noexcept = default;
        ICompositionScopedBatch(ICompositionScopedBatch&&) noexcept = default;
        ICompositionScopedBatch& operator=(ICompositionScopedBatch const&) & noexcept = default;
        ICompositionScopedBatch& operator=(ICompositionScopedBatch&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionShadow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionShadow>
    {
        ICompositionShadow(std::nullptr_t = nullptr) noexcept {}
        ICompositionShadow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionShadow(ICompositionShadow const&) noexcept = default;
        ICompositionShadow(ICompositionShadow&&) noexcept = default;
        ICompositionShadow& operator=(ICompositionShadow const&) & noexcept = default;
        ICompositionShadow& operator=(ICompositionShadow&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionShadowFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionShadowFactory>
    {
        ICompositionShadowFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionShadowFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionShadowFactory(ICompositionShadowFactory const&) noexcept = default;
        ICompositionShadowFactory(ICompositionShadowFactory&&) noexcept = default;
        ICompositionShadowFactory& operator=(ICompositionShadowFactory const&) & noexcept = default;
        ICompositionShadowFactory& operator=(ICompositionShadowFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionShape :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionShape>
    {
        ICompositionShape(std::nullptr_t = nullptr) noexcept {}
        ICompositionShape(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionShape(ICompositionShape const&) noexcept = default;
        ICompositionShape(ICompositionShape&&) noexcept = default;
        ICompositionShape& operator=(ICompositionShape const&) & noexcept = default;
        ICompositionShape& operator=(ICompositionShape&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionShapeFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionShapeFactory>
    {
        ICompositionShapeFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionShapeFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionShapeFactory(ICompositionShapeFactory const&) noexcept = default;
        ICompositionShapeFactory(ICompositionShapeFactory&&) noexcept = default;
        ICompositionShapeFactory& operator=(ICompositionShapeFactory const&) & noexcept = default;
        ICompositionShapeFactory& operator=(ICompositionShapeFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionSpriteShape :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionSpriteShape>
    {
        ICompositionSpriteShape(std::nullptr_t = nullptr) noexcept {}
        ICompositionSpriteShape(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionSpriteShape(ICompositionSpriteShape const&) noexcept = default;
        ICompositionSpriteShape(ICompositionSpriteShape&&) noexcept = default;
        ICompositionSpriteShape& operator=(ICompositionSpriteShape const&) & noexcept = default;
        ICompositionSpriteShape& operator=(ICompositionSpriteShape&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionSurface :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionSurface>
    {
        ICompositionSurface(std::nullptr_t = nullptr) noexcept {}
        ICompositionSurface(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionSurface(ICompositionSurface const&) noexcept = default;
        ICompositionSurface(ICompositionSurface&&) noexcept = default;
        ICompositionSurface& operator=(ICompositionSurface const&) & noexcept = default;
        ICompositionSurface& operator=(ICompositionSurface&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionSurfaceBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionSurfaceBrush>
    {
        ICompositionSurfaceBrush(std::nullptr_t = nullptr) noexcept {}
        ICompositionSurfaceBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionSurfaceBrush(ICompositionSurfaceBrush const&) noexcept = default;
        ICompositionSurfaceBrush(ICompositionSurfaceBrush&&) noexcept = default;
        ICompositionSurfaceBrush& operator=(ICompositionSurfaceBrush const&) & noexcept = default;
        ICompositionSurfaceBrush& operator=(ICompositionSurfaceBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionSurfaceBrush2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionSurfaceBrush2>
    {
        ICompositionSurfaceBrush2(std::nullptr_t = nullptr) noexcept {}
        ICompositionSurfaceBrush2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionSurfaceBrush2(ICompositionSurfaceBrush2 const&) noexcept = default;
        ICompositionSurfaceBrush2(ICompositionSurfaceBrush2&&) noexcept = default;
        ICompositionSurfaceBrush2& operator=(ICompositionSurfaceBrush2 const&) & noexcept = default;
        ICompositionSurfaceBrush2& operator=(ICompositionSurfaceBrush2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionSurfaceBrush3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionSurfaceBrush3>
    {
        ICompositionSurfaceBrush3(std::nullptr_t = nullptr) noexcept {}
        ICompositionSurfaceBrush3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionSurfaceBrush3(ICompositionSurfaceBrush3 const&) noexcept = default;
        ICompositionSurfaceBrush3(ICompositionSurfaceBrush3&&) noexcept = default;
        ICompositionSurfaceBrush3& operator=(ICompositionSurfaceBrush3 const&) & noexcept = default;
        ICompositionSurfaceBrush3& operator=(ICompositionSurfaceBrush3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionTarget :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionTarget>
    {
        ICompositionTarget(std::nullptr_t = nullptr) noexcept {}
        ICompositionTarget(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionTarget(ICompositionTarget const&) noexcept = default;
        ICompositionTarget(ICompositionTarget&&) noexcept = default;
        ICompositionTarget& operator=(ICompositionTarget const&) & noexcept = default;
        ICompositionTarget& operator=(ICompositionTarget&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionTargetFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionTargetFactory>
    {
        ICompositionTargetFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionTargetFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionTargetFactory(ICompositionTargetFactory const&) noexcept = default;
        ICompositionTargetFactory(ICompositionTargetFactory&&) noexcept = default;
        ICompositionTargetFactory& operator=(ICompositionTargetFactory const&) & noexcept = default;
        ICompositionTargetFactory& operator=(ICompositionTargetFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionTransform :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionTransform>
    {
        ICompositionTransform(std::nullptr_t = nullptr) noexcept {}
        ICompositionTransform(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionTransform(ICompositionTransform const&) noexcept = default;
        ICompositionTransform(ICompositionTransform&&) noexcept = default;
        ICompositionTransform& operator=(ICompositionTransform const&) & noexcept = default;
        ICompositionTransform& operator=(ICompositionTransform&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionTransformFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionTransformFactory>
    {
        ICompositionTransformFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionTransformFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionTransformFactory(ICompositionTransformFactory const&) noexcept = default;
        ICompositionTransformFactory(ICompositionTransformFactory&&) noexcept = default;
        ICompositionTransformFactory& operator=(ICompositionTransformFactory const&) & noexcept = default;
        ICompositionTransformFactory& operator=(ICompositionTransformFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionViewBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionViewBox>
    {
        ICompositionViewBox(std::nullptr_t = nullptr) noexcept {}
        ICompositionViewBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionViewBox(ICompositionViewBox const&) noexcept = default;
        ICompositionViewBox(ICompositionViewBox&&) noexcept = default;
        ICompositionViewBox& operator=(ICompositionViewBox const&) & noexcept = default;
        ICompositionViewBox& operator=(ICompositionViewBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionVirtualDrawingSurface :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionVirtualDrawingSurface>
    {
        ICompositionVirtualDrawingSurface(std::nullptr_t = nullptr) noexcept {}
        ICompositionVirtualDrawingSurface(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionVirtualDrawingSurface(ICompositionVirtualDrawingSurface const&) noexcept = default;
        ICompositionVirtualDrawingSurface(ICompositionVirtualDrawingSurface&&) noexcept = default;
        ICompositionVirtualDrawingSurface& operator=(ICompositionVirtualDrawingSurface const&) & noexcept = default;
        ICompositionVirtualDrawingSurface& operator=(ICompositionVirtualDrawingSurface&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionVirtualDrawingSurfaceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionVirtualDrawingSurfaceFactory>
    {
        ICompositionVirtualDrawingSurfaceFactory(std::nullptr_t = nullptr) noexcept {}
        ICompositionVirtualDrawingSurfaceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionVirtualDrawingSurfaceFactory(ICompositionVirtualDrawingSurfaceFactory const&) noexcept = default;
        ICompositionVirtualDrawingSurfaceFactory(ICompositionVirtualDrawingSurfaceFactory&&) noexcept = default;
        ICompositionVirtualDrawingSurfaceFactory& operator=(ICompositionVirtualDrawingSurfaceFactory const&) & noexcept = default;
        ICompositionVirtualDrawingSurfaceFactory& operator=(ICompositionVirtualDrawingSurfaceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositionVisualSurface :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositionVisualSurface>
    {
        ICompositionVisualSurface(std::nullptr_t = nullptr) noexcept {}
        ICompositionVisualSurface(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositionVisualSurface(ICompositionVisualSurface const&) noexcept = default;
        ICompositionVisualSurface(ICompositionVisualSurface&&) noexcept = default;
        ICompositionVisualSurface& operator=(ICompositionVisualSurface const&) & noexcept = default;
        ICompositionVisualSurface& operator=(ICompositionVisualSurface&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositor>
    {
        ICompositor(std::nullptr_t = nullptr) noexcept {}
        ICompositor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositor(ICompositor const&) noexcept = default;
        ICompositor(ICompositor&&) noexcept = default;
        ICompositor& operator=(ICompositor const&) & noexcept = default;
        ICompositor& operator=(ICompositor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositor2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositor2>
    {
        ICompositor2(std::nullptr_t = nullptr) noexcept {}
        ICompositor2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositor2(ICompositor2 const&) noexcept = default;
        ICompositor2(ICompositor2&&) noexcept = default;
        ICompositor2& operator=(ICompositor2 const&) & noexcept = default;
        ICompositor2& operator=(ICompositor2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositor3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositor3>
    {
        ICompositor3(std::nullptr_t = nullptr) noexcept {}
        ICompositor3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositor3(ICompositor3 const&) noexcept = default;
        ICompositor3(ICompositor3&&) noexcept = default;
        ICompositor3& operator=(ICompositor3 const&) & noexcept = default;
        ICompositor3& operator=(ICompositor3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositor4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositor4>
    {
        ICompositor4(std::nullptr_t = nullptr) noexcept {}
        ICompositor4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositor4(ICompositor4 const&) noexcept = default;
        ICompositor4(ICompositor4&&) noexcept = default;
        ICompositor4& operator=(ICompositor4 const&) & noexcept = default;
        ICompositor4& operator=(ICompositor4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositor5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositor5>
    {
        ICompositor5(std::nullptr_t = nullptr) noexcept {}
        ICompositor5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositor5(ICompositor5 const&) noexcept = default;
        ICompositor5(ICompositor5&&) noexcept = default;
        ICompositor5& operator=(ICompositor5 const&) & noexcept = default;
        ICompositor5& operator=(ICompositor5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositor6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositor6>
    {
        ICompositor6(std::nullptr_t = nullptr) noexcept {}
        ICompositor6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositor6(ICompositor6 const&) noexcept = default;
        ICompositor6(ICompositor6&&) noexcept = default;
        ICompositor6& operator=(ICompositor6 const&) & noexcept = default;
        ICompositor6& operator=(ICompositor6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositorStatics>
    {
        ICompositorStatics(std::nullptr_t = nullptr) noexcept {}
        ICompositorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositorStatics(ICompositorStatics const&) noexcept = default;
        ICompositorStatics(ICompositorStatics&&) noexcept = default;
        ICompositorStatics& operator=(ICompositorStatics const&) & noexcept = default;
        ICompositorStatics& operator=(ICompositorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositorWithProjectedShadow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositorWithProjectedShadow>
    {
        ICompositorWithProjectedShadow(std::nullptr_t = nullptr) noexcept {}
        ICompositorWithProjectedShadow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositorWithProjectedShadow(ICompositorWithProjectedShadow const&) noexcept = default;
        ICompositorWithProjectedShadow(ICompositorWithProjectedShadow&&) noexcept = default;
        ICompositorWithProjectedShadow& operator=(ICompositorWithProjectedShadow const&) & noexcept = default;
        ICompositorWithProjectedShadow& operator=(ICompositorWithProjectedShadow&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositorWithRadialGradient :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositorWithRadialGradient>
    {
        ICompositorWithRadialGradient(std::nullptr_t = nullptr) noexcept {}
        ICompositorWithRadialGradient(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositorWithRadialGradient(ICompositorWithRadialGradient const&) noexcept = default;
        ICompositorWithRadialGradient(ICompositorWithRadialGradient&&) noexcept = default;
        ICompositorWithRadialGradient& operator=(ICompositorWithRadialGradient const&) & noexcept = default;
        ICompositorWithRadialGradient& operator=(ICompositorWithRadialGradient&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompositorWithVisualSurface :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompositorWithVisualSurface>
    {
        ICompositorWithVisualSurface(std::nullptr_t = nullptr) noexcept {}
        ICompositorWithVisualSurface(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompositorWithVisualSurface(ICompositorWithVisualSurface const&) noexcept = default;
        ICompositorWithVisualSurface(ICompositorWithVisualSurface&&) noexcept = default;
        ICompositorWithVisualSurface& operator=(ICompositorWithVisualSurface const&) & noexcept = default;
        ICompositorWithVisualSurface& operator=(ICompositorWithVisualSurface&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContainerVisual :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContainerVisual>
    {
        IContainerVisual(std::nullptr_t = nullptr) noexcept {}
        IContainerVisual(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContainerVisual(IContainerVisual const&) noexcept = default;
        IContainerVisual(IContainerVisual&&) noexcept = default;
        IContainerVisual& operator=(IContainerVisual const&) & noexcept = default;
        IContainerVisual& operator=(IContainerVisual&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContainerVisualFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContainerVisualFactory>
    {
        IContainerVisualFactory(std::nullptr_t = nullptr) noexcept {}
        IContainerVisualFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContainerVisualFactory(IContainerVisualFactory const&) noexcept = default;
        IContainerVisualFactory(IContainerVisualFactory&&) noexcept = default;
        IContainerVisualFactory& operator=(IContainerVisualFactory const&) & noexcept = default;
        IContainerVisualFactory& operator=(IContainerVisualFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICubicBezierEasingFunction :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICubicBezierEasingFunction>
    {
        ICubicBezierEasingFunction(std::nullptr_t = nullptr) noexcept {}
        ICubicBezierEasingFunction(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICubicBezierEasingFunction(ICubicBezierEasingFunction const&) noexcept = default;
        ICubicBezierEasingFunction(ICubicBezierEasingFunction&&) noexcept = default;
        ICubicBezierEasingFunction& operator=(ICubicBezierEasingFunction const&) & noexcept = default;
        ICubicBezierEasingFunction& operator=(ICubicBezierEasingFunction&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDistantLight :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDistantLight>
    {
        IDistantLight(std::nullptr_t = nullptr) noexcept {}
        IDistantLight(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDistantLight(IDistantLight const&) noexcept = default;
        IDistantLight(IDistantLight&&) noexcept = default;
        IDistantLight& operator=(IDistantLight const&) & noexcept = default;
        IDistantLight& operator=(IDistantLight&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDistantLight2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDistantLight2>
    {
        IDistantLight2(std::nullptr_t = nullptr) noexcept {}
        IDistantLight2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDistantLight2(IDistantLight2 const&) noexcept = default;
        IDistantLight2(IDistantLight2&&) noexcept = default;
        IDistantLight2& operator=(IDistantLight2 const&) & noexcept = default;
        IDistantLight2& operator=(IDistantLight2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDropShadow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropShadow>
    {
        IDropShadow(std::nullptr_t = nullptr) noexcept {}
        IDropShadow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDropShadow(IDropShadow const&) noexcept = default;
        IDropShadow(IDropShadow&&) noexcept = default;
        IDropShadow& operator=(IDropShadow const&) & noexcept = default;
        IDropShadow& operator=(IDropShadow&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDropShadow2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropShadow2>
    {
        IDropShadow2(std::nullptr_t = nullptr) noexcept {}
        IDropShadow2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDropShadow2(IDropShadow2 const&) noexcept = default;
        IDropShadow2(IDropShadow2&&) noexcept = default;
        IDropShadow2& operator=(IDropShadow2 const&) & noexcept = default;
        IDropShadow2& operator=(IDropShadow2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IExpressionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpressionAnimation>
    {
        IExpressionAnimation(std::nullptr_t = nullptr) noexcept {}
        IExpressionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IExpressionAnimation(IExpressionAnimation const&) noexcept = default;
        IExpressionAnimation(IExpressionAnimation&&) noexcept = default;
        IExpressionAnimation& operator=(IExpressionAnimation const&) & noexcept = default;
        IExpressionAnimation& operator=(IExpressionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IImplicitAnimationCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImplicitAnimationCollection>
    {
        IImplicitAnimationCollection(std::nullptr_t = nullptr) noexcept {}
        IImplicitAnimationCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImplicitAnimationCollection(IImplicitAnimationCollection const&) noexcept = default;
        IImplicitAnimationCollection(IImplicitAnimationCollection&&) noexcept = default;
        IImplicitAnimationCollection& operator=(IImplicitAnimationCollection const&) & noexcept = default;
        IImplicitAnimationCollection& operator=(IImplicitAnimationCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInsetClip :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInsetClip>
    {
        IInsetClip(std::nullptr_t = nullptr) noexcept {}
        IInsetClip(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInsetClip(IInsetClip const&) noexcept = default;
        IInsetClip(IInsetClip&&) noexcept = default;
        IInsetClip& operator=(IInsetClip const&) & noexcept = default;
        IInsetClip& operator=(IInsetClip&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyFrameAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyFrameAnimation>
    {
        IKeyFrameAnimation(std::nullptr_t = nullptr) noexcept {}
        IKeyFrameAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyFrameAnimation(IKeyFrameAnimation const&) noexcept = default;
        IKeyFrameAnimation(IKeyFrameAnimation&&) noexcept = default;
        IKeyFrameAnimation& operator=(IKeyFrameAnimation const&) & noexcept = default;
        IKeyFrameAnimation& operator=(IKeyFrameAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyFrameAnimation2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyFrameAnimation2>
    {
        IKeyFrameAnimation2(std::nullptr_t = nullptr) noexcept {}
        IKeyFrameAnimation2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyFrameAnimation2(IKeyFrameAnimation2 const&) noexcept = default;
        IKeyFrameAnimation2(IKeyFrameAnimation2&&) noexcept = default;
        IKeyFrameAnimation2& operator=(IKeyFrameAnimation2 const&) & noexcept = default;
        IKeyFrameAnimation2& operator=(IKeyFrameAnimation2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyFrameAnimation3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyFrameAnimation3>
    {
        IKeyFrameAnimation3(std::nullptr_t = nullptr) noexcept {}
        IKeyFrameAnimation3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyFrameAnimation3(IKeyFrameAnimation3 const&) noexcept = default;
        IKeyFrameAnimation3(IKeyFrameAnimation3&&) noexcept = default;
        IKeyFrameAnimation3& operator=(IKeyFrameAnimation3 const&) & noexcept = default;
        IKeyFrameAnimation3& operator=(IKeyFrameAnimation3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyFrameAnimationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyFrameAnimationFactory>
    {
        IKeyFrameAnimationFactory(std::nullptr_t = nullptr) noexcept {}
        IKeyFrameAnimationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyFrameAnimationFactory(IKeyFrameAnimationFactory const&) noexcept = default;
        IKeyFrameAnimationFactory(IKeyFrameAnimationFactory&&) noexcept = default;
        IKeyFrameAnimationFactory& operator=(IKeyFrameAnimationFactory const&) & noexcept = default;
        IKeyFrameAnimationFactory& operator=(IKeyFrameAnimationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILayerVisual :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayerVisual>
    {
        ILayerVisual(std::nullptr_t = nullptr) noexcept {}
        ILayerVisual(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILayerVisual(ILayerVisual const&) noexcept = default;
        ILayerVisual(ILayerVisual&&) noexcept = default;
        ILayerVisual& operator=(ILayerVisual const&) & noexcept = default;
        ILayerVisual& operator=(ILayerVisual&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILayerVisual2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayerVisual2>
    {
        ILayerVisual2(std::nullptr_t = nullptr) noexcept {}
        ILayerVisual2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILayerVisual2(ILayerVisual2 const&) noexcept = default;
        ILayerVisual2(ILayerVisual2&&) noexcept = default;
        ILayerVisual2& operator=(ILayerVisual2 const&) & noexcept = default;
        ILayerVisual2& operator=(ILayerVisual2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILinearEasingFunction :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILinearEasingFunction>
    {
        ILinearEasingFunction(std::nullptr_t = nullptr) noexcept {}
        ILinearEasingFunction(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILinearEasingFunction(ILinearEasingFunction const&) noexcept = default;
        ILinearEasingFunction(ILinearEasingFunction&&) noexcept = default;
        ILinearEasingFunction& operator=(ILinearEasingFunction const&) & noexcept = default;
        ILinearEasingFunction& operator=(ILinearEasingFunction&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INaturalMotionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INaturalMotionAnimation>
    {
        INaturalMotionAnimation(std::nullptr_t = nullptr) noexcept {}
        INaturalMotionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INaturalMotionAnimation(INaturalMotionAnimation const&) noexcept = default;
        INaturalMotionAnimation(INaturalMotionAnimation&&) noexcept = default;
        INaturalMotionAnimation& operator=(INaturalMotionAnimation const&) & noexcept = default;
        INaturalMotionAnimation& operator=(INaturalMotionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INaturalMotionAnimationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INaturalMotionAnimationFactory>
    {
        INaturalMotionAnimationFactory(std::nullptr_t = nullptr) noexcept {}
        INaturalMotionAnimationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INaturalMotionAnimationFactory(INaturalMotionAnimationFactory const&) noexcept = default;
        INaturalMotionAnimationFactory(INaturalMotionAnimationFactory&&) noexcept = default;
        INaturalMotionAnimationFactory& operator=(INaturalMotionAnimationFactory const&) & noexcept = default;
        INaturalMotionAnimationFactory& operator=(INaturalMotionAnimationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPathKeyFrameAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathKeyFrameAnimation>
    {
        IPathKeyFrameAnimation(std::nullptr_t = nullptr) noexcept {}
        IPathKeyFrameAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPathKeyFrameAnimation(IPathKeyFrameAnimation const&) noexcept = default;
        IPathKeyFrameAnimation(IPathKeyFrameAnimation&&) noexcept = default;
        IPathKeyFrameAnimation& operator=(IPathKeyFrameAnimation const&) & noexcept = default;
        IPathKeyFrameAnimation& operator=(IPathKeyFrameAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointLight :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointLight>
    {
        IPointLight(std::nullptr_t = nullptr) noexcept {}
        IPointLight(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointLight(IPointLight const&) noexcept = default;
        IPointLight(IPointLight&&) noexcept = default;
        IPointLight& operator=(IPointLight const&) & noexcept = default;
        IPointLight& operator=(IPointLight&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointLight2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointLight2>
    {
        IPointLight2(std::nullptr_t = nullptr) noexcept {}
        IPointLight2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointLight2(IPointLight2 const&) noexcept = default;
        IPointLight2(IPointLight2&&) noexcept = default;
        IPointLight2& operator=(IPointLight2 const&) & noexcept = default;
        IPointLight2& operator=(IPointLight2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointLight3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointLight3>
    {
        IPointLight3(std::nullptr_t = nullptr) noexcept {}
        IPointLight3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointLight3(IPointLight3 const&) noexcept = default;
        IPointLight3(IPointLight3&&) noexcept = default;
        IPointLight3& operator=(IPointLight3 const&) & noexcept = default;
        IPointLight3& operator=(IPointLight3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IQuaternionKeyFrameAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IQuaternionKeyFrameAnimation>
    {
        IQuaternionKeyFrameAnimation(std::nullptr_t = nullptr) noexcept {}
        IQuaternionKeyFrameAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IQuaternionKeyFrameAnimation(IQuaternionKeyFrameAnimation const&) noexcept = default;
        IQuaternionKeyFrameAnimation(IQuaternionKeyFrameAnimation&&) noexcept = default;
        IQuaternionKeyFrameAnimation& operator=(IQuaternionKeyFrameAnimation const&) & noexcept = default;
        IQuaternionKeyFrameAnimation& operator=(IQuaternionKeyFrameAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRedirectVisual :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRedirectVisual>
    {
        IRedirectVisual(std::nullptr_t = nullptr) noexcept {}
        IRedirectVisual(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRedirectVisual(IRedirectVisual const&) noexcept = default;
        IRedirectVisual(IRedirectVisual&&) noexcept = default;
        IRedirectVisual& operator=(IRedirectVisual const&) & noexcept = default;
        IRedirectVisual& operator=(IRedirectVisual&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRenderingDeviceReplacedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRenderingDeviceReplacedEventArgs>
    {
        IRenderingDeviceReplacedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRenderingDeviceReplacedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRenderingDeviceReplacedEventArgs(IRenderingDeviceReplacedEventArgs const&) noexcept = default;
        IRenderingDeviceReplacedEventArgs(IRenderingDeviceReplacedEventArgs&&) noexcept = default;
        IRenderingDeviceReplacedEventArgs& operator=(IRenderingDeviceReplacedEventArgs const&) & noexcept = default;
        IRenderingDeviceReplacedEventArgs& operator=(IRenderingDeviceReplacedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScalarKeyFrameAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScalarKeyFrameAnimation>
    {
        IScalarKeyFrameAnimation(std::nullptr_t = nullptr) noexcept {}
        IScalarKeyFrameAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScalarKeyFrameAnimation(IScalarKeyFrameAnimation const&) noexcept = default;
        IScalarKeyFrameAnimation(IScalarKeyFrameAnimation&&) noexcept = default;
        IScalarKeyFrameAnimation& operator=(IScalarKeyFrameAnimation const&) & noexcept = default;
        IScalarKeyFrameAnimation& operator=(IScalarKeyFrameAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScalarNaturalMotionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScalarNaturalMotionAnimation>
    {
        IScalarNaturalMotionAnimation(std::nullptr_t = nullptr) noexcept {}
        IScalarNaturalMotionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScalarNaturalMotionAnimation(IScalarNaturalMotionAnimation const&) noexcept = default;
        IScalarNaturalMotionAnimation(IScalarNaturalMotionAnimation&&) noexcept = default;
        IScalarNaturalMotionAnimation& operator=(IScalarNaturalMotionAnimation const&) & noexcept = default;
        IScalarNaturalMotionAnimation& operator=(IScalarNaturalMotionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScalarNaturalMotionAnimationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScalarNaturalMotionAnimationFactory>
    {
        IScalarNaturalMotionAnimationFactory(std::nullptr_t = nullptr) noexcept {}
        IScalarNaturalMotionAnimationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScalarNaturalMotionAnimationFactory(IScalarNaturalMotionAnimationFactory const&) noexcept = default;
        IScalarNaturalMotionAnimationFactory(IScalarNaturalMotionAnimationFactory&&) noexcept = default;
        IScalarNaturalMotionAnimationFactory& operator=(IScalarNaturalMotionAnimationFactory const&) & noexcept = default;
        IScalarNaturalMotionAnimationFactory& operator=(IScalarNaturalMotionAnimationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShapeVisual :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShapeVisual>
    {
        IShapeVisual(std::nullptr_t = nullptr) noexcept {}
        IShapeVisual(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShapeVisual(IShapeVisual const&) noexcept = default;
        IShapeVisual(IShapeVisual&&) noexcept = default;
        IShapeVisual& operator=(IShapeVisual const&) & noexcept = default;
        IShapeVisual& operator=(IShapeVisual&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpotLight :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpotLight>
    {
        ISpotLight(std::nullptr_t = nullptr) noexcept {}
        ISpotLight(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpotLight(ISpotLight const&) noexcept = default;
        ISpotLight(ISpotLight&&) noexcept = default;
        ISpotLight& operator=(ISpotLight const&) & noexcept = default;
        ISpotLight& operator=(ISpotLight&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpotLight2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpotLight2>
    {
        ISpotLight2(std::nullptr_t = nullptr) noexcept {}
        ISpotLight2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpotLight2(ISpotLight2 const&) noexcept = default;
        ISpotLight2(ISpotLight2&&) noexcept = default;
        ISpotLight2& operator=(ISpotLight2 const&) & noexcept = default;
        ISpotLight2& operator=(ISpotLight2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpotLight3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpotLight3>
    {
        ISpotLight3(std::nullptr_t = nullptr) noexcept {}
        ISpotLight3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpotLight3(ISpotLight3 const&) noexcept = default;
        ISpotLight3(ISpotLight3&&) noexcept = default;
        ISpotLight3& operator=(ISpotLight3 const&) & noexcept = default;
        ISpotLight3& operator=(ISpotLight3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpringScalarNaturalMotionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpringScalarNaturalMotionAnimation>
    {
        ISpringScalarNaturalMotionAnimation(std::nullptr_t = nullptr) noexcept {}
        ISpringScalarNaturalMotionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpringScalarNaturalMotionAnimation(ISpringScalarNaturalMotionAnimation const&) noexcept = default;
        ISpringScalarNaturalMotionAnimation(ISpringScalarNaturalMotionAnimation&&) noexcept = default;
        ISpringScalarNaturalMotionAnimation& operator=(ISpringScalarNaturalMotionAnimation const&) & noexcept = default;
        ISpringScalarNaturalMotionAnimation& operator=(ISpringScalarNaturalMotionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpringVector2NaturalMotionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpringVector2NaturalMotionAnimation>
    {
        ISpringVector2NaturalMotionAnimation(std::nullptr_t = nullptr) noexcept {}
        ISpringVector2NaturalMotionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpringVector2NaturalMotionAnimation(ISpringVector2NaturalMotionAnimation const&) noexcept = default;
        ISpringVector2NaturalMotionAnimation(ISpringVector2NaturalMotionAnimation&&) noexcept = default;
        ISpringVector2NaturalMotionAnimation& operator=(ISpringVector2NaturalMotionAnimation const&) & noexcept = default;
        ISpringVector2NaturalMotionAnimation& operator=(ISpringVector2NaturalMotionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpringVector3NaturalMotionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpringVector3NaturalMotionAnimation>
    {
        ISpringVector3NaturalMotionAnimation(std::nullptr_t = nullptr) noexcept {}
        ISpringVector3NaturalMotionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpringVector3NaturalMotionAnimation(ISpringVector3NaturalMotionAnimation const&) noexcept = default;
        ISpringVector3NaturalMotionAnimation(ISpringVector3NaturalMotionAnimation&&) noexcept = default;
        ISpringVector3NaturalMotionAnimation& operator=(ISpringVector3NaturalMotionAnimation const&) & noexcept = default;
        ISpringVector3NaturalMotionAnimation& operator=(ISpringVector3NaturalMotionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpriteVisual :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpriteVisual>
    {
        ISpriteVisual(std::nullptr_t = nullptr) noexcept {}
        ISpriteVisual(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpriteVisual(ISpriteVisual const&) noexcept = default;
        ISpriteVisual(ISpriteVisual&&) noexcept = default;
        ISpriteVisual& operator=(ISpriteVisual const&) & noexcept = default;
        ISpriteVisual& operator=(ISpriteVisual&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpriteVisual2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpriteVisual2>
    {
        ISpriteVisual2(std::nullptr_t = nullptr) noexcept {}
        ISpriteVisual2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpriteVisual2(ISpriteVisual2 const&) noexcept = default;
        ISpriteVisual2(ISpriteVisual2&&) noexcept = default;
        ISpriteVisual2& operator=(ISpriteVisual2 const&) & noexcept = default;
        ISpriteVisual2& operator=(ISpriteVisual2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStepEasingFunction :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStepEasingFunction>
    {
        IStepEasingFunction(std::nullptr_t = nullptr) noexcept {}
        IStepEasingFunction(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStepEasingFunction(IStepEasingFunction const&) noexcept = default;
        IStepEasingFunction(IStepEasingFunction&&) noexcept = default;
        IStepEasingFunction& operator=(IStepEasingFunction const&) & noexcept = default;
        IStepEasingFunction& operator=(IStepEasingFunction&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVector2KeyFrameAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVector2KeyFrameAnimation>
    {
        IVector2KeyFrameAnimation(std::nullptr_t = nullptr) noexcept {}
        IVector2KeyFrameAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVector2KeyFrameAnimation(IVector2KeyFrameAnimation const&) noexcept = default;
        IVector2KeyFrameAnimation(IVector2KeyFrameAnimation&&) noexcept = default;
        IVector2KeyFrameAnimation& operator=(IVector2KeyFrameAnimation const&) & noexcept = default;
        IVector2KeyFrameAnimation& operator=(IVector2KeyFrameAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVector2NaturalMotionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVector2NaturalMotionAnimation>
    {
        IVector2NaturalMotionAnimation(std::nullptr_t = nullptr) noexcept {}
        IVector2NaturalMotionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVector2NaturalMotionAnimation(IVector2NaturalMotionAnimation const&) noexcept = default;
        IVector2NaturalMotionAnimation(IVector2NaturalMotionAnimation&&) noexcept = default;
        IVector2NaturalMotionAnimation& operator=(IVector2NaturalMotionAnimation const&) & noexcept = default;
        IVector2NaturalMotionAnimation& operator=(IVector2NaturalMotionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVector2NaturalMotionAnimationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVector2NaturalMotionAnimationFactory>
    {
        IVector2NaturalMotionAnimationFactory(std::nullptr_t = nullptr) noexcept {}
        IVector2NaturalMotionAnimationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVector2NaturalMotionAnimationFactory(IVector2NaturalMotionAnimationFactory const&) noexcept = default;
        IVector2NaturalMotionAnimationFactory(IVector2NaturalMotionAnimationFactory&&) noexcept = default;
        IVector2NaturalMotionAnimationFactory& operator=(IVector2NaturalMotionAnimationFactory const&) & noexcept = default;
        IVector2NaturalMotionAnimationFactory& operator=(IVector2NaturalMotionAnimationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVector3KeyFrameAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVector3KeyFrameAnimation>
    {
        IVector3KeyFrameAnimation(std::nullptr_t = nullptr) noexcept {}
        IVector3KeyFrameAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVector3KeyFrameAnimation(IVector3KeyFrameAnimation const&) noexcept = default;
        IVector3KeyFrameAnimation(IVector3KeyFrameAnimation&&) noexcept = default;
        IVector3KeyFrameAnimation& operator=(IVector3KeyFrameAnimation const&) & noexcept = default;
        IVector3KeyFrameAnimation& operator=(IVector3KeyFrameAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVector3NaturalMotionAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVector3NaturalMotionAnimation>
    {
        IVector3NaturalMotionAnimation(std::nullptr_t = nullptr) noexcept {}
        IVector3NaturalMotionAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVector3NaturalMotionAnimation(IVector3NaturalMotionAnimation const&) noexcept = default;
        IVector3NaturalMotionAnimation(IVector3NaturalMotionAnimation&&) noexcept = default;
        IVector3NaturalMotionAnimation& operator=(IVector3NaturalMotionAnimation const&) & noexcept = default;
        IVector3NaturalMotionAnimation& operator=(IVector3NaturalMotionAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVector3NaturalMotionAnimationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVector3NaturalMotionAnimationFactory>
    {
        IVector3NaturalMotionAnimationFactory(std::nullptr_t = nullptr) noexcept {}
        IVector3NaturalMotionAnimationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVector3NaturalMotionAnimationFactory(IVector3NaturalMotionAnimationFactory const&) noexcept = default;
        IVector3NaturalMotionAnimationFactory(IVector3NaturalMotionAnimationFactory&&) noexcept = default;
        IVector3NaturalMotionAnimationFactory& operator=(IVector3NaturalMotionAnimationFactory const&) & noexcept = default;
        IVector3NaturalMotionAnimationFactory& operator=(IVector3NaturalMotionAnimationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVector4KeyFrameAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVector4KeyFrameAnimation>
    {
        IVector4KeyFrameAnimation(std::nullptr_t = nullptr) noexcept {}
        IVector4KeyFrameAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVector4KeyFrameAnimation(IVector4KeyFrameAnimation const&) noexcept = default;
        IVector4KeyFrameAnimation(IVector4KeyFrameAnimation&&) noexcept = default;
        IVector4KeyFrameAnimation& operator=(IVector4KeyFrameAnimation const&) & noexcept = default;
        IVector4KeyFrameAnimation& operator=(IVector4KeyFrameAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisual :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisual>
    {
        IVisual(std::nullptr_t = nullptr) noexcept {}
        IVisual(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisual(IVisual const&) noexcept = default;
        IVisual(IVisual&&) noexcept = default;
        IVisual& operator=(IVisual const&) & noexcept = default;
        IVisual& operator=(IVisual&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisual2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisual2>
    {
        IVisual2(std::nullptr_t = nullptr) noexcept {}
        IVisual2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisual2(IVisual2 const&) noexcept = default;
        IVisual2(IVisual2&&) noexcept = default;
        IVisual2& operator=(IVisual2 const&) & noexcept = default;
        IVisual2& operator=(IVisual2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisual3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisual3>
    {
        IVisual3(std::nullptr_t = nullptr) noexcept {}
        IVisual3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisual3(IVisual3 const&) noexcept = default;
        IVisual3(IVisual3&&) noexcept = default;
        IVisual3& operator=(IVisual3 const&) & noexcept = default;
        IVisual3& operator=(IVisual3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisualCollection>
    {
        IVisualCollection(std::nullptr_t = nullptr) noexcept {}
        IVisualCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualCollection(IVisualCollection const&) noexcept = default;
        IVisualCollection(IVisualCollection&&) noexcept = default;
        IVisualCollection& operator=(IVisualCollection const&) & noexcept = default;
        IVisualCollection& operator=(IVisualCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisualElement>
    {
        IVisualElement(std::nullptr_t = nullptr) noexcept {}
        IVisualElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualElement(IVisualElement const&) noexcept = default;
        IVisualElement(IVisualElement&&) noexcept = default;
        IVisualElement& operator=(IVisualElement const&) & noexcept = default;
        IVisualElement& operator=(IVisualElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisualFactory>
    {
        IVisualFactory(std::nullptr_t = nullptr) noexcept {}
        IVisualFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualFactory(IVisualFactory const&) noexcept = default;
        IVisualFactory(IVisualFactory&&) noexcept = default;
        IVisualFactory& operator=(IVisualFactory const&) & noexcept = default;
        IVisualFactory& operator=(IVisualFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualUnorderedCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisualUnorderedCollection>
    {
        IVisualUnorderedCollection(std::nullptr_t = nullptr) noexcept {}
        IVisualUnorderedCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualUnorderedCollection(IVisualUnorderedCollection const&) noexcept = default;
        IVisualUnorderedCollection(IVisualUnorderedCollection&&) noexcept = default;
        IVisualUnorderedCollection& operator=(IVisualUnorderedCollection const&) & noexcept = default;
        IVisualUnorderedCollection& operator=(IVisualUnorderedCollection&&) & noexcept = default;
    };
}
#endif
