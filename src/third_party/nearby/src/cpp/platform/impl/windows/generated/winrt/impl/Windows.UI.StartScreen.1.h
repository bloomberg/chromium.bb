// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_StartScreen_1_H
#define WINRT_Windows_UI_StartScreen_1_H
#include "winrt/impl/Windows.UI.StartScreen.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::StartScreen
{
    struct __declspec(empty_bases) IJumpList :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJumpList>
    {
        IJumpList(std::nullptr_t = nullptr) noexcept {}
        IJumpList(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJumpList(IJumpList const&) noexcept = default;
        IJumpList(IJumpList&&) noexcept = default;
        IJumpList& operator=(IJumpList const&) & noexcept = default;
        IJumpList& operator=(IJumpList&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IJumpListItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJumpListItem>
    {
        IJumpListItem(std::nullptr_t = nullptr) noexcept {}
        IJumpListItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJumpListItem(IJumpListItem const&) noexcept = default;
        IJumpListItem(IJumpListItem&&) noexcept = default;
        IJumpListItem& operator=(IJumpListItem const&) & noexcept = default;
        IJumpListItem& operator=(IJumpListItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IJumpListItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJumpListItemStatics>
    {
        IJumpListItemStatics(std::nullptr_t = nullptr) noexcept {}
        IJumpListItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJumpListItemStatics(IJumpListItemStatics const&) noexcept = default;
        IJumpListItemStatics(IJumpListItemStatics&&) noexcept = default;
        IJumpListItemStatics& operator=(IJumpListItemStatics const&) & noexcept = default;
        IJumpListItemStatics& operator=(IJumpListItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IJumpListStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IJumpListStatics>
    {
        IJumpListStatics(std::nullptr_t = nullptr) noexcept {}
        IJumpListStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IJumpListStatics(IJumpListStatics const&) noexcept = default;
        IJumpListStatics(IJumpListStatics&&) noexcept = default;
        IJumpListStatics& operator=(IJumpListStatics const&) & noexcept = default;
        IJumpListStatics& operator=(IJumpListStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryTile :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryTile>
    {
        ISecondaryTile(std::nullptr_t = nullptr) noexcept {}
        ISecondaryTile(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryTile(ISecondaryTile const&) noexcept = default;
        ISecondaryTile(ISecondaryTile&&) noexcept = default;
        ISecondaryTile& operator=(ISecondaryTile const&) & noexcept = default;
        ISecondaryTile& operator=(ISecondaryTile&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryTile2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryTile2>,
        impl::require<winrt::Windows::UI::StartScreen::ISecondaryTile2, winrt::Windows::UI::StartScreen::ISecondaryTile>
    {
        ISecondaryTile2(std::nullptr_t = nullptr) noexcept {}
        ISecondaryTile2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryTile2(ISecondaryTile2 const&) noexcept = default;
        ISecondaryTile2(ISecondaryTile2&&) noexcept = default;
        ISecondaryTile2& operator=(ISecondaryTile2 const&) & noexcept = default;
        ISecondaryTile2& operator=(ISecondaryTile2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryTileFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryTileFactory>
    {
        ISecondaryTileFactory(std::nullptr_t = nullptr) noexcept {}
        ISecondaryTileFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryTileFactory(ISecondaryTileFactory const&) noexcept = default;
        ISecondaryTileFactory(ISecondaryTileFactory&&) noexcept = default;
        ISecondaryTileFactory& operator=(ISecondaryTileFactory const&) & noexcept = default;
        ISecondaryTileFactory& operator=(ISecondaryTileFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryTileFactory2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryTileFactory2>,
        impl::require<winrt::Windows::UI::StartScreen::ISecondaryTileFactory2, winrt::Windows::UI::StartScreen::ISecondaryTileFactory>
    {
        ISecondaryTileFactory2(std::nullptr_t = nullptr) noexcept {}
        ISecondaryTileFactory2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryTileFactory2(ISecondaryTileFactory2 const&) noexcept = default;
        ISecondaryTileFactory2(ISecondaryTileFactory2&&) noexcept = default;
        ISecondaryTileFactory2& operator=(ISecondaryTileFactory2 const&) & noexcept = default;
        ISecondaryTileFactory2& operator=(ISecondaryTileFactory2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryTileStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryTileStatics>
    {
        ISecondaryTileStatics(std::nullptr_t = nullptr) noexcept {}
        ISecondaryTileStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryTileStatics(ISecondaryTileStatics const&) noexcept = default;
        ISecondaryTileStatics(ISecondaryTileStatics&&) noexcept = default;
        ISecondaryTileStatics& operator=(ISecondaryTileStatics const&) & noexcept = default;
        ISecondaryTileStatics& operator=(ISecondaryTileStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryTileVisualElements :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryTileVisualElements>
    {
        ISecondaryTileVisualElements(std::nullptr_t = nullptr) noexcept {}
        ISecondaryTileVisualElements(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryTileVisualElements(ISecondaryTileVisualElements const&) noexcept = default;
        ISecondaryTileVisualElements(ISecondaryTileVisualElements&&) noexcept = default;
        ISecondaryTileVisualElements& operator=(ISecondaryTileVisualElements const&) & noexcept = default;
        ISecondaryTileVisualElements& operator=(ISecondaryTileVisualElements&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryTileVisualElements2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryTileVisualElements2>
    {
        ISecondaryTileVisualElements2(std::nullptr_t = nullptr) noexcept {}
        ISecondaryTileVisualElements2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryTileVisualElements2(ISecondaryTileVisualElements2 const&) noexcept = default;
        ISecondaryTileVisualElements2(ISecondaryTileVisualElements2&&) noexcept = default;
        ISecondaryTileVisualElements2& operator=(ISecondaryTileVisualElements2 const&) & noexcept = default;
        ISecondaryTileVisualElements2& operator=(ISecondaryTileVisualElements2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryTileVisualElements3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryTileVisualElements3>
    {
        ISecondaryTileVisualElements3(std::nullptr_t = nullptr) noexcept {}
        ISecondaryTileVisualElements3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryTileVisualElements3(ISecondaryTileVisualElements3 const&) noexcept = default;
        ISecondaryTileVisualElements3(ISecondaryTileVisualElements3&&) noexcept = default;
        ISecondaryTileVisualElements3& operator=(ISecondaryTileVisualElements3 const&) & noexcept = default;
        ISecondaryTileVisualElements3& operator=(ISecondaryTileVisualElements3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryTileVisualElements4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryTileVisualElements4>
    {
        ISecondaryTileVisualElements4(std::nullptr_t = nullptr) noexcept {}
        ISecondaryTileVisualElements4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryTileVisualElements4(ISecondaryTileVisualElements4 const&) noexcept = default;
        ISecondaryTileVisualElements4(ISecondaryTileVisualElements4&&) noexcept = default;
        ISecondaryTileVisualElements4& operator=(ISecondaryTileVisualElements4 const&) & noexcept = default;
        ISecondaryTileVisualElements4& operator=(ISecondaryTileVisualElements4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStartScreenManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStartScreenManager>
    {
        IStartScreenManager(std::nullptr_t = nullptr) noexcept {}
        IStartScreenManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStartScreenManager(IStartScreenManager const&) noexcept = default;
        IStartScreenManager(IStartScreenManager&&) noexcept = default;
        IStartScreenManager& operator=(IStartScreenManager const&) & noexcept = default;
        IStartScreenManager& operator=(IStartScreenManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStartScreenManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStartScreenManager2>,
        impl::require<winrt::Windows::UI::StartScreen::IStartScreenManager2, winrt::Windows::UI::StartScreen::IStartScreenManager>
    {
        IStartScreenManager2(std::nullptr_t = nullptr) noexcept {}
        IStartScreenManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStartScreenManager2(IStartScreenManager2 const&) noexcept = default;
        IStartScreenManager2(IStartScreenManager2&&) noexcept = default;
        IStartScreenManager2& operator=(IStartScreenManager2 const&) & noexcept = default;
        IStartScreenManager2& operator=(IStartScreenManager2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStartScreenManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStartScreenManagerStatics>
    {
        IStartScreenManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IStartScreenManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStartScreenManagerStatics(IStartScreenManagerStatics const&) noexcept = default;
        IStartScreenManagerStatics(IStartScreenManagerStatics&&) noexcept = default;
        IStartScreenManagerStatics& operator=(IStartScreenManagerStatics const&) & noexcept = default;
        IStartScreenManagerStatics& operator=(IStartScreenManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITileMixedRealityModel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITileMixedRealityModel>
    {
        ITileMixedRealityModel(std::nullptr_t = nullptr) noexcept {}
        ITileMixedRealityModel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITileMixedRealityModel(ITileMixedRealityModel const&) noexcept = default;
        ITileMixedRealityModel(ITileMixedRealityModel&&) noexcept = default;
        ITileMixedRealityModel& operator=(ITileMixedRealityModel const&) & noexcept = default;
        ITileMixedRealityModel& operator=(ITileMixedRealityModel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITileMixedRealityModel2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITileMixedRealityModel2>
    {
        ITileMixedRealityModel2(std::nullptr_t = nullptr) noexcept {}
        ITileMixedRealityModel2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITileMixedRealityModel2(ITileMixedRealityModel2 const&) noexcept = default;
        ITileMixedRealityModel2(ITileMixedRealityModel2&&) noexcept = default;
        ITileMixedRealityModel2& operator=(ITileMixedRealityModel2 const&) & noexcept = default;
        ITileMixedRealityModel2& operator=(ITileMixedRealityModel2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualElementsRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisualElementsRequest>
    {
        IVisualElementsRequest(std::nullptr_t = nullptr) noexcept {}
        IVisualElementsRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualElementsRequest(IVisualElementsRequest const&) noexcept = default;
        IVisualElementsRequest(IVisualElementsRequest&&) noexcept = default;
        IVisualElementsRequest& operator=(IVisualElementsRequest const&) & noexcept = default;
        IVisualElementsRequest& operator=(IVisualElementsRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualElementsRequestDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisualElementsRequestDeferral>
    {
        IVisualElementsRequestDeferral(std::nullptr_t = nullptr) noexcept {}
        IVisualElementsRequestDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualElementsRequestDeferral(IVisualElementsRequestDeferral const&) noexcept = default;
        IVisualElementsRequestDeferral(IVisualElementsRequestDeferral&&) noexcept = default;
        IVisualElementsRequestDeferral& operator=(IVisualElementsRequestDeferral const&) & noexcept = default;
        IVisualElementsRequestDeferral& operator=(IVisualElementsRequestDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisualElementsRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisualElementsRequestedEventArgs>
    {
        IVisualElementsRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IVisualElementsRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisualElementsRequestedEventArgs(IVisualElementsRequestedEventArgs const&) noexcept = default;
        IVisualElementsRequestedEventArgs(IVisualElementsRequestedEventArgs&&) noexcept = default;
        IVisualElementsRequestedEventArgs& operator=(IVisualElementsRequestedEventArgs const&) & noexcept = default;
        IVisualElementsRequestedEventArgs& operator=(IVisualElementsRequestedEventArgs&&) & noexcept = default;
    };
}
#endif
