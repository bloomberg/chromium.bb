// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_Appointments_DataProvider_1_H
#define WINRT_Windows_ApplicationModel_Appointments_DataProvider_1_H
#include "winrt/impl/Windows.ApplicationModel.Appointments.DataProvider.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::Appointments::DataProvider
{
    struct __declspec(empty_bases) IAppointmentCalendarCancelMeetingRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarCancelMeetingRequest>
    {
        IAppointmentCalendarCancelMeetingRequest(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarCancelMeetingRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarCancelMeetingRequest(IAppointmentCalendarCancelMeetingRequest const&) noexcept = default;
        IAppointmentCalendarCancelMeetingRequest(IAppointmentCalendarCancelMeetingRequest&&) noexcept = default;
        IAppointmentCalendarCancelMeetingRequest& operator=(IAppointmentCalendarCancelMeetingRequest const&) & noexcept = default;
        IAppointmentCalendarCancelMeetingRequest& operator=(IAppointmentCalendarCancelMeetingRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarCancelMeetingRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarCancelMeetingRequestEventArgs>
    {
        IAppointmentCalendarCancelMeetingRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarCancelMeetingRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarCancelMeetingRequestEventArgs(IAppointmentCalendarCancelMeetingRequestEventArgs const&) noexcept = default;
        IAppointmentCalendarCancelMeetingRequestEventArgs(IAppointmentCalendarCancelMeetingRequestEventArgs&&) noexcept = default;
        IAppointmentCalendarCancelMeetingRequestEventArgs& operator=(IAppointmentCalendarCancelMeetingRequestEventArgs const&) & noexcept = default;
        IAppointmentCalendarCancelMeetingRequestEventArgs& operator=(IAppointmentCalendarCancelMeetingRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarCreateOrUpdateAppointmentRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarCreateOrUpdateAppointmentRequest>
    {
        IAppointmentCalendarCreateOrUpdateAppointmentRequest(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarCreateOrUpdateAppointmentRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarCreateOrUpdateAppointmentRequest(IAppointmentCalendarCreateOrUpdateAppointmentRequest const&) noexcept = default;
        IAppointmentCalendarCreateOrUpdateAppointmentRequest(IAppointmentCalendarCreateOrUpdateAppointmentRequest&&) noexcept = default;
        IAppointmentCalendarCreateOrUpdateAppointmentRequest& operator=(IAppointmentCalendarCreateOrUpdateAppointmentRequest const&) & noexcept = default;
        IAppointmentCalendarCreateOrUpdateAppointmentRequest& operator=(IAppointmentCalendarCreateOrUpdateAppointmentRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs>
    {
        IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs(IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs const&) noexcept = default;
        IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs(IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs&&) noexcept = default;
        IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs& operator=(IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs const&) & noexcept = default;
        IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs& operator=(IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarForwardMeetingRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarForwardMeetingRequest>
    {
        IAppointmentCalendarForwardMeetingRequest(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarForwardMeetingRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarForwardMeetingRequest(IAppointmentCalendarForwardMeetingRequest const&) noexcept = default;
        IAppointmentCalendarForwardMeetingRequest(IAppointmentCalendarForwardMeetingRequest&&) noexcept = default;
        IAppointmentCalendarForwardMeetingRequest& operator=(IAppointmentCalendarForwardMeetingRequest const&) & noexcept = default;
        IAppointmentCalendarForwardMeetingRequest& operator=(IAppointmentCalendarForwardMeetingRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarForwardMeetingRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarForwardMeetingRequestEventArgs>
    {
        IAppointmentCalendarForwardMeetingRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarForwardMeetingRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarForwardMeetingRequestEventArgs(IAppointmentCalendarForwardMeetingRequestEventArgs const&) noexcept = default;
        IAppointmentCalendarForwardMeetingRequestEventArgs(IAppointmentCalendarForwardMeetingRequestEventArgs&&) noexcept = default;
        IAppointmentCalendarForwardMeetingRequestEventArgs& operator=(IAppointmentCalendarForwardMeetingRequestEventArgs const&) & noexcept = default;
        IAppointmentCalendarForwardMeetingRequestEventArgs& operator=(IAppointmentCalendarForwardMeetingRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarProposeNewTimeForMeetingRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarProposeNewTimeForMeetingRequest>
    {
        IAppointmentCalendarProposeNewTimeForMeetingRequest(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarProposeNewTimeForMeetingRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarProposeNewTimeForMeetingRequest(IAppointmentCalendarProposeNewTimeForMeetingRequest const&) noexcept = default;
        IAppointmentCalendarProposeNewTimeForMeetingRequest(IAppointmentCalendarProposeNewTimeForMeetingRequest&&) noexcept = default;
        IAppointmentCalendarProposeNewTimeForMeetingRequest& operator=(IAppointmentCalendarProposeNewTimeForMeetingRequest const&) & noexcept = default;
        IAppointmentCalendarProposeNewTimeForMeetingRequest& operator=(IAppointmentCalendarProposeNewTimeForMeetingRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs>
    {
        IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs(IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs const&) noexcept = default;
        IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs(IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs&&) noexcept = default;
        IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs& operator=(IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs const&) & noexcept = default;
        IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs& operator=(IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarSyncManagerSyncRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarSyncManagerSyncRequest>
    {
        IAppointmentCalendarSyncManagerSyncRequest(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarSyncManagerSyncRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarSyncManagerSyncRequest(IAppointmentCalendarSyncManagerSyncRequest const&) noexcept = default;
        IAppointmentCalendarSyncManagerSyncRequest(IAppointmentCalendarSyncManagerSyncRequest&&) noexcept = default;
        IAppointmentCalendarSyncManagerSyncRequest& operator=(IAppointmentCalendarSyncManagerSyncRequest const&) & noexcept = default;
        IAppointmentCalendarSyncManagerSyncRequest& operator=(IAppointmentCalendarSyncManagerSyncRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarSyncManagerSyncRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarSyncManagerSyncRequestEventArgs>
    {
        IAppointmentCalendarSyncManagerSyncRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarSyncManagerSyncRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarSyncManagerSyncRequestEventArgs(IAppointmentCalendarSyncManagerSyncRequestEventArgs const&) noexcept = default;
        IAppointmentCalendarSyncManagerSyncRequestEventArgs(IAppointmentCalendarSyncManagerSyncRequestEventArgs&&) noexcept = default;
        IAppointmentCalendarSyncManagerSyncRequestEventArgs& operator=(IAppointmentCalendarSyncManagerSyncRequestEventArgs const&) & noexcept = default;
        IAppointmentCalendarSyncManagerSyncRequestEventArgs& operator=(IAppointmentCalendarSyncManagerSyncRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarUpdateMeetingResponseRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarUpdateMeetingResponseRequest>
    {
        IAppointmentCalendarUpdateMeetingResponseRequest(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarUpdateMeetingResponseRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarUpdateMeetingResponseRequest(IAppointmentCalendarUpdateMeetingResponseRequest const&) noexcept = default;
        IAppointmentCalendarUpdateMeetingResponseRequest(IAppointmentCalendarUpdateMeetingResponseRequest&&) noexcept = default;
        IAppointmentCalendarUpdateMeetingResponseRequest& operator=(IAppointmentCalendarUpdateMeetingResponseRequest const&) & noexcept = default;
        IAppointmentCalendarUpdateMeetingResponseRequest& operator=(IAppointmentCalendarUpdateMeetingResponseRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentCalendarUpdateMeetingResponseRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentCalendarUpdateMeetingResponseRequestEventArgs>
    {
        IAppointmentCalendarUpdateMeetingResponseRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppointmentCalendarUpdateMeetingResponseRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentCalendarUpdateMeetingResponseRequestEventArgs(IAppointmentCalendarUpdateMeetingResponseRequestEventArgs const&) noexcept = default;
        IAppointmentCalendarUpdateMeetingResponseRequestEventArgs(IAppointmentCalendarUpdateMeetingResponseRequestEventArgs&&) noexcept = default;
        IAppointmentCalendarUpdateMeetingResponseRequestEventArgs& operator=(IAppointmentCalendarUpdateMeetingResponseRequestEventArgs const&) & noexcept = default;
        IAppointmentCalendarUpdateMeetingResponseRequestEventArgs& operator=(IAppointmentCalendarUpdateMeetingResponseRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentDataProviderConnection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentDataProviderConnection>
    {
        IAppointmentDataProviderConnection(std::nullptr_t = nullptr) noexcept {}
        IAppointmentDataProviderConnection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentDataProviderConnection(IAppointmentDataProviderConnection const&) noexcept = default;
        IAppointmentDataProviderConnection(IAppointmentDataProviderConnection&&) noexcept = default;
        IAppointmentDataProviderConnection& operator=(IAppointmentDataProviderConnection const&) & noexcept = default;
        IAppointmentDataProviderConnection& operator=(IAppointmentDataProviderConnection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppointmentDataProviderTriggerDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppointmentDataProviderTriggerDetails>
    {
        IAppointmentDataProviderTriggerDetails(std::nullptr_t = nullptr) noexcept {}
        IAppointmentDataProviderTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppointmentDataProviderTriggerDetails(IAppointmentDataProviderTriggerDetails const&) noexcept = default;
        IAppointmentDataProviderTriggerDetails(IAppointmentDataProviderTriggerDetails&&) noexcept = default;
        IAppointmentDataProviderTriggerDetails& operator=(IAppointmentDataProviderTriggerDetails const&) & noexcept = default;
        IAppointmentDataProviderTriggerDetails& operator=(IAppointmentDataProviderTriggerDetails&&) & noexcept = default;
    };
}
#endif
