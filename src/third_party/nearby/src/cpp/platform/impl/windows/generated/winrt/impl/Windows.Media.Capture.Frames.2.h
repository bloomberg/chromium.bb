// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Media_Capture_Frames_2_H
#define WINRT_Windows_Media_Capture_Frames_2_H
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Windows.Media.Capture.Frames.1.h"
WINRT_EXPORT namespace winrt::Windows::Media::Capture::Frames
{
    struct __declspec(empty_bases) AudioMediaFrame : winrt::Windows::Media::Capture::Frames::IAudioMediaFrame
    {
        AudioMediaFrame(std::nullptr_t) noexcept {}
        AudioMediaFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IAudioMediaFrame(ptr, take_ownership_from_abi) {}
        AudioMediaFrame(AudioMediaFrame const&) noexcept = default;
        AudioMediaFrame(AudioMediaFrame&&) noexcept = default;
        AudioMediaFrame& operator=(AudioMediaFrame const&) & noexcept = default;
        AudioMediaFrame& operator=(AudioMediaFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) BufferMediaFrame : winrt::Windows::Media::Capture::Frames::IBufferMediaFrame
    {
        BufferMediaFrame(std::nullptr_t) noexcept {}
        BufferMediaFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IBufferMediaFrame(ptr, take_ownership_from_abi) {}
        BufferMediaFrame(BufferMediaFrame const&) noexcept = default;
        BufferMediaFrame(BufferMediaFrame&&) noexcept = default;
        BufferMediaFrame& operator=(BufferMediaFrame const&) & noexcept = default;
        BufferMediaFrame& operator=(BufferMediaFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) DepthMediaFrame : winrt::Windows::Media::Capture::Frames::IDepthMediaFrame,
        impl::require<DepthMediaFrame, winrt::Windows::Media::Capture::Frames::IDepthMediaFrame2>
    {
        DepthMediaFrame(std::nullptr_t) noexcept {}
        DepthMediaFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IDepthMediaFrame(ptr, take_ownership_from_abi) {}
        DepthMediaFrame(DepthMediaFrame const&) noexcept = default;
        DepthMediaFrame(DepthMediaFrame&&) noexcept = default;
        DepthMediaFrame& operator=(DepthMediaFrame const&) & noexcept = default;
        DepthMediaFrame& operator=(DepthMediaFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) DepthMediaFrameFormat : winrt::Windows::Media::Capture::Frames::IDepthMediaFrameFormat
    {
        DepthMediaFrameFormat(std::nullptr_t) noexcept {}
        DepthMediaFrameFormat(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IDepthMediaFrameFormat(ptr, take_ownership_from_abi) {}
        DepthMediaFrameFormat(DepthMediaFrameFormat const&) noexcept = default;
        DepthMediaFrameFormat(DepthMediaFrameFormat&&) noexcept = default;
        DepthMediaFrameFormat& operator=(DepthMediaFrameFormat const&) & noexcept = default;
        DepthMediaFrameFormat& operator=(DepthMediaFrameFormat&&) & noexcept = default;
    };
    struct __declspec(empty_bases) InfraredMediaFrame : winrt::Windows::Media::Capture::Frames::IInfraredMediaFrame
    {
        InfraredMediaFrame(std::nullptr_t) noexcept {}
        InfraredMediaFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IInfraredMediaFrame(ptr, take_ownership_from_abi) {}
        InfraredMediaFrame(InfraredMediaFrame const&) noexcept = default;
        InfraredMediaFrame(InfraredMediaFrame&&) noexcept = default;
        InfraredMediaFrame& operator=(InfraredMediaFrame const&) & noexcept = default;
        InfraredMediaFrame& operator=(InfraredMediaFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaFrameArrivedEventArgs : winrt::Windows::Media::Capture::Frames::IMediaFrameArrivedEventArgs
    {
        MediaFrameArrivedEventArgs(std::nullptr_t) noexcept {}
        MediaFrameArrivedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMediaFrameArrivedEventArgs(ptr, take_ownership_from_abi) {}
        MediaFrameArrivedEventArgs(MediaFrameArrivedEventArgs const&) noexcept = default;
        MediaFrameArrivedEventArgs(MediaFrameArrivedEventArgs&&) noexcept = default;
        MediaFrameArrivedEventArgs& operator=(MediaFrameArrivedEventArgs const&) & noexcept = default;
        MediaFrameArrivedEventArgs& operator=(MediaFrameArrivedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaFrameFormat : winrt::Windows::Media::Capture::Frames::IMediaFrameFormat,
        impl::require<MediaFrameFormat, winrt::Windows::Media::Capture::Frames::IMediaFrameFormat2>
    {
        MediaFrameFormat(std::nullptr_t) noexcept {}
        MediaFrameFormat(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMediaFrameFormat(ptr, take_ownership_from_abi) {}
        MediaFrameFormat(MediaFrameFormat const&) noexcept = default;
        MediaFrameFormat(MediaFrameFormat&&) noexcept = default;
        MediaFrameFormat& operator=(MediaFrameFormat const&) & noexcept = default;
        MediaFrameFormat& operator=(MediaFrameFormat&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaFrameReader : winrt::Windows::Media::Capture::Frames::IMediaFrameReader,
        impl::require<MediaFrameReader, winrt::Windows::Media::Capture::Frames::IMediaFrameReader2>
    {
        MediaFrameReader(std::nullptr_t) noexcept {}
        MediaFrameReader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMediaFrameReader(ptr, take_ownership_from_abi) {}
        MediaFrameReader(MediaFrameReader const&) noexcept = default;
        MediaFrameReader(MediaFrameReader&&) noexcept = default;
        MediaFrameReader& operator=(MediaFrameReader const&) & noexcept = default;
        MediaFrameReader& operator=(MediaFrameReader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaFrameReference : winrt::Windows::Media::Capture::Frames::IMediaFrameReference,
        impl::require<MediaFrameReference, winrt::Windows::Media::Capture::Frames::IMediaFrameReference2>
    {
        MediaFrameReference(std::nullptr_t) noexcept {}
        MediaFrameReference(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMediaFrameReference(ptr, take_ownership_from_abi) {}
        MediaFrameReference(MediaFrameReference const&) noexcept = default;
        MediaFrameReference(MediaFrameReference&&) noexcept = default;
        MediaFrameReference& operator=(MediaFrameReference const&) & noexcept = default;
        MediaFrameReference& operator=(MediaFrameReference&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaFrameSource : winrt::Windows::Media::Capture::Frames::IMediaFrameSource
    {
        MediaFrameSource(std::nullptr_t) noexcept {}
        MediaFrameSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMediaFrameSource(ptr, take_ownership_from_abi) {}
        MediaFrameSource(MediaFrameSource const&) noexcept = default;
        MediaFrameSource(MediaFrameSource&&) noexcept = default;
        MediaFrameSource& operator=(MediaFrameSource const&) & noexcept = default;
        MediaFrameSource& operator=(MediaFrameSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaFrameSourceController : winrt::Windows::Media::Capture::Frames::IMediaFrameSourceController,
        impl::require<MediaFrameSourceController, winrt::Windows::Media::Capture::Frames::IMediaFrameSourceController2, winrt::Windows::Media::Capture::Frames::IMediaFrameSourceController3>
    {
        MediaFrameSourceController(std::nullptr_t) noexcept {}
        MediaFrameSourceController(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMediaFrameSourceController(ptr, take_ownership_from_abi) {}
        MediaFrameSourceController(MediaFrameSourceController const&) noexcept = default;
        MediaFrameSourceController(MediaFrameSourceController&&) noexcept = default;
        MediaFrameSourceController& operator=(MediaFrameSourceController const&) & noexcept = default;
        MediaFrameSourceController& operator=(MediaFrameSourceController&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaFrameSourceGetPropertyResult : winrt::Windows::Media::Capture::Frames::IMediaFrameSourceGetPropertyResult
    {
        MediaFrameSourceGetPropertyResult(std::nullptr_t) noexcept {}
        MediaFrameSourceGetPropertyResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMediaFrameSourceGetPropertyResult(ptr, take_ownership_from_abi) {}
        MediaFrameSourceGetPropertyResult(MediaFrameSourceGetPropertyResult const&) noexcept = default;
        MediaFrameSourceGetPropertyResult(MediaFrameSourceGetPropertyResult&&) noexcept = default;
        MediaFrameSourceGetPropertyResult& operator=(MediaFrameSourceGetPropertyResult const&) & noexcept = default;
        MediaFrameSourceGetPropertyResult& operator=(MediaFrameSourceGetPropertyResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MediaFrameSourceGroup : winrt::Windows::Media::Capture::Frames::IMediaFrameSourceGroup
    {
        MediaFrameSourceGroup(std::nullptr_t) noexcept {}
        MediaFrameSourceGroup(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMediaFrameSourceGroup(ptr, take_ownership_from_abi) {}
        MediaFrameSourceGroup(MediaFrameSourceGroup const&) noexcept = default;
        MediaFrameSourceGroup(MediaFrameSourceGroup&&) noexcept = default;
        MediaFrameSourceGroup& operator=(MediaFrameSourceGroup const&) & noexcept = default;
        MediaFrameSourceGroup& operator=(MediaFrameSourceGroup&&) & noexcept = default;
        static auto FindAllAsync();
        static auto FromIdAsync(param::hstring const& id);
        static auto GetDeviceSelector();
    };
    struct __declspec(empty_bases) MediaFrameSourceInfo : winrt::Windows::Media::Capture::Frames::IMediaFrameSourceInfo,
        impl::require<MediaFrameSourceInfo, winrt::Windows::Media::Capture::Frames::IMediaFrameSourceInfo2, winrt::Windows::Media::Capture::Frames::IMediaFrameSourceInfo3>
    {
        MediaFrameSourceInfo(std::nullptr_t) noexcept {}
        MediaFrameSourceInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMediaFrameSourceInfo(ptr, take_ownership_from_abi) {}
        MediaFrameSourceInfo(MediaFrameSourceInfo const&) noexcept = default;
        MediaFrameSourceInfo(MediaFrameSourceInfo&&) noexcept = default;
        MediaFrameSourceInfo& operator=(MediaFrameSourceInfo const&) & noexcept = default;
        MediaFrameSourceInfo& operator=(MediaFrameSourceInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MultiSourceMediaFrameArrivedEventArgs : winrt::Windows::Media::Capture::Frames::IMultiSourceMediaFrameArrivedEventArgs
    {
        MultiSourceMediaFrameArrivedEventArgs(std::nullptr_t) noexcept {}
        MultiSourceMediaFrameArrivedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMultiSourceMediaFrameArrivedEventArgs(ptr, take_ownership_from_abi) {}
        MultiSourceMediaFrameArrivedEventArgs(MultiSourceMediaFrameArrivedEventArgs const&) noexcept = default;
        MultiSourceMediaFrameArrivedEventArgs(MultiSourceMediaFrameArrivedEventArgs&&) noexcept = default;
        MultiSourceMediaFrameArrivedEventArgs& operator=(MultiSourceMediaFrameArrivedEventArgs const&) & noexcept = default;
        MultiSourceMediaFrameArrivedEventArgs& operator=(MultiSourceMediaFrameArrivedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MultiSourceMediaFrameReader : winrt::Windows::Media::Capture::Frames::IMultiSourceMediaFrameReader,
        impl::require<MultiSourceMediaFrameReader, winrt::Windows::Media::Capture::Frames::IMultiSourceMediaFrameReader2>
    {
        MultiSourceMediaFrameReader(std::nullptr_t) noexcept {}
        MultiSourceMediaFrameReader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMultiSourceMediaFrameReader(ptr, take_ownership_from_abi) {}
        MultiSourceMediaFrameReader(MultiSourceMediaFrameReader const&) noexcept = default;
        MultiSourceMediaFrameReader(MultiSourceMediaFrameReader&&) noexcept = default;
        MultiSourceMediaFrameReader& operator=(MultiSourceMediaFrameReader const&) & noexcept = default;
        MultiSourceMediaFrameReader& operator=(MultiSourceMediaFrameReader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MultiSourceMediaFrameReference : winrt::Windows::Media::Capture::Frames::IMultiSourceMediaFrameReference
    {
        MultiSourceMediaFrameReference(std::nullptr_t) noexcept {}
        MultiSourceMediaFrameReference(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IMultiSourceMediaFrameReference(ptr, take_ownership_from_abi) {}
        MultiSourceMediaFrameReference(MultiSourceMediaFrameReference const&) noexcept = default;
        MultiSourceMediaFrameReference(MultiSourceMediaFrameReference&&) noexcept = default;
        MultiSourceMediaFrameReference& operator=(MultiSourceMediaFrameReference const&) & noexcept = default;
        MultiSourceMediaFrameReference& operator=(MultiSourceMediaFrameReference&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VideoMediaFrame : winrt::Windows::Media::Capture::Frames::IVideoMediaFrame
    {
        VideoMediaFrame(std::nullptr_t) noexcept {}
        VideoMediaFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IVideoMediaFrame(ptr, take_ownership_from_abi) {}
        VideoMediaFrame(VideoMediaFrame const&) noexcept = default;
        VideoMediaFrame(VideoMediaFrame&&) noexcept = default;
        VideoMediaFrame& operator=(VideoMediaFrame const&) & noexcept = default;
        VideoMediaFrame& operator=(VideoMediaFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VideoMediaFrameFormat : winrt::Windows::Media::Capture::Frames::IVideoMediaFrameFormat
    {
        VideoMediaFrameFormat(std::nullptr_t) noexcept {}
        VideoMediaFrameFormat(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Media::Capture::Frames::IVideoMediaFrameFormat(ptr, take_ownership_from_abi) {}
        VideoMediaFrameFormat(VideoMediaFrameFormat const&) noexcept = default;
        VideoMediaFrameFormat(VideoMediaFrameFormat&&) noexcept = default;
        VideoMediaFrameFormat& operator=(VideoMediaFrameFormat const&) & noexcept = default;
        VideoMediaFrameFormat& operator=(VideoMediaFrameFormat&&) & noexcept = default;
    };
}
#endif
