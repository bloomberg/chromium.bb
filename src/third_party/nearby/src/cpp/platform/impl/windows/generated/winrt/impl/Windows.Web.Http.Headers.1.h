// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Web_Http_Headers_1_H
#define WINRT_Windows_Web_Http_Headers_1_H
#include "winrt/impl/Windows.Web.Http.Headers.0.h"
WINRT_EXPORT namespace winrt::Windows::Web::Http::Headers
{
    struct __declspec(empty_bases) IHttpCacheDirectiveHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCacheDirectiveHeaderValueCollection>
    {
        IHttpCacheDirectiveHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpCacheDirectiveHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCacheDirectiveHeaderValueCollection(IHttpCacheDirectiveHeaderValueCollection const&) noexcept = default;
        IHttpCacheDirectiveHeaderValueCollection(IHttpCacheDirectiveHeaderValueCollection&&) noexcept = default;
        IHttpCacheDirectiveHeaderValueCollection& operator=(IHttpCacheDirectiveHeaderValueCollection const&) & noexcept = default;
        IHttpCacheDirectiveHeaderValueCollection& operator=(IHttpCacheDirectiveHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpChallengeHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpChallengeHeaderValue>
    {
        IHttpChallengeHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpChallengeHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpChallengeHeaderValue(IHttpChallengeHeaderValue const&) noexcept = default;
        IHttpChallengeHeaderValue(IHttpChallengeHeaderValue&&) noexcept = default;
        IHttpChallengeHeaderValue& operator=(IHttpChallengeHeaderValue const&) & noexcept = default;
        IHttpChallengeHeaderValue& operator=(IHttpChallengeHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpChallengeHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpChallengeHeaderValueCollection>
    {
        IHttpChallengeHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpChallengeHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpChallengeHeaderValueCollection(IHttpChallengeHeaderValueCollection const&) noexcept = default;
        IHttpChallengeHeaderValueCollection(IHttpChallengeHeaderValueCollection&&) noexcept = default;
        IHttpChallengeHeaderValueCollection& operator=(IHttpChallengeHeaderValueCollection const&) & noexcept = default;
        IHttpChallengeHeaderValueCollection& operator=(IHttpChallengeHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpChallengeHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpChallengeHeaderValueFactory>
    {
        IHttpChallengeHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpChallengeHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpChallengeHeaderValueFactory(IHttpChallengeHeaderValueFactory const&) noexcept = default;
        IHttpChallengeHeaderValueFactory(IHttpChallengeHeaderValueFactory&&) noexcept = default;
        IHttpChallengeHeaderValueFactory& operator=(IHttpChallengeHeaderValueFactory const&) & noexcept = default;
        IHttpChallengeHeaderValueFactory& operator=(IHttpChallengeHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpChallengeHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpChallengeHeaderValueStatics>
    {
        IHttpChallengeHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpChallengeHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpChallengeHeaderValueStatics(IHttpChallengeHeaderValueStatics const&) noexcept = default;
        IHttpChallengeHeaderValueStatics(IHttpChallengeHeaderValueStatics&&) noexcept = default;
        IHttpChallengeHeaderValueStatics& operator=(IHttpChallengeHeaderValueStatics const&) & noexcept = default;
        IHttpChallengeHeaderValueStatics& operator=(IHttpChallengeHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpConnectionOptionHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpConnectionOptionHeaderValue>
    {
        IHttpConnectionOptionHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpConnectionOptionHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpConnectionOptionHeaderValue(IHttpConnectionOptionHeaderValue const&) noexcept = default;
        IHttpConnectionOptionHeaderValue(IHttpConnectionOptionHeaderValue&&) noexcept = default;
        IHttpConnectionOptionHeaderValue& operator=(IHttpConnectionOptionHeaderValue const&) & noexcept = default;
        IHttpConnectionOptionHeaderValue& operator=(IHttpConnectionOptionHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpConnectionOptionHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpConnectionOptionHeaderValueCollection>
    {
        IHttpConnectionOptionHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpConnectionOptionHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpConnectionOptionHeaderValueCollection(IHttpConnectionOptionHeaderValueCollection const&) noexcept = default;
        IHttpConnectionOptionHeaderValueCollection(IHttpConnectionOptionHeaderValueCollection&&) noexcept = default;
        IHttpConnectionOptionHeaderValueCollection& operator=(IHttpConnectionOptionHeaderValueCollection const&) & noexcept = default;
        IHttpConnectionOptionHeaderValueCollection& operator=(IHttpConnectionOptionHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpConnectionOptionHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpConnectionOptionHeaderValueFactory>
    {
        IHttpConnectionOptionHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpConnectionOptionHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpConnectionOptionHeaderValueFactory(IHttpConnectionOptionHeaderValueFactory const&) noexcept = default;
        IHttpConnectionOptionHeaderValueFactory(IHttpConnectionOptionHeaderValueFactory&&) noexcept = default;
        IHttpConnectionOptionHeaderValueFactory& operator=(IHttpConnectionOptionHeaderValueFactory const&) & noexcept = default;
        IHttpConnectionOptionHeaderValueFactory& operator=(IHttpConnectionOptionHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpConnectionOptionHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpConnectionOptionHeaderValueStatics>
    {
        IHttpConnectionOptionHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpConnectionOptionHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpConnectionOptionHeaderValueStatics(IHttpConnectionOptionHeaderValueStatics const&) noexcept = default;
        IHttpConnectionOptionHeaderValueStatics(IHttpConnectionOptionHeaderValueStatics&&) noexcept = default;
        IHttpConnectionOptionHeaderValueStatics& operator=(IHttpConnectionOptionHeaderValueStatics const&) & noexcept = default;
        IHttpConnectionOptionHeaderValueStatics& operator=(IHttpConnectionOptionHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentCodingHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentCodingHeaderValue>
    {
        IHttpContentCodingHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpContentCodingHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentCodingHeaderValue(IHttpContentCodingHeaderValue const&) noexcept = default;
        IHttpContentCodingHeaderValue(IHttpContentCodingHeaderValue&&) noexcept = default;
        IHttpContentCodingHeaderValue& operator=(IHttpContentCodingHeaderValue const&) & noexcept = default;
        IHttpContentCodingHeaderValue& operator=(IHttpContentCodingHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentCodingHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentCodingHeaderValueCollection>
    {
        IHttpContentCodingHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpContentCodingHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentCodingHeaderValueCollection(IHttpContentCodingHeaderValueCollection const&) noexcept = default;
        IHttpContentCodingHeaderValueCollection(IHttpContentCodingHeaderValueCollection&&) noexcept = default;
        IHttpContentCodingHeaderValueCollection& operator=(IHttpContentCodingHeaderValueCollection const&) & noexcept = default;
        IHttpContentCodingHeaderValueCollection& operator=(IHttpContentCodingHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentCodingHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentCodingHeaderValueFactory>
    {
        IHttpContentCodingHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpContentCodingHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentCodingHeaderValueFactory(IHttpContentCodingHeaderValueFactory const&) noexcept = default;
        IHttpContentCodingHeaderValueFactory(IHttpContentCodingHeaderValueFactory&&) noexcept = default;
        IHttpContentCodingHeaderValueFactory& operator=(IHttpContentCodingHeaderValueFactory const&) & noexcept = default;
        IHttpContentCodingHeaderValueFactory& operator=(IHttpContentCodingHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentCodingHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentCodingHeaderValueStatics>
    {
        IHttpContentCodingHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpContentCodingHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentCodingHeaderValueStatics(IHttpContentCodingHeaderValueStatics const&) noexcept = default;
        IHttpContentCodingHeaderValueStatics(IHttpContentCodingHeaderValueStatics&&) noexcept = default;
        IHttpContentCodingHeaderValueStatics& operator=(IHttpContentCodingHeaderValueStatics const&) & noexcept = default;
        IHttpContentCodingHeaderValueStatics& operator=(IHttpContentCodingHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentCodingWithQualityHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentCodingWithQualityHeaderValue>
    {
        IHttpContentCodingWithQualityHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpContentCodingWithQualityHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentCodingWithQualityHeaderValue(IHttpContentCodingWithQualityHeaderValue const&) noexcept = default;
        IHttpContentCodingWithQualityHeaderValue(IHttpContentCodingWithQualityHeaderValue&&) noexcept = default;
        IHttpContentCodingWithQualityHeaderValue& operator=(IHttpContentCodingWithQualityHeaderValue const&) & noexcept = default;
        IHttpContentCodingWithQualityHeaderValue& operator=(IHttpContentCodingWithQualityHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentCodingWithQualityHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentCodingWithQualityHeaderValueCollection>
    {
        IHttpContentCodingWithQualityHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpContentCodingWithQualityHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentCodingWithQualityHeaderValueCollection(IHttpContentCodingWithQualityHeaderValueCollection const&) noexcept = default;
        IHttpContentCodingWithQualityHeaderValueCollection(IHttpContentCodingWithQualityHeaderValueCollection&&) noexcept = default;
        IHttpContentCodingWithQualityHeaderValueCollection& operator=(IHttpContentCodingWithQualityHeaderValueCollection const&) & noexcept = default;
        IHttpContentCodingWithQualityHeaderValueCollection& operator=(IHttpContentCodingWithQualityHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentCodingWithQualityHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentCodingWithQualityHeaderValueFactory>
    {
        IHttpContentCodingWithQualityHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpContentCodingWithQualityHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentCodingWithQualityHeaderValueFactory(IHttpContentCodingWithQualityHeaderValueFactory const&) noexcept = default;
        IHttpContentCodingWithQualityHeaderValueFactory(IHttpContentCodingWithQualityHeaderValueFactory&&) noexcept = default;
        IHttpContentCodingWithQualityHeaderValueFactory& operator=(IHttpContentCodingWithQualityHeaderValueFactory const&) & noexcept = default;
        IHttpContentCodingWithQualityHeaderValueFactory& operator=(IHttpContentCodingWithQualityHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentCodingWithQualityHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentCodingWithQualityHeaderValueStatics>
    {
        IHttpContentCodingWithQualityHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpContentCodingWithQualityHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentCodingWithQualityHeaderValueStatics(IHttpContentCodingWithQualityHeaderValueStatics const&) noexcept = default;
        IHttpContentCodingWithQualityHeaderValueStatics(IHttpContentCodingWithQualityHeaderValueStatics&&) noexcept = default;
        IHttpContentCodingWithQualityHeaderValueStatics& operator=(IHttpContentCodingWithQualityHeaderValueStatics const&) & noexcept = default;
        IHttpContentCodingWithQualityHeaderValueStatics& operator=(IHttpContentCodingWithQualityHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentDispositionHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentDispositionHeaderValue>
    {
        IHttpContentDispositionHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpContentDispositionHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentDispositionHeaderValue(IHttpContentDispositionHeaderValue const&) noexcept = default;
        IHttpContentDispositionHeaderValue(IHttpContentDispositionHeaderValue&&) noexcept = default;
        IHttpContentDispositionHeaderValue& operator=(IHttpContentDispositionHeaderValue const&) & noexcept = default;
        IHttpContentDispositionHeaderValue& operator=(IHttpContentDispositionHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentDispositionHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentDispositionHeaderValueFactory>
    {
        IHttpContentDispositionHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpContentDispositionHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentDispositionHeaderValueFactory(IHttpContentDispositionHeaderValueFactory const&) noexcept = default;
        IHttpContentDispositionHeaderValueFactory(IHttpContentDispositionHeaderValueFactory&&) noexcept = default;
        IHttpContentDispositionHeaderValueFactory& operator=(IHttpContentDispositionHeaderValueFactory const&) & noexcept = default;
        IHttpContentDispositionHeaderValueFactory& operator=(IHttpContentDispositionHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentDispositionHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentDispositionHeaderValueStatics>
    {
        IHttpContentDispositionHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpContentDispositionHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentDispositionHeaderValueStatics(IHttpContentDispositionHeaderValueStatics const&) noexcept = default;
        IHttpContentDispositionHeaderValueStatics(IHttpContentDispositionHeaderValueStatics&&) noexcept = default;
        IHttpContentDispositionHeaderValueStatics& operator=(IHttpContentDispositionHeaderValueStatics const&) & noexcept = default;
        IHttpContentDispositionHeaderValueStatics& operator=(IHttpContentDispositionHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentHeaderCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentHeaderCollection>
    {
        IHttpContentHeaderCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpContentHeaderCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentHeaderCollection(IHttpContentHeaderCollection const&) noexcept = default;
        IHttpContentHeaderCollection(IHttpContentHeaderCollection&&) noexcept = default;
        IHttpContentHeaderCollection& operator=(IHttpContentHeaderCollection const&) & noexcept = default;
        IHttpContentHeaderCollection& operator=(IHttpContentHeaderCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentRangeHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentRangeHeaderValue>
    {
        IHttpContentRangeHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpContentRangeHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentRangeHeaderValue(IHttpContentRangeHeaderValue const&) noexcept = default;
        IHttpContentRangeHeaderValue(IHttpContentRangeHeaderValue&&) noexcept = default;
        IHttpContentRangeHeaderValue& operator=(IHttpContentRangeHeaderValue const&) & noexcept = default;
        IHttpContentRangeHeaderValue& operator=(IHttpContentRangeHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentRangeHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentRangeHeaderValueFactory>
    {
        IHttpContentRangeHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpContentRangeHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentRangeHeaderValueFactory(IHttpContentRangeHeaderValueFactory const&) noexcept = default;
        IHttpContentRangeHeaderValueFactory(IHttpContentRangeHeaderValueFactory&&) noexcept = default;
        IHttpContentRangeHeaderValueFactory& operator=(IHttpContentRangeHeaderValueFactory const&) & noexcept = default;
        IHttpContentRangeHeaderValueFactory& operator=(IHttpContentRangeHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpContentRangeHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpContentRangeHeaderValueStatics>
    {
        IHttpContentRangeHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpContentRangeHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpContentRangeHeaderValueStatics(IHttpContentRangeHeaderValueStatics const&) noexcept = default;
        IHttpContentRangeHeaderValueStatics(IHttpContentRangeHeaderValueStatics&&) noexcept = default;
        IHttpContentRangeHeaderValueStatics& operator=(IHttpContentRangeHeaderValueStatics const&) & noexcept = default;
        IHttpContentRangeHeaderValueStatics& operator=(IHttpContentRangeHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpCookiePairHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCookiePairHeaderValue>
    {
        IHttpCookiePairHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpCookiePairHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCookiePairHeaderValue(IHttpCookiePairHeaderValue const&) noexcept = default;
        IHttpCookiePairHeaderValue(IHttpCookiePairHeaderValue&&) noexcept = default;
        IHttpCookiePairHeaderValue& operator=(IHttpCookiePairHeaderValue const&) & noexcept = default;
        IHttpCookiePairHeaderValue& operator=(IHttpCookiePairHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpCookiePairHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCookiePairHeaderValueCollection>
    {
        IHttpCookiePairHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpCookiePairHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCookiePairHeaderValueCollection(IHttpCookiePairHeaderValueCollection const&) noexcept = default;
        IHttpCookiePairHeaderValueCollection(IHttpCookiePairHeaderValueCollection&&) noexcept = default;
        IHttpCookiePairHeaderValueCollection& operator=(IHttpCookiePairHeaderValueCollection const&) & noexcept = default;
        IHttpCookiePairHeaderValueCollection& operator=(IHttpCookiePairHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpCookiePairHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCookiePairHeaderValueFactory>
    {
        IHttpCookiePairHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpCookiePairHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCookiePairHeaderValueFactory(IHttpCookiePairHeaderValueFactory const&) noexcept = default;
        IHttpCookiePairHeaderValueFactory(IHttpCookiePairHeaderValueFactory&&) noexcept = default;
        IHttpCookiePairHeaderValueFactory& operator=(IHttpCookiePairHeaderValueFactory const&) & noexcept = default;
        IHttpCookiePairHeaderValueFactory& operator=(IHttpCookiePairHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpCookiePairHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCookiePairHeaderValueStatics>
    {
        IHttpCookiePairHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpCookiePairHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCookiePairHeaderValueStatics(IHttpCookiePairHeaderValueStatics const&) noexcept = default;
        IHttpCookiePairHeaderValueStatics(IHttpCookiePairHeaderValueStatics&&) noexcept = default;
        IHttpCookiePairHeaderValueStatics& operator=(IHttpCookiePairHeaderValueStatics const&) & noexcept = default;
        IHttpCookiePairHeaderValueStatics& operator=(IHttpCookiePairHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpCredentialsHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCredentialsHeaderValue>
    {
        IHttpCredentialsHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpCredentialsHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCredentialsHeaderValue(IHttpCredentialsHeaderValue const&) noexcept = default;
        IHttpCredentialsHeaderValue(IHttpCredentialsHeaderValue&&) noexcept = default;
        IHttpCredentialsHeaderValue& operator=(IHttpCredentialsHeaderValue const&) & noexcept = default;
        IHttpCredentialsHeaderValue& operator=(IHttpCredentialsHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpCredentialsHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCredentialsHeaderValueFactory>
    {
        IHttpCredentialsHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpCredentialsHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCredentialsHeaderValueFactory(IHttpCredentialsHeaderValueFactory const&) noexcept = default;
        IHttpCredentialsHeaderValueFactory(IHttpCredentialsHeaderValueFactory&&) noexcept = default;
        IHttpCredentialsHeaderValueFactory& operator=(IHttpCredentialsHeaderValueFactory const&) & noexcept = default;
        IHttpCredentialsHeaderValueFactory& operator=(IHttpCredentialsHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpCredentialsHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpCredentialsHeaderValueStatics>
    {
        IHttpCredentialsHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpCredentialsHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpCredentialsHeaderValueStatics(IHttpCredentialsHeaderValueStatics const&) noexcept = default;
        IHttpCredentialsHeaderValueStatics(IHttpCredentialsHeaderValueStatics&&) noexcept = default;
        IHttpCredentialsHeaderValueStatics& operator=(IHttpCredentialsHeaderValueStatics const&) & noexcept = default;
        IHttpCredentialsHeaderValueStatics& operator=(IHttpCredentialsHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpDateOrDeltaHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpDateOrDeltaHeaderValue>
    {
        IHttpDateOrDeltaHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpDateOrDeltaHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpDateOrDeltaHeaderValue(IHttpDateOrDeltaHeaderValue const&) noexcept = default;
        IHttpDateOrDeltaHeaderValue(IHttpDateOrDeltaHeaderValue&&) noexcept = default;
        IHttpDateOrDeltaHeaderValue& operator=(IHttpDateOrDeltaHeaderValue const&) & noexcept = default;
        IHttpDateOrDeltaHeaderValue& operator=(IHttpDateOrDeltaHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpDateOrDeltaHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpDateOrDeltaHeaderValueStatics>
    {
        IHttpDateOrDeltaHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpDateOrDeltaHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpDateOrDeltaHeaderValueStatics(IHttpDateOrDeltaHeaderValueStatics const&) noexcept = default;
        IHttpDateOrDeltaHeaderValueStatics(IHttpDateOrDeltaHeaderValueStatics&&) noexcept = default;
        IHttpDateOrDeltaHeaderValueStatics& operator=(IHttpDateOrDeltaHeaderValueStatics const&) & noexcept = default;
        IHttpDateOrDeltaHeaderValueStatics& operator=(IHttpDateOrDeltaHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpExpectationHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpExpectationHeaderValue>
    {
        IHttpExpectationHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpExpectationHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpExpectationHeaderValue(IHttpExpectationHeaderValue const&) noexcept = default;
        IHttpExpectationHeaderValue(IHttpExpectationHeaderValue&&) noexcept = default;
        IHttpExpectationHeaderValue& operator=(IHttpExpectationHeaderValue const&) & noexcept = default;
        IHttpExpectationHeaderValue& operator=(IHttpExpectationHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpExpectationHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpExpectationHeaderValueCollection>
    {
        IHttpExpectationHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpExpectationHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpExpectationHeaderValueCollection(IHttpExpectationHeaderValueCollection const&) noexcept = default;
        IHttpExpectationHeaderValueCollection(IHttpExpectationHeaderValueCollection&&) noexcept = default;
        IHttpExpectationHeaderValueCollection& operator=(IHttpExpectationHeaderValueCollection const&) & noexcept = default;
        IHttpExpectationHeaderValueCollection& operator=(IHttpExpectationHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpExpectationHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpExpectationHeaderValueFactory>
    {
        IHttpExpectationHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpExpectationHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpExpectationHeaderValueFactory(IHttpExpectationHeaderValueFactory const&) noexcept = default;
        IHttpExpectationHeaderValueFactory(IHttpExpectationHeaderValueFactory&&) noexcept = default;
        IHttpExpectationHeaderValueFactory& operator=(IHttpExpectationHeaderValueFactory const&) & noexcept = default;
        IHttpExpectationHeaderValueFactory& operator=(IHttpExpectationHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpExpectationHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpExpectationHeaderValueStatics>
    {
        IHttpExpectationHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpExpectationHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpExpectationHeaderValueStatics(IHttpExpectationHeaderValueStatics const&) noexcept = default;
        IHttpExpectationHeaderValueStatics(IHttpExpectationHeaderValueStatics&&) noexcept = default;
        IHttpExpectationHeaderValueStatics& operator=(IHttpExpectationHeaderValueStatics const&) & noexcept = default;
        IHttpExpectationHeaderValueStatics& operator=(IHttpExpectationHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpLanguageHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpLanguageHeaderValueCollection>
    {
        IHttpLanguageHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpLanguageHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpLanguageHeaderValueCollection(IHttpLanguageHeaderValueCollection const&) noexcept = default;
        IHttpLanguageHeaderValueCollection(IHttpLanguageHeaderValueCollection&&) noexcept = default;
        IHttpLanguageHeaderValueCollection& operator=(IHttpLanguageHeaderValueCollection const&) & noexcept = default;
        IHttpLanguageHeaderValueCollection& operator=(IHttpLanguageHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpLanguageRangeWithQualityHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpLanguageRangeWithQualityHeaderValue>
    {
        IHttpLanguageRangeWithQualityHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpLanguageRangeWithQualityHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpLanguageRangeWithQualityHeaderValue(IHttpLanguageRangeWithQualityHeaderValue const&) noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValue(IHttpLanguageRangeWithQualityHeaderValue&&) noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValue& operator=(IHttpLanguageRangeWithQualityHeaderValue const&) & noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValue& operator=(IHttpLanguageRangeWithQualityHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpLanguageRangeWithQualityHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpLanguageRangeWithQualityHeaderValueCollection>
    {
        IHttpLanguageRangeWithQualityHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpLanguageRangeWithQualityHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpLanguageRangeWithQualityHeaderValueCollection(IHttpLanguageRangeWithQualityHeaderValueCollection const&) noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValueCollection(IHttpLanguageRangeWithQualityHeaderValueCollection&&) noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValueCollection& operator=(IHttpLanguageRangeWithQualityHeaderValueCollection const&) & noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValueCollection& operator=(IHttpLanguageRangeWithQualityHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpLanguageRangeWithQualityHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpLanguageRangeWithQualityHeaderValueFactory>
    {
        IHttpLanguageRangeWithQualityHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpLanguageRangeWithQualityHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpLanguageRangeWithQualityHeaderValueFactory(IHttpLanguageRangeWithQualityHeaderValueFactory const&) noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValueFactory(IHttpLanguageRangeWithQualityHeaderValueFactory&&) noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValueFactory& operator=(IHttpLanguageRangeWithQualityHeaderValueFactory const&) & noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValueFactory& operator=(IHttpLanguageRangeWithQualityHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpLanguageRangeWithQualityHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpLanguageRangeWithQualityHeaderValueStatics>
    {
        IHttpLanguageRangeWithQualityHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpLanguageRangeWithQualityHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpLanguageRangeWithQualityHeaderValueStatics(IHttpLanguageRangeWithQualityHeaderValueStatics const&) noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValueStatics(IHttpLanguageRangeWithQualityHeaderValueStatics&&) noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValueStatics& operator=(IHttpLanguageRangeWithQualityHeaderValueStatics const&) & noexcept = default;
        IHttpLanguageRangeWithQualityHeaderValueStatics& operator=(IHttpLanguageRangeWithQualityHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMediaTypeHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMediaTypeHeaderValue>
    {
        IHttpMediaTypeHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpMediaTypeHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMediaTypeHeaderValue(IHttpMediaTypeHeaderValue const&) noexcept = default;
        IHttpMediaTypeHeaderValue(IHttpMediaTypeHeaderValue&&) noexcept = default;
        IHttpMediaTypeHeaderValue& operator=(IHttpMediaTypeHeaderValue const&) & noexcept = default;
        IHttpMediaTypeHeaderValue& operator=(IHttpMediaTypeHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMediaTypeHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMediaTypeHeaderValueFactory>
    {
        IHttpMediaTypeHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpMediaTypeHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMediaTypeHeaderValueFactory(IHttpMediaTypeHeaderValueFactory const&) noexcept = default;
        IHttpMediaTypeHeaderValueFactory(IHttpMediaTypeHeaderValueFactory&&) noexcept = default;
        IHttpMediaTypeHeaderValueFactory& operator=(IHttpMediaTypeHeaderValueFactory const&) & noexcept = default;
        IHttpMediaTypeHeaderValueFactory& operator=(IHttpMediaTypeHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMediaTypeHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMediaTypeHeaderValueStatics>
    {
        IHttpMediaTypeHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpMediaTypeHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMediaTypeHeaderValueStatics(IHttpMediaTypeHeaderValueStatics const&) noexcept = default;
        IHttpMediaTypeHeaderValueStatics(IHttpMediaTypeHeaderValueStatics&&) noexcept = default;
        IHttpMediaTypeHeaderValueStatics& operator=(IHttpMediaTypeHeaderValueStatics const&) & noexcept = default;
        IHttpMediaTypeHeaderValueStatics& operator=(IHttpMediaTypeHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMediaTypeWithQualityHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMediaTypeWithQualityHeaderValue>
    {
        IHttpMediaTypeWithQualityHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpMediaTypeWithQualityHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMediaTypeWithQualityHeaderValue(IHttpMediaTypeWithQualityHeaderValue const&) noexcept = default;
        IHttpMediaTypeWithQualityHeaderValue(IHttpMediaTypeWithQualityHeaderValue&&) noexcept = default;
        IHttpMediaTypeWithQualityHeaderValue& operator=(IHttpMediaTypeWithQualityHeaderValue const&) & noexcept = default;
        IHttpMediaTypeWithQualityHeaderValue& operator=(IHttpMediaTypeWithQualityHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMediaTypeWithQualityHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMediaTypeWithQualityHeaderValueCollection>
    {
        IHttpMediaTypeWithQualityHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpMediaTypeWithQualityHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMediaTypeWithQualityHeaderValueCollection(IHttpMediaTypeWithQualityHeaderValueCollection const&) noexcept = default;
        IHttpMediaTypeWithQualityHeaderValueCollection(IHttpMediaTypeWithQualityHeaderValueCollection&&) noexcept = default;
        IHttpMediaTypeWithQualityHeaderValueCollection& operator=(IHttpMediaTypeWithQualityHeaderValueCollection const&) & noexcept = default;
        IHttpMediaTypeWithQualityHeaderValueCollection& operator=(IHttpMediaTypeWithQualityHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMediaTypeWithQualityHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMediaTypeWithQualityHeaderValueFactory>
    {
        IHttpMediaTypeWithQualityHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpMediaTypeWithQualityHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMediaTypeWithQualityHeaderValueFactory(IHttpMediaTypeWithQualityHeaderValueFactory const&) noexcept = default;
        IHttpMediaTypeWithQualityHeaderValueFactory(IHttpMediaTypeWithQualityHeaderValueFactory&&) noexcept = default;
        IHttpMediaTypeWithQualityHeaderValueFactory& operator=(IHttpMediaTypeWithQualityHeaderValueFactory const&) & noexcept = default;
        IHttpMediaTypeWithQualityHeaderValueFactory& operator=(IHttpMediaTypeWithQualityHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMediaTypeWithQualityHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMediaTypeWithQualityHeaderValueStatics>
    {
        IHttpMediaTypeWithQualityHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpMediaTypeWithQualityHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMediaTypeWithQualityHeaderValueStatics(IHttpMediaTypeWithQualityHeaderValueStatics const&) noexcept = default;
        IHttpMediaTypeWithQualityHeaderValueStatics(IHttpMediaTypeWithQualityHeaderValueStatics&&) noexcept = default;
        IHttpMediaTypeWithQualityHeaderValueStatics& operator=(IHttpMediaTypeWithQualityHeaderValueStatics const&) & noexcept = default;
        IHttpMediaTypeWithQualityHeaderValueStatics& operator=(IHttpMediaTypeWithQualityHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMethodHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMethodHeaderValueCollection>
    {
        IHttpMethodHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpMethodHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMethodHeaderValueCollection(IHttpMethodHeaderValueCollection const&) noexcept = default;
        IHttpMethodHeaderValueCollection(IHttpMethodHeaderValueCollection&&) noexcept = default;
        IHttpMethodHeaderValueCollection& operator=(IHttpMethodHeaderValueCollection const&) & noexcept = default;
        IHttpMethodHeaderValueCollection& operator=(IHttpMethodHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpNameValueHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpNameValueHeaderValue>
    {
        IHttpNameValueHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpNameValueHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpNameValueHeaderValue(IHttpNameValueHeaderValue const&) noexcept = default;
        IHttpNameValueHeaderValue(IHttpNameValueHeaderValue&&) noexcept = default;
        IHttpNameValueHeaderValue& operator=(IHttpNameValueHeaderValue const&) & noexcept = default;
        IHttpNameValueHeaderValue& operator=(IHttpNameValueHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpNameValueHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpNameValueHeaderValueFactory>
    {
        IHttpNameValueHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpNameValueHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpNameValueHeaderValueFactory(IHttpNameValueHeaderValueFactory const&) noexcept = default;
        IHttpNameValueHeaderValueFactory(IHttpNameValueHeaderValueFactory&&) noexcept = default;
        IHttpNameValueHeaderValueFactory& operator=(IHttpNameValueHeaderValueFactory const&) & noexcept = default;
        IHttpNameValueHeaderValueFactory& operator=(IHttpNameValueHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpNameValueHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpNameValueHeaderValueStatics>
    {
        IHttpNameValueHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpNameValueHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpNameValueHeaderValueStatics(IHttpNameValueHeaderValueStatics const&) noexcept = default;
        IHttpNameValueHeaderValueStatics(IHttpNameValueHeaderValueStatics&&) noexcept = default;
        IHttpNameValueHeaderValueStatics& operator=(IHttpNameValueHeaderValueStatics const&) & noexcept = default;
        IHttpNameValueHeaderValueStatics& operator=(IHttpNameValueHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpProductHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpProductHeaderValue>
    {
        IHttpProductHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpProductHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpProductHeaderValue(IHttpProductHeaderValue const&) noexcept = default;
        IHttpProductHeaderValue(IHttpProductHeaderValue&&) noexcept = default;
        IHttpProductHeaderValue& operator=(IHttpProductHeaderValue const&) & noexcept = default;
        IHttpProductHeaderValue& operator=(IHttpProductHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpProductHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpProductHeaderValueFactory>
    {
        IHttpProductHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpProductHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpProductHeaderValueFactory(IHttpProductHeaderValueFactory const&) noexcept = default;
        IHttpProductHeaderValueFactory(IHttpProductHeaderValueFactory&&) noexcept = default;
        IHttpProductHeaderValueFactory& operator=(IHttpProductHeaderValueFactory const&) & noexcept = default;
        IHttpProductHeaderValueFactory& operator=(IHttpProductHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpProductHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpProductHeaderValueStatics>
    {
        IHttpProductHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpProductHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpProductHeaderValueStatics(IHttpProductHeaderValueStatics const&) noexcept = default;
        IHttpProductHeaderValueStatics(IHttpProductHeaderValueStatics&&) noexcept = default;
        IHttpProductHeaderValueStatics& operator=(IHttpProductHeaderValueStatics const&) & noexcept = default;
        IHttpProductHeaderValueStatics& operator=(IHttpProductHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpProductInfoHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpProductInfoHeaderValue>
    {
        IHttpProductInfoHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpProductInfoHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpProductInfoHeaderValue(IHttpProductInfoHeaderValue const&) noexcept = default;
        IHttpProductInfoHeaderValue(IHttpProductInfoHeaderValue&&) noexcept = default;
        IHttpProductInfoHeaderValue& operator=(IHttpProductInfoHeaderValue const&) & noexcept = default;
        IHttpProductInfoHeaderValue& operator=(IHttpProductInfoHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpProductInfoHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpProductInfoHeaderValueCollection>
    {
        IHttpProductInfoHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpProductInfoHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpProductInfoHeaderValueCollection(IHttpProductInfoHeaderValueCollection const&) noexcept = default;
        IHttpProductInfoHeaderValueCollection(IHttpProductInfoHeaderValueCollection&&) noexcept = default;
        IHttpProductInfoHeaderValueCollection& operator=(IHttpProductInfoHeaderValueCollection const&) & noexcept = default;
        IHttpProductInfoHeaderValueCollection& operator=(IHttpProductInfoHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpProductInfoHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpProductInfoHeaderValueFactory>
    {
        IHttpProductInfoHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpProductInfoHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpProductInfoHeaderValueFactory(IHttpProductInfoHeaderValueFactory const&) noexcept = default;
        IHttpProductInfoHeaderValueFactory(IHttpProductInfoHeaderValueFactory&&) noexcept = default;
        IHttpProductInfoHeaderValueFactory& operator=(IHttpProductInfoHeaderValueFactory const&) & noexcept = default;
        IHttpProductInfoHeaderValueFactory& operator=(IHttpProductInfoHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpProductInfoHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpProductInfoHeaderValueStatics>
    {
        IHttpProductInfoHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpProductInfoHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpProductInfoHeaderValueStatics(IHttpProductInfoHeaderValueStatics const&) noexcept = default;
        IHttpProductInfoHeaderValueStatics(IHttpProductInfoHeaderValueStatics&&) noexcept = default;
        IHttpProductInfoHeaderValueStatics& operator=(IHttpProductInfoHeaderValueStatics const&) & noexcept = default;
        IHttpProductInfoHeaderValueStatics& operator=(IHttpProductInfoHeaderValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpRequestHeaderCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpRequestHeaderCollection>
    {
        IHttpRequestHeaderCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpRequestHeaderCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpRequestHeaderCollection(IHttpRequestHeaderCollection const&) noexcept = default;
        IHttpRequestHeaderCollection(IHttpRequestHeaderCollection&&) noexcept = default;
        IHttpRequestHeaderCollection& operator=(IHttpRequestHeaderCollection const&) & noexcept = default;
        IHttpRequestHeaderCollection& operator=(IHttpRequestHeaderCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpResponseHeaderCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpResponseHeaderCollection>
    {
        IHttpResponseHeaderCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpResponseHeaderCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpResponseHeaderCollection(IHttpResponseHeaderCollection const&) noexcept = default;
        IHttpResponseHeaderCollection(IHttpResponseHeaderCollection&&) noexcept = default;
        IHttpResponseHeaderCollection& operator=(IHttpResponseHeaderCollection const&) & noexcept = default;
        IHttpResponseHeaderCollection& operator=(IHttpResponseHeaderCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpTransferCodingHeaderValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpTransferCodingHeaderValue>
    {
        IHttpTransferCodingHeaderValue(std::nullptr_t = nullptr) noexcept {}
        IHttpTransferCodingHeaderValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpTransferCodingHeaderValue(IHttpTransferCodingHeaderValue const&) noexcept = default;
        IHttpTransferCodingHeaderValue(IHttpTransferCodingHeaderValue&&) noexcept = default;
        IHttpTransferCodingHeaderValue& operator=(IHttpTransferCodingHeaderValue const&) & noexcept = default;
        IHttpTransferCodingHeaderValue& operator=(IHttpTransferCodingHeaderValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpTransferCodingHeaderValueCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpTransferCodingHeaderValueCollection>
    {
        IHttpTransferCodingHeaderValueCollection(std::nullptr_t = nullptr) noexcept {}
        IHttpTransferCodingHeaderValueCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpTransferCodingHeaderValueCollection(IHttpTransferCodingHeaderValueCollection const&) noexcept = default;
        IHttpTransferCodingHeaderValueCollection(IHttpTransferCodingHeaderValueCollection&&) noexcept = default;
        IHttpTransferCodingHeaderValueCollection& operator=(IHttpTransferCodingHeaderValueCollection const&) & noexcept = default;
        IHttpTransferCodingHeaderValueCollection& operator=(IHttpTransferCodingHeaderValueCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpTransferCodingHeaderValueFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpTransferCodingHeaderValueFactory>
    {
        IHttpTransferCodingHeaderValueFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpTransferCodingHeaderValueFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpTransferCodingHeaderValueFactory(IHttpTransferCodingHeaderValueFactory const&) noexcept = default;
        IHttpTransferCodingHeaderValueFactory(IHttpTransferCodingHeaderValueFactory&&) noexcept = default;
        IHttpTransferCodingHeaderValueFactory& operator=(IHttpTransferCodingHeaderValueFactory const&) & noexcept = default;
        IHttpTransferCodingHeaderValueFactory& operator=(IHttpTransferCodingHeaderValueFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpTransferCodingHeaderValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpTransferCodingHeaderValueStatics>
    {
        IHttpTransferCodingHeaderValueStatics(std::nullptr_t = nullptr) noexcept {}
        IHttpTransferCodingHeaderValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpTransferCodingHeaderValueStatics(IHttpTransferCodingHeaderValueStatics const&) noexcept = default;
        IHttpTransferCodingHeaderValueStatics(IHttpTransferCodingHeaderValueStatics&&) noexcept = default;
        IHttpTransferCodingHeaderValueStatics& operator=(IHttpTransferCodingHeaderValueStatics const&) & noexcept = default;
        IHttpTransferCodingHeaderValueStatics& operator=(IHttpTransferCodingHeaderValueStatics&&) & noexcept = default;
    };
}
#endif
