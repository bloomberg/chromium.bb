// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Devices_Sensors_Custom_1_H
#define WINRT_Windows_Devices_Sensors_Custom_1_H
#include "winrt/impl/Windows.Devices.Sensors.Custom.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Sensors::Custom
{
    struct __declspec(empty_bases) ICustomSensor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomSensor>
    {
        ICustomSensor(std::nullptr_t = nullptr) noexcept {}
        ICustomSensor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICustomSensor(ICustomSensor const&) noexcept = default;
        ICustomSensor(ICustomSensor&&) noexcept = default;
        ICustomSensor& operator=(ICustomSensor const&) & noexcept = default;
        ICustomSensor& operator=(ICustomSensor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICustomSensor2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomSensor2>
    {
        ICustomSensor2(std::nullptr_t = nullptr) noexcept {}
        ICustomSensor2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICustomSensor2(ICustomSensor2 const&) noexcept = default;
        ICustomSensor2(ICustomSensor2&&) noexcept = default;
        ICustomSensor2& operator=(ICustomSensor2 const&) & noexcept = default;
        ICustomSensor2& operator=(ICustomSensor2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICustomSensorReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomSensorReading>
    {
        ICustomSensorReading(std::nullptr_t = nullptr) noexcept {}
        ICustomSensorReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICustomSensorReading(ICustomSensorReading const&) noexcept = default;
        ICustomSensorReading(ICustomSensorReading&&) noexcept = default;
        ICustomSensorReading& operator=(ICustomSensorReading const&) & noexcept = default;
        ICustomSensorReading& operator=(ICustomSensorReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICustomSensorReading2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomSensorReading2>
    {
        ICustomSensorReading2(std::nullptr_t = nullptr) noexcept {}
        ICustomSensorReading2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICustomSensorReading2(ICustomSensorReading2 const&) noexcept = default;
        ICustomSensorReading2(ICustomSensorReading2&&) noexcept = default;
        ICustomSensorReading2& operator=(ICustomSensorReading2 const&) & noexcept = default;
        ICustomSensorReading2& operator=(ICustomSensorReading2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICustomSensorReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomSensorReadingChangedEventArgs>
    {
        ICustomSensorReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICustomSensorReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICustomSensorReadingChangedEventArgs(ICustomSensorReadingChangedEventArgs const&) noexcept = default;
        ICustomSensorReadingChangedEventArgs(ICustomSensorReadingChangedEventArgs&&) noexcept = default;
        ICustomSensorReadingChangedEventArgs& operator=(ICustomSensorReadingChangedEventArgs const&) & noexcept = default;
        ICustomSensorReadingChangedEventArgs& operator=(ICustomSensorReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICustomSensorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomSensorStatics>
    {
        ICustomSensorStatics(std::nullptr_t = nullptr) noexcept {}
        ICustomSensorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICustomSensorStatics(ICustomSensorStatics const&) noexcept = default;
        ICustomSensorStatics(ICustomSensorStatics&&) noexcept = default;
        ICustomSensorStatics& operator=(ICustomSensorStatics const&) & noexcept = default;
        ICustomSensorStatics& operator=(ICustomSensorStatics&&) & noexcept = default;
    };
}
#endif
