// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_UserDataTasks_DataProvider_1_H
#define WINRT_Windows_ApplicationModel_UserDataTasks_DataProvider_1_H
#include "winrt/impl/Windows.ApplicationModel.UserDataTasks.DataProvider.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::UserDataTasks::DataProvider
{
    struct __declspec(empty_bases) IUserDataTaskDataProviderConnection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskDataProviderConnection>
    {
        IUserDataTaskDataProviderConnection(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskDataProviderConnection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskDataProviderConnection(IUserDataTaskDataProviderConnection const&) noexcept = default;
        IUserDataTaskDataProviderConnection(IUserDataTaskDataProviderConnection&&) noexcept = default;
        IUserDataTaskDataProviderConnection& operator=(IUserDataTaskDataProviderConnection const&) & noexcept = default;
        IUserDataTaskDataProviderConnection& operator=(IUserDataTaskDataProviderConnection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskDataProviderTriggerDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskDataProviderTriggerDetails>
    {
        IUserDataTaskDataProviderTriggerDetails(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskDataProviderTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskDataProviderTriggerDetails(IUserDataTaskDataProviderTriggerDetails const&) noexcept = default;
        IUserDataTaskDataProviderTriggerDetails(IUserDataTaskDataProviderTriggerDetails&&) noexcept = default;
        IUserDataTaskDataProviderTriggerDetails& operator=(IUserDataTaskDataProviderTriggerDetails const&) & noexcept = default;
        IUserDataTaskDataProviderTriggerDetails& operator=(IUserDataTaskDataProviderTriggerDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskListCompleteTaskRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskListCompleteTaskRequest>
    {
        IUserDataTaskListCompleteTaskRequest(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskListCompleteTaskRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskListCompleteTaskRequest(IUserDataTaskListCompleteTaskRequest const&) noexcept = default;
        IUserDataTaskListCompleteTaskRequest(IUserDataTaskListCompleteTaskRequest&&) noexcept = default;
        IUserDataTaskListCompleteTaskRequest& operator=(IUserDataTaskListCompleteTaskRequest const&) & noexcept = default;
        IUserDataTaskListCompleteTaskRequest& operator=(IUserDataTaskListCompleteTaskRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskListCompleteTaskRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskListCompleteTaskRequestEventArgs>
    {
        IUserDataTaskListCompleteTaskRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskListCompleteTaskRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskListCompleteTaskRequestEventArgs(IUserDataTaskListCompleteTaskRequestEventArgs const&) noexcept = default;
        IUserDataTaskListCompleteTaskRequestEventArgs(IUserDataTaskListCompleteTaskRequestEventArgs&&) noexcept = default;
        IUserDataTaskListCompleteTaskRequestEventArgs& operator=(IUserDataTaskListCompleteTaskRequestEventArgs const&) & noexcept = default;
        IUserDataTaskListCompleteTaskRequestEventArgs& operator=(IUserDataTaskListCompleteTaskRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskListCreateOrUpdateTaskRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskListCreateOrUpdateTaskRequest>
    {
        IUserDataTaskListCreateOrUpdateTaskRequest(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskListCreateOrUpdateTaskRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskListCreateOrUpdateTaskRequest(IUserDataTaskListCreateOrUpdateTaskRequest const&) noexcept = default;
        IUserDataTaskListCreateOrUpdateTaskRequest(IUserDataTaskListCreateOrUpdateTaskRequest&&) noexcept = default;
        IUserDataTaskListCreateOrUpdateTaskRequest& operator=(IUserDataTaskListCreateOrUpdateTaskRequest const&) & noexcept = default;
        IUserDataTaskListCreateOrUpdateTaskRequest& operator=(IUserDataTaskListCreateOrUpdateTaskRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskListCreateOrUpdateTaskRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskListCreateOrUpdateTaskRequestEventArgs>
    {
        IUserDataTaskListCreateOrUpdateTaskRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskListCreateOrUpdateTaskRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskListCreateOrUpdateTaskRequestEventArgs(IUserDataTaskListCreateOrUpdateTaskRequestEventArgs const&) noexcept = default;
        IUserDataTaskListCreateOrUpdateTaskRequestEventArgs(IUserDataTaskListCreateOrUpdateTaskRequestEventArgs&&) noexcept = default;
        IUserDataTaskListCreateOrUpdateTaskRequestEventArgs& operator=(IUserDataTaskListCreateOrUpdateTaskRequestEventArgs const&) & noexcept = default;
        IUserDataTaskListCreateOrUpdateTaskRequestEventArgs& operator=(IUserDataTaskListCreateOrUpdateTaskRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskListDeleteTaskRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskListDeleteTaskRequest>
    {
        IUserDataTaskListDeleteTaskRequest(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskListDeleteTaskRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskListDeleteTaskRequest(IUserDataTaskListDeleteTaskRequest const&) noexcept = default;
        IUserDataTaskListDeleteTaskRequest(IUserDataTaskListDeleteTaskRequest&&) noexcept = default;
        IUserDataTaskListDeleteTaskRequest& operator=(IUserDataTaskListDeleteTaskRequest const&) & noexcept = default;
        IUserDataTaskListDeleteTaskRequest& operator=(IUserDataTaskListDeleteTaskRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskListDeleteTaskRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskListDeleteTaskRequestEventArgs>
    {
        IUserDataTaskListDeleteTaskRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskListDeleteTaskRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskListDeleteTaskRequestEventArgs(IUserDataTaskListDeleteTaskRequestEventArgs const&) noexcept = default;
        IUserDataTaskListDeleteTaskRequestEventArgs(IUserDataTaskListDeleteTaskRequestEventArgs&&) noexcept = default;
        IUserDataTaskListDeleteTaskRequestEventArgs& operator=(IUserDataTaskListDeleteTaskRequestEventArgs const&) & noexcept = default;
        IUserDataTaskListDeleteTaskRequestEventArgs& operator=(IUserDataTaskListDeleteTaskRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskListSkipOccurrenceRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskListSkipOccurrenceRequest>
    {
        IUserDataTaskListSkipOccurrenceRequest(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskListSkipOccurrenceRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskListSkipOccurrenceRequest(IUserDataTaskListSkipOccurrenceRequest const&) noexcept = default;
        IUserDataTaskListSkipOccurrenceRequest(IUserDataTaskListSkipOccurrenceRequest&&) noexcept = default;
        IUserDataTaskListSkipOccurrenceRequest& operator=(IUserDataTaskListSkipOccurrenceRequest const&) & noexcept = default;
        IUserDataTaskListSkipOccurrenceRequest& operator=(IUserDataTaskListSkipOccurrenceRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskListSkipOccurrenceRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskListSkipOccurrenceRequestEventArgs>
    {
        IUserDataTaskListSkipOccurrenceRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskListSkipOccurrenceRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskListSkipOccurrenceRequestEventArgs(IUserDataTaskListSkipOccurrenceRequestEventArgs const&) noexcept = default;
        IUserDataTaskListSkipOccurrenceRequestEventArgs(IUserDataTaskListSkipOccurrenceRequestEventArgs&&) noexcept = default;
        IUserDataTaskListSkipOccurrenceRequestEventArgs& operator=(IUserDataTaskListSkipOccurrenceRequestEventArgs const&) & noexcept = default;
        IUserDataTaskListSkipOccurrenceRequestEventArgs& operator=(IUserDataTaskListSkipOccurrenceRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskListSyncManagerSyncRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskListSyncManagerSyncRequest>
    {
        IUserDataTaskListSyncManagerSyncRequest(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskListSyncManagerSyncRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskListSyncManagerSyncRequest(IUserDataTaskListSyncManagerSyncRequest const&) noexcept = default;
        IUserDataTaskListSyncManagerSyncRequest(IUserDataTaskListSyncManagerSyncRequest&&) noexcept = default;
        IUserDataTaskListSyncManagerSyncRequest& operator=(IUserDataTaskListSyncManagerSyncRequest const&) & noexcept = default;
        IUserDataTaskListSyncManagerSyncRequest& operator=(IUserDataTaskListSyncManagerSyncRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDataTaskListSyncManagerSyncRequestEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDataTaskListSyncManagerSyncRequestEventArgs>
    {
        IUserDataTaskListSyncManagerSyncRequestEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUserDataTaskListSyncManagerSyncRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDataTaskListSyncManagerSyncRequestEventArgs(IUserDataTaskListSyncManagerSyncRequestEventArgs const&) noexcept = default;
        IUserDataTaskListSyncManagerSyncRequestEventArgs(IUserDataTaskListSyncManagerSyncRequestEventArgs&&) noexcept = default;
        IUserDataTaskListSyncManagerSyncRequestEventArgs& operator=(IUserDataTaskListSyncManagerSyncRequestEventArgs const&) & noexcept = default;
        IUserDataTaskListSyncManagerSyncRequestEventArgs& operator=(IUserDataTaskListSyncManagerSyncRequestEventArgs&&) & noexcept = default;
    };
}
#endif
