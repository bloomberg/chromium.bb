// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Devices_Sensors_1_H
#define WINRT_Windows_Devices_Sensors_1_H
#include "winrt/impl/Windows.Devices.Sensors.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Sensors
{
    struct __declspec(empty_bases) IAccelerometer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometer>
    {
        IAccelerometer(std::nullptr_t = nullptr) noexcept {}
        IAccelerometer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometer(IAccelerometer const&) noexcept = default;
        IAccelerometer(IAccelerometer&&) noexcept = default;
        IAccelerometer& operator=(IAccelerometer const&) & noexcept = default;
        IAccelerometer& operator=(IAccelerometer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometer2>
    {
        IAccelerometer2(std::nullptr_t = nullptr) noexcept {}
        IAccelerometer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometer2(IAccelerometer2 const&) noexcept = default;
        IAccelerometer2(IAccelerometer2&&) noexcept = default;
        IAccelerometer2& operator=(IAccelerometer2 const&) & noexcept = default;
        IAccelerometer2& operator=(IAccelerometer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometer3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometer3>
    {
        IAccelerometer3(std::nullptr_t = nullptr) noexcept {}
        IAccelerometer3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometer3(IAccelerometer3 const&) noexcept = default;
        IAccelerometer3(IAccelerometer3&&) noexcept = default;
        IAccelerometer3& operator=(IAccelerometer3 const&) & noexcept = default;
        IAccelerometer3& operator=(IAccelerometer3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometer4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometer4>
    {
        IAccelerometer4(std::nullptr_t = nullptr) noexcept {}
        IAccelerometer4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometer4(IAccelerometer4 const&) noexcept = default;
        IAccelerometer4(IAccelerometer4&&) noexcept = default;
        IAccelerometer4& operator=(IAccelerometer4 const&) & noexcept = default;
        IAccelerometer4& operator=(IAccelerometer4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometer5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometer5>
    {
        IAccelerometer5(std::nullptr_t = nullptr) noexcept {}
        IAccelerometer5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometer5(IAccelerometer5 const&) noexcept = default;
        IAccelerometer5(IAccelerometer5&&) noexcept = default;
        IAccelerometer5& operator=(IAccelerometer5 const&) & noexcept = default;
        IAccelerometer5& operator=(IAccelerometer5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometerDataThreshold :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometerDataThreshold>
    {
        IAccelerometerDataThreshold(std::nullptr_t = nullptr) noexcept {}
        IAccelerometerDataThreshold(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometerDataThreshold(IAccelerometerDataThreshold const&) noexcept = default;
        IAccelerometerDataThreshold(IAccelerometerDataThreshold&&) noexcept = default;
        IAccelerometerDataThreshold& operator=(IAccelerometerDataThreshold const&) & noexcept = default;
        IAccelerometerDataThreshold& operator=(IAccelerometerDataThreshold&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometerDeviceId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometerDeviceId>
    {
        IAccelerometerDeviceId(std::nullptr_t = nullptr) noexcept {}
        IAccelerometerDeviceId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometerDeviceId(IAccelerometerDeviceId const&) noexcept = default;
        IAccelerometerDeviceId(IAccelerometerDeviceId&&) noexcept = default;
        IAccelerometerDeviceId& operator=(IAccelerometerDeviceId const&) & noexcept = default;
        IAccelerometerDeviceId& operator=(IAccelerometerDeviceId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometerReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometerReading>
    {
        IAccelerometerReading(std::nullptr_t = nullptr) noexcept {}
        IAccelerometerReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometerReading(IAccelerometerReading const&) noexcept = default;
        IAccelerometerReading(IAccelerometerReading&&) noexcept = default;
        IAccelerometerReading& operator=(IAccelerometerReading const&) & noexcept = default;
        IAccelerometerReading& operator=(IAccelerometerReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometerReading2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometerReading2>
    {
        IAccelerometerReading2(std::nullptr_t = nullptr) noexcept {}
        IAccelerometerReading2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometerReading2(IAccelerometerReading2 const&) noexcept = default;
        IAccelerometerReading2(IAccelerometerReading2&&) noexcept = default;
        IAccelerometerReading2& operator=(IAccelerometerReading2 const&) & noexcept = default;
        IAccelerometerReading2& operator=(IAccelerometerReading2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometerReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometerReadingChangedEventArgs>
    {
        IAccelerometerReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAccelerometerReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometerReadingChangedEventArgs(IAccelerometerReadingChangedEventArgs const&) noexcept = default;
        IAccelerometerReadingChangedEventArgs(IAccelerometerReadingChangedEventArgs&&) noexcept = default;
        IAccelerometerReadingChangedEventArgs& operator=(IAccelerometerReadingChangedEventArgs const&) & noexcept = default;
        IAccelerometerReadingChangedEventArgs& operator=(IAccelerometerReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometerShakenEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometerShakenEventArgs>
    {
        IAccelerometerShakenEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAccelerometerShakenEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometerShakenEventArgs(IAccelerometerShakenEventArgs const&) noexcept = default;
        IAccelerometerShakenEventArgs(IAccelerometerShakenEventArgs&&) noexcept = default;
        IAccelerometerShakenEventArgs& operator=(IAccelerometerShakenEventArgs const&) & noexcept = default;
        IAccelerometerShakenEventArgs& operator=(IAccelerometerShakenEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometerStatics>
    {
        IAccelerometerStatics(std::nullptr_t = nullptr) noexcept {}
        IAccelerometerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometerStatics(IAccelerometerStatics const&) noexcept = default;
        IAccelerometerStatics(IAccelerometerStatics&&) noexcept = default;
        IAccelerometerStatics& operator=(IAccelerometerStatics const&) & noexcept = default;
        IAccelerometerStatics& operator=(IAccelerometerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometerStatics2>
    {
        IAccelerometerStatics2(std::nullptr_t = nullptr) noexcept {}
        IAccelerometerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometerStatics2(IAccelerometerStatics2 const&) noexcept = default;
        IAccelerometerStatics2(IAccelerometerStatics2&&) noexcept = default;
        IAccelerometerStatics2& operator=(IAccelerometerStatics2 const&) & noexcept = default;
        IAccelerometerStatics2& operator=(IAccelerometerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccelerometerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccelerometerStatics3>
    {
        IAccelerometerStatics3(std::nullptr_t = nullptr) noexcept {}
        IAccelerometerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccelerometerStatics3(IAccelerometerStatics3 const&) noexcept = default;
        IAccelerometerStatics3(IAccelerometerStatics3&&) noexcept = default;
        IAccelerometerStatics3& operator=(IAccelerometerStatics3 const&) & noexcept = default;
        IAccelerometerStatics3& operator=(IAccelerometerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActivitySensor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivitySensor>
    {
        IActivitySensor(std::nullptr_t = nullptr) noexcept {}
        IActivitySensor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActivitySensor(IActivitySensor const&) noexcept = default;
        IActivitySensor(IActivitySensor&&) noexcept = default;
        IActivitySensor& operator=(IActivitySensor const&) & noexcept = default;
        IActivitySensor& operator=(IActivitySensor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActivitySensorReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivitySensorReading>
    {
        IActivitySensorReading(std::nullptr_t = nullptr) noexcept {}
        IActivitySensorReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActivitySensorReading(IActivitySensorReading const&) noexcept = default;
        IActivitySensorReading(IActivitySensorReading&&) noexcept = default;
        IActivitySensorReading& operator=(IActivitySensorReading const&) & noexcept = default;
        IActivitySensorReading& operator=(IActivitySensorReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActivitySensorReadingChangeReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivitySensorReadingChangeReport>
    {
        IActivitySensorReadingChangeReport(std::nullptr_t = nullptr) noexcept {}
        IActivitySensorReadingChangeReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActivitySensorReadingChangeReport(IActivitySensorReadingChangeReport const&) noexcept = default;
        IActivitySensorReadingChangeReport(IActivitySensorReadingChangeReport&&) noexcept = default;
        IActivitySensorReadingChangeReport& operator=(IActivitySensorReadingChangeReport const&) & noexcept = default;
        IActivitySensorReadingChangeReport& operator=(IActivitySensorReadingChangeReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActivitySensorReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivitySensorReadingChangedEventArgs>
    {
        IActivitySensorReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IActivitySensorReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActivitySensorReadingChangedEventArgs(IActivitySensorReadingChangedEventArgs const&) noexcept = default;
        IActivitySensorReadingChangedEventArgs(IActivitySensorReadingChangedEventArgs&&) noexcept = default;
        IActivitySensorReadingChangedEventArgs& operator=(IActivitySensorReadingChangedEventArgs const&) & noexcept = default;
        IActivitySensorReadingChangedEventArgs& operator=(IActivitySensorReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActivitySensorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivitySensorStatics>
    {
        IActivitySensorStatics(std::nullptr_t = nullptr) noexcept {}
        IActivitySensorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActivitySensorStatics(IActivitySensorStatics const&) noexcept = default;
        IActivitySensorStatics(IActivitySensorStatics&&) noexcept = default;
        IActivitySensorStatics& operator=(IActivitySensorStatics const&) & noexcept = default;
        IActivitySensorStatics& operator=(IActivitySensorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActivitySensorTriggerDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivitySensorTriggerDetails>
    {
        IActivitySensorTriggerDetails(std::nullptr_t = nullptr) noexcept {}
        IActivitySensorTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActivitySensorTriggerDetails(IActivitySensorTriggerDetails const&) noexcept = default;
        IActivitySensorTriggerDetails(IActivitySensorTriggerDetails&&) noexcept = default;
        IActivitySensorTriggerDetails& operator=(IActivitySensorTriggerDetails const&) & noexcept = default;
        IActivitySensorTriggerDetails& operator=(IActivitySensorTriggerDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAltimeter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAltimeter>
    {
        IAltimeter(std::nullptr_t = nullptr) noexcept {}
        IAltimeter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAltimeter(IAltimeter const&) noexcept = default;
        IAltimeter(IAltimeter&&) noexcept = default;
        IAltimeter& operator=(IAltimeter const&) & noexcept = default;
        IAltimeter& operator=(IAltimeter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAltimeter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAltimeter2>
    {
        IAltimeter2(std::nullptr_t = nullptr) noexcept {}
        IAltimeter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAltimeter2(IAltimeter2 const&) noexcept = default;
        IAltimeter2(IAltimeter2&&) noexcept = default;
        IAltimeter2& operator=(IAltimeter2 const&) & noexcept = default;
        IAltimeter2& operator=(IAltimeter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAltimeterReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAltimeterReading>
    {
        IAltimeterReading(std::nullptr_t = nullptr) noexcept {}
        IAltimeterReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAltimeterReading(IAltimeterReading const&) noexcept = default;
        IAltimeterReading(IAltimeterReading&&) noexcept = default;
        IAltimeterReading& operator=(IAltimeterReading const&) & noexcept = default;
        IAltimeterReading& operator=(IAltimeterReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAltimeterReading2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAltimeterReading2>
    {
        IAltimeterReading2(std::nullptr_t = nullptr) noexcept {}
        IAltimeterReading2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAltimeterReading2(IAltimeterReading2 const&) noexcept = default;
        IAltimeterReading2(IAltimeterReading2&&) noexcept = default;
        IAltimeterReading2& operator=(IAltimeterReading2 const&) & noexcept = default;
        IAltimeterReading2& operator=(IAltimeterReading2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAltimeterReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAltimeterReadingChangedEventArgs>
    {
        IAltimeterReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAltimeterReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAltimeterReadingChangedEventArgs(IAltimeterReadingChangedEventArgs const&) noexcept = default;
        IAltimeterReadingChangedEventArgs(IAltimeterReadingChangedEventArgs&&) noexcept = default;
        IAltimeterReadingChangedEventArgs& operator=(IAltimeterReadingChangedEventArgs const&) & noexcept = default;
        IAltimeterReadingChangedEventArgs& operator=(IAltimeterReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAltimeterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAltimeterStatics>
    {
        IAltimeterStatics(std::nullptr_t = nullptr) noexcept {}
        IAltimeterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAltimeterStatics(IAltimeterStatics const&) noexcept = default;
        IAltimeterStatics(IAltimeterStatics&&) noexcept = default;
        IAltimeterStatics& operator=(IAltimeterStatics const&) & noexcept = default;
        IAltimeterStatics& operator=(IAltimeterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarometer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarometer>
    {
        IBarometer(std::nullptr_t = nullptr) noexcept {}
        IBarometer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarometer(IBarometer const&) noexcept = default;
        IBarometer(IBarometer&&) noexcept = default;
        IBarometer& operator=(IBarometer const&) & noexcept = default;
        IBarometer& operator=(IBarometer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarometer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarometer2>
    {
        IBarometer2(std::nullptr_t = nullptr) noexcept {}
        IBarometer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarometer2(IBarometer2 const&) noexcept = default;
        IBarometer2(IBarometer2&&) noexcept = default;
        IBarometer2& operator=(IBarometer2 const&) & noexcept = default;
        IBarometer2& operator=(IBarometer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarometer3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarometer3>
    {
        IBarometer3(std::nullptr_t = nullptr) noexcept {}
        IBarometer3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarometer3(IBarometer3 const&) noexcept = default;
        IBarometer3(IBarometer3&&) noexcept = default;
        IBarometer3& operator=(IBarometer3 const&) & noexcept = default;
        IBarometer3& operator=(IBarometer3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarometerDataThreshold :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarometerDataThreshold>
    {
        IBarometerDataThreshold(std::nullptr_t = nullptr) noexcept {}
        IBarometerDataThreshold(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarometerDataThreshold(IBarometerDataThreshold const&) noexcept = default;
        IBarometerDataThreshold(IBarometerDataThreshold&&) noexcept = default;
        IBarometerDataThreshold& operator=(IBarometerDataThreshold const&) & noexcept = default;
        IBarometerDataThreshold& operator=(IBarometerDataThreshold&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarometerReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarometerReading>
    {
        IBarometerReading(std::nullptr_t = nullptr) noexcept {}
        IBarometerReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarometerReading(IBarometerReading const&) noexcept = default;
        IBarometerReading(IBarometerReading&&) noexcept = default;
        IBarometerReading& operator=(IBarometerReading const&) & noexcept = default;
        IBarometerReading& operator=(IBarometerReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarometerReading2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarometerReading2>
    {
        IBarometerReading2(std::nullptr_t = nullptr) noexcept {}
        IBarometerReading2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarometerReading2(IBarometerReading2 const&) noexcept = default;
        IBarometerReading2(IBarometerReading2&&) noexcept = default;
        IBarometerReading2& operator=(IBarometerReading2 const&) & noexcept = default;
        IBarometerReading2& operator=(IBarometerReading2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarometerReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarometerReadingChangedEventArgs>
    {
        IBarometerReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IBarometerReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarometerReadingChangedEventArgs(IBarometerReadingChangedEventArgs const&) noexcept = default;
        IBarometerReadingChangedEventArgs(IBarometerReadingChangedEventArgs&&) noexcept = default;
        IBarometerReadingChangedEventArgs& operator=(IBarometerReadingChangedEventArgs const&) & noexcept = default;
        IBarometerReadingChangedEventArgs& operator=(IBarometerReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarometerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarometerStatics>
    {
        IBarometerStatics(std::nullptr_t = nullptr) noexcept {}
        IBarometerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarometerStatics(IBarometerStatics const&) noexcept = default;
        IBarometerStatics(IBarometerStatics&&) noexcept = default;
        IBarometerStatics& operator=(IBarometerStatics const&) & noexcept = default;
        IBarometerStatics& operator=(IBarometerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBarometerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBarometerStatics2>
    {
        IBarometerStatics2(std::nullptr_t = nullptr) noexcept {}
        IBarometerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBarometerStatics2(IBarometerStatics2 const&) noexcept = default;
        IBarometerStatics2(IBarometerStatics2&&) noexcept = default;
        IBarometerStatics2& operator=(IBarometerStatics2 const&) & noexcept = default;
        IBarometerStatics2& operator=(IBarometerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompass :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompass>
    {
        ICompass(std::nullptr_t = nullptr) noexcept {}
        ICompass(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompass(ICompass const&) noexcept = default;
        ICompass(ICompass&&) noexcept = default;
        ICompass& operator=(ICompass const&) & noexcept = default;
        ICompass& operator=(ICompass&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompass2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompass2>
    {
        ICompass2(std::nullptr_t = nullptr) noexcept {}
        ICompass2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompass2(ICompass2 const&) noexcept = default;
        ICompass2(ICompass2&&) noexcept = default;
        ICompass2& operator=(ICompass2 const&) & noexcept = default;
        ICompass2& operator=(ICompass2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompass3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompass3>
    {
        ICompass3(std::nullptr_t = nullptr) noexcept {}
        ICompass3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompass3(ICompass3 const&) noexcept = default;
        ICompass3(ICompass3&&) noexcept = default;
        ICompass3& operator=(ICompass3 const&) & noexcept = default;
        ICompass3& operator=(ICompass3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompass4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompass4>
    {
        ICompass4(std::nullptr_t = nullptr) noexcept {}
        ICompass4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompass4(ICompass4 const&) noexcept = default;
        ICompass4(ICompass4&&) noexcept = default;
        ICompass4& operator=(ICompass4 const&) & noexcept = default;
        ICompass4& operator=(ICompass4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompassDataThreshold :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompassDataThreshold>
    {
        ICompassDataThreshold(std::nullptr_t = nullptr) noexcept {}
        ICompassDataThreshold(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompassDataThreshold(ICompassDataThreshold const&) noexcept = default;
        ICompassDataThreshold(ICompassDataThreshold&&) noexcept = default;
        ICompassDataThreshold& operator=(ICompassDataThreshold const&) & noexcept = default;
        ICompassDataThreshold& operator=(ICompassDataThreshold&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompassDeviceId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompassDeviceId>
    {
        ICompassDeviceId(std::nullptr_t = nullptr) noexcept {}
        ICompassDeviceId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompassDeviceId(ICompassDeviceId const&) noexcept = default;
        ICompassDeviceId(ICompassDeviceId&&) noexcept = default;
        ICompassDeviceId& operator=(ICompassDeviceId const&) & noexcept = default;
        ICompassDeviceId& operator=(ICompassDeviceId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompassReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompassReading>
    {
        ICompassReading(std::nullptr_t = nullptr) noexcept {}
        ICompassReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompassReading(ICompassReading const&) noexcept = default;
        ICompassReading(ICompassReading&&) noexcept = default;
        ICompassReading& operator=(ICompassReading const&) & noexcept = default;
        ICompassReading& operator=(ICompassReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompassReading2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompassReading2>
    {
        ICompassReading2(std::nullptr_t = nullptr) noexcept {}
        ICompassReading2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompassReading2(ICompassReading2 const&) noexcept = default;
        ICompassReading2(ICompassReading2&&) noexcept = default;
        ICompassReading2& operator=(ICompassReading2 const&) & noexcept = default;
        ICompassReading2& operator=(ICompassReading2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompassReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompassReadingChangedEventArgs>
    {
        ICompassReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICompassReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompassReadingChangedEventArgs(ICompassReadingChangedEventArgs const&) noexcept = default;
        ICompassReadingChangedEventArgs(ICompassReadingChangedEventArgs&&) noexcept = default;
        ICompassReadingChangedEventArgs& operator=(ICompassReadingChangedEventArgs const&) & noexcept = default;
        ICompassReadingChangedEventArgs& operator=(ICompassReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompassReadingHeadingAccuracy :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompassReadingHeadingAccuracy>
    {
        ICompassReadingHeadingAccuracy(std::nullptr_t = nullptr) noexcept {}
        ICompassReadingHeadingAccuracy(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompassReadingHeadingAccuracy(ICompassReadingHeadingAccuracy const&) noexcept = default;
        ICompassReadingHeadingAccuracy(ICompassReadingHeadingAccuracy&&) noexcept = default;
        ICompassReadingHeadingAccuracy& operator=(ICompassReadingHeadingAccuracy const&) & noexcept = default;
        ICompassReadingHeadingAccuracy& operator=(ICompassReadingHeadingAccuracy&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompassStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompassStatics>
    {
        ICompassStatics(std::nullptr_t = nullptr) noexcept {}
        ICompassStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompassStatics(ICompassStatics const&) noexcept = default;
        ICompassStatics(ICompassStatics&&) noexcept = default;
        ICompassStatics& operator=(ICompassStatics const&) & noexcept = default;
        ICompassStatics& operator=(ICompassStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICompassStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICompassStatics2>
    {
        ICompassStatics2(std::nullptr_t = nullptr) noexcept {}
        ICompassStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICompassStatics2(ICompassStatics2 const&) noexcept = default;
        ICompassStatics2(ICompassStatics2&&) noexcept = default;
        ICompassStatics2& operator=(ICompassStatics2 const&) & noexcept = default;
        ICompassStatics2& operator=(ICompassStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometer>
    {
        IGyrometer(std::nullptr_t = nullptr) noexcept {}
        IGyrometer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometer(IGyrometer const&) noexcept = default;
        IGyrometer(IGyrometer&&) noexcept = default;
        IGyrometer& operator=(IGyrometer const&) & noexcept = default;
        IGyrometer& operator=(IGyrometer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometer2>
    {
        IGyrometer2(std::nullptr_t = nullptr) noexcept {}
        IGyrometer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometer2(IGyrometer2 const&) noexcept = default;
        IGyrometer2(IGyrometer2&&) noexcept = default;
        IGyrometer2& operator=(IGyrometer2 const&) & noexcept = default;
        IGyrometer2& operator=(IGyrometer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometer3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometer3>
    {
        IGyrometer3(std::nullptr_t = nullptr) noexcept {}
        IGyrometer3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometer3(IGyrometer3 const&) noexcept = default;
        IGyrometer3(IGyrometer3&&) noexcept = default;
        IGyrometer3& operator=(IGyrometer3 const&) & noexcept = default;
        IGyrometer3& operator=(IGyrometer3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometer4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometer4>
    {
        IGyrometer4(std::nullptr_t = nullptr) noexcept {}
        IGyrometer4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometer4(IGyrometer4 const&) noexcept = default;
        IGyrometer4(IGyrometer4&&) noexcept = default;
        IGyrometer4& operator=(IGyrometer4 const&) & noexcept = default;
        IGyrometer4& operator=(IGyrometer4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometerDataThreshold :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometerDataThreshold>
    {
        IGyrometerDataThreshold(std::nullptr_t = nullptr) noexcept {}
        IGyrometerDataThreshold(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometerDataThreshold(IGyrometerDataThreshold const&) noexcept = default;
        IGyrometerDataThreshold(IGyrometerDataThreshold&&) noexcept = default;
        IGyrometerDataThreshold& operator=(IGyrometerDataThreshold const&) & noexcept = default;
        IGyrometerDataThreshold& operator=(IGyrometerDataThreshold&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometerDeviceId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometerDeviceId>
    {
        IGyrometerDeviceId(std::nullptr_t = nullptr) noexcept {}
        IGyrometerDeviceId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometerDeviceId(IGyrometerDeviceId const&) noexcept = default;
        IGyrometerDeviceId(IGyrometerDeviceId&&) noexcept = default;
        IGyrometerDeviceId& operator=(IGyrometerDeviceId const&) & noexcept = default;
        IGyrometerDeviceId& operator=(IGyrometerDeviceId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometerReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometerReading>
    {
        IGyrometerReading(std::nullptr_t = nullptr) noexcept {}
        IGyrometerReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometerReading(IGyrometerReading const&) noexcept = default;
        IGyrometerReading(IGyrometerReading&&) noexcept = default;
        IGyrometerReading& operator=(IGyrometerReading const&) & noexcept = default;
        IGyrometerReading& operator=(IGyrometerReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometerReading2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometerReading2>
    {
        IGyrometerReading2(std::nullptr_t = nullptr) noexcept {}
        IGyrometerReading2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometerReading2(IGyrometerReading2 const&) noexcept = default;
        IGyrometerReading2(IGyrometerReading2&&) noexcept = default;
        IGyrometerReading2& operator=(IGyrometerReading2 const&) & noexcept = default;
        IGyrometerReading2& operator=(IGyrometerReading2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometerReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometerReadingChangedEventArgs>
    {
        IGyrometerReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IGyrometerReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometerReadingChangedEventArgs(IGyrometerReadingChangedEventArgs const&) noexcept = default;
        IGyrometerReadingChangedEventArgs(IGyrometerReadingChangedEventArgs&&) noexcept = default;
        IGyrometerReadingChangedEventArgs& operator=(IGyrometerReadingChangedEventArgs const&) & noexcept = default;
        IGyrometerReadingChangedEventArgs& operator=(IGyrometerReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometerStatics>
    {
        IGyrometerStatics(std::nullptr_t = nullptr) noexcept {}
        IGyrometerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometerStatics(IGyrometerStatics const&) noexcept = default;
        IGyrometerStatics(IGyrometerStatics&&) noexcept = default;
        IGyrometerStatics& operator=(IGyrometerStatics const&) & noexcept = default;
        IGyrometerStatics& operator=(IGyrometerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGyrometerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGyrometerStatics2>
    {
        IGyrometerStatics2(std::nullptr_t = nullptr) noexcept {}
        IGyrometerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGyrometerStatics2(IGyrometerStatics2 const&) noexcept = default;
        IGyrometerStatics2(IGyrometerStatics2&&) noexcept = default;
        IGyrometerStatics2& operator=(IGyrometerStatics2 const&) & noexcept = default;
        IGyrometerStatics2& operator=(IGyrometerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHingeAngleReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHingeAngleReading>
    {
        IHingeAngleReading(std::nullptr_t = nullptr) noexcept {}
        IHingeAngleReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHingeAngleReading(IHingeAngleReading const&) noexcept = default;
        IHingeAngleReading(IHingeAngleReading&&) noexcept = default;
        IHingeAngleReading& operator=(IHingeAngleReading const&) & noexcept = default;
        IHingeAngleReading& operator=(IHingeAngleReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHingeAngleSensor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHingeAngleSensor>
    {
        IHingeAngleSensor(std::nullptr_t = nullptr) noexcept {}
        IHingeAngleSensor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHingeAngleSensor(IHingeAngleSensor const&) noexcept = default;
        IHingeAngleSensor(IHingeAngleSensor&&) noexcept = default;
        IHingeAngleSensor& operator=(IHingeAngleSensor const&) & noexcept = default;
        IHingeAngleSensor& operator=(IHingeAngleSensor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHingeAngleSensorReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHingeAngleSensorReadingChangedEventArgs>
    {
        IHingeAngleSensorReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHingeAngleSensorReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHingeAngleSensorReadingChangedEventArgs(IHingeAngleSensorReadingChangedEventArgs const&) noexcept = default;
        IHingeAngleSensorReadingChangedEventArgs(IHingeAngleSensorReadingChangedEventArgs&&) noexcept = default;
        IHingeAngleSensorReadingChangedEventArgs& operator=(IHingeAngleSensorReadingChangedEventArgs const&) & noexcept = default;
        IHingeAngleSensorReadingChangedEventArgs& operator=(IHingeAngleSensorReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHingeAngleSensorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHingeAngleSensorStatics>
    {
        IHingeAngleSensorStatics(std::nullptr_t = nullptr) noexcept {}
        IHingeAngleSensorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHingeAngleSensorStatics(IHingeAngleSensorStatics const&) noexcept = default;
        IHingeAngleSensorStatics(IHingeAngleSensorStatics&&) noexcept = default;
        IHingeAngleSensorStatics& operator=(IHingeAngleSensorStatics const&) & noexcept = default;
        IHingeAngleSensorStatics& operator=(IHingeAngleSensorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometer>
    {
        IInclinometer(std::nullptr_t = nullptr) noexcept {}
        IInclinometer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometer(IInclinometer const&) noexcept = default;
        IInclinometer(IInclinometer&&) noexcept = default;
        IInclinometer& operator=(IInclinometer const&) & noexcept = default;
        IInclinometer& operator=(IInclinometer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometer2>
    {
        IInclinometer2(std::nullptr_t = nullptr) noexcept {}
        IInclinometer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometer2(IInclinometer2 const&) noexcept = default;
        IInclinometer2(IInclinometer2&&) noexcept = default;
        IInclinometer2& operator=(IInclinometer2 const&) & noexcept = default;
        IInclinometer2& operator=(IInclinometer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometer3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometer3>
    {
        IInclinometer3(std::nullptr_t = nullptr) noexcept {}
        IInclinometer3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometer3(IInclinometer3 const&) noexcept = default;
        IInclinometer3(IInclinometer3&&) noexcept = default;
        IInclinometer3& operator=(IInclinometer3 const&) & noexcept = default;
        IInclinometer3& operator=(IInclinometer3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometer4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometer4>
    {
        IInclinometer4(std::nullptr_t = nullptr) noexcept {}
        IInclinometer4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometer4(IInclinometer4 const&) noexcept = default;
        IInclinometer4(IInclinometer4&&) noexcept = default;
        IInclinometer4& operator=(IInclinometer4 const&) & noexcept = default;
        IInclinometer4& operator=(IInclinometer4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometerDataThreshold :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometerDataThreshold>
    {
        IInclinometerDataThreshold(std::nullptr_t = nullptr) noexcept {}
        IInclinometerDataThreshold(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometerDataThreshold(IInclinometerDataThreshold const&) noexcept = default;
        IInclinometerDataThreshold(IInclinometerDataThreshold&&) noexcept = default;
        IInclinometerDataThreshold& operator=(IInclinometerDataThreshold const&) & noexcept = default;
        IInclinometerDataThreshold& operator=(IInclinometerDataThreshold&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometerDeviceId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometerDeviceId>
    {
        IInclinometerDeviceId(std::nullptr_t = nullptr) noexcept {}
        IInclinometerDeviceId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometerDeviceId(IInclinometerDeviceId const&) noexcept = default;
        IInclinometerDeviceId(IInclinometerDeviceId&&) noexcept = default;
        IInclinometerDeviceId& operator=(IInclinometerDeviceId const&) & noexcept = default;
        IInclinometerDeviceId& operator=(IInclinometerDeviceId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometerReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometerReading>
    {
        IInclinometerReading(std::nullptr_t = nullptr) noexcept {}
        IInclinometerReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometerReading(IInclinometerReading const&) noexcept = default;
        IInclinometerReading(IInclinometerReading&&) noexcept = default;
        IInclinometerReading& operator=(IInclinometerReading const&) & noexcept = default;
        IInclinometerReading& operator=(IInclinometerReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometerReading2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometerReading2>
    {
        IInclinometerReading2(std::nullptr_t = nullptr) noexcept {}
        IInclinometerReading2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometerReading2(IInclinometerReading2 const&) noexcept = default;
        IInclinometerReading2(IInclinometerReading2&&) noexcept = default;
        IInclinometerReading2& operator=(IInclinometerReading2 const&) & noexcept = default;
        IInclinometerReading2& operator=(IInclinometerReading2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometerReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometerReadingChangedEventArgs>
    {
        IInclinometerReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInclinometerReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometerReadingChangedEventArgs(IInclinometerReadingChangedEventArgs const&) noexcept = default;
        IInclinometerReadingChangedEventArgs(IInclinometerReadingChangedEventArgs&&) noexcept = default;
        IInclinometerReadingChangedEventArgs& operator=(IInclinometerReadingChangedEventArgs const&) & noexcept = default;
        IInclinometerReadingChangedEventArgs& operator=(IInclinometerReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometerReadingYawAccuracy :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometerReadingYawAccuracy>
    {
        IInclinometerReadingYawAccuracy(std::nullptr_t = nullptr) noexcept {}
        IInclinometerReadingYawAccuracy(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometerReadingYawAccuracy(IInclinometerReadingYawAccuracy const&) noexcept = default;
        IInclinometerReadingYawAccuracy(IInclinometerReadingYawAccuracy&&) noexcept = default;
        IInclinometerReadingYawAccuracy& operator=(IInclinometerReadingYawAccuracy const&) & noexcept = default;
        IInclinometerReadingYawAccuracy& operator=(IInclinometerReadingYawAccuracy&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometerStatics>
    {
        IInclinometerStatics(std::nullptr_t = nullptr) noexcept {}
        IInclinometerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometerStatics(IInclinometerStatics const&) noexcept = default;
        IInclinometerStatics(IInclinometerStatics&&) noexcept = default;
        IInclinometerStatics& operator=(IInclinometerStatics const&) & noexcept = default;
        IInclinometerStatics& operator=(IInclinometerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometerStatics2>
    {
        IInclinometerStatics2(std::nullptr_t = nullptr) noexcept {}
        IInclinometerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometerStatics2(IInclinometerStatics2 const&) noexcept = default;
        IInclinometerStatics2(IInclinometerStatics2&&) noexcept = default;
        IInclinometerStatics2& operator=(IInclinometerStatics2 const&) & noexcept = default;
        IInclinometerStatics2& operator=(IInclinometerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometerStatics3>
    {
        IInclinometerStatics3(std::nullptr_t = nullptr) noexcept {}
        IInclinometerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometerStatics3(IInclinometerStatics3 const&) noexcept = default;
        IInclinometerStatics3(IInclinometerStatics3&&) noexcept = default;
        IInclinometerStatics3& operator=(IInclinometerStatics3 const&) & noexcept = default;
        IInclinometerStatics3& operator=(IInclinometerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInclinometerStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInclinometerStatics4>
    {
        IInclinometerStatics4(std::nullptr_t = nullptr) noexcept {}
        IInclinometerStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInclinometerStatics4(IInclinometerStatics4 const&) noexcept = default;
        IInclinometerStatics4(IInclinometerStatics4&&) noexcept = default;
        IInclinometerStatics4& operator=(IInclinometerStatics4 const&) & noexcept = default;
        IInclinometerStatics4& operator=(IInclinometerStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILightSensor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILightSensor>
    {
        ILightSensor(std::nullptr_t = nullptr) noexcept {}
        ILightSensor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILightSensor(ILightSensor const&) noexcept = default;
        ILightSensor(ILightSensor&&) noexcept = default;
        ILightSensor& operator=(ILightSensor const&) & noexcept = default;
        ILightSensor& operator=(ILightSensor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILightSensor2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILightSensor2>
    {
        ILightSensor2(std::nullptr_t = nullptr) noexcept {}
        ILightSensor2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILightSensor2(ILightSensor2 const&) noexcept = default;
        ILightSensor2(ILightSensor2&&) noexcept = default;
        ILightSensor2& operator=(ILightSensor2 const&) & noexcept = default;
        ILightSensor2& operator=(ILightSensor2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILightSensor3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILightSensor3>
    {
        ILightSensor3(std::nullptr_t = nullptr) noexcept {}
        ILightSensor3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILightSensor3(ILightSensor3 const&) noexcept = default;
        ILightSensor3(ILightSensor3&&) noexcept = default;
        ILightSensor3& operator=(ILightSensor3 const&) & noexcept = default;
        ILightSensor3& operator=(ILightSensor3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILightSensorDataThreshold :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILightSensorDataThreshold>
    {
        ILightSensorDataThreshold(std::nullptr_t = nullptr) noexcept {}
        ILightSensorDataThreshold(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILightSensorDataThreshold(ILightSensorDataThreshold const&) noexcept = default;
        ILightSensorDataThreshold(ILightSensorDataThreshold&&) noexcept = default;
        ILightSensorDataThreshold& operator=(ILightSensorDataThreshold const&) & noexcept = default;
        ILightSensorDataThreshold& operator=(ILightSensorDataThreshold&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILightSensorDeviceId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILightSensorDeviceId>
    {
        ILightSensorDeviceId(std::nullptr_t = nullptr) noexcept {}
        ILightSensorDeviceId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILightSensorDeviceId(ILightSensorDeviceId const&) noexcept = default;
        ILightSensorDeviceId(ILightSensorDeviceId&&) noexcept = default;
        ILightSensorDeviceId& operator=(ILightSensorDeviceId const&) & noexcept = default;
        ILightSensorDeviceId& operator=(ILightSensorDeviceId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILightSensorReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILightSensorReading>
    {
        ILightSensorReading(std::nullptr_t = nullptr) noexcept {}
        ILightSensorReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILightSensorReading(ILightSensorReading const&) noexcept = default;
        ILightSensorReading(ILightSensorReading&&) noexcept = default;
        ILightSensorReading& operator=(ILightSensorReading const&) & noexcept = default;
        ILightSensorReading& operator=(ILightSensorReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILightSensorReading2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILightSensorReading2>
    {
        ILightSensorReading2(std::nullptr_t = nullptr) noexcept {}
        ILightSensorReading2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILightSensorReading2(ILightSensorReading2 const&) noexcept = default;
        ILightSensorReading2(ILightSensorReading2&&) noexcept = default;
        ILightSensorReading2& operator=(ILightSensorReading2 const&) & noexcept = default;
        ILightSensorReading2& operator=(ILightSensorReading2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILightSensorReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILightSensorReadingChangedEventArgs>
    {
        ILightSensorReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ILightSensorReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILightSensorReadingChangedEventArgs(ILightSensorReadingChangedEventArgs const&) noexcept = default;
        ILightSensorReadingChangedEventArgs(ILightSensorReadingChangedEventArgs&&) noexcept = default;
        ILightSensorReadingChangedEventArgs& operator=(ILightSensorReadingChangedEventArgs const&) & noexcept = default;
        ILightSensorReadingChangedEventArgs& operator=(ILightSensorReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILightSensorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILightSensorStatics>
    {
        ILightSensorStatics(std::nullptr_t = nullptr) noexcept {}
        ILightSensorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILightSensorStatics(ILightSensorStatics const&) noexcept = default;
        ILightSensorStatics(ILightSensorStatics&&) noexcept = default;
        ILightSensorStatics& operator=(ILightSensorStatics const&) & noexcept = default;
        ILightSensorStatics& operator=(ILightSensorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILightSensorStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILightSensorStatics2>
    {
        ILightSensorStatics2(std::nullptr_t = nullptr) noexcept {}
        ILightSensorStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILightSensorStatics2(ILightSensorStatics2 const&) noexcept = default;
        ILightSensorStatics2(ILightSensorStatics2&&) noexcept = default;
        ILightSensorStatics2& operator=(ILightSensorStatics2 const&) & noexcept = default;
        ILightSensorStatics2& operator=(ILightSensorStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometer>
    {
        IMagnetometer(std::nullptr_t = nullptr) noexcept {}
        IMagnetometer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometer(IMagnetometer const&) noexcept = default;
        IMagnetometer(IMagnetometer&&) noexcept = default;
        IMagnetometer& operator=(IMagnetometer const&) & noexcept = default;
        IMagnetometer& operator=(IMagnetometer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometer2>
    {
        IMagnetometer2(std::nullptr_t = nullptr) noexcept {}
        IMagnetometer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometer2(IMagnetometer2 const&) noexcept = default;
        IMagnetometer2(IMagnetometer2&&) noexcept = default;
        IMagnetometer2& operator=(IMagnetometer2 const&) & noexcept = default;
        IMagnetometer2& operator=(IMagnetometer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometer3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometer3>
    {
        IMagnetometer3(std::nullptr_t = nullptr) noexcept {}
        IMagnetometer3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometer3(IMagnetometer3 const&) noexcept = default;
        IMagnetometer3(IMagnetometer3&&) noexcept = default;
        IMagnetometer3& operator=(IMagnetometer3 const&) & noexcept = default;
        IMagnetometer3& operator=(IMagnetometer3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometer4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometer4>
    {
        IMagnetometer4(std::nullptr_t = nullptr) noexcept {}
        IMagnetometer4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometer4(IMagnetometer4 const&) noexcept = default;
        IMagnetometer4(IMagnetometer4&&) noexcept = default;
        IMagnetometer4& operator=(IMagnetometer4 const&) & noexcept = default;
        IMagnetometer4& operator=(IMagnetometer4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometerDataThreshold :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometerDataThreshold>
    {
        IMagnetometerDataThreshold(std::nullptr_t = nullptr) noexcept {}
        IMagnetometerDataThreshold(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometerDataThreshold(IMagnetometerDataThreshold const&) noexcept = default;
        IMagnetometerDataThreshold(IMagnetometerDataThreshold&&) noexcept = default;
        IMagnetometerDataThreshold& operator=(IMagnetometerDataThreshold const&) & noexcept = default;
        IMagnetometerDataThreshold& operator=(IMagnetometerDataThreshold&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometerDeviceId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometerDeviceId>
    {
        IMagnetometerDeviceId(std::nullptr_t = nullptr) noexcept {}
        IMagnetometerDeviceId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometerDeviceId(IMagnetometerDeviceId const&) noexcept = default;
        IMagnetometerDeviceId(IMagnetometerDeviceId&&) noexcept = default;
        IMagnetometerDeviceId& operator=(IMagnetometerDeviceId const&) & noexcept = default;
        IMagnetometerDeviceId& operator=(IMagnetometerDeviceId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometerReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometerReading>
    {
        IMagnetometerReading(std::nullptr_t = nullptr) noexcept {}
        IMagnetometerReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometerReading(IMagnetometerReading const&) noexcept = default;
        IMagnetometerReading(IMagnetometerReading&&) noexcept = default;
        IMagnetometerReading& operator=(IMagnetometerReading const&) & noexcept = default;
        IMagnetometerReading& operator=(IMagnetometerReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometerReading2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometerReading2>
    {
        IMagnetometerReading2(std::nullptr_t = nullptr) noexcept {}
        IMagnetometerReading2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometerReading2(IMagnetometerReading2 const&) noexcept = default;
        IMagnetometerReading2(IMagnetometerReading2&&) noexcept = default;
        IMagnetometerReading2& operator=(IMagnetometerReading2 const&) & noexcept = default;
        IMagnetometerReading2& operator=(IMagnetometerReading2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometerReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometerReadingChangedEventArgs>
    {
        IMagnetometerReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMagnetometerReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometerReadingChangedEventArgs(IMagnetometerReadingChangedEventArgs const&) noexcept = default;
        IMagnetometerReadingChangedEventArgs(IMagnetometerReadingChangedEventArgs&&) noexcept = default;
        IMagnetometerReadingChangedEventArgs& operator=(IMagnetometerReadingChangedEventArgs const&) & noexcept = default;
        IMagnetometerReadingChangedEventArgs& operator=(IMagnetometerReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometerStatics>
    {
        IMagnetometerStatics(std::nullptr_t = nullptr) noexcept {}
        IMagnetometerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometerStatics(IMagnetometerStatics const&) noexcept = default;
        IMagnetometerStatics(IMagnetometerStatics&&) noexcept = default;
        IMagnetometerStatics& operator=(IMagnetometerStatics const&) & noexcept = default;
        IMagnetometerStatics& operator=(IMagnetometerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMagnetometerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMagnetometerStatics2>
    {
        IMagnetometerStatics2(std::nullptr_t = nullptr) noexcept {}
        IMagnetometerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMagnetometerStatics2(IMagnetometerStatics2 const&) noexcept = default;
        IMagnetometerStatics2(IMagnetometerStatics2&&) noexcept = default;
        IMagnetometerStatics2& operator=(IMagnetometerStatics2 const&) & noexcept = default;
        IMagnetometerStatics2& operator=(IMagnetometerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensor>
    {
        IOrientationSensor(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensor(IOrientationSensor const&) noexcept = default;
        IOrientationSensor(IOrientationSensor&&) noexcept = default;
        IOrientationSensor& operator=(IOrientationSensor const&) & noexcept = default;
        IOrientationSensor& operator=(IOrientationSensor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensor2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensor2>
    {
        IOrientationSensor2(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensor2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensor2(IOrientationSensor2 const&) noexcept = default;
        IOrientationSensor2(IOrientationSensor2&&) noexcept = default;
        IOrientationSensor2& operator=(IOrientationSensor2 const&) & noexcept = default;
        IOrientationSensor2& operator=(IOrientationSensor2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensor3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensor3>
    {
        IOrientationSensor3(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensor3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensor3(IOrientationSensor3 const&) noexcept = default;
        IOrientationSensor3(IOrientationSensor3&&) noexcept = default;
        IOrientationSensor3& operator=(IOrientationSensor3 const&) & noexcept = default;
        IOrientationSensor3& operator=(IOrientationSensor3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensorDeviceId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensorDeviceId>
    {
        IOrientationSensorDeviceId(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensorDeviceId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensorDeviceId(IOrientationSensorDeviceId const&) noexcept = default;
        IOrientationSensorDeviceId(IOrientationSensorDeviceId&&) noexcept = default;
        IOrientationSensorDeviceId& operator=(IOrientationSensorDeviceId const&) & noexcept = default;
        IOrientationSensorDeviceId& operator=(IOrientationSensorDeviceId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensorReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensorReading>
    {
        IOrientationSensorReading(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensorReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensorReading(IOrientationSensorReading const&) noexcept = default;
        IOrientationSensorReading(IOrientationSensorReading&&) noexcept = default;
        IOrientationSensorReading& operator=(IOrientationSensorReading const&) & noexcept = default;
        IOrientationSensorReading& operator=(IOrientationSensorReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensorReading2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensorReading2>
    {
        IOrientationSensorReading2(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensorReading2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensorReading2(IOrientationSensorReading2 const&) noexcept = default;
        IOrientationSensorReading2(IOrientationSensorReading2&&) noexcept = default;
        IOrientationSensorReading2& operator=(IOrientationSensorReading2 const&) & noexcept = default;
        IOrientationSensorReading2& operator=(IOrientationSensorReading2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensorReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensorReadingChangedEventArgs>
    {
        IOrientationSensorReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensorReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensorReadingChangedEventArgs(IOrientationSensorReadingChangedEventArgs const&) noexcept = default;
        IOrientationSensorReadingChangedEventArgs(IOrientationSensorReadingChangedEventArgs&&) noexcept = default;
        IOrientationSensorReadingChangedEventArgs& operator=(IOrientationSensorReadingChangedEventArgs const&) & noexcept = default;
        IOrientationSensorReadingChangedEventArgs& operator=(IOrientationSensorReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensorReadingYawAccuracy :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensorReadingYawAccuracy>
    {
        IOrientationSensorReadingYawAccuracy(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensorReadingYawAccuracy(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensorReadingYawAccuracy(IOrientationSensorReadingYawAccuracy const&) noexcept = default;
        IOrientationSensorReadingYawAccuracy(IOrientationSensorReadingYawAccuracy&&) noexcept = default;
        IOrientationSensorReadingYawAccuracy& operator=(IOrientationSensorReadingYawAccuracy const&) & noexcept = default;
        IOrientationSensorReadingYawAccuracy& operator=(IOrientationSensorReadingYawAccuracy&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensorStatics>
    {
        IOrientationSensorStatics(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensorStatics(IOrientationSensorStatics const&) noexcept = default;
        IOrientationSensorStatics(IOrientationSensorStatics&&) noexcept = default;
        IOrientationSensorStatics& operator=(IOrientationSensorStatics const&) & noexcept = default;
        IOrientationSensorStatics& operator=(IOrientationSensorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensorStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensorStatics2>
    {
        IOrientationSensorStatics2(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensorStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensorStatics2(IOrientationSensorStatics2 const&) noexcept = default;
        IOrientationSensorStatics2(IOrientationSensorStatics2&&) noexcept = default;
        IOrientationSensorStatics2& operator=(IOrientationSensorStatics2 const&) & noexcept = default;
        IOrientationSensorStatics2& operator=(IOrientationSensorStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensorStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensorStatics3>
    {
        IOrientationSensorStatics3(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensorStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensorStatics3(IOrientationSensorStatics3 const&) noexcept = default;
        IOrientationSensorStatics3(IOrientationSensorStatics3&&) noexcept = default;
        IOrientationSensorStatics3& operator=(IOrientationSensorStatics3 const&) & noexcept = default;
        IOrientationSensorStatics3& operator=(IOrientationSensorStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOrientationSensorStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOrientationSensorStatics4>
    {
        IOrientationSensorStatics4(std::nullptr_t = nullptr) noexcept {}
        IOrientationSensorStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOrientationSensorStatics4(IOrientationSensorStatics4 const&) noexcept = default;
        IOrientationSensorStatics4(IOrientationSensorStatics4&&) noexcept = default;
        IOrientationSensorStatics4& operator=(IOrientationSensorStatics4 const&) & noexcept = default;
        IOrientationSensorStatics4& operator=(IOrientationSensorStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPedometer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPedometer>
    {
        IPedometer(std::nullptr_t = nullptr) noexcept {}
        IPedometer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPedometer(IPedometer const&) noexcept = default;
        IPedometer(IPedometer&&) noexcept = default;
        IPedometer& operator=(IPedometer const&) & noexcept = default;
        IPedometer& operator=(IPedometer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPedometer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPedometer2>
    {
        IPedometer2(std::nullptr_t = nullptr) noexcept {}
        IPedometer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPedometer2(IPedometer2 const&) noexcept = default;
        IPedometer2(IPedometer2&&) noexcept = default;
        IPedometer2& operator=(IPedometer2 const&) & noexcept = default;
        IPedometer2& operator=(IPedometer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPedometerDataThresholdFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPedometerDataThresholdFactory>
    {
        IPedometerDataThresholdFactory(std::nullptr_t = nullptr) noexcept {}
        IPedometerDataThresholdFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPedometerDataThresholdFactory(IPedometerDataThresholdFactory const&) noexcept = default;
        IPedometerDataThresholdFactory(IPedometerDataThresholdFactory&&) noexcept = default;
        IPedometerDataThresholdFactory& operator=(IPedometerDataThresholdFactory const&) & noexcept = default;
        IPedometerDataThresholdFactory& operator=(IPedometerDataThresholdFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPedometerReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPedometerReading>
    {
        IPedometerReading(std::nullptr_t = nullptr) noexcept {}
        IPedometerReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPedometerReading(IPedometerReading const&) noexcept = default;
        IPedometerReading(IPedometerReading&&) noexcept = default;
        IPedometerReading& operator=(IPedometerReading const&) & noexcept = default;
        IPedometerReading& operator=(IPedometerReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPedometerReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPedometerReadingChangedEventArgs>
    {
        IPedometerReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPedometerReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPedometerReadingChangedEventArgs(IPedometerReadingChangedEventArgs const&) noexcept = default;
        IPedometerReadingChangedEventArgs(IPedometerReadingChangedEventArgs&&) noexcept = default;
        IPedometerReadingChangedEventArgs& operator=(IPedometerReadingChangedEventArgs const&) & noexcept = default;
        IPedometerReadingChangedEventArgs& operator=(IPedometerReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPedometerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPedometerStatics>
    {
        IPedometerStatics(std::nullptr_t = nullptr) noexcept {}
        IPedometerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPedometerStatics(IPedometerStatics const&) noexcept = default;
        IPedometerStatics(IPedometerStatics&&) noexcept = default;
        IPedometerStatics& operator=(IPedometerStatics const&) & noexcept = default;
        IPedometerStatics& operator=(IPedometerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPedometerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPedometerStatics2>
    {
        IPedometerStatics2(std::nullptr_t = nullptr) noexcept {}
        IPedometerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPedometerStatics2(IPedometerStatics2 const&) noexcept = default;
        IPedometerStatics2(IPedometerStatics2&&) noexcept = default;
        IPedometerStatics2& operator=(IPedometerStatics2 const&) & noexcept = default;
        IPedometerStatics2& operator=(IPedometerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProximitySensor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProximitySensor>
    {
        IProximitySensor(std::nullptr_t = nullptr) noexcept {}
        IProximitySensor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProximitySensor(IProximitySensor const&) noexcept = default;
        IProximitySensor(IProximitySensor&&) noexcept = default;
        IProximitySensor& operator=(IProximitySensor const&) & noexcept = default;
        IProximitySensor& operator=(IProximitySensor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProximitySensorDataThresholdFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProximitySensorDataThresholdFactory>
    {
        IProximitySensorDataThresholdFactory(std::nullptr_t = nullptr) noexcept {}
        IProximitySensorDataThresholdFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProximitySensorDataThresholdFactory(IProximitySensorDataThresholdFactory const&) noexcept = default;
        IProximitySensorDataThresholdFactory(IProximitySensorDataThresholdFactory&&) noexcept = default;
        IProximitySensorDataThresholdFactory& operator=(IProximitySensorDataThresholdFactory const&) & noexcept = default;
        IProximitySensorDataThresholdFactory& operator=(IProximitySensorDataThresholdFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProximitySensorReading :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProximitySensorReading>
    {
        IProximitySensorReading(std::nullptr_t = nullptr) noexcept {}
        IProximitySensorReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProximitySensorReading(IProximitySensorReading const&) noexcept = default;
        IProximitySensorReading(IProximitySensorReading&&) noexcept = default;
        IProximitySensorReading& operator=(IProximitySensorReading const&) & noexcept = default;
        IProximitySensorReading& operator=(IProximitySensorReading&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProximitySensorReadingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProximitySensorReadingChangedEventArgs>
    {
        IProximitySensorReadingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IProximitySensorReadingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProximitySensorReadingChangedEventArgs(IProximitySensorReadingChangedEventArgs const&) noexcept = default;
        IProximitySensorReadingChangedEventArgs(IProximitySensorReadingChangedEventArgs&&) noexcept = default;
        IProximitySensorReadingChangedEventArgs& operator=(IProximitySensorReadingChangedEventArgs const&) & noexcept = default;
        IProximitySensorReadingChangedEventArgs& operator=(IProximitySensorReadingChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProximitySensorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProximitySensorStatics>
    {
        IProximitySensorStatics(std::nullptr_t = nullptr) noexcept {}
        IProximitySensorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProximitySensorStatics(IProximitySensorStatics const&) noexcept = default;
        IProximitySensorStatics(IProximitySensorStatics&&) noexcept = default;
        IProximitySensorStatics& operator=(IProximitySensorStatics const&) & noexcept = default;
        IProximitySensorStatics& operator=(IProximitySensorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProximitySensorStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProximitySensorStatics2>
    {
        IProximitySensorStatics2(std::nullptr_t = nullptr) noexcept {}
        IProximitySensorStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProximitySensorStatics2(IProximitySensorStatics2 const&) noexcept = default;
        IProximitySensorStatics2(IProximitySensorStatics2&&) noexcept = default;
        IProximitySensorStatics2& operator=(IProximitySensorStatics2 const&) & noexcept = default;
        IProximitySensorStatics2& operator=(IProximitySensorStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISensorDataThreshold :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISensorDataThreshold>
    {
        ISensorDataThreshold(std::nullptr_t = nullptr) noexcept {}
        ISensorDataThreshold(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISensorDataThreshold(ISensorDataThreshold const&) noexcept = default;
        ISensorDataThreshold(ISensorDataThreshold&&) noexcept = default;
        ISensorDataThreshold& operator=(ISensorDataThreshold const&) & noexcept = default;
        ISensorDataThreshold& operator=(ISensorDataThreshold&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISensorDataThresholdTriggerDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISensorDataThresholdTriggerDetails>
    {
        ISensorDataThresholdTriggerDetails(std::nullptr_t = nullptr) noexcept {}
        ISensorDataThresholdTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISensorDataThresholdTriggerDetails(ISensorDataThresholdTriggerDetails const&) noexcept = default;
        ISensorDataThresholdTriggerDetails(ISensorDataThresholdTriggerDetails&&) noexcept = default;
        ISensorDataThresholdTriggerDetails& operator=(ISensorDataThresholdTriggerDetails const&) & noexcept = default;
        ISensorDataThresholdTriggerDetails& operator=(ISensorDataThresholdTriggerDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISensorQuaternion :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISensorQuaternion>
    {
        ISensorQuaternion(std::nullptr_t = nullptr) noexcept {}
        ISensorQuaternion(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISensorQuaternion(ISensorQuaternion const&) noexcept = default;
        ISensorQuaternion(ISensorQuaternion&&) noexcept = default;
        ISensorQuaternion& operator=(ISensorQuaternion const&) & noexcept = default;
        ISensorQuaternion& operator=(ISensorQuaternion&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISensorRotationMatrix :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISensorRotationMatrix>
    {
        ISensorRotationMatrix(std::nullptr_t = nullptr) noexcept {}
        ISensorRotationMatrix(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISensorRotationMatrix(ISensorRotationMatrix const&) noexcept = default;
        ISensorRotationMatrix(ISensorRotationMatrix&&) noexcept = default;
        ISensorRotationMatrix& operator=(ISensorRotationMatrix const&) & noexcept = default;
        ISensorRotationMatrix& operator=(ISensorRotationMatrix&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISimpleOrientationSensor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISimpleOrientationSensor>
    {
        ISimpleOrientationSensor(std::nullptr_t = nullptr) noexcept {}
        ISimpleOrientationSensor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISimpleOrientationSensor(ISimpleOrientationSensor const&) noexcept = default;
        ISimpleOrientationSensor(ISimpleOrientationSensor&&) noexcept = default;
        ISimpleOrientationSensor& operator=(ISimpleOrientationSensor const&) & noexcept = default;
        ISimpleOrientationSensor& operator=(ISimpleOrientationSensor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISimpleOrientationSensor2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISimpleOrientationSensor2>
    {
        ISimpleOrientationSensor2(std::nullptr_t = nullptr) noexcept {}
        ISimpleOrientationSensor2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISimpleOrientationSensor2(ISimpleOrientationSensor2 const&) noexcept = default;
        ISimpleOrientationSensor2(ISimpleOrientationSensor2&&) noexcept = default;
        ISimpleOrientationSensor2& operator=(ISimpleOrientationSensor2 const&) & noexcept = default;
        ISimpleOrientationSensor2& operator=(ISimpleOrientationSensor2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISimpleOrientationSensorDeviceId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISimpleOrientationSensorDeviceId>
    {
        ISimpleOrientationSensorDeviceId(std::nullptr_t = nullptr) noexcept {}
        ISimpleOrientationSensorDeviceId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISimpleOrientationSensorDeviceId(ISimpleOrientationSensorDeviceId const&) noexcept = default;
        ISimpleOrientationSensorDeviceId(ISimpleOrientationSensorDeviceId&&) noexcept = default;
        ISimpleOrientationSensorDeviceId& operator=(ISimpleOrientationSensorDeviceId const&) & noexcept = default;
        ISimpleOrientationSensorDeviceId& operator=(ISimpleOrientationSensorDeviceId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISimpleOrientationSensorOrientationChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISimpleOrientationSensorOrientationChangedEventArgs>
    {
        ISimpleOrientationSensorOrientationChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISimpleOrientationSensorOrientationChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISimpleOrientationSensorOrientationChangedEventArgs(ISimpleOrientationSensorOrientationChangedEventArgs const&) noexcept = default;
        ISimpleOrientationSensorOrientationChangedEventArgs(ISimpleOrientationSensorOrientationChangedEventArgs&&) noexcept = default;
        ISimpleOrientationSensorOrientationChangedEventArgs& operator=(ISimpleOrientationSensorOrientationChangedEventArgs const&) & noexcept = default;
        ISimpleOrientationSensorOrientationChangedEventArgs& operator=(ISimpleOrientationSensorOrientationChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISimpleOrientationSensorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISimpleOrientationSensorStatics>
    {
        ISimpleOrientationSensorStatics(std::nullptr_t = nullptr) noexcept {}
        ISimpleOrientationSensorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISimpleOrientationSensorStatics(ISimpleOrientationSensorStatics const&) noexcept = default;
        ISimpleOrientationSensorStatics(ISimpleOrientationSensorStatics&&) noexcept = default;
        ISimpleOrientationSensorStatics& operator=(ISimpleOrientationSensorStatics const&) & noexcept = default;
        ISimpleOrientationSensorStatics& operator=(ISimpleOrientationSensorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISimpleOrientationSensorStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISimpleOrientationSensorStatics2>
    {
        ISimpleOrientationSensorStatics2(std::nullptr_t = nullptr) noexcept {}
        ISimpleOrientationSensorStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISimpleOrientationSensorStatics2(ISimpleOrientationSensorStatics2 const&) noexcept = default;
        ISimpleOrientationSensorStatics2(ISimpleOrientationSensorStatics2&&) noexcept = default;
        ISimpleOrientationSensorStatics2& operator=(ISimpleOrientationSensorStatics2 const&) & noexcept = default;
        ISimpleOrientationSensorStatics2& operator=(ISimpleOrientationSensorStatics2&&) & noexcept = default;
    };
}
#endif
