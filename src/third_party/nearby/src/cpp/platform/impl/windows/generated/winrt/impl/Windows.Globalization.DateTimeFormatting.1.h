// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Globalization_DateTimeFormatting_1_H
#define WINRT_Windows_Globalization_DateTimeFormatting_1_H
#include "winrt/impl/Windows.Globalization.DateTimeFormatting.0.h"
WINRT_EXPORT namespace winrt::Windows::Globalization::DateTimeFormatting
{
    struct __declspec(empty_bases) IDateTimeFormatter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDateTimeFormatter>
    {
        IDateTimeFormatter(std::nullptr_t = nullptr) noexcept {}
        IDateTimeFormatter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDateTimeFormatter(IDateTimeFormatter const&) noexcept = default;
        IDateTimeFormatter(IDateTimeFormatter&&) noexcept = default;
        IDateTimeFormatter& operator=(IDateTimeFormatter const&) & noexcept = default;
        IDateTimeFormatter& operator=(IDateTimeFormatter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDateTimeFormatter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDateTimeFormatter2>
    {
        IDateTimeFormatter2(std::nullptr_t = nullptr) noexcept {}
        IDateTimeFormatter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDateTimeFormatter2(IDateTimeFormatter2 const&) noexcept = default;
        IDateTimeFormatter2(IDateTimeFormatter2&&) noexcept = default;
        IDateTimeFormatter2& operator=(IDateTimeFormatter2 const&) & noexcept = default;
        IDateTimeFormatter2& operator=(IDateTimeFormatter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDateTimeFormatterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDateTimeFormatterFactory>
    {
        IDateTimeFormatterFactory(std::nullptr_t = nullptr) noexcept {}
        IDateTimeFormatterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDateTimeFormatterFactory(IDateTimeFormatterFactory const&) noexcept = default;
        IDateTimeFormatterFactory(IDateTimeFormatterFactory&&) noexcept = default;
        IDateTimeFormatterFactory& operator=(IDateTimeFormatterFactory const&) & noexcept = default;
        IDateTimeFormatterFactory& operator=(IDateTimeFormatterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDateTimeFormatterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDateTimeFormatterStatics>
    {
        IDateTimeFormatterStatics(std::nullptr_t = nullptr) noexcept {}
        IDateTimeFormatterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDateTimeFormatterStatics(IDateTimeFormatterStatics const&) noexcept = default;
        IDateTimeFormatterStatics(IDateTimeFormatterStatics&&) noexcept = default;
        IDateTimeFormatterStatics& operator=(IDateTimeFormatterStatics const&) & noexcept = default;
        IDateTimeFormatterStatics& operator=(IDateTimeFormatterStatics&&) & noexcept = default;
    };
}
#endif
