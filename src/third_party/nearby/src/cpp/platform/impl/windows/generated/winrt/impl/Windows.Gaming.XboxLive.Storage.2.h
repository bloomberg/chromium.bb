// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Gaming_XboxLive_Storage_2_H
#define WINRT_Windows_Gaming_XboxLive_Storage_2_H
#include "winrt/impl/Windows.System.1.h"
#include "winrt/impl/Windows.Gaming.XboxLive.Storage.1.h"
WINRT_EXPORT namespace winrt::Windows::Gaming::XboxLive::Storage
{
    struct __declspec(empty_bases) GameSaveBlobGetResult : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveBlobGetResult
    {
        GameSaveBlobGetResult(std::nullptr_t) noexcept {}
        GameSaveBlobGetResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveBlobGetResult(ptr, take_ownership_from_abi) {}
        GameSaveBlobGetResult(GameSaveBlobGetResult const&) noexcept = default;
        GameSaveBlobGetResult(GameSaveBlobGetResult&&) noexcept = default;
        GameSaveBlobGetResult& operator=(GameSaveBlobGetResult const&) & noexcept = default;
        GameSaveBlobGetResult& operator=(GameSaveBlobGetResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) GameSaveBlobInfo : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveBlobInfo
    {
        GameSaveBlobInfo(std::nullptr_t) noexcept {}
        GameSaveBlobInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveBlobInfo(ptr, take_ownership_from_abi) {}
        GameSaveBlobInfo(GameSaveBlobInfo const&) noexcept = default;
        GameSaveBlobInfo(GameSaveBlobInfo&&) noexcept = default;
        GameSaveBlobInfo& operator=(GameSaveBlobInfo const&) & noexcept = default;
        GameSaveBlobInfo& operator=(GameSaveBlobInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) GameSaveBlobInfoGetResult : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveBlobInfoGetResult
    {
        GameSaveBlobInfoGetResult(std::nullptr_t) noexcept {}
        GameSaveBlobInfoGetResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveBlobInfoGetResult(ptr, take_ownership_from_abi) {}
        GameSaveBlobInfoGetResult(GameSaveBlobInfoGetResult const&) noexcept = default;
        GameSaveBlobInfoGetResult(GameSaveBlobInfoGetResult&&) noexcept = default;
        GameSaveBlobInfoGetResult& operator=(GameSaveBlobInfoGetResult const&) & noexcept = default;
        GameSaveBlobInfoGetResult& operator=(GameSaveBlobInfoGetResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) GameSaveBlobInfoQuery : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveBlobInfoQuery
    {
        GameSaveBlobInfoQuery(std::nullptr_t) noexcept {}
        GameSaveBlobInfoQuery(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveBlobInfoQuery(ptr, take_ownership_from_abi) {}
        GameSaveBlobInfoQuery(GameSaveBlobInfoQuery const&) noexcept = default;
        GameSaveBlobInfoQuery(GameSaveBlobInfoQuery&&) noexcept = default;
        GameSaveBlobInfoQuery& operator=(GameSaveBlobInfoQuery const&) & noexcept = default;
        GameSaveBlobInfoQuery& operator=(GameSaveBlobInfoQuery&&) & noexcept = default;
    };
    struct __declspec(empty_bases) GameSaveContainer : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveContainer
    {
        GameSaveContainer(std::nullptr_t) noexcept {}
        GameSaveContainer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveContainer(ptr, take_ownership_from_abi) {}
        GameSaveContainer(GameSaveContainer const&) noexcept = default;
        GameSaveContainer(GameSaveContainer&&) noexcept = default;
        GameSaveContainer& operator=(GameSaveContainer const&) & noexcept = default;
        GameSaveContainer& operator=(GameSaveContainer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) GameSaveContainerInfo : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveContainerInfo
    {
        GameSaveContainerInfo(std::nullptr_t) noexcept {}
        GameSaveContainerInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveContainerInfo(ptr, take_ownership_from_abi) {}
        GameSaveContainerInfo(GameSaveContainerInfo const&) noexcept = default;
        GameSaveContainerInfo(GameSaveContainerInfo&&) noexcept = default;
        GameSaveContainerInfo& operator=(GameSaveContainerInfo const&) & noexcept = default;
        GameSaveContainerInfo& operator=(GameSaveContainerInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) GameSaveContainerInfoGetResult : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveContainerInfoGetResult
    {
        GameSaveContainerInfoGetResult(std::nullptr_t) noexcept {}
        GameSaveContainerInfoGetResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveContainerInfoGetResult(ptr, take_ownership_from_abi) {}
        GameSaveContainerInfoGetResult(GameSaveContainerInfoGetResult const&) noexcept = default;
        GameSaveContainerInfoGetResult(GameSaveContainerInfoGetResult&&) noexcept = default;
        GameSaveContainerInfoGetResult& operator=(GameSaveContainerInfoGetResult const&) & noexcept = default;
        GameSaveContainerInfoGetResult& operator=(GameSaveContainerInfoGetResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) GameSaveContainerInfoQuery : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveContainerInfoQuery
    {
        GameSaveContainerInfoQuery(std::nullptr_t) noexcept {}
        GameSaveContainerInfoQuery(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveContainerInfoQuery(ptr, take_ownership_from_abi) {}
        GameSaveContainerInfoQuery(GameSaveContainerInfoQuery const&) noexcept = default;
        GameSaveContainerInfoQuery(GameSaveContainerInfoQuery&&) noexcept = default;
        GameSaveContainerInfoQuery& operator=(GameSaveContainerInfoQuery const&) & noexcept = default;
        GameSaveContainerInfoQuery& operator=(GameSaveContainerInfoQuery&&) & noexcept = default;
    };
    struct __declspec(empty_bases) GameSaveOperationResult : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveOperationResult
    {
        GameSaveOperationResult(std::nullptr_t) noexcept {}
        GameSaveOperationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveOperationResult(ptr, take_ownership_from_abi) {}
        GameSaveOperationResult(GameSaveOperationResult const&) noexcept = default;
        GameSaveOperationResult(GameSaveOperationResult&&) noexcept = default;
        GameSaveOperationResult& operator=(GameSaveOperationResult const&) & noexcept = default;
        GameSaveOperationResult& operator=(GameSaveOperationResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) GameSaveProvider : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveProvider
    {
        GameSaveProvider(std::nullptr_t) noexcept {}
        GameSaveProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveProvider(ptr, take_ownership_from_abi) {}
        GameSaveProvider(GameSaveProvider const&) noexcept = default;
        GameSaveProvider(GameSaveProvider&&) noexcept = default;
        GameSaveProvider& operator=(GameSaveProvider const&) & noexcept = default;
        GameSaveProvider& operator=(GameSaveProvider&&) & noexcept = default;
        static auto GetForUserAsync(winrt::Windows::System::User const& user, param::hstring const& serviceConfigId);
        static auto GetSyncOnDemandForUserAsync(winrt::Windows::System::User const& user, param::hstring const& serviceConfigId);
    };
    struct __declspec(empty_bases) GameSaveProviderGetResult : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveProviderGetResult
    {
        GameSaveProviderGetResult(std::nullptr_t) noexcept {}
        GameSaveProviderGetResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Gaming::XboxLive::Storage::IGameSaveProviderGetResult(ptr, take_ownership_from_abi) {}
        GameSaveProviderGetResult(GameSaveProviderGetResult const&) noexcept = default;
        GameSaveProviderGetResult(GameSaveProviderGetResult&&) noexcept = default;
        GameSaveProviderGetResult& operator=(GameSaveProviderGetResult const&) & noexcept = default;
        GameSaveProviderGetResult& operator=(GameSaveProviderGetResult&&) & noexcept = default;
    };
}
#endif
