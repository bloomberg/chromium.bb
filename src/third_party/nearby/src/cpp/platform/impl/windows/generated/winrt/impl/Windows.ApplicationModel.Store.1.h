// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_Store_1_H
#define WINRT_Windows_ApplicationModel_Store_1_H
#include "winrt/impl/Windows.ApplicationModel.Store.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::Store
{
    struct __declspec(empty_bases) ICurrentApp :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICurrentApp>
    {
        ICurrentApp(std::nullptr_t = nullptr) noexcept {}
        ICurrentApp(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICurrentApp(ICurrentApp const&) noexcept = default;
        ICurrentApp(ICurrentApp&&) noexcept = default;
        ICurrentApp& operator=(ICurrentApp const&) & noexcept = default;
        ICurrentApp& operator=(ICurrentApp&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICurrentApp2Statics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICurrentApp2Statics>
    {
        ICurrentApp2Statics(std::nullptr_t = nullptr) noexcept {}
        ICurrentApp2Statics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICurrentApp2Statics(ICurrentApp2Statics const&) noexcept = default;
        ICurrentApp2Statics(ICurrentApp2Statics&&) noexcept = default;
        ICurrentApp2Statics& operator=(ICurrentApp2Statics const&) & noexcept = default;
        ICurrentApp2Statics& operator=(ICurrentApp2Statics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICurrentAppSimulator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICurrentAppSimulator>
    {
        ICurrentAppSimulator(std::nullptr_t = nullptr) noexcept {}
        ICurrentAppSimulator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICurrentAppSimulator(ICurrentAppSimulator const&) noexcept = default;
        ICurrentAppSimulator(ICurrentAppSimulator&&) noexcept = default;
        ICurrentAppSimulator& operator=(ICurrentAppSimulator const&) & noexcept = default;
        ICurrentAppSimulator& operator=(ICurrentAppSimulator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICurrentAppSimulatorStaticsWithFiltering :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICurrentAppSimulatorStaticsWithFiltering>
    {
        ICurrentAppSimulatorStaticsWithFiltering(std::nullptr_t = nullptr) noexcept {}
        ICurrentAppSimulatorStaticsWithFiltering(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICurrentAppSimulatorStaticsWithFiltering(ICurrentAppSimulatorStaticsWithFiltering const&) noexcept = default;
        ICurrentAppSimulatorStaticsWithFiltering(ICurrentAppSimulatorStaticsWithFiltering&&) noexcept = default;
        ICurrentAppSimulatorStaticsWithFiltering& operator=(ICurrentAppSimulatorStaticsWithFiltering const&) & noexcept = default;
        ICurrentAppSimulatorStaticsWithFiltering& operator=(ICurrentAppSimulatorStaticsWithFiltering&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICurrentAppSimulatorWithCampaignId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICurrentAppSimulatorWithCampaignId>
    {
        ICurrentAppSimulatorWithCampaignId(std::nullptr_t = nullptr) noexcept {}
        ICurrentAppSimulatorWithCampaignId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICurrentAppSimulatorWithCampaignId(ICurrentAppSimulatorWithCampaignId const&) noexcept = default;
        ICurrentAppSimulatorWithCampaignId(ICurrentAppSimulatorWithCampaignId&&) noexcept = default;
        ICurrentAppSimulatorWithCampaignId& operator=(ICurrentAppSimulatorWithCampaignId const&) & noexcept = default;
        ICurrentAppSimulatorWithCampaignId& operator=(ICurrentAppSimulatorWithCampaignId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICurrentAppSimulatorWithConsumables :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICurrentAppSimulatorWithConsumables>
    {
        ICurrentAppSimulatorWithConsumables(std::nullptr_t = nullptr) noexcept {}
        ICurrentAppSimulatorWithConsumables(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICurrentAppSimulatorWithConsumables(ICurrentAppSimulatorWithConsumables const&) noexcept = default;
        ICurrentAppSimulatorWithConsumables(ICurrentAppSimulatorWithConsumables&&) noexcept = default;
        ICurrentAppSimulatorWithConsumables& operator=(ICurrentAppSimulatorWithConsumables const&) & noexcept = default;
        ICurrentAppSimulatorWithConsumables& operator=(ICurrentAppSimulatorWithConsumables&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICurrentAppStaticsWithFiltering :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICurrentAppStaticsWithFiltering>
    {
        ICurrentAppStaticsWithFiltering(std::nullptr_t = nullptr) noexcept {}
        ICurrentAppStaticsWithFiltering(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICurrentAppStaticsWithFiltering(ICurrentAppStaticsWithFiltering const&) noexcept = default;
        ICurrentAppStaticsWithFiltering(ICurrentAppStaticsWithFiltering&&) noexcept = default;
        ICurrentAppStaticsWithFiltering& operator=(ICurrentAppStaticsWithFiltering const&) & noexcept = default;
        ICurrentAppStaticsWithFiltering& operator=(ICurrentAppStaticsWithFiltering&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICurrentAppWithCampaignId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICurrentAppWithCampaignId>
    {
        ICurrentAppWithCampaignId(std::nullptr_t = nullptr) noexcept {}
        ICurrentAppWithCampaignId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICurrentAppWithCampaignId(ICurrentAppWithCampaignId const&) noexcept = default;
        ICurrentAppWithCampaignId(ICurrentAppWithCampaignId&&) noexcept = default;
        ICurrentAppWithCampaignId& operator=(ICurrentAppWithCampaignId const&) & noexcept = default;
        ICurrentAppWithCampaignId& operator=(ICurrentAppWithCampaignId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICurrentAppWithConsumables :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICurrentAppWithConsumables>
    {
        ICurrentAppWithConsumables(std::nullptr_t = nullptr) noexcept {}
        ICurrentAppWithConsumables(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICurrentAppWithConsumables(ICurrentAppWithConsumables const&) noexcept = default;
        ICurrentAppWithConsumables(ICurrentAppWithConsumables&&) noexcept = default;
        ICurrentAppWithConsumables& operator=(ICurrentAppWithConsumables const&) & noexcept = default;
        ICurrentAppWithConsumables& operator=(ICurrentAppWithConsumables&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILicenseInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILicenseInformation>
    {
        ILicenseInformation(std::nullptr_t = nullptr) noexcept {}
        ILicenseInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILicenseInformation(ILicenseInformation const&) noexcept = default;
        ILicenseInformation(ILicenseInformation&&) noexcept = default;
        ILicenseInformation& operator=(ILicenseInformation const&) & noexcept = default;
        ILicenseInformation& operator=(ILicenseInformation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListingInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListingInformation>
    {
        IListingInformation(std::nullptr_t = nullptr) noexcept {}
        IListingInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListingInformation(IListingInformation const&) noexcept = default;
        IListingInformation(IListingInformation&&) noexcept = default;
        IListingInformation& operator=(IListingInformation const&) & noexcept = default;
        IListingInformation& operator=(IListingInformation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListingInformation2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListingInformation2>
    {
        IListingInformation2(std::nullptr_t = nullptr) noexcept {}
        IListingInformation2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListingInformation2(IListingInformation2 const&) noexcept = default;
        IListingInformation2(IListingInformation2&&) noexcept = default;
        IListingInformation2& operator=(IListingInformation2 const&) & noexcept = default;
        IListingInformation2& operator=(IListingInformation2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProductLicense :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProductLicense>
    {
        IProductLicense(std::nullptr_t = nullptr) noexcept {}
        IProductLicense(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProductLicense(IProductLicense const&) noexcept = default;
        IProductLicense(IProductLicense&&) noexcept = default;
        IProductLicense& operator=(IProductLicense const&) & noexcept = default;
        IProductLicense& operator=(IProductLicense&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProductLicenseWithFulfillment :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProductLicenseWithFulfillment>,
        impl::require<winrt::Windows::ApplicationModel::Store::IProductLicenseWithFulfillment, winrt::Windows::ApplicationModel::Store::IProductLicense>
    {
        IProductLicenseWithFulfillment(std::nullptr_t = nullptr) noexcept {}
        IProductLicenseWithFulfillment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProductLicenseWithFulfillment(IProductLicenseWithFulfillment const&) noexcept = default;
        IProductLicenseWithFulfillment(IProductLicenseWithFulfillment&&) noexcept = default;
        IProductLicenseWithFulfillment& operator=(IProductLicenseWithFulfillment const&) & noexcept = default;
        IProductLicenseWithFulfillment& operator=(IProductLicenseWithFulfillment&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProductListing :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProductListing>
    {
        IProductListing(std::nullptr_t = nullptr) noexcept {}
        IProductListing(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProductListing(IProductListing const&) noexcept = default;
        IProductListing(IProductListing&&) noexcept = default;
        IProductListing& operator=(IProductListing const&) & noexcept = default;
        IProductListing& operator=(IProductListing&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProductListing2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProductListing2>
    {
        IProductListing2(std::nullptr_t = nullptr) noexcept {}
        IProductListing2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProductListing2(IProductListing2 const&) noexcept = default;
        IProductListing2(IProductListing2&&) noexcept = default;
        IProductListing2& operator=(IProductListing2 const&) & noexcept = default;
        IProductListing2& operator=(IProductListing2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProductListingWithConsumables :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProductListingWithConsumables>
    {
        IProductListingWithConsumables(std::nullptr_t = nullptr) noexcept {}
        IProductListingWithConsumables(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProductListingWithConsumables(IProductListingWithConsumables const&) noexcept = default;
        IProductListingWithConsumables(IProductListingWithConsumables&&) noexcept = default;
        IProductListingWithConsumables& operator=(IProductListingWithConsumables const&) & noexcept = default;
        IProductListingWithConsumables& operator=(IProductListingWithConsumables&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProductListingWithMetadata :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProductListingWithMetadata>,
        impl::require<winrt::Windows::ApplicationModel::Store::IProductListingWithMetadata, winrt::Windows::ApplicationModel::Store::IProductListing>
    {
        IProductListingWithMetadata(std::nullptr_t = nullptr) noexcept {}
        IProductListingWithMetadata(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProductListingWithMetadata(IProductListingWithMetadata const&) noexcept = default;
        IProductListingWithMetadata(IProductListingWithMetadata&&) noexcept = default;
        IProductListingWithMetadata& operator=(IProductListingWithMetadata const&) & noexcept = default;
        IProductListingWithMetadata& operator=(IProductListingWithMetadata&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProductPurchaseDisplayProperties :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProductPurchaseDisplayProperties>
    {
        IProductPurchaseDisplayProperties(std::nullptr_t = nullptr) noexcept {}
        IProductPurchaseDisplayProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProductPurchaseDisplayProperties(IProductPurchaseDisplayProperties const&) noexcept = default;
        IProductPurchaseDisplayProperties(IProductPurchaseDisplayProperties&&) noexcept = default;
        IProductPurchaseDisplayProperties& operator=(IProductPurchaseDisplayProperties const&) & noexcept = default;
        IProductPurchaseDisplayProperties& operator=(IProductPurchaseDisplayProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProductPurchaseDisplayPropertiesFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProductPurchaseDisplayPropertiesFactory>
    {
        IProductPurchaseDisplayPropertiesFactory(std::nullptr_t = nullptr) noexcept {}
        IProductPurchaseDisplayPropertiesFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProductPurchaseDisplayPropertiesFactory(IProductPurchaseDisplayPropertiesFactory const&) noexcept = default;
        IProductPurchaseDisplayPropertiesFactory(IProductPurchaseDisplayPropertiesFactory&&) noexcept = default;
        IProductPurchaseDisplayPropertiesFactory& operator=(IProductPurchaseDisplayPropertiesFactory const&) & noexcept = default;
        IProductPurchaseDisplayPropertiesFactory& operator=(IProductPurchaseDisplayPropertiesFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPurchaseResults :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPurchaseResults>
    {
        IPurchaseResults(std::nullptr_t = nullptr) noexcept {}
        IPurchaseResults(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPurchaseResults(IPurchaseResults const&) noexcept = default;
        IPurchaseResults(IPurchaseResults&&) noexcept = default;
        IPurchaseResults& operator=(IPurchaseResults const&) & noexcept = default;
        IPurchaseResults& operator=(IPurchaseResults&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUnfulfilledConsumable :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUnfulfilledConsumable>
    {
        IUnfulfilledConsumable(std::nullptr_t = nullptr) noexcept {}
        IUnfulfilledConsumable(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUnfulfilledConsumable(IUnfulfilledConsumable const&) noexcept = default;
        IUnfulfilledConsumable(IUnfulfilledConsumable&&) noexcept = default;
        IUnfulfilledConsumable& operator=(IUnfulfilledConsumable const&) & noexcept = default;
        IUnfulfilledConsumable& operator=(IUnfulfilledConsumable&&) & noexcept = default;
    };
}
#endif
