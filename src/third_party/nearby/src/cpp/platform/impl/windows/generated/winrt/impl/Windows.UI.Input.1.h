// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Input_1_H
#define WINRT_Windows_UI_Input_1_H
#include "winrt/impl/Windows.UI.Input.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Input
{
    struct __declspec(empty_bases) IAttachableInputObject :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAttachableInputObject>
    {
        IAttachableInputObject(std::nullptr_t = nullptr) noexcept {}
        IAttachableInputObject(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAttachableInputObject(IAttachableInputObject const&) noexcept = default;
        IAttachableInputObject(IAttachableInputObject&&) noexcept = default;
        IAttachableInputObject& operator=(IAttachableInputObject const&) & noexcept = default;
        IAttachableInputObject& operator=(IAttachableInputObject&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAttachableInputObjectFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAttachableInputObjectFactory>
    {
        IAttachableInputObjectFactory(std::nullptr_t = nullptr) noexcept {}
        IAttachableInputObjectFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAttachableInputObjectFactory(IAttachableInputObjectFactory const&) noexcept = default;
        IAttachableInputObjectFactory(IAttachableInputObjectFactory&&) noexcept = default;
        IAttachableInputObjectFactory& operator=(IAttachableInputObjectFactory const&) & noexcept = default;
        IAttachableInputObjectFactory& operator=(IAttachableInputObjectFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICrossSlidingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICrossSlidingEventArgs>
    {
        ICrossSlidingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICrossSlidingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICrossSlidingEventArgs(ICrossSlidingEventArgs const&) noexcept = default;
        ICrossSlidingEventArgs(ICrossSlidingEventArgs&&) noexcept = default;
        ICrossSlidingEventArgs& operator=(ICrossSlidingEventArgs const&) & noexcept = default;
        ICrossSlidingEventArgs& operator=(ICrossSlidingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICrossSlidingEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICrossSlidingEventArgs2>
    {
        ICrossSlidingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        ICrossSlidingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICrossSlidingEventArgs2(ICrossSlidingEventArgs2 const&) noexcept = default;
        ICrossSlidingEventArgs2(ICrossSlidingEventArgs2&&) noexcept = default;
        ICrossSlidingEventArgs2& operator=(ICrossSlidingEventArgs2 const&) & noexcept = default;
        ICrossSlidingEventArgs2& operator=(ICrossSlidingEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDraggingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDraggingEventArgs>
    {
        IDraggingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDraggingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDraggingEventArgs(IDraggingEventArgs const&) noexcept = default;
        IDraggingEventArgs(IDraggingEventArgs&&) noexcept = default;
        IDraggingEventArgs& operator=(IDraggingEventArgs const&) & noexcept = default;
        IDraggingEventArgs& operator=(IDraggingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDraggingEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDraggingEventArgs2>
    {
        IDraggingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IDraggingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDraggingEventArgs2(IDraggingEventArgs2 const&) noexcept = default;
        IDraggingEventArgs2(IDraggingEventArgs2&&) noexcept = default;
        IDraggingEventArgs2& operator=(IDraggingEventArgs2 const&) & noexcept = default;
        IDraggingEventArgs2& operator=(IDraggingEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEdgeGesture :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEdgeGesture>
    {
        IEdgeGesture(std::nullptr_t = nullptr) noexcept {}
        IEdgeGesture(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEdgeGesture(IEdgeGesture const&) noexcept = default;
        IEdgeGesture(IEdgeGesture&&) noexcept = default;
        IEdgeGesture& operator=(IEdgeGesture const&) & noexcept = default;
        IEdgeGesture& operator=(IEdgeGesture&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEdgeGestureEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEdgeGestureEventArgs>
    {
        IEdgeGestureEventArgs(std::nullptr_t = nullptr) noexcept {}
        IEdgeGestureEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEdgeGestureEventArgs(IEdgeGestureEventArgs const&) noexcept = default;
        IEdgeGestureEventArgs(IEdgeGestureEventArgs&&) noexcept = default;
        IEdgeGestureEventArgs& operator=(IEdgeGestureEventArgs const&) & noexcept = default;
        IEdgeGestureEventArgs& operator=(IEdgeGestureEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEdgeGestureStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEdgeGestureStatics>
    {
        IEdgeGestureStatics(std::nullptr_t = nullptr) noexcept {}
        IEdgeGestureStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEdgeGestureStatics(IEdgeGestureStatics const&) noexcept = default;
        IEdgeGestureStatics(IEdgeGestureStatics&&) noexcept = default;
        IEdgeGestureStatics& operator=(IEdgeGestureStatics const&) & noexcept = default;
        IEdgeGestureStatics& operator=(IEdgeGestureStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGestureRecognizer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGestureRecognizer>
    {
        IGestureRecognizer(std::nullptr_t = nullptr) noexcept {}
        IGestureRecognizer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGestureRecognizer(IGestureRecognizer const&) noexcept = default;
        IGestureRecognizer(IGestureRecognizer&&) noexcept = default;
        IGestureRecognizer& operator=(IGestureRecognizer const&) & noexcept = default;
        IGestureRecognizer& operator=(IGestureRecognizer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGestureRecognizer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGestureRecognizer2>
    {
        IGestureRecognizer2(std::nullptr_t = nullptr) noexcept {}
        IGestureRecognizer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGestureRecognizer2(IGestureRecognizer2 const&) noexcept = default;
        IGestureRecognizer2(IGestureRecognizer2&&) noexcept = default;
        IGestureRecognizer2& operator=(IGestureRecognizer2 const&) & noexcept = default;
        IGestureRecognizer2& operator=(IGestureRecognizer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHoldingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHoldingEventArgs>
    {
        IHoldingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHoldingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHoldingEventArgs(IHoldingEventArgs const&) noexcept = default;
        IHoldingEventArgs(IHoldingEventArgs&&) noexcept = default;
        IHoldingEventArgs& operator=(IHoldingEventArgs const&) & noexcept = default;
        IHoldingEventArgs& operator=(IHoldingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHoldingEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHoldingEventArgs2>
    {
        IHoldingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IHoldingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHoldingEventArgs2(IHoldingEventArgs2 const&) noexcept = default;
        IHoldingEventArgs2(IHoldingEventArgs2&&) noexcept = default;
        IHoldingEventArgs2& operator=(IHoldingEventArgs2 const&) & noexcept = default;
        IHoldingEventArgs2& operator=(IHoldingEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInputActivationListener :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputActivationListener>
    {
        IInputActivationListener(std::nullptr_t = nullptr) noexcept {}
        IInputActivationListener(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInputActivationListener(IInputActivationListener const&) noexcept = default;
        IInputActivationListener(IInputActivationListener&&) noexcept = default;
        IInputActivationListener& operator=(IInputActivationListener const&) & noexcept = default;
        IInputActivationListener& operator=(IInputActivationListener&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInputActivationListenerActivationChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputActivationListenerActivationChangedEventArgs>
    {
        IInputActivationListenerActivationChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInputActivationListenerActivationChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInputActivationListenerActivationChangedEventArgs(IInputActivationListenerActivationChangedEventArgs const&) noexcept = default;
        IInputActivationListenerActivationChangedEventArgs(IInputActivationListenerActivationChangedEventArgs&&) noexcept = default;
        IInputActivationListenerActivationChangedEventArgs& operator=(IInputActivationListenerActivationChangedEventArgs const&) & noexcept = default;
        IInputActivationListenerActivationChangedEventArgs& operator=(IInputActivationListenerActivationChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyboardDeliveryInterceptor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyboardDeliveryInterceptor>
    {
        IKeyboardDeliveryInterceptor(std::nullptr_t = nullptr) noexcept {}
        IKeyboardDeliveryInterceptor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyboardDeliveryInterceptor(IKeyboardDeliveryInterceptor const&) noexcept = default;
        IKeyboardDeliveryInterceptor(IKeyboardDeliveryInterceptor&&) noexcept = default;
        IKeyboardDeliveryInterceptor& operator=(IKeyboardDeliveryInterceptor const&) & noexcept = default;
        IKeyboardDeliveryInterceptor& operator=(IKeyboardDeliveryInterceptor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyboardDeliveryInterceptorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyboardDeliveryInterceptorStatics>
    {
        IKeyboardDeliveryInterceptorStatics(std::nullptr_t = nullptr) noexcept {}
        IKeyboardDeliveryInterceptorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyboardDeliveryInterceptorStatics(IKeyboardDeliveryInterceptorStatics const&) noexcept = default;
        IKeyboardDeliveryInterceptorStatics(IKeyboardDeliveryInterceptorStatics&&) noexcept = default;
        IKeyboardDeliveryInterceptorStatics& operator=(IKeyboardDeliveryInterceptorStatics const&) & noexcept = default;
        IKeyboardDeliveryInterceptorStatics& operator=(IKeyboardDeliveryInterceptorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationCompletedEventArgs>
    {
        IManipulationCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationCompletedEventArgs(IManipulationCompletedEventArgs const&) noexcept = default;
        IManipulationCompletedEventArgs(IManipulationCompletedEventArgs&&) noexcept = default;
        IManipulationCompletedEventArgs& operator=(IManipulationCompletedEventArgs const&) & noexcept = default;
        IManipulationCompletedEventArgs& operator=(IManipulationCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationCompletedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationCompletedEventArgs2>
    {
        IManipulationCompletedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IManipulationCompletedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationCompletedEventArgs2(IManipulationCompletedEventArgs2 const&) noexcept = default;
        IManipulationCompletedEventArgs2(IManipulationCompletedEventArgs2&&) noexcept = default;
        IManipulationCompletedEventArgs2& operator=(IManipulationCompletedEventArgs2 const&) & noexcept = default;
        IManipulationCompletedEventArgs2& operator=(IManipulationCompletedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationInertiaStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationInertiaStartingEventArgs>
    {
        IManipulationInertiaStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationInertiaStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationInertiaStartingEventArgs(IManipulationInertiaStartingEventArgs const&) noexcept = default;
        IManipulationInertiaStartingEventArgs(IManipulationInertiaStartingEventArgs&&) noexcept = default;
        IManipulationInertiaStartingEventArgs& operator=(IManipulationInertiaStartingEventArgs const&) & noexcept = default;
        IManipulationInertiaStartingEventArgs& operator=(IManipulationInertiaStartingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationInertiaStartingEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationInertiaStartingEventArgs2>
    {
        IManipulationInertiaStartingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IManipulationInertiaStartingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationInertiaStartingEventArgs2(IManipulationInertiaStartingEventArgs2 const&) noexcept = default;
        IManipulationInertiaStartingEventArgs2(IManipulationInertiaStartingEventArgs2&&) noexcept = default;
        IManipulationInertiaStartingEventArgs2& operator=(IManipulationInertiaStartingEventArgs2 const&) & noexcept = default;
        IManipulationInertiaStartingEventArgs2& operator=(IManipulationInertiaStartingEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationStartedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationStartedEventArgs>
    {
        IManipulationStartedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationStartedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationStartedEventArgs(IManipulationStartedEventArgs const&) noexcept = default;
        IManipulationStartedEventArgs(IManipulationStartedEventArgs&&) noexcept = default;
        IManipulationStartedEventArgs& operator=(IManipulationStartedEventArgs const&) & noexcept = default;
        IManipulationStartedEventArgs& operator=(IManipulationStartedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationStartedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationStartedEventArgs2>
    {
        IManipulationStartedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IManipulationStartedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationStartedEventArgs2(IManipulationStartedEventArgs2 const&) noexcept = default;
        IManipulationStartedEventArgs2(IManipulationStartedEventArgs2&&) noexcept = default;
        IManipulationStartedEventArgs2& operator=(IManipulationStartedEventArgs2 const&) & noexcept = default;
        IManipulationStartedEventArgs2& operator=(IManipulationStartedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationUpdatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationUpdatedEventArgs>
    {
        IManipulationUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationUpdatedEventArgs(IManipulationUpdatedEventArgs const&) noexcept = default;
        IManipulationUpdatedEventArgs(IManipulationUpdatedEventArgs&&) noexcept = default;
        IManipulationUpdatedEventArgs& operator=(IManipulationUpdatedEventArgs const&) & noexcept = default;
        IManipulationUpdatedEventArgs& operator=(IManipulationUpdatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationUpdatedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationUpdatedEventArgs2>
    {
        IManipulationUpdatedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IManipulationUpdatedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationUpdatedEventArgs2(IManipulationUpdatedEventArgs2 const&) noexcept = default;
        IManipulationUpdatedEventArgs2(IManipulationUpdatedEventArgs2&&) noexcept = default;
        IManipulationUpdatedEventArgs2& operator=(IManipulationUpdatedEventArgs2 const&) & noexcept = default;
        IManipulationUpdatedEventArgs2& operator=(IManipulationUpdatedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMouseWheelParameters :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMouseWheelParameters>
    {
        IMouseWheelParameters(std::nullptr_t = nullptr) noexcept {}
        IMouseWheelParameters(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMouseWheelParameters(IMouseWheelParameters const&) noexcept = default;
        IMouseWheelParameters(IMouseWheelParameters&&) noexcept = default;
        IMouseWheelParameters& operator=(IMouseWheelParameters const&) & noexcept = default;
        IMouseWheelParameters& operator=(IMouseWheelParameters&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerPoint :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerPoint>
    {
        IPointerPoint(std::nullptr_t = nullptr) noexcept {}
        IPointerPoint(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerPoint(IPointerPoint const&) noexcept = default;
        IPointerPoint(IPointerPoint&&) noexcept = default;
        IPointerPoint& operator=(IPointerPoint const&) & noexcept = default;
        IPointerPoint& operator=(IPointerPoint&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerPointProperties :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerPointProperties>
    {
        IPointerPointProperties(std::nullptr_t = nullptr) noexcept {}
        IPointerPointProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerPointProperties(IPointerPointProperties const&) noexcept = default;
        IPointerPointProperties(IPointerPointProperties&&) noexcept = default;
        IPointerPointProperties& operator=(IPointerPointProperties const&) & noexcept = default;
        IPointerPointProperties& operator=(IPointerPointProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerPointProperties2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerPointProperties2>
    {
        IPointerPointProperties2(std::nullptr_t = nullptr) noexcept {}
        IPointerPointProperties2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerPointProperties2(IPointerPointProperties2 const&) noexcept = default;
        IPointerPointProperties2(IPointerPointProperties2&&) noexcept = default;
        IPointerPointProperties2& operator=(IPointerPointProperties2 const&) & noexcept = default;
        IPointerPointProperties2& operator=(IPointerPointProperties2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerPointStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerPointStatics>
    {
        IPointerPointStatics(std::nullptr_t = nullptr) noexcept {}
        IPointerPointStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerPointStatics(IPointerPointStatics const&) noexcept = default;
        IPointerPointStatics(IPointerPointStatics&&) noexcept = default;
        IPointerPointStatics& operator=(IPointerPointStatics const&) & noexcept = default;
        IPointerPointStatics& operator=(IPointerPointStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerPointTransform :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerPointTransform>
    {
        IPointerPointTransform(std::nullptr_t = nullptr) noexcept {}
        IPointerPointTransform(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerPointTransform(IPointerPointTransform const&) noexcept = default;
        IPointerPointTransform(IPointerPointTransform&&) noexcept = default;
        IPointerPointTransform& operator=(IPointerPointTransform const&) & noexcept = default;
        IPointerPointTransform& operator=(IPointerPointTransform&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerVisualizationSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerVisualizationSettings>
    {
        IPointerVisualizationSettings(std::nullptr_t = nullptr) noexcept {}
        IPointerVisualizationSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerVisualizationSettings(IPointerVisualizationSettings const&) noexcept = default;
        IPointerVisualizationSettings(IPointerVisualizationSettings&&) noexcept = default;
        IPointerVisualizationSettings& operator=(IPointerVisualizationSettings const&) & noexcept = default;
        IPointerVisualizationSettings& operator=(IPointerVisualizationSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerVisualizationSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerVisualizationSettingsStatics>
    {
        IPointerVisualizationSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        IPointerVisualizationSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerVisualizationSettingsStatics(IPointerVisualizationSettingsStatics const&) noexcept = default;
        IPointerVisualizationSettingsStatics(IPointerVisualizationSettingsStatics&&) noexcept = default;
        IPointerVisualizationSettingsStatics& operator=(IPointerVisualizationSettingsStatics const&) & noexcept = default;
        IPointerVisualizationSettingsStatics& operator=(IPointerVisualizationSettingsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialController :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialController>
    {
        IRadialController(std::nullptr_t = nullptr) noexcept {}
        IRadialController(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialController(IRadialController const&) noexcept = default;
        IRadialController(IRadialController&&) noexcept = default;
        IRadialController& operator=(IRadialController const&) & noexcept = default;
        IRadialController& operator=(IRadialController&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialController2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialController2>
    {
        IRadialController2(std::nullptr_t = nullptr) noexcept {}
        IRadialController2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialController2(IRadialController2 const&) noexcept = default;
        IRadialController2(IRadialController2&&) noexcept = default;
        IRadialController2& operator=(IRadialController2 const&) & noexcept = default;
        IRadialController2& operator=(IRadialController2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerButtonClickedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerButtonClickedEventArgs>
    {
        IRadialControllerButtonClickedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerButtonClickedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerButtonClickedEventArgs(IRadialControllerButtonClickedEventArgs const&) noexcept = default;
        IRadialControllerButtonClickedEventArgs(IRadialControllerButtonClickedEventArgs&&) noexcept = default;
        IRadialControllerButtonClickedEventArgs& operator=(IRadialControllerButtonClickedEventArgs const&) & noexcept = default;
        IRadialControllerButtonClickedEventArgs& operator=(IRadialControllerButtonClickedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerButtonClickedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerButtonClickedEventArgs2>
    {
        IRadialControllerButtonClickedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerButtonClickedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerButtonClickedEventArgs2(IRadialControllerButtonClickedEventArgs2 const&) noexcept = default;
        IRadialControllerButtonClickedEventArgs2(IRadialControllerButtonClickedEventArgs2&&) noexcept = default;
        IRadialControllerButtonClickedEventArgs2& operator=(IRadialControllerButtonClickedEventArgs2 const&) & noexcept = default;
        IRadialControllerButtonClickedEventArgs2& operator=(IRadialControllerButtonClickedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerButtonHoldingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerButtonHoldingEventArgs>
    {
        IRadialControllerButtonHoldingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerButtonHoldingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerButtonHoldingEventArgs(IRadialControllerButtonHoldingEventArgs const&) noexcept = default;
        IRadialControllerButtonHoldingEventArgs(IRadialControllerButtonHoldingEventArgs&&) noexcept = default;
        IRadialControllerButtonHoldingEventArgs& operator=(IRadialControllerButtonHoldingEventArgs const&) & noexcept = default;
        IRadialControllerButtonHoldingEventArgs& operator=(IRadialControllerButtonHoldingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerButtonPressedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerButtonPressedEventArgs>
    {
        IRadialControllerButtonPressedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerButtonPressedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerButtonPressedEventArgs(IRadialControllerButtonPressedEventArgs const&) noexcept = default;
        IRadialControllerButtonPressedEventArgs(IRadialControllerButtonPressedEventArgs&&) noexcept = default;
        IRadialControllerButtonPressedEventArgs& operator=(IRadialControllerButtonPressedEventArgs const&) & noexcept = default;
        IRadialControllerButtonPressedEventArgs& operator=(IRadialControllerButtonPressedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerButtonReleasedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerButtonReleasedEventArgs>
    {
        IRadialControllerButtonReleasedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerButtonReleasedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerButtonReleasedEventArgs(IRadialControllerButtonReleasedEventArgs const&) noexcept = default;
        IRadialControllerButtonReleasedEventArgs(IRadialControllerButtonReleasedEventArgs&&) noexcept = default;
        IRadialControllerButtonReleasedEventArgs& operator=(IRadialControllerButtonReleasedEventArgs const&) & noexcept = default;
        IRadialControllerButtonReleasedEventArgs& operator=(IRadialControllerButtonReleasedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerConfiguration>
    {
        IRadialControllerConfiguration(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerConfiguration(IRadialControllerConfiguration const&) noexcept = default;
        IRadialControllerConfiguration(IRadialControllerConfiguration&&) noexcept = default;
        IRadialControllerConfiguration& operator=(IRadialControllerConfiguration const&) & noexcept = default;
        IRadialControllerConfiguration& operator=(IRadialControllerConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerConfiguration2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerConfiguration2>
    {
        IRadialControllerConfiguration2(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerConfiguration2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerConfiguration2(IRadialControllerConfiguration2 const&) noexcept = default;
        IRadialControllerConfiguration2(IRadialControllerConfiguration2&&) noexcept = default;
        IRadialControllerConfiguration2& operator=(IRadialControllerConfiguration2 const&) & noexcept = default;
        IRadialControllerConfiguration2& operator=(IRadialControllerConfiguration2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerConfigurationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerConfigurationStatics>
    {
        IRadialControllerConfigurationStatics(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerConfigurationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerConfigurationStatics(IRadialControllerConfigurationStatics const&) noexcept = default;
        IRadialControllerConfigurationStatics(IRadialControllerConfigurationStatics&&) noexcept = default;
        IRadialControllerConfigurationStatics& operator=(IRadialControllerConfigurationStatics const&) & noexcept = default;
        IRadialControllerConfigurationStatics& operator=(IRadialControllerConfigurationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerConfigurationStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerConfigurationStatics2>
    {
        IRadialControllerConfigurationStatics2(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerConfigurationStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerConfigurationStatics2(IRadialControllerConfigurationStatics2 const&) noexcept = default;
        IRadialControllerConfigurationStatics2(IRadialControllerConfigurationStatics2&&) noexcept = default;
        IRadialControllerConfigurationStatics2& operator=(IRadialControllerConfigurationStatics2 const&) & noexcept = default;
        IRadialControllerConfigurationStatics2& operator=(IRadialControllerConfigurationStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerControlAcquiredEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerControlAcquiredEventArgs>
    {
        IRadialControllerControlAcquiredEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerControlAcquiredEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerControlAcquiredEventArgs(IRadialControllerControlAcquiredEventArgs const&) noexcept = default;
        IRadialControllerControlAcquiredEventArgs(IRadialControllerControlAcquiredEventArgs&&) noexcept = default;
        IRadialControllerControlAcquiredEventArgs& operator=(IRadialControllerControlAcquiredEventArgs const&) & noexcept = default;
        IRadialControllerControlAcquiredEventArgs& operator=(IRadialControllerControlAcquiredEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerControlAcquiredEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerControlAcquiredEventArgs2>
    {
        IRadialControllerControlAcquiredEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerControlAcquiredEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerControlAcquiredEventArgs2(IRadialControllerControlAcquiredEventArgs2 const&) noexcept = default;
        IRadialControllerControlAcquiredEventArgs2(IRadialControllerControlAcquiredEventArgs2&&) noexcept = default;
        IRadialControllerControlAcquiredEventArgs2& operator=(IRadialControllerControlAcquiredEventArgs2 const&) & noexcept = default;
        IRadialControllerControlAcquiredEventArgs2& operator=(IRadialControllerControlAcquiredEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerMenu :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerMenu>
    {
        IRadialControllerMenu(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerMenu(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerMenu(IRadialControllerMenu const&) noexcept = default;
        IRadialControllerMenu(IRadialControllerMenu&&) noexcept = default;
        IRadialControllerMenu& operator=(IRadialControllerMenu const&) & noexcept = default;
        IRadialControllerMenu& operator=(IRadialControllerMenu&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerMenuItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerMenuItem>
    {
        IRadialControllerMenuItem(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerMenuItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerMenuItem(IRadialControllerMenuItem const&) noexcept = default;
        IRadialControllerMenuItem(IRadialControllerMenuItem&&) noexcept = default;
        IRadialControllerMenuItem& operator=(IRadialControllerMenuItem const&) & noexcept = default;
        IRadialControllerMenuItem& operator=(IRadialControllerMenuItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerMenuItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerMenuItemStatics>
    {
        IRadialControllerMenuItemStatics(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerMenuItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerMenuItemStatics(IRadialControllerMenuItemStatics const&) noexcept = default;
        IRadialControllerMenuItemStatics(IRadialControllerMenuItemStatics&&) noexcept = default;
        IRadialControllerMenuItemStatics& operator=(IRadialControllerMenuItemStatics const&) & noexcept = default;
        IRadialControllerMenuItemStatics& operator=(IRadialControllerMenuItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerMenuItemStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerMenuItemStatics2>
    {
        IRadialControllerMenuItemStatics2(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerMenuItemStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerMenuItemStatics2(IRadialControllerMenuItemStatics2 const&) noexcept = default;
        IRadialControllerMenuItemStatics2(IRadialControllerMenuItemStatics2&&) noexcept = default;
        IRadialControllerMenuItemStatics2& operator=(IRadialControllerMenuItemStatics2 const&) & noexcept = default;
        IRadialControllerMenuItemStatics2& operator=(IRadialControllerMenuItemStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerRotationChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerRotationChangedEventArgs>
    {
        IRadialControllerRotationChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerRotationChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerRotationChangedEventArgs(IRadialControllerRotationChangedEventArgs const&) noexcept = default;
        IRadialControllerRotationChangedEventArgs(IRadialControllerRotationChangedEventArgs&&) noexcept = default;
        IRadialControllerRotationChangedEventArgs& operator=(IRadialControllerRotationChangedEventArgs const&) & noexcept = default;
        IRadialControllerRotationChangedEventArgs& operator=(IRadialControllerRotationChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerRotationChangedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerRotationChangedEventArgs2>
    {
        IRadialControllerRotationChangedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerRotationChangedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerRotationChangedEventArgs2(IRadialControllerRotationChangedEventArgs2 const&) noexcept = default;
        IRadialControllerRotationChangedEventArgs2(IRadialControllerRotationChangedEventArgs2&&) noexcept = default;
        IRadialControllerRotationChangedEventArgs2& operator=(IRadialControllerRotationChangedEventArgs2 const&) & noexcept = default;
        IRadialControllerRotationChangedEventArgs2& operator=(IRadialControllerRotationChangedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerScreenContact :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerScreenContact>
    {
        IRadialControllerScreenContact(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerScreenContact(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerScreenContact(IRadialControllerScreenContact const&) noexcept = default;
        IRadialControllerScreenContact(IRadialControllerScreenContact&&) noexcept = default;
        IRadialControllerScreenContact& operator=(IRadialControllerScreenContact const&) & noexcept = default;
        IRadialControllerScreenContact& operator=(IRadialControllerScreenContact&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerScreenContactContinuedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerScreenContactContinuedEventArgs>
    {
        IRadialControllerScreenContactContinuedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerScreenContactContinuedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerScreenContactContinuedEventArgs(IRadialControllerScreenContactContinuedEventArgs const&) noexcept = default;
        IRadialControllerScreenContactContinuedEventArgs(IRadialControllerScreenContactContinuedEventArgs&&) noexcept = default;
        IRadialControllerScreenContactContinuedEventArgs& operator=(IRadialControllerScreenContactContinuedEventArgs const&) & noexcept = default;
        IRadialControllerScreenContactContinuedEventArgs& operator=(IRadialControllerScreenContactContinuedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerScreenContactContinuedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerScreenContactContinuedEventArgs2>
    {
        IRadialControllerScreenContactContinuedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerScreenContactContinuedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerScreenContactContinuedEventArgs2(IRadialControllerScreenContactContinuedEventArgs2 const&) noexcept = default;
        IRadialControllerScreenContactContinuedEventArgs2(IRadialControllerScreenContactContinuedEventArgs2&&) noexcept = default;
        IRadialControllerScreenContactContinuedEventArgs2& operator=(IRadialControllerScreenContactContinuedEventArgs2 const&) & noexcept = default;
        IRadialControllerScreenContactContinuedEventArgs2& operator=(IRadialControllerScreenContactContinuedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerScreenContactEndedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerScreenContactEndedEventArgs>
    {
        IRadialControllerScreenContactEndedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerScreenContactEndedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerScreenContactEndedEventArgs(IRadialControllerScreenContactEndedEventArgs const&) noexcept = default;
        IRadialControllerScreenContactEndedEventArgs(IRadialControllerScreenContactEndedEventArgs&&) noexcept = default;
        IRadialControllerScreenContactEndedEventArgs& operator=(IRadialControllerScreenContactEndedEventArgs const&) & noexcept = default;
        IRadialControllerScreenContactEndedEventArgs& operator=(IRadialControllerScreenContactEndedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerScreenContactStartedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerScreenContactStartedEventArgs>
    {
        IRadialControllerScreenContactStartedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerScreenContactStartedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerScreenContactStartedEventArgs(IRadialControllerScreenContactStartedEventArgs const&) noexcept = default;
        IRadialControllerScreenContactStartedEventArgs(IRadialControllerScreenContactStartedEventArgs&&) noexcept = default;
        IRadialControllerScreenContactStartedEventArgs& operator=(IRadialControllerScreenContactStartedEventArgs const&) & noexcept = default;
        IRadialControllerScreenContactStartedEventArgs& operator=(IRadialControllerScreenContactStartedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerScreenContactStartedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerScreenContactStartedEventArgs2>
    {
        IRadialControllerScreenContactStartedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerScreenContactStartedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerScreenContactStartedEventArgs2(IRadialControllerScreenContactStartedEventArgs2 const&) noexcept = default;
        IRadialControllerScreenContactStartedEventArgs2(IRadialControllerScreenContactStartedEventArgs2&&) noexcept = default;
        IRadialControllerScreenContactStartedEventArgs2& operator=(IRadialControllerScreenContactStartedEventArgs2 const&) & noexcept = default;
        IRadialControllerScreenContactStartedEventArgs2& operator=(IRadialControllerScreenContactStartedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadialControllerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadialControllerStatics>
    {
        IRadialControllerStatics(std::nullptr_t = nullptr) noexcept {}
        IRadialControllerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadialControllerStatics(IRadialControllerStatics const&) noexcept = default;
        IRadialControllerStatics(IRadialControllerStatics&&) noexcept = default;
        IRadialControllerStatics& operator=(IRadialControllerStatics const&) & noexcept = default;
        IRadialControllerStatics& operator=(IRadialControllerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRightTappedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRightTappedEventArgs>
    {
        IRightTappedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRightTappedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRightTappedEventArgs(IRightTappedEventArgs const&) noexcept = default;
        IRightTappedEventArgs(IRightTappedEventArgs&&) noexcept = default;
        IRightTappedEventArgs& operator=(IRightTappedEventArgs const&) & noexcept = default;
        IRightTappedEventArgs& operator=(IRightTappedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRightTappedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRightTappedEventArgs2>
    {
        IRightTappedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IRightTappedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRightTappedEventArgs2(IRightTappedEventArgs2 const&) noexcept = default;
        IRightTappedEventArgs2(IRightTappedEventArgs2&&) noexcept = default;
        IRightTappedEventArgs2& operator=(IRightTappedEventArgs2 const&) & noexcept = default;
        IRightTappedEventArgs2& operator=(IRightTappedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemButtonEventController :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemButtonEventController>
    {
        ISystemButtonEventController(std::nullptr_t = nullptr) noexcept {}
        ISystemButtonEventController(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemButtonEventController(ISystemButtonEventController const&) noexcept = default;
        ISystemButtonEventController(ISystemButtonEventController&&) noexcept = default;
        ISystemButtonEventController& operator=(ISystemButtonEventController const&) & noexcept = default;
        ISystemButtonEventController& operator=(ISystemButtonEventController&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemButtonEventControllerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemButtonEventControllerStatics>
    {
        ISystemButtonEventControllerStatics(std::nullptr_t = nullptr) noexcept {}
        ISystemButtonEventControllerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemButtonEventControllerStatics(ISystemButtonEventControllerStatics const&) noexcept = default;
        ISystemButtonEventControllerStatics(ISystemButtonEventControllerStatics&&) noexcept = default;
        ISystemButtonEventControllerStatics& operator=(ISystemButtonEventControllerStatics const&) & noexcept = default;
        ISystemButtonEventControllerStatics& operator=(ISystemButtonEventControllerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemFunctionButtonEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemFunctionButtonEventArgs>
    {
        ISystemFunctionButtonEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISystemFunctionButtonEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemFunctionButtonEventArgs(ISystemFunctionButtonEventArgs const&) noexcept = default;
        ISystemFunctionButtonEventArgs(ISystemFunctionButtonEventArgs&&) noexcept = default;
        ISystemFunctionButtonEventArgs& operator=(ISystemFunctionButtonEventArgs const&) & noexcept = default;
        ISystemFunctionButtonEventArgs& operator=(ISystemFunctionButtonEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemFunctionLockChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemFunctionLockChangedEventArgs>
    {
        ISystemFunctionLockChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISystemFunctionLockChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemFunctionLockChangedEventArgs(ISystemFunctionLockChangedEventArgs const&) noexcept = default;
        ISystemFunctionLockChangedEventArgs(ISystemFunctionLockChangedEventArgs&&) noexcept = default;
        ISystemFunctionLockChangedEventArgs& operator=(ISystemFunctionLockChangedEventArgs const&) & noexcept = default;
        ISystemFunctionLockChangedEventArgs& operator=(ISystemFunctionLockChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemFunctionLockIndicatorChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemFunctionLockIndicatorChangedEventArgs>
    {
        ISystemFunctionLockIndicatorChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISystemFunctionLockIndicatorChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemFunctionLockIndicatorChangedEventArgs(ISystemFunctionLockIndicatorChangedEventArgs const&) noexcept = default;
        ISystemFunctionLockIndicatorChangedEventArgs(ISystemFunctionLockIndicatorChangedEventArgs&&) noexcept = default;
        ISystemFunctionLockIndicatorChangedEventArgs& operator=(ISystemFunctionLockIndicatorChangedEventArgs const&) & noexcept = default;
        ISystemFunctionLockIndicatorChangedEventArgs& operator=(ISystemFunctionLockIndicatorChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITappedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITappedEventArgs>
    {
        ITappedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITappedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITappedEventArgs(ITappedEventArgs const&) noexcept = default;
        ITappedEventArgs(ITappedEventArgs&&) noexcept = default;
        ITappedEventArgs& operator=(ITappedEventArgs const&) & noexcept = default;
        ITappedEventArgs& operator=(ITappedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITappedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITappedEventArgs2>
    {
        ITappedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        ITappedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITappedEventArgs2(ITappedEventArgs2 const&) noexcept = default;
        ITappedEventArgs2(ITappedEventArgs2&&) noexcept = default;
        ITappedEventArgs2& operator=(ITappedEventArgs2 const&) & noexcept = default;
        ITappedEventArgs2& operator=(ITappedEventArgs2&&) & noexcept = default;
    };
}
#endif
