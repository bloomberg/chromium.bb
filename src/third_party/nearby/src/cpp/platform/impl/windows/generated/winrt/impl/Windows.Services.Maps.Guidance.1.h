// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Services_Maps_Guidance_1_H
#define WINRT_Windows_Services_Maps_Guidance_1_H
#include "winrt/impl/Windows.Services.Maps.Guidance.0.h"
WINRT_EXPORT namespace winrt::Windows::Services::Maps::Guidance
{
    struct __declspec(empty_bases) IGuidanceAudioNotificationRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceAudioNotificationRequestedEventArgs>
    {
        IGuidanceAudioNotificationRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IGuidanceAudioNotificationRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceAudioNotificationRequestedEventArgs(IGuidanceAudioNotificationRequestedEventArgs const&) noexcept = default;
        IGuidanceAudioNotificationRequestedEventArgs(IGuidanceAudioNotificationRequestedEventArgs&&) noexcept = default;
        IGuidanceAudioNotificationRequestedEventArgs& operator=(IGuidanceAudioNotificationRequestedEventArgs const&) & noexcept = default;
        IGuidanceAudioNotificationRequestedEventArgs& operator=(IGuidanceAudioNotificationRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceLaneInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceLaneInfo>
    {
        IGuidanceLaneInfo(std::nullptr_t = nullptr) noexcept {}
        IGuidanceLaneInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceLaneInfo(IGuidanceLaneInfo const&) noexcept = default;
        IGuidanceLaneInfo(IGuidanceLaneInfo&&) noexcept = default;
        IGuidanceLaneInfo& operator=(IGuidanceLaneInfo const&) & noexcept = default;
        IGuidanceLaneInfo& operator=(IGuidanceLaneInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceManeuver :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceManeuver>
    {
        IGuidanceManeuver(std::nullptr_t = nullptr) noexcept {}
        IGuidanceManeuver(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceManeuver(IGuidanceManeuver const&) noexcept = default;
        IGuidanceManeuver(IGuidanceManeuver&&) noexcept = default;
        IGuidanceManeuver& operator=(IGuidanceManeuver const&) & noexcept = default;
        IGuidanceManeuver& operator=(IGuidanceManeuver&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceMapMatchedCoordinate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceMapMatchedCoordinate>
    {
        IGuidanceMapMatchedCoordinate(std::nullptr_t = nullptr) noexcept {}
        IGuidanceMapMatchedCoordinate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceMapMatchedCoordinate(IGuidanceMapMatchedCoordinate const&) noexcept = default;
        IGuidanceMapMatchedCoordinate(IGuidanceMapMatchedCoordinate&&) noexcept = default;
        IGuidanceMapMatchedCoordinate& operator=(IGuidanceMapMatchedCoordinate const&) & noexcept = default;
        IGuidanceMapMatchedCoordinate& operator=(IGuidanceMapMatchedCoordinate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceNavigator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceNavigator>
    {
        IGuidanceNavigator(std::nullptr_t = nullptr) noexcept {}
        IGuidanceNavigator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceNavigator(IGuidanceNavigator const&) noexcept = default;
        IGuidanceNavigator(IGuidanceNavigator&&) noexcept = default;
        IGuidanceNavigator& operator=(IGuidanceNavigator const&) & noexcept = default;
        IGuidanceNavigator& operator=(IGuidanceNavigator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceNavigator2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceNavigator2>
    {
        IGuidanceNavigator2(std::nullptr_t = nullptr) noexcept {}
        IGuidanceNavigator2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceNavigator2(IGuidanceNavigator2 const&) noexcept = default;
        IGuidanceNavigator2(IGuidanceNavigator2&&) noexcept = default;
        IGuidanceNavigator2& operator=(IGuidanceNavigator2 const&) & noexcept = default;
        IGuidanceNavigator2& operator=(IGuidanceNavigator2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceNavigatorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceNavigatorStatics>
    {
        IGuidanceNavigatorStatics(std::nullptr_t = nullptr) noexcept {}
        IGuidanceNavigatorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceNavigatorStatics(IGuidanceNavigatorStatics const&) noexcept = default;
        IGuidanceNavigatorStatics(IGuidanceNavigatorStatics&&) noexcept = default;
        IGuidanceNavigatorStatics& operator=(IGuidanceNavigatorStatics const&) & noexcept = default;
        IGuidanceNavigatorStatics& operator=(IGuidanceNavigatorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceNavigatorStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceNavigatorStatics2>
    {
        IGuidanceNavigatorStatics2(std::nullptr_t = nullptr) noexcept {}
        IGuidanceNavigatorStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceNavigatorStatics2(IGuidanceNavigatorStatics2 const&) noexcept = default;
        IGuidanceNavigatorStatics2(IGuidanceNavigatorStatics2&&) noexcept = default;
        IGuidanceNavigatorStatics2& operator=(IGuidanceNavigatorStatics2 const&) & noexcept = default;
        IGuidanceNavigatorStatics2& operator=(IGuidanceNavigatorStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceReroutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceReroutedEventArgs>
    {
        IGuidanceReroutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IGuidanceReroutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceReroutedEventArgs(IGuidanceReroutedEventArgs const&) noexcept = default;
        IGuidanceReroutedEventArgs(IGuidanceReroutedEventArgs&&) noexcept = default;
        IGuidanceReroutedEventArgs& operator=(IGuidanceReroutedEventArgs const&) & noexcept = default;
        IGuidanceReroutedEventArgs& operator=(IGuidanceReroutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceRoadSegment :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceRoadSegment>
    {
        IGuidanceRoadSegment(std::nullptr_t = nullptr) noexcept {}
        IGuidanceRoadSegment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceRoadSegment(IGuidanceRoadSegment const&) noexcept = default;
        IGuidanceRoadSegment(IGuidanceRoadSegment&&) noexcept = default;
        IGuidanceRoadSegment& operator=(IGuidanceRoadSegment const&) & noexcept = default;
        IGuidanceRoadSegment& operator=(IGuidanceRoadSegment&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceRoadSegment2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceRoadSegment2>
    {
        IGuidanceRoadSegment2(std::nullptr_t = nullptr) noexcept {}
        IGuidanceRoadSegment2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceRoadSegment2(IGuidanceRoadSegment2 const&) noexcept = default;
        IGuidanceRoadSegment2(IGuidanceRoadSegment2&&) noexcept = default;
        IGuidanceRoadSegment2& operator=(IGuidanceRoadSegment2 const&) & noexcept = default;
        IGuidanceRoadSegment2& operator=(IGuidanceRoadSegment2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceRoadSignpost :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceRoadSignpost>
    {
        IGuidanceRoadSignpost(std::nullptr_t = nullptr) noexcept {}
        IGuidanceRoadSignpost(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceRoadSignpost(IGuidanceRoadSignpost const&) noexcept = default;
        IGuidanceRoadSignpost(IGuidanceRoadSignpost&&) noexcept = default;
        IGuidanceRoadSignpost& operator=(IGuidanceRoadSignpost const&) & noexcept = default;
        IGuidanceRoadSignpost& operator=(IGuidanceRoadSignpost&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceRoute :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceRoute>
    {
        IGuidanceRoute(std::nullptr_t = nullptr) noexcept {}
        IGuidanceRoute(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceRoute(IGuidanceRoute const&) noexcept = default;
        IGuidanceRoute(IGuidanceRoute&&) noexcept = default;
        IGuidanceRoute& operator=(IGuidanceRoute const&) & noexcept = default;
        IGuidanceRoute& operator=(IGuidanceRoute&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceRouteStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceRouteStatics>
    {
        IGuidanceRouteStatics(std::nullptr_t = nullptr) noexcept {}
        IGuidanceRouteStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceRouteStatics(IGuidanceRouteStatics const&) noexcept = default;
        IGuidanceRouteStatics(IGuidanceRouteStatics&&) noexcept = default;
        IGuidanceRouteStatics& operator=(IGuidanceRouteStatics const&) & noexcept = default;
        IGuidanceRouteStatics& operator=(IGuidanceRouteStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceTelemetryCollector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceTelemetryCollector>
    {
        IGuidanceTelemetryCollector(std::nullptr_t = nullptr) noexcept {}
        IGuidanceTelemetryCollector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceTelemetryCollector(IGuidanceTelemetryCollector const&) noexcept = default;
        IGuidanceTelemetryCollector(IGuidanceTelemetryCollector&&) noexcept = default;
        IGuidanceTelemetryCollector& operator=(IGuidanceTelemetryCollector const&) & noexcept = default;
        IGuidanceTelemetryCollector& operator=(IGuidanceTelemetryCollector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceTelemetryCollectorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceTelemetryCollectorStatics>
    {
        IGuidanceTelemetryCollectorStatics(std::nullptr_t = nullptr) noexcept {}
        IGuidanceTelemetryCollectorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceTelemetryCollectorStatics(IGuidanceTelemetryCollectorStatics const&) noexcept = default;
        IGuidanceTelemetryCollectorStatics(IGuidanceTelemetryCollectorStatics&&) noexcept = default;
        IGuidanceTelemetryCollectorStatics& operator=(IGuidanceTelemetryCollectorStatics const&) & noexcept = default;
        IGuidanceTelemetryCollectorStatics& operator=(IGuidanceTelemetryCollectorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGuidanceUpdatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGuidanceUpdatedEventArgs>
    {
        IGuidanceUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IGuidanceUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGuidanceUpdatedEventArgs(IGuidanceUpdatedEventArgs const&) noexcept = default;
        IGuidanceUpdatedEventArgs(IGuidanceUpdatedEventArgs&&) noexcept = default;
        IGuidanceUpdatedEventArgs& operator=(IGuidanceUpdatedEventArgs const&) & noexcept = default;
        IGuidanceUpdatedEventArgs& operator=(IGuidanceUpdatedEventArgs&&) & noexcept = default;
    };
}
#endif
