// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Xaml_Input_1_H
#define WINRT_Windows_UI_Xaml_Input_1_H
#include "winrt/impl/Windows.UI.Xaml.Input.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Input
{
    struct __declspec(empty_bases) IAccessKeyDisplayDismissedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccessKeyDisplayDismissedEventArgs>
    {
        IAccessKeyDisplayDismissedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAccessKeyDisplayDismissedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccessKeyDisplayDismissedEventArgs(IAccessKeyDisplayDismissedEventArgs const&) noexcept = default;
        IAccessKeyDisplayDismissedEventArgs(IAccessKeyDisplayDismissedEventArgs&&) noexcept = default;
        IAccessKeyDisplayDismissedEventArgs& operator=(IAccessKeyDisplayDismissedEventArgs const&) & noexcept = default;
        IAccessKeyDisplayDismissedEventArgs& operator=(IAccessKeyDisplayDismissedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccessKeyDisplayRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccessKeyDisplayRequestedEventArgs>
    {
        IAccessKeyDisplayRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAccessKeyDisplayRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccessKeyDisplayRequestedEventArgs(IAccessKeyDisplayRequestedEventArgs const&) noexcept = default;
        IAccessKeyDisplayRequestedEventArgs(IAccessKeyDisplayRequestedEventArgs&&) noexcept = default;
        IAccessKeyDisplayRequestedEventArgs& operator=(IAccessKeyDisplayRequestedEventArgs const&) & noexcept = default;
        IAccessKeyDisplayRequestedEventArgs& operator=(IAccessKeyDisplayRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccessKeyInvokedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccessKeyInvokedEventArgs>
    {
        IAccessKeyInvokedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAccessKeyInvokedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccessKeyInvokedEventArgs(IAccessKeyInvokedEventArgs const&) noexcept = default;
        IAccessKeyInvokedEventArgs(IAccessKeyInvokedEventArgs&&) noexcept = default;
        IAccessKeyInvokedEventArgs& operator=(IAccessKeyInvokedEventArgs const&) & noexcept = default;
        IAccessKeyInvokedEventArgs& operator=(IAccessKeyInvokedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccessKeyManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccessKeyManager>
    {
        IAccessKeyManager(std::nullptr_t = nullptr) noexcept {}
        IAccessKeyManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccessKeyManager(IAccessKeyManager const&) noexcept = default;
        IAccessKeyManager(IAccessKeyManager&&) noexcept = default;
        IAccessKeyManager& operator=(IAccessKeyManager const&) & noexcept = default;
        IAccessKeyManager& operator=(IAccessKeyManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccessKeyManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccessKeyManagerStatics>
    {
        IAccessKeyManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IAccessKeyManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccessKeyManagerStatics(IAccessKeyManagerStatics const&) noexcept = default;
        IAccessKeyManagerStatics(IAccessKeyManagerStatics&&) noexcept = default;
        IAccessKeyManagerStatics& operator=(IAccessKeyManagerStatics const&) & noexcept = default;
        IAccessKeyManagerStatics& operator=(IAccessKeyManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccessKeyManagerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAccessKeyManagerStatics2>
    {
        IAccessKeyManagerStatics2(std::nullptr_t = nullptr) noexcept {}
        IAccessKeyManagerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccessKeyManagerStatics2(IAccessKeyManagerStatics2 const&) noexcept = default;
        IAccessKeyManagerStatics2(IAccessKeyManagerStatics2&&) noexcept = default;
        IAccessKeyManagerStatics2& operator=(IAccessKeyManagerStatics2 const&) & noexcept = default;
        IAccessKeyManagerStatics2& operator=(IAccessKeyManagerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICanExecuteRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanExecuteRequestedEventArgs>
    {
        ICanExecuteRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICanExecuteRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICanExecuteRequestedEventArgs(ICanExecuteRequestedEventArgs const&) noexcept = default;
        ICanExecuteRequestedEventArgs(ICanExecuteRequestedEventArgs&&) noexcept = default;
        ICanExecuteRequestedEventArgs& operator=(ICanExecuteRequestedEventArgs const&) & noexcept = default;
        ICanExecuteRequestedEventArgs& operator=(ICanExecuteRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICharacterReceivedRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICharacterReceivedRoutedEventArgs>
    {
        ICharacterReceivedRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICharacterReceivedRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICharacterReceivedRoutedEventArgs(ICharacterReceivedRoutedEventArgs const&) noexcept = default;
        ICharacterReceivedRoutedEventArgs(ICharacterReceivedRoutedEventArgs&&) noexcept = default;
        ICharacterReceivedRoutedEventArgs& operator=(ICharacterReceivedRoutedEventArgs const&) & noexcept = default;
        ICharacterReceivedRoutedEventArgs& operator=(ICharacterReceivedRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommand :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommand>
    {
        ICommand(std::nullptr_t = nullptr) noexcept {}
        ICommand(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommand(ICommand const&) noexcept = default;
        ICommand(ICommand&&) noexcept = default;
        ICommand& operator=(ICommand const&) & noexcept = default;
        ICommand& operator=(ICommand&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContextRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContextRequestedEventArgs>
    {
        IContextRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContextRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContextRequestedEventArgs(IContextRequestedEventArgs const&) noexcept = default;
        IContextRequestedEventArgs(IContextRequestedEventArgs&&) noexcept = default;
        IContextRequestedEventArgs& operator=(IContextRequestedEventArgs const&) & noexcept = default;
        IContextRequestedEventArgs& operator=(IContextRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDoubleTappedRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDoubleTappedRoutedEventArgs>
    {
        IDoubleTappedRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDoubleTappedRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDoubleTappedRoutedEventArgs(IDoubleTappedRoutedEventArgs const&) noexcept = default;
        IDoubleTappedRoutedEventArgs(IDoubleTappedRoutedEventArgs&&) noexcept = default;
        IDoubleTappedRoutedEventArgs& operator=(IDoubleTappedRoutedEventArgs const&) & noexcept = default;
        IDoubleTappedRoutedEventArgs& operator=(IDoubleTappedRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IExecuteRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExecuteRequestedEventArgs>
    {
        IExecuteRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExecuteRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IExecuteRequestedEventArgs(IExecuteRequestedEventArgs const&) noexcept = default;
        IExecuteRequestedEventArgs(IExecuteRequestedEventArgs&&) noexcept = default;
        IExecuteRequestedEventArgs& operator=(IExecuteRequestedEventArgs const&) & noexcept = default;
        IExecuteRequestedEventArgs& operator=(IExecuteRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFindNextElementOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFindNextElementOptions>
    {
        IFindNextElementOptions(std::nullptr_t = nullptr) noexcept {}
        IFindNextElementOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFindNextElementOptions(IFindNextElementOptions const&) noexcept = default;
        IFindNextElementOptions(IFindNextElementOptions&&) noexcept = default;
        IFindNextElementOptions& operator=(IFindNextElementOptions const&) & noexcept = default;
        IFindNextElementOptions& operator=(IFindNextElementOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusManager>
    {
        IFocusManager(std::nullptr_t = nullptr) noexcept {}
        IFocusManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusManager(IFocusManager const&) noexcept = default;
        IFocusManager(IFocusManager&&) noexcept = default;
        IFocusManager& operator=(IFocusManager const&) & noexcept = default;
        IFocusManager& operator=(IFocusManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusManagerGotFocusEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusManagerGotFocusEventArgs>
    {
        IFocusManagerGotFocusEventArgs(std::nullptr_t = nullptr) noexcept {}
        IFocusManagerGotFocusEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusManagerGotFocusEventArgs(IFocusManagerGotFocusEventArgs const&) noexcept = default;
        IFocusManagerGotFocusEventArgs(IFocusManagerGotFocusEventArgs&&) noexcept = default;
        IFocusManagerGotFocusEventArgs& operator=(IFocusManagerGotFocusEventArgs const&) & noexcept = default;
        IFocusManagerGotFocusEventArgs& operator=(IFocusManagerGotFocusEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusManagerLostFocusEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusManagerLostFocusEventArgs>
    {
        IFocusManagerLostFocusEventArgs(std::nullptr_t = nullptr) noexcept {}
        IFocusManagerLostFocusEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusManagerLostFocusEventArgs(IFocusManagerLostFocusEventArgs const&) noexcept = default;
        IFocusManagerLostFocusEventArgs(IFocusManagerLostFocusEventArgs&&) noexcept = default;
        IFocusManagerLostFocusEventArgs& operator=(IFocusManagerLostFocusEventArgs const&) & noexcept = default;
        IFocusManagerLostFocusEventArgs& operator=(IFocusManagerLostFocusEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusManagerStatics>
    {
        IFocusManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IFocusManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusManagerStatics(IFocusManagerStatics const&) noexcept = default;
        IFocusManagerStatics(IFocusManagerStatics&&) noexcept = default;
        IFocusManagerStatics& operator=(IFocusManagerStatics const&) & noexcept = default;
        IFocusManagerStatics& operator=(IFocusManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusManagerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusManagerStatics2>
    {
        IFocusManagerStatics2(std::nullptr_t = nullptr) noexcept {}
        IFocusManagerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusManagerStatics2(IFocusManagerStatics2 const&) noexcept = default;
        IFocusManagerStatics2(IFocusManagerStatics2&&) noexcept = default;
        IFocusManagerStatics2& operator=(IFocusManagerStatics2 const&) & noexcept = default;
        IFocusManagerStatics2& operator=(IFocusManagerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusManagerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusManagerStatics3>
    {
        IFocusManagerStatics3(std::nullptr_t = nullptr) noexcept {}
        IFocusManagerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusManagerStatics3(IFocusManagerStatics3 const&) noexcept = default;
        IFocusManagerStatics3(IFocusManagerStatics3&&) noexcept = default;
        IFocusManagerStatics3& operator=(IFocusManagerStatics3 const&) & noexcept = default;
        IFocusManagerStatics3& operator=(IFocusManagerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusManagerStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusManagerStatics4>
    {
        IFocusManagerStatics4(std::nullptr_t = nullptr) noexcept {}
        IFocusManagerStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusManagerStatics4(IFocusManagerStatics4 const&) noexcept = default;
        IFocusManagerStatics4(IFocusManagerStatics4&&) noexcept = default;
        IFocusManagerStatics4& operator=(IFocusManagerStatics4 const&) & noexcept = default;
        IFocusManagerStatics4& operator=(IFocusManagerStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusManagerStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusManagerStatics5>
    {
        IFocusManagerStatics5(std::nullptr_t = nullptr) noexcept {}
        IFocusManagerStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusManagerStatics5(IFocusManagerStatics5 const&) noexcept = default;
        IFocusManagerStatics5(IFocusManagerStatics5&&) noexcept = default;
        IFocusManagerStatics5& operator=(IFocusManagerStatics5 const&) & noexcept = default;
        IFocusManagerStatics5& operator=(IFocusManagerStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusManagerStatics6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusManagerStatics6>
    {
        IFocusManagerStatics6(std::nullptr_t = nullptr) noexcept {}
        IFocusManagerStatics6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusManagerStatics6(IFocusManagerStatics6 const&) noexcept = default;
        IFocusManagerStatics6(IFocusManagerStatics6&&) noexcept = default;
        IFocusManagerStatics6& operator=(IFocusManagerStatics6 const&) & noexcept = default;
        IFocusManagerStatics6& operator=(IFocusManagerStatics6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusManagerStatics7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusManagerStatics7>
    {
        IFocusManagerStatics7(std::nullptr_t = nullptr) noexcept {}
        IFocusManagerStatics7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusManagerStatics7(IFocusManagerStatics7 const&) noexcept = default;
        IFocusManagerStatics7(IFocusManagerStatics7&&) noexcept = default;
        IFocusManagerStatics7& operator=(IFocusManagerStatics7 const&) & noexcept = default;
        IFocusManagerStatics7& operator=(IFocusManagerStatics7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusMovementResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusMovementResult>
    {
        IFocusMovementResult(std::nullptr_t = nullptr) noexcept {}
        IFocusMovementResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusMovementResult(IFocusMovementResult const&) noexcept = default;
        IFocusMovementResult(IFocusMovementResult&&) noexcept = default;
        IFocusMovementResult& operator=(IFocusMovementResult const&) & noexcept = default;
        IFocusMovementResult& operator=(IFocusMovementResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGettingFocusEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGettingFocusEventArgs>
    {
        IGettingFocusEventArgs(std::nullptr_t = nullptr) noexcept {}
        IGettingFocusEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGettingFocusEventArgs(IGettingFocusEventArgs const&) noexcept = default;
        IGettingFocusEventArgs(IGettingFocusEventArgs&&) noexcept = default;
        IGettingFocusEventArgs& operator=(IGettingFocusEventArgs const&) & noexcept = default;
        IGettingFocusEventArgs& operator=(IGettingFocusEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGettingFocusEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGettingFocusEventArgs2>
    {
        IGettingFocusEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IGettingFocusEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGettingFocusEventArgs2(IGettingFocusEventArgs2 const&) noexcept = default;
        IGettingFocusEventArgs2(IGettingFocusEventArgs2&&) noexcept = default;
        IGettingFocusEventArgs2& operator=(IGettingFocusEventArgs2 const&) & noexcept = default;
        IGettingFocusEventArgs2& operator=(IGettingFocusEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGettingFocusEventArgs3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGettingFocusEventArgs3>
    {
        IGettingFocusEventArgs3(std::nullptr_t = nullptr) noexcept {}
        IGettingFocusEventArgs3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGettingFocusEventArgs3(IGettingFocusEventArgs3 const&) noexcept = default;
        IGettingFocusEventArgs3(IGettingFocusEventArgs3&&) noexcept = default;
        IGettingFocusEventArgs3& operator=(IGettingFocusEventArgs3 const&) & noexcept = default;
        IGettingFocusEventArgs3& operator=(IGettingFocusEventArgs3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHoldingRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHoldingRoutedEventArgs>
    {
        IHoldingRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHoldingRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHoldingRoutedEventArgs(IHoldingRoutedEventArgs const&) noexcept = default;
        IHoldingRoutedEventArgs(IHoldingRoutedEventArgs&&) noexcept = default;
        IHoldingRoutedEventArgs& operator=(IHoldingRoutedEventArgs const&) & noexcept = default;
        IHoldingRoutedEventArgs& operator=(IHoldingRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInertiaExpansionBehavior :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInertiaExpansionBehavior>
    {
        IInertiaExpansionBehavior(std::nullptr_t = nullptr) noexcept {}
        IInertiaExpansionBehavior(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInertiaExpansionBehavior(IInertiaExpansionBehavior const&) noexcept = default;
        IInertiaExpansionBehavior(IInertiaExpansionBehavior&&) noexcept = default;
        IInertiaExpansionBehavior& operator=(IInertiaExpansionBehavior const&) & noexcept = default;
        IInertiaExpansionBehavior& operator=(IInertiaExpansionBehavior&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInertiaRotationBehavior :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInertiaRotationBehavior>
    {
        IInertiaRotationBehavior(std::nullptr_t = nullptr) noexcept {}
        IInertiaRotationBehavior(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInertiaRotationBehavior(IInertiaRotationBehavior const&) noexcept = default;
        IInertiaRotationBehavior(IInertiaRotationBehavior&&) noexcept = default;
        IInertiaRotationBehavior& operator=(IInertiaRotationBehavior const&) & noexcept = default;
        IInertiaRotationBehavior& operator=(IInertiaRotationBehavior&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInertiaTranslationBehavior :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInertiaTranslationBehavior>
    {
        IInertiaTranslationBehavior(std::nullptr_t = nullptr) noexcept {}
        IInertiaTranslationBehavior(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInertiaTranslationBehavior(IInertiaTranslationBehavior const&) noexcept = default;
        IInertiaTranslationBehavior(IInertiaTranslationBehavior&&) noexcept = default;
        IInertiaTranslationBehavior& operator=(IInertiaTranslationBehavior const&) & noexcept = default;
        IInertiaTranslationBehavior& operator=(IInertiaTranslationBehavior&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInputScope :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputScope>
    {
        IInputScope(std::nullptr_t = nullptr) noexcept {}
        IInputScope(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInputScope(IInputScope const&) noexcept = default;
        IInputScope(IInputScope&&) noexcept = default;
        IInputScope& operator=(IInputScope const&) & noexcept = default;
        IInputScope& operator=(IInputScope&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInputScopeName :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputScopeName>
    {
        IInputScopeName(std::nullptr_t = nullptr) noexcept {}
        IInputScopeName(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInputScopeName(IInputScopeName const&) noexcept = default;
        IInputScopeName(IInputScopeName&&) noexcept = default;
        IInputScopeName& operator=(IInputScopeName const&) & noexcept = default;
        IInputScopeName& operator=(IInputScopeName&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInputScopeNameFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputScopeNameFactory>
    {
        IInputScopeNameFactory(std::nullptr_t = nullptr) noexcept {}
        IInputScopeNameFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInputScopeNameFactory(IInputScopeNameFactory const&) noexcept = default;
        IInputScopeNameFactory(IInputScopeNameFactory&&) noexcept = default;
        IInputScopeNameFactory& operator=(IInputScopeNameFactory const&) & noexcept = default;
        IInputScopeNameFactory& operator=(IInputScopeNameFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyRoutedEventArgs>
    {
        IKeyRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IKeyRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyRoutedEventArgs(IKeyRoutedEventArgs const&) noexcept = default;
        IKeyRoutedEventArgs(IKeyRoutedEventArgs&&) noexcept = default;
        IKeyRoutedEventArgs& operator=(IKeyRoutedEventArgs const&) & noexcept = default;
        IKeyRoutedEventArgs& operator=(IKeyRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyRoutedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyRoutedEventArgs2>
    {
        IKeyRoutedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IKeyRoutedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyRoutedEventArgs2(IKeyRoutedEventArgs2 const&) noexcept = default;
        IKeyRoutedEventArgs2(IKeyRoutedEventArgs2&&) noexcept = default;
        IKeyRoutedEventArgs2& operator=(IKeyRoutedEventArgs2 const&) & noexcept = default;
        IKeyRoutedEventArgs2& operator=(IKeyRoutedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyRoutedEventArgs3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyRoutedEventArgs3>
    {
        IKeyRoutedEventArgs3(std::nullptr_t = nullptr) noexcept {}
        IKeyRoutedEventArgs3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyRoutedEventArgs3(IKeyRoutedEventArgs3 const&) noexcept = default;
        IKeyRoutedEventArgs3(IKeyRoutedEventArgs3&&) noexcept = default;
        IKeyRoutedEventArgs3& operator=(IKeyRoutedEventArgs3 const&) & noexcept = default;
        IKeyRoutedEventArgs3& operator=(IKeyRoutedEventArgs3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyboardAccelerator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyboardAccelerator>
    {
        IKeyboardAccelerator(std::nullptr_t = nullptr) noexcept {}
        IKeyboardAccelerator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyboardAccelerator(IKeyboardAccelerator const&) noexcept = default;
        IKeyboardAccelerator(IKeyboardAccelerator&&) noexcept = default;
        IKeyboardAccelerator& operator=(IKeyboardAccelerator const&) & noexcept = default;
        IKeyboardAccelerator& operator=(IKeyboardAccelerator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyboardAcceleratorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyboardAcceleratorFactory>
    {
        IKeyboardAcceleratorFactory(std::nullptr_t = nullptr) noexcept {}
        IKeyboardAcceleratorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyboardAcceleratorFactory(IKeyboardAcceleratorFactory const&) noexcept = default;
        IKeyboardAcceleratorFactory(IKeyboardAcceleratorFactory&&) noexcept = default;
        IKeyboardAcceleratorFactory& operator=(IKeyboardAcceleratorFactory const&) & noexcept = default;
        IKeyboardAcceleratorFactory& operator=(IKeyboardAcceleratorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyboardAcceleratorInvokedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyboardAcceleratorInvokedEventArgs>
    {
        IKeyboardAcceleratorInvokedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IKeyboardAcceleratorInvokedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyboardAcceleratorInvokedEventArgs(IKeyboardAcceleratorInvokedEventArgs const&) noexcept = default;
        IKeyboardAcceleratorInvokedEventArgs(IKeyboardAcceleratorInvokedEventArgs&&) noexcept = default;
        IKeyboardAcceleratorInvokedEventArgs& operator=(IKeyboardAcceleratorInvokedEventArgs const&) & noexcept = default;
        IKeyboardAcceleratorInvokedEventArgs& operator=(IKeyboardAcceleratorInvokedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyboardAcceleratorInvokedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyboardAcceleratorInvokedEventArgs2>
    {
        IKeyboardAcceleratorInvokedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IKeyboardAcceleratorInvokedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyboardAcceleratorInvokedEventArgs2(IKeyboardAcceleratorInvokedEventArgs2 const&) noexcept = default;
        IKeyboardAcceleratorInvokedEventArgs2(IKeyboardAcceleratorInvokedEventArgs2&&) noexcept = default;
        IKeyboardAcceleratorInvokedEventArgs2& operator=(IKeyboardAcceleratorInvokedEventArgs2 const&) & noexcept = default;
        IKeyboardAcceleratorInvokedEventArgs2& operator=(IKeyboardAcceleratorInvokedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyboardAcceleratorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyboardAcceleratorStatics>
    {
        IKeyboardAcceleratorStatics(std::nullptr_t = nullptr) noexcept {}
        IKeyboardAcceleratorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyboardAcceleratorStatics(IKeyboardAcceleratorStatics const&) noexcept = default;
        IKeyboardAcceleratorStatics(IKeyboardAcceleratorStatics&&) noexcept = default;
        IKeyboardAcceleratorStatics& operator=(IKeyboardAcceleratorStatics const&) & noexcept = default;
        IKeyboardAcceleratorStatics& operator=(IKeyboardAcceleratorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILosingFocusEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILosingFocusEventArgs>
    {
        ILosingFocusEventArgs(std::nullptr_t = nullptr) noexcept {}
        ILosingFocusEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILosingFocusEventArgs(ILosingFocusEventArgs const&) noexcept = default;
        ILosingFocusEventArgs(ILosingFocusEventArgs&&) noexcept = default;
        ILosingFocusEventArgs& operator=(ILosingFocusEventArgs const&) & noexcept = default;
        ILosingFocusEventArgs& operator=(ILosingFocusEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILosingFocusEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILosingFocusEventArgs2>
    {
        ILosingFocusEventArgs2(std::nullptr_t = nullptr) noexcept {}
        ILosingFocusEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILosingFocusEventArgs2(ILosingFocusEventArgs2 const&) noexcept = default;
        ILosingFocusEventArgs2(ILosingFocusEventArgs2&&) noexcept = default;
        ILosingFocusEventArgs2& operator=(ILosingFocusEventArgs2 const&) & noexcept = default;
        ILosingFocusEventArgs2& operator=(ILosingFocusEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILosingFocusEventArgs3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILosingFocusEventArgs3>
    {
        ILosingFocusEventArgs3(std::nullptr_t = nullptr) noexcept {}
        ILosingFocusEventArgs3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILosingFocusEventArgs3(ILosingFocusEventArgs3 const&) noexcept = default;
        ILosingFocusEventArgs3(ILosingFocusEventArgs3&&) noexcept = default;
        ILosingFocusEventArgs3& operator=(ILosingFocusEventArgs3 const&) & noexcept = default;
        ILosingFocusEventArgs3& operator=(ILosingFocusEventArgs3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationCompletedRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationCompletedRoutedEventArgs>
    {
        IManipulationCompletedRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationCompletedRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationCompletedRoutedEventArgs(IManipulationCompletedRoutedEventArgs const&) noexcept = default;
        IManipulationCompletedRoutedEventArgs(IManipulationCompletedRoutedEventArgs&&) noexcept = default;
        IManipulationCompletedRoutedEventArgs& operator=(IManipulationCompletedRoutedEventArgs const&) & noexcept = default;
        IManipulationCompletedRoutedEventArgs& operator=(IManipulationCompletedRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationDeltaRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationDeltaRoutedEventArgs>
    {
        IManipulationDeltaRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationDeltaRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationDeltaRoutedEventArgs(IManipulationDeltaRoutedEventArgs const&) noexcept = default;
        IManipulationDeltaRoutedEventArgs(IManipulationDeltaRoutedEventArgs&&) noexcept = default;
        IManipulationDeltaRoutedEventArgs& operator=(IManipulationDeltaRoutedEventArgs const&) & noexcept = default;
        IManipulationDeltaRoutedEventArgs& operator=(IManipulationDeltaRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationInertiaStartingRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationInertiaStartingRoutedEventArgs>
    {
        IManipulationInertiaStartingRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationInertiaStartingRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationInertiaStartingRoutedEventArgs(IManipulationInertiaStartingRoutedEventArgs const&) noexcept = default;
        IManipulationInertiaStartingRoutedEventArgs(IManipulationInertiaStartingRoutedEventArgs&&) noexcept = default;
        IManipulationInertiaStartingRoutedEventArgs& operator=(IManipulationInertiaStartingRoutedEventArgs const&) & noexcept = default;
        IManipulationInertiaStartingRoutedEventArgs& operator=(IManipulationInertiaStartingRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationPivot :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationPivot>
    {
        IManipulationPivot(std::nullptr_t = nullptr) noexcept {}
        IManipulationPivot(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationPivot(IManipulationPivot const&) noexcept = default;
        IManipulationPivot(IManipulationPivot&&) noexcept = default;
        IManipulationPivot& operator=(IManipulationPivot const&) & noexcept = default;
        IManipulationPivot& operator=(IManipulationPivot&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationPivotFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationPivotFactory>
    {
        IManipulationPivotFactory(std::nullptr_t = nullptr) noexcept {}
        IManipulationPivotFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationPivotFactory(IManipulationPivotFactory const&) noexcept = default;
        IManipulationPivotFactory(IManipulationPivotFactory&&) noexcept = default;
        IManipulationPivotFactory& operator=(IManipulationPivotFactory const&) & noexcept = default;
        IManipulationPivotFactory& operator=(IManipulationPivotFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationStartedRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationStartedRoutedEventArgs>
    {
        IManipulationStartedRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationStartedRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationStartedRoutedEventArgs(IManipulationStartedRoutedEventArgs const&) noexcept = default;
        IManipulationStartedRoutedEventArgs(IManipulationStartedRoutedEventArgs&&) noexcept = default;
        IManipulationStartedRoutedEventArgs& operator=(IManipulationStartedRoutedEventArgs const&) & noexcept = default;
        IManipulationStartedRoutedEventArgs& operator=(IManipulationStartedRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationStartedRoutedEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationStartedRoutedEventArgsFactory>
    {
        IManipulationStartedRoutedEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        IManipulationStartedRoutedEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationStartedRoutedEventArgsFactory(IManipulationStartedRoutedEventArgsFactory const&) noexcept = default;
        IManipulationStartedRoutedEventArgsFactory(IManipulationStartedRoutedEventArgsFactory&&) noexcept = default;
        IManipulationStartedRoutedEventArgsFactory& operator=(IManipulationStartedRoutedEventArgsFactory const&) & noexcept = default;
        IManipulationStartedRoutedEventArgsFactory& operator=(IManipulationStartedRoutedEventArgsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IManipulationStartingRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationStartingRoutedEventArgs>
    {
        IManipulationStartingRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationStartingRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IManipulationStartingRoutedEventArgs(IManipulationStartingRoutedEventArgs const&) noexcept = default;
        IManipulationStartingRoutedEventArgs(IManipulationStartingRoutedEventArgs&&) noexcept = default;
        IManipulationStartingRoutedEventArgs& operator=(IManipulationStartingRoutedEventArgs const&) & noexcept = default;
        IManipulationStartingRoutedEventArgs& operator=(IManipulationStartingRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INoFocusCandidateFoundEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INoFocusCandidateFoundEventArgs>
    {
        INoFocusCandidateFoundEventArgs(std::nullptr_t = nullptr) noexcept {}
        INoFocusCandidateFoundEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INoFocusCandidateFoundEventArgs(INoFocusCandidateFoundEventArgs const&) noexcept = default;
        INoFocusCandidateFoundEventArgs(INoFocusCandidateFoundEventArgs&&) noexcept = default;
        INoFocusCandidateFoundEventArgs& operator=(INoFocusCandidateFoundEventArgs const&) & noexcept = default;
        INoFocusCandidateFoundEventArgs& operator=(INoFocusCandidateFoundEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointer>
    {
        IPointer(std::nullptr_t = nullptr) noexcept {}
        IPointer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointer(IPointer const&) noexcept = default;
        IPointer(IPointer&&) noexcept = default;
        IPointer& operator=(IPointer const&) & noexcept = default;
        IPointer& operator=(IPointer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerRoutedEventArgs>
    {
        IPointerRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPointerRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerRoutedEventArgs(IPointerRoutedEventArgs const&) noexcept = default;
        IPointerRoutedEventArgs(IPointerRoutedEventArgs&&) noexcept = default;
        IPointerRoutedEventArgs& operator=(IPointerRoutedEventArgs const&) & noexcept = default;
        IPointerRoutedEventArgs& operator=(IPointerRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerRoutedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerRoutedEventArgs2>
    {
        IPointerRoutedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IPointerRoutedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerRoutedEventArgs2(IPointerRoutedEventArgs2 const&) noexcept = default;
        IPointerRoutedEventArgs2(IPointerRoutedEventArgs2&&) noexcept = default;
        IPointerRoutedEventArgs2& operator=(IPointerRoutedEventArgs2 const&) & noexcept = default;
        IPointerRoutedEventArgs2& operator=(IPointerRoutedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessKeyboardAcceleratorEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessKeyboardAcceleratorEventArgs>
    {
        IProcessKeyboardAcceleratorEventArgs(std::nullptr_t = nullptr) noexcept {}
        IProcessKeyboardAcceleratorEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessKeyboardAcceleratorEventArgs(IProcessKeyboardAcceleratorEventArgs const&) noexcept = default;
        IProcessKeyboardAcceleratorEventArgs(IProcessKeyboardAcceleratorEventArgs&&) noexcept = default;
        IProcessKeyboardAcceleratorEventArgs& operator=(IProcessKeyboardAcceleratorEventArgs const&) & noexcept = default;
        IProcessKeyboardAcceleratorEventArgs& operator=(IProcessKeyboardAcceleratorEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRightTappedRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRightTappedRoutedEventArgs>
    {
        IRightTappedRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRightTappedRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRightTappedRoutedEventArgs(IRightTappedRoutedEventArgs const&) noexcept = default;
        IRightTappedRoutedEventArgs(IRightTappedRoutedEventArgs&&) noexcept = default;
        IRightTappedRoutedEventArgs& operator=(IRightTappedRoutedEventArgs const&) & noexcept = default;
        IRightTappedRoutedEventArgs& operator=(IRightTappedRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStandardUICommand :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStandardUICommand>
    {
        IStandardUICommand(std::nullptr_t = nullptr) noexcept {}
        IStandardUICommand(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStandardUICommand(IStandardUICommand const&) noexcept = default;
        IStandardUICommand(IStandardUICommand&&) noexcept = default;
        IStandardUICommand& operator=(IStandardUICommand const&) & noexcept = default;
        IStandardUICommand& operator=(IStandardUICommand&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStandardUICommand2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStandardUICommand2>
    {
        IStandardUICommand2(std::nullptr_t = nullptr) noexcept {}
        IStandardUICommand2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStandardUICommand2(IStandardUICommand2 const&) noexcept = default;
        IStandardUICommand2(IStandardUICommand2&&) noexcept = default;
        IStandardUICommand2& operator=(IStandardUICommand2 const&) & noexcept = default;
        IStandardUICommand2& operator=(IStandardUICommand2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStandardUICommandFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStandardUICommandFactory>
    {
        IStandardUICommandFactory(std::nullptr_t = nullptr) noexcept {}
        IStandardUICommandFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStandardUICommandFactory(IStandardUICommandFactory const&) noexcept = default;
        IStandardUICommandFactory(IStandardUICommandFactory&&) noexcept = default;
        IStandardUICommandFactory& operator=(IStandardUICommandFactory const&) & noexcept = default;
        IStandardUICommandFactory& operator=(IStandardUICommandFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStandardUICommandStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStandardUICommandStatics>
    {
        IStandardUICommandStatics(std::nullptr_t = nullptr) noexcept {}
        IStandardUICommandStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStandardUICommandStatics(IStandardUICommandStatics const&) noexcept = default;
        IStandardUICommandStatics(IStandardUICommandStatics&&) noexcept = default;
        IStandardUICommandStatics& operator=(IStandardUICommandStatics const&) & noexcept = default;
        IStandardUICommandStatics& operator=(IStandardUICommandStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITappedRoutedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITappedRoutedEventArgs>
    {
        ITappedRoutedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITappedRoutedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITappedRoutedEventArgs(ITappedRoutedEventArgs const&) noexcept = default;
        ITappedRoutedEventArgs(ITappedRoutedEventArgs&&) noexcept = default;
        ITappedRoutedEventArgs& operator=(ITappedRoutedEventArgs const&) & noexcept = default;
        ITappedRoutedEventArgs& operator=(ITappedRoutedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlUICommand :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlUICommand>
    {
        IXamlUICommand(std::nullptr_t = nullptr) noexcept {}
        IXamlUICommand(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlUICommand(IXamlUICommand const&) noexcept = default;
        IXamlUICommand(IXamlUICommand&&) noexcept = default;
        IXamlUICommand& operator=(IXamlUICommand const&) & noexcept = default;
        IXamlUICommand& operator=(IXamlUICommand&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlUICommandFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlUICommandFactory>
    {
        IXamlUICommandFactory(std::nullptr_t = nullptr) noexcept {}
        IXamlUICommandFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlUICommandFactory(IXamlUICommandFactory const&) noexcept = default;
        IXamlUICommandFactory(IXamlUICommandFactory&&) noexcept = default;
        IXamlUICommandFactory& operator=(IXamlUICommandFactory const&) & noexcept = default;
        IXamlUICommandFactory& operator=(IXamlUICommandFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IXamlUICommandStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlUICommandStatics>
    {
        IXamlUICommandStatics(std::nullptr_t = nullptr) noexcept {}
        IXamlUICommandStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IXamlUICommandStatics(IXamlUICommandStatics const&) noexcept = default;
        IXamlUICommandStatics(IXamlUICommandStatics&&) noexcept = default;
        IXamlUICommandStatics& operator=(IXamlUICommandStatics const&) & noexcept = default;
        IXamlUICommandStatics& operator=(IXamlUICommandStatics&&) & noexcept = default;
    };
}
#endif
