// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Core_1_H
#define WINRT_Windows_UI_Core_1_H
#include "winrt/impl/Windows.UI.Core.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Core
{
    struct __declspec(empty_bases) IAcceleratorKeyEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAcceleratorKeyEventArgs>,
        impl::require<winrt::Windows::UI::Core::IAcceleratorKeyEventArgs, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        IAcceleratorKeyEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAcceleratorKeyEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAcceleratorKeyEventArgs(IAcceleratorKeyEventArgs const&) noexcept = default;
        IAcceleratorKeyEventArgs(IAcceleratorKeyEventArgs&&) noexcept = default;
        IAcceleratorKeyEventArgs& operator=(IAcceleratorKeyEventArgs const&) & noexcept = default;
        IAcceleratorKeyEventArgs& operator=(IAcceleratorKeyEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAcceleratorKeyEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAcceleratorKeyEventArgs2>,
        impl::require<winrt::Windows::UI::Core::IAcceleratorKeyEventArgs2, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        IAcceleratorKeyEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IAcceleratorKeyEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAcceleratorKeyEventArgs2(IAcceleratorKeyEventArgs2 const&) noexcept = default;
        IAcceleratorKeyEventArgs2(IAcceleratorKeyEventArgs2&&) noexcept = default;
        IAcceleratorKeyEventArgs2& operator=(IAcceleratorKeyEventArgs2 const&) & noexcept = default;
        IAcceleratorKeyEventArgs2& operator=(IAcceleratorKeyEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationProviderRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationProviderRequestedEventArgs>,
        impl::require<winrt::Windows::UI::Core::IAutomationProviderRequestedEventArgs, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        IAutomationProviderRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAutomationProviderRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationProviderRequestedEventArgs(IAutomationProviderRequestedEventArgs const&) noexcept = default;
        IAutomationProviderRequestedEventArgs(IAutomationProviderRequestedEventArgs&&) noexcept = default;
        IAutomationProviderRequestedEventArgs& operator=(IAutomationProviderRequestedEventArgs const&) & noexcept = default;
        IAutomationProviderRequestedEventArgs& operator=(IAutomationProviderRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBackRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBackRequestedEventArgs>
    {
        IBackRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IBackRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBackRequestedEventArgs(IBackRequestedEventArgs const&) noexcept = default;
        IBackRequestedEventArgs(IBackRequestedEventArgs&&) noexcept = default;
        IBackRequestedEventArgs& operator=(IBackRequestedEventArgs const&) & noexcept = default;
        IBackRequestedEventArgs& operator=(IBackRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICharacterReceivedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICharacterReceivedEventArgs>,
        impl::require<winrt::Windows::UI::Core::ICharacterReceivedEventArgs, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        ICharacterReceivedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICharacterReceivedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICharacterReceivedEventArgs(ICharacterReceivedEventArgs const&) noexcept = default;
        ICharacterReceivedEventArgs(ICharacterReceivedEventArgs&&) noexcept = default;
        ICharacterReceivedEventArgs& operator=(ICharacterReceivedEventArgs const&) & noexcept = default;
        ICharacterReceivedEventArgs& operator=(ICharacterReceivedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClosestInteractiveBoundsRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClosestInteractiveBoundsRequestedEventArgs>
    {
        IClosestInteractiveBoundsRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IClosestInteractiveBoundsRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClosestInteractiveBoundsRequestedEventArgs(IClosestInteractiveBoundsRequestedEventArgs const&) noexcept = default;
        IClosestInteractiveBoundsRequestedEventArgs(IClosestInteractiveBoundsRequestedEventArgs&&) noexcept = default;
        IClosestInteractiveBoundsRequestedEventArgs& operator=(IClosestInteractiveBoundsRequestedEventArgs const&) & noexcept = default;
        IClosestInteractiveBoundsRequestedEventArgs& operator=(IClosestInteractiveBoundsRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreAcceleratorKeys :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreAcceleratorKeys>
    {
        ICoreAcceleratorKeys(std::nullptr_t = nullptr) noexcept {}
        ICoreAcceleratorKeys(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreAcceleratorKeys(ICoreAcceleratorKeys const&) noexcept = default;
        ICoreAcceleratorKeys(ICoreAcceleratorKeys&&) noexcept = default;
        ICoreAcceleratorKeys& operator=(ICoreAcceleratorKeys const&) & noexcept = default;
        ICoreAcceleratorKeys& operator=(ICoreAcceleratorKeys&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreClosestInteractiveBoundsRequested :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreClosestInteractiveBoundsRequested>
    {
        ICoreClosestInteractiveBoundsRequested(std::nullptr_t = nullptr) noexcept {}
        ICoreClosestInteractiveBoundsRequested(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreClosestInteractiveBoundsRequested(ICoreClosestInteractiveBoundsRequested const&) noexcept = default;
        ICoreClosestInteractiveBoundsRequested(ICoreClosestInteractiveBoundsRequested&&) noexcept = default;
        ICoreClosestInteractiveBoundsRequested& operator=(ICoreClosestInteractiveBoundsRequested const&) & noexcept = default;
        ICoreClosestInteractiveBoundsRequested& operator=(ICoreClosestInteractiveBoundsRequested&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreComponentFocusable :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreComponentFocusable>
    {
        ICoreComponentFocusable(std::nullptr_t = nullptr) noexcept {}
        ICoreComponentFocusable(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreComponentFocusable(ICoreComponentFocusable const&) noexcept = default;
        ICoreComponentFocusable(ICoreComponentFocusable&&) noexcept = default;
        ICoreComponentFocusable& operator=(ICoreComponentFocusable const&) & noexcept = default;
        ICoreComponentFocusable& operator=(ICoreComponentFocusable&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreCursor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreCursor>
    {
        ICoreCursor(std::nullptr_t = nullptr) noexcept {}
        ICoreCursor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreCursor(ICoreCursor const&) noexcept = default;
        ICoreCursor(ICoreCursor&&) noexcept = default;
        ICoreCursor& operator=(ICoreCursor const&) & noexcept = default;
        ICoreCursor& operator=(ICoreCursor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreCursorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreCursorFactory>
    {
        ICoreCursorFactory(std::nullptr_t = nullptr) noexcept {}
        ICoreCursorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreCursorFactory(ICoreCursorFactory const&) noexcept = default;
        ICoreCursorFactory(ICoreCursorFactory&&) noexcept = default;
        ICoreCursorFactory& operator=(ICoreCursorFactory const&) & noexcept = default;
        ICoreCursorFactory& operator=(ICoreCursorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreDispatcher :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreDispatcher>,
        impl::require<winrt::Windows::UI::Core::ICoreDispatcher, winrt::Windows::UI::Core::ICoreAcceleratorKeys>
    {
        ICoreDispatcher(std::nullptr_t = nullptr) noexcept {}
        ICoreDispatcher(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreDispatcher(ICoreDispatcher const&) noexcept = default;
        ICoreDispatcher(ICoreDispatcher&&) noexcept = default;
        ICoreDispatcher& operator=(ICoreDispatcher const&) & noexcept = default;
        ICoreDispatcher& operator=(ICoreDispatcher&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreDispatcher2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreDispatcher2>
    {
        ICoreDispatcher2(std::nullptr_t = nullptr) noexcept {}
        ICoreDispatcher2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreDispatcher2(ICoreDispatcher2 const&) noexcept = default;
        ICoreDispatcher2(ICoreDispatcher2&&) noexcept = default;
        ICoreDispatcher2& operator=(ICoreDispatcher2 const&) & noexcept = default;
        ICoreDispatcher2& operator=(ICoreDispatcher2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreDispatcherWithTaskPriority :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreDispatcherWithTaskPriority>
    {
        ICoreDispatcherWithTaskPriority(std::nullptr_t = nullptr) noexcept {}
        ICoreDispatcherWithTaskPriority(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreDispatcherWithTaskPriority(ICoreDispatcherWithTaskPriority const&) noexcept = default;
        ICoreDispatcherWithTaskPriority(ICoreDispatcherWithTaskPriority&&) noexcept = default;
        ICoreDispatcherWithTaskPriority& operator=(ICoreDispatcherWithTaskPriority const&) & noexcept = default;
        ICoreDispatcherWithTaskPriority& operator=(ICoreDispatcherWithTaskPriority&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreInputSourceBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreInputSourceBase>
    {
        ICoreInputSourceBase(std::nullptr_t = nullptr) noexcept {}
        ICoreInputSourceBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreInputSourceBase(ICoreInputSourceBase const&) noexcept = default;
        ICoreInputSourceBase(ICoreInputSourceBase&&) noexcept = default;
        ICoreInputSourceBase& operator=(ICoreInputSourceBase const&) & noexcept = default;
        ICoreInputSourceBase& operator=(ICoreInputSourceBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreKeyboardInputSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreKeyboardInputSource>
    {
        ICoreKeyboardInputSource(std::nullptr_t = nullptr) noexcept {}
        ICoreKeyboardInputSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreKeyboardInputSource(ICoreKeyboardInputSource const&) noexcept = default;
        ICoreKeyboardInputSource(ICoreKeyboardInputSource&&) noexcept = default;
        ICoreKeyboardInputSource& operator=(ICoreKeyboardInputSource const&) & noexcept = default;
        ICoreKeyboardInputSource& operator=(ICoreKeyboardInputSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreKeyboardInputSource2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreKeyboardInputSource2>
    {
        ICoreKeyboardInputSource2(std::nullptr_t = nullptr) noexcept {}
        ICoreKeyboardInputSource2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreKeyboardInputSource2(ICoreKeyboardInputSource2 const&) noexcept = default;
        ICoreKeyboardInputSource2(ICoreKeyboardInputSource2&&) noexcept = default;
        ICoreKeyboardInputSource2& operator=(ICoreKeyboardInputSource2 const&) & noexcept = default;
        ICoreKeyboardInputSource2& operator=(ICoreKeyboardInputSource2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICorePointerInputSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICorePointerInputSource>
    {
        ICorePointerInputSource(std::nullptr_t = nullptr) noexcept {}
        ICorePointerInputSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICorePointerInputSource(ICorePointerInputSource const&) noexcept = default;
        ICorePointerInputSource(ICorePointerInputSource&&) noexcept = default;
        ICorePointerInputSource& operator=(ICorePointerInputSource const&) & noexcept = default;
        ICorePointerInputSource& operator=(ICorePointerInputSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICorePointerInputSource2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICorePointerInputSource2>,
        impl::require<winrt::Windows::UI::Core::ICorePointerInputSource2, winrt::Windows::UI::Core::ICorePointerInputSource>
    {
        ICorePointerInputSource2(std::nullptr_t = nullptr) noexcept {}
        ICorePointerInputSource2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICorePointerInputSource2(ICorePointerInputSource2 const&) noexcept = default;
        ICorePointerInputSource2(ICorePointerInputSource2&&) noexcept = default;
        ICorePointerInputSource2& operator=(ICorePointerInputSource2 const&) & noexcept = default;
        ICorePointerInputSource2& operator=(ICorePointerInputSource2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICorePointerRedirector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICorePointerRedirector>
    {
        ICorePointerRedirector(std::nullptr_t = nullptr) noexcept {}
        ICorePointerRedirector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICorePointerRedirector(ICorePointerRedirector const&) noexcept = default;
        ICorePointerRedirector(ICorePointerRedirector&&) noexcept = default;
        ICorePointerRedirector& operator=(ICorePointerRedirector const&) & noexcept = default;
        ICorePointerRedirector& operator=(ICorePointerRedirector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreTouchHitTesting :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreTouchHitTesting>
    {
        ICoreTouchHitTesting(std::nullptr_t = nullptr) noexcept {}
        ICoreTouchHitTesting(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreTouchHitTesting(ICoreTouchHitTesting const&) noexcept = default;
        ICoreTouchHitTesting(ICoreTouchHitTesting&&) noexcept = default;
        ICoreTouchHitTesting& operator=(ICoreTouchHitTesting const&) & noexcept = default;
        ICoreTouchHitTesting& operator=(ICoreTouchHitTesting&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindow>
    {
        ICoreWindow(std::nullptr_t = nullptr) noexcept {}
        ICoreWindow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindow(ICoreWindow const&) noexcept = default;
        ICoreWindow(ICoreWindow&&) noexcept = default;
        ICoreWindow& operator=(ICoreWindow const&) & noexcept = default;
        ICoreWindow& operator=(ICoreWindow&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindow2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindow2>
    {
        ICoreWindow2(std::nullptr_t = nullptr) noexcept {}
        ICoreWindow2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindow2(ICoreWindow2 const&) noexcept = default;
        ICoreWindow2(ICoreWindow2&&) noexcept = default;
        ICoreWindow2& operator=(ICoreWindow2 const&) & noexcept = default;
        ICoreWindow2& operator=(ICoreWindow2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindow3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindow3>
    {
        ICoreWindow3(std::nullptr_t = nullptr) noexcept {}
        ICoreWindow3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindow3(ICoreWindow3 const&) noexcept = default;
        ICoreWindow3(ICoreWindow3&&) noexcept = default;
        ICoreWindow3& operator=(ICoreWindow3 const&) & noexcept = default;
        ICoreWindow3& operator=(ICoreWindow3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindow4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindow4>
    {
        ICoreWindow4(std::nullptr_t = nullptr) noexcept {}
        ICoreWindow4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindow4(ICoreWindow4 const&) noexcept = default;
        ICoreWindow4(ICoreWindow4&&) noexcept = default;
        ICoreWindow4& operator=(ICoreWindow4 const&) & noexcept = default;
        ICoreWindow4& operator=(ICoreWindow4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindow5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindow5>
    {
        ICoreWindow5(std::nullptr_t = nullptr) noexcept {}
        ICoreWindow5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindow5(ICoreWindow5 const&) noexcept = default;
        ICoreWindow5(ICoreWindow5&&) noexcept = default;
        ICoreWindow5& operator=(ICoreWindow5 const&) & noexcept = default;
        ICoreWindow5& operator=(ICoreWindow5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowDialog :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowDialog>
    {
        ICoreWindowDialog(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowDialog(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowDialog(ICoreWindowDialog const&) noexcept = default;
        ICoreWindowDialog(ICoreWindowDialog&&) noexcept = default;
        ICoreWindowDialog& operator=(ICoreWindowDialog const&) & noexcept = default;
        ICoreWindowDialog& operator=(ICoreWindowDialog&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowDialogFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowDialogFactory>
    {
        ICoreWindowDialogFactory(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowDialogFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowDialogFactory(ICoreWindowDialogFactory const&) noexcept = default;
        ICoreWindowDialogFactory(ICoreWindowDialogFactory&&) noexcept = default;
        ICoreWindowDialogFactory& operator=(ICoreWindowDialogFactory const&) & noexcept = default;
        ICoreWindowDialogFactory& operator=(ICoreWindowDialogFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowEventArgs>
    {
        ICoreWindowEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowEventArgs(ICoreWindowEventArgs const&) noexcept = default;
        ICoreWindowEventArgs(ICoreWindowEventArgs&&) noexcept = default;
        ICoreWindowEventArgs& operator=(ICoreWindowEventArgs const&) & noexcept = default;
        ICoreWindowEventArgs& operator=(ICoreWindowEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowFlyout>
    {
        ICoreWindowFlyout(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowFlyout(ICoreWindowFlyout const&) noexcept = default;
        ICoreWindowFlyout(ICoreWindowFlyout&&) noexcept = default;
        ICoreWindowFlyout& operator=(ICoreWindowFlyout const&) & noexcept = default;
        ICoreWindowFlyout& operator=(ICoreWindowFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowFlyoutFactory>
    {
        ICoreWindowFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowFlyoutFactory(ICoreWindowFlyoutFactory const&) noexcept = default;
        ICoreWindowFlyoutFactory(ICoreWindowFlyoutFactory&&) noexcept = default;
        ICoreWindowFlyoutFactory& operator=(ICoreWindowFlyoutFactory const&) & noexcept = default;
        ICoreWindowFlyoutFactory& operator=(ICoreWindowFlyoutFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowPopupShowingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowPopupShowingEventArgs>
    {
        ICoreWindowPopupShowingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowPopupShowingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowPopupShowingEventArgs(ICoreWindowPopupShowingEventArgs const&) noexcept = default;
        ICoreWindowPopupShowingEventArgs(ICoreWindowPopupShowingEventArgs&&) noexcept = default;
        ICoreWindowPopupShowingEventArgs& operator=(ICoreWindowPopupShowingEventArgs const&) & noexcept = default;
        ICoreWindowPopupShowingEventArgs& operator=(ICoreWindowPopupShowingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowResizeManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowResizeManager>
    {
        ICoreWindowResizeManager(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowResizeManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowResizeManager(ICoreWindowResizeManager const&) noexcept = default;
        ICoreWindowResizeManager(ICoreWindowResizeManager&&) noexcept = default;
        ICoreWindowResizeManager& operator=(ICoreWindowResizeManager const&) & noexcept = default;
        ICoreWindowResizeManager& operator=(ICoreWindowResizeManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowResizeManagerLayoutCapability :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowResizeManagerLayoutCapability>
    {
        ICoreWindowResizeManagerLayoutCapability(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowResizeManagerLayoutCapability(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowResizeManagerLayoutCapability(ICoreWindowResizeManagerLayoutCapability const&) noexcept = default;
        ICoreWindowResizeManagerLayoutCapability(ICoreWindowResizeManagerLayoutCapability&&) noexcept = default;
        ICoreWindowResizeManagerLayoutCapability& operator=(ICoreWindowResizeManagerLayoutCapability const&) & noexcept = default;
        ICoreWindowResizeManagerLayoutCapability& operator=(ICoreWindowResizeManagerLayoutCapability&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowResizeManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowResizeManagerStatics>
    {
        ICoreWindowResizeManagerStatics(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowResizeManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowResizeManagerStatics(ICoreWindowResizeManagerStatics const&) noexcept = default;
        ICoreWindowResizeManagerStatics(ICoreWindowResizeManagerStatics&&) noexcept = default;
        ICoreWindowResizeManagerStatics& operator=(ICoreWindowResizeManagerStatics const&) & noexcept = default;
        ICoreWindowResizeManagerStatics& operator=(ICoreWindowResizeManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowStatic :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowStatic>
    {
        ICoreWindowStatic(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowStatic(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowStatic(ICoreWindowStatic const&) noexcept = default;
        ICoreWindowStatic(ICoreWindowStatic&&) noexcept = default;
        ICoreWindowStatic& operator=(ICoreWindowStatic const&) & noexcept = default;
        ICoreWindowStatic& operator=(ICoreWindowStatic&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreWindowWithContext :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWindowWithContext>
    {
        ICoreWindowWithContext(std::nullptr_t = nullptr) noexcept {}
        ICoreWindowWithContext(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreWindowWithContext(ICoreWindowWithContext const&) noexcept = default;
        ICoreWindowWithContext(ICoreWindowWithContext&&) noexcept = default;
        ICoreWindowWithContext& operator=(ICoreWindowWithContext const&) & noexcept = default;
        ICoreWindowWithContext& operator=(ICoreWindowWithContext&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIdleDispatchedHandlerArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIdleDispatchedHandlerArgs>
    {
        IIdleDispatchedHandlerArgs(std::nullptr_t = nullptr) noexcept {}
        IIdleDispatchedHandlerArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIdleDispatchedHandlerArgs(IIdleDispatchedHandlerArgs const&) noexcept = default;
        IIdleDispatchedHandlerArgs(IIdleDispatchedHandlerArgs&&) noexcept = default;
        IIdleDispatchedHandlerArgs& operator=(IIdleDispatchedHandlerArgs const&) & noexcept = default;
        IIdleDispatchedHandlerArgs& operator=(IIdleDispatchedHandlerArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInitializeWithCoreWindow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInitializeWithCoreWindow>
    {
        IInitializeWithCoreWindow(std::nullptr_t = nullptr) noexcept {}
        IInitializeWithCoreWindow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInitializeWithCoreWindow(IInitializeWithCoreWindow const&) noexcept = default;
        IInitializeWithCoreWindow(IInitializeWithCoreWindow&&) noexcept = default;
        IInitializeWithCoreWindow& operator=(IInitializeWithCoreWindow const&) & noexcept = default;
        IInitializeWithCoreWindow& operator=(IInitializeWithCoreWindow&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInputEnabledEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputEnabledEventArgs>,
        impl::require<winrt::Windows::UI::Core::IInputEnabledEventArgs, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        IInputEnabledEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInputEnabledEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInputEnabledEventArgs(IInputEnabledEventArgs const&) noexcept = default;
        IInputEnabledEventArgs(IInputEnabledEventArgs&&) noexcept = default;
        IInputEnabledEventArgs& operator=(IInputEnabledEventArgs const&) & noexcept = default;
        IInputEnabledEventArgs& operator=(IInputEnabledEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyEventArgs>,
        impl::require<winrt::Windows::UI::Core::IKeyEventArgs, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        IKeyEventArgs(std::nullptr_t = nullptr) noexcept {}
        IKeyEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyEventArgs(IKeyEventArgs const&) noexcept = default;
        IKeyEventArgs(IKeyEventArgs&&) noexcept = default;
        IKeyEventArgs& operator=(IKeyEventArgs const&) & noexcept = default;
        IKeyEventArgs& operator=(IKeyEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyEventArgs2>,
        impl::require<winrt::Windows::UI::Core::IKeyEventArgs2, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        IKeyEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IKeyEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyEventArgs2(IKeyEventArgs2 const&) noexcept = default;
        IKeyEventArgs2(IKeyEventArgs2&&) noexcept = default;
        IKeyEventArgs2& operator=(IKeyEventArgs2 const&) & noexcept = default;
        IKeyEventArgs2& operator=(IKeyEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerEventArgs>,
        impl::require<winrt::Windows::UI::Core::IPointerEventArgs, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        IPointerEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPointerEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerEventArgs(IPointerEventArgs const&) noexcept = default;
        IPointerEventArgs(IPointerEventArgs&&) noexcept = default;
        IPointerEventArgs& operator=(IPointerEventArgs const&) & noexcept = default;
        IPointerEventArgs& operator=(IPointerEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemNavigationManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemNavigationManager>
    {
        ISystemNavigationManager(std::nullptr_t = nullptr) noexcept {}
        ISystemNavigationManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemNavigationManager(ISystemNavigationManager const&) noexcept = default;
        ISystemNavigationManager(ISystemNavigationManager&&) noexcept = default;
        ISystemNavigationManager& operator=(ISystemNavigationManager const&) & noexcept = default;
        ISystemNavigationManager& operator=(ISystemNavigationManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemNavigationManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemNavigationManager2>
    {
        ISystemNavigationManager2(std::nullptr_t = nullptr) noexcept {}
        ISystemNavigationManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemNavigationManager2(ISystemNavigationManager2 const&) noexcept = default;
        ISystemNavigationManager2(ISystemNavigationManager2&&) noexcept = default;
        ISystemNavigationManager2& operator=(ISystemNavigationManager2 const&) & noexcept = default;
        ISystemNavigationManager2& operator=(ISystemNavigationManager2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISystemNavigationManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISystemNavigationManagerStatics>
    {
        ISystemNavigationManagerStatics(std::nullptr_t = nullptr) noexcept {}
        ISystemNavigationManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISystemNavigationManagerStatics(ISystemNavigationManagerStatics const&) noexcept = default;
        ISystemNavigationManagerStatics(ISystemNavigationManagerStatics&&) noexcept = default;
        ISystemNavigationManagerStatics& operator=(ISystemNavigationManagerStatics const&) & noexcept = default;
        ISystemNavigationManagerStatics& operator=(ISystemNavigationManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITouchHitTestingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITouchHitTestingEventArgs>,
        impl::require<winrt::Windows::UI::Core::ITouchHitTestingEventArgs, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        ITouchHitTestingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITouchHitTestingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITouchHitTestingEventArgs(ITouchHitTestingEventArgs const&) noexcept = default;
        ITouchHitTestingEventArgs(ITouchHitTestingEventArgs&&) noexcept = default;
        ITouchHitTestingEventArgs& operator=(ITouchHitTestingEventArgs const&) & noexcept = default;
        ITouchHitTestingEventArgs& operator=(ITouchHitTestingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVisibilityChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVisibilityChangedEventArgs>,
        impl::require<winrt::Windows::UI::Core::IVisibilityChangedEventArgs, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        IVisibilityChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IVisibilityChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVisibilityChangedEventArgs(IVisibilityChangedEventArgs const&) noexcept = default;
        IVisibilityChangedEventArgs(IVisibilityChangedEventArgs&&) noexcept = default;
        IVisibilityChangedEventArgs& operator=(IVisibilityChangedEventArgs const&) & noexcept = default;
        IVisibilityChangedEventArgs& operator=(IVisibilityChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowActivatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowActivatedEventArgs>,
        impl::require<winrt::Windows::UI::Core::IWindowActivatedEventArgs, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        IWindowActivatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWindowActivatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowActivatedEventArgs(IWindowActivatedEventArgs const&) noexcept = default;
        IWindowActivatedEventArgs(IWindowActivatedEventArgs&&) noexcept = default;
        IWindowActivatedEventArgs& operator=(IWindowActivatedEventArgs const&) & noexcept = default;
        IWindowActivatedEventArgs& operator=(IWindowActivatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowSizeChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowSizeChangedEventArgs>,
        impl::require<winrt::Windows::UI::Core::IWindowSizeChangedEventArgs, winrt::Windows::UI::Core::ICoreWindowEventArgs>
    {
        IWindowSizeChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWindowSizeChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowSizeChangedEventArgs(IWindowSizeChangedEventArgs const&) noexcept = default;
        IWindowSizeChangedEventArgs(IWindowSizeChangedEventArgs&&) noexcept = default;
        IWindowSizeChangedEventArgs& operator=(IWindowSizeChangedEventArgs const&) & noexcept = default;
        IWindowSizeChangedEventArgs& operator=(IWindowSizeChangedEventArgs&&) & noexcept = default;
    };
}
#endif
