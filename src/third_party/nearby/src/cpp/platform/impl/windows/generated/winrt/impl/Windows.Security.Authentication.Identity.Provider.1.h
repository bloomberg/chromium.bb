// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Security_Authentication_Identity_Provider_1_H
#define WINRT_Windows_Security_Authentication_Identity_Provider_1_H
#include "winrt/impl/Windows.Security.Authentication.Identity.Provider.0.h"
WINRT_EXPORT namespace winrt::Windows::Security::Authentication::Identity::Provider
{
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorAuthentication :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorAuthentication>
    {
        ISecondaryAuthenticationFactorAuthentication(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorAuthentication(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorAuthentication(ISecondaryAuthenticationFactorAuthentication const&) noexcept = default;
        ISecondaryAuthenticationFactorAuthentication(ISecondaryAuthenticationFactorAuthentication&&) noexcept = default;
        ISecondaryAuthenticationFactorAuthentication& operator=(ISecondaryAuthenticationFactorAuthentication const&) & noexcept = default;
        ISecondaryAuthenticationFactorAuthentication& operator=(ISecondaryAuthenticationFactorAuthentication&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorAuthenticationResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorAuthenticationResult>
    {
        ISecondaryAuthenticationFactorAuthenticationResult(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorAuthenticationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorAuthenticationResult(ISecondaryAuthenticationFactorAuthenticationResult const&) noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationResult(ISecondaryAuthenticationFactorAuthenticationResult&&) noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationResult& operator=(ISecondaryAuthenticationFactorAuthenticationResult const&) & noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationResult& operator=(ISecondaryAuthenticationFactorAuthenticationResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs>
    {
        ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs(ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs const&) noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs(ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs&&) noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs& operator=(ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs const&) & noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs& operator=(ISecondaryAuthenticationFactorAuthenticationStageChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorAuthenticationStageInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorAuthenticationStageInfo>
    {
        ISecondaryAuthenticationFactorAuthenticationStageInfo(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorAuthenticationStageInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorAuthenticationStageInfo(ISecondaryAuthenticationFactorAuthenticationStageInfo const&) noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationStageInfo(ISecondaryAuthenticationFactorAuthenticationStageInfo&&) noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationStageInfo& operator=(ISecondaryAuthenticationFactorAuthenticationStageInfo const&) & noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationStageInfo& operator=(ISecondaryAuthenticationFactorAuthenticationStageInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorAuthenticationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorAuthenticationStatics>
    {
        ISecondaryAuthenticationFactorAuthenticationStatics(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorAuthenticationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorAuthenticationStatics(ISecondaryAuthenticationFactorAuthenticationStatics const&) noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationStatics(ISecondaryAuthenticationFactorAuthenticationStatics&&) noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationStatics& operator=(ISecondaryAuthenticationFactorAuthenticationStatics const&) & noexcept = default;
        ISecondaryAuthenticationFactorAuthenticationStatics& operator=(ISecondaryAuthenticationFactorAuthenticationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics>
    {
        ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics(ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics const&) noexcept = default;
        ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics(ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics&&) noexcept = default;
        ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics& operator=(ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics const&) & noexcept = default;
        ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics& operator=(ISecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorInfo>
    {
        ISecondaryAuthenticationFactorInfo(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorInfo(ISecondaryAuthenticationFactorInfo const&) noexcept = default;
        ISecondaryAuthenticationFactorInfo(ISecondaryAuthenticationFactorInfo&&) noexcept = default;
        ISecondaryAuthenticationFactorInfo& operator=(ISecondaryAuthenticationFactorInfo const&) & noexcept = default;
        ISecondaryAuthenticationFactorInfo& operator=(ISecondaryAuthenticationFactorInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorInfo2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorInfo2>,
        impl::require<winrt::Windows::Security::Authentication::Identity::Provider::ISecondaryAuthenticationFactorInfo2, winrt::Windows::Security::Authentication::Identity::Provider::ISecondaryAuthenticationFactorInfo>
    {
        ISecondaryAuthenticationFactorInfo2(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorInfo2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorInfo2(ISecondaryAuthenticationFactorInfo2 const&) noexcept = default;
        ISecondaryAuthenticationFactorInfo2(ISecondaryAuthenticationFactorInfo2&&) noexcept = default;
        ISecondaryAuthenticationFactorInfo2& operator=(ISecondaryAuthenticationFactorInfo2 const&) & noexcept = default;
        ISecondaryAuthenticationFactorInfo2& operator=(ISecondaryAuthenticationFactorInfo2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorRegistration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorRegistration>
    {
        ISecondaryAuthenticationFactorRegistration(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorRegistration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorRegistration(ISecondaryAuthenticationFactorRegistration const&) noexcept = default;
        ISecondaryAuthenticationFactorRegistration(ISecondaryAuthenticationFactorRegistration&&) noexcept = default;
        ISecondaryAuthenticationFactorRegistration& operator=(ISecondaryAuthenticationFactorRegistration const&) & noexcept = default;
        ISecondaryAuthenticationFactorRegistration& operator=(ISecondaryAuthenticationFactorRegistration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorRegistrationResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorRegistrationResult>
    {
        ISecondaryAuthenticationFactorRegistrationResult(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorRegistrationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorRegistrationResult(ISecondaryAuthenticationFactorRegistrationResult const&) noexcept = default;
        ISecondaryAuthenticationFactorRegistrationResult(ISecondaryAuthenticationFactorRegistrationResult&&) noexcept = default;
        ISecondaryAuthenticationFactorRegistrationResult& operator=(ISecondaryAuthenticationFactorRegistrationResult const&) & noexcept = default;
        ISecondaryAuthenticationFactorRegistrationResult& operator=(ISecondaryAuthenticationFactorRegistrationResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecondaryAuthenticationFactorRegistrationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecondaryAuthenticationFactorRegistrationStatics>
    {
        ISecondaryAuthenticationFactorRegistrationStatics(std::nullptr_t = nullptr) noexcept {}
        ISecondaryAuthenticationFactorRegistrationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecondaryAuthenticationFactorRegistrationStatics(ISecondaryAuthenticationFactorRegistrationStatics const&) noexcept = default;
        ISecondaryAuthenticationFactorRegistrationStatics(ISecondaryAuthenticationFactorRegistrationStatics&&) noexcept = default;
        ISecondaryAuthenticationFactorRegistrationStatics& operator=(ISecondaryAuthenticationFactorRegistrationStatics const&) & noexcept = default;
        ISecondaryAuthenticationFactorRegistrationStatics& operator=(ISecondaryAuthenticationFactorRegistrationStatics&&) & noexcept = default;
    };
}
#endif
