// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_AI_MachineLearning_1_H
#define WINRT_Windows_AI_MachineLearning_1_H
#include "winrt/impl/Windows.AI.MachineLearning.0.h"
WINRT_EXPORT namespace winrt::Windows::AI::MachineLearning
{
    struct __declspec(empty_bases) IImageFeatureDescriptor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageFeatureDescriptor>
    {
        IImageFeatureDescriptor(std::nullptr_t = nullptr) noexcept {}
        IImageFeatureDescriptor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImageFeatureDescriptor(IImageFeatureDescriptor const&) noexcept = default;
        IImageFeatureDescriptor(IImageFeatureDescriptor&&) noexcept = default;
        IImageFeatureDescriptor& operator=(IImageFeatureDescriptor const&) & noexcept = default;
        IImageFeatureDescriptor& operator=(IImageFeatureDescriptor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IImageFeatureValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageFeatureValue>
    {
        IImageFeatureValue(std::nullptr_t = nullptr) noexcept {}
        IImageFeatureValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImageFeatureValue(IImageFeatureValue const&) noexcept = default;
        IImageFeatureValue(IImageFeatureValue&&) noexcept = default;
        IImageFeatureValue& operator=(IImageFeatureValue const&) & noexcept = default;
        IImageFeatureValue& operator=(IImageFeatureValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IImageFeatureValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageFeatureValueStatics>
    {
        IImageFeatureValueStatics(std::nullptr_t = nullptr) noexcept {}
        IImageFeatureValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImageFeatureValueStatics(IImageFeatureValueStatics const&) noexcept = default;
        IImageFeatureValueStatics(IImageFeatureValueStatics&&) noexcept = default;
        IImageFeatureValueStatics& operator=(IImageFeatureValueStatics const&) & noexcept = default;
        IImageFeatureValueStatics& operator=(IImageFeatureValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModel>
    {
        ILearningModel(std::nullptr_t = nullptr) noexcept {}
        ILearningModel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModel(ILearningModel const&) noexcept = default;
        ILearningModel(ILearningModel&&) noexcept = default;
        ILearningModel& operator=(ILearningModel const&) & noexcept = default;
        ILearningModel& operator=(ILearningModel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelBinding :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelBinding>
    {
        ILearningModelBinding(std::nullptr_t = nullptr) noexcept {}
        ILearningModelBinding(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelBinding(ILearningModelBinding const&) noexcept = default;
        ILearningModelBinding(ILearningModelBinding&&) noexcept = default;
        ILearningModelBinding& operator=(ILearningModelBinding const&) & noexcept = default;
        ILearningModelBinding& operator=(ILearningModelBinding&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelBindingFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelBindingFactory>
    {
        ILearningModelBindingFactory(std::nullptr_t = nullptr) noexcept {}
        ILearningModelBindingFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelBindingFactory(ILearningModelBindingFactory const&) noexcept = default;
        ILearningModelBindingFactory(ILearningModelBindingFactory&&) noexcept = default;
        ILearningModelBindingFactory& operator=(ILearningModelBindingFactory const&) & noexcept = default;
        ILearningModelBindingFactory& operator=(ILearningModelBindingFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelDevice :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelDevice>
    {
        ILearningModelDevice(std::nullptr_t = nullptr) noexcept {}
        ILearningModelDevice(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelDevice(ILearningModelDevice const&) noexcept = default;
        ILearningModelDevice(ILearningModelDevice&&) noexcept = default;
        ILearningModelDevice& operator=(ILearningModelDevice const&) & noexcept = default;
        ILearningModelDevice& operator=(ILearningModelDevice&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelDeviceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelDeviceFactory>
    {
        ILearningModelDeviceFactory(std::nullptr_t = nullptr) noexcept {}
        ILearningModelDeviceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelDeviceFactory(ILearningModelDeviceFactory const&) noexcept = default;
        ILearningModelDeviceFactory(ILearningModelDeviceFactory&&) noexcept = default;
        ILearningModelDeviceFactory& operator=(ILearningModelDeviceFactory const&) & noexcept = default;
        ILearningModelDeviceFactory& operator=(ILearningModelDeviceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelDeviceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelDeviceStatics>
    {
        ILearningModelDeviceStatics(std::nullptr_t = nullptr) noexcept {}
        ILearningModelDeviceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelDeviceStatics(ILearningModelDeviceStatics const&) noexcept = default;
        ILearningModelDeviceStatics(ILearningModelDeviceStatics&&) noexcept = default;
        ILearningModelDeviceStatics& operator=(ILearningModelDeviceStatics const&) & noexcept = default;
        ILearningModelDeviceStatics& operator=(ILearningModelDeviceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelEvaluationResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelEvaluationResult>
    {
        ILearningModelEvaluationResult(std::nullptr_t = nullptr) noexcept {}
        ILearningModelEvaluationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelEvaluationResult(ILearningModelEvaluationResult const&) noexcept = default;
        ILearningModelEvaluationResult(ILearningModelEvaluationResult&&) noexcept = default;
        ILearningModelEvaluationResult& operator=(ILearningModelEvaluationResult const&) & noexcept = default;
        ILearningModelEvaluationResult& operator=(ILearningModelEvaluationResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelFeatureDescriptor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelFeatureDescriptor>
    {
        ILearningModelFeatureDescriptor(std::nullptr_t = nullptr) noexcept {}
        ILearningModelFeatureDescriptor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelFeatureDescriptor(ILearningModelFeatureDescriptor const&) noexcept = default;
        ILearningModelFeatureDescriptor(ILearningModelFeatureDescriptor&&) noexcept = default;
        ILearningModelFeatureDescriptor& operator=(ILearningModelFeatureDescriptor const&) & noexcept = default;
        ILearningModelFeatureDescriptor& operator=(ILearningModelFeatureDescriptor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelFeatureValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelFeatureValue>
    {
        ILearningModelFeatureValue(std::nullptr_t = nullptr) noexcept {}
        ILearningModelFeatureValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelFeatureValue(ILearningModelFeatureValue const&) noexcept = default;
        ILearningModelFeatureValue(ILearningModelFeatureValue&&) noexcept = default;
        ILearningModelFeatureValue& operator=(ILearningModelFeatureValue const&) & noexcept = default;
        ILearningModelFeatureValue& operator=(ILearningModelFeatureValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelOperatorProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelOperatorProvider>
    {
        ILearningModelOperatorProvider(std::nullptr_t = nullptr) noexcept {}
        ILearningModelOperatorProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelOperatorProvider(ILearningModelOperatorProvider const&) noexcept = default;
        ILearningModelOperatorProvider(ILearningModelOperatorProvider&&) noexcept = default;
        ILearningModelOperatorProvider& operator=(ILearningModelOperatorProvider const&) & noexcept = default;
        ILearningModelOperatorProvider& operator=(ILearningModelOperatorProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelSession :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelSession>
    {
        ILearningModelSession(std::nullptr_t = nullptr) noexcept {}
        ILearningModelSession(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelSession(ILearningModelSession const&) noexcept = default;
        ILearningModelSession(ILearningModelSession&&) noexcept = default;
        ILearningModelSession& operator=(ILearningModelSession const&) & noexcept = default;
        ILearningModelSession& operator=(ILearningModelSession&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelSessionFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelSessionFactory>
    {
        ILearningModelSessionFactory(std::nullptr_t = nullptr) noexcept {}
        ILearningModelSessionFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelSessionFactory(ILearningModelSessionFactory const&) noexcept = default;
        ILearningModelSessionFactory(ILearningModelSessionFactory&&) noexcept = default;
        ILearningModelSessionFactory& operator=(ILearningModelSessionFactory const&) & noexcept = default;
        ILearningModelSessionFactory& operator=(ILearningModelSessionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelSessionFactory2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelSessionFactory2>
    {
        ILearningModelSessionFactory2(std::nullptr_t = nullptr) noexcept {}
        ILearningModelSessionFactory2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelSessionFactory2(ILearningModelSessionFactory2 const&) noexcept = default;
        ILearningModelSessionFactory2(ILearningModelSessionFactory2&&) noexcept = default;
        ILearningModelSessionFactory2& operator=(ILearningModelSessionFactory2 const&) & noexcept = default;
        ILearningModelSessionFactory2& operator=(ILearningModelSessionFactory2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelSessionOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelSessionOptions>
    {
        ILearningModelSessionOptions(std::nullptr_t = nullptr) noexcept {}
        ILearningModelSessionOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelSessionOptions(ILearningModelSessionOptions const&) noexcept = default;
        ILearningModelSessionOptions(ILearningModelSessionOptions&&) noexcept = default;
        ILearningModelSessionOptions& operator=(ILearningModelSessionOptions const&) & noexcept = default;
        ILearningModelSessionOptions& operator=(ILearningModelSessionOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelSessionOptions2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelSessionOptions2>
    {
        ILearningModelSessionOptions2(std::nullptr_t = nullptr) noexcept {}
        ILearningModelSessionOptions2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelSessionOptions2(ILearningModelSessionOptions2 const&) noexcept = default;
        ILearningModelSessionOptions2(ILearningModelSessionOptions2&&) noexcept = default;
        ILearningModelSessionOptions2& operator=(ILearningModelSessionOptions2 const&) & noexcept = default;
        ILearningModelSessionOptions2& operator=(ILearningModelSessionOptions2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILearningModelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILearningModelStatics>
    {
        ILearningModelStatics(std::nullptr_t = nullptr) noexcept {}
        ILearningModelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILearningModelStatics(ILearningModelStatics const&) noexcept = default;
        ILearningModelStatics(ILearningModelStatics&&) noexcept = default;
        ILearningModelStatics& operator=(ILearningModelStatics const&) & noexcept = default;
        ILearningModelStatics& operator=(ILearningModelStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapFeatureDescriptor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapFeatureDescriptor>
    {
        IMapFeatureDescriptor(std::nullptr_t = nullptr) noexcept {}
        IMapFeatureDescriptor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapFeatureDescriptor(IMapFeatureDescriptor const&) noexcept = default;
        IMapFeatureDescriptor(IMapFeatureDescriptor&&) noexcept = default;
        IMapFeatureDescriptor& operator=(IMapFeatureDescriptor const&) & noexcept = default;
        IMapFeatureDescriptor& operator=(IMapFeatureDescriptor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISequenceFeatureDescriptor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISequenceFeatureDescriptor>
    {
        ISequenceFeatureDescriptor(std::nullptr_t = nullptr) noexcept {}
        ISequenceFeatureDescriptor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISequenceFeatureDescriptor(ISequenceFeatureDescriptor const&) noexcept = default;
        ISequenceFeatureDescriptor(ISequenceFeatureDescriptor&&) noexcept = default;
        ISequenceFeatureDescriptor& operator=(ISequenceFeatureDescriptor const&) & noexcept = default;
        ISequenceFeatureDescriptor& operator=(ISequenceFeatureDescriptor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensor>,
        impl::require<winrt::Windows::AI::MachineLearning::ITensor, winrt::Windows::AI::MachineLearning::ILearningModelFeatureValue>
    {
        ITensor(std::nullptr_t = nullptr) noexcept {}
        ITensor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensor(ITensor const&) noexcept = default;
        ITensor(ITensor&&) noexcept = default;
        ITensor& operator=(ITensor const&) & noexcept = default;
        ITensor& operator=(ITensor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorBoolean :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorBoolean>
    {
        ITensorBoolean(std::nullptr_t = nullptr) noexcept {}
        ITensorBoolean(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorBoolean(ITensorBoolean const&) noexcept = default;
        ITensorBoolean(ITensorBoolean&&) noexcept = default;
        ITensorBoolean& operator=(ITensorBoolean const&) & noexcept = default;
        ITensorBoolean& operator=(ITensorBoolean&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorBooleanStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorBooleanStatics>
    {
        ITensorBooleanStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorBooleanStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorBooleanStatics(ITensorBooleanStatics const&) noexcept = default;
        ITensorBooleanStatics(ITensorBooleanStatics&&) noexcept = default;
        ITensorBooleanStatics& operator=(ITensorBooleanStatics const&) & noexcept = default;
        ITensorBooleanStatics& operator=(ITensorBooleanStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorBooleanStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorBooleanStatics2>
    {
        ITensorBooleanStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorBooleanStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorBooleanStatics2(ITensorBooleanStatics2 const&) noexcept = default;
        ITensorBooleanStatics2(ITensorBooleanStatics2&&) noexcept = default;
        ITensorBooleanStatics2& operator=(ITensorBooleanStatics2 const&) & noexcept = default;
        ITensorBooleanStatics2& operator=(ITensorBooleanStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorDouble :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorDouble>
    {
        ITensorDouble(std::nullptr_t = nullptr) noexcept {}
        ITensorDouble(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorDouble(ITensorDouble const&) noexcept = default;
        ITensorDouble(ITensorDouble&&) noexcept = default;
        ITensorDouble& operator=(ITensorDouble const&) & noexcept = default;
        ITensorDouble& operator=(ITensorDouble&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorDoubleStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorDoubleStatics>
    {
        ITensorDoubleStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorDoubleStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorDoubleStatics(ITensorDoubleStatics const&) noexcept = default;
        ITensorDoubleStatics(ITensorDoubleStatics&&) noexcept = default;
        ITensorDoubleStatics& operator=(ITensorDoubleStatics const&) & noexcept = default;
        ITensorDoubleStatics& operator=(ITensorDoubleStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorDoubleStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorDoubleStatics2>
    {
        ITensorDoubleStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorDoubleStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorDoubleStatics2(ITensorDoubleStatics2 const&) noexcept = default;
        ITensorDoubleStatics2(ITensorDoubleStatics2&&) noexcept = default;
        ITensorDoubleStatics2& operator=(ITensorDoubleStatics2 const&) & noexcept = default;
        ITensorDoubleStatics2& operator=(ITensorDoubleStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorFeatureDescriptor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorFeatureDescriptor>
    {
        ITensorFeatureDescriptor(std::nullptr_t = nullptr) noexcept {}
        ITensorFeatureDescriptor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorFeatureDescriptor(ITensorFeatureDescriptor const&) noexcept = default;
        ITensorFeatureDescriptor(ITensorFeatureDescriptor&&) noexcept = default;
        ITensorFeatureDescriptor& operator=(ITensorFeatureDescriptor const&) & noexcept = default;
        ITensorFeatureDescriptor& operator=(ITensorFeatureDescriptor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorFloat :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorFloat>
    {
        ITensorFloat(std::nullptr_t = nullptr) noexcept {}
        ITensorFloat(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorFloat(ITensorFloat const&) noexcept = default;
        ITensorFloat(ITensorFloat&&) noexcept = default;
        ITensorFloat& operator=(ITensorFloat const&) & noexcept = default;
        ITensorFloat& operator=(ITensorFloat&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorFloat16Bit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorFloat16Bit>
    {
        ITensorFloat16Bit(std::nullptr_t = nullptr) noexcept {}
        ITensorFloat16Bit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorFloat16Bit(ITensorFloat16Bit const&) noexcept = default;
        ITensorFloat16Bit(ITensorFloat16Bit&&) noexcept = default;
        ITensorFloat16Bit& operator=(ITensorFloat16Bit const&) & noexcept = default;
        ITensorFloat16Bit& operator=(ITensorFloat16Bit&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorFloat16BitStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorFloat16BitStatics>
    {
        ITensorFloat16BitStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorFloat16BitStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorFloat16BitStatics(ITensorFloat16BitStatics const&) noexcept = default;
        ITensorFloat16BitStatics(ITensorFloat16BitStatics&&) noexcept = default;
        ITensorFloat16BitStatics& operator=(ITensorFloat16BitStatics const&) & noexcept = default;
        ITensorFloat16BitStatics& operator=(ITensorFloat16BitStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorFloat16BitStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorFloat16BitStatics2>
    {
        ITensorFloat16BitStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorFloat16BitStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorFloat16BitStatics2(ITensorFloat16BitStatics2 const&) noexcept = default;
        ITensorFloat16BitStatics2(ITensorFloat16BitStatics2&&) noexcept = default;
        ITensorFloat16BitStatics2& operator=(ITensorFloat16BitStatics2 const&) & noexcept = default;
        ITensorFloat16BitStatics2& operator=(ITensorFloat16BitStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorFloatStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorFloatStatics>
    {
        ITensorFloatStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorFloatStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorFloatStatics(ITensorFloatStatics const&) noexcept = default;
        ITensorFloatStatics(ITensorFloatStatics&&) noexcept = default;
        ITensorFloatStatics& operator=(ITensorFloatStatics const&) & noexcept = default;
        ITensorFloatStatics& operator=(ITensorFloatStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorFloatStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorFloatStatics2>
    {
        ITensorFloatStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorFloatStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorFloatStatics2(ITensorFloatStatics2 const&) noexcept = default;
        ITensorFloatStatics2(ITensorFloatStatics2&&) noexcept = default;
        ITensorFloatStatics2& operator=(ITensorFloatStatics2 const&) & noexcept = default;
        ITensorFloatStatics2& operator=(ITensorFloatStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt16Bit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt16Bit>
    {
        ITensorInt16Bit(std::nullptr_t = nullptr) noexcept {}
        ITensorInt16Bit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt16Bit(ITensorInt16Bit const&) noexcept = default;
        ITensorInt16Bit(ITensorInt16Bit&&) noexcept = default;
        ITensorInt16Bit& operator=(ITensorInt16Bit const&) & noexcept = default;
        ITensorInt16Bit& operator=(ITensorInt16Bit&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt16BitStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt16BitStatics>
    {
        ITensorInt16BitStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorInt16BitStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt16BitStatics(ITensorInt16BitStatics const&) noexcept = default;
        ITensorInt16BitStatics(ITensorInt16BitStatics&&) noexcept = default;
        ITensorInt16BitStatics& operator=(ITensorInt16BitStatics const&) & noexcept = default;
        ITensorInt16BitStatics& operator=(ITensorInt16BitStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt16BitStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt16BitStatics2>
    {
        ITensorInt16BitStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorInt16BitStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt16BitStatics2(ITensorInt16BitStatics2 const&) noexcept = default;
        ITensorInt16BitStatics2(ITensorInt16BitStatics2&&) noexcept = default;
        ITensorInt16BitStatics2& operator=(ITensorInt16BitStatics2 const&) & noexcept = default;
        ITensorInt16BitStatics2& operator=(ITensorInt16BitStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt32Bit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt32Bit>
    {
        ITensorInt32Bit(std::nullptr_t = nullptr) noexcept {}
        ITensorInt32Bit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt32Bit(ITensorInt32Bit const&) noexcept = default;
        ITensorInt32Bit(ITensorInt32Bit&&) noexcept = default;
        ITensorInt32Bit& operator=(ITensorInt32Bit const&) & noexcept = default;
        ITensorInt32Bit& operator=(ITensorInt32Bit&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt32BitStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt32BitStatics>
    {
        ITensorInt32BitStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorInt32BitStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt32BitStatics(ITensorInt32BitStatics const&) noexcept = default;
        ITensorInt32BitStatics(ITensorInt32BitStatics&&) noexcept = default;
        ITensorInt32BitStatics& operator=(ITensorInt32BitStatics const&) & noexcept = default;
        ITensorInt32BitStatics& operator=(ITensorInt32BitStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt32BitStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt32BitStatics2>
    {
        ITensorInt32BitStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorInt32BitStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt32BitStatics2(ITensorInt32BitStatics2 const&) noexcept = default;
        ITensorInt32BitStatics2(ITensorInt32BitStatics2&&) noexcept = default;
        ITensorInt32BitStatics2& operator=(ITensorInt32BitStatics2 const&) & noexcept = default;
        ITensorInt32BitStatics2& operator=(ITensorInt32BitStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt64Bit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt64Bit>
    {
        ITensorInt64Bit(std::nullptr_t = nullptr) noexcept {}
        ITensorInt64Bit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt64Bit(ITensorInt64Bit const&) noexcept = default;
        ITensorInt64Bit(ITensorInt64Bit&&) noexcept = default;
        ITensorInt64Bit& operator=(ITensorInt64Bit const&) & noexcept = default;
        ITensorInt64Bit& operator=(ITensorInt64Bit&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt64BitStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt64BitStatics>
    {
        ITensorInt64BitStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorInt64BitStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt64BitStatics(ITensorInt64BitStatics const&) noexcept = default;
        ITensorInt64BitStatics(ITensorInt64BitStatics&&) noexcept = default;
        ITensorInt64BitStatics& operator=(ITensorInt64BitStatics const&) & noexcept = default;
        ITensorInt64BitStatics& operator=(ITensorInt64BitStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt64BitStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt64BitStatics2>
    {
        ITensorInt64BitStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorInt64BitStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt64BitStatics2(ITensorInt64BitStatics2 const&) noexcept = default;
        ITensorInt64BitStatics2(ITensorInt64BitStatics2&&) noexcept = default;
        ITensorInt64BitStatics2& operator=(ITensorInt64BitStatics2 const&) & noexcept = default;
        ITensorInt64BitStatics2& operator=(ITensorInt64BitStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt8Bit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt8Bit>
    {
        ITensorInt8Bit(std::nullptr_t = nullptr) noexcept {}
        ITensorInt8Bit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt8Bit(ITensorInt8Bit const&) noexcept = default;
        ITensorInt8Bit(ITensorInt8Bit&&) noexcept = default;
        ITensorInt8Bit& operator=(ITensorInt8Bit const&) & noexcept = default;
        ITensorInt8Bit& operator=(ITensorInt8Bit&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt8BitStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt8BitStatics>
    {
        ITensorInt8BitStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorInt8BitStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt8BitStatics(ITensorInt8BitStatics const&) noexcept = default;
        ITensorInt8BitStatics(ITensorInt8BitStatics&&) noexcept = default;
        ITensorInt8BitStatics& operator=(ITensorInt8BitStatics const&) & noexcept = default;
        ITensorInt8BitStatics& operator=(ITensorInt8BitStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorInt8BitStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorInt8BitStatics2>
    {
        ITensorInt8BitStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorInt8BitStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorInt8BitStatics2(ITensorInt8BitStatics2 const&) noexcept = default;
        ITensorInt8BitStatics2(ITensorInt8BitStatics2&&) noexcept = default;
        ITensorInt8BitStatics2& operator=(ITensorInt8BitStatics2 const&) & noexcept = default;
        ITensorInt8BitStatics2& operator=(ITensorInt8BitStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorString :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorString>
    {
        ITensorString(std::nullptr_t = nullptr) noexcept {}
        ITensorString(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorString(ITensorString const&) noexcept = default;
        ITensorString(ITensorString&&) noexcept = default;
        ITensorString& operator=(ITensorString const&) & noexcept = default;
        ITensorString& operator=(ITensorString&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorStringStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorStringStatics>
    {
        ITensorStringStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorStringStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorStringStatics(ITensorStringStatics const&) noexcept = default;
        ITensorStringStatics(ITensorStringStatics&&) noexcept = default;
        ITensorStringStatics& operator=(ITensorStringStatics const&) & noexcept = default;
        ITensorStringStatics& operator=(ITensorStringStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorStringStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorStringStatics2>
    {
        ITensorStringStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorStringStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorStringStatics2(ITensorStringStatics2 const&) noexcept = default;
        ITensorStringStatics2(ITensorStringStatics2&&) noexcept = default;
        ITensorStringStatics2& operator=(ITensorStringStatics2 const&) & noexcept = default;
        ITensorStringStatics2& operator=(ITensorStringStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt16Bit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt16Bit>
    {
        ITensorUInt16Bit(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt16Bit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt16Bit(ITensorUInt16Bit const&) noexcept = default;
        ITensorUInt16Bit(ITensorUInt16Bit&&) noexcept = default;
        ITensorUInt16Bit& operator=(ITensorUInt16Bit const&) & noexcept = default;
        ITensorUInt16Bit& operator=(ITensorUInt16Bit&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt16BitStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt16BitStatics>
    {
        ITensorUInt16BitStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt16BitStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt16BitStatics(ITensorUInt16BitStatics const&) noexcept = default;
        ITensorUInt16BitStatics(ITensorUInt16BitStatics&&) noexcept = default;
        ITensorUInt16BitStatics& operator=(ITensorUInt16BitStatics const&) & noexcept = default;
        ITensorUInt16BitStatics& operator=(ITensorUInt16BitStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt16BitStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt16BitStatics2>
    {
        ITensorUInt16BitStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt16BitStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt16BitStatics2(ITensorUInt16BitStatics2 const&) noexcept = default;
        ITensorUInt16BitStatics2(ITensorUInt16BitStatics2&&) noexcept = default;
        ITensorUInt16BitStatics2& operator=(ITensorUInt16BitStatics2 const&) & noexcept = default;
        ITensorUInt16BitStatics2& operator=(ITensorUInt16BitStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt32Bit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt32Bit>
    {
        ITensorUInt32Bit(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt32Bit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt32Bit(ITensorUInt32Bit const&) noexcept = default;
        ITensorUInt32Bit(ITensorUInt32Bit&&) noexcept = default;
        ITensorUInt32Bit& operator=(ITensorUInt32Bit const&) & noexcept = default;
        ITensorUInt32Bit& operator=(ITensorUInt32Bit&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt32BitStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt32BitStatics>
    {
        ITensorUInt32BitStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt32BitStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt32BitStatics(ITensorUInt32BitStatics const&) noexcept = default;
        ITensorUInt32BitStatics(ITensorUInt32BitStatics&&) noexcept = default;
        ITensorUInt32BitStatics& operator=(ITensorUInt32BitStatics const&) & noexcept = default;
        ITensorUInt32BitStatics& operator=(ITensorUInt32BitStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt32BitStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt32BitStatics2>
    {
        ITensorUInt32BitStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt32BitStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt32BitStatics2(ITensorUInt32BitStatics2 const&) noexcept = default;
        ITensorUInt32BitStatics2(ITensorUInt32BitStatics2&&) noexcept = default;
        ITensorUInt32BitStatics2& operator=(ITensorUInt32BitStatics2 const&) & noexcept = default;
        ITensorUInt32BitStatics2& operator=(ITensorUInt32BitStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt64Bit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt64Bit>
    {
        ITensorUInt64Bit(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt64Bit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt64Bit(ITensorUInt64Bit const&) noexcept = default;
        ITensorUInt64Bit(ITensorUInt64Bit&&) noexcept = default;
        ITensorUInt64Bit& operator=(ITensorUInt64Bit const&) & noexcept = default;
        ITensorUInt64Bit& operator=(ITensorUInt64Bit&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt64BitStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt64BitStatics>
    {
        ITensorUInt64BitStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt64BitStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt64BitStatics(ITensorUInt64BitStatics const&) noexcept = default;
        ITensorUInt64BitStatics(ITensorUInt64BitStatics&&) noexcept = default;
        ITensorUInt64BitStatics& operator=(ITensorUInt64BitStatics const&) & noexcept = default;
        ITensorUInt64BitStatics& operator=(ITensorUInt64BitStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt64BitStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt64BitStatics2>
    {
        ITensorUInt64BitStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt64BitStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt64BitStatics2(ITensorUInt64BitStatics2 const&) noexcept = default;
        ITensorUInt64BitStatics2(ITensorUInt64BitStatics2&&) noexcept = default;
        ITensorUInt64BitStatics2& operator=(ITensorUInt64BitStatics2 const&) & noexcept = default;
        ITensorUInt64BitStatics2& operator=(ITensorUInt64BitStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt8Bit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt8Bit>
    {
        ITensorUInt8Bit(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt8Bit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt8Bit(ITensorUInt8Bit const&) noexcept = default;
        ITensorUInt8Bit(ITensorUInt8Bit&&) noexcept = default;
        ITensorUInt8Bit& operator=(ITensorUInt8Bit const&) & noexcept = default;
        ITensorUInt8Bit& operator=(ITensorUInt8Bit&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt8BitStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt8BitStatics>
    {
        ITensorUInt8BitStatics(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt8BitStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt8BitStatics(ITensorUInt8BitStatics const&) noexcept = default;
        ITensorUInt8BitStatics(ITensorUInt8BitStatics&&) noexcept = default;
        ITensorUInt8BitStatics& operator=(ITensorUInt8BitStatics const&) & noexcept = default;
        ITensorUInt8BitStatics& operator=(ITensorUInt8BitStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITensorUInt8BitStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITensorUInt8BitStatics2>
    {
        ITensorUInt8BitStatics2(std::nullptr_t = nullptr) noexcept {}
        ITensorUInt8BitStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITensorUInt8BitStatics2(ITensorUInt8BitStatics2 const&) noexcept = default;
        ITensorUInt8BitStatics2(ITensorUInt8BitStatics2&&) noexcept = default;
        ITensorUInt8BitStatics2& operator=(ITensorUInt8BitStatics2 const&) & noexcept = default;
        ITensorUInt8BitStatics2& operator=(ITensorUInt8BitStatics2&&) & noexcept = default;
    };
}
#endif
