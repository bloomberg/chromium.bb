// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Devices_Lights_Effects_1_H
#define WINRT_Windows_Devices_Lights_Effects_1_H
#include "winrt/impl/Windows.Devices.Lights.Effects.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Lights::Effects
{
    struct __declspec(empty_bases) ILampArrayBitmapEffect :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayBitmapEffect>
    {
        ILampArrayBitmapEffect(std::nullptr_t = nullptr) noexcept {}
        ILampArrayBitmapEffect(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayBitmapEffect(ILampArrayBitmapEffect const&) noexcept = default;
        ILampArrayBitmapEffect(ILampArrayBitmapEffect&&) noexcept = default;
        ILampArrayBitmapEffect& operator=(ILampArrayBitmapEffect const&) & noexcept = default;
        ILampArrayBitmapEffect& operator=(ILampArrayBitmapEffect&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayBitmapEffectFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayBitmapEffectFactory>
    {
        ILampArrayBitmapEffectFactory(std::nullptr_t = nullptr) noexcept {}
        ILampArrayBitmapEffectFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayBitmapEffectFactory(ILampArrayBitmapEffectFactory const&) noexcept = default;
        ILampArrayBitmapEffectFactory(ILampArrayBitmapEffectFactory&&) noexcept = default;
        ILampArrayBitmapEffectFactory& operator=(ILampArrayBitmapEffectFactory const&) & noexcept = default;
        ILampArrayBitmapEffectFactory& operator=(ILampArrayBitmapEffectFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayBitmapRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayBitmapRequestedEventArgs>
    {
        ILampArrayBitmapRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ILampArrayBitmapRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayBitmapRequestedEventArgs(ILampArrayBitmapRequestedEventArgs const&) noexcept = default;
        ILampArrayBitmapRequestedEventArgs(ILampArrayBitmapRequestedEventArgs&&) noexcept = default;
        ILampArrayBitmapRequestedEventArgs& operator=(ILampArrayBitmapRequestedEventArgs const&) & noexcept = default;
        ILampArrayBitmapRequestedEventArgs& operator=(ILampArrayBitmapRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayBlinkEffect :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayBlinkEffect>
    {
        ILampArrayBlinkEffect(std::nullptr_t = nullptr) noexcept {}
        ILampArrayBlinkEffect(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayBlinkEffect(ILampArrayBlinkEffect const&) noexcept = default;
        ILampArrayBlinkEffect(ILampArrayBlinkEffect&&) noexcept = default;
        ILampArrayBlinkEffect& operator=(ILampArrayBlinkEffect const&) & noexcept = default;
        ILampArrayBlinkEffect& operator=(ILampArrayBlinkEffect&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayBlinkEffectFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayBlinkEffectFactory>
    {
        ILampArrayBlinkEffectFactory(std::nullptr_t = nullptr) noexcept {}
        ILampArrayBlinkEffectFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayBlinkEffectFactory(ILampArrayBlinkEffectFactory const&) noexcept = default;
        ILampArrayBlinkEffectFactory(ILampArrayBlinkEffectFactory&&) noexcept = default;
        ILampArrayBlinkEffectFactory& operator=(ILampArrayBlinkEffectFactory const&) & noexcept = default;
        ILampArrayBlinkEffectFactory& operator=(ILampArrayBlinkEffectFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayColorRampEffect :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayColorRampEffect>
    {
        ILampArrayColorRampEffect(std::nullptr_t = nullptr) noexcept {}
        ILampArrayColorRampEffect(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayColorRampEffect(ILampArrayColorRampEffect const&) noexcept = default;
        ILampArrayColorRampEffect(ILampArrayColorRampEffect&&) noexcept = default;
        ILampArrayColorRampEffect& operator=(ILampArrayColorRampEffect const&) & noexcept = default;
        ILampArrayColorRampEffect& operator=(ILampArrayColorRampEffect&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayColorRampEffectFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayColorRampEffectFactory>
    {
        ILampArrayColorRampEffectFactory(std::nullptr_t = nullptr) noexcept {}
        ILampArrayColorRampEffectFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayColorRampEffectFactory(ILampArrayColorRampEffectFactory const&) noexcept = default;
        ILampArrayColorRampEffectFactory(ILampArrayColorRampEffectFactory&&) noexcept = default;
        ILampArrayColorRampEffectFactory& operator=(ILampArrayColorRampEffectFactory const&) & noexcept = default;
        ILampArrayColorRampEffectFactory& operator=(ILampArrayColorRampEffectFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayCustomEffect :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayCustomEffect>
    {
        ILampArrayCustomEffect(std::nullptr_t = nullptr) noexcept {}
        ILampArrayCustomEffect(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayCustomEffect(ILampArrayCustomEffect const&) noexcept = default;
        ILampArrayCustomEffect(ILampArrayCustomEffect&&) noexcept = default;
        ILampArrayCustomEffect& operator=(ILampArrayCustomEffect const&) & noexcept = default;
        ILampArrayCustomEffect& operator=(ILampArrayCustomEffect&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayCustomEffectFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayCustomEffectFactory>
    {
        ILampArrayCustomEffectFactory(std::nullptr_t = nullptr) noexcept {}
        ILampArrayCustomEffectFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayCustomEffectFactory(ILampArrayCustomEffectFactory const&) noexcept = default;
        ILampArrayCustomEffectFactory(ILampArrayCustomEffectFactory&&) noexcept = default;
        ILampArrayCustomEffectFactory& operator=(ILampArrayCustomEffectFactory const&) & noexcept = default;
        ILampArrayCustomEffectFactory& operator=(ILampArrayCustomEffectFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayEffect :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayEffect>
    {
        ILampArrayEffect(std::nullptr_t = nullptr) noexcept {}
        ILampArrayEffect(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayEffect(ILampArrayEffect const&) noexcept = default;
        ILampArrayEffect(ILampArrayEffect&&) noexcept = default;
        ILampArrayEffect& operator=(ILampArrayEffect const&) & noexcept = default;
        ILampArrayEffect& operator=(ILampArrayEffect&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayEffectPlaylist :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayEffectPlaylist>
    {
        ILampArrayEffectPlaylist(std::nullptr_t = nullptr) noexcept {}
        ILampArrayEffectPlaylist(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayEffectPlaylist(ILampArrayEffectPlaylist const&) noexcept = default;
        ILampArrayEffectPlaylist(ILampArrayEffectPlaylist&&) noexcept = default;
        ILampArrayEffectPlaylist& operator=(ILampArrayEffectPlaylist const&) & noexcept = default;
        ILampArrayEffectPlaylist& operator=(ILampArrayEffectPlaylist&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayEffectPlaylistStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayEffectPlaylistStatics>
    {
        ILampArrayEffectPlaylistStatics(std::nullptr_t = nullptr) noexcept {}
        ILampArrayEffectPlaylistStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayEffectPlaylistStatics(ILampArrayEffectPlaylistStatics const&) noexcept = default;
        ILampArrayEffectPlaylistStatics(ILampArrayEffectPlaylistStatics&&) noexcept = default;
        ILampArrayEffectPlaylistStatics& operator=(ILampArrayEffectPlaylistStatics const&) & noexcept = default;
        ILampArrayEffectPlaylistStatics& operator=(ILampArrayEffectPlaylistStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArraySolidEffect :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArraySolidEffect>
    {
        ILampArraySolidEffect(std::nullptr_t = nullptr) noexcept {}
        ILampArraySolidEffect(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArraySolidEffect(ILampArraySolidEffect const&) noexcept = default;
        ILampArraySolidEffect(ILampArraySolidEffect&&) noexcept = default;
        ILampArraySolidEffect& operator=(ILampArraySolidEffect const&) & noexcept = default;
        ILampArraySolidEffect& operator=(ILampArraySolidEffect&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArraySolidEffectFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArraySolidEffectFactory>
    {
        ILampArraySolidEffectFactory(std::nullptr_t = nullptr) noexcept {}
        ILampArraySolidEffectFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArraySolidEffectFactory(ILampArraySolidEffectFactory const&) noexcept = default;
        ILampArraySolidEffectFactory(ILampArraySolidEffectFactory&&) noexcept = default;
        ILampArraySolidEffectFactory& operator=(ILampArraySolidEffectFactory const&) & noexcept = default;
        ILampArraySolidEffectFactory& operator=(ILampArraySolidEffectFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILampArrayUpdateRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILampArrayUpdateRequestedEventArgs>
    {
        ILampArrayUpdateRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ILampArrayUpdateRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILampArrayUpdateRequestedEventArgs(ILampArrayUpdateRequestedEventArgs const&) noexcept = default;
        ILampArrayUpdateRequestedEventArgs(ILampArrayUpdateRequestedEventArgs&&) noexcept = default;
        ILampArrayUpdateRequestedEventArgs& operator=(ILampArrayUpdateRequestedEventArgs const&) & noexcept = default;
        ILampArrayUpdateRequestedEventArgs& operator=(ILampArrayUpdateRequestedEventArgs&&) & noexcept = default;
    };
}
#endif
