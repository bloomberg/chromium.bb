// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Text_1_H
#define WINRT_Windows_UI_Text_1_H
#include "winrt/impl/Windows.UI.Text.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Text
{
    struct __declspec(empty_bases) IContentLinkInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentLinkInfo>
    {
        IContentLinkInfo(std::nullptr_t = nullptr) noexcept {}
        IContentLinkInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentLinkInfo(IContentLinkInfo const&) noexcept = default;
        IContentLinkInfo(IContentLinkInfo&&) noexcept = default;
        IContentLinkInfo& operator=(IContentLinkInfo const&) & noexcept = default;
        IContentLinkInfo& operator=(IContentLinkInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontWeights :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontWeights>
    {
        IFontWeights(std::nullptr_t = nullptr) noexcept {}
        IFontWeights(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontWeights(IFontWeights const&) noexcept = default;
        IFontWeights(IFontWeights&&) noexcept = default;
        IFontWeights& operator=(IFontWeights const&) & noexcept = default;
        IFontWeights& operator=(IFontWeights&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontWeightsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontWeightsStatics>
    {
        IFontWeightsStatics(std::nullptr_t = nullptr) noexcept {}
        IFontWeightsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontWeightsStatics(IFontWeightsStatics const&) noexcept = default;
        IFontWeightsStatics(IFontWeightsStatics&&) noexcept = default;
        IFontWeightsStatics& operator=(IFontWeightsStatics const&) & noexcept = default;
        IFontWeightsStatics& operator=(IFontWeightsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditTextRange :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditTextRange>
    {
        IRichEditTextRange(std::nullptr_t = nullptr) noexcept {}
        IRichEditTextRange(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditTextRange(IRichEditTextRange const&) noexcept = default;
        IRichEditTextRange(IRichEditTextRange&&) noexcept = default;
        IRichEditTextRange& operator=(IRichEditTextRange const&) & noexcept = default;
        IRichEditTextRange& operator=(IRichEditTextRange&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextCharacterFormat :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCharacterFormat>
    {
        ITextCharacterFormat(std::nullptr_t = nullptr) noexcept {}
        ITextCharacterFormat(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextCharacterFormat(ITextCharacterFormat const&) noexcept = default;
        ITextCharacterFormat(ITextCharacterFormat&&) noexcept = default;
        ITextCharacterFormat& operator=(ITextCharacterFormat const&) & noexcept = default;
        ITextCharacterFormat& operator=(ITextCharacterFormat&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextConstantsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextConstantsStatics>
    {
        ITextConstantsStatics(std::nullptr_t = nullptr) noexcept {}
        ITextConstantsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextConstantsStatics(ITextConstantsStatics const&) noexcept = default;
        ITextConstantsStatics(ITextConstantsStatics&&) noexcept = default;
        ITextConstantsStatics& operator=(ITextConstantsStatics const&) & noexcept = default;
        ITextConstantsStatics& operator=(ITextConstantsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextDocument :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextDocument>
    {
        ITextDocument(std::nullptr_t = nullptr) noexcept {}
        ITextDocument(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextDocument(ITextDocument const&) noexcept = default;
        ITextDocument(ITextDocument&&) noexcept = default;
        ITextDocument& operator=(ITextDocument const&) & noexcept = default;
        ITextDocument& operator=(ITextDocument&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextDocument2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextDocument2>
    {
        ITextDocument2(std::nullptr_t = nullptr) noexcept {}
        ITextDocument2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextDocument2(ITextDocument2 const&) noexcept = default;
        ITextDocument2(ITextDocument2&&) noexcept = default;
        ITextDocument2& operator=(ITextDocument2 const&) & noexcept = default;
        ITextDocument2& operator=(ITextDocument2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextDocument3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextDocument3>
    {
        ITextDocument3(std::nullptr_t = nullptr) noexcept {}
        ITextDocument3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextDocument3(ITextDocument3 const&) noexcept = default;
        ITextDocument3(ITextDocument3&&) noexcept = default;
        ITextDocument3& operator=(ITextDocument3 const&) & noexcept = default;
        ITextDocument3& operator=(ITextDocument3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextDocument4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextDocument4>
    {
        ITextDocument4(std::nullptr_t = nullptr) noexcept {}
        ITextDocument4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextDocument4(ITextDocument4 const&) noexcept = default;
        ITextDocument4(ITextDocument4&&) noexcept = default;
        ITextDocument4& operator=(ITextDocument4 const&) & noexcept = default;
        ITextDocument4& operator=(ITextDocument4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextParagraphFormat :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextParagraphFormat>
    {
        ITextParagraphFormat(std::nullptr_t = nullptr) noexcept {}
        ITextParagraphFormat(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextParagraphFormat(ITextParagraphFormat const&) noexcept = default;
        ITextParagraphFormat(ITextParagraphFormat&&) noexcept = default;
        ITextParagraphFormat& operator=(ITextParagraphFormat const&) & noexcept = default;
        ITextParagraphFormat& operator=(ITextParagraphFormat&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextRange :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextRange>
    {
        ITextRange(std::nullptr_t = nullptr) noexcept {}
        ITextRange(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextRange(ITextRange const&) noexcept = default;
        ITextRange(ITextRange&&) noexcept = default;
        ITextRange& operator=(ITextRange const&) & noexcept = default;
        ITextRange& operator=(ITextRange&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextSelection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextSelection>,
        impl::require<winrt::Windows::UI::Text::ITextSelection, winrt::Windows::UI::Text::ITextRange>
    {
        ITextSelection(std::nullptr_t = nullptr) noexcept {}
        ITextSelection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextSelection(ITextSelection const&) noexcept = default;
        ITextSelection(ITextSelection&&) noexcept = default;
        ITextSelection& operator=(ITextSelection const&) & noexcept = default;
        ITextSelection& operator=(ITextSelection&&) & noexcept = default;
    };
}
#endif
