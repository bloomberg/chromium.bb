// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Networking_Vpn_2_H
#define WINRT_Windows_Networking_Vpn_2_H
#include "winrt/impl/Windows.Foundation.Collections.1.h"
#include "winrt/impl/Windows.Networking.1.h"
#include "winrt/impl/Windows.Networking.Vpn.1.h"
WINRT_EXPORT namespace winrt::Windows::Networking::Vpn
{
    struct __declspec(empty_bases) VpnAppId : winrt::Windows::Networking::Vpn::IVpnAppId
    {
        VpnAppId(std::nullptr_t) noexcept {}
        VpnAppId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnAppId(ptr, take_ownership_from_abi) {}
        VpnAppId(winrt::Windows::Networking::Vpn::VpnAppIdType const& type, param::hstring const& value);
        VpnAppId(VpnAppId const&) noexcept = default;
        VpnAppId(VpnAppId&&) noexcept = default;
        VpnAppId& operator=(VpnAppId const&) & noexcept = default;
        VpnAppId& operator=(VpnAppId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnChannel : winrt::Windows::Networking::Vpn::IVpnChannel,
        impl::require<VpnChannel, winrt::Windows::Networking::Vpn::IVpnChannel2, winrt::Windows::Networking::Vpn::IVpnChannel4>
    {
        VpnChannel(std::nullptr_t) noexcept {}
        VpnChannel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnChannel(ptr, take_ownership_from_abi) {}
        VpnChannel(VpnChannel const&) noexcept = default;
        VpnChannel(VpnChannel&&) noexcept = default;
        VpnChannel& operator=(VpnChannel const&) & noexcept = default;
        VpnChannel& operator=(VpnChannel&&) & noexcept = default;
        using impl::consume_t<VpnChannel, winrt::Windows::Networking::Vpn::IVpnChannel2>::StartWithTrafficFilter;
        using impl::consume_t<VpnChannel, winrt::Windows::Networking::Vpn::IVpnChannel4>::StartWithTrafficFilter;
        static auto ProcessEventAsync(winrt::Windows::Foundation::IInspectable const& thirdPartyPlugIn, winrt::Windows::Foundation::IInspectable const& event);
    };
    struct __declspec(empty_bases) VpnChannelActivityEventArgs : winrt::Windows::Networking::Vpn::IVpnChannelActivityEventArgs
    {
        VpnChannelActivityEventArgs(std::nullptr_t) noexcept {}
        VpnChannelActivityEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnChannelActivityEventArgs(ptr, take_ownership_from_abi) {}
        VpnChannelActivityEventArgs(VpnChannelActivityEventArgs const&) noexcept = default;
        VpnChannelActivityEventArgs(VpnChannelActivityEventArgs&&) noexcept = default;
        VpnChannelActivityEventArgs& operator=(VpnChannelActivityEventArgs const&) & noexcept = default;
        VpnChannelActivityEventArgs& operator=(VpnChannelActivityEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnChannelActivityStateChangedArgs : winrt::Windows::Networking::Vpn::IVpnChannelActivityStateChangedArgs
    {
        VpnChannelActivityStateChangedArgs(std::nullptr_t) noexcept {}
        VpnChannelActivityStateChangedArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnChannelActivityStateChangedArgs(ptr, take_ownership_from_abi) {}
        VpnChannelActivityStateChangedArgs(VpnChannelActivityStateChangedArgs const&) noexcept = default;
        VpnChannelActivityStateChangedArgs(VpnChannelActivityStateChangedArgs&&) noexcept = default;
        VpnChannelActivityStateChangedArgs& operator=(VpnChannelActivityStateChangedArgs const&) & noexcept = default;
        VpnChannelActivityStateChangedArgs& operator=(VpnChannelActivityStateChangedArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnChannelConfiguration : winrt::Windows::Networking::Vpn::IVpnChannelConfiguration,
        impl::require<VpnChannelConfiguration, winrt::Windows::Networking::Vpn::IVpnChannelConfiguration2>
    {
        VpnChannelConfiguration(std::nullptr_t) noexcept {}
        VpnChannelConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnChannelConfiguration(ptr, take_ownership_from_abi) {}
        VpnChannelConfiguration(VpnChannelConfiguration const&) noexcept = default;
        VpnChannelConfiguration(VpnChannelConfiguration&&) noexcept = default;
        VpnChannelConfiguration& operator=(VpnChannelConfiguration const&) & noexcept = default;
        VpnChannelConfiguration& operator=(VpnChannelConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnCredential : winrt::Windows::Networking::Vpn::IVpnCredential
    {
        VpnCredential(std::nullptr_t) noexcept {}
        VpnCredential(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnCredential(ptr, take_ownership_from_abi) {}
        VpnCredential(VpnCredential const&) noexcept = default;
        VpnCredential(VpnCredential&&) noexcept = default;
        VpnCredential& operator=(VpnCredential const&) & noexcept = default;
        VpnCredential& operator=(VpnCredential&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnCustomCheckBox : winrt::Windows::Networking::Vpn::IVpnCustomCheckBox
    {
        VpnCustomCheckBox(std::nullptr_t) noexcept {}
        VpnCustomCheckBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnCustomCheckBox(ptr, take_ownership_from_abi) {}
        VpnCustomCheckBox();
        VpnCustomCheckBox(VpnCustomCheckBox const&) noexcept = default;
        VpnCustomCheckBox(VpnCustomCheckBox&&) noexcept = default;
        VpnCustomCheckBox& operator=(VpnCustomCheckBox const&) & noexcept = default;
        VpnCustomCheckBox& operator=(VpnCustomCheckBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnCustomComboBox : winrt::Windows::Networking::Vpn::IVpnCustomComboBox
    {
        VpnCustomComboBox(std::nullptr_t) noexcept {}
        VpnCustomComboBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnCustomComboBox(ptr, take_ownership_from_abi) {}
        VpnCustomComboBox();
        VpnCustomComboBox(VpnCustomComboBox const&) noexcept = default;
        VpnCustomComboBox(VpnCustomComboBox&&) noexcept = default;
        VpnCustomComboBox& operator=(VpnCustomComboBox const&) & noexcept = default;
        VpnCustomComboBox& operator=(VpnCustomComboBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnCustomEditBox : winrt::Windows::Networking::Vpn::IVpnCustomEditBox
    {
        VpnCustomEditBox(std::nullptr_t) noexcept {}
        VpnCustomEditBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnCustomEditBox(ptr, take_ownership_from_abi) {}
        VpnCustomEditBox();
        VpnCustomEditBox(VpnCustomEditBox const&) noexcept = default;
        VpnCustomEditBox(VpnCustomEditBox&&) noexcept = default;
        VpnCustomEditBox& operator=(VpnCustomEditBox const&) & noexcept = default;
        VpnCustomEditBox& operator=(VpnCustomEditBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnCustomErrorBox : winrt::Windows::Networking::Vpn::IVpnCustomErrorBox
    {
        VpnCustomErrorBox(std::nullptr_t) noexcept {}
        VpnCustomErrorBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnCustomErrorBox(ptr, take_ownership_from_abi) {}
        VpnCustomErrorBox();
        VpnCustomErrorBox(VpnCustomErrorBox const&) noexcept = default;
        VpnCustomErrorBox(VpnCustomErrorBox&&) noexcept = default;
        VpnCustomErrorBox& operator=(VpnCustomErrorBox const&) & noexcept = default;
        VpnCustomErrorBox& operator=(VpnCustomErrorBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnCustomPromptBooleanInput : winrt::Windows::Networking::Vpn::IVpnCustomPromptBooleanInput
    {
        VpnCustomPromptBooleanInput(std::nullptr_t) noexcept {}
        VpnCustomPromptBooleanInput(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnCustomPromptBooleanInput(ptr, take_ownership_from_abi) {}
        VpnCustomPromptBooleanInput();
        VpnCustomPromptBooleanInput(VpnCustomPromptBooleanInput const&) noexcept = default;
        VpnCustomPromptBooleanInput(VpnCustomPromptBooleanInput&&) noexcept = default;
        VpnCustomPromptBooleanInput& operator=(VpnCustomPromptBooleanInput const&) & noexcept = default;
        VpnCustomPromptBooleanInput& operator=(VpnCustomPromptBooleanInput&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnCustomPromptOptionSelector : winrt::Windows::Networking::Vpn::IVpnCustomPromptOptionSelector
    {
        VpnCustomPromptOptionSelector(std::nullptr_t) noexcept {}
        VpnCustomPromptOptionSelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnCustomPromptOptionSelector(ptr, take_ownership_from_abi) {}
        VpnCustomPromptOptionSelector();
        VpnCustomPromptOptionSelector(VpnCustomPromptOptionSelector const&) noexcept = default;
        VpnCustomPromptOptionSelector(VpnCustomPromptOptionSelector&&) noexcept = default;
        VpnCustomPromptOptionSelector& operator=(VpnCustomPromptOptionSelector const&) & noexcept = default;
        VpnCustomPromptOptionSelector& operator=(VpnCustomPromptOptionSelector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnCustomPromptText : winrt::Windows::Networking::Vpn::IVpnCustomPromptText
    {
        VpnCustomPromptText(std::nullptr_t) noexcept {}
        VpnCustomPromptText(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnCustomPromptText(ptr, take_ownership_from_abi) {}
        VpnCustomPromptText();
        VpnCustomPromptText(VpnCustomPromptText const&) noexcept = default;
        VpnCustomPromptText(VpnCustomPromptText&&) noexcept = default;
        VpnCustomPromptText& operator=(VpnCustomPromptText const&) & noexcept = default;
        VpnCustomPromptText& operator=(VpnCustomPromptText&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnCustomPromptTextInput : winrt::Windows::Networking::Vpn::IVpnCustomPromptTextInput
    {
        VpnCustomPromptTextInput(std::nullptr_t) noexcept {}
        VpnCustomPromptTextInput(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnCustomPromptTextInput(ptr, take_ownership_from_abi) {}
        VpnCustomPromptTextInput();
        VpnCustomPromptTextInput(VpnCustomPromptTextInput const&) noexcept = default;
        VpnCustomPromptTextInput(VpnCustomPromptTextInput&&) noexcept = default;
        VpnCustomPromptTextInput& operator=(VpnCustomPromptTextInput const&) & noexcept = default;
        VpnCustomPromptTextInput& operator=(VpnCustomPromptTextInput&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnCustomTextBox : winrt::Windows::Networking::Vpn::IVpnCustomTextBox
    {
        VpnCustomTextBox(std::nullptr_t) noexcept {}
        VpnCustomTextBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnCustomTextBox(ptr, take_ownership_from_abi) {}
        VpnCustomTextBox();
        VpnCustomTextBox(VpnCustomTextBox const&) noexcept = default;
        VpnCustomTextBox(VpnCustomTextBox&&) noexcept = default;
        VpnCustomTextBox& operator=(VpnCustomTextBox const&) & noexcept = default;
        VpnCustomTextBox& operator=(VpnCustomTextBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnDomainNameAssignment : winrt::Windows::Networking::Vpn::IVpnDomainNameAssignment
    {
        VpnDomainNameAssignment(std::nullptr_t) noexcept {}
        VpnDomainNameAssignment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnDomainNameAssignment(ptr, take_ownership_from_abi) {}
        VpnDomainNameAssignment();
        VpnDomainNameAssignment(VpnDomainNameAssignment const&) noexcept = default;
        VpnDomainNameAssignment(VpnDomainNameAssignment&&) noexcept = default;
        VpnDomainNameAssignment& operator=(VpnDomainNameAssignment const&) & noexcept = default;
        VpnDomainNameAssignment& operator=(VpnDomainNameAssignment&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnDomainNameInfo : winrt::Windows::Networking::Vpn::IVpnDomainNameInfo,
        impl::require<VpnDomainNameInfo, winrt::Windows::Networking::Vpn::IVpnDomainNameInfo2>
    {
        VpnDomainNameInfo(std::nullptr_t) noexcept {}
        VpnDomainNameInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnDomainNameInfo(ptr, take_ownership_from_abi) {}
        VpnDomainNameInfo(param::hstring const& name, winrt::Windows::Networking::Vpn::VpnDomainNameType const& nameType, param::iterable<winrt::Windows::Networking::HostName> const& dnsServerList, param::iterable<winrt::Windows::Networking::HostName> const& proxyServerList);
        VpnDomainNameInfo(VpnDomainNameInfo const&) noexcept = default;
        VpnDomainNameInfo(VpnDomainNameInfo&&) noexcept = default;
        VpnDomainNameInfo& operator=(VpnDomainNameInfo const&) & noexcept = default;
        VpnDomainNameInfo& operator=(VpnDomainNameInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnInterfaceId : winrt::Windows::Networking::Vpn::IVpnInterfaceId
    {
        VpnInterfaceId(std::nullptr_t) noexcept {}
        VpnInterfaceId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnInterfaceId(ptr, take_ownership_from_abi) {}
        explicit VpnInterfaceId(array_view<uint8_t const> address);
        VpnInterfaceId(VpnInterfaceId const&) noexcept = default;
        VpnInterfaceId(VpnInterfaceId&&) noexcept = default;
        VpnInterfaceId& operator=(VpnInterfaceId const&) & noexcept = default;
        VpnInterfaceId& operator=(VpnInterfaceId&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnManagementAgent : winrt::Windows::Networking::Vpn::IVpnManagementAgent
    {
        VpnManagementAgent(std::nullptr_t) noexcept {}
        VpnManagementAgent(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnManagementAgent(ptr, take_ownership_from_abi) {}
        VpnManagementAgent();
        VpnManagementAgent(VpnManagementAgent const&) noexcept = default;
        VpnManagementAgent(VpnManagementAgent&&) noexcept = default;
        VpnManagementAgent& operator=(VpnManagementAgent const&) & noexcept = default;
        VpnManagementAgent& operator=(VpnManagementAgent&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnNamespaceAssignment : winrt::Windows::Networking::Vpn::IVpnNamespaceAssignment
    {
        VpnNamespaceAssignment(std::nullptr_t) noexcept {}
        VpnNamespaceAssignment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnNamespaceAssignment(ptr, take_ownership_from_abi) {}
        VpnNamespaceAssignment();
        VpnNamespaceAssignment(VpnNamespaceAssignment const&) noexcept = default;
        VpnNamespaceAssignment(VpnNamespaceAssignment&&) noexcept = default;
        VpnNamespaceAssignment& operator=(VpnNamespaceAssignment const&) & noexcept = default;
        VpnNamespaceAssignment& operator=(VpnNamespaceAssignment&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnNamespaceInfo : winrt::Windows::Networking::Vpn::IVpnNamespaceInfo
    {
        VpnNamespaceInfo(std::nullptr_t) noexcept {}
        VpnNamespaceInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnNamespaceInfo(ptr, take_ownership_from_abi) {}
        VpnNamespaceInfo(param::hstring const& name, param::vector<winrt::Windows::Networking::HostName> const& dnsServerList, param::vector<winrt::Windows::Networking::HostName> const& proxyServerList);
        VpnNamespaceInfo(VpnNamespaceInfo const&) noexcept = default;
        VpnNamespaceInfo(VpnNamespaceInfo&&) noexcept = default;
        VpnNamespaceInfo& operator=(VpnNamespaceInfo const&) & noexcept = default;
        VpnNamespaceInfo& operator=(VpnNamespaceInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnNativeProfile : winrt::Windows::Networking::Vpn::IVpnNativeProfile,
        impl::require<VpnNativeProfile, winrt::Windows::Networking::Vpn::IVpnNativeProfile2>
    {
        VpnNativeProfile(std::nullptr_t) noexcept {}
        VpnNativeProfile(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnNativeProfile(ptr, take_ownership_from_abi) {}
        VpnNativeProfile();
        VpnNativeProfile(VpnNativeProfile const&) noexcept = default;
        VpnNativeProfile(VpnNativeProfile&&) noexcept = default;
        VpnNativeProfile& operator=(VpnNativeProfile const&) & noexcept = default;
        VpnNativeProfile& operator=(VpnNativeProfile&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnPacketBuffer : winrt::Windows::Networking::Vpn::IVpnPacketBuffer,
        impl::require<VpnPacketBuffer, winrt::Windows::Networking::Vpn::IVpnPacketBuffer2, winrt::Windows::Networking::Vpn::IVpnPacketBuffer3>
    {
        VpnPacketBuffer(std::nullptr_t) noexcept {}
        VpnPacketBuffer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnPacketBuffer(ptr, take_ownership_from_abi) {}
        VpnPacketBuffer(winrt::Windows::Networking::Vpn::VpnPacketBuffer const& parentBuffer, uint32_t offset, uint32_t length);
        VpnPacketBuffer(VpnPacketBuffer const&) noexcept = default;
        VpnPacketBuffer(VpnPacketBuffer&&) noexcept = default;
        VpnPacketBuffer& operator=(VpnPacketBuffer const&) & noexcept = default;
        VpnPacketBuffer& operator=(VpnPacketBuffer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnPacketBufferList : winrt::Windows::Networking::Vpn::IVpnPacketBufferList
    {
        VpnPacketBufferList(std::nullptr_t) noexcept {}
        VpnPacketBufferList(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnPacketBufferList(ptr, take_ownership_from_abi) {}
        VpnPacketBufferList(VpnPacketBufferList const&) noexcept = default;
        VpnPacketBufferList(VpnPacketBufferList&&) noexcept = default;
        VpnPacketBufferList& operator=(VpnPacketBufferList const&) & noexcept = default;
        VpnPacketBufferList& operator=(VpnPacketBufferList&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnPickedCredential : winrt::Windows::Networking::Vpn::IVpnPickedCredential
    {
        VpnPickedCredential(std::nullptr_t) noexcept {}
        VpnPickedCredential(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnPickedCredential(ptr, take_ownership_from_abi) {}
        VpnPickedCredential(VpnPickedCredential const&) noexcept = default;
        VpnPickedCredential(VpnPickedCredential&&) noexcept = default;
        VpnPickedCredential& operator=(VpnPickedCredential const&) & noexcept = default;
        VpnPickedCredential& operator=(VpnPickedCredential&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnPlugInProfile : winrt::Windows::Networking::Vpn::IVpnPlugInProfile,
        impl::require<VpnPlugInProfile, winrt::Windows::Networking::Vpn::IVpnPlugInProfile2>
    {
        VpnPlugInProfile(std::nullptr_t) noexcept {}
        VpnPlugInProfile(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnPlugInProfile(ptr, take_ownership_from_abi) {}
        VpnPlugInProfile();
        VpnPlugInProfile(VpnPlugInProfile const&) noexcept = default;
        VpnPlugInProfile(VpnPlugInProfile&&) noexcept = default;
        VpnPlugInProfile& operator=(VpnPlugInProfile const&) & noexcept = default;
        VpnPlugInProfile& operator=(VpnPlugInProfile&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnRoute : winrt::Windows::Networking::Vpn::IVpnRoute
    {
        VpnRoute(std::nullptr_t) noexcept {}
        VpnRoute(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnRoute(ptr, take_ownership_from_abi) {}
        VpnRoute(winrt::Windows::Networking::HostName const& address, uint8_t prefixSize);
        VpnRoute(VpnRoute const&) noexcept = default;
        VpnRoute(VpnRoute&&) noexcept = default;
        VpnRoute& operator=(VpnRoute const&) & noexcept = default;
        VpnRoute& operator=(VpnRoute&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnRouteAssignment : winrt::Windows::Networking::Vpn::IVpnRouteAssignment
    {
        VpnRouteAssignment(std::nullptr_t) noexcept {}
        VpnRouteAssignment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnRouteAssignment(ptr, take_ownership_from_abi) {}
        VpnRouteAssignment();
        VpnRouteAssignment(VpnRouteAssignment const&) noexcept = default;
        VpnRouteAssignment(VpnRouteAssignment&&) noexcept = default;
        VpnRouteAssignment& operator=(VpnRouteAssignment const&) & noexcept = default;
        VpnRouteAssignment& operator=(VpnRouteAssignment&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnSystemHealth : winrt::Windows::Networking::Vpn::IVpnSystemHealth
    {
        VpnSystemHealth(std::nullptr_t) noexcept {}
        VpnSystemHealth(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnSystemHealth(ptr, take_ownership_from_abi) {}
        VpnSystemHealth(VpnSystemHealth const&) noexcept = default;
        VpnSystemHealth(VpnSystemHealth&&) noexcept = default;
        VpnSystemHealth& operator=(VpnSystemHealth const&) & noexcept = default;
        VpnSystemHealth& operator=(VpnSystemHealth&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnTrafficFilter : winrt::Windows::Networking::Vpn::IVpnTrafficFilter
    {
        VpnTrafficFilter(std::nullptr_t) noexcept {}
        VpnTrafficFilter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnTrafficFilter(ptr, take_ownership_from_abi) {}
        explicit VpnTrafficFilter(winrt::Windows::Networking::Vpn::VpnAppId const& appId);
        VpnTrafficFilter(VpnTrafficFilter const&) noexcept = default;
        VpnTrafficFilter(VpnTrafficFilter&&) noexcept = default;
        VpnTrafficFilter& operator=(VpnTrafficFilter const&) & noexcept = default;
        VpnTrafficFilter& operator=(VpnTrafficFilter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VpnTrafficFilterAssignment : winrt::Windows::Networking::Vpn::IVpnTrafficFilterAssignment
    {
        VpnTrafficFilterAssignment(std::nullptr_t) noexcept {}
        VpnTrafficFilterAssignment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::Vpn::IVpnTrafficFilterAssignment(ptr, take_ownership_from_abi) {}
        VpnTrafficFilterAssignment();
        VpnTrafficFilterAssignment(VpnTrafficFilterAssignment const&) noexcept = default;
        VpnTrafficFilterAssignment(VpnTrafficFilterAssignment&&) noexcept = default;
        VpnTrafficFilterAssignment& operator=(VpnTrafficFilterAssignment const&) & noexcept = default;
        VpnTrafficFilterAssignment& operator=(VpnTrafficFilterAssignment&&) & noexcept = default;
    };
}
#endif
