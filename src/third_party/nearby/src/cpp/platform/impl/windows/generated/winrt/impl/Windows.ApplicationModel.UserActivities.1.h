// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_UserActivities_1_H
#define WINRT_Windows_ApplicationModel_UserActivities_1_H
#include "winrt/impl/Windows.ApplicationModel.UserActivities.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::UserActivities
{
    struct __declspec(empty_bases) IUserActivity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivity>
    {
        IUserActivity(std::nullptr_t = nullptr) noexcept {}
        IUserActivity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivity(IUserActivity const&) noexcept = default;
        IUserActivity(IUserActivity&&) noexcept = default;
        IUserActivity& operator=(IUserActivity const&) & noexcept = default;
        IUserActivity& operator=(IUserActivity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivity2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivity2>
    {
        IUserActivity2(std::nullptr_t = nullptr) noexcept {}
        IUserActivity2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivity2(IUserActivity2 const&) noexcept = default;
        IUserActivity2(IUserActivity2&&) noexcept = default;
        IUserActivity2& operator=(IUserActivity2 const&) & noexcept = default;
        IUserActivity2& operator=(IUserActivity2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivity3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivity3>
    {
        IUserActivity3(std::nullptr_t = nullptr) noexcept {}
        IUserActivity3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivity3(IUserActivity3 const&) noexcept = default;
        IUserActivity3(IUserActivity3&&) noexcept = default;
        IUserActivity3& operator=(IUserActivity3 const&) & noexcept = default;
        IUserActivity3& operator=(IUserActivity3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityAttribution :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityAttribution>
    {
        IUserActivityAttribution(std::nullptr_t = nullptr) noexcept {}
        IUserActivityAttribution(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityAttribution(IUserActivityAttribution const&) noexcept = default;
        IUserActivityAttribution(IUserActivityAttribution&&) noexcept = default;
        IUserActivityAttribution& operator=(IUserActivityAttribution const&) & noexcept = default;
        IUserActivityAttribution& operator=(IUserActivityAttribution&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityAttributionFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityAttributionFactory>
    {
        IUserActivityAttributionFactory(std::nullptr_t = nullptr) noexcept {}
        IUserActivityAttributionFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityAttributionFactory(IUserActivityAttributionFactory const&) noexcept = default;
        IUserActivityAttributionFactory(IUserActivityAttributionFactory&&) noexcept = default;
        IUserActivityAttributionFactory& operator=(IUserActivityAttributionFactory const&) & noexcept = default;
        IUserActivityAttributionFactory& operator=(IUserActivityAttributionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityChannel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityChannel>
    {
        IUserActivityChannel(std::nullptr_t = nullptr) noexcept {}
        IUserActivityChannel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityChannel(IUserActivityChannel const&) noexcept = default;
        IUserActivityChannel(IUserActivityChannel&&) noexcept = default;
        IUserActivityChannel& operator=(IUserActivityChannel const&) & noexcept = default;
        IUserActivityChannel& operator=(IUserActivityChannel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityChannel2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityChannel2>
    {
        IUserActivityChannel2(std::nullptr_t = nullptr) noexcept {}
        IUserActivityChannel2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityChannel2(IUserActivityChannel2 const&) noexcept = default;
        IUserActivityChannel2(IUserActivityChannel2&&) noexcept = default;
        IUserActivityChannel2& operator=(IUserActivityChannel2 const&) & noexcept = default;
        IUserActivityChannel2& operator=(IUserActivityChannel2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityChannelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityChannelStatics>
    {
        IUserActivityChannelStatics(std::nullptr_t = nullptr) noexcept {}
        IUserActivityChannelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityChannelStatics(IUserActivityChannelStatics const&) noexcept = default;
        IUserActivityChannelStatics(IUserActivityChannelStatics&&) noexcept = default;
        IUserActivityChannelStatics& operator=(IUserActivityChannelStatics const&) & noexcept = default;
        IUserActivityChannelStatics& operator=(IUserActivityChannelStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityChannelStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityChannelStatics2>
    {
        IUserActivityChannelStatics2(std::nullptr_t = nullptr) noexcept {}
        IUserActivityChannelStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityChannelStatics2(IUserActivityChannelStatics2 const&) noexcept = default;
        IUserActivityChannelStatics2(IUserActivityChannelStatics2&&) noexcept = default;
        IUserActivityChannelStatics2& operator=(IUserActivityChannelStatics2 const&) & noexcept = default;
        IUserActivityChannelStatics2& operator=(IUserActivityChannelStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityChannelStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityChannelStatics3>
    {
        IUserActivityChannelStatics3(std::nullptr_t = nullptr) noexcept {}
        IUserActivityChannelStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityChannelStatics3(IUserActivityChannelStatics3 const&) noexcept = default;
        IUserActivityChannelStatics3(IUserActivityChannelStatics3&&) noexcept = default;
        IUserActivityChannelStatics3& operator=(IUserActivityChannelStatics3 const&) & noexcept = default;
        IUserActivityChannelStatics3& operator=(IUserActivityChannelStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityContentInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityContentInfo>
    {
        IUserActivityContentInfo(std::nullptr_t = nullptr) noexcept {}
        IUserActivityContentInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityContentInfo(IUserActivityContentInfo const&) noexcept = default;
        IUserActivityContentInfo(IUserActivityContentInfo&&) noexcept = default;
        IUserActivityContentInfo& operator=(IUserActivityContentInfo const&) & noexcept = default;
        IUserActivityContentInfo& operator=(IUserActivityContentInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityContentInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityContentInfoStatics>
    {
        IUserActivityContentInfoStatics(std::nullptr_t = nullptr) noexcept {}
        IUserActivityContentInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityContentInfoStatics(IUserActivityContentInfoStatics const&) noexcept = default;
        IUserActivityContentInfoStatics(IUserActivityContentInfoStatics&&) noexcept = default;
        IUserActivityContentInfoStatics& operator=(IUserActivityContentInfoStatics const&) & noexcept = default;
        IUserActivityContentInfoStatics& operator=(IUserActivityContentInfoStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityFactory>
    {
        IUserActivityFactory(std::nullptr_t = nullptr) noexcept {}
        IUserActivityFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityFactory(IUserActivityFactory const&) noexcept = default;
        IUserActivityFactory(IUserActivityFactory&&) noexcept = default;
        IUserActivityFactory& operator=(IUserActivityFactory const&) & noexcept = default;
        IUserActivityFactory& operator=(IUserActivityFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityRequest>
    {
        IUserActivityRequest(std::nullptr_t = nullptr) noexcept {}
        IUserActivityRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityRequest(IUserActivityRequest const&) noexcept = default;
        IUserActivityRequest(IUserActivityRequest&&) noexcept = default;
        IUserActivityRequest& operator=(IUserActivityRequest const&) & noexcept = default;
        IUserActivityRequest& operator=(IUserActivityRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityRequestManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityRequestManager>
    {
        IUserActivityRequestManager(std::nullptr_t = nullptr) noexcept {}
        IUserActivityRequestManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityRequestManager(IUserActivityRequestManager const&) noexcept = default;
        IUserActivityRequestManager(IUserActivityRequestManager&&) noexcept = default;
        IUserActivityRequestManager& operator=(IUserActivityRequestManager const&) & noexcept = default;
        IUserActivityRequestManager& operator=(IUserActivityRequestManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityRequestManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityRequestManagerStatics>
    {
        IUserActivityRequestManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IUserActivityRequestManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityRequestManagerStatics(IUserActivityRequestManagerStatics const&) noexcept = default;
        IUserActivityRequestManagerStatics(IUserActivityRequestManagerStatics&&) noexcept = default;
        IUserActivityRequestManagerStatics& operator=(IUserActivityRequestManagerStatics const&) & noexcept = default;
        IUserActivityRequestManagerStatics& operator=(IUserActivityRequestManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityRequestedEventArgs>
    {
        IUserActivityRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUserActivityRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityRequestedEventArgs(IUserActivityRequestedEventArgs const&) noexcept = default;
        IUserActivityRequestedEventArgs(IUserActivityRequestedEventArgs&&) noexcept = default;
        IUserActivityRequestedEventArgs& operator=(IUserActivityRequestedEventArgs const&) & noexcept = default;
        IUserActivityRequestedEventArgs& operator=(IUserActivityRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivitySession :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivitySession>
    {
        IUserActivitySession(std::nullptr_t = nullptr) noexcept {}
        IUserActivitySession(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivitySession(IUserActivitySession const&) noexcept = default;
        IUserActivitySession(IUserActivitySession&&) noexcept = default;
        IUserActivitySession& operator=(IUserActivitySession const&) & noexcept = default;
        IUserActivitySession& operator=(IUserActivitySession&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivitySessionHistoryItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivitySessionHistoryItem>
    {
        IUserActivitySessionHistoryItem(std::nullptr_t = nullptr) noexcept {}
        IUserActivitySessionHistoryItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivitySessionHistoryItem(IUserActivitySessionHistoryItem const&) noexcept = default;
        IUserActivitySessionHistoryItem(IUserActivitySessionHistoryItem&&) noexcept = default;
        IUserActivitySessionHistoryItem& operator=(IUserActivitySessionHistoryItem const&) & noexcept = default;
        IUserActivitySessionHistoryItem& operator=(IUserActivitySessionHistoryItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityStatics>
    {
        IUserActivityStatics(std::nullptr_t = nullptr) noexcept {}
        IUserActivityStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityStatics(IUserActivityStatics const&) noexcept = default;
        IUserActivityStatics(IUserActivityStatics&&) noexcept = default;
        IUserActivityStatics& operator=(IUserActivityStatics const&) & noexcept = default;
        IUserActivityStatics& operator=(IUserActivityStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityVisualElements :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityVisualElements>
    {
        IUserActivityVisualElements(std::nullptr_t = nullptr) noexcept {}
        IUserActivityVisualElements(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityVisualElements(IUserActivityVisualElements const&) noexcept = default;
        IUserActivityVisualElements(IUserActivityVisualElements&&) noexcept = default;
        IUserActivityVisualElements& operator=(IUserActivityVisualElements const&) & noexcept = default;
        IUserActivityVisualElements& operator=(IUserActivityVisualElements&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserActivityVisualElements2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserActivityVisualElements2>
    {
        IUserActivityVisualElements2(std::nullptr_t = nullptr) noexcept {}
        IUserActivityVisualElements2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserActivityVisualElements2(IUserActivityVisualElements2 const&) noexcept = default;
        IUserActivityVisualElements2(IUserActivityVisualElements2&&) noexcept = default;
        IUserActivityVisualElements2& operator=(IUserActivityVisualElements2 const&) & noexcept = default;
        IUserActivityVisualElements2& operator=(IUserActivityVisualElements2&&) & noexcept = default;
    };
}
#endif
