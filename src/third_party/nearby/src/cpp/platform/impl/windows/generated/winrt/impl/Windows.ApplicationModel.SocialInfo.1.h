// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_SocialInfo_1_H
#define WINRT_Windows_ApplicationModel_SocialInfo_1_H
#include "winrt/impl/Windows.ApplicationModel.SocialInfo.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::SocialInfo
{
    struct __declspec(empty_bases) ISocialFeedChildItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISocialFeedChildItem>
    {
        ISocialFeedChildItem(std::nullptr_t = nullptr) noexcept {}
        ISocialFeedChildItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISocialFeedChildItem(ISocialFeedChildItem const&) noexcept = default;
        ISocialFeedChildItem(ISocialFeedChildItem&&) noexcept = default;
        ISocialFeedChildItem& operator=(ISocialFeedChildItem const&) & noexcept = default;
        ISocialFeedChildItem& operator=(ISocialFeedChildItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISocialFeedContent :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISocialFeedContent>
    {
        ISocialFeedContent(std::nullptr_t = nullptr) noexcept {}
        ISocialFeedContent(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISocialFeedContent(ISocialFeedContent const&) noexcept = default;
        ISocialFeedContent(ISocialFeedContent&&) noexcept = default;
        ISocialFeedContent& operator=(ISocialFeedContent const&) & noexcept = default;
        ISocialFeedContent& operator=(ISocialFeedContent&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISocialFeedItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISocialFeedItem>
    {
        ISocialFeedItem(std::nullptr_t = nullptr) noexcept {}
        ISocialFeedItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISocialFeedItem(ISocialFeedItem const&) noexcept = default;
        ISocialFeedItem(ISocialFeedItem&&) noexcept = default;
        ISocialFeedItem& operator=(ISocialFeedItem const&) & noexcept = default;
        ISocialFeedItem& operator=(ISocialFeedItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISocialFeedSharedItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISocialFeedSharedItem>
    {
        ISocialFeedSharedItem(std::nullptr_t = nullptr) noexcept {}
        ISocialFeedSharedItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISocialFeedSharedItem(ISocialFeedSharedItem const&) noexcept = default;
        ISocialFeedSharedItem(ISocialFeedSharedItem&&) noexcept = default;
        ISocialFeedSharedItem& operator=(ISocialFeedSharedItem const&) & noexcept = default;
        ISocialFeedSharedItem& operator=(ISocialFeedSharedItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISocialItemThumbnail :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISocialItemThumbnail>
    {
        ISocialItemThumbnail(std::nullptr_t = nullptr) noexcept {}
        ISocialItemThumbnail(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISocialItemThumbnail(ISocialItemThumbnail const&) noexcept = default;
        ISocialItemThumbnail(ISocialItemThumbnail&&) noexcept = default;
        ISocialItemThumbnail& operator=(ISocialItemThumbnail const&) & noexcept = default;
        ISocialItemThumbnail& operator=(ISocialItemThumbnail&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISocialUserInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISocialUserInfo>
    {
        ISocialUserInfo(std::nullptr_t = nullptr) noexcept {}
        ISocialUserInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISocialUserInfo(ISocialUserInfo const&) noexcept = default;
        ISocialUserInfo(ISocialUserInfo&&) noexcept = default;
        ISocialUserInfo& operator=(ISocialUserInfo const&) & noexcept = default;
        ISocialUserInfo& operator=(ISocialUserInfo&&) & noexcept = default;
    };
}
#endif
