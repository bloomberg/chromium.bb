// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Xaml_Automation_Peers_1_H
#define WINRT_Windows_UI_Xaml_Automation_Peers_1_H
#include "winrt/impl/Windows.UI.Xaml.Automation.Peers.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Automation::Peers
{
    struct __declspec(empty_bases) IAppBarAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarAutomationPeer>
    {
        IAppBarAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAppBarAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarAutomationPeer(IAppBarAutomationPeer const&) noexcept = default;
        IAppBarAutomationPeer(IAppBarAutomationPeer&&) noexcept = default;
        IAppBarAutomationPeer& operator=(IAppBarAutomationPeer const&) & noexcept = default;
        IAppBarAutomationPeer& operator=(IAppBarAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarAutomationPeerFactory>
    {
        IAppBarAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarAutomationPeerFactory(IAppBarAutomationPeerFactory const&) noexcept = default;
        IAppBarAutomationPeerFactory(IAppBarAutomationPeerFactory&&) noexcept = default;
        IAppBarAutomationPeerFactory& operator=(IAppBarAutomationPeerFactory const&) & noexcept = default;
        IAppBarAutomationPeerFactory& operator=(IAppBarAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonAutomationPeer>
    {
        IAppBarButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButtonAutomationPeer(IAppBarButtonAutomationPeer const&) noexcept = default;
        IAppBarButtonAutomationPeer(IAppBarButtonAutomationPeer&&) noexcept = default;
        IAppBarButtonAutomationPeer& operator=(IAppBarButtonAutomationPeer const&) & noexcept = default;
        IAppBarButtonAutomationPeer& operator=(IAppBarButtonAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonAutomationPeerFactory>
    {
        IAppBarButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButtonAutomationPeerFactory(IAppBarButtonAutomationPeerFactory const&) noexcept = default;
        IAppBarButtonAutomationPeerFactory(IAppBarButtonAutomationPeerFactory&&) noexcept = default;
        IAppBarButtonAutomationPeerFactory& operator=(IAppBarButtonAutomationPeerFactory const&) & noexcept = default;
        IAppBarButtonAutomationPeerFactory& operator=(IAppBarButtonAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonAutomationPeer>
    {
        IAppBarToggleButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButtonAutomationPeer(IAppBarToggleButtonAutomationPeer const&) noexcept = default;
        IAppBarToggleButtonAutomationPeer(IAppBarToggleButtonAutomationPeer&&) noexcept = default;
        IAppBarToggleButtonAutomationPeer& operator=(IAppBarToggleButtonAutomationPeer const&) & noexcept = default;
        IAppBarToggleButtonAutomationPeer& operator=(IAppBarToggleButtonAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonAutomationPeerFactory>
    {
        IAppBarToggleButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButtonAutomationPeerFactory(IAppBarToggleButtonAutomationPeerFactory const&) noexcept = default;
        IAppBarToggleButtonAutomationPeerFactory(IAppBarToggleButtonAutomationPeerFactory&&) noexcept = default;
        IAppBarToggleButtonAutomationPeerFactory& operator=(IAppBarToggleButtonAutomationPeerFactory const&) & noexcept = default;
        IAppBarToggleButtonAutomationPeerFactory& operator=(IAppBarToggleButtonAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxAutomationPeer>
    {
        IAutoSuggestBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBoxAutomationPeer(IAutoSuggestBoxAutomationPeer const&) noexcept = default;
        IAutoSuggestBoxAutomationPeer(IAutoSuggestBoxAutomationPeer&&) noexcept = default;
        IAutoSuggestBoxAutomationPeer& operator=(IAutoSuggestBoxAutomationPeer const&) & noexcept = default;
        IAutoSuggestBoxAutomationPeer& operator=(IAutoSuggestBoxAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxAutomationPeerFactory>
    {
        IAutoSuggestBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBoxAutomationPeerFactory(IAutoSuggestBoxAutomationPeerFactory const&) noexcept = default;
        IAutoSuggestBoxAutomationPeerFactory(IAutoSuggestBoxAutomationPeerFactory&&) noexcept = default;
        IAutoSuggestBoxAutomationPeerFactory& operator=(IAutoSuggestBoxAutomationPeerFactory const&) & noexcept = default;
        IAutoSuggestBoxAutomationPeerFactory& operator=(IAutoSuggestBoxAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeer>
    {
        IAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeer(IAutomationPeer const&) noexcept = default;
        IAutomationPeer(IAutomationPeer&&) noexcept = default;
        IAutomationPeer& operator=(IAutomationPeer const&) & noexcept = default;
        IAutomationPeer& operator=(IAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeer2>
    {
        IAutomationPeer2(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeer2(IAutomationPeer2 const&) noexcept = default;
        IAutomationPeer2(IAutomationPeer2&&) noexcept = default;
        IAutomationPeer2& operator=(IAutomationPeer2 const&) & noexcept = default;
        IAutomationPeer2& operator=(IAutomationPeer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeer3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeer3>
    {
        IAutomationPeer3(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeer3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeer3(IAutomationPeer3 const&) noexcept = default;
        IAutomationPeer3(IAutomationPeer3&&) noexcept = default;
        IAutomationPeer3& operator=(IAutomationPeer3 const&) & noexcept = default;
        IAutomationPeer3& operator=(IAutomationPeer3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeer4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeer4>
    {
        IAutomationPeer4(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeer4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeer4(IAutomationPeer4 const&) noexcept = default;
        IAutomationPeer4(IAutomationPeer4&&) noexcept = default;
        IAutomationPeer4& operator=(IAutomationPeer4 const&) & noexcept = default;
        IAutomationPeer4& operator=(IAutomationPeer4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeer5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeer5>
    {
        IAutomationPeer5(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeer5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeer5(IAutomationPeer5 const&) noexcept = default;
        IAutomationPeer5(IAutomationPeer5&&) noexcept = default;
        IAutomationPeer5& operator=(IAutomationPeer5 const&) & noexcept = default;
        IAutomationPeer5& operator=(IAutomationPeer5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeer6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeer6>
    {
        IAutomationPeer6(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeer6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeer6(IAutomationPeer6 const&) noexcept = default;
        IAutomationPeer6(IAutomationPeer6&&) noexcept = default;
        IAutomationPeer6& operator=(IAutomationPeer6 const&) & noexcept = default;
        IAutomationPeer6& operator=(IAutomationPeer6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeer7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeer7>
    {
        IAutomationPeer7(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeer7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeer7(IAutomationPeer7 const&) noexcept = default;
        IAutomationPeer7(IAutomationPeer7&&) noexcept = default;
        IAutomationPeer7& operator=(IAutomationPeer7 const&) & noexcept = default;
        IAutomationPeer7& operator=(IAutomationPeer7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeer8 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeer8>
    {
        IAutomationPeer8(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeer8(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeer8(IAutomationPeer8 const&) noexcept = default;
        IAutomationPeer8(IAutomationPeer8&&) noexcept = default;
        IAutomationPeer8& operator=(IAutomationPeer8 const&) & noexcept = default;
        IAutomationPeer8& operator=(IAutomationPeer8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeer9 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeer9>
    {
        IAutomationPeer9(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeer9(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeer9(IAutomationPeer9 const&) noexcept = default;
        IAutomationPeer9(IAutomationPeer9&&) noexcept = default;
        IAutomationPeer9& operator=(IAutomationPeer9 const&) & noexcept = default;
        IAutomationPeer9& operator=(IAutomationPeer9&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerAnnotation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerAnnotation>
    {
        IAutomationPeerAnnotation(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerAnnotation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerAnnotation(IAutomationPeerAnnotation const&) noexcept = default;
        IAutomationPeerAnnotation(IAutomationPeerAnnotation&&) noexcept = default;
        IAutomationPeerAnnotation& operator=(IAutomationPeerAnnotation const&) & noexcept = default;
        IAutomationPeerAnnotation& operator=(IAutomationPeerAnnotation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerAnnotationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerAnnotationFactory>
    {
        IAutomationPeerAnnotationFactory(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerAnnotationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerAnnotationFactory(IAutomationPeerAnnotationFactory const&) noexcept = default;
        IAutomationPeerAnnotationFactory(IAutomationPeerAnnotationFactory&&) noexcept = default;
        IAutomationPeerAnnotationFactory& operator=(IAutomationPeerAnnotationFactory const&) & noexcept = default;
        IAutomationPeerAnnotationFactory& operator=(IAutomationPeerAnnotationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerAnnotationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerAnnotationStatics>
    {
        IAutomationPeerAnnotationStatics(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerAnnotationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerAnnotationStatics(IAutomationPeerAnnotationStatics const&) noexcept = default;
        IAutomationPeerAnnotationStatics(IAutomationPeerAnnotationStatics&&) noexcept = default;
        IAutomationPeerAnnotationStatics& operator=(IAutomationPeerAnnotationStatics const&) & noexcept = default;
        IAutomationPeerAnnotationStatics& operator=(IAutomationPeerAnnotationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerFactory>
    {
        IAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerFactory(IAutomationPeerFactory const&) noexcept = default;
        IAutomationPeerFactory(IAutomationPeerFactory&&) noexcept = default;
        IAutomationPeerFactory& operator=(IAutomationPeerFactory const&) & noexcept = default;
        IAutomationPeerFactory& operator=(IAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerOverrides>
    {
        IAutomationPeerOverrides(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerOverrides(IAutomationPeerOverrides const&) noexcept = default;
        IAutomationPeerOverrides(IAutomationPeerOverrides&&) noexcept = default;
        IAutomationPeerOverrides& operator=(IAutomationPeerOverrides const&) & noexcept = default;
        IAutomationPeerOverrides& operator=(IAutomationPeerOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerOverrides2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerOverrides2>
    {
        IAutomationPeerOverrides2(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerOverrides2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerOverrides2(IAutomationPeerOverrides2 const&) noexcept = default;
        IAutomationPeerOverrides2(IAutomationPeerOverrides2&&) noexcept = default;
        IAutomationPeerOverrides2& operator=(IAutomationPeerOverrides2 const&) & noexcept = default;
        IAutomationPeerOverrides2& operator=(IAutomationPeerOverrides2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerOverrides3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerOverrides3>
    {
        IAutomationPeerOverrides3(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerOverrides3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerOverrides3(IAutomationPeerOverrides3 const&) noexcept = default;
        IAutomationPeerOverrides3(IAutomationPeerOverrides3&&) noexcept = default;
        IAutomationPeerOverrides3& operator=(IAutomationPeerOverrides3 const&) & noexcept = default;
        IAutomationPeerOverrides3& operator=(IAutomationPeerOverrides3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerOverrides4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerOverrides4>
    {
        IAutomationPeerOverrides4(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerOverrides4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerOverrides4(IAutomationPeerOverrides4 const&) noexcept = default;
        IAutomationPeerOverrides4(IAutomationPeerOverrides4&&) noexcept = default;
        IAutomationPeerOverrides4& operator=(IAutomationPeerOverrides4 const&) & noexcept = default;
        IAutomationPeerOverrides4& operator=(IAutomationPeerOverrides4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerOverrides5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerOverrides5>
    {
        IAutomationPeerOverrides5(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerOverrides5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerOverrides5(IAutomationPeerOverrides5 const&) noexcept = default;
        IAutomationPeerOverrides5(IAutomationPeerOverrides5&&) noexcept = default;
        IAutomationPeerOverrides5& operator=(IAutomationPeerOverrides5 const&) & noexcept = default;
        IAutomationPeerOverrides5& operator=(IAutomationPeerOverrides5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerOverrides6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerOverrides6>
    {
        IAutomationPeerOverrides6(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerOverrides6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerOverrides6(IAutomationPeerOverrides6 const&) noexcept = default;
        IAutomationPeerOverrides6(IAutomationPeerOverrides6&&) noexcept = default;
        IAutomationPeerOverrides6& operator=(IAutomationPeerOverrides6 const&) & noexcept = default;
        IAutomationPeerOverrides6& operator=(IAutomationPeerOverrides6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerOverrides8 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerOverrides8>
    {
        IAutomationPeerOverrides8(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerOverrides8(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerOverrides8(IAutomationPeerOverrides8 const&) noexcept = default;
        IAutomationPeerOverrides8(IAutomationPeerOverrides8&&) noexcept = default;
        IAutomationPeerOverrides8& operator=(IAutomationPeerOverrides8 const&) & noexcept = default;
        IAutomationPeerOverrides8& operator=(IAutomationPeerOverrides8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerOverrides9 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerOverrides9>
    {
        IAutomationPeerOverrides9(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerOverrides9(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerOverrides9(IAutomationPeerOverrides9 const&) noexcept = default;
        IAutomationPeerOverrides9(IAutomationPeerOverrides9&&) noexcept = default;
        IAutomationPeerOverrides9& operator=(IAutomationPeerOverrides9 const&) & noexcept = default;
        IAutomationPeerOverrides9& operator=(IAutomationPeerOverrides9&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerProtected :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerProtected>
    {
        IAutomationPeerProtected(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerProtected(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerProtected(IAutomationPeerProtected const&) noexcept = default;
        IAutomationPeerProtected(IAutomationPeerProtected&&) noexcept = default;
        IAutomationPeerProtected& operator=(IAutomationPeerProtected const&) & noexcept = default;
        IAutomationPeerProtected& operator=(IAutomationPeerProtected&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerStatics>
    {
        IAutomationPeerStatics(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerStatics(IAutomationPeerStatics const&) noexcept = default;
        IAutomationPeerStatics(IAutomationPeerStatics&&) noexcept = default;
        IAutomationPeerStatics& operator=(IAutomationPeerStatics const&) & noexcept = default;
        IAutomationPeerStatics& operator=(IAutomationPeerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutomationPeerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerStatics3>
    {
        IAutomationPeerStatics3(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutomationPeerStatics3(IAutomationPeerStatics3 const&) noexcept = default;
        IAutomationPeerStatics3(IAutomationPeerStatics3&&) noexcept = default;
        IAutomationPeerStatics3& operator=(IAutomationPeerStatics3 const&) & noexcept = default;
        IAutomationPeerStatics3& operator=(IAutomationPeerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonAutomationPeer>
    {
        IButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButtonAutomationPeer(IButtonAutomationPeer const&) noexcept = default;
        IButtonAutomationPeer(IButtonAutomationPeer&&) noexcept = default;
        IButtonAutomationPeer& operator=(IButtonAutomationPeer const&) & noexcept = default;
        IButtonAutomationPeer& operator=(IButtonAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonAutomationPeerFactory>
    {
        IButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButtonAutomationPeerFactory(IButtonAutomationPeerFactory const&) noexcept = default;
        IButtonAutomationPeerFactory(IButtonAutomationPeerFactory&&) noexcept = default;
        IButtonAutomationPeerFactory& operator=(IButtonAutomationPeerFactory const&) & noexcept = default;
        IButtonAutomationPeerFactory& operator=(IButtonAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButtonBaseAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonBaseAutomationPeer>
    {
        IButtonBaseAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IButtonBaseAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButtonBaseAutomationPeer(IButtonBaseAutomationPeer const&) noexcept = default;
        IButtonBaseAutomationPeer(IButtonBaseAutomationPeer&&) noexcept = default;
        IButtonBaseAutomationPeer& operator=(IButtonBaseAutomationPeer const&) & noexcept = default;
        IButtonBaseAutomationPeer& operator=(IButtonBaseAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButtonBaseAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonBaseAutomationPeerFactory>
    {
        IButtonBaseAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IButtonBaseAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButtonBaseAutomationPeerFactory(IButtonBaseAutomationPeerFactory const&) noexcept = default;
        IButtonBaseAutomationPeerFactory(IButtonBaseAutomationPeerFactory&&) noexcept = default;
        IButtonBaseAutomationPeerFactory& operator=(IButtonBaseAutomationPeerFactory const&) & noexcept = default;
        IButtonBaseAutomationPeerFactory& operator=(IButtonBaseAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarDatePickerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerAutomationPeer>
    {
        ICalendarDatePickerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarDatePickerAutomationPeer(ICalendarDatePickerAutomationPeer const&) noexcept = default;
        ICalendarDatePickerAutomationPeer(ICalendarDatePickerAutomationPeer&&) noexcept = default;
        ICalendarDatePickerAutomationPeer& operator=(ICalendarDatePickerAutomationPeer const&) & noexcept = default;
        ICalendarDatePickerAutomationPeer& operator=(ICalendarDatePickerAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarDatePickerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerAutomationPeerFactory>
    {
        ICalendarDatePickerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarDatePickerAutomationPeerFactory(ICalendarDatePickerAutomationPeerFactory const&) noexcept = default;
        ICalendarDatePickerAutomationPeerFactory(ICalendarDatePickerAutomationPeerFactory&&) noexcept = default;
        ICalendarDatePickerAutomationPeerFactory& operator=(ICalendarDatePickerAutomationPeerFactory const&) & noexcept = default;
        ICalendarDatePickerAutomationPeerFactory& operator=(ICalendarDatePickerAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICaptureElementAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICaptureElementAutomationPeer>
    {
        ICaptureElementAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ICaptureElementAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICaptureElementAutomationPeer(ICaptureElementAutomationPeer const&) noexcept = default;
        ICaptureElementAutomationPeer(ICaptureElementAutomationPeer&&) noexcept = default;
        ICaptureElementAutomationPeer& operator=(ICaptureElementAutomationPeer const&) & noexcept = default;
        ICaptureElementAutomationPeer& operator=(ICaptureElementAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICaptureElementAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICaptureElementAutomationPeerFactory>
    {
        ICaptureElementAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ICaptureElementAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICaptureElementAutomationPeerFactory(ICaptureElementAutomationPeerFactory const&) noexcept = default;
        ICaptureElementAutomationPeerFactory(ICaptureElementAutomationPeerFactory&&) noexcept = default;
        ICaptureElementAutomationPeerFactory& operator=(ICaptureElementAutomationPeerFactory const&) & noexcept = default;
        ICaptureElementAutomationPeerFactory& operator=(ICaptureElementAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICheckBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICheckBoxAutomationPeer>
    {
        ICheckBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ICheckBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICheckBoxAutomationPeer(ICheckBoxAutomationPeer const&) noexcept = default;
        ICheckBoxAutomationPeer(ICheckBoxAutomationPeer&&) noexcept = default;
        ICheckBoxAutomationPeer& operator=(ICheckBoxAutomationPeer const&) & noexcept = default;
        ICheckBoxAutomationPeer& operator=(ICheckBoxAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICheckBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICheckBoxAutomationPeerFactory>
    {
        ICheckBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ICheckBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICheckBoxAutomationPeerFactory(ICheckBoxAutomationPeerFactory const&) noexcept = default;
        ICheckBoxAutomationPeerFactory(ICheckBoxAutomationPeerFactory&&) noexcept = default;
        ICheckBoxAutomationPeerFactory& operator=(ICheckBoxAutomationPeerFactory const&) & noexcept = default;
        ICheckBoxAutomationPeerFactory& operator=(ICheckBoxAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorPickerSliderAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerSliderAutomationPeer>
    {
        IColorPickerSliderAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IColorPickerSliderAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorPickerSliderAutomationPeer(IColorPickerSliderAutomationPeer const&) noexcept = default;
        IColorPickerSliderAutomationPeer(IColorPickerSliderAutomationPeer&&) noexcept = default;
        IColorPickerSliderAutomationPeer& operator=(IColorPickerSliderAutomationPeer const&) & noexcept = default;
        IColorPickerSliderAutomationPeer& operator=(IColorPickerSliderAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorPickerSliderAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerSliderAutomationPeerFactory>
    {
        IColorPickerSliderAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IColorPickerSliderAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorPickerSliderAutomationPeerFactory(IColorPickerSliderAutomationPeerFactory const&) noexcept = default;
        IColorPickerSliderAutomationPeerFactory(IColorPickerSliderAutomationPeerFactory&&) noexcept = default;
        IColorPickerSliderAutomationPeerFactory& operator=(IColorPickerSliderAutomationPeerFactory const&) & noexcept = default;
        IColorPickerSliderAutomationPeerFactory& operator=(IColorPickerSliderAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorSpectrumAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorSpectrumAutomationPeer>
    {
        IColorSpectrumAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IColorSpectrumAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorSpectrumAutomationPeer(IColorSpectrumAutomationPeer const&) noexcept = default;
        IColorSpectrumAutomationPeer(IColorSpectrumAutomationPeer&&) noexcept = default;
        IColorSpectrumAutomationPeer& operator=(IColorSpectrumAutomationPeer const&) & noexcept = default;
        IColorSpectrumAutomationPeer& operator=(IColorSpectrumAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorSpectrumAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorSpectrumAutomationPeerFactory>
    {
        IColorSpectrumAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IColorSpectrumAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorSpectrumAutomationPeerFactory(IColorSpectrumAutomationPeerFactory const&) noexcept = default;
        IColorSpectrumAutomationPeerFactory(IColorSpectrumAutomationPeerFactory&&) noexcept = default;
        IColorSpectrumAutomationPeerFactory& operator=(IColorSpectrumAutomationPeerFactory const&) & noexcept = default;
        IColorSpectrumAutomationPeerFactory& operator=(IColorSpectrumAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxAutomationPeer>
    {
        IComboBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IComboBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxAutomationPeer(IComboBoxAutomationPeer const&) noexcept = default;
        IComboBoxAutomationPeer(IComboBoxAutomationPeer&&) noexcept = default;
        IComboBoxAutomationPeer& operator=(IComboBoxAutomationPeer const&) & noexcept = default;
        IComboBoxAutomationPeer& operator=(IComboBoxAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxAutomationPeerFactory>
    {
        IComboBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IComboBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxAutomationPeerFactory(IComboBoxAutomationPeerFactory const&) noexcept = default;
        IComboBoxAutomationPeerFactory(IComboBoxAutomationPeerFactory&&) noexcept = default;
        IComboBoxAutomationPeerFactory& operator=(IComboBoxAutomationPeerFactory const&) & noexcept = default;
        IComboBoxAutomationPeerFactory& operator=(IComboBoxAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItemAutomationPeer>
    {
        IComboBoxItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxItemAutomationPeer(IComboBoxItemAutomationPeer const&) noexcept = default;
        IComboBoxItemAutomationPeer(IComboBoxItemAutomationPeer&&) noexcept = default;
        IComboBoxItemAutomationPeer& operator=(IComboBoxItemAutomationPeer const&) & noexcept = default;
        IComboBoxItemAutomationPeer& operator=(IComboBoxItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItemAutomationPeerFactory>
    {
        IComboBoxItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxItemAutomationPeerFactory(IComboBoxItemAutomationPeerFactory const&) noexcept = default;
        IComboBoxItemAutomationPeerFactory(IComboBoxItemAutomationPeerFactory&&) noexcept = default;
        IComboBoxItemAutomationPeerFactory& operator=(IComboBoxItemAutomationPeerFactory const&) & noexcept = default;
        IComboBoxItemAutomationPeerFactory& operator=(IComboBoxItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItemDataAutomationPeer>
    {
        IComboBoxItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxItemDataAutomationPeer(IComboBoxItemDataAutomationPeer const&) noexcept = default;
        IComboBoxItemDataAutomationPeer(IComboBoxItemDataAutomationPeer&&) noexcept = default;
        IComboBoxItemDataAutomationPeer& operator=(IComboBoxItemDataAutomationPeer const&) & noexcept = default;
        IComboBoxItemDataAutomationPeer& operator=(IComboBoxItemDataAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItemDataAutomationPeerFactory>
    {
        IComboBoxItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxItemDataAutomationPeerFactory(IComboBoxItemDataAutomationPeerFactory const&) noexcept = default;
        IComboBoxItemDataAutomationPeerFactory(IComboBoxItemDataAutomationPeerFactory&&) noexcept = default;
        IComboBoxItemDataAutomationPeerFactory& operator=(IComboBoxItemDataAutomationPeerFactory const&) & noexcept = default;
        IComboBoxItemDataAutomationPeerFactory& operator=(IComboBoxItemDataAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerAutomationPeer>
    {
        IDatePickerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IDatePickerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerAutomationPeer(IDatePickerAutomationPeer const&) noexcept = default;
        IDatePickerAutomationPeer(IDatePickerAutomationPeer&&) noexcept = default;
        IDatePickerAutomationPeer& operator=(IDatePickerAutomationPeer const&) & noexcept = default;
        IDatePickerAutomationPeer& operator=(IDatePickerAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerAutomationPeerFactory>
    {
        IDatePickerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IDatePickerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerAutomationPeerFactory(IDatePickerAutomationPeerFactory const&) noexcept = default;
        IDatePickerAutomationPeerFactory(IDatePickerAutomationPeerFactory&&) noexcept = default;
        IDatePickerAutomationPeerFactory& operator=(IDatePickerAutomationPeerFactory const&) & noexcept = default;
        IDatePickerAutomationPeerFactory& operator=(IDatePickerAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutPresenterAutomationPeer>
    {
        IDatePickerFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFlyoutPresenterAutomationPeer(IDatePickerFlyoutPresenterAutomationPeer const&) noexcept = default;
        IDatePickerFlyoutPresenterAutomationPeer(IDatePickerFlyoutPresenterAutomationPeer&&) noexcept = default;
        IDatePickerFlyoutPresenterAutomationPeer& operator=(IDatePickerFlyoutPresenterAutomationPeer const&) & noexcept = default;
        IDatePickerFlyoutPresenterAutomationPeer& operator=(IDatePickerFlyoutPresenterAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipViewAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewAutomationPeer>
    {
        IFlipViewAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IFlipViewAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipViewAutomationPeer(IFlipViewAutomationPeer const&) noexcept = default;
        IFlipViewAutomationPeer(IFlipViewAutomationPeer&&) noexcept = default;
        IFlipViewAutomationPeer& operator=(IFlipViewAutomationPeer const&) & noexcept = default;
        IFlipViewAutomationPeer& operator=(IFlipViewAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipViewAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewAutomationPeerFactory>
    {
        IFlipViewAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IFlipViewAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipViewAutomationPeerFactory(IFlipViewAutomationPeerFactory const&) noexcept = default;
        IFlipViewAutomationPeerFactory(IFlipViewAutomationPeerFactory&&) noexcept = default;
        IFlipViewAutomationPeerFactory& operator=(IFlipViewAutomationPeerFactory const&) & noexcept = default;
        IFlipViewAutomationPeerFactory& operator=(IFlipViewAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItemAutomationPeer>
    {
        IFlipViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipViewItemAutomationPeer(IFlipViewItemAutomationPeer const&) noexcept = default;
        IFlipViewItemAutomationPeer(IFlipViewItemAutomationPeer&&) noexcept = default;
        IFlipViewItemAutomationPeer& operator=(IFlipViewItemAutomationPeer const&) & noexcept = default;
        IFlipViewItemAutomationPeer& operator=(IFlipViewItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItemAutomationPeerFactory>
    {
        IFlipViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipViewItemAutomationPeerFactory(IFlipViewItemAutomationPeerFactory const&) noexcept = default;
        IFlipViewItemAutomationPeerFactory(IFlipViewItemAutomationPeerFactory&&) noexcept = default;
        IFlipViewItemAutomationPeerFactory& operator=(IFlipViewItemAutomationPeerFactory const&) & noexcept = default;
        IFlipViewItemAutomationPeerFactory& operator=(IFlipViewItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipViewItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItemDataAutomationPeer>
    {
        IFlipViewItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipViewItemDataAutomationPeer(IFlipViewItemDataAutomationPeer const&) noexcept = default;
        IFlipViewItemDataAutomationPeer(IFlipViewItemDataAutomationPeer&&) noexcept = default;
        IFlipViewItemDataAutomationPeer& operator=(IFlipViewItemDataAutomationPeer const&) & noexcept = default;
        IFlipViewItemDataAutomationPeer& operator=(IFlipViewItemDataAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipViewItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItemDataAutomationPeerFactory>
    {
        IFlipViewItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipViewItemDataAutomationPeerFactory(IFlipViewItemDataAutomationPeerFactory const&) noexcept = default;
        IFlipViewItemDataAutomationPeerFactory(IFlipViewItemDataAutomationPeerFactory&&) noexcept = default;
        IFlipViewItemDataAutomationPeerFactory& operator=(IFlipViewItemDataAutomationPeerFactory const&) & noexcept = default;
        IFlipViewItemDataAutomationPeerFactory& operator=(IFlipViewItemDataAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenterAutomationPeer>
    {
        IFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutPresenterAutomationPeer(IFlyoutPresenterAutomationPeer const&) noexcept = default;
        IFlyoutPresenterAutomationPeer(IFlyoutPresenterAutomationPeer&&) noexcept = default;
        IFlyoutPresenterAutomationPeer& operator=(IFlyoutPresenterAutomationPeer const&) & noexcept = default;
        IFlyoutPresenterAutomationPeer& operator=(IFlyoutPresenterAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutPresenterAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenterAutomationPeerFactory>
    {
        IFlyoutPresenterAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenterAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutPresenterAutomationPeerFactory(IFlyoutPresenterAutomationPeerFactory const&) noexcept = default;
        IFlyoutPresenterAutomationPeerFactory(IFlyoutPresenterAutomationPeerFactory&&) noexcept = default;
        IFlyoutPresenterAutomationPeerFactory& operator=(IFlyoutPresenterAutomationPeerFactory const&) & noexcept = default;
        IFlyoutPresenterAutomationPeerFactory& operator=(IFlyoutPresenterAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementAutomationPeer>
    {
        IFrameworkElementAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementAutomationPeer(IFrameworkElementAutomationPeer const&) noexcept = default;
        IFrameworkElementAutomationPeer(IFrameworkElementAutomationPeer&&) noexcept = default;
        IFrameworkElementAutomationPeer& operator=(IFrameworkElementAutomationPeer const&) & noexcept = default;
        IFrameworkElementAutomationPeer& operator=(IFrameworkElementAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementAutomationPeerFactory>
    {
        IFrameworkElementAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementAutomationPeerFactory(IFrameworkElementAutomationPeerFactory const&) noexcept = default;
        IFrameworkElementAutomationPeerFactory(IFrameworkElementAutomationPeerFactory&&) noexcept = default;
        IFrameworkElementAutomationPeerFactory& operator=(IFrameworkElementAutomationPeerFactory const&) & noexcept = default;
        IFrameworkElementAutomationPeerFactory& operator=(IFrameworkElementAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkElementAutomationPeerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementAutomationPeerStatics>
    {
        IFrameworkElementAutomationPeerStatics(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementAutomationPeerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkElementAutomationPeerStatics(IFrameworkElementAutomationPeerStatics const&) noexcept = default;
        IFrameworkElementAutomationPeerStatics(IFrameworkElementAutomationPeerStatics&&) noexcept = default;
        IFrameworkElementAutomationPeerStatics& operator=(IFrameworkElementAutomationPeerStatics const&) & noexcept = default;
        IFrameworkElementAutomationPeerStatics& operator=(IFrameworkElementAutomationPeerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewAutomationPeer>
    {
        IGridViewAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IGridViewAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewAutomationPeer(IGridViewAutomationPeer const&) noexcept = default;
        IGridViewAutomationPeer(IGridViewAutomationPeer&&) noexcept = default;
        IGridViewAutomationPeer& operator=(IGridViewAutomationPeer const&) & noexcept = default;
        IGridViewAutomationPeer& operator=(IGridViewAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewAutomationPeerFactory>
    {
        IGridViewAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewAutomationPeerFactory(IGridViewAutomationPeerFactory const&) noexcept = default;
        IGridViewAutomationPeerFactory(IGridViewAutomationPeerFactory&&) noexcept = default;
        IGridViewAutomationPeerFactory& operator=(IGridViewAutomationPeerFactory const&) & noexcept = default;
        IGridViewAutomationPeerFactory& operator=(IGridViewAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewHeaderItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewHeaderItemAutomationPeer>
    {
        IGridViewHeaderItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IGridViewHeaderItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewHeaderItemAutomationPeer(IGridViewHeaderItemAutomationPeer const&) noexcept = default;
        IGridViewHeaderItemAutomationPeer(IGridViewHeaderItemAutomationPeer&&) noexcept = default;
        IGridViewHeaderItemAutomationPeer& operator=(IGridViewHeaderItemAutomationPeer const&) & noexcept = default;
        IGridViewHeaderItemAutomationPeer& operator=(IGridViewHeaderItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewHeaderItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewHeaderItemAutomationPeerFactory>
    {
        IGridViewHeaderItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewHeaderItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewHeaderItemAutomationPeerFactory(IGridViewHeaderItemAutomationPeerFactory const&) noexcept = default;
        IGridViewHeaderItemAutomationPeerFactory(IGridViewHeaderItemAutomationPeerFactory&&) noexcept = default;
        IGridViewHeaderItemAutomationPeerFactory& operator=(IGridViewHeaderItemAutomationPeerFactory const&) & noexcept = default;
        IGridViewHeaderItemAutomationPeerFactory& operator=(IGridViewHeaderItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemAutomationPeer>
    {
        IGridViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewItemAutomationPeer(IGridViewItemAutomationPeer const&) noexcept = default;
        IGridViewItemAutomationPeer(IGridViewItemAutomationPeer&&) noexcept = default;
        IGridViewItemAutomationPeer& operator=(IGridViewItemAutomationPeer const&) & noexcept = default;
        IGridViewItemAutomationPeer& operator=(IGridViewItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemAutomationPeerFactory>
    {
        IGridViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewItemAutomationPeerFactory(IGridViewItemAutomationPeerFactory const&) noexcept = default;
        IGridViewItemAutomationPeerFactory(IGridViewItemAutomationPeerFactory&&) noexcept = default;
        IGridViewItemAutomationPeerFactory& operator=(IGridViewItemAutomationPeerFactory const&) & noexcept = default;
        IGridViewItemAutomationPeerFactory& operator=(IGridViewItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemDataAutomationPeer>
    {
        IGridViewItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewItemDataAutomationPeer(IGridViewItemDataAutomationPeer const&) noexcept = default;
        IGridViewItemDataAutomationPeer(IGridViewItemDataAutomationPeer&&) noexcept = default;
        IGridViewItemDataAutomationPeer& operator=(IGridViewItemDataAutomationPeer const&) & noexcept = default;
        IGridViewItemDataAutomationPeer& operator=(IGridViewItemDataAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemDataAutomationPeerFactory>
    {
        IGridViewItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewItemDataAutomationPeerFactory(IGridViewItemDataAutomationPeerFactory const&) noexcept = default;
        IGridViewItemDataAutomationPeerFactory(IGridViewItemDataAutomationPeerFactory&&) noexcept = default;
        IGridViewItemDataAutomationPeerFactory& operator=(IGridViewItemDataAutomationPeerFactory const&) & noexcept = default;
        IGridViewItemDataAutomationPeerFactory& operator=(IGridViewItemDataAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGroupItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupItemAutomationPeer>
    {
        IGroupItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IGroupItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGroupItemAutomationPeer(IGroupItemAutomationPeer const&) noexcept = default;
        IGroupItemAutomationPeer(IGroupItemAutomationPeer&&) noexcept = default;
        IGroupItemAutomationPeer& operator=(IGroupItemAutomationPeer const&) & noexcept = default;
        IGroupItemAutomationPeer& operator=(IGroupItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGroupItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupItemAutomationPeerFactory>
    {
        IGroupItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IGroupItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGroupItemAutomationPeerFactory(IGroupItemAutomationPeerFactory const&) noexcept = default;
        IGroupItemAutomationPeerFactory(IGroupItemAutomationPeerFactory&&) noexcept = default;
        IGroupItemAutomationPeerFactory& operator=(IGroupItemAutomationPeerFactory const&) & noexcept = default;
        IGroupItemAutomationPeerFactory& operator=(IGroupItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHubAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubAutomationPeer>
    {
        IHubAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IHubAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHubAutomationPeer(IHubAutomationPeer const&) noexcept = default;
        IHubAutomationPeer(IHubAutomationPeer&&) noexcept = default;
        IHubAutomationPeer& operator=(IHubAutomationPeer const&) & noexcept = default;
        IHubAutomationPeer& operator=(IHubAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHubAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubAutomationPeerFactory>
    {
        IHubAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IHubAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHubAutomationPeerFactory(IHubAutomationPeerFactory const&) noexcept = default;
        IHubAutomationPeerFactory(IHubAutomationPeerFactory&&) noexcept = default;
        IHubAutomationPeerFactory& operator=(IHubAutomationPeerFactory const&) & noexcept = default;
        IHubAutomationPeerFactory& operator=(IHubAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHubSectionAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSectionAutomationPeer>
    {
        IHubSectionAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IHubSectionAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHubSectionAutomationPeer(IHubSectionAutomationPeer const&) noexcept = default;
        IHubSectionAutomationPeer(IHubSectionAutomationPeer&&) noexcept = default;
        IHubSectionAutomationPeer& operator=(IHubSectionAutomationPeer const&) & noexcept = default;
        IHubSectionAutomationPeer& operator=(IHubSectionAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHubSectionAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSectionAutomationPeerFactory>
    {
        IHubSectionAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IHubSectionAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHubSectionAutomationPeerFactory(IHubSectionAutomationPeerFactory const&) noexcept = default;
        IHubSectionAutomationPeerFactory(IHubSectionAutomationPeerFactory&&) noexcept = default;
        IHubSectionAutomationPeerFactory& operator=(IHubSectionAutomationPeerFactory const&) & noexcept = default;
        IHubSectionAutomationPeerFactory& operator=(IHubSectionAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkButtonAutomationPeer>
    {
        IHyperlinkButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkButtonAutomationPeer(IHyperlinkButtonAutomationPeer const&) noexcept = default;
        IHyperlinkButtonAutomationPeer(IHyperlinkButtonAutomationPeer&&) noexcept = default;
        IHyperlinkButtonAutomationPeer& operator=(IHyperlinkButtonAutomationPeer const&) & noexcept = default;
        IHyperlinkButtonAutomationPeer& operator=(IHyperlinkButtonAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkButtonAutomationPeerFactory>
    {
        IHyperlinkButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkButtonAutomationPeerFactory(IHyperlinkButtonAutomationPeerFactory const&) noexcept = default;
        IHyperlinkButtonAutomationPeerFactory(IHyperlinkButtonAutomationPeerFactory&&) noexcept = default;
        IHyperlinkButtonAutomationPeerFactory& operator=(IHyperlinkButtonAutomationPeerFactory const&) & noexcept = default;
        IHyperlinkButtonAutomationPeerFactory& operator=(IHyperlinkButtonAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IImageAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageAutomationPeer>
    {
        IImageAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IImageAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImageAutomationPeer(IImageAutomationPeer const&) noexcept = default;
        IImageAutomationPeer(IImageAutomationPeer&&) noexcept = default;
        IImageAutomationPeer& operator=(IImageAutomationPeer const&) & noexcept = default;
        IImageAutomationPeer& operator=(IImageAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IImageAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageAutomationPeerFactory>
    {
        IImageAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IImageAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImageAutomationPeerFactory(IImageAutomationPeerFactory const&) noexcept = default;
        IImageAutomationPeerFactory(IImageAutomationPeerFactory&&) noexcept = default;
        IImageAutomationPeerFactory& operator=(IImageAutomationPeerFactory const&) & noexcept = default;
        IImageAutomationPeerFactory& operator=(IImageAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarAutomationPeer>
    {
        IInkToolbarAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarAutomationPeer(IInkToolbarAutomationPeer const&) noexcept = default;
        IInkToolbarAutomationPeer(IInkToolbarAutomationPeer&&) noexcept = default;
        IInkToolbarAutomationPeer& operator=(IInkToolbarAutomationPeer const&) & noexcept = default;
        IInkToolbarAutomationPeer& operator=(IInkToolbarAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemAutomationPeer>
    {
        IItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemAutomationPeer(IItemAutomationPeer const&) noexcept = default;
        IItemAutomationPeer(IItemAutomationPeer&&) noexcept = default;
        IItemAutomationPeer& operator=(IItemAutomationPeer const&) & noexcept = default;
        IItemAutomationPeer& operator=(IItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemAutomationPeerFactory>
    {
        IItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemAutomationPeerFactory(IItemAutomationPeerFactory const&) noexcept = default;
        IItemAutomationPeerFactory(IItemAutomationPeerFactory&&) noexcept = default;
        IItemAutomationPeerFactory& operator=(IItemAutomationPeerFactory const&) & noexcept = default;
        IItemAutomationPeerFactory& operator=(IItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsControlAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlAutomationPeer>
    {
        IItemsControlAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IItemsControlAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsControlAutomationPeer(IItemsControlAutomationPeer const&) noexcept = default;
        IItemsControlAutomationPeer(IItemsControlAutomationPeer&&) noexcept = default;
        IItemsControlAutomationPeer& operator=(IItemsControlAutomationPeer const&) & noexcept = default;
        IItemsControlAutomationPeer& operator=(IItemsControlAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsControlAutomationPeer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlAutomationPeer2>
    {
        IItemsControlAutomationPeer2(std::nullptr_t = nullptr) noexcept {}
        IItemsControlAutomationPeer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsControlAutomationPeer2(IItemsControlAutomationPeer2 const&) noexcept = default;
        IItemsControlAutomationPeer2(IItemsControlAutomationPeer2&&) noexcept = default;
        IItemsControlAutomationPeer2& operator=(IItemsControlAutomationPeer2 const&) & noexcept = default;
        IItemsControlAutomationPeer2& operator=(IItemsControlAutomationPeer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsControlAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlAutomationPeerFactory>
    {
        IItemsControlAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IItemsControlAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsControlAutomationPeerFactory(IItemsControlAutomationPeerFactory const&) noexcept = default;
        IItemsControlAutomationPeerFactory(IItemsControlAutomationPeerFactory&&) noexcept = default;
        IItemsControlAutomationPeerFactory& operator=(IItemsControlAutomationPeerFactory const&) & noexcept = default;
        IItemsControlAutomationPeerFactory& operator=(IItemsControlAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsControlAutomationPeerOverrides2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlAutomationPeerOverrides2>
    {
        IItemsControlAutomationPeerOverrides2(std::nullptr_t = nullptr) noexcept {}
        IItemsControlAutomationPeerOverrides2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsControlAutomationPeerOverrides2(IItemsControlAutomationPeerOverrides2 const&) noexcept = default;
        IItemsControlAutomationPeerOverrides2(IItemsControlAutomationPeerOverrides2&&) noexcept = default;
        IItemsControlAutomationPeerOverrides2& operator=(IItemsControlAutomationPeerOverrides2 const&) & noexcept = default;
        IItemsControlAutomationPeerOverrides2& operator=(IItemsControlAutomationPeerOverrides2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxAutomationPeer>
    {
        IListBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxAutomationPeer(IListBoxAutomationPeer const&) noexcept = default;
        IListBoxAutomationPeer(IListBoxAutomationPeer&&) noexcept = default;
        IListBoxAutomationPeer& operator=(IListBoxAutomationPeer const&) & noexcept = default;
        IListBoxAutomationPeer& operator=(IListBoxAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxAutomationPeerFactory>
    {
        IListBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxAutomationPeerFactory(IListBoxAutomationPeerFactory const&) noexcept = default;
        IListBoxAutomationPeerFactory(IListBoxAutomationPeerFactory&&) noexcept = default;
        IListBoxAutomationPeerFactory& operator=(IListBoxAutomationPeerFactory const&) & noexcept = default;
        IListBoxAutomationPeerFactory& operator=(IListBoxAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItemAutomationPeer>
    {
        IListBoxItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListBoxItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxItemAutomationPeer(IListBoxItemAutomationPeer const&) noexcept = default;
        IListBoxItemAutomationPeer(IListBoxItemAutomationPeer&&) noexcept = default;
        IListBoxItemAutomationPeer& operator=(IListBoxItemAutomationPeer const&) & noexcept = default;
        IListBoxItemAutomationPeer& operator=(IListBoxItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItemAutomationPeerFactory>
    {
        IListBoxItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListBoxItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxItemAutomationPeerFactory(IListBoxItemAutomationPeerFactory const&) noexcept = default;
        IListBoxItemAutomationPeerFactory(IListBoxItemAutomationPeerFactory&&) noexcept = default;
        IListBoxItemAutomationPeerFactory& operator=(IListBoxItemAutomationPeerFactory const&) & noexcept = default;
        IListBoxItemAutomationPeerFactory& operator=(IListBoxItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItemDataAutomationPeer>
    {
        IListBoxItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListBoxItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxItemDataAutomationPeer(IListBoxItemDataAutomationPeer const&) noexcept = default;
        IListBoxItemDataAutomationPeer(IListBoxItemDataAutomationPeer&&) noexcept = default;
        IListBoxItemDataAutomationPeer& operator=(IListBoxItemDataAutomationPeer const&) & noexcept = default;
        IListBoxItemDataAutomationPeer& operator=(IListBoxItemDataAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItemDataAutomationPeerFactory>
    {
        IListBoxItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListBoxItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxItemDataAutomationPeerFactory(IListBoxItemDataAutomationPeerFactory const&) noexcept = default;
        IListBoxItemDataAutomationPeerFactory(IListBoxItemDataAutomationPeerFactory&&) noexcept = default;
        IListBoxItemDataAutomationPeerFactory& operator=(IListBoxItemDataAutomationPeerFactory const&) & noexcept = default;
        IListBoxItemDataAutomationPeerFactory& operator=(IListBoxItemDataAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListPickerFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListPickerFlyoutPresenterAutomationPeer>
    {
        IListPickerFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListPickerFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListPickerFlyoutPresenterAutomationPeer(IListPickerFlyoutPresenterAutomationPeer const&) noexcept = default;
        IListPickerFlyoutPresenterAutomationPeer(IListPickerFlyoutPresenterAutomationPeer&&) noexcept = default;
        IListPickerFlyoutPresenterAutomationPeer& operator=(IListPickerFlyoutPresenterAutomationPeer const&) & noexcept = default;
        IListPickerFlyoutPresenterAutomationPeer& operator=(IListPickerFlyoutPresenterAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewAutomationPeer>
    {
        IListViewAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewAutomationPeer(IListViewAutomationPeer const&) noexcept = default;
        IListViewAutomationPeer(IListViewAutomationPeer&&) noexcept = default;
        IListViewAutomationPeer& operator=(IListViewAutomationPeer const&) & noexcept = default;
        IListViewAutomationPeer& operator=(IListViewAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewAutomationPeerFactory>
    {
        IListViewAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewAutomationPeerFactory(IListViewAutomationPeerFactory const&) noexcept = default;
        IListViewAutomationPeerFactory(IListViewAutomationPeerFactory&&) noexcept = default;
        IListViewAutomationPeerFactory& operator=(IListViewAutomationPeerFactory const&) & noexcept = default;
        IListViewAutomationPeerFactory& operator=(IListViewAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseAutomationPeer>
    {
        IListViewBaseAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseAutomationPeer(IListViewBaseAutomationPeer const&) noexcept = default;
        IListViewBaseAutomationPeer(IListViewBaseAutomationPeer&&) noexcept = default;
        IListViewBaseAutomationPeer& operator=(IListViewBaseAutomationPeer const&) & noexcept = default;
        IListViewBaseAutomationPeer& operator=(IListViewBaseAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseAutomationPeerFactory>
    {
        IListViewBaseAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseAutomationPeerFactory(IListViewBaseAutomationPeerFactory const&) noexcept = default;
        IListViewBaseAutomationPeerFactory(IListViewBaseAutomationPeerFactory&&) noexcept = default;
        IListViewBaseAutomationPeerFactory& operator=(IListViewBaseAutomationPeerFactory const&) & noexcept = default;
        IListViewBaseAutomationPeerFactory& operator=(IListViewBaseAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseHeaderItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseHeaderItemAutomationPeer>
    {
        IListViewBaseHeaderItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseHeaderItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseHeaderItemAutomationPeer(IListViewBaseHeaderItemAutomationPeer const&) noexcept = default;
        IListViewBaseHeaderItemAutomationPeer(IListViewBaseHeaderItemAutomationPeer&&) noexcept = default;
        IListViewBaseHeaderItemAutomationPeer& operator=(IListViewBaseHeaderItemAutomationPeer const&) & noexcept = default;
        IListViewBaseHeaderItemAutomationPeer& operator=(IListViewBaseHeaderItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseHeaderItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseHeaderItemAutomationPeerFactory>
    {
        IListViewBaseHeaderItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseHeaderItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseHeaderItemAutomationPeerFactory(IListViewBaseHeaderItemAutomationPeerFactory const&) noexcept = default;
        IListViewBaseHeaderItemAutomationPeerFactory(IListViewBaseHeaderItemAutomationPeerFactory&&) noexcept = default;
        IListViewBaseHeaderItemAutomationPeerFactory& operator=(IListViewBaseHeaderItemAutomationPeerFactory const&) & noexcept = default;
        IListViewBaseHeaderItemAutomationPeerFactory& operator=(IListViewBaseHeaderItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewHeaderItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewHeaderItemAutomationPeer>
    {
        IListViewHeaderItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewHeaderItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewHeaderItemAutomationPeer(IListViewHeaderItemAutomationPeer const&) noexcept = default;
        IListViewHeaderItemAutomationPeer(IListViewHeaderItemAutomationPeer&&) noexcept = default;
        IListViewHeaderItemAutomationPeer& operator=(IListViewHeaderItemAutomationPeer const&) & noexcept = default;
        IListViewHeaderItemAutomationPeer& operator=(IListViewHeaderItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewHeaderItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewHeaderItemAutomationPeerFactory>
    {
        IListViewHeaderItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewHeaderItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewHeaderItemAutomationPeerFactory(IListViewHeaderItemAutomationPeerFactory const&) noexcept = default;
        IListViewHeaderItemAutomationPeerFactory(IListViewHeaderItemAutomationPeerFactory&&) noexcept = default;
        IListViewHeaderItemAutomationPeerFactory& operator=(IListViewHeaderItemAutomationPeerFactory const&) & noexcept = default;
        IListViewHeaderItemAutomationPeerFactory& operator=(IListViewHeaderItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemAutomationPeer>
    {
        IListViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemAutomationPeer(IListViewItemAutomationPeer const&) noexcept = default;
        IListViewItemAutomationPeer(IListViewItemAutomationPeer&&) noexcept = default;
        IListViewItemAutomationPeer& operator=(IListViewItemAutomationPeer const&) & noexcept = default;
        IListViewItemAutomationPeer& operator=(IListViewItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemAutomationPeerFactory>
    {
        IListViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemAutomationPeerFactory(IListViewItemAutomationPeerFactory const&) noexcept = default;
        IListViewItemAutomationPeerFactory(IListViewItemAutomationPeerFactory&&) noexcept = default;
        IListViewItemAutomationPeerFactory& operator=(IListViewItemAutomationPeerFactory const&) & noexcept = default;
        IListViewItemAutomationPeerFactory& operator=(IListViewItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemDataAutomationPeer>
    {
        IListViewItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemDataAutomationPeer(IListViewItemDataAutomationPeer const&) noexcept = default;
        IListViewItemDataAutomationPeer(IListViewItemDataAutomationPeer&&) noexcept = default;
        IListViewItemDataAutomationPeer& operator=(IListViewItemDataAutomationPeer const&) & noexcept = default;
        IListViewItemDataAutomationPeer& operator=(IListViewItemDataAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemDataAutomationPeerFactory>
    {
        IListViewItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemDataAutomationPeerFactory(IListViewItemDataAutomationPeerFactory const&) noexcept = default;
        IListViewItemDataAutomationPeerFactory(IListViewItemDataAutomationPeerFactory&&) noexcept = default;
        IListViewItemDataAutomationPeerFactory& operator=(IListViewItemDataAutomationPeerFactory const&) & noexcept = default;
        IListViewItemDataAutomationPeerFactory& operator=(IListViewItemDataAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILoopingSelectorAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILoopingSelectorAutomationPeer>
    {
        ILoopingSelectorAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ILoopingSelectorAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILoopingSelectorAutomationPeer(ILoopingSelectorAutomationPeer const&) noexcept = default;
        ILoopingSelectorAutomationPeer(ILoopingSelectorAutomationPeer&&) noexcept = default;
        ILoopingSelectorAutomationPeer& operator=(ILoopingSelectorAutomationPeer const&) & noexcept = default;
        ILoopingSelectorAutomationPeer& operator=(ILoopingSelectorAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILoopingSelectorItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILoopingSelectorItemAutomationPeer>
    {
        ILoopingSelectorItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ILoopingSelectorItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILoopingSelectorItemAutomationPeer(ILoopingSelectorItemAutomationPeer const&) noexcept = default;
        ILoopingSelectorItemAutomationPeer(ILoopingSelectorItemAutomationPeer&&) noexcept = default;
        ILoopingSelectorItemAutomationPeer& operator=(ILoopingSelectorItemAutomationPeer const&) & noexcept = default;
        ILoopingSelectorItemAutomationPeer& operator=(ILoopingSelectorItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILoopingSelectorItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILoopingSelectorItemDataAutomationPeer>
    {
        ILoopingSelectorItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ILoopingSelectorItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILoopingSelectorItemDataAutomationPeer(ILoopingSelectorItemDataAutomationPeer const&) noexcept = default;
        ILoopingSelectorItemDataAutomationPeer(ILoopingSelectorItemDataAutomationPeer&&) noexcept = default;
        ILoopingSelectorItemDataAutomationPeer& operator=(ILoopingSelectorItemDataAutomationPeer const&) & noexcept = default;
        ILoopingSelectorItemDataAutomationPeer& operator=(ILoopingSelectorItemDataAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlAutomationPeer>
    {
        IMapControlAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMapControlAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlAutomationPeer(IMapControlAutomationPeer const&) noexcept = default;
        IMapControlAutomationPeer(IMapControlAutomationPeer&&) noexcept = default;
        IMapControlAutomationPeer& operator=(IMapControlAutomationPeer const&) & noexcept = default;
        IMapControlAutomationPeer& operator=(IMapControlAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaElementAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaElementAutomationPeer>
    {
        IMediaElementAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMediaElementAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaElementAutomationPeer(IMediaElementAutomationPeer const&) noexcept = default;
        IMediaElementAutomationPeer(IMediaElementAutomationPeer&&) noexcept = default;
        IMediaElementAutomationPeer& operator=(IMediaElementAutomationPeer const&) & noexcept = default;
        IMediaElementAutomationPeer& operator=(IMediaElementAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaElementAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaElementAutomationPeerFactory>
    {
        IMediaElementAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaElementAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaElementAutomationPeerFactory(IMediaElementAutomationPeerFactory const&) noexcept = default;
        IMediaElementAutomationPeerFactory(IMediaElementAutomationPeerFactory&&) noexcept = default;
        IMediaElementAutomationPeerFactory& operator=(IMediaElementAutomationPeerFactory const&) & noexcept = default;
        IMediaElementAutomationPeerFactory& operator=(IMediaElementAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaPlayerElementAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerElementAutomationPeer>
    {
        IMediaPlayerElementAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerElementAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaPlayerElementAutomationPeer(IMediaPlayerElementAutomationPeer const&) noexcept = default;
        IMediaPlayerElementAutomationPeer(IMediaPlayerElementAutomationPeer&&) noexcept = default;
        IMediaPlayerElementAutomationPeer& operator=(IMediaPlayerElementAutomationPeer const&) & noexcept = default;
        IMediaPlayerElementAutomationPeer& operator=(IMediaPlayerElementAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaPlayerElementAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerElementAutomationPeerFactory>
    {
        IMediaPlayerElementAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerElementAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaPlayerElementAutomationPeerFactory(IMediaPlayerElementAutomationPeerFactory const&) noexcept = default;
        IMediaPlayerElementAutomationPeerFactory(IMediaPlayerElementAutomationPeerFactory&&) noexcept = default;
        IMediaPlayerElementAutomationPeerFactory& operator=(IMediaPlayerElementAutomationPeerFactory const&) & noexcept = default;
        IMediaPlayerElementAutomationPeerFactory& operator=(IMediaPlayerElementAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControlsAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsAutomationPeer>
    {
        IMediaTransportControlsAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControlsAutomationPeer(IMediaTransportControlsAutomationPeer const&) noexcept = default;
        IMediaTransportControlsAutomationPeer(IMediaTransportControlsAutomationPeer&&) noexcept = default;
        IMediaTransportControlsAutomationPeer& operator=(IMediaTransportControlsAutomationPeer const&) & noexcept = default;
        IMediaTransportControlsAutomationPeer& operator=(IMediaTransportControlsAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControlsAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsAutomationPeerFactory>
    {
        IMediaTransportControlsAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControlsAutomationPeerFactory(IMediaTransportControlsAutomationPeerFactory const&) noexcept = default;
        IMediaTransportControlsAutomationPeerFactory(IMediaTransportControlsAutomationPeerFactory&&) noexcept = default;
        IMediaTransportControlsAutomationPeerFactory& operator=(IMediaTransportControlsAutomationPeerFactory const&) & noexcept = default;
        IMediaTransportControlsAutomationPeerFactory& operator=(IMediaTransportControlsAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarAutomationPeer>
    {
        IMenuBarAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMenuBarAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarAutomationPeer(IMenuBarAutomationPeer const&) noexcept = default;
        IMenuBarAutomationPeer(IMenuBarAutomationPeer&&) noexcept = default;
        IMenuBarAutomationPeer& operator=(IMenuBarAutomationPeer const&) & noexcept = default;
        IMenuBarAutomationPeer& operator=(IMenuBarAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarAutomationPeerFactory>
    {
        IMenuBarAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuBarAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarAutomationPeerFactory(IMenuBarAutomationPeerFactory const&) noexcept = default;
        IMenuBarAutomationPeerFactory(IMenuBarAutomationPeerFactory&&) noexcept = default;
        IMenuBarAutomationPeerFactory& operator=(IMenuBarAutomationPeerFactory const&) & noexcept = default;
        IMenuBarAutomationPeerFactory& operator=(IMenuBarAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemAutomationPeer>
    {
        IMenuBarItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarItemAutomationPeer(IMenuBarItemAutomationPeer const&) noexcept = default;
        IMenuBarItemAutomationPeer(IMenuBarItemAutomationPeer&&) noexcept = default;
        IMenuBarItemAutomationPeer& operator=(IMenuBarItemAutomationPeer const&) & noexcept = default;
        IMenuBarItemAutomationPeer& operator=(IMenuBarItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemAutomationPeerFactory>
    {
        IMenuBarItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarItemAutomationPeerFactory(IMenuBarItemAutomationPeerFactory const&) noexcept = default;
        IMenuBarItemAutomationPeerFactory(IMenuBarItemAutomationPeerFactory&&) noexcept = default;
        IMenuBarItemAutomationPeerFactory& operator=(IMenuBarItemAutomationPeerFactory const&) & noexcept = default;
        IMenuBarItemAutomationPeerFactory& operator=(IMenuBarItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemAutomationPeer>
    {
        IMenuFlyoutItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItemAutomationPeer(IMenuFlyoutItemAutomationPeer const&) noexcept = default;
        IMenuFlyoutItemAutomationPeer(IMenuFlyoutItemAutomationPeer&&) noexcept = default;
        IMenuFlyoutItemAutomationPeer& operator=(IMenuFlyoutItemAutomationPeer const&) & noexcept = default;
        IMenuFlyoutItemAutomationPeer& operator=(IMenuFlyoutItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemAutomationPeerFactory>
    {
        IMenuFlyoutItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItemAutomationPeerFactory(IMenuFlyoutItemAutomationPeerFactory const&) noexcept = default;
        IMenuFlyoutItemAutomationPeerFactory(IMenuFlyoutItemAutomationPeerFactory&&) noexcept = default;
        IMenuFlyoutItemAutomationPeerFactory& operator=(IMenuFlyoutItemAutomationPeerFactory const&) & noexcept = default;
        IMenuFlyoutItemAutomationPeerFactory& operator=(IMenuFlyoutItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenterAutomationPeer>
    {
        IMenuFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutPresenterAutomationPeer(IMenuFlyoutPresenterAutomationPeer const&) noexcept = default;
        IMenuFlyoutPresenterAutomationPeer(IMenuFlyoutPresenterAutomationPeer&&) noexcept = default;
        IMenuFlyoutPresenterAutomationPeer& operator=(IMenuFlyoutPresenterAutomationPeer const&) & noexcept = default;
        IMenuFlyoutPresenterAutomationPeer& operator=(IMenuFlyoutPresenterAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutPresenterAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenterAutomationPeerFactory>
    {
        IMenuFlyoutPresenterAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenterAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutPresenterAutomationPeerFactory(IMenuFlyoutPresenterAutomationPeerFactory const&) noexcept = default;
        IMenuFlyoutPresenterAutomationPeerFactory(IMenuFlyoutPresenterAutomationPeerFactory&&) noexcept = default;
        IMenuFlyoutPresenterAutomationPeerFactory& operator=(IMenuFlyoutPresenterAutomationPeerFactory const&) & noexcept = default;
        IMenuFlyoutPresenterAutomationPeerFactory& operator=(IMenuFlyoutPresenterAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemAutomationPeer>
    {
        INavigationViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemAutomationPeer(INavigationViewItemAutomationPeer const&) noexcept = default;
        INavigationViewItemAutomationPeer(INavigationViewItemAutomationPeer&&) noexcept = default;
        INavigationViewItemAutomationPeer& operator=(INavigationViewItemAutomationPeer const&) & noexcept = default;
        INavigationViewItemAutomationPeer& operator=(INavigationViewItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemAutomationPeerFactory>
    {
        INavigationViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemAutomationPeerFactory(INavigationViewItemAutomationPeerFactory const&) noexcept = default;
        INavigationViewItemAutomationPeerFactory(INavigationViewItemAutomationPeerFactory&&) noexcept = default;
        INavigationViewItemAutomationPeerFactory& operator=(INavigationViewItemAutomationPeerFactory const&) & noexcept = default;
        INavigationViewItemAutomationPeerFactory& operator=(INavigationViewItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxAutomationPeer>
    {
        IPasswordBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBoxAutomationPeer(IPasswordBoxAutomationPeer const&) noexcept = default;
        IPasswordBoxAutomationPeer(IPasswordBoxAutomationPeer&&) noexcept = default;
        IPasswordBoxAutomationPeer& operator=(IPasswordBoxAutomationPeer const&) & noexcept = default;
        IPasswordBoxAutomationPeer& operator=(IPasswordBoxAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxAutomationPeerFactory>
    {
        IPasswordBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBoxAutomationPeerFactory(IPasswordBoxAutomationPeerFactory const&) noexcept = default;
        IPasswordBoxAutomationPeerFactory(IPasswordBoxAutomationPeerFactory&&) noexcept = default;
        IPasswordBoxAutomationPeerFactory& operator=(IPasswordBoxAutomationPeerFactory const&) & noexcept = default;
        IPasswordBoxAutomationPeerFactory& operator=(IPasswordBoxAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPersonPictureAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPictureAutomationPeer>
    {
        IPersonPictureAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPersonPictureAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPersonPictureAutomationPeer(IPersonPictureAutomationPeer const&) noexcept = default;
        IPersonPictureAutomationPeer(IPersonPictureAutomationPeer&&) noexcept = default;
        IPersonPictureAutomationPeer& operator=(IPersonPictureAutomationPeer const&) & noexcept = default;
        IPersonPictureAutomationPeer& operator=(IPersonPictureAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPersonPictureAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPictureAutomationPeerFactory>
    {
        IPersonPictureAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPersonPictureAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPersonPictureAutomationPeerFactory(IPersonPictureAutomationPeerFactory const&) noexcept = default;
        IPersonPictureAutomationPeerFactory(IPersonPictureAutomationPeerFactory&&) noexcept = default;
        IPersonPictureAutomationPeerFactory& operator=(IPersonPictureAutomationPeerFactory const&) & noexcept = default;
        IPersonPictureAutomationPeerFactory& operator=(IPersonPictureAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPickerFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyoutPresenterAutomationPeer>
    {
        IPickerFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPickerFlyoutPresenterAutomationPeer(IPickerFlyoutPresenterAutomationPeer const&) noexcept = default;
        IPickerFlyoutPresenterAutomationPeer(IPickerFlyoutPresenterAutomationPeer&&) noexcept = default;
        IPickerFlyoutPresenterAutomationPeer& operator=(IPickerFlyoutPresenterAutomationPeer const&) & noexcept = default;
        IPickerFlyoutPresenterAutomationPeer& operator=(IPickerFlyoutPresenterAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotAutomationPeer>
    {
        IPivotAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPivotAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotAutomationPeer(IPivotAutomationPeer const&) noexcept = default;
        IPivotAutomationPeer(IPivotAutomationPeer&&) noexcept = default;
        IPivotAutomationPeer& operator=(IPivotAutomationPeer const&) & noexcept = default;
        IPivotAutomationPeer& operator=(IPivotAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotAutomationPeerFactory>
    {
        IPivotAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotAutomationPeerFactory(IPivotAutomationPeerFactory const&) noexcept = default;
        IPivotAutomationPeerFactory(IPivotAutomationPeerFactory&&) noexcept = default;
        IPivotAutomationPeerFactory& operator=(IPivotAutomationPeerFactory const&) & noexcept = default;
        IPivotAutomationPeerFactory& operator=(IPivotAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemAutomationPeer>
    {
        IPivotItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPivotItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotItemAutomationPeer(IPivotItemAutomationPeer const&) noexcept = default;
        IPivotItemAutomationPeer(IPivotItemAutomationPeer&&) noexcept = default;
        IPivotItemAutomationPeer& operator=(IPivotItemAutomationPeer const&) & noexcept = default;
        IPivotItemAutomationPeer& operator=(IPivotItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemAutomationPeerFactory>
    {
        IPivotItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotItemAutomationPeerFactory(IPivotItemAutomationPeerFactory const&) noexcept = default;
        IPivotItemAutomationPeerFactory(IPivotItemAutomationPeerFactory&&) noexcept = default;
        IPivotItemAutomationPeerFactory& operator=(IPivotItemAutomationPeerFactory const&) & noexcept = default;
        IPivotItemAutomationPeerFactory& operator=(IPivotItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemDataAutomationPeer>
    {
        IPivotItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPivotItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotItemDataAutomationPeer(IPivotItemDataAutomationPeer const&) noexcept = default;
        IPivotItemDataAutomationPeer(IPivotItemDataAutomationPeer&&) noexcept = default;
        IPivotItemDataAutomationPeer& operator=(IPivotItemDataAutomationPeer const&) & noexcept = default;
        IPivotItemDataAutomationPeer& operator=(IPivotItemDataAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemDataAutomationPeerFactory>
    {
        IPivotItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotItemDataAutomationPeerFactory(IPivotItemDataAutomationPeerFactory const&) noexcept = default;
        IPivotItemDataAutomationPeerFactory(IPivotItemDataAutomationPeerFactory&&) noexcept = default;
        IPivotItemDataAutomationPeerFactory& operator=(IPivotItemDataAutomationPeerFactory const&) & noexcept = default;
        IPivotItemDataAutomationPeerFactory& operator=(IPivotItemDataAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressBarAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBarAutomationPeer>
    {
        IProgressBarAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IProgressBarAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressBarAutomationPeer(IProgressBarAutomationPeer const&) noexcept = default;
        IProgressBarAutomationPeer(IProgressBarAutomationPeer&&) noexcept = default;
        IProgressBarAutomationPeer& operator=(IProgressBarAutomationPeer const&) & noexcept = default;
        IProgressBarAutomationPeer& operator=(IProgressBarAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressBarAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBarAutomationPeerFactory>
    {
        IProgressBarAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IProgressBarAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressBarAutomationPeerFactory(IProgressBarAutomationPeerFactory const&) noexcept = default;
        IProgressBarAutomationPeerFactory(IProgressBarAutomationPeerFactory&&) noexcept = default;
        IProgressBarAutomationPeerFactory& operator=(IProgressBarAutomationPeerFactory const&) & noexcept = default;
        IProgressBarAutomationPeerFactory& operator=(IProgressBarAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressRingAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRingAutomationPeer>
    {
        IProgressRingAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IProgressRingAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressRingAutomationPeer(IProgressRingAutomationPeer const&) noexcept = default;
        IProgressRingAutomationPeer(IProgressRingAutomationPeer&&) noexcept = default;
        IProgressRingAutomationPeer& operator=(IProgressRingAutomationPeer const&) & noexcept = default;
        IProgressRingAutomationPeer& operator=(IProgressRingAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressRingAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRingAutomationPeerFactory>
    {
        IProgressRingAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IProgressRingAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressRingAutomationPeerFactory(IProgressRingAutomationPeerFactory const&) noexcept = default;
        IProgressRingAutomationPeerFactory(IProgressRingAutomationPeerFactory&&) noexcept = default;
        IProgressRingAutomationPeerFactory& operator=(IProgressRingAutomationPeerFactory const&) & noexcept = default;
        IProgressRingAutomationPeerFactory& operator=(IProgressRingAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadioButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonAutomationPeer>
    {
        IRadioButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadioButtonAutomationPeer(IRadioButtonAutomationPeer const&) noexcept = default;
        IRadioButtonAutomationPeer(IRadioButtonAutomationPeer&&) noexcept = default;
        IRadioButtonAutomationPeer& operator=(IRadioButtonAutomationPeer const&) & noexcept = default;
        IRadioButtonAutomationPeer& operator=(IRadioButtonAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadioButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonAutomationPeerFactory>
    {
        IRadioButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadioButtonAutomationPeerFactory(IRadioButtonAutomationPeerFactory const&) noexcept = default;
        IRadioButtonAutomationPeerFactory(IRadioButtonAutomationPeerFactory&&) noexcept = default;
        IRadioButtonAutomationPeerFactory& operator=(IRadioButtonAutomationPeerFactory const&) & noexcept = default;
        IRadioButtonAutomationPeerFactory& operator=(IRadioButtonAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRangeBaseAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRangeBaseAutomationPeer>
    {
        IRangeBaseAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRangeBaseAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRangeBaseAutomationPeer(IRangeBaseAutomationPeer const&) noexcept = default;
        IRangeBaseAutomationPeer(IRangeBaseAutomationPeer&&) noexcept = default;
        IRangeBaseAutomationPeer& operator=(IRangeBaseAutomationPeer const&) & noexcept = default;
        IRangeBaseAutomationPeer& operator=(IRangeBaseAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRangeBaseAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRangeBaseAutomationPeerFactory>
    {
        IRangeBaseAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRangeBaseAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRangeBaseAutomationPeerFactory(IRangeBaseAutomationPeerFactory const&) noexcept = default;
        IRangeBaseAutomationPeerFactory(IRangeBaseAutomationPeerFactory&&) noexcept = default;
        IRangeBaseAutomationPeerFactory& operator=(IRangeBaseAutomationPeerFactory const&) & noexcept = default;
        IRangeBaseAutomationPeerFactory& operator=(IRangeBaseAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingControlAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingControlAutomationPeer>
    {
        IRatingControlAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRatingControlAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingControlAutomationPeer(IRatingControlAutomationPeer const&) noexcept = default;
        IRatingControlAutomationPeer(IRatingControlAutomationPeer&&) noexcept = default;
        IRatingControlAutomationPeer& operator=(IRatingControlAutomationPeer const&) & noexcept = default;
        IRatingControlAutomationPeer& operator=(IRatingControlAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingControlAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingControlAutomationPeerFactory>
    {
        IRatingControlAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRatingControlAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingControlAutomationPeerFactory(IRatingControlAutomationPeerFactory const&) noexcept = default;
        IRatingControlAutomationPeerFactory(IRatingControlAutomationPeerFactory&&) noexcept = default;
        IRatingControlAutomationPeerFactory& operator=(IRatingControlAutomationPeerFactory const&) & noexcept = default;
        IRatingControlAutomationPeerFactory& operator=(IRatingControlAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepeatButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepeatButtonAutomationPeer>
    {
        IRepeatButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRepeatButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepeatButtonAutomationPeer(IRepeatButtonAutomationPeer const&) noexcept = default;
        IRepeatButtonAutomationPeer(IRepeatButtonAutomationPeer&&) noexcept = default;
        IRepeatButtonAutomationPeer& operator=(IRepeatButtonAutomationPeer const&) & noexcept = default;
        IRepeatButtonAutomationPeer& operator=(IRepeatButtonAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepeatButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepeatButtonAutomationPeerFactory>
    {
        IRepeatButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRepeatButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepeatButtonAutomationPeerFactory(IRepeatButtonAutomationPeerFactory const&) noexcept = default;
        IRepeatButtonAutomationPeerFactory(IRepeatButtonAutomationPeerFactory&&) noexcept = default;
        IRepeatButtonAutomationPeerFactory& operator=(IRepeatButtonAutomationPeerFactory const&) & noexcept = default;
        IRepeatButtonAutomationPeerFactory& operator=(IRepeatButtonAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxAutomationPeer>
    {
        IRichEditBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxAutomationPeer(IRichEditBoxAutomationPeer const&) noexcept = default;
        IRichEditBoxAutomationPeer(IRichEditBoxAutomationPeer&&) noexcept = default;
        IRichEditBoxAutomationPeer& operator=(IRichEditBoxAutomationPeer const&) & noexcept = default;
        IRichEditBoxAutomationPeer& operator=(IRichEditBoxAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxAutomationPeerFactory>
    {
        IRichEditBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxAutomationPeerFactory(IRichEditBoxAutomationPeerFactory const&) noexcept = default;
        IRichEditBoxAutomationPeerFactory(IRichEditBoxAutomationPeerFactory&&) noexcept = default;
        IRichEditBoxAutomationPeerFactory& operator=(IRichEditBoxAutomationPeerFactory const&) & noexcept = default;
        IRichEditBoxAutomationPeerFactory& operator=(IRichEditBoxAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockAutomationPeer>
    {
        IRichTextBlockAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockAutomationPeer(IRichTextBlockAutomationPeer const&) noexcept = default;
        IRichTextBlockAutomationPeer(IRichTextBlockAutomationPeer&&) noexcept = default;
        IRichTextBlockAutomationPeer& operator=(IRichTextBlockAutomationPeer const&) & noexcept = default;
        IRichTextBlockAutomationPeer& operator=(IRichTextBlockAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockAutomationPeerFactory>
    {
        IRichTextBlockAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockAutomationPeerFactory(IRichTextBlockAutomationPeerFactory const&) noexcept = default;
        IRichTextBlockAutomationPeerFactory(IRichTextBlockAutomationPeerFactory&&) noexcept = default;
        IRichTextBlockAutomationPeerFactory& operator=(IRichTextBlockAutomationPeerFactory const&) & noexcept = default;
        IRichTextBlockAutomationPeerFactory& operator=(IRichTextBlockAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockOverflowAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflowAutomationPeer>
    {
        IRichTextBlockOverflowAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflowAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockOverflowAutomationPeer(IRichTextBlockOverflowAutomationPeer const&) noexcept = default;
        IRichTextBlockOverflowAutomationPeer(IRichTextBlockOverflowAutomationPeer&&) noexcept = default;
        IRichTextBlockOverflowAutomationPeer& operator=(IRichTextBlockOverflowAutomationPeer const&) & noexcept = default;
        IRichTextBlockOverflowAutomationPeer& operator=(IRichTextBlockOverflowAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockOverflowAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflowAutomationPeerFactory>
    {
        IRichTextBlockOverflowAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflowAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockOverflowAutomationPeerFactory(IRichTextBlockOverflowAutomationPeerFactory const&) noexcept = default;
        IRichTextBlockOverflowAutomationPeerFactory(IRichTextBlockOverflowAutomationPeerFactory&&) noexcept = default;
        IRichTextBlockOverflowAutomationPeerFactory& operator=(IRichTextBlockOverflowAutomationPeerFactory const&) & noexcept = default;
        IRichTextBlockOverflowAutomationPeerFactory& operator=(IRichTextBlockOverflowAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollBarAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollBarAutomationPeer>
    {
        IScrollBarAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IScrollBarAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollBarAutomationPeer(IScrollBarAutomationPeer const&) noexcept = default;
        IScrollBarAutomationPeer(IScrollBarAutomationPeer&&) noexcept = default;
        IScrollBarAutomationPeer& operator=(IScrollBarAutomationPeer const&) & noexcept = default;
        IScrollBarAutomationPeer& operator=(IScrollBarAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollBarAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollBarAutomationPeerFactory>
    {
        IScrollBarAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IScrollBarAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollBarAutomationPeerFactory(IScrollBarAutomationPeerFactory const&) noexcept = default;
        IScrollBarAutomationPeerFactory(IScrollBarAutomationPeerFactory&&) noexcept = default;
        IScrollBarAutomationPeerFactory& operator=(IScrollBarAutomationPeerFactory const&) & noexcept = default;
        IScrollBarAutomationPeerFactory& operator=(IScrollBarAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerAutomationPeer>
    {
        IScrollViewerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewerAutomationPeer(IScrollViewerAutomationPeer const&) noexcept = default;
        IScrollViewerAutomationPeer(IScrollViewerAutomationPeer&&) noexcept = default;
        IScrollViewerAutomationPeer& operator=(IScrollViewerAutomationPeer const&) & noexcept = default;
        IScrollViewerAutomationPeer& operator=(IScrollViewerAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerAutomationPeerFactory>
    {
        IScrollViewerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewerAutomationPeerFactory(IScrollViewerAutomationPeerFactory const&) noexcept = default;
        IScrollViewerAutomationPeerFactory(IScrollViewerAutomationPeerFactory&&) noexcept = default;
        IScrollViewerAutomationPeerFactory& operator=(IScrollViewerAutomationPeerFactory const&) & noexcept = default;
        IScrollViewerAutomationPeerFactory& operator=(IScrollViewerAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISearchBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISearchBoxAutomationPeer>
    {
        ISearchBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISearchBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISearchBoxAutomationPeer(ISearchBoxAutomationPeer const&) noexcept = default;
        ISearchBoxAutomationPeer(ISearchBoxAutomationPeer&&) noexcept = default;
        ISearchBoxAutomationPeer& operator=(ISearchBoxAutomationPeer const&) & noexcept = default;
        ISearchBoxAutomationPeer& operator=(ISearchBoxAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISearchBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISearchBoxAutomationPeerFactory>
    {
        ISearchBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISearchBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISearchBoxAutomationPeerFactory(ISearchBoxAutomationPeerFactory const&) noexcept = default;
        ISearchBoxAutomationPeerFactory(ISearchBoxAutomationPeerFactory&&) noexcept = default;
        ISearchBoxAutomationPeerFactory& operator=(ISearchBoxAutomationPeerFactory const&) & noexcept = default;
        ISearchBoxAutomationPeerFactory& operator=(ISearchBoxAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectorAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorAutomationPeer>
    {
        ISelectorAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISelectorAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectorAutomationPeer(ISelectorAutomationPeer const&) noexcept = default;
        ISelectorAutomationPeer(ISelectorAutomationPeer&&) noexcept = default;
        ISelectorAutomationPeer& operator=(ISelectorAutomationPeer const&) & noexcept = default;
        ISelectorAutomationPeer& operator=(ISelectorAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectorAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorAutomationPeerFactory>
    {
        ISelectorAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISelectorAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectorAutomationPeerFactory(ISelectorAutomationPeerFactory const&) noexcept = default;
        ISelectorAutomationPeerFactory(ISelectorAutomationPeerFactory&&) noexcept = default;
        ISelectorAutomationPeerFactory& operator=(ISelectorAutomationPeerFactory const&) & noexcept = default;
        ISelectorAutomationPeerFactory& operator=(ISelectorAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectorItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorItemAutomationPeer>
    {
        ISelectorItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISelectorItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectorItemAutomationPeer(ISelectorItemAutomationPeer const&) noexcept = default;
        ISelectorItemAutomationPeer(ISelectorItemAutomationPeer&&) noexcept = default;
        ISelectorItemAutomationPeer& operator=(ISelectorItemAutomationPeer const&) & noexcept = default;
        ISelectorItemAutomationPeer& operator=(ISelectorItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectorItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorItemAutomationPeerFactory>
    {
        ISelectorItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISelectorItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectorItemAutomationPeerFactory(ISelectorItemAutomationPeerFactory const&) noexcept = default;
        ISelectorItemAutomationPeerFactory(ISelectorItemAutomationPeerFactory&&) noexcept = default;
        ISelectorItemAutomationPeerFactory& operator=(ISelectorItemAutomationPeerFactory const&) & noexcept = default;
        ISelectorItemAutomationPeerFactory& operator=(ISelectorItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISemanticZoomAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomAutomationPeer>
    {
        ISemanticZoomAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISemanticZoomAutomationPeer(ISemanticZoomAutomationPeer const&) noexcept = default;
        ISemanticZoomAutomationPeer(ISemanticZoomAutomationPeer&&) noexcept = default;
        ISemanticZoomAutomationPeer& operator=(ISemanticZoomAutomationPeer const&) & noexcept = default;
        ISemanticZoomAutomationPeer& operator=(ISemanticZoomAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISemanticZoomAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomAutomationPeerFactory>
    {
        ISemanticZoomAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISemanticZoomAutomationPeerFactory(ISemanticZoomAutomationPeerFactory const&) noexcept = default;
        ISemanticZoomAutomationPeerFactory(ISemanticZoomAutomationPeerFactory&&) noexcept = default;
        ISemanticZoomAutomationPeerFactory& operator=(ISemanticZoomAutomationPeerFactory const&) & noexcept = default;
        ISemanticZoomAutomationPeerFactory& operator=(ISemanticZoomAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISettingsFlyoutAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISettingsFlyoutAutomationPeer>
    {
        ISettingsFlyoutAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISettingsFlyoutAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISettingsFlyoutAutomationPeer(ISettingsFlyoutAutomationPeer const&) noexcept = default;
        ISettingsFlyoutAutomationPeer(ISettingsFlyoutAutomationPeer&&) noexcept = default;
        ISettingsFlyoutAutomationPeer& operator=(ISettingsFlyoutAutomationPeer const&) & noexcept = default;
        ISettingsFlyoutAutomationPeer& operator=(ISettingsFlyoutAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISettingsFlyoutAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISettingsFlyoutAutomationPeerFactory>
    {
        ISettingsFlyoutAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISettingsFlyoutAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISettingsFlyoutAutomationPeerFactory(ISettingsFlyoutAutomationPeerFactory const&) noexcept = default;
        ISettingsFlyoutAutomationPeerFactory(ISettingsFlyoutAutomationPeerFactory&&) noexcept = default;
        ISettingsFlyoutAutomationPeerFactory& operator=(ISettingsFlyoutAutomationPeerFactory const&) & noexcept = default;
        ISettingsFlyoutAutomationPeerFactory& operator=(ISettingsFlyoutAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISliderAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISliderAutomationPeer>
    {
        ISliderAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISliderAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISliderAutomationPeer(ISliderAutomationPeer const&) noexcept = default;
        ISliderAutomationPeer(ISliderAutomationPeer&&) noexcept = default;
        ISliderAutomationPeer& operator=(ISliderAutomationPeer const&) & noexcept = default;
        ISliderAutomationPeer& operator=(ISliderAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISliderAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISliderAutomationPeerFactory>
    {
        ISliderAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISliderAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISliderAutomationPeerFactory(ISliderAutomationPeerFactory const&) noexcept = default;
        ISliderAutomationPeerFactory(ISliderAutomationPeerFactory&&) noexcept = default;
        ISliderAutomationPeerFactory& operator=(ISliderAutomationPeerFactory const&) & noexcept = default;
        ISliderAutomationPeerFactory& operator=(ISliderAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlockAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockAutomationPeer>
    {
        ITextBlockAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITextBlockAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlockAutomationPeer(ITextBlockAutomationPeer const&) noexcept = default;
        ITextBlockAutomationPeer(ITextBlockAutomationPeer&&) noexcept = default;
        ITextBlockAutomationPeer& operator=(ITextBlockAutomationPeer const&) & noexcept = default;
        ITextBlockAutomationPeer& operator=(ITextBlockAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlockAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockAutomationPeerFactory>
    {
        ITextBlockAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITextBlockAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlockAutomationPeerFactory(ITextBlockAutomationPeerFactory const&) noexcept = default;
        ITextBlockAutomationPeerFactory(ITextBlockAutomationPeerFactory&&) noexcept = default;
        ITextBlockAutomationPeerFactory& operator=(ITextBlockAutomationPeerFactory const&) & noexcept = default;
        ITextBlockAutomationPeerFactory& operator=(ITextBlockAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxAutomationPeer>
    {
        ITextBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITextBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxAutomationPeer(ITextBoxAutomationPeer const&) noexcept = default;
        ITextBoxAutomationPeer(ITextBoxAutomationPeer&&) noexcept = default;
        ITextBoxAutomationPeer& operator=(ITextBoxAutomationPeer const&) & noexcept = default;
        ITextBoxAutomationPeer& operator=(ITextBoxAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxAutomationPeerFactory>
    {
        ITextBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITextBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxAutomationPeerFactory(ITextBoxAutomationPeerFactory const&) noexcept = default;
        ITextBoxAutomationPeerFactory(ITextBoxAutomationPeerFactory&&) noexcept = default;
        ITextBoxAutomationPeerFactory& operator=(ITextBoxAutomationPeerFactory const&) & noexcept = default;
        ITextBoxAutomationPeerFactory& operator=(ITextBoxAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IThumbAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IThumbAutomationPeer>
    {
        IThumbAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IThumbAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IThumbAutomationPeer(IThumbAutomationPeer const&) noexcept = default;
        IThumbAutomationPeer(IThumbAutomationPeer&&) noexcept = default;
        IThumbAutomationPeer& operator=(IThumbAutomationPeer const&) & noexcept = default;
        IThumbAutomationPeer& operator=(IThumbAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IThumbAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IThumbAutomationPeerFactory>
    {
        IThumbAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IThumbAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IThumbAutomationPeerFactory(IThumbAutomationPeerFactory const&) noexcept = default;
        IThumbAutomationPeerFactory(IThumbAutomationPeerFactory&&) noexcept = default;
        IThumbAutomationPeerFactory& operator=(IThumbAutomationPeerFactory const&) & noexcept = default;
        IThumbAutomationPeerFactory& operator=(IThumbAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerAutomationPeer>
    {
        ITimePickerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITimePickerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerAutomationPeer(ITimePickerAutomationPeer const&) noexcept = default;
        ITimePickerAutomationPeer(ITimePickerAutomationPeer&&) noexcept = default;
        ITimePickerAutomationPeer& operator=(ITimePickerAutomationPeer const&) & noexcept = default;
        ITimePickerAutomationPeer& operator=(ITimePickerAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerAutomationPeerFactory>
    {
        ITimePickerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITimePickerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerAutomationPeerFactory(ITimePickerAutomationPeerFactory const&) noexcept = default;
        ITimePickerAutomationPeerFactory(ITimePickerAutomationPeerFactory&&) noexcept = default;
        ITimePickerAutomationPeerFactory& operator=(ITimePickerAutomationPeerFactory const&) & noexcept = default;
        ITimePickerAutomationPeerFactory& operator=(ITimePickerAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyoutPresenterAutomationPeer>
    {
        ITimePickerFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerFlyoutPresenterAutomationPeer(ITimePickerFlyoutPresenterAutomationPeer const&) noexcept = default;
        ITimePickerFlyoutPresenterAutomationPeer(ITimePickerFlyoutPresenterAutomationPeer&&) noexcept = default;
        ITimePickerFlyoutPresenterAutomationPeer& operator=(ITimePickerFlyoutPresenterAutomationPeer const&) & noexcept = default;
        ITimePickerFlyoutPresenterAutomationPeer& operator=(ITimePickerFlyoutPresenterAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleButtonAutomationPeer>
    {
        IToggleButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IToggleButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleButtonAutomationPeer(IToggleButtonAutomationPeer const&) noexcept = default;
        IToggleButtonAutomationPeer(IToggleButtonAutomationPeer&&) noexcept = default;
        IToggleButtonAutomationPeer& operator=(IToggleButtonAutomationPeer const&) & noexcept = default;
        IToggleButtonAutomationPeer& operator=(IToggleButtonAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleButtonAutomationPeerFactory>
    {
        IToggleButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleButtonAutomationPeerFactory(IToggleButtonAutomationPeerFactory const&) noexcept = default;
        IToggleButtonAutomationPeerFactory(IToggleButtonAutomationPeerFactory&&) noexcept = default;
        IToggleButtonAutomationPeerFactory& operator=(IToggleButtonAutomationPeerFactory const&) & noexcept = default;
        IToggleButtonAutomationPeerFactory& operator=(IToggleButtonAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleMenuFlyoutItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleMenuFlyoutItemAutomationPeer>
    {
        IToggleMenuFlyoutItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IToggleMenuFlyoutItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleMenuFlyoutItemAutomationPeer(IToggleMenuFlyoutItemAutomationPeer const&) noexcept = default;
        IToggleMenuFlyoutItemAutomationPeer(IToggleMenuFlyoutItemAutomationPeer&&) noexcept = default;
        IToggleMenuFlyoutItemAutomationPeer& operator=(IToggleMenuFlyoutItemAutomationPeer const&) & noexcept = default;
        IToggleMenuFlyoutItemAutomationPeer& operator=(IToggleMenuFlyoutItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleMenuFlyoutItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleMenuFlyoutItemAutomationPeerFactory>
    {
        IToggleMenuFlyoutItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleMenuFlyoutItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleMenuFlyoutItemAutomationPeerFactory(IToggleMenuFlyoutItemAutomationPeerFactory const&) noexcept = default;
        IToggleMenuFlyoutItemAutomationPeerFactory(IToggleMenuFlyoutItemAutomationPeerFactory&&) noexcept = default;
        IToggleMenuFlyoutItemAutomationPeerFactory& operator=(IToggleMenuFlyoutItemAutomationPeerFactory const&) & noexcept = default;
        IToggleMenuFlyoutItemAutomationPeerFactory& operator=(IToggleMenuFlyoutItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSwitchAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitchAutomationPeer>
    {
        IToggleSwitchAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitchAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSwitchAutomationPeer(IToggleSwitchAutomationPeer const&) noexcept = default;
        IToggleSwitchAutomationPeer(IToggleSwitchAutomationPeer&&) noexcept = default;
        IToggleSwitchAutomationPeer& operator=(IToggleSwitchAutomationPeer const&) & noexcept = default;
        IToggleSwitchAutomationPeer& operator=(IToggleSwitchAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSwitchAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitchAutomationPeerFactory>
    {
        IToggleSwitchAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitchAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSwitchAutomationPeerFactory(IToggleSwitchAutomationPeerFactory const&) noexcept = default;
        IToggleSwitchAutomationPeerFactory(IToggleSwitchAutomationPeerFactory&&) noexcept = default;
        IToggleSwitchAutomationPeerFactory& operator=(IToggleSwitchAutomationPeerFactory const&) & noexcept = default;
        IToggleSwitchAutomationPeerFactory& operator=(IToggleSwitchAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemAutomationPeer>
    {
        ITreeViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItemAutomationPeer(ITreeViewItemAutomationPeer const&) noexcept = default;
        ITreeViewItemAutomationPeer(ITreeViewItemAutomationPeer&&) noexcept = default;
        ITreeViewItemAutomationPeer& operator=(ITreeViewItemAutomationPeer const&) & noexcept = default;
        ITreeViewItemAutomationPeer& operator=(ITreeViewItemAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemAutomationPeerFactory>
    {
        ITreeViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItemAutomationPeerFactory(ITreeViewItemAutomationPeerFactory const&) noexcept = default;
        ITreeViewItemAutomationPeerFactory(ITreeViewItemAutomationPeerFactory&&) noexcept = default;
        ITreeViewItemAutomationPeerFactory& operator=(ITreeViewItemAutomationPeerFactory const&) & noexcept = default;
        ITreeViewItemAutomationPeerFactory& operator=(ITreeViewItemAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewListAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewListAutomationPeer>
    {
        ITreeViewListAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITreeViewListAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewListAutomationPeer(ITreeViewListAutomationPeer const&) noexcept = default;
        ITreeViewListAutomationPeer(ITreeViewListAutomationPeer&&) noexcept = default;
        ITreeViewListAutomationPeer& operator=(ITreeViewListAutomationPeer const&) & noexcept = default;
        ITreeViewListAutomationPeer& operator=(ITreeViewListAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewListAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewListAutomationPeerFactory>
    {
        ITreeViewListAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewListAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewListAutomationPeerFactory(ITreeViewListAutomationPeerFactory const&) noexcept = default;
        ITreeViewListAutomationPeerFactory(ITreeViewListAutomationPeerFactory&&) noexcept = default;
        ITreeViewListAutomationPeerFactory& operator=(ITreeViewListAutomationPeerFactory const&) & noexcept = default;
        ITreeViewListAutomationPeerFactory& operator=(ITreeViewListAutomationPeerFactory&&) & noexcept = default;
    };
}
#endif
