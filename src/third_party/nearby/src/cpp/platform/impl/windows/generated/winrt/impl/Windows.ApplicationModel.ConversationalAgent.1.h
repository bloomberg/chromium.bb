// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_ConversationalAgent_1_H
#define WINRT_Windows_ApplicationModel_ConversationalAgent_1_H
#include "winrt/impl/Windows.ApplicationModel.ConversationalAgent.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::ConversationalAgent
{
    struct __declspec(empty_bases) IActivationSignalDetectionConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivationSignalDetectionConfiguration>
    {
        IActivationSignalDetectionConfiguration(std::nullptr_t = nullptr) noexcept {}
        IActivationSignalDetectionConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActivationSignalDetectionConfiguration(IActivationSignalDetectionConfiguration const&) noexcept = default;
        IActivationSignalDetectionConfiguration(IActivationSignalDetectionConfiguration&&) noexcept = default;
        IActivationSignalDetectionConfiguration& operator=(IActivationSignalDetectionConfiguration const&) & noexcept = default;
        IActivationSignalDetectionConfiguration& operator=(IActivationSignalDetectionConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActivationSignalDetector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivationSignalDetector>
    {
        IActivationSignalDetector(std::nullptr_t = nullptr) noexcept {}
        IActivationSignalDetector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActivationSignalDetector(IActivationSignalDetector const&) noexcept = default;
        IActivationSignalDetector(IActivationSignalDetector&&) noexcept = default;
        IActivationSignalDetector& operator=(IActivationSignalDetector const&) & noexcept = default;
        IActivationSignalDetector& operator=(IActivationSignalDetector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConversationalAgentDetectorManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentDetectorManager>
    {
        IConversationalAgentDetectorManager(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentDetectorManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConversationalAgentDetectorManager(IConversationalAgentDetectorManager const&) noexcept = default;
        IConversationalAgentDetectorManager(IConversationalAgentDetectorManager&&) noexcept = default;
        IConversationalAgentDetectorManager& operator=(IConversationalAgentDetectorManager const&) & noexcept = default;
        IConversationalAgentDetectorManager& operator=(IConversationalAgentDetectorManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConversationalAgentDetectorManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentDetectorManagerStatics>
    {
        IConversationalAgentDetectorManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentDetectorManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConversationalAgentDetectorManagerStatics(IConversationalAgentDetectorManagerStatics const&) noexcept = default;
        IConversationalAgentDetectorManagerStatics(IConversationalAgentDetectorManagerStatics&&) noexcept = default;
        IConversationalAgentDetectorManagerStatics& operator=(IConversationalAgentDetectorManagerStatics const&) & noexcept = default;
        IConversationalAgentDetectorManagerStatics& operator=(IConversationalAgentDetectorManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConversationalAgentSession :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSession>
    {
        IConversationalAgentSession(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSession(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConversationalAgentSession(IConversationalAgentSession const&) noexcept = default;
        IConversationalAgentSession(IConversationalAgentSession&&) noexcept = default;
        IConversationalAgentSession& operator=(IConversationalAgentSession const&) & noexcept = default;
        IConversationalAgentSession& operator=(IConversationalAgentSession&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConversationalAgentSessionInterruptedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSessionInterruptedEventArgs>
    {
        IConversationalAgentSessionInterruptedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSessionInterruptedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConversationalAgentSessionInterruptedEventArgs(IConversationalAgentSessionInterruptedEventArgs const&) noexcept = default;
        IConversationalAgentSessionInterruptedEventArgs(IConversationalAgentSessionInterruptedEventArgs&&) noexcept = default;
        IConversationalAgentSessionInterruptedEventArgs& operator=(IConversationalAgentSessionInterruptedEventArgs const&) & noexcept = default;
        IConversationalAgentSessionInterruptedEventArgs& operator=(IConversationalAgentSessionInterruptedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConversationalAgentSessionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSessionStatics>
    {
        IConversationalAgentSessionStatics(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSessionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConversationalAgentSessionStatics(IConversationalAgentSessionStatics const&) noexcept = default;
        IConversationalAgentSessionStatics(IConversationalAgentSessionStatics&&) noexcept = default;
        IConversationalAgentSessionStatics& operator=(IConversationalAgentSessionStatics const&) & noexcept = default;
        IConversationalAgentSessionStatics& operator=(IConversationalAgentSessionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConversationalAgentSignal :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSignal>
    {
        IConversationalAgentSignal(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSignal(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConversationalAgentSignal(IConversationalAgentSignal const&) noexcept = default;
        IConversationalAgentSignal(IConversationalAgentSignal&&) noexcept = default;
        IConversationalAgentSignal& operator=(IConversationalAgentSignal const&) & noexcept = default;
        IConversationalAgentSignal& operator=(IConversationalAgentSignal&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConversationalAgentSignalDetectedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSignalDetectedEventArgs>
    {
        IConversationalAgentSignalDetectedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSignalDetectedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConversationalAgentSignalDetectedEventArgs(IConversationalAgentSignalDetectedEventArgs const&) noexcept = default;
        IConversationalAgentSignalDetectedEventArgs(IConversationalAgentSignalDetectedEventArgs&&) noexcept = default;
        IConversationalAgentSignalDetectedEventArgs& operator=(IConversationalAgentSignalDetectedEventArgs const&) & noexcept = default;
        IConversationalAgentSignalDetectedEventArgs& operator=(IConversationalAgentSignalDetectedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConversationalAgentSystemStateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSystemStateChangedEventArgs>
    {
        IConversationalAgentSystemStateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSystemStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConversationalAgentSystemStateChangedEventArgs(IConversationalAgentSystemStateChangedEventArgs const&) noexcept = default;
        IConversationalAgentSystemStateChangedEventArgs(IConversationalAgentSystemStateChangedEventArgs&&) noexcept = default;
        IConversationalAgentSystemStateChangedEventArgs& operator=(IConversationalAgentSystemStateChangedEventArgs const&) & noexcept = default;
        IConversationalAgentSystemStateChangedEventArgs& operator=(IConversationalAgentSystemStateChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDetectionConfigurationAvailabilityChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDetectionConfigurationAvailabilityChangedEventArgs>
    {
        IDetectionConfigurationAvailabilityChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDetectionConfigurationAvailabilityChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDetectionConfigurationAvailabilityChangedEventArgs(IDetectionConfigurationAvailabilityChangedEventArgs const&) noexcept = default;
        IDetectionConfigurationAvailabilityChangedEventArgs(IDetectionConfigurationAvailabilityChangedEventArgs&&) noexcept = default;
        IDetectionConfigurationAvailabilityChangedEventArgs& operator=(IDetectionConfigurationAvailabilityChangedEventArgs const&) & noexcept = default;
        IDetectionConfigurationAvailabilityChangedEventArgs& operator=(IDetectionConfigurationAvailabilityChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDetectionConfigurationAvailabilityInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDetectionConfigurationAvailabilityInfo>
    {
        IDetectionConfigurationAvailabilityInfo(std::nullptr_t = nullptr) noexcept {}
        IDetectionConfigurationAvailabilityInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDetectionConfigurationAvailabilityInfo(IDetectionConfigurationAvailabilityInfo const&) noexcept = default;
        IDetectionConfigurationAvailabilityInfo(IDetectionConfigurationAvailabilityInfo&&) noexcept = default;
        IDetectionConfigurationAvailabilityInfo& operator=(IDetectionConfigurationAvailabilityInfo const&) & noexcept = default;
        IDetectionConfigurationAvailabilityInfo& operator=(IDetectionConfigurationAvailabilityInfo&&) & noexcept = default;
    };
}
#endif
