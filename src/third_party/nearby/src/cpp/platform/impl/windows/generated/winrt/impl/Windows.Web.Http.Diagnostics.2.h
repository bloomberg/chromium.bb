// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Web_Http_Diagnostics_2_H
#define WINRT_Windows_Web_Http_Diagnostics_2_H
#include "winrt/impl/Windows.System.Diagnostics.1.h"
#include "winrt/impl/Windows.Web.Http.Diagnostics.1.h"
WINRT_EXPORT namespace winrt::Windows::Web::Http::Diagnostics
{
    struct __declspec(empty_bases) HttpDiagnosticProvider : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticProvider
    {
        HttpDiagnosticProvider(std::nullptr_t) noexcept {}
        HttpDiagnosticProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticProvider(ptr, take_ownership_from_abi) {}
        HttpDiagnosticProvider(HttpDiagnosticProvider const&) noexcept = default;
        HttpDiagnosticProvider(HttpDiagnosticProvider&&) noexcept = default;
        HttpDiagnosticProvider& operator=(HttpDiagnosticProvider const&) & noexcept = default;
        HttpDiagnosticProvider& operator=(HttpDiagnosticProvider&&) & noexcept = default;
        static auto CreateFromProcessDiagnosticInfo(winrt::Windows::System::Diagnostics::ProcessDiagnosticInfo const& processDiagnosticInfo);
    };
    struct __declspec(empty_bases) HttpDiagnosticProviderRequestResponseCompletedEventArgs : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticProviderRequestResponseCompletedEventArgs
    {
        HttpDiagnosticProviderRequestResponseCompletedEventArgs(std::nullptr_t) noexcept {}
        HttpDiagnosticProviderRequestResponseCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticProviderRequestResponseCompletedEventArgs(ptr, take_ownership_from_abi) {}
        HttpDiagnosticProviderRequestResponseCompletedEventArgs(HttpDiagnosticProviderRequestResponseCompletedEventArgs const&) noexcept = default;
        HttpDiagnosticProviderRequestResponseCompletedEventArgs(HttpDiagnosticProviderRequestResponseCompletedEventArgs&&) noexcept = default;
        HttpDiagnosticProviderRequestResponseCompletedEventArgs& operator=(HttpDiagnosticProviderRequestResponseCompletedEventArgs const&) & noexcept = default;
        HttpDiagnosticProviderRequestResponseCompletedEventArgs& operator=(HttpDiagnosticProviderRequestResponseCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) HttpDiagnosticProviderRequestResponseTimestamps : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticProviderRequestResponseTimestamps
    {
        HttpDiagnosticProviderRequestResponseTimestamps(std::nullptr_t) noexcept {}
        HttpDiagnosticProviderRequestResponseTimestamps(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticProviderRequestResponseTimestamps(ptr, take_ownership_from_abi) {}
        HttpDiagnosticProviderRequestResponseTimestamps(HttpDiagnosticProviderRequestResponseTimestamps const&) noexcept = default;
        HttpDiagnosticProviderRequestResponseTimestamps(HttpDiagnosticProviderRequestResponseTimestamps&&) noexcept = default;
        HttpDiagnosticProviderRequestResponseTimestamps& operator=(HttpDiagnosticProviderRequestResponseTimestamps const&) & noexcept = default;
        HttpDiagnosticProviderRequestResponseTimestamps& operator=(HttpDiagnosticProviderRequestResponseTimestamps&&) & noexcept = default;
    };
    struct __declspec(empty_bases) HttpDiagnosticProviderRequestSentEventArgs : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticProviderRequestSentEventArgs
    {
        HttpDiagnosticProviderRequestSentEventArgs(std::nullptr_t) noexcept {}
        HttpDiagnosticProviderRequestSentEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticProviderRequestSentEventArgs(ptr, take_ownership_from_abi) {}
        HttpDiagnosticProviderRequestSentEventArgs(HttpDiagnosticProviderRequestSentEventArgs const&) noexcept = default;
        HttpDiagnosticProviderRequestSentEventArgs(HttpDiagnosticProviderRequestSentEventArgs&&) noexcept = default;
        HttpDiagnosticProviderRequestSentEventArgs& operator=(HttpDiagnosticProviderRequestSentEventArgs const&) & noexcept = default;
        HttpDiagnosticProviderRequestSentEventArgs& operator=(HttpDiagnosticProviderRequestSentEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) HttpDiagnosticProviderResponseReceivedEventArgs : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticProviderResponseReceivedEventArgs
    {
        HttpDiagnosticProviderResponseReceivedEventArgs(std::nullptr_t) noexcept {}
        HttpDiagnosticProviderResponseReceivedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticProviderResponseReceivedEventArgs(ptr, take_ownership_from_abi) {}
        HttpDiagnosticProviderResponseReceivedEventArgs(HttpDiagnosticProviderResponseReceivedEventArgs const&) noexcept = default;
        HttpDiagnosticProviderResponseReceivedEventArgs(HttpDiagnosticProviderResponseReceivedEventArgs&&) noexcept = default;
        HttpDiagnosticProviderResponseReceivedEventArgs& operator=(HttpDiagnosticProviderResponseReceivedEventArgs const&) & noexcept = default;
        HttpDiagnosticProviderResponseReceivedEventArgs& operator=(HttpDiagnosticProviderResponseReceivedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) HttpDiagnosticSourceLocation : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticSourceLocation
    {
        HttpDiagnosticSourceLocation(std::nullptr_t) noexcept {}
        HttpDiagnosticSourceLocation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Web::Http::Diagnostics::IHttpDiagnosticSourceLocation(ptr, take_ownership_from_abi) {}
        HttpDiagnosticSourceLocation(HttpDiagnosticSourceLocation const&) noexcept = default;
        HttpDiagnosticSourceLocation(HttpDiagnosticSourceLocation&&) noexcept = default;
        HttpDiagnosticSourceLocation& operator=(HttpDiagnosticSourceLocation const&) & noexcept = default;
        HttpDiagnosticSourceLocation& operator=(HttpDiagnosticSourceLocation&&) & noexcept = default;
    };
}
#endif
