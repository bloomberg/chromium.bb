// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_Resources_Core_1_H
#define WINRT_Windows_ApplicationModel_Resources_Core_1_H
#include "winrt/impl/Windows.Foundation.Collections.0.h"
#include "winrt/impl/Windows.ApplicationModel.Resources.Core.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::Resources::Core
{
    struct __declspec(empty_bases) INamedResource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INamedResource>
    {
        INamedResource(std::nullptr_t = nullptr) noexcept {}
        INamedResource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INamedResource(INamedResource const&) noexcept = default;
        INamedResource(INamedResource&&) noexcept = default;
        INamedResource& operator=(INamedResource const&) & noexcept = default;
        INamedResource& operator=(INamedResource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceCandidate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceCandidate>
    {
        IResourceCandidate(std::nullptr_t = nullptr) noexcept {}
        IResourceCandidate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceCandidate(IResourceCandidate const&) noexcept = default;
        IResourceCandidate(IResourceCandidate&&) noexcept = default;
        IResourceCandidate& operator=(IResourceCandidate const&) & noexcept = default;
        IResourceCandidate& operator=(IResourceCandidate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceCandidate2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceCandidate2>
    {
        IResourceCandidate2(std::nullptr_t = nullptr) noexcept {}
        IResourceCandidate2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceCandidate2(IResourceCandidate2 const&) noexcept = default;
        IResourceCandidate2(IResourceCandidate2&&) noexcept = default;
        IResourceCandidate2& operator=(IResourceCandidate2 const&) & noexcept = default;
        IResourceCandidate2& operator=(IResourceCandidate2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceCandidate3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceCandidate3>
    {
        IResourceCandidate3(std::nullptr_t = nullptr) noexcept {}
        IResourceCandidate3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceCandidate3(IResourceCandidate3 const&) noexcept = default;
        IResourceCandidate3(IResourceCandidate3&&) noexcept = default;
        IResourceCandidate3& operator=(IResourceCandidate3 const&) & noexcept = default;
        IResourceCandidate3& operator=(IResourceCandidate3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceContext :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceContext>
    {
        IResourceContext(std::nullptr_t = nullptr) noexcept {}
        IResourceContext(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceContext(IResourceContext const&) noexcept = default;
        IResourceContext(IResourceContext&&) noexcept = default;
        IResourceContext& operator=(IResourceContext const&) & noexcept = default;
        IResourceContext& operator=(IResourceContext&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceContextStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceContextStatics>
    {
        IResourceContextStatics(std::nullptr_t = nullptr) noexcept {}
        IResourceContextStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceContextStatics(IResourceContextStatics const&) noexcept = default;
        IResourceContextStatics(IResourceContextStatics&&) noexcept = default;
        IResourceContextStatics& operator=(IResourceContextStatics const&) & noexcept = default;
        IResourceContextStatics& operator=(IResourceContextStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceContextStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceContextStatics2>
    {
        IResourceContextStatics2(std::nullptr_t = nullptr) noexcept {}
        IResourceContextStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceContextStatics2(IResourceContextStatics2 const&) noexcept = default;
        IResourceContextStatics2(IResourceContextStatics2&&) noexcept = default;
        IResourceContextStatics2& operator=(IResourceContextStatics2 const&) & noexcept = default;
        IResourceContextStatics2& operator=(IResourceContextStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceContextStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceContextStatics3>
    {
        IResourceContextStatics3(std::nullptr_t = nullptr) noexcept {}
        IResourceContextStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceContextStatics3(IResourceContextStatics3 const&) noexcept = default;
        IResourceContextStatics3(IResourceContextStatics3&&) noexcept = default;
        IResourceContextStatics3& operator=(IResourceContextStatics3 const&) & noexcept = default;
        IResourceContextStatics3& operator=(IResourceContextStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceContextStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceContextStatics4>
    {
        IResourceContextStatics4(std::nullptr_t = nullptr) noexcept {}
        IResourceContextStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceContextStatics4(IResourceContextStatics4 const&) noexcept = default;
        IResourceContextStatics4(IResourceContextStatics4&&) noexcept = default;
        IResourceContextStatics4& operator=(IResourceContextStatics4 const&) & noexcept = default;
        IResourceContextStatics4& operator=(IResourceContextStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceManager>
    {
        IResourceManager(std::nullptr_t = nullptr) noexcept {}
        IResourceManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceManager(IResourceManager const&) noexcept = default;
        IResourceManager(IResourceManager&&) noexcept = default;
        IResourceManager& operator=(IResourceManager const&) & noexcept = default;
        IResourceManager& operator=(IResourceManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceManager2>
    {
        IResourceManager2(std::nullptr_t = nullptr) noexcept {}
        IResourceManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceManager2(IResourceManager2 const&) noexcept = default;
        IResourceManager2(IResourceManager2&&) noexcept = default;
        IResourceManager2& operator=(IResourceManager2 const&) & noexcept = default;
        IResourceManager2& operator=(IResourceManager2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceManagerStatics>
    {
        IResourceManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IResourceManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceManagerStatics(IResourceManagerStatics const&) noexcept = default;
        IResourceManagerStatics(IResourceManagerStatics&&) noexcept = default;
        IResourceManagerStatics& operator=(IResourceManagerStatics const&) & noexcept = default;
        IResourceManagerStatics& operator=(IResourceManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceMap :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceMap>,
        impl::require<winrt::Windows::ApplicationModel::Resources::Core::IResourceMap, winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Foundation::Collections::IKeyValuePair<hstring, winrt::Windows::ApplicationModel::Resources::Core::NamedResource>>, winrt::Windows::Foundation::Collections::IMapView<hstring, winrt::Windows::ApplicationModel::Resources::Core::NamedResource>>
    {
        IResourceMap(std::nullptr_t = nullptr) noexcept {}
        IResourceMap(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceMap(IResourceMap const&) noexcept = default;
        IResourceMap(IResourceMap&&) noexcept = default;
        IResourceMap& operator=(IResourceMap const&) & noexcept = default;
        IResourceMap& operator=(IResourceMap&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IResourceQualifier :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResourceQualifier>
    {
        IResourceQualifier(std::nullptr_t = nullptr) noexcept {}
        IResourceQualifier(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IResourceQualifier(IResourceQualifier const&) noexcept = default;
        IResourceQualifier(IResourceQualifier&&) noexcept = default;
        IResourceQualifier& operator=(IResourceQualifier const&) & noexcept = default;
        IResourceQualifier& operator=(IResourceQualifier&&) & noexcept = default;
    };
}
#endif
