// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Storage_FileProperties_2_H
#define WINRT_Windows_Storage_FileProperties_2_H
#include "winrt/impl/Windows.Devices.Geolocation.1.h"
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Windows.Storage.1.h"
#include "winrt/impl/Windows.Storage.Streams.1.h"
#include "winrt/impl/Windows.Storage.FileProperties.1.h"
WINRT_EXPORT namespace winrt::Windows::Storage::FileProperties
{
    struct __declspec(empty_bases) BasicProperties : winrt::Windows::Storage::FileProperties::IBasicProperties,
        impl::require<BasicProperties, winrt::Windows::Storage::FileProperties::IStorageItemExtraProperties>
    {
        BasicProperties(std::nullptr_t) noexcept {}
        BasicProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::FileProperties::IBasicProperties(ptr, take_ownership_from_abi) {}
        BasicProperties(BasicProperties const&) noexcept = default;
        BasicProperties(BasicProperties&&) noexcept = default;
        BasicProperties& operator=(BasicProperties const&) & noexcept = default;
        BasicProperties& operator=(BasicProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) DocumentProperties : winrt::Windows::Storage::FileProperties::IDocumentProperties
    {
        DocumentProperties(std::nullptr_t) noexcept {}
        DocumentProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::FileProperties::IDocumentProperties(ptr, take_ownership_from_abi) {}
        DocumentProperties(DocumentProperties const&) noexcept = default;
        DocumentProperties(DocumentProperties&&) noexcept = default;
        DocumentProperties& operator=(DocumentProperties const&) & noexcept = default;
        DocumentProperties& operator=(DocumentProperties&&) & noexcept = default;
    };
    struct GeotagHelper
    {
        GeotagHelper() = delete;
        static auto GetGeotagAsync(winrt::Windows::Storage::IStorageFile const& file);
        static auto SetGeotagFromGeolocatorAsync(winrt::Windows::Storage::IStorageFile const& file, winrt::Windows::Devices::Geolocation::Geolocator const& geolocator);
        static auto SetGeotagAsync(winrt::Windows::Storage::IStorageFile const& file, winrt::Windows::Devices::Geolocation::Geopoint const& geopoint);
    };
    struct __declspec(empty_bases) ImageProperties : winrt::Windows::Storage::FileProperties::IImageProperties
    {
        ImageProperties(std::nullptr_t) noexcept {}
        ImageProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::FileProperties::IImageProperties(ptr, take_ownership_from_abi) {}
        ImageProperties(ImageProperties const&) noexcept = default;
        ImageProperties(ImageProperties&&) noexcept = default;
        ImageProperties& operator=(ImageProperties const&) & noexcept = default;
        ImageProperties& operator=(ImageProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) MusicProperties : winrt::Windows::Storage::FileProperties::IMusicProperties
    {
        MusicProperties(std::nullptr_t) noexcept {}
        MusicProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::FileProperties::IMusicProperties(ptr, take_ownership_from_abi) {}
        MusicProperties(MusicProperties const&) noexcept = default;
        MusicProperties(MusicProperties&&) noexcept = default;
        MusicProperties& operator=(MusicProperties const&) & noexcept = default;
        MusicProperties& operator=(MusicProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) StorageItemContentProperties : winrt::Windows::Storage::FileProperties::IStorageItemContentProperties
    {
        StorageItemContentProperties(std::nullptr_t) noexcept {}
        StorageItemContentProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::FileProperties::IStorageItemContentProperties(ptr, take_ownership_from_abi) {}
        StorageItemContentProperties(StorageItemContentProperties const&) noexcept = default;
        StorageItemContentProperties(StorageItemContentProperties&&) noexcept = default;
        StorageItemContentProperties& operator=(StorageItemContentProperties const&) & noexcept = default;
        StorageItemContentProperties& operator=(StorageItemContentProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) StorageItemThumbnail : winrt::Windows::Storage::Streams::IRandomAccessStreamWithContentType,
        impl::require<StorageItemThumbnail, winrt::Windows::Storage::FileProperties::IThumbnailProperties>
    {
        StorageItemThumbnail(std::nullptr_t) noexcept {}
        StorageItemThumbnail(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::Streams::IRandomAccessStreamWithContentType(ptr, take_ownership_from_abi) {}
        StorageItemThumbnail(StorageItemThumbnail const&) noexcept = default;
        StorageItemThumbnail(StorageItemThumbnail&&) noexcept = default;
        StorageItemThumbnail& operator=(StorageItemThumbnail const&) & noexcept = default;
        StorageItemThumbnail& operator=(StorageItemThumbnail&&) & noexcept = default;
    };
    struct __declspec(empty_bases) VideoProperties : winrt::Windows::Storage::FileProperties::IVideoProperties
    {
        VideoProperties(std::nullptr_t) noexcept {}
        VideoProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::FileProperties::IVideoProperties(ptr, take_ownership_from_abi) {}
        VideoProperties(VideoProperties const&) noexcept = default;
        VideoProperties(VideoProperties&&) noexcept = default;
        VideoProperties& operator=(VideoProperties const&) & noexcept = default;
        VideoProperties& operator=(VideoProperties&&) & noexcept = default;
    };
}
#endif
