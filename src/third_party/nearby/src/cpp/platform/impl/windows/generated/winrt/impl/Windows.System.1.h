// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_System_1_H
#define WINRT_Windows_System_1_H
#include "winrt/impl/Windows.System.0.h"
WINRT_EXPORT namespace winrt::Windows::System
{
    struct __declspec(empty_bases) IAppActivationResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppActivationResult>
    {
        IAppActivationResult(std::nullptr_t = nullptr) noexcept {}
        IAppActivationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppActivationResult(IAppActivationResult const&) noexcept = default;
        IAppActivationResult(IAppActivationResult&&) noexcept = default;
        IAppActivationResult& operator=(IAppActivationResult const&) & noexcept = default;
        IAppActivationResult& operator=(IAppActivationResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppDiagnosticInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppDiagnosticInfo>
    {
        IAppDiagnosticInfo(std::nullptr_t = nullptr) noexcept {}
        IAppDiagnosticInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppDiagnosticInfo(IAppDiagnosticInfo const&) noexcept = default;
        IAppDiagnosticInfo(IAppDiagnosticInfo&&) noexcept = default;
        IAppDiagnosticInfo& operator=(IAppDiagnosticInfo const&) & noexcept = default;
        IAppDiagnosticInfo& operator=(IAppDiagnosticInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppDiagnosticInfo2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppDiagnosticInfo2>
    {
        IAppDiagnosticInfo2(std::nullptr_t = nullptr) noexcept {}
        IAppDiagnosticInfo2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppDiagnosticInfo2(IAppDiagnosticInfo2 const&) noexcept = default;
        IAppDiagnosticInfo2(IAppDiagnosticInfo2&&) noexcept = default;
        IAppDiagnosticInfo2& operator=(IAppDiagnosticInfo2 const&) & noexcept = default;
        IAppDiagnosticInfo2& operator=(IAppDiagnosticInfo2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppDiagnosticInfo3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppDiagnosticInfo3>
    {
        IAppDiagnosticInfo3(std::nullptr_t = nullptr) noexcept {}
        IAppDiagnosticInfo3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppDiagnosticInfo3(IAppDiagnosticInfo3 const&) noexcept = default;
        IAppDiagnosticInfo3(IAppDiagnosticInfo3&&) noexcept = default;
        IAppDiagnosticInfo3& operator=(IAppDiagnosticInfo3 const&) & noexcept = default;
        IAppDiagnosticInfo3& operator=(IAppDiagnosticInfo3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppDiagnosticInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppDiagnosticInfoStatics>
    {
        IAppDiagnosticInfoStatics(std::nullptr_t = nullptr) noexcept {}
        IAppDiagnosticInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppDiagnosticInfoStatics(IAppDiagnosticInfoStatics const&) noexcept = default;
        IAppDiagnosticInfoStatics(IAppDiagnosticInfoStatics&&) noexcept = default;
        IAppDiagnosticInfoStatics& operator=(IAppDiagnosticInfoStatics const&) & noexcept = default;
        IAppDiagnosticInfoStatics& operator=(IAppDiagnosticInfoStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppDiagnosticInfoStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppDiagnosticInfoStatics2>
    {
        IAppDiagnosticInfoStatics2(std::nullptr_t = nullptr) noexcept {}
        IAppDiagnosticInfoStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppDiagnosticInfoStatics2(IAppDiagnosticInfoStatics2 const&) noexcept = default;
        IAppDiagnosticInfoStatics2(IAppDiagnosticInfoStatics2&&) noexcept = default;
        IAppDiagnosticInfoStatics2& operator=(IAppDiagnosticInfoStatics2 const&) & noexcept = default;
        IAppDiagnosticInfoStatics2& operator=(IAppDiagnosticInfoStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppDiagnosticInfoWatcher :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppDiagnosticInfoWatcher>
    {
        IAppDiagnosticInfoWatcher(std::nullptr_t = nullptr) noexcept {}
        IAppDiagnosticInfoWatcher(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppDiagnosticInfoWatcher(IAppDiagnosticInfoWatcher const&) noexcept = default;
        IAppDiagnosticInfoWatcher(IAppDiagnosticInfoWatcher&&) noexcept = default;
        IAppDiagnosticInfoWatcher& operator=(IAppDiagnosticInfoWatcher const&) & noexcept = default;
        IAppDiagnosticInfoWatcher& operator=(IAppDiagnosticInfoWatcher&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppDiagnosticInfoWatcherEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppDiagnosticInfoWatcherEventArgs>
    {
        IAppDiagnosticInfoWatcherEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppDiagnosticInfoWatcherEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppDiagnosticInfoWatcherEventArgs(IAppDiagnosticInfoWatcherEventArgs const&) noexcept = default;
        IAppDiagnosticInfoWatcherEventArgs(IAppDiagnosticInfoWatcherEventArgs&&) noexcept = default;
        IAppDiagnosticInfoWatcherEventArgs& operator=(IAppDiagnosticInfoWatcherEventArgs const&) & noexcept = default;
        IAppDiagnosticInfoWatcherEventArgs& operator=(IAppDiagnosticInfoWatcherEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppExecutionStateChangeResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppExecutionStateChangeResult>
    {
        IAppExecutionStateChangeResult(std::nullptr_t = nullptr) noexcept {}
        IAppExecutionStateChangeResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppExecutionStateChangeResult(IAppExecutionStateChangeResult const&) noexcept = default;
        IAppExecutionStateChangeResult(IAppExecutionStateChangeResult&&) noexcept = default;
        IAppExecutionStateChangeResult& operator=(IAppExecutionStateChangeResult const&) & noexcept = default;
        IAppExecutionStateChangeResult& operator=(IAppExecutionStateChangeResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppMemoryReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppMemoryReport>
    {
        IAppMemoryReport(std::nullptr_t = nullptr) noexcept {}
        IAppMemoryReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppMemoryReport(IAppMemoryReport const&) noexcept = default;
        IAppMemoryReport(IAppMemoryReport&&) noexcept = default;
        IAppMemoryReport& operator=(IAppMemoryReport const&) & noexcept = default;
        IAppMemoryReport& operator=(IAppMemoryReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppMemoryReport2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppMemoryReport2>
    {
        IAppMemoryReport2(std::nullptr_t = nullptr) noexcept {}
        IAppMemoryReport2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppMemoryReport2(IAppMemoryReport2 const&) noexcept = default;
        IAppMemoryReport2(IAppMemoryReport2&&) noexcept = default;
        IAppMemoryReport2& operator=(IAppMemoryReport2 const&) & noexcept = default;
        IAppMemoryReport2& operator=(IAppMemoryReport2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppMemoryUsageLimitChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppMemoryUsageLimitChangingEventArgs>
    {
        IAppMemoryUsageLimitChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppMemoryUsageLimitChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppMemoryUsageLimitChangingEventArgs(IAppMemoryUsageLimitChangingEventArgs const&) noexcept = default;
        IAppMemoryUsageLimitChangingEventArgs(IAppMemoryUsageLimitChangingEventArgs&&) noexcept = default;
        IAppMemoryUsageLimitChangingEventArgs& operator=(IAppMemoryUsageLimitChangingEventArgs const&) & noexcept = default;
        IAppMemoryUsageLimitChangingEventArgs& operator=(IAppMemoryUsageLimitChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppResourceGroupBackgroundTaskReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppResourceGroupBackgroundTaskReport>
    {
        IAppResourceGroupBackgroundTaskReport(std::nullptr_t = nullptr) noexcept {}
        IAppResourceGroupBackgroundTaskReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppResourceGroupBackgroundTaskReport(IAppResourceGroupBackgroundTaskReport const&) noexcept = default;
        IAppResourceGroupBackgroundTaskReport(IAppResourceGroupBackgroundTaskReport&&) noexcept = default;
        IAppResourceGroupBackgroundTaskReport& operator=(IAppResourceGroupBackgroundTaskReport const&) & noexcept = default;
        IAppResourceGroupBackgroundTaskReport& operator=(IAppResourceGroupBackgroundTaskReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppResourceGroupInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppResourceGroupInfo>
    {
        IAppResourceGroupInfo(std::nullptr_t = nullptr) noexcept {}
        IAppResourceGroupInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppResourceGroupInfo(IAppResourceGroupInfo const&) noexcept = default;
        IAppResourceGroupInfo(IAppResourceGroupInfo&&) noexcept = default;
        IAppResourceGroupInfo& operator=(IAppResourceGroupInfo const&) & noexcept = default;
        IAppResourceGroupInfo& operator=(IAppResourceGroupInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppResourceGroupInfo2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppResourceGroupInfo2>
    {
        IAppResourceGroupInfo2(std::nullptr_t = nullptr) noexcept {}
        IAppResourceGroupInfo2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppResourceGroupInfo2(IAppResourceGroupInfo2 const&) noexcept = default;
        IAppResourceGroupInfo2(IAppResourceGroupInfo2&&) noexcept = default;
        IAppResourceGroupInfo2& operator=(IAppResourceGroupInfo2 const&) & noexcept = default;
        IAppResourceGroupInfo2& operator=(IAppResourceGroupInfo2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppResourceGroupInfoWatcher :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppResourceGroupInfoWatcher>
    {
        IAppResourceGroupInfoWatcher(std::nullptr_t = nullptr) noexcept {}
        IAppResourceGroupInfoWatcher(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppResourceGroupInfoWatcher(IAppResourceGroupInfoWatcher const&) noexcept = default;
        IAppResourceGroupInfoWatcher(IAppResourceGroupInfoWatcher&&) noexcept = default;
        IAppResourceGroupInfoWatcher& operator=(IAppResourceGroupInfoWatcher const&) & noexcept = default;
        IAppResourceGroupInfoWatcher& operator=(IAppResourceGroupInfoWatcher&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppResourceGroupInfoWatcherEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppResourceGroupInfoWatcherEventArgs>
    {
        IAppResourceGroupInfoWatcherEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppResourceGroupInfoWatcherEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppResourceGroupInfoWatcherEventArgs(IAppResourceGroupInfoWatcherEventArgs const&) noexcept = default;
        IAppResourceGroupInfoWatcherEventArgs(IAppResourceGroupInfoWatcherEventArgs&&) noexcept = default;
        IAppResourceGroupInfoWatcherEventArgs& operator=(IAppResourceGroupInfoWatcherEventArgs const&) & noexcept = default;
        IAppResourceGroupInfoWatcherEventArgs& operator=(IAppResourceGroupInfoWatcherEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs>
    {
        IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs(IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs const&) noexcept = default;
        IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs(IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs&&) noexcept = default;
        IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs& operator=(IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs const&) & noexcept = default;
        IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs& operator=(IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppResourceGroupMemoryReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppResourceGroupMemoryReport>
    {
        IAppResourceGroupMemoryReport(std::nullptr_t = nullptr) noexcept {}
        IAppResourceGroupMemoryReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppResourceGroupMemoryReport(IAppResourceGroupMemoryReport const&) noexcept = default;
        IAppResourceGroupMemoryReport(IAppResourceGroupMemoryReport&&) noexcept = default;
        IAppResourceGroupMemoryReport& operator=(IAppResourceGroupMemoryReport const&) & noexcept = default;
        IAppResourceGroupMemoryReport& operator=(IAppResourceGroupMemoryReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppResourceGroupStateReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppResourceGroupStateReport>
    {
        IAppResourceGroupStateReport(std::nullptr_t = nullptr) noexcept {}
        IAppResourceGroupStateReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppResourceGroupStateReport(IAppResourceGroupStateReport const&) noexcept = default;
        IAppResourceGroupStateReport(IAppResourceGroupStateReport&&) noexcept = default;
        IAppResourceGroupStateReport& operator=(IAppResourceGroupStateReport const&) & noexcept = default;
        IAppResourceGroupStateReport& operator=(IAppResourceGroupStateReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppUriHandlerHost :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppUriHandlerHost>
    {
        IAppUriHandlerHost(std::nullptr_t = nullptr) noexcept {}
        IAppUriHandlerHost(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppUriHandlerHost(IAppUriHandlerHost const&) noexcept = default;
        IAppUriHandlerHost(IAppUriHandlerHost&&) noexcept = default;
        IAppUriHandlerHost& operator=(IAppUriHandlerHost const&) & noexcept = default;
        IAppUriHandlerHost& operator=(IAppUriHandlerHost&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppUriHandlerHostFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppUriHandlerHostFactory>
    {
        IAppUriHandlerHostFactory(std::nullptr_t = nullptr) noexcept {}
        IAppUriHandlerHostFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppUriHandlerHostFactory(IAppUriHandlerHostFactory const&) noexcept = default;
        IAppUriHandlerHostFactory(IAppUriHandlerHostFactory&&) noexcept = default;
        IAppUriHandlerHostFactory& operator=(IAppUriHandlerHostFactory const&) & noexcept = default;
        IAppUriHandlerHostFactory& operator=(IAppUriHandlerHostFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppUriHandlerRegistration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppUriHandlerRegistration>
    {
        IAppUriHandlerRegistration(std::nullptr_t = nullptr) noexcept {}
        IAppUriHandlerRegistration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppUriHandlerRegistration(IAppUriHandlerRegistration const&) noexcept = default;
        IAppUriHandlerRegistration(IAppUriHandlerRegistration&&) noexcept = default;
        IAppUriHandlerRegistration& operator=(IAppUriHandlerRegistration const&) & noexcept = default;
        IAppUriHandlerRegistration& operator=(IAppUriHandlerRegistration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppUriHandlerRegistrationManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppUriHandlerRegistrationManager>
    {
        IAppUriHandlerRegistrationManager(std::nullptr_t = nullptr) noexcept {}
        IAppUriHandlerRegistrationManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppUriHandlerRegistrationManager(IAppUriHandlerRegistrationManager const&) noexcept = default;
        IAppUriHandlerRegistrationManager(IAppUriHandlerRegistrationManager&&) noexcept = default;
        IAppUriHandlerRegistrationManager& operator=(IAppUriHandlerRegistrationManager const&) & noexcept = default;
        IAppUriHandlerRegistrationManager& operator=(IAppUriHandlerRegistrationManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppUriHandlerRegistrationManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppUriHandlerRegistrationManagerStatics>
    {
        IAppUriHandlerRegistrationManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IAppUriHandlerRegistrationManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppUriHandlerRegistrationManagerStatics(IAppUriHandlerRegistrationManagerStatics const&) noexcept = default;
        IAppUriHandlerRegistrationManagerStatics(IAppUriHandlerRegistrationManagerStatics&&) noexcept = default;
        IAppUriHandlerRegistrationManagerStatics& operator=(IAppUriHandlerRegistrationManagerStatics const&) & noexcept = default;
        IAppUriHandlerRegistrationManagerStatics& operator=(IAppUriHandlerRegistrationManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDateTimeSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDateTimeSettingsStatics>
    {
        IDateTimeSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        IDateTimeSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDateTimeSettingsStatics(IDateTimeSettingsStatics const&) noexcept = default;
        IDateTimeSettingsStatics(IDateTimeSettingsStatics&&) noexcept = default;
        IDateTimeSettingsStatics& operator=(IDateTimeSettingsStatics const&) & noexcept = default;
        IDateTimeSettingsStatics& operator=(IDateTimeSettingsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDispatcherQueue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDispatcherQueue>
    {
        IDispatcherQueue(std::nullptr_t = nullptr) noexcept {}
        IDispatcherQueue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDispatcherQueue(IDispatcherQueue const&) noexcept = default;
        IDispatcherQueue(IDispatcherQueue&&) noexcept = default;
        IDispatcherQueue& operator=(IDispatcherQueue const&) & noexcept = default;
        IDispatcherQueue& operator=(IDispatcherQueue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDispatcherQueue2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDispatcherQueue2>
    {
        IDispatcherQueue2(std::nullptr_t = nullptr) noexcept {}
        IDispatcherQueue2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDispatcherQueue2(IDispatcherQueue2 const&) noexcept = default;
        IDispatcherQueue2(IDispatcherQueue2&&) noexcept = default;
        IDispatcherQueue2& operator=(IDispatcherQueue2 const&) & noexcept = default;
        IDispatcherQueue2& operator=(IDispatcherQueue2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDispatcherQueueController :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDispatcherQueueController>
    {
        IDispatcherQueueController(std::nullptr_t = nullptr) noexcept {}
        IDispatcherQueueController(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDispatcherQueueController(IDispatcherQueueController const&) noexcept = default;
        IDispatcherQueueController(IDispatcherQueueController&&) noexcept = default;
        IDispatcherQueueController& operator=(IDispatcherQueueController const&) & noexcept = default;
        IDispatcherQueueController& operator=(IDispatcherQueueController&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDispatcherQueueControllerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDispatcherQueueControllerStatics>
    {
        IDispatcherQueueControllerStatics(std::nullptr_t = nullptr) noexcept {}
        IDispatcherQueueControllerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDispatcherQueueControllerStatics(IDispatcherQueueControllerStatics const&) noexcept = default;
        IDispatcherQueueControllerStatics(IDispatcherQueueControllerStatics&&) noexcept = default;
        IDispatcherQueueControllerStatics& operator=(IDispatcherQueueControllerStatics const&) & noexcept = default;
        IDispatcherQueueControllerStatics& operator=(IDispatcherQueueControllerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDispatcherQueueShutdownStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDispatcherQueueShutdownStartingEventArgs>
    {
        IDispatcherQueueShutdownStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDispatcherQueueShutdownStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDispatcherQueueShutdownStartingEventArgs(IDispatcherQueueShutdownStartingEventArgs const&) noexcept = default;
        IDispatcherQueueShutdownStartingEventArgs(IDispatcherQueueShutdownStartingEventArgs&&) noexcept = default;
        IDispatcherQueueShutdownStartingEventArgs& operator=(IDispatcherQueueShutdownStartingEventArgs const&) & noexcept = default;
        IDispatcherQueueShutdownStartingEventArgs& operator=(IDispatcherQueueShutdownStartingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDispatcherQueueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDispatcherQueueStatics>
    {
        IDispatcherQueueStatics(std::nullptr_t = nullptr) noexcept {}
        IDispatcherQueueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDispatcherQueueStatics(IDispatcherQueueStatics const&) noexcept = default;
        IDispatcherQueueStatics(IDispatcherQueueStatics&&) noexcept = default;
        IDispatcherQueueStatics& operator=(IDispatcherQueueStatics const&) & noexcept = default;
        IDispatcherQueueStatics& operator=(IDispatcherQueueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDispatcherQueueTimer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDispatcherQueueTimer>
    {
        IDispatcherQueueTimer(std::nullptr_t = nullptr) noexcept {}
        IDispatcherQueueTimer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDispatcherQueueTimer(IDispatcherQueueTimer const&) noexcept = default;
        IDispatcherQueueTimer(IDispatcherQueueTimer&&) noexcept = default;
        IDispatcherQueueTimer& operator=(IDispatcherQueueTimer const&) & noexcept = default;
        IDispatcherQueueTimer& operator=(IDispatcherQueueTimer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFolderLauncherOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFolderLauncherOptions>
    {
        IFolderLauncherOptions(std::nullptr_t = nullptr) noexcept {}
        IFolderLauncherOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFolderLauncherOptions(IFolderLauncherOptions const&) noexcept = default;
        IFolderLauncherOptions(IFolderLauncherOptions&&) noexcept = default;
        IFolderLauncherOptions& operator=(IFolderLauncherOptions const&) & noexcept = default;
        IFolderLauncherOptions& operator=(IFolderLauncherOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKnownUserPropertiesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKnownUserPropertiesStatics>
    {
        IKnownUserPropertiesStatics(std::nullptr_t = nullptr) noexcept {}
        IKnownUserPropertiesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKnownUserPropertiesStatics(IKnownUserPropertiesStatics const&) noexcept = default;
        IKnownUserPropertiesStatics(IKnownUserPropertiesStatics&&) noexcept = default;
        IKnownUserPropertiesStatics& operator=(IKnownUserPropertiesStatics const&) & noexcept = default;
        IKnownUserPropertiesStatics& operator=(IKnownUserPropertiesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILaunchUriResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILaunchUriResult>
    {
        ILaunchUriResult(std::nullptr_t = nullptr) noexcept {}
        ILaunchUriResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILaunchUriResult(ILaunchUriResult const&) noexcept = default;
        ILaunchUriResult(ILaunchUriResult&&) noexcept = default;
        ILaunchUriResult& operator=(ILaunchUriResult const&) & noexcept = default;
        ILaunchUriResult& operator=(ILaunchUriResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherOptions>
    {
        ILauncherOptions(std::nullptr_t = nullptr) noexcept {}
        ILauncherOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherOptions(ILauncherOptions const&) noexcept = default;
        ILauncherOptions(ILauncherOptions&&) noexcept = default;
        ILauncherOptions& operator=(ILauncherOptions const&) & noexcept = default;
        ILauncherOptions& operator=(ILauncherOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherOptions2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherOptions2>
    {
        ILauncherOptions2(std::nullptr_t = nullptr) noexcept {}
        ILauncherOptions2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherOptions2(ILauncherOptions2 const&) noexcept = default;
        ILauncherOptions2(ILauncherOptions2&&) noexcept = default;
        ILauncherOptions2& operator=(ILauncherOptions2 const&) & noexcept = default;
        ILauncherOptions2& operator=(ILauncherOptions2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherOptions3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherOptions3>
    {
        ILauncherOptions3(std::nullptr_t = nullptr) noexcept {}
        ILauncherOptions3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherOptions3(ILauncherOptions3 const&) noexcept = default;
        ILauncherOptions3(ILauncherOptions3&&) noexcept = default;
        ILauncherOptions3& operator=(ILauncherOptions3 const&) & noexcept = default;
        ILauncherOptions3& operator=(ILauncherOptions3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherOptions4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherOptions4>
    {
        ILauncherOptions4(std::nullptr_t = nullptr) noexcept {}
        ILauncherOptions4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherOptions4(ILauncherOptions4 const&) noexcept = default;
        ILauncherOptions4(ILauncherOptions4&&) noexcept = default;
        ILauncherOptions4& operator=(ILauncherOptions4 const&) & noexcept = default;
        ILauncherOptions4& operator=(ILauncherOptions4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherStatics>
    {
        ILauncherStatics(std::nullptr_t = nullptr) noexcept {}
        ILauncherStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherStatics(ILauncherStatics const&) noexcept = default;
        ILauncherStatics(ILauncherStatics&&) noexcept = default;
        ILauncherStatics& operator=(ILauncherStatics const&) & noexcept = default;
        ILauncherStatics& operator=(ILauncherStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherStatics2>
    {
        ILauncherStatics2(std::nullptr_t = nullptr) noexcept {}
        ILauncherStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherStatics2(ILauncherStatics2 const&) noexcept = default;
        ILauncherStatics2(ILauncherStatics2&&) noexcept = default;
        ILauncherStatics2& operator=(ILauncherStatics2 const&) & noexcept = default;
        ILauncherStatics2& operator=(ILauncherStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherStatics3>
    {
        ILauncherStatics3(std::nullptr_t = nullptr) noexcept {}
        ILauncherStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherStatics3(ILauncherStatics3 const&) noexcept = default;
        ILauncherStatics3(ILauncherStatics3&&) noexcept = default;
        ILauncherStatics3& operator=(ILauncherStatics3 const&) & noexcept = default;
        ILauncherStatics3& operator=(ILauncherStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherStatics4>
    {
        ILauncherStatics4(std::nullptr_t = nullptr) noexcept {}
        ILauncherStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherStatics4(ILauncherStatics4 const&) noexcept = default;
        ILauncherStatics4(ILauncherStatics4&&) noexcept = default;
        ILauncherStatics4& operator=(ILauncherStatics4 const&) & noexcept = default;
        ILauncherStatics4& operator=(ILauncherStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherStatics5>
    {
        ILauncherStatics5(std::nullptr_t = nullptr) noexcept {}
        ILauncherStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherStatics5(ILauncherStatics5 const&) noexcept = default;
        ILauncherStatics5(ILauncherStatics5&&) noexcept = default;
        ILauncherStatics5& operator=(ILauncherStatics5 const&) & noexcept = default;
        ILauncherStatics5& operator=(ILauncherStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherUIOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherUIOptions>
    {
        ILauncherUIOptions(std::nullptr_t = nullptr) noexcept {}
        ILauncherUIOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherUIOptions(ILauncherUIOptions const&) noexcept = default;
        ILauncherUIOptions(ILauncherUIOptions&&) noexcept = default;
        ILauncherUIOptions& operator=(ILauncherUIOptions const&) & noexcept = default;
        ILauncherUIOptions& operator=(ILauncherUIOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILauncherViewOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILauncherViewOptions>
    {
        ILauncherViewOptions(std::nullptr_t = nullptr) noexcept {}
        ILauncherViewOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILauncherViewOptions(ILauncherViewOptions const&) noexcept = default;
        ILauncherViewOptions(ILauncherViewOptions&&) noexcept = default;
        ILauncherViewOptions& operator=(ILauncherViewOptions const&) & noexcept = default;
        ILauncherViewOptions& operator=(ILauncherViewOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMemoryManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMemoryManagerStatics>
    {
        IMemoryManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IMemoryManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMemoryManagerStatics(IMemoryManagerStatics const&) noexcept = default;
        IMemoryManagerStatics(IMemoryManagerStatics&&) noexcept = default;
        IMemoryManagerStatics& operator=(IMemoryManagerStatics const&) & noexcept = default;
        IMemoryManagerStatics& operator=(IMemoryManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMemoryManagerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMemoryManagerStatics2>
    {
        IMemoryManagerStatics2(std::nullptr_t = nullptr) noexcept {}
        IMemoryManagerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMemoryManagerStatics2(IMemoryManagerStatics2 const&) noexcept = default;
        IMemoryManagerStatics2(IMemoryManagerStatics2&&) noexcept = default;
        IMemoryManagerStatics2& operator=(IMemoryManagerStatics2 const&) & noexcept = default;
        IMemoryManagerStatics2& operator=(IMemoryManagerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMemoryManagerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMemoryManagerStatics3>
    {
        IMemoryManagerStatics3(std::nullptr_t = nullptr) noexcept {}
        IMemoryManagerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMemoryManagerStatics3(IMemoryManagerStatics3 const&) noexcept = default;
        IMemoryManagerStatics3(IMemoryManagerStatics3&&) noexcept = default;
        IMemoryManagerStatics3& operator=(IMemoryManagerStatics3 const&) & noexcept = default;
        IMemoryManagerStatics3& operator=(IMemoryManagerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMemoryManagerStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMemoryManagerStatics4>
    {
        IMemoryManagerStatics4(std::nullptr_t = nullptr) noexcept {}
        IMemoryManagerStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMemoryManagerStatics4(IMemoryManagerStatics4 const&) noexcept = default;
        IMemoryManagerStatics4(IMemoryManagerStatics4&&) noexcept = default;
        IMemoryManagerStatics4& operator=(IMemoryManagerStatics4 const&) & noexcept = default;
        IMemoryManagerStatics4& operator=(IMemoryManagerStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessLauncherOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessLauncherOptions>
    {
        IProcessLauncherOptions(std::nullptr_t = nullptr) noexcept {}
        IProcessLauncherOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessLauncherOptions(IProcessLauncherOptions const&) noexcept = default;
        IProcessLauncherOptions(IProcessLauncherOptions&&) noexcept = default;
        IProcessLauncherOptions& operator=(IProcessLauncherOptions const&) & noexcept = default;
        IProcessLauncherOptions& operator=(IProcessLauncherOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessLauncherResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessLauncherResult>
    {
        IProcessLauncherResult(std::nullptr_t = nullptr) noexcept {}
        IProcessLauncherResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessLauncherResult(IProcessLauncherResult const&) noexcept = default;
        IProcessLauncherResult(IProcessLauncherResult&&) noexcept = default;
        IProcessLauncherResult& operator=(IProcessLauncherResult const&) & noexcept = default;
        IProcessLauncherResult& operator=(IProcessLauncherResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessLauncherStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessLauncherStatics>
    {
        IProcessLauncherStatics(std::nullptr_t = nullptr) noexcept {}
        IProcessLauncherStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessLauncherStatics(IProcessLauncherStatics const&) noexcept = default;
        IProcessLauncherStatics(IProcessLauncherStatics&&) noexcept = default;
        IProcessLauncherStatics& operator=(IProcessLauncherStatics const&) & noexcept = default;
        IProcessLauncherStatics& operator=(IProcessLauncherStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProcessMemoryReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProcessMemoryReport>
    {
        IProcessMemoryReport(std::nullptr_t = nullptr) noexcept {}
        IProcessMemoryReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProcessMemoryReport(IProcessMemoryReport const&) noexcept = default;
        IProcessMemoryReport(IProcessMemoryReport&&) noexcept = default;
        IProcessMemoryReport& operator=(IProcessMemoryReport const&) & noexcept = default;
        IProcessMemoryReport& operator=(IProcessMemoryReport&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProtocolForResultsOperation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProtocolForResultsOperation>
    {
        IProtocolForResultsOperation(std::nullptr_t = nullptr) noexcept {}
        IProtocolForResultsOperation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProtocolForResultsOperation(IProtocolForResultsOperation const&) noexcept = default;
        IProtocolForResultsOperation(IProtocolForResultsOperation&&) noexcept = default;
        IProtocolForResultsOperation& operator=(IProtocolForResultsOperation const&) & noexcept = default;
        IProtocolForResultsOperation& operator=(IProtocolForResultsOperation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRemoteLauncherOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRemoteLauncherOptions>
    {
        IRemoteLauncherOptions(std::nullptr_t = nullptr) noexcept {}
        IRemoteLauncherOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRemoteLauncherOptions(IRemoteLauncherOptions const&) noexcept = default;
        IRemoteLauncherOptions(IRemoteLauncherOptions&&) noexcept = default;
        IRemoteLauncherOptions& operator=(IRemoteLauncherOptions const&) & noexcept = default;
        IRemoteLauncherOptions& operator=(IRemoteLauncherOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRemoteLauncherStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRemoteLauncherStatics>
    {
        IRemoteLauncherStatics(std::nullptr_t = nullptr) noexcept {}
        IRemoteLauncherStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRemoteLauncherStatics(IRemoteLauncherStatics const&) noexcept = default;
        IRemoteLauncherStatics(IRemoteLauncherStatics&&) noexcept = default;
        IRemoteLauncherStatics& operator=(IRemoteLauncherStatics const&) & noexcept = default;
        IRemoteLauncherStatics& operator=(IRemoteLauncherStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShutdownManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShutdownManagerStatics>
    {
        IShutdownManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IShutdownManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShutdownManagerStatics(IShutdownManagerStatics const&) noexcept = default;
        IShutdownManagerStatics(IShutdownManagerStatics&&) noexcept = default;
        IShutdownManagerStatics& operator=(IShutdownManagerStatics const&) & noexcept = default;
        IShutdownManagerStatics& operator=(IShutdownManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShutdownManagerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShutdownManagerStatics2>,
        impl::require<winrt::Windows::System::IShutdownManagerStatics2, winrt::Windows::System::IShutdownManagerStatics>
    {
        IShutdownManagerStatics2(std::nullptr_t = nullptr) noexcept {}
        IShutdownManagerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShutdownManagerStatics2(IShutdownManagerStatics2 const&) noexcept = default;
        IShutdownManagerStatics2(IShutdownManagerStatics2&&) noexcept = default;
        IShutdownManagerStatics2& operator=(IShutdownManagerStatics2 const&) & noexcept = default;
        IShutdownManagerStatics2& operator=(IShutdownManagerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimeZoneSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimeZoneSettingsStatics>
    {
        ITimeZoneSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        ITimeZoneSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimeZoneSettingsStatics(ITimeZoneSettingsStatics const&) noexcept = default;
        ITimeZoneSettingsStatics(ITimeZoneSettingsStatics&&) noexcept = default;
        ITimeZoneSettingsStatics& operator=(ITimeZoneSettingsStatics const&) & noexcept = default;
        ITimeZoneSettingsStatics& operator=(ITimeZoneSettingsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimeZoneSettingsStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimeZoneSettingsStatics2>
    {
        ITimeZoneSettingsStatics2(std::nullptr_t = nullptr) noexcept {}
        ITimeZoneSettingsStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimeZoneSettingsStatics2(ITimeZoneSettingsStatics2 const&) noexcept = default;
        ITimeZoneSettingsStatics2(ITimeZoneSettingsStatics2&&) noexcept = default;
        ITimeZoneSettingsStatics2& operator=(ITimeZoneSettingsStatics2 const&) & noexcept = default;
        ITimeZoneSettingsStatics2& operator=(ITimeZoneSettingsStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUser :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUser>
    {
        IUser(std::nullptr_t = nullptr) noexcept {}
        IUser(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUser(IUser const&) noexcept = default;
        IUser(IUser&&) noexcept = default;
        IUser& operator=(IUser const&) & noexcept = default;
        IUser& operator=(IUser&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserAuthenticationStatusChangeDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserAuthenticationStatusChangeDeferral>
    {
        IUserAuthenticationStatusChangeDeferral(std::nullptr_t = nullptr) noexcept {}
        IUserAuthenticationStatusChangeDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserAuthenticationStatusChangeDeferral(IUserAuthenticationStatusChangeDeferral const&) noexcept = default;
        IUserAuthenticationStatusChangeDeferral(IUserAuthenticationStatusChangeDeferral&&) noexcept = default;
        IUserAuthenticationStatusChangeDeferral& operator=(IUserAuthenticationStatusChangeDeferral const&) & noexcept = default;
        IUserAuthenticationStatusChangeDeferral& operator=(IUserAuthenticationStatusChangeDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserAuthenticationStatusChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserAuthenticationStatusChangingEventArgs>
    {
        IUserAuthenticationStatusChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUserAuthenticationStatusChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserAuthenticationStatusChangingEventArgs(IUserAuthenticationStatusChangingEventArgs const&) noexcept = default;
        IUserAuthenticationStatusChangingEventArgs(IUserAuthenticationStatusChangingEventArgs&&) noexcept = default;
        IUserAuthenticationStatusChangingEventArgs& operator=(IUserAuthenticationStatusChangingEventArgs const&) & noexcept = default;
        IUserAuthenticationStatusChangingEventArgs& operator=(IUserAuthenticationStatusChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserChangedEventArgs>
    {
        IUserChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUserChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserChangedEventArgs(IUserChangedEventArgs const&) noexcept = default;
        IUserChangedEventArgs(IUserChangedEventArgs&&) noexcept = default;
        IUserChangedEventArgs& operator=(IUserChangedEventArgs const&) & noexcept = default;
        IUserChangedEventArgs& operator=(IUserChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserChangedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserChangedEventArgs2>
    {
        IUserChangedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IUserChangedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserChangedEventArgs2(IUserChangedEventArgs2 const&) noexcept = default;
        IUserChangedEventArgs2(IUserChangedEventArgs2&&) noexcept = default;
        IUserChangedEventArgs2& operator=(IUserChangedEventArgs2 const&) & noexcept = default;
        IUserChangedEventArgs2& operator=(IUserChangedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDeviceAssociationChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDeviceAssociationChangedEventArgs>
    {
        IUserDeviceAssociationChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUserDeviceAssociationChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDeviceAssociationChangedEventArgs(IUserDeviceAssociationChangedEventArgs const&) noexcept = default;
        IUserDeviceAssociationChangedEventArgs(IUserDeviceAssociationChangedEventArgs&&) noexcept = default;
        IUserDeviceAssociationChangedEventArgs& operator=(IUserDeviceAssociationChangedEventArgs const&) & noexcept = default;
        IUserDeviceAssociationChangedEventArgs& operator=(IUserDeviceAssociationChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserDeviceAssociationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserDeviceAssociationStatics>
    {
        IUserDeviceAssociationStatics(std::nullptr_t = nullptr) noexcept {}
        IUserDeviceAssociationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserDeviceAssociationStatics(IUserDeviceAssociationStatics const&) noexcept = default;
        IUserDeviceAssociationStatics(IUserDeviceAssociationStatics&&) noexcept = default;
        IUserDeviceAssociationStatics& operator=(IUserDeviceAssociationStatics const&) & noexcept = default;
        IUserDeviceAssociationStatics& operator=(IUserDeviceAssociationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserPicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserPicker>
    {
        IUserPicker(std::nullptr_t = nullptr) noexcept {}
        IUserPicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserPicker(IUserPicker const&) noexcept = default;
        IUserPicker(IUserPicker&&) noexcept = default;
        IUserPicker& operator=(IUserPicker const&) & noexcept = default;
        IUserPicker& operator=(IUserPicker&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserPickerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserPickerStatics>
    {
        IUserPickerStatics(std::nullptr_t = nullptr) noexcept {}
        IUserPickerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserPickerStatics(IUserPickerStatics const&) noexcept = default;
        IUserPickerStatics(IUserPickerStatics&&) noexcept = default;
        IUserPickerStatics& operator=(IUserPickerStatics const&) & noexcept = default;
        IUserPickerStatics& operator=(IUserPickerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserStatics>
    {
        IUserStatics(std::nullptr_t = nullptr) noexcept {}
        IUserStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserStatics(IUserStatics const&) noexcept = default;
        IUserStatics(IUserStatics&&) noexcept = default;
        IUserStatics& operator=(IUserStatics const&) & noexcept = default;
        IUserStatics& operator=(IUserStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserWatcher :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserWatcher>
    {
        IUserWatcher(std::nullptr_t = nullptr) noexcept {}
        IUserWatcher(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserWatcher(IUserWatcher const&) noexcept = default;
        IUserWatcher(IUserWatcher&&) noexcept = default;
        IUserWatcher& operator=(IUserWatcher const&) & noexcept = default;
        IUserWatcher& operator=(IUserWatcher&&) & noexcept = default;
    };
}
#endif
