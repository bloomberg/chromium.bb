// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Input_Inking_Preview_1_H
#define WINRT_Windows_UI_Input_Inking_Preview_1_H
#include "winrt/impl/Windows.UI.Input.Inking.Preview.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Input::Inking::Preview
{
    struct __declspec(empty_bases) IPalmRejectionDelayZonePreview :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPalmRejectionDelayZonePreview>
    {
        IPalmRejectionDelayZonePreview(std::nullptr_t = nullptr) noexcept {}
        IPalmRejectionDelayZonePreview(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPalmRejectionDelayZonePreview(IPalmRejectionDelayZonePreview const&) noexcept = default;
        IPalmRejectionDelayZonePreview(IPalmRejectionDelayZonePreview&&) noexcept = default;
        IPalmRejectionDelayZonePreview& operator=(IPalmRejectionDelayZonePreview const&) & noexcept = default;
        IPalmRejectionDelayZonePreview& operator=(IPalmRejectionDelayZonePreview&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPalmRejectionDelayZonePreviewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPalmRejectionDelayZonePreviewStatics>
    {
        IPalmRejectionDelayZonePreviewStatics(std::nullptr_t = nullptr) noexcept {}
        IPalmRejectionDelayZonePreviewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPalmRejectionDelayZonePreviewStatics(IPalmRejectionDelayZonePreviewStatics const&) noexcept = default;
        IPalmRejectionDelayZonePreviewStatics(IPalmRejectionDelayZonePreviewStatics&&) noexcept = default;
        IPalmRejectionDelayZonePreviewStatics& operator=(IPalmRejectionDelayZonePreviewStatics const&) & noexcept = default;
        IPalmRejectionDelayZonePreviewStatics& operator=(IPalmRejectionDelayZonePreviewStatics&&) & noexcept = default;
    };
}
#endif
