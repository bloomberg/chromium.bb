// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Xaml_Controls_Maps_1_H
#define WINRT_Windows_UI_Xaml_Controls_Maps_1_H
#include "winrt/impl/Windows.UI.Xaml.Controls.Maps.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Controls::Maps
{
    struct __declspec(empty_bases) ICustomMapTileDataSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomMapTileDataSource>
    {
        ICustomMapTileDataSource(std::nullptr_t = nullptr) noexcept {}
        ICustomMapTileDataSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICustomMapTileDataSource(ICustomMapTileDataSource const&) noexcept = default;
        ICustomMapTileDataSource(ICustomMapTileDataSource&&) noexcept = default;
        ICustomMapTileDataSource& operator=(ICustomMapTileDataSource const&) & noexcept = default;
        ICustomMapTileDataSource& operator=(ICustomMapTileDataSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICustomMapTileDataSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomMapTileDataSourceFactory>
    {
        ICustomMapTileDataSourceFactory(std::nullptr_t = nullptr) noexcept {}
        ICustomMapTileDataSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICustomMapTileDataSourceFactory(ICustomMapTileDataSourceFactory const&) noexcept = default;
        ICustomMapTileDataSourceFactory(ICustomMapTileDataSourceFactory&&) noexcept = default;
        ICustomMapTileDataSourceFactory& operator=(ICustomMapTileDataSourceFactory const&) & noexcept = default;
        ICustomMapTileDataSourceFactory& operator=(ICustomMapTileDataSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMapTileDataSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMapTileDataSource>
    {
        IHttpMapTileDataSource(std::nullptr_t = nullptr) noexcept {}
        IHttpMapTileDataSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMapTileDataSource(IHttpMapTileDataSource const&) noexcept = default;
        IHttpMapTileDataSource(IHttpMapTileDataSource&&) noexcept = default;
        IHttpMapTileDataSource& operator=(IHttpMapTileDataSource const&) & noexcept = default;
        IHttpMapTileDataSource& operator=(IHttpMapTileDataSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHttpMapTileDataSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHttpMapTileDataSourceFactory>
    {
        IHttpMapTileDataSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IHttpMapTileDataSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHttpMapTileDataSourceFactory(IHttpMapTileDataSourceFactory const&) noexcept = default;
        IHttpMapTileDataSourceFactory(IHttpMapTileDataSourceFactory&&) noexcept = default;
        IHttpMapTileDataSourceFactory& operator=(IHttpMapTileDataSourceFactory const&) & noexcept = default;
        IHttpMapTileDataSourceFactory& operator=(IHttpMapTileDataSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILocalMapTileDataSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILocalMapTileDataSource>
    {
        ILocalMapTileDataSource(std::nullptr_t = nullptr) noexcept {}
        ILocalMapTileDataSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILocalMapTileDataSource(ILocalMapTileDataSource const&) noexcept = default;
        ILocalMapTileDataSource(ILocalMapTileDataSource&&) noexcept = default;
        ILocalMapTileDataSource& operator=(ILocalMapTileDataSource const&) & noexcept = default;
        ILocalMapTileDataSource& operator=(ILocalMapTileDataSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILocalMapTileDataSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILocalMapTileDataSourceFactory>
    {
        ILocalMapTileDataSourceFactory(std::nullptr_t = nullptr) noexcept {}
        ILocalMapTileDataSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILocalMapTileDataSourceFactory(ILocalMapTileDataSourceFactory const&) noexcept = default;
        ILocalMapTileDataSourceFactory(ILocalMapTileDataSourceFactory&&) noexcept = default;
        ILocalMapTileDataSourceFactory& operator=(ILocalMapTileDataSourceFactory const&) & noexcept = default;
        ILocalMapTileDataSourceFactory& operator=(ILocalMapTileDataSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapActualCameraChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapActualCameraChangedEventArgs>
    {
        IMapActualCameraChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapActualCameraChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapActualCameraChangedEventArgs(IMapActualCameraChangedEventArgs const&) noexcept = default;
        IMapActualCameraChangedEventArgs(IMapActualCameraChangedEventArgs&&) noexcept = default;
        IMapActualCameraChangedEventArgs& operator=(IMapActualCameraChangedEventArgs const&) & noexcept = default;
        IMapActualCameraChangedEventArgs& operator=(IMapActualCameraChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapActualCameraChangedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapActualCameraChangedEventArgs2>
    {
        IMapActualCameraChangedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IMapActualCameraChangedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapActualCameraChangedEventArgs2(IMapActualCameraChangedEventArgs2 const&) noexcept = default;
        IMapActualCameraChangedEventArgs2(IMapActualCameraChangedEventArgs2&&) noexcept = default;
        IMapActualCameraChangedEventArgs2& operator=(IMapActualCameraChangedEventArgs2 const&) & noexcept = default;
        IMapActualCameraChangedEventArgs2& operator=(IMapActualCameraChangedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapActualCameraChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapActualCameraChangingEventArgs>
    {
        IMapActualCameraChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapActualCameraChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapActualCameraChangingEventArgs(IMapActualCameraChangingEventArgs const&) noexcept = default;
        IMapActualCameraChangingEventArgs(IMapActualCameraChangingEventArgs&&) noexcept = default;
        IMapActualCameraChangingEventArgs& operator=(IMapActualCameraChangingEventArgs const&) & noexcept = default;
        IMapActualCameraChangingEventArgs& operator=(IMapActualCameraChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapActualCameraChangingEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapActualCameraChangingEventArgs2>
    {
        IMapActualCameraChangingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IMapActualCameraChangingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapActualCameraChangingEventArgs2(IMapActualCameraChangingEventArgs2 const&) noexcept = default;
        IMapActualCameraChangingEventArgs2(IMapActualCameraChangingEventArgs2&&) noexcept = default;
        IMapActualCameraChangingEventArgs2& operator=(IMapActualCameraChangingEventArgs2 const&) & noexcept = default;
        IMapActualCameraChangingEventArgs2& operator=(IMapActualCameraChangingEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapBillboard :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapBillboard>
    {
        IMapBillboard(std::nullptr_t = nullptr) noexcept {}
        IMapBillboard(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapBillboard(IMapBillboard const&) noexcept = default;
        IMapBillboard(IMapBillboard&&) noexcept = default;
        IMapBillboard& operator=(IMapBillboard const&) & noexcept = default;
        IMapBillboard& operator=(IMapBillboard&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapBillboardFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapBillboardFactory>
    {
        IMapBillboardFactory(std::nullptr_t = nullptr) noexcept {}
        IMapBillboardFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapBillboardFactory(IMapBillboardFactory const&) noexcept = default;
        IMapBillboardFactory(IMapBillboardFactory&&) noexcept = default;
        IMapBillboardFactory& operator=(IMapBillboardFactory const&) & noexcept = default;
        IMapBillboardFactory& operator=(IMapBillboardFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapBillboardStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapBillboardStatics>
    {
        IMapBillboardStatics(std::nullptr_t = nullptr) noexcept {}
        IMapBillboardStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapBillboardStatics(IMapBillboardStatics const&) noexcept = default;
        IMapBillboardStatics(IMapBillboardStatics&&) noexcept = default;
        IMapBillboardStatics& operator=(IMapBillboardStatics const&) & noexcept = default;
        IMapBillboardStatics& operator=(IMapBillboardStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapCamera :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapCamera>
    {
        IMapCamera(std::nullptr_t = nullptr) noexcept {}
        IMapCamera(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapCamera(IMapCamera const&) noexcept = default;
        IMapCamera(IMapCamera&&) noexcept = default;
        IMapCamera& operator=(IMapCamera const&) & noexcept = default;
        IMapCamera& operator=(IMapCamera&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapCameraFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapCameraFactory>
    {
        IMapCameraFactory(std::nullptr_t = nullptr) noexcept {}
        IMapCameraFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapCameraFactory(IMapCameraFactory const&) noexcept = default;
        IMapCameraFactory(IMapCameraFactory&&) noexcept = default;
        IMapCameraFactory& operator=(IMapCameraFactory const&) & noexcept = default;
        IMapCameraFactory& operator=(IMapCameraFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapContextRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapContextRequestedEventArgs>
    {
        IMapContextRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapContextRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapContextRequestedEventArgs(IMapContextRequestedEventArgs const&) noexcept = default;
        IMapContextRequestedEventArgs(IMapContextRequestedEventArgs&&) noexcept = default;
        IMapContextRequestedEventArgs& operator=(IMapContextRequestedEventArgs const&) & noexcept = default;
        IMapContextRequestedEventArgs& operator=(IMapContextRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControl>
    {
        IMapControl(std::nullptr_t = nullptr) noexcept {}
        IMapControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControl(IMapControl const&) noexcept = default;
        IMapControl(IMapControl&&) noexcept = default;
        IMapControl& operator=(IMapControl const&) & noexcept = default;
        IMapControl& operator=(IMapControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControl2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControl2>
    {
        IMapControl2(std::nullptr_t = nullptr) noexcept {}
        IMapControl2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControl2(IMapControl2 const&) noexcept = default;
        IMapControl2(IMapControl2&&) noexcept = default;
        IMapControl2& operator=(IMapControl2 const&) & noexcept = default;
        IMapControl2& operator=(IMapControl2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControl3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControl3>
    {
        IMapControl3(std::nullptr_t = nullptr) noexcept {}
        IMapControl3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControl3(IMapControl3 const&) noexcept = default;
        IMapControl3(IMapControl3&&) noexcept = default;
        IMapControl3& operator=(IMapControl3 const&) & noexcept = default;
        IMapControl3& operator=(IMapControl3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControl4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControl4>
    {
        IMapControl4(std::nullptr_t = nullptr) noexcept {}
        IMapControl4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControl4(IMapControl4 const&) noexcept = default;
        IMapControl4(IMapControl4&&) noexcept = default;
        IMapControl4& operator=(IMapControl4 const&) & noexcept = default;
        IMapControl4& operator=(IMapControl4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControl5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControl5>
    {
        IMapControl5(std::nullptr_t = nullptr) noexcept {}
        IMapControl5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControl5(IMapControl5 const&) noexcept = default;
        IMapControl5(IMapControl5&&) noexcept = default;
        IMapControl5& operator=(IMapControl5 const&) & noexcept = default;
        IMapControl5& operator=(IMapControl5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControl6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControl6>
    {
        IMapControl6(std::nullptr_t = nullptr) noexcept {}
        IMapControl6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControl6(IMapControl6 const&) noexcept = default;
        IMapControl6(IMapControl6&&) noexcept = default;
        IMapControl6& operator=(IMapControl6 const&) & noexcept = default;
        IMapControl6& operator=(IMapControl6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControl7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControl7>
    {
        IMapControl7(std::nullptr_t = nullptr) noexcept {}
        IMapControl7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControl7(IMapControl7 const&) noexcept = default;
        IMapControl7(IMapControl7&&) noexcept = default;
        IMapControl7& operator=(IMapControl7 const&) & noexcept = default;
        IMapControl7& operator=(IMapControl7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControl8 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControl8>
    {
        IMapControl8(std::nullptr_t = nullptr) noexcept {}
        IMapControl8(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControl8(IMapControl8 const&) noexcept = default;
        IMapControl8(IMapControl8&&) noexcept = default;
        IMapControl8& operator=(IMapControl8 const&) & noexcept = default;
        IMapControl8& operator=(IMapControl8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlBusinessLandmarkClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlBusinessLandmarkClickEventArgs>
    {
        IMapControlBusinessLandmarkClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapControlBusinessLandmarkClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlBusinessLandmarkClickEventArgs(IMapControlBusinessLandmarkClickEventArgs const&) noexcept = default;
        IMapControlBusinessLandmarkClickEventArgs(IMapControlBusinessLandmarkClickEventArgs&&) noexcept = default;
        IMapControlBusinessLandmarkClickEventArgs& operator=(IMapControlBusinessLandmarkClickEventArgs const&) & noexcept = default;
        IMapControlBusinessLandmarkClickEventArgs& operator=(IMapControlBusinessLandmarkClickEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlBusinessLandmarkPointerEnteredEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlBusinessLandmarkPointerEnteredEventArgs>
    {
        IMapControlBusinessLandmarkPointerEnteredEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapControlBusinessLandmarkPointerEnteredEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlBusinessLandmarkPointerEnteredEventArgs(IMapControlBusinessLandmarkPointerEnteredEventArgs const&) noexcept = default;
        IMapControlBusinessLandmarkPointerEnteredEventArgs(IMapControlBusinessLandmarkPointerEnteredEventArgs&&) noexcept = default;
        IMapControlBusinessLandmarkPointerEnteredEventArgs& operator=(IMapControlBusinessLandmarkPointerEnteredEventArgs const&) & noexcept = default;
        IMapControlBusinessLandmarkPointerEnteredEventArgs& operator=(IMapControlBusinessLandmarkPointerEnteredEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlBusinessLandmarkPointerExitedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlBusinessLandmarkPointerExitedEventArgs>
    {
        IMapControlBusinessLandmarkPointerExitedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapControlBusinessLandmarkPointerExitedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlBusinessLandmarkPointerExitedEventArgs(IMapControlBusinessLandmarkPointerExitedEventArgs const&) noexcept = default;
        IMapControlBusinessLandmarkPointerExitedEventArgs(IMapControlBusinessLandmarkPointerExitedEventArgs&&) noexcept = default;
        IMapControlBusinessLandmarkPointerExitedEventArgs& operator=(IMapControlBusinessLandmarkPointerExitedEventArgs const&) & noexcept = default;
        IMapControlBusinessLandmarkPointerExitedEventArgs& operator=(IMapControlBusinessLandmarkPointerExitedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlBusinessLandmarkRightTappedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlBusinessLandmarkRightTappedEventArgs>
    {
        IMapControlBusinessLandmarkRightTappedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapControlBusinessLandmarkRightTappedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlBusinessLandmarkRightTappedEventArgs(IMapControlBusinessLandmarkRightTappedEventArgs const&) noexcept = default;
        IMapControlBusinessLandmarkRightTappedEventArgs(IMapControlBusinessLandmarkRightTappedEventArgs&&) noexcept = default;
        IMapControlBusinessLandmarkRightTappedEventArgs& operator=(IMapControlBusinessLandmarkRightTappedEventArgs const&) & noexcept = default;
        IMapControlBusinessLandmarkRightTappedEventArgs& operator=(IMapControlBusinessLandmarkRightTappedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlDataHelper :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlDataHelper>
    {
        IMapControlDataHelper(std::nullptr_t = nullptr) noexcept {}
        IMapControlDataHelper(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlDataHelper(IMapControlDataHelper const&) noexcept = default;
        IMapControlDataHelper(IMapControlDataHelper&&) noexcept = default;
        IMapControlDataHelper& operator=(IMapControlDataHelper const&) & noexcept = default;
        IMapControlDataHelper& operator=(IMapControlDataHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlDataHelper2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlDataHelper2>
    {
        IMapControlDataHelper2(std::nullptr_t = nullptr) noexcept {}
        IMapControlDataHelper2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlDataHelper2(IMapControlDataHelper2 const&) noexcept = default;
        IMapControlDataHelper2(IMapControlDataHelper2&&) noexcept = default;
        IMapControlDataHelper2& operator=(IMapControlDataHelper2 const&) & noexcept = default;
        IMapControlDataHelper2& operator=(IMapControlDataHelper2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlDataHelperFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlDataHelperFactory>
    {
        IMapControlDataHelperFactory(std::nullptr_t = nullptr) noexcept {}
        IMapControlDataHelperFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlDataHelperFactory(IMapControlDataHelperFactory const&) noexcept = default;
        IMapControlDataHelperFactory(IMapControlDataHelperFactory&&) noexcept = default;
        IMapControlDataHelperFactory& operator=(IMapControlDataHelperFactory const&) & noexcept = default;
        IMapControlDataHelperFactory& operator=(IMapControlDataHelperFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlDataHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlDataHelperStatics>
    {
        IMapControlDataHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IMapControlDataHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlDataHelperStatics(IMapControlDataHelperStatics const&) noexcept = default;
        IMapControlDataHelperStatics(IMapControlDataHelperStatics&&) noexcept = default;
        IMapControlDataHelperStatics& operator=(IMapControlDataHelperStatics const&) & noexcept = default;
        IMapControlDataHelperStatics& operator=(IMapControlDataHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlStatics>
    {
        IMapControlStatics(std::nullptr_t = nullptr) noexcept {}
        IMapControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlStatics(IMapControlStatics const&) noexcept = default;
        IMapControlStatics(IMapControlStatics&&) noexcept = default;
        IMapControlStatics& operator=(IMapControlStatics const&) & noexcept = default;
        IMapControlStatics& operator=(IMapControlStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlStatics2>
    {
        IMapControlStatics2(std::nullptr_t = nullptr) noexcept {}
        IMapControlStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlStatics2(IMapControlStatics2 const&) noexcept = default;
        IMapControlStatics2(IMapControlStatics2&&) noexcept = default;
        IMapControlStatics2& operator=(IMapControlStatics2 const&) & noexcept = default;
        IMapControlStatics2& operator=(IMapControlStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlStatics4>
    {
        IMapControlStatics4(std::nullptr_t = nullptr) noexcept {}
        IMapControlStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlStatics4(IMapControlStatics4 const&) noexcept = default;
        IMapControlStatics4(IMapControlStatics4&&) noexcept = default;
        IMapControlStatics4& operator=(IMapControlStatics4 const&) & noexcept = default;
        IMapControlStatics4& operator=(IMapControlStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlStatics5>
    {
        IMapControlStatics5(std::nullptr_t = nullptr) noexcept {}
        IMapControlStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlStatics5(IMapControlStatics5 const&) noexcept = default;
        IMapControlStatics5(IMapControlStatics5&&) noexcept = default;
        IMapControlStatics5& operator=(IMapControlStatics5 const&) & noexcept = default;
        IMapControlStatics5& operator=(IMapControlStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlStatics6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlStatics6>
    {
        IMapControlStatics6(std::nullptr_t = nullptr) noexcept {}
        IMapControlStatics6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlStatics6(IMapControlStatics6 const&) noexcept = default;
        IMapControlStatics6(IMapControlStatics6&&) noexcept = default;
        IMapControlStatics6& operator=(IMapControlStatics6 const&) & noexcept = default;
        IMapControlStatics6& operator=(IMapControlStatics6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlStatics7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlStatics7>
    {
        IMapControlStatics7(std::nullptr_t = nullptr) noexcept {}
        IMapControlStatics7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlStatics7(IMapControlStatics7 const&) noexcept = default;
        IMapControlStatics7(IMapControlStatics7&&) noexcept = default;
        IMapControlStatics7& operator=(IMapControlStatics7 const&) & noexcept = default;
        IMapControlStatics7& operator=(IMapControlStatics7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlStatics8 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlStatics8>
    {
        IMapControlStatics8(std::nullptr_t = nullptr) noexcept {}
        IMapControlStatics8(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlStatics8(IMapControlStatics8 const&) noexcept = default;
        IMapControlStatics8(IMapControlStatics8&&) noexcept = default;
        IMapControlStatics8& operator=(IMapControlStatics8 const&) & noexcept = default;
        IMapControlStatics8& operator=(IMapControlStatics8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlTransitFeatureClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlTransitFeatureClickEventArgs>
    {
        IMapControlTransitFeatureClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapControlTransitFeatureClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlTransitFeatureClickEventArgs(IMapControlTransitFeatureClickEventArgs const&) noexcept = default;
        IMapControlTransitFeatureClickEventArgs(IMapControlTransitFeatureClickEventArgs&&) noexcept = default;
        IMapControlTransitFeatureClickEventArgs& operator=(IMapControlTransitFeatureClickEventArgs const&) & noexcept = default;
        IMapControlTransitFeatureClickEventArgs& operator=(IMapControlTransitFeatureClickEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlTransitFeaturePointerEnteredEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlTransitFeaturePointerEnteredEventArgs>
    {
        IMapControlTransitFeaturePointerEnteredEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapControlTransitFeaturePointerEnteredEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlTransitFeaturePointerEnteredEventArgs(IMapControlTransitFeaturePointerEnteredEventArgs const&) noexcept = default;
        IMapControlTransitFeaturePointerEnteredEventArgs(IMapControlTransitFeaturePointerEnteredEventArgs&&) noexcept = default;
        IMapControlTransitFeaturePointerEnteredEventArgs& operator=(IMapControlTransitFeaturePointerEnteredEventArgs const&) & noexcept = default;
        IMapControlTransitFeaturePointerEnteredEventArgs& operator=(IMapControlTransitFeaturePointerEnteredEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlTransitFeaturePointerExitedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlTransitFeaturePointerExitedEventArgs>
    {
        IMapControlTransitFeaturePointerExitedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapControlTransitFeaturePointerExitedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlTransitFeaturePointerExitedEventArgs(IMapControlTransitFeaturePointerExitedEventArgs const&) noexcept = default;
        IMapControlTransitFeaturePointerExitedEventArgs(IMapControlTransitFeaturePointerExitedEventArgs&&) noexcept = default;
        IMapControlTransitFeaturePointerExitedEventArgs& operator=(IMapControlTransitFeaturePointerExitedEventArgs const&) & noexcept = default;
        IMapControlTransitFeaturePointerExitedEventArgs& operator=(IMapControlTransitFeaturePointerExitedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapControlTransitFeatureRightTappedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapControlTransitFeatureRightTappedEventArgs>
    {
        IMapControlTransitFeatureRightTappedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapControlTransitFeatureRightTappedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapControlTransitFeatureRightTappedEventArgs(IMapControlTransitFeatureRightTappedEventArgs const&) noexcept = default;
        IMapControlTransitFeatureRightTappedEventArgs(IMapControlTransitFeatureRightTappedEventArgs&&) noexcept = default;
        IMapControlTransitFeatureRightTappedEventArgs& operator=(IMapControlTransitFeatureRightTappedEventArgs const&) & noexcept = default;
        IMapControlTransitFeatureRightTappedEventArgs& operator=(IMapControlTransitFeatureRightTappedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapCustomExperience :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapCustomExperience>
    {
        IMapCustomExperience(std::nullptr_t = nullptr) noexcept {}
        IMapCustomExperience(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapCustomExperience(IMapCustomExperience const&) noexcept = default;
        IMapCustomExperience(IMapCustomExperience&&) noexcept = default;
        IMapCustomExperience& operator=(IMapCustomExperience const&) & noexcept = default;
        IMapCustomExperience& operator=(IMapCustomExperience&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapCustomExperienceChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapCustomExperienceChangedEventArgs>
    {
        IMapCustomExperienceChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapCustomExperienceChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapCustomExperienceChangedEventArgs(IMapCustomExperienceChangedEventArgs const&) noexcept = default;
        IMapCustomExperienceChangedEventArgs(IMapCustomExperienceChangedEventArgs&&) noexcept = default;
        IMapCustomExperienceChangedEventArgs& operator=(IMapCustomExperienceChangedEventArgs const&) & noexcept = default;
        IMapCustomExperienceChangedEventArgs& operator=(IMapCustomExperienceChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapCustomExperienceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapCustomExperienceFactory>
    {
        IMapCustomExperienceFactory(std::nullptr_t = nullptr) noexcept {}
        IMapCustomExperienceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapCustomExperienceFactory(IMapCustomExperienceFactory const&) noexcept = default;
        IMapCustomExperienceFactory(IMapCustomExperienceFactory&&) noexcept = default;
        IMapCustomExperienceFactory& operator=(IMapCustomExperienceFactory const&) & noexcept = default;
        IMapCustomExperienceFactory& operator=(IMapCustomExperienceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElement>
    {
        IMapElement(std::nullptr_t = nullptr) noexcept {}
        IMapElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElement(IMapElement const&) noexcept = default;
        IMapElement(IMapElement&&) noexcept = default;
        IMapElement& operator=(IMapElement const&) & noexcept = default;
        IMapElement& operator=(IMapElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElement2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElement2>
    {
        IMapElement2(std::nullptr_t = nullptr) noexcept {}
        IMapElement2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElement2(IMapElement2 const&) noexcept = default;
        IMapElement2(IMapElement2&&) noexcept = default;
        IMapElement2& operator=(IMapElement2 const&) & noexcept = default;
        IMapElement2& operator=(IMapElement2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElement3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElement3>
    {
        IMapElement3(std::nullptr_t = nullptr) noexcept {}
        IMapElement3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElement3(IMapElement3 const&) noexcept = default;
        IMapElement3(IMapElement3&&) noexcept = default;
        IMapElement3& operator=(IMapElement3 const&) & noexcept = default;
        IMapElement3& operator=(IMapElement3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElement3D :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElement3D>
    {
        IMapElement3D(std::nullptr_t = nullptr) noexcept {}
        IMapElement3D(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElement3D(IMapElement3D const&) noexcept = default;
        IMapElement3D(IMapElement3D&&) noexcept = default;
        IMapElement3D& operator=(IMapElement3D const&) & noexcept = default;
        IMapElement3D& operator=(IMapElement3D&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElement3DStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElement3DStatics>
    {
        IMapElement3DStatics(std::nullptr_t = nullptr) noexcept {}
        IMapElement3DStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElement3DStatics(IMapElement3DStatics const&) noexcept = default;
        IMapElement3DStatics(IMapElement3DStatics&&) noexcept = default;
        IMapElement3DStatics& operator=(IMapElement3DStatics const&) & noexcept = default;
        IMapElement3DStatics& operator=(IMapElement3DStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElement4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElement4>
    {
        IMapElement4(std::nullptr_t = nullptr) noexcept {}
        IMapElement4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElement4(IMapElement4 const&) noexcept = default;
        IMapElement4(IMapElement4&&) noexcept = default;
        IMapElement4& operator=(IMapElement4 const&) & noexcept = default;
        IMapElement4& operator=(IMapElement4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementClickEventArgs>
    {
        IMapElementClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapElementClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementClickEventArgs(IMapElementClickEventArgs const&) noexcept = default;
        IMapElementClickEventArgs(IMapElementClickEventArgs&&) noexcept = default;
        IMapElementClickEventArgs& operator=(IMapElementClickEventArgs const&) & noexcept = default;
        IMapElementClickEventArgs& operator=(IMapElementClickEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementFactory>
    {
        IMapElementFactory(std::nullptr_t = nullptr) noexcept {}
        IMapElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementFactory(IMapElementFactory const&) noexcept = default;
        IMapElementFactory(IMapElementFactory&&) noexcept = default;
        IMapElementFactory& operator=(IMapElementFactory const&) & noexcept = default;
        IMapElementFactory& operator=(IMapElementFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementPointerEnteredEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementPointerEnteredEventArgs>
    {
        IMapElementPointerEnteredEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapElementPointerEnteredEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementPointerEnteredEventArgs(IMapElementPointerEnteredEventArgs const&) noexcept = default;
        IMapElementPointerEnteredEventArgs(IMapElementPointerEnteredEventArgs&&) noexcept = default;
        IMapElementPointerEnteredEventArgs& operator=(IMapElementPointerEnteredEventArgs const&) & noexcept = default;
        IMapElementPointerEnteredEventArgs& operator=(IMapElementPointerEnteredEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementPointerExitedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementPointerExitedEventArgs>
    {
        IMapElementPointerExitedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapElementPointerExitedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementPointerExitedEventArgs(IMapElementPointerExitedEventArgs const&) noexcept = default;
        IMapElementPointerExitedEventArgs(IMapElementPointerExitedEventArgs&&) noexcept = default;
        IMapElementPointerExitedEventArgs& operator=(IMapElementPointerExitedEventArgs const&) & noexcept = default;
        IMapElementPointerExitedEventArgs& operator=(IMapElementPointerExitedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementStatics>
    {
        IMapElementStatics(std::nullptr_t = nullptr) noexcept {}
        IMapElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementStatics(IMapElementStatics const&) noexcept = default;
        IMapElementStatics(IMapElementStatics&&) noexcept = default;
        IMapElementStatics& operator=(IMapElementStatics const&) & noexcept = default;
        IMapElementStatics& operator=(IMapElementStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementStatics2>
    {
        IMapElementStatics2(std::nullptr_t = nullptr) noexcept {}
        IMapElementStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementStatics2(IMapElementStatics2 const&) noexcept = default;
        IMapElementStatics2(IMapElementStatics2&&) noexcept = default;
        IMapElementStatics2& operator=(IMapElementStatics2 const&) & noexcept = default;
        IMapElementStatics2& operator=(IMapElementStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementStatics3>
    {
        IMapElementStatics3(std::nullptr_t = nullptr) noexcept {}
        IMapElementStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementStatics3(IMapElementStatics3 const&) noexcept = default;
        IMapElementStatics3(IMapElementStatics3&&) noexcept = default;
        IMapElementStatics3& operator=(IMapElementStatics3 const&) & noexcept = default;
        IMapElementStatics3& operator=(IMapElementStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementStatics4>
    {
        IMapElementStatics4(std::nullptr_t = nullptr) noexcept {}
        IMapElementStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementStatics4(IMapElementStatics4 const&) noexcept = default;
        IMapElementStatics4(IMapElementStatics4&&) noexcept = default;
        IMapElementStatics4& operator=(IMapElementStatics4 const&) & noexcept = default;
        IMapElementStatics4& operator=(IMapElementStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementsLayer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementsLayer>
    {
        IMapElementsLayer(std::nullptr_t = nullptr) noexcept {}
        IMapElementsLayer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementsLayer(IMapElementsLayer const&) noexcept = default;
        IMapElementsLayer(IMapElementsLayer&&) noexcept = default;
        IMapElementsLayer& operator=(IMapElementsLayer const&) & noexcept = default;
        IMapElementsLayer& operator=(IMapElementsLayer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementsLayerClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementsLayerClickEventArgs>
    {
        IMapElementsLayerClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapElementsLayerClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementsLayerClickEventArgs(IMapElementsLayerClickEventArgs const&) noexcept = default;
        IMapElementsLayerClickEventArgs(IMapElementsLayerClickEventArgs&&) noexcept = default;
        IMapElementsLayerClickEventArgs& operator=(IMapElementsLayerClickEventArgs const&) & noexcept = default;
        IMapElementsLayerClickEventArgs& operator=(IMapElementsLayerClickEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementsLayerContextRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementsLayerContextRequestedEventArgs>
    {
        IMapElementsLayerContextRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapElementsLayerContextRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementsLayerContextRequestedEventArgs(IMapElementsLayerContextRequestedEventArgs const&) noexcept = default;
        IMapElementsLayerContextRequestedEventArgs(IMapElementsLayerContextRequestedEventArgs&&) noexcept = default;
        IMapElementsLayerContextRequestedEventArgs& operator=(IMapElementsLayerContextRequestedEventArgs const&) & noexcept = default;
        IMapElementsLayerContextRequestedEventArgs& operator=(IMapElementsLayerContextRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementsLayerPointerEnteredEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementsLayerPointerEnteredEventArgs>
    {
        IMapElementsLayerPointerEnteredEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapElementsLayerPointerEnteredEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementsLayerPointerEnteredEventArgs(IMapElementsLayerPointerEnteredEventArgs const&) noexcept = default;
        IMapElementsLayerPointerEnteredEventArgs(IMapElementsLayerPointerEnteredEventArgs&&) noexcept = default;
        IMapElementsLayerPointerEnteredEventArgs& operator=(IMapElementsLayerPointerEnteredEventArgs const&) & noexcept = default;
        IMapElementsLayerPointerEnteredEventArgs& operator=(IMapElementsLayerPointerEnteredEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementsLayerPointerExitedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementsLayerPointerExitedEventArgs>
    {
        IMapElementsLayerPointerExitedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapElementsLayerPointerExitedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementsLayerPointerExitedEventArgs(IMapElementsLayerPointerExitedEventArgs const&) noexcept = default;
        IMapElementsLayerPointerExitedEventArgs(IMapElementsLayerPointerExitedEventArgs&&) noexcept = default;
        IMapElementsLayerPointerExitedEventArgs& operator=(IMapElementsLayerPointerExitedEventArgs const&) & noexcept = default;
        IMapElementsLayerPointerExitedEventArgs& operator=(IMapElementsLayerPointerExitedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapElementsLayerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapElementsLayerStatics>
    {
        IMapElementsLayerStatics(std::nullptr_t = nullptr) noexcept {}
        IMapElementsLayerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapElementsLayerStatics(IMapElementsLayerStatics const&) noexcept = default;
        IMapElementsLayerStatics(IMapElementsLayerStatics&&) noexcept = default;
        IMapElementsLayerStatics& operator=(IMapElementsLayerStatics const&) & noexcept = default;
        IMapElementsLayerStatics& operator=(IMapElementsLayerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapIcon>
    {
        IMapIcon(std::nullptr_t = nullptr) noexcept {}
        IMapIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapIcon(IMapIcon const&) noexcept = default;
        IMapIcon(IMapIcon&&) noexcept = default;
        IMapIcon& operator=(IMapIcon const&) & noexcept = default;
        IMapIcon& operator=(IMapIcon&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapIcon2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapIcon2>
    {
        IMapIcon2(std::nullptr_t = nullptr) noexcept {}
        IMapIcon2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapIcon2(IMapIcon2 const&) noexcept = default;
        IMapIcon2(IMapIcon2&&) noexcept = default;
        IMapIcon2& operator=(IMapIcon2 const&) & noexcept = default;
        IMapIcon2& operator=(IMapIcon2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapIconStatics>
    {
        IMapIconStatics(std::nullptr_t = nullptr) noexcept {}
        IMapIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapIconStatics(IMapIconStatics const&) noexcept = default;
        IMapIconStatics(IMapIconStatics&&) noexcept = default;
        IMapIconStatics& operator=(IMapIconStatics const&) & noexcept = default;
        IMapIconStatics& operator=(IMapIconStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapIconStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapIconStatics2>
    {
        IMapIconStatics2(std::nullptr_t = nullptr) noexcept {}
        IMapIconStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapIconStatics2(IMapIconStatics2 const&) noexcept = default;
        IMapIconStatics2(IMapIconStatics2&&) noexcept = default;
        IMapIconStatics2& operator=(IMapIconStatics2 const&) & noexcept = default;
        IMapIconStatics2& operator=(IMapIconStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapInputEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapInputEventArgs>
    {
        IMapInputEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapInputEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapInputEventArgs(IMapInputEventArgs const&) noexcept = default;
        IMapInputEventArgs(IMapInputEventArgs&&) noexcept = default;
        IMapInputEventArgs& operator=(IMapInputEventArgs const&) & noexcept = default;
        IMapInputEventArgs& operator=(IMapInputEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapItemsControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapItemsControl>
    {
        IMapItemsControl(std::nullptr_t = nullptr) noexcept {}
        IMapItemsControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapItemsControl(IMapItemsControl const&) noexcept = default;
        IMapItemsControl(IMapItemsControl&&) noexcept = default;
        IMapItemsControl& operator=(IMapItemsControl const&) & noexcept = default;
        IMapItemsControl& operator=(IMapItemsControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapItemsControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapItemsControlStatics>
    {
        IMapItemsControlStatics(std::nullptr_t = nullptr) noexcept {}
        IMapItemsControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapItemsControlStatics(IMapItemsControlStatics const&) noexcept = default;
        IMapItemsControlStatics(IMapItemsControlStatics&&) noexcept = default;
        IMapItemsControlStatics& operator=(IMapItemsControlStatics const&) & noexcept = default;
        IMapItemsControlStatics& operator=(IMapItemsControlStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapLayer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapLayer>
    {
        IMapLayer(std::nullptr_t = nullptr) noexcept {}
        IMapLayer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapLayer(IMapLayer const&) noexcept = default;
        IMapLayer(IMapLayer&&) noexcept = default;
        IMapLayer& operator=(IMapLayer const&) & noexcept = default;
        IMapLayer& operator=(IMapLayer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapLayerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapLayerFactory>
    {
        IMapLayerFactory(std::nullptr_t = nullptr) noexcept {}
        IMapLayerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapLayerFactory(IMapLayerFactory const&) noexcept = default;
        IMapLayerFactory(IMapLayerFactory&&) noexcept = default;
        IMapLayerFactory& operator=(IMapLayerFactory const&) & noexcept = default;
        IMapLayerFactory& operator=(IMapLayerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapLayerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapLayerStatics>
    {
        IMapLayerStatics(std::nullptr_t = nullptr) noexcept {}
        IMapLayerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapLayerStatics(IMapLayerStatics const&) noexcept = default;
        IMapLayerStatics(IMapLayerStatics&&) noexcept = default;
        IMapLayerStatics& operator=(IMapLayerStatics const&) & noexcept = default;
        IMapLayerStatics& operator=(IMapLayerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapModel3D :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapModel3D>
    {
        IMapModel3D(std::nullptr_t = nullptr) noexcept {}
        IMapModel3D(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapModel3D(IMapModel3D const&) noexcept = default;
        IMapModel3D(IMapModel3D&&) noexcept = default;
        IMapModel3D& operator=(IMapModel3D const&) & noexcept = default;
        IMapModel3D& operator=(IMapModel3D&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapModel3DFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapModel3DFactory>
    {
        IMapModel3DFactory(std::nullptr_t = nullptr) noexcept {}
        IMapModel3DFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapModel3DFactory(IMapModel3DFactory const&) noexcept = default;
        IMapModel3DFactory(IMapModel3DFactory&&) noexcept = default;
        IMapModel3DFactory& operator=(IMapModel3DFactory const&) & noexcept = default;
        IMapModel3DFactory& operator=(IMapModel3DFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapModel3DStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapModel3DStatics>
    {
        IMapModel3DStatics(std::nullptr_t = nullptr) noexcept {}
        IMapModel3DStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapModel3DStatics(IMapModel3DStatics const&) noexcept = default;
        IMapModel3DStatics(IMapModel3DStatics&&) noexcept = default;
        IMapModel3DStatics& operator=(IMapModel3DStatics const&) & noexcept = default;
        IMapModel3DStatics& operator=(IMapModel3DStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapPolygon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapPolygon>
    {
        IMapPolygon(std::nullptr_t = nullptr) noexcept {}
        IMapPolygon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapPolygon(IMapPolygon const&) noexcept = default;
        IMapPolygon(IMapPolygon&&) noexcept = default;
        IMapPolygon& operator=(IMapPolygon const&) & noexcept = default;
        IMapPolygon& operator=(IMapPolygon&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapPolygon2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapPolygon2>
    {
        IMapPolygon2(std::nullptr_t = nullptr) noexcept {}
        IMapPolygon2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapPolygon2(IMapPolygon2 const&) noexcept = default;
        IMapPolygon2(IMapPolygon2&&) noexcept = default;
        IMapPolygon2& operator=(IMapPolygon2 const&) & noexcept = default;
        IMapPolygon2& operator=(IMapPolygon2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapPolygonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapPolygonStatics>
    {
        IMapPolygonStatics(std::nullptr_t = nullptr) noexcept {}
        IMapPolygonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapPolygonStatics(IMapPolygonStatics const&) noexcept = default;
        IMapPolygonStatics(IMapPolygonStatics&&) noexcept = default;
        IMapPolygonStatics& operator=(IMapPolygonStatics const&) & noexcept = default;
        IMapPolygonStatics& operator=(IMapPolygonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapPolyline :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapPolyline>
    {
        IMapPolyline(std::nullptr_t = nullptr) noexcept {}
        IMapPolyline(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapPolyline(IMapPolyline const&) noexcept = default;
        IMapPolyline(IMapPolyline&&) noexcept = default;
        IMapPolyline& operator=(IMapPolyline const&) & noexcept = default;
        IMapPolyline& operator=(IMapPolyline&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapPolylineStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapPolylineStatics>
    {
        IMapPolylineStatics(std::nullptr_t = nullptr) noexcept {}
        IMapPolylineStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapPolylineStatics(IMapPolylineStatics const&) noexcept = default;
        IMapPolylineStatics(IMapPolylineStatics&&) noexcept = default;
        IMapPolylineStatics& operator=(IMapPolylineStatics const&) & noexcept = default;
        IMapPolylineStatics& operator=(IMapPolylineStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRightTappedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRightTappedEventArgs>
    {
        IMapRightTappedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapRightTappedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRightTappedEventArgs(IMapRightTappedEventArgs const&) noexcept = default;
        IMapRightTappedEventArgs(IMapRightTappedEventArgs&&) noexcept = default;
        IMapRightTappedEventArgs& operator=(IMapRightTappedEventArgs const&) & noexcept = default;
        IMapRightTappedEventArgs& operator=(IMapRightTappedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteView>
    {
        IMapRouteView(std::nullptr_t = nullptr) noexcept {}
        IMapRouteView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteView(IMapRouteView const&) noexcept = default;
        IMapRouteView(IMapRouteView&&) noexcept = default;
        IMapRouteView& operator=(IMapRouteView const&) & noexcept = default;
        IMapRouteView& operator=(IMapRouteView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapRouteViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapRouteViewFactory>
    {
        IMapRouteViewFactory(std::nullptr_t = nullptr) noexcept {}
        IMapRouteViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapRouteViewFactory(IMapRouteViewFactory const&) noexcept = default;
        IMapRouteViewFactory(IMapRouteViewFactory&&) noexcept = default;
        IMapRouteViewFactory& operator=(IMapRouteViewFactory const&) & noexcept = default;
        IMapRouteViewFactory& operator=(IMapRouteViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapScene :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapScene>
    {
        IMapScene(std::nullptr_t = nullptr) noexcept {}
        IMapScene(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapScene(IMapScene const&) noexcept = default;
        IMapScene(IMapScene&&) noexcept = default;
        IMapScene& operator=(IMapScene const&) & noexcept = default;
        IMapScene& operator=(IMapScene&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapSceneStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapSceneStatics>
    {
        IMapSceneStatics(std::nullptr_t = nullptr) noexcept {}
        IMapSceneStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapSceneStatics(IMapSceneStatics const&) noexcept = default;
        IMapSceneStatics(IMapSceneStatics&&) noexcept = default;
        IMapSceneStatics& operator=(IMapSceneStatics const&) & noexcept = default;
        IMapSceneStatics& operator=(IMapSceneStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapStyleSheet :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapStyleSheet>
    {
        IMapStyleSheet(std::nullptr_t = nullptr) noexcept {}
        IMapStyleSheet(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapStyleSheet(IMapStyleSheet const&) noexcept = default;
        IMapStyleSheet(IMapStyleSheet&&) noexcept = default;
        IMapStyleSheet& operator=(IMapStyleSheet const&) & noexcept = default;
        IMapStyleSheet& operator=(IMapStyleSheet&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapStyleSheetEntriesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapStyleSheetEntriesStatics>
    {
        IMapStyleSheetEntriesStatics(std::nullptr_t = nullptr) noexcept {}
        IMapStyleSheetEntriesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapStyleSheetEntriesStatics(IMapStyleSheetEntriesStatics const&) noexcept = default;
        IMapStyleSheetEntriesStatics(IMapStyleSheetEntriesStatics&&) noexcept = default;
        IMapStyleSheetEntriesStatics& operator=(IMapStyleSheetEntriesStatics const&) & noexcept = default;
        IMapStyleSheetEntriesStatics& operator=(IMapStyleSheetEntriesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapStyleSheetEntryStatesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapStyleSheetEntryStatesStatics>
    {
        IMapStyleSheetEntryStatesStatics(std::nullptr_t = nullptr) noexcept {}
        IMapStyleSheetEntryStatesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapStyleSheetEntryStatesStatics(IMapStyleSheetEntryStatesStatics const&) noexcept = default;
        IMapStyleSheetEntryStatesStatics(IMapStyleSheetEntryStatesStatics&&) noexcept = default;
        IMapStyleSheetEntryStatesStatics& operator=(IMapStyleSheetEntryStatesStatics const&) & noexcept = default;
        IMapStyleSheetEntryStatesStatics& operator=(IMapStyleSheetEntryStatesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapStyleSheetStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapStyleSheetStatics>
    {
        IMapStyleSheetStatics(std::nullptr_t = nullptr) noexcept {}
        IMapStyleSheetStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapStyleSheetStatics(IMapStyleSheetStatics const&) noexcept = default;
        IMapStyleSheetStatics(IMapStyleSheetStatics&&) noexcept = default;
        IMapStyleSheetStatics& operator=(IMapStyleSheetStatics const&) & noexcept = default;
        IMapStyleSheetStatics& operator=(IMapStyleSheetStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTargetCameraChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTargetCameraChangedEventArgs>
    {
        IMapTargetCameraChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapTargetCameraChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTargetCameraChangedEventArgs(IMapTargetCameraChangedEventArgs const&) noexcept = default;
        IMapTargetCameraChangedEventArgs(IMapTargetCameraChangedEventArgs&&) noexcept = default;
        IMapTargetCameraChangedEventArgs& operator=(IMapTargetCameraChangedEventArgs const&) & noexcept = default;
        IMapTargetCameraChangedEventArgs& operator=(IMapTargetCameraChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTargetCameraChangedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTargetCameraChangedEventArgs2>
    {
        IMapTargetCameraChangedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IMapTargetCameraChangedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTargetCameraChangedEventArgs2(IMapTargetCameraChangedEventArgs2 const&) noexcept = default;
        IMapTargetCameraChangedEventArgs2(IMapTargetCameraChangedEventArgs2&&) noexcept = default;
        IMapTargetCameraChangedEventArgs2& operator=(IMapTargetCameraChangedEventArgs2 const&) & noexcept = default;
        IMapTargetCameraChangedEventArgs2& operator=(IMapTargetCameraChangedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileBitmapRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileBitmapRequest>
    {
        IMapTileBitmapRequest(std::nullptr_t = nullptr) noexcept {}
        IMapTileBitmapRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileBitmapRequest(IMapTileBitmapRequest const&) noexcept = default;
        IMapTileBitmapRequest(IMapTileBitmapRequest&&) noexcept = default;
        IMapTileBitmapRequest& operator=(IMapTileBitmapRequest const&) & noexcept = default;
        IMapTileBitmapRequest& operator=(IMapTileBitmapRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileBitmapRequestDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileBitmapRequestDeferral>
    {
        IMapTileBitmapRequestDeferral(std::nullptr_t = nullptr) noexcept {}
        IMapTileBitmapRequestDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileBitmapRequestDeferral(IMapTileBitmapRequestDeferral const&) noexcept = default;
        IMapTileBitmapRequestDeferral(IMapTileBitmapRequestDeferral&&) noexcept = default;
        IMapTileBitmapRequestDeferral& operator=(IMapTileBitmapRequestDeferral const&) & noexcept = default;
        IMapTileBitmapRequestDeferral& operator=(IMapTileBitmapRequestDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileBitmapRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileBitmapRequestedEventArgs>
    {
        IMapTileBitmapRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapTileBitmapRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileBitmapRequestedEventArgs(IMapTileBitmapRequestedEventArgs const&) noexcept = default;
        IMapTileBitmapRequestedEventArgs(IMapTileBitmapRequestedEventArgs&&) noexcept = default;
        IMapTileBitmapRequestedEventArgs& operator=(IMapTileBitmapRequestedEventArgs const&) & noexcept = default;
        IMapTileBitmapRequestedEventArgs& operator=(IMapTileBitmapRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileBitmapRequestedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileBitmapRequestedEventArgs2>
    {
        IMapTileBitmapRequestedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IMapTileBitmapRequestedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileBitmapRequestedEventArgs2(IMapTileBitmapRequestedEventArgs2 const&) noexcept = default;
        IMapTileBitmapRequestedEventArgs2(IMapTileBitmapRequestedEventArgs2&&) noexcept = default;
        IMapTileBitmapRequestedEventArgs2& operator=(IMapTileBitmapRequestedEventArgs2 const&) & noexcept = default;
        IMapTileBitmapRequestedEventArgs2& operator=(IMapTileBitmapRequestedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileDataSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileDataSource>
    {
        IMapTileDataSource(std::nullptr_t = nullptr) noexcept {}
        IMapTileDataSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileDataSource(IMapTileDataSource const&) noexcept = default;
        IMapTileDataSource(IMapTileDataSource&&) noexcept = default;
        IMapTileDataSource& operator=(IMapTileDataSource const&) & noexcept = default;
        IMapTileDataSource& operator=(IMapTileDataSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileDataSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileDataSourceFactory>
    {
        IMapTileDataSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IMapTileDataSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileDataSourceFactory(IMapTileDataSourceFactory const&) noexcept = default;
        IMapTileDataSourceFactory(IMapTileDataSourceFactory&&) noexcept = default;
        IMapTileDataSourceFactory& operator=(IMapTileDataSourceFactory const&) & noexcept = default;
        IMapTileDataSourceFactory& operator=(IMapTileDataSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileSource>
    {
        IMapTileSource(std::nullptr_t = nullptr) noexcept {}
        IMapTileSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileSource(IMapTileSource const&) noexcept = default;
        IMapTileSource(IMapTileSource&&) noexcept = default;
        IMapTileSource& operator=(IMapTileSource const&) & noexcept = default;
        IMapTileSource& operator=(IMapTileSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileSource2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileSource2>
    {
        IMapTileSource2(std::nullptr_t = nullptr) noexcept {}
        IMapTileSource2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileSource2(IMapTileSource2 const&) noexcept = default;
        IMapTileSource2(IMapTileSource2&&) noexcept = default;
        IMapTileSource2& operator=(IMapTileSource2 const&) & noexcept = default;
        IMapTileSource2& operator=(IMapTileSource2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileSourceFactory>
    {
        IMapTileSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IMapTileSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileSourceFactory(IMapTileSourceFactory const&) noexcept = default;
        IMapTileSourceFactory(IMapTileSourceFactory&&) noexcept = default;
        IMapTileSourceFactory& operator=(IMapTileSourceFactory const&) & noexcept = default;
        IMapTileSourceFactory& operator=(IMapTileSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileSourceStatics>
    {
        IMapTileSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IMapTileSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileSourceStatics(IMapTileSourceStatics const&) noexcept = default;
        IMapTileSourceStatics(IMapTileSourceStatics&&) noexcept = default;
        IMapTileSourceStatics& operator=(IMapTileSourceStatics const&) & noexcept = default;
        IMapTileSourceStatics& operator=(IMapTileSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileSourceStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileSourceStatics2>
    {
        IMapTileSourceStatics2(std::nullptr_t = nullptr) noexcept {}
        IMapTileSourceStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileSourceStatics2(IMapTileSourceStatics2 const&) noexcept = default;
        IMapTileSourceStatics2(IMapTileSourceStatics2&&) noexcept = default;
        IMapTileSourceStatics2& operator=(IMapTileSourceStatics2 const&) & noexcept = default;
        IMapTileSourceStatics2& operator=(IMapTileSourceStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileUriRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileUriRequest>
    {
        IMapTileUriRequest(std::nullptr_t = nullptr) noexcept {}
        IMapTileUriRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileUriRequest(IMapTileUriRequest const&) noexcept = default;
        IMapTileUriRequest(IMapTileUriRequest&&) noexcept = default;
        IMapTileUriRequest& operator=(IMapTileUriRequest const&) & noexcept = default;
        IMapTileUriRequest& operator=(IMapTileUriRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileUriRequestDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileUriRequestDeferral>
    {
        IMapTileUriRequestDeferral(std::nullptr_t = nullptr) noexcept {}
        IMapTileUriRequestDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileUriRequestDeferral(IMapTileUriRequestDeferral const&) noexcept = default;
        IMapTileUriRequestDeferral(IMapTileUriRequestDeferral&&) noexcept = default;
        IMapTileUriRequestDeferral& operator=(IMapTileUriRequestDeferral const&) & noexcept = default;
        IMapTileUriRequestDeferral& operator=(IMapTileUriRequestDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileUriRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileUriRequestedEventArgs>
    {
        IMapTileUriRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IMapTileUriRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileUriRequestedEventArgs(IMapTileUriRequestedEventArgs const&) noexcept = default;
        IMapTileUriRequestedEventArgs(IMapTileUriRequestedEventArgs&&) noexcept = default;
        IMapTileUriRequestedEventArgs& operator=(IMapTileUriRequestedEventArgs const&) & noexcept = default;
        IMapTileUriRequestedEventArgs& operator=(IMapTileUriRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMapTileUriRequestedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMapTileUriRequestedEventArgs2>
    {
        IMapTileUriRequestedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IMapTileUriRequestedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMapTileUriRequestedEventArgs2(IMapTileUriRequestedEventArgs2 const&) noexcept = default;
        IMapTileUriRequestedEventArgs2(IMapTileUriRequestedEventArgs2&&) noexcept = default;
        IMapTileUriRequestedEventArgs2& operator=(IMapTileUriRequestedEventArgs2 const&) & noexcept = default;
        IMapTileUriRequestedEventArgs2& operator=(IMapTileUriRequestedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStreetsideExperience :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStreetsideExperience>
    {
        IStreetsideExperience(std::nullptr_t = nullptr) noexcept {}
        IStreetsideExperience(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStreetsideExperience(IStreetsideExperience const&) noexcept = default;
        IStreetsideExperience(IStreetsideExperience&&) noexcept = default;
        IStreetsideExperience& operator=(IStreetsideExperience const&) & noexcept = default;
        IStreetsideExperience& operator=(IStreetsideExperience&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStreetsideExperienceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStreetsideExperienceFactory>
    {
        IStreetsideExperienceFactory(std::nullptr_t = nullptr) noexcept {}
        IStreetsideExperienceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStreetsideExperienceFactory(IStreetsideExperienceFactory const&) noexcept = default;
        IStreetsideExperienceFactory(IStreetsideExperienceFactory&&) noexcept = default;
        IStreetsideExperienceFactory& operator=(IStreetsideExperienceFactory const&) & noexcept = default;
        IStreetsideExperienceFactory& operator=(IStreetsideExperienceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStreetsidePanorama :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStreetsidePanorama>
    {
        IStreetsidePanorama(std::nullptr_t = nullptr) noexcept {}
        IStreetsidePanorama(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStreetsidePanorama(IStreetsidePanorama const&) noexcept = default;
        IStreetsidePanorama(IStreetsidePanorama&&) noexcept = default;
        IStreetsidePanorama& operator=(IStreetsidePanorama const&) & noexcept = default;
        IStreetsidePanorama& operator=(IStreetsidePanorama&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStreetsidePanoramaStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStreetsidePanoramaStatics>
    {
        IStreetsidePanoramaStatics(std::nullptr_t = nullptr) noexcept {}
        IStreetsidePanoramaStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStreetsidePanoramaStatics(IStreetsidePanoramaStatics const&) noexcept = default;
        IStreetsidePanoramaStatics(IStreetsidePanoramaStatics&&) noexcept = default;
        IStreetsidePanoramaStatics& operator=(IStreetsidePanoramaStatics const&) & noexcept = default;
        IStreetsidePanoramaStatics& operator=(IStreetsidePanoramaStatics&&) & noexcept = default;
    };
}
#endif
