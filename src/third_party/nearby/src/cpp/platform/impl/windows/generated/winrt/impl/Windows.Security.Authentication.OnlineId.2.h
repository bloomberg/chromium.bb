// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Security_Authentication_OnlineId_2_H
#define WINRT_Windows_Security_Authentication_OnlineId_2_H
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Windows.System.1.h"
#include "winrt/impl/Windows.Security.Authentication.OnlineId.1.h"
WINRT_EXPORT namespace winrt::Windows::Security::Authentication::OnlineId
{
    struct __declspec(empty_bases) OnlineIdAuthenticator : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdAuthenticator
    {
        OnlineIdAuthenticator(std::nullptr_t) noexcept {}
        OnlineIdAuthenticator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdAuthenticator(ptr, take_ownership_from_abi) {}
        OnlineIdAuthenticator();
        OnlineIdAuthenticator(OnlineIdAuthenticator const&) noexcept = default;
        OnlineIdAuthenticator(OnlineIdAuthenticator&&) noexcept = default;
        OnlineIdAuthenticator& operator=(OnlineIdAuthenticator const&) & noexcept = default;
        OnlineIdAuthenticator& operator=(OnlineIdAuthenticator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) OnlineIdServiceTicket : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdServiceTicket
    {
        OnlineIdServiceTicket(std::nullptr_t) noexcept {}
        OnlineIdServiceTicket(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdServiceTicket(ptr, take_ownership_from_abi) {}
        OnlineIdServiceTicket(OnlineIdServiceTicket const&) noexcept = default;
        OnlineIdServiceTicket(OnlineIdServiceTicket&&) noexcept = default;
        OnlineIdServiceTicket& operator=(OnlineIdServiceTicket const&) & noexcept = default;
        OnlineIdServiceTicket& operator=(OnlineIdServiceTicket&&) & noexcept = default;
    };
    struct __declspec(empty_bases) OnlineIdServiceTicketRequest : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdServiceTicketRequest
    {
        OnlineIdServiceTicketRequest(std::nullptr_t) noexcept {}
        OnlineIdServiceTicketRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdServiceTicketRequest(ptr, take_ownership_from_abi) {}
        OnlineIdServiceTicketRequest(param::hstring const& service, param::hstring const& policy);
        explicit OnlineIdServiceTicketRequest(param::hstring const& service);
        OnlineIdServiceTicketRequest(OnlineIdServiceTicketRequest const&) noexcept = default;
        OnlineIdServiceTicketRequest(OnlineIdServiceTicketRequest&&) noexcept = default;
        OnlineIdServiceTicketRequest& operator=(OnlineIdServiceTicketRequest const&) & noexcept = default;
        OnlineIdServiceTicketRequest& operator=(OnlineIdServiceTicketRequest&&) & noexcept = default;
    };
    struct OnlineIdSystemAuthenticator
    {
        OnlineIdSystemAuthenticator() = delete;
        [[nodiscard]] static auto Default();
        static auto GetForUser(winrt::Windows::System::User const& user);
    };
    struct __declspec(empty_bases) OnlineIdSystemAuthenticatorForUser : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdSystemAuthenticatorForUser
    {
        OnlineIdSystemAuthenticatorForUser(std::nullptr_t) noexcept {}
        OnlineIdSystemAuthenticatorForUser(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdSystemAuthenticatorForUser(ptr, take_ownership_from_abi) {}
        OnlineIdSystemAuthenticatorForUser(OnlineIdSystemAuthenticatorForUser const&) noexcept = default;
        OnlineIdSystemAuthenticatorForUser(OnlineIdSystemAuthenticatorForUser&&) noexcept = default;
        OnlineIdSystemAuthenticatorForUser& operator=(OnlineIdSystemAuthenticatorForUser const&) & noexcept = default;
        OnlineIdSystemAuthenticatorForUser& operator=(OnlineIdSystemAuthenticatorForUser&&) & noexcept = default;
    };
    struct __declspec(empty_bases) OnlineIdSystemIdentity : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdSystemIdentity
    {
        OnlineIdSystemIdentity(std::nullptr_t) noexcept {}
        OnlineIdSystemIdentity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdSystemIdentity(ptr, take_ownership_from_abi) {}
        OnlineIdSystemIdentity(OnlineIdSystemIdentity const&) noexcept = default;
        OnlineIdSystemIdentity(OnlineIdSystemIdentity&&) noexcept = default;
        OnlineIdSystemIdentity& operator=(OnlineIdSystemIdentity const&) & noexcept = default;
        OnlineIdSystemIdentity& operator=(OnlineIdSystemIdentity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) OnlineIdSystemTicketResult : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdSystemTicketResult
    {
        OnlineIdSystemTicketResult(std::nullptr_t) noexcept {}
        OnlineIdSystemTicketResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Security::Authentication::OnlineId::IOnlineIdSystemTicketResult(ptr, take_ownership_from_abi) {}
        OnlineIdSystemTicketResult(OnlineIdSystemTicketResult const&) noexcept = default;
        OnlineIdSystemTicketResult(OnlineIdSystemTicketResult&&) noexcept = default;
        OnlineIdSystemTicketResult& operator=(OnlineIdSystemTicketResult const&) & noexcept = default;
        OnlineIdSystemTicketResult& operator=(OnlineIdSystemTicketResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) SignOutUserOperation : winrt::Windows::Foundation::IAsyncAction
    {
        SignOutUserOperation(std::nullptr_t) noexcept {}
        SignOutUserOperation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IAsyncAction(ptr, take_ownership_from_abi) {}
        SignOutUserOperation(SignOutUserOperation const&) noexcept = default;
        SignOutUserOperation(SignOutUserOperation&&) noexcept = default;
        SignOutUserOperation& operator=(SignOutUserOperation const&) & noexcept = default;
        SignOutUserOperation& operator=(SignOutUserOperation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) UserAuthenticationOperation : winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Security::Authentication::OnlineId::UserIdentity>
    {
        UserAuthenticationOperation(std::nullptr_t) noexcept {}
        UserAuthenticationOperation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Security::Authentication::OnlineId::UserIdentity>(ptr, take_ownership_from_abi) {}
        UserAuthenticationOperation(UserAuthenticationOperation const&) noexcept = default;
        UserAuthenticationOperation(UserAuthenticationOperation&&) noexcept = default;
        UserAuthenticationOperation& operator=(UserAuthenticationOperation const&) & noexcept = default;
        UserAuthenticationOperation& operator=(UserAuthenticationOperation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) UserIdentity : winrt::Windows::Security::Authentication::OnlineId::IUserIdentity
    {
        UserIdentity(std::nullptr_t) noexcept {}
        UserIdentity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Security::Authentication::OnlineId::IUserIdentity(ptr, take_ownership_from_abi) {}
        UserIdentity(UserIdentity const&) noexcept = default;
        UserIdentity(UserIdentity&&) noexcept = default;
        UserIdentity& operator=(UserIdentity const&) & noexcept = default;
        UserIdentity& operator=(UserIdentity&&) & noexcept = default;
    };
}
#endif
