// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Networking_XboxLive_2_H
#define WINRT_Windows_Networking_XboxLive_2_H
#include "winrt/impl/Windows.Networking.1.h"
#include "winrt/impl/Windows.Storage.Streams.1.h"
#include "winrt/impl/Windows.Networking.XboxLive.1.h"
WINRT_EXPORT namespace winrt::Windows::Networking::XboxLive
{
    struct __declspec(empty_bases) XboxLiveDeviceAddress : winrt::Windows::Networking::XboxLive::IXboxLiveDeviceAddress
    {
        XboxLiveDeviceAddress(std::nullptr_t) noexcept {}
        XboxLiveDeviceAddress(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::XboxLive::IXboxLiveDeviceAddress(ptr, take_ownership_from_abi) {}
        XboxLiveDeviceAddress(XboxLiveDeviceAddress const&) noexcept = default;
        XboxLiveDeviceAddress(XboxLiveDeviceAddress&&) noexcept = default;
        XboxLiveDeviceAddress& operator=(XboxLiveDeviceAddress const&) & noexcept = default;
        XboxLiveDeviceAddress& operator=(XboxLiveDeviceAddress&&) & noexcept = default;
        static auto CreateFromSnapshotBase64(param::hstring const& base64);
        static auto CreateFromSnapshotBuffer(winrt::Windows::Storage::Streams::IBuffer const& buffer);
        static auto CreateFromSnapshotBytes(array_view<uint8_t const> buffer);
        static auto GetLocal();
        [[nodiscard]] static auto MaxSnapshotBytesSize();
    };
    struct __declspec(empty_bases) XboxLiveEndpointPair : winrt::Windows::Networking::XboxLive::IXboxLiveEndpointPair
    {
        XboxLiveEndpointPair(std::nullptr_t) noexcept {}
        XboxLiveEndpointPair(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::XboxLive::IXboxLiveEndpointPair(ptr, take_ownership_from_abi) {}
        XboxLiveEndpointPair(XboxLiveEndpointPair const&) noexcept = default;
        XboxLiveEndpointPair(XboxLiveEndpointPair&&) noexcept = default;
        XboxLiveEndpointPair& operator=(XboxLiveEndpointPair const&) & noexcept = default;
        XboxLiveEndpointPair& operator=(XboxLiveEndpointPair&&) & noexcept = default;
        static auto FindEndpointPairBySocketAddressBytes(array_view<uint8_t const> localSocketAddress, array_view<uint8_t const> remoteSocketAddress);
        static auto FindEndpointPairByHostNamesAndPorts(winrt::Windows::Networking::HostName const& localHostName, param::hstring const& localPort, winrt::Windows::Networking::HostName const& remoteHostName, param::hstring const& remotePort);
    };
    struct __declspec(empty_bases) XboxLiveEndpointPairCreationResult : winrt::Windows::Networking::XboxLive::IXboxLiveEndpointPairCreationResult
    {
        XboxLiveEndpointPairCreationResult(std::nullptr_t) noexcept {}
        XboxLiveEndpointPairCreationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::XboxLive::IXboxLiveEndpointPairCreationResult(ptr, take_ownership_from_abi) {}
        XboxLiveEndpointPairCreationResult(XboxLiveEndpointPairCreationResult const&) noexcept = default;
        XboxLiveEndpointPairCreationResult(XboxLiveEndpointPairCreationResult&&) noexcept = default;
        XboxLiveEndpointPairCreationResult& operator=(XboxLiveEndpointPairCreationResult const&) & noexcept = default;
        XboxLiveEndpointPairCreationResult& operator=(XboxLiveEndpointPairCreationResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) XboxLiveEndpointPairStateChangedEventArgs : winrt::Windows::Networking::XboxLive::IXboxLiveEndpointPairStateChangedEventArgs
    {
        XboxLiveEndpointPairStateChangedEventArgs(std::nullptr_t) noexcept {}
        XboxLiveEndpointPairStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::XboxLive::IXboxLiveEndpointPairStateChangedEventArgs(ptr, take_ownership_from_abi) {}
        XboxLiveEndpointPairStateChangedEventArgs(XboxLiveEndpointPairStateChangedEventArgs const&) noexcept = default;
        XboxLiveEndpointPairStateChangedEventArgs(XboxLiveEndpointPairStateChangedEventArgs&&) noexcept = default;
        XboxLiveEndpointPairStateChangedEventArgs& operator=(XboxLiveEndpointPairStateChangedEventArgs const&) & noexcept = default;
        XboxLiveEndpointPairStateChangedEventArgs& operator=(XboxLiveEndpointPairStateChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) XboxLiveEndpointPairTemplate : winrt::Windows::Networking::XboxLive::IXboxLiveEndpointPairTemplate
    {
        XboxLiveEndpointPairTemplate(std::nullptr_t) noexcept {}
        XboxLiveEndpointPairTemplate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::XboxLive::IXboxLiveEndpointPairTemplate(ptr, take_ownership_from_abi) {}
        XboxLiveEndpointPairTemplate(XboxLiveEndpointPairTemplate const&) noexcept = default;
        XboxLiveEndpointPairTemplate(XboxLiveEndpointPairTemplate&&) noexcept = default;
        XboxLiveEndpointPairTemplate& operator=(XboxLiveEndpointPairTemplate const&) & noexcept = default;
        XboxLiveEndpointPairTemplate& operator=(XboxLiveEndpointPairTemplate&&) & noexcept = default;
        static auto GetTemplateByName(param::hstring const& name);
        [[nodiscard]] static auto Templates();
    };
    struct __declspec(empty_bases) XboxLiveInboundEndpointPairCreatedEventArgs : winrt::Windows::Networking::XboxLive::IXboxLiveInboundEndpointPairCreatedEventArgs
    {
        XboxLiveInboundEndpointPairCreatedEventArgs(std::nullptr_t) noexcept {}
        XboxLiveInboundEndpointPairCreatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::XboxLive::IXboxLiveInboundEndpointPairCreatedEventArgs(ptr, take_ownership_from_abi) {}
        XboxLiveInboundEndpointPairCreatedEventArgs(XboxLiveInboundEndpointPairCreatedEventArgs const&) noexcept = default;
        XboxLiveInboundEndpointPairCreatedEventArgs(XboxLiveInboundEndpointPairCreatedEventArgs&&) noexcept = default;
        XboxLiveInboundEndpointPairCreatedEventArgs& operator=(XboxLiveInboundEndpointPairCreatedEventArgs const&) & noexcept = default;
        XboxLiveInboundEndpointPairCreatedEventArgs& operator=(XboxLiveInboundEndpointPairCreatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) XboxLiveQualityOfServiceMeasurement : winrt::Windows::Networking::XboxLive::IXboxLiveQualityOfServiceMeasurement
    {
        XboxLiveQualityOfServiceMeasurement(std::nullptr_t) noexcept {}
        XboxLiveQualityOfServiceMeasurement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::XboxLive::IXboxLiveQualityOfServiceMeasurement(ptr, take_ownership_from_abi) {}
        XboxLiveQualityOfServiceMeasurement();
        XboxLiveQualityOfServiceMeasurement(XboxLiveQualityOfServiceMeasurement const&) noexcept = default;
        XboxLiveQualityOfServiceMeasurement(XboxLiveQualityOfServiceMeasurement&&) noexcept = default;
        XboxLiveQualityOfServiceMeasurement& operator=(XboxLiveQualityOfServiceMeasurement const&) & noexcept = default;
        XboxLiveQualityOfServiceMeasurement& operator=(XboxLiveQualityOfServiceMeasurement&&) & noexcept = default;
        static auto PublishPrivatePayloadBytes(array_view<uint8_t const> payload);
        static auto ClearPrivatePayload();
        [[nodiscard]] static auto MaxSimultaneousProbeConnections();
        static auto MaxSimultaneousProbeConnections(uint32_t value);
        [[nodiscard]] static auto IsSystemOutboundBandwidthConstrained();
        static auto IsSystemOutboundBandwidthConstrained(bool value);
        [[nodiscard]] static auto IsSystemInboundBandwidthConstrained();
        static auto IsSystemInboundBandwidthConstrained(bool value);
        [[nodiscard]] static auto PublishedPrivatePayload();
        static auto PublishedPrivatePayload(winrt::Windows::Storage::Streams::IBuffer const& value);
        [[nodiscard]] static auto MaxPrivatePayloadSize();
    };
    struct __declspec(empty_bases) XboxLiveQualityOfServiceMetricResult : winrt::Windows::Networking::XboxLive::IXboxLiveQualityOfServiceMetricResult
    {
        XboxLiveQualityOfServiceMetricResult(std::nullptr_t) noexcept {}
        XboxLiveQualityOfServiceMetricResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::XboxLive::IXboxLiveQualityOfServiceMetricResult(ptr, take_ownership_from_abi) {}
        XboxLiveQualityOfServiceMetricResult(XboxLiveQualityOfServiceMetricResult const&) noexcept = default;
        XboxLiveQualityOfServiceMetricResult(XboxLiveQualityOfServiceMetricResult&&) noexcept = default;
        XboxLiveQualityOfServiceMetricResult& operator=(XboxLiveQualityOfServiceMetricResult const&) & noexcept = default;
        XboxLiveQualityOfServiceMetricResult& operator=(XboxLiveQualityOfServiceMetricResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) XboxLiveQualityOfServicePrivatePayloadResult : winrt::Windows::Networking::XboxLive::IXboxLiveQualityOfServicePrivatePayloadResult
    {
        XboxLiveQualityOfServicePrivatePayloadResult(std::nullptr_t) noexcept {}
        XboxLiveQualityOfServicePrivatePayloadResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Networking::XboxLive::IXboxLiveQualityOfServicePrivatePayloadResult(ptr, take_ownership_from_abi) {}
        XboxLiveQualityOfServicePrivatePayloadResult(XboxLiveQualityOfServicePrivatePayloadResult const&) noexcept = default;
        XboxLiveQualityOfServicePrivatePayloadResult(XboxLiveQualityOfServicePrivatePayloadResult&&) noexcept = default;
        XboxLiveQualityOfServicePrivatePayloadResult& operator=(XboxLiveQualityOfServicePrivatePayloadResult const&) & noexcept = default;
        XboxLiveQualityOfServicePrivatePayloadResult& operator=(XboxLiveQualityOfServicePrivatePayloadResult&&) & noexcept = default;
    };
}
#endif
