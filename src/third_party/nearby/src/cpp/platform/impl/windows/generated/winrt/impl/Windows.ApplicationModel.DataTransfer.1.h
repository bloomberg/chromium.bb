// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_DataTransfer_1_H
#define WINRT_Windows_ApplicationModel_DataTransfer_1_H
#include "winrt/impl/Windows.Foundation.Collections.0.h"
#include "winrt/impl/Windows.ApplicationModel.DataTransfer.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::DataTransfer
{
    struct __declspec(empty_bases) IClipboardContentOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClipboardContentOptions>
    {
        IClipboardContentOptions(std::nullptr_t = nullptr) noexcept {}
        IClipboardContentOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClipboardContentOptions(IClipboardContentOptions const&) noexcept = default;
        IClipboardContentOptions(IClipboardContentOptions&&) noexcept = default;
        IClipboardContentOptions& operator=(IClipboardContentOptions const&) & noexcept = default;
        IClipboardContentOptions& operator=(IClipboardContentOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClipboardHistoryChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClipboardHistoryChangedEventArgs>
    {
        IClipboardHistoryChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IClipboardHistoryChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClipboardHistoryChangedEventArgs(IClipboardHistoryChangedEventArgs const&) noexcept = default;
        IClipboardHistoryChangedEventArgs(IClipboardHistoryChangedEventArgs&&) noexcept = default;
        IClipboardHistoryChangedEventArgs& operator=(IClipboardHistoryChangedEventArgs const&) & noexcept = default;
        IClipboardHistoryChangedEventArgs& operator=(IClipboardHistoryChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClipboardHistoryItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClipboardHistoryItem>
    {
        IClipboardHistoryItem(std::nullptr_t = nullptr) noexcept {}
        IClipboardHistoryItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClipboardHistoryItem(IClipboardHistoryItem const&) noexcept = default;
        IClipboardHistoryItem(IClipboardHistoryItem&&) noexcept = default;
        IClipboardHistoryItem& operator=(IClipboardHistoryItem const&) & noexcept = default;
        IClipboardHistoryItem& operator=(IClipboardHistoryItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClipboardHistoryItemsResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClipboardHistoryItemsResult>
    {
        IClipboardHistoryItemsResult(std::nullptr_t = nullptr) noexcept {}
        IClipboardHistoryItemsResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClipboardHistoryItemsResult(IClipboardHistoryItemsResult const&) noexcept = default;
        IClipboardHistoryItemsResult(IClipboardHistoryItemsResult&&) noexcept = default;
        IClipboardHistoryItemsResult& operator=(IClipboardHistoryItemsResult const&) & noexcept = default;
        IClipboardHistoryItemsResult& operator=(IClipboardHistoryItemsResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClipboardStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClipboardStatics>
    {
        IClipboardStatics(std::nullptr_t = nullptr) noexcept {}
        IClipboardStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClipboardStatics(IClipboardStatics const&) noexcept = default;
        IClipboardStatics(IClipboardStatics&&) noexcept = default;
        IClipboardStatics& operator=(IClipboardStatics const&) & noexcept = default;
        IClipboardStatics& operator=(IClipboardStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IClipboardStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClipboardStatics2>
    {
        IClipboardStatics2(std::nullptr_t = nullptr) noexcept {}
        IClipboardStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IClipboardStatics2(IClipboardStatics2 const&) noexcept = default;
        IClipboardStatics2(IClipboardStatics2&&) noexcept = default;
        IClipboardStatics2& operator=(IClipboardStatics2 const&) & noexcept = default;
        IClipboardStatics2& operator=(IClipboardStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackage>
    {
        IDataPackage(std::nullptr_t = nullptr) noexcept {}
        IDataPackage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackage(IDataPackage const&) noexcept = default;
        IDataPackage(IDataPackage&&) noexcept = default;
        IDataPackage& operator=(IDataPackage const&) & noexcept = default;
        IDataPackage& operator=(IDataPackage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackage2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackage2>
    {
        IDataPackage2(std::nullptr_t = nullptr) noexcept {}
        IDataPackage2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackage2(IDataPackage2 const&) noexcept = default;
        IDataPackage2(IDataPackage2&&) noexcept = default;
        IDataPackage2& operator=(IDataPackage2 const&) & noexcept = default;
        IDataPackage2& operator=(IDataPackage2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackage3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackage3>
    {
        IDataPackage3(std::nullptr_t = nullptr) noexcept {}
        IDataPackage3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackage3(IDataPackage3 const&) noexcept = default;
        IDataPackage3(IDataPackage3&&) noexcept = default;
        IDataPackage3& operator=(IDataPackage3 const&) & noexcept = default;
        IDataPackage3& operator=(IDataPackage3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackage4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackage4>
    {
        IDataPackage4(std::nullptr_t = nullptr) noexcept {}
        IDataPackage4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackage4(IDataPackage4 const&) noexcept = default;
        IDataPackage4(IDataPackage4&&) noexcept = default;
        IDataPackage4& operator=(IDataPackage4 const&) & noexcept = default;
        IDataPackage4& operator=(IDataPackage4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackagePropertySet :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackagePropertySet>,
        impl::require<winrt::Windows::ApplicationModel::DataTransfer::IDataPackagePropertySet, winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Foundation::Collections::IKeyValuePair<hstring, winrt::Windows::Foundation::IInspectable>>, winrt::Windows::Foundation::Collections::IMap<hstring, winrt::Windows::Foundation::IInspectable>>
    {
        IDataPackagePropertySet(std::nullptr_t = nullptr) noexcept {}
        IDataPackagePropertySet(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackagePropertySet(IDataPackagePropertySet const&) noexcept = default;
        IDataPackagePropertySet(IDataPackagePropertySet&&) noexcept = default;
        IDataPackagePropertySet& operator=(IDataPackagePropertySet const&) & noexcept = default;
        IDataPackagePropertySet& operator=(IDataPackagePropertySet&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackagePropertySet2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackagePropertySet2>
    {
        IDataPackagePropertySet2(std::nullptr_t = nullptr) noexcept {}
        IDataPackagePropertySet2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackagePropertySet2(IDataPackagePropertySet2 const&) noexcept = default;
        IDataPackagePropertySet2(IDataPackagePropertySet2&&) noexcept = default;
        IDataPackagePropertySet2& operator=(IDataPackagePropertySet2 const&) & noexcept = default;
        IDataPackagePropertySet2& operator=(IDataPackagePropertySet2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackagePropertySet3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackagePropertySet3>
    {
        IDataPackagePropertySet3(std::nullptr_t = nullptr) noexcept {}
        IDataPackagePropertySet3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackagePropertySet3(IDataPackagePropertySet3 const&) noexcept = default;
        IDataPackagePropertySet3(IDataPackagePropertySet3&&) noexcept = default;
        IDataPackagePropertySet3& operator=(IDataPackagePropertySet3 const&) & noexcept = default;
        IDataPackagePropertySet3& operator=(IDataPackagePropertySet3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackagePropertySet4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackagePropertySet4>
    {
        IDataPackagePropertySet4(std::nullptr_t = nullptr) noexcept {}
        IDataPackagePropertySet4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackagePropertySet4(IDataPackagePropertySet4 const&) noexcept = default;
        IDataPackagePropertySet4(IDataPackagePropertySet4&&) noexcept = default;
        IDataPackagePropertySet4& operator=(IDataPackagePropertySet4 const&) & noexcept = default;
        IDataPackagePropertySet4& operator=(IDataPackagePropertySet4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackagePropertySetView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackagePropertySetView>
    {
        IDataPackagePropertySetView(std::nullptr_t = nullptr) noexcept {}
        IDataPackagePropertySetView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackagePropertySetView(IDataPackagePropertySetView const&) noexcept = default;
        IDataPackagePropertySetView(IDataPackagePropertySetView&&) noexcept = default;
        IDataPackagePropertySetView& operator=(IDataPackagePropertySetView const&) & noexcept = default;
        IDataPackagePropertySetView& operator=(IDataPackagePropertySetView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackagePropertySetView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackagePropertySetView2>
    {
        IDataPackagePropertySetView2(std::nullptr_t = nullptr) noexcept {}
        IDataPackagePropertySetView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackagePropertySetView2(IDataPackagePropertySetView2 const&) noexcept = default;
        IDataPackagePropertySetView2(IDataPackagePropertySetView2&&) noexcept = default;
        IDataPackagePropertySetView2& operator=(IDataPackagePropertySetView2 const&) & noexcept = default;
        IDataPackagePropertySetView2& operator=(IDataPackagePropertySetView2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackagePropertySetView3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackagePropertySetView3>
    {
        IDataPackagePropertySetView3(std::nullptr_t = nullptr) noexcept {}
        IDataPackagePropertySetView3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackagePropertySetView3(IDataPackagePropertySetView3 const&) noexcept = default;
        IDataPackagePropertySetView3(IDataPackagePropertySetView3&&) noexcept = default;
        IDataPackagePropertySetView3& operator=(IDataPackagePropertySetView3 const&) & noexcept = default;
        IDataPackagePropertySetView3& operator=(IDataPackagePropertySetView3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackagePropertySetView4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackagePropertySetView4>
    {
        IDataPackagePropertySetView4(std::nullptr_t = nullptr) noexcept {}
        IDataPackagePropertySetView4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackagePropertySetView4(IDataPackagePropertySetView4 const&) noexcept = default;
        IDataPackagePropertySetView4(IDataPackagePropertySetView4&&) noexcept = default;
        IDataPackagePropertySetView4& operator=(IDataPackagePropertySetView4 const&) & noexcept = default;
        IDataPackagePropertySetView4& operator=(IDataPackagePropertySetView4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackagePropertySetView5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackagePropertySetView5>
    {
        IDataPackagePropertySetView5(std::nullptr_t = nullptr) noexcept {}
        IDataPackagePropertySetView5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackagePropertySetView5(IDataPackagePropertySetView5 const&) noexcept = default;
        IDataPackagePropertySetView5(IDataPackagePropertySetView5&&) noexcept = default;
        IDataPackagePropertySetView5& operator=(IDataPackagePropertySetView5 const&) & noexcept = default;
        IDataPackagePropertySetView5& operator=(IDataPackagePropertySetView5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackageView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackageView>
    {
        IDataPackageView(std::nullptr_t = nullptr) noexcept {}
        IDataPackageView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackageView(IDataPackageView const&) noexcept = default;
        IDataPackageView(IDataPackageView&&) noexcept = default;
        IDataPackageView& operator=(IDataPackageView const&) & noexcept = default;
        IDataPackageView& operator=(IDataPackageView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackageView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackageView2>
    {
        IDataPackageView2(std::nullptr_t = nullptr) noexcept {}
        IDataPackageView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackageView2(IDataPackageView2 const&) noexcept = default;
        IDataPackageView2(IDataPackageView2&&) noexcept = default;
        IDataPackageView2& operator=(IDataPackageView2 const&) & noexcept = default;
        IDataPackageView2& operator=(IDataPackageView2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackageView3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackageView3>
    {
        IDataPackageView3(std::nullptr_t = nullptr) noexcept {}
        IDataPackageView3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackageView3(IDataPackageView3 const&) noexcept = default;
        IDataPackageView3(IDataPackageView3&&) noexcept = default;
        IDataPackageView3& operator=(IDataPackageView3 const&) & noexcept = default;
        IDataPackageView3& operator=(IDataPackageView3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataPackageView4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataPackageView4>
    {
        IDataPackageView4(std::nullptr_t = nullptr) noexcept {}
        IDataPackageView4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataPackageView4(IDataPackageView4 const&) noexcept = default;
        IDataPackageView4(IDataPackageView4&&) noexcept = default;
        IDataPackageView4& operator=(IDataPackageView4 const&) & noexcept = default;
        IDataPackageView4& operator=(IDataPackageView4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataProviderDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataProviderDeferral>
    {
        IDataProviderDeferral(std::nullptr_t = nullptr) noexcept {}
        IDataProviderDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataProviderDeferral(IDataProviderDeferral const&) noexcept = default;
        IDataProviderDeferral(IDataProviderDeferral&&) noexcept = default;
        IDataProviderDeferral& operator=(IDataProviderDeferral const&) & noexcept = default;
        IDataProviderDeferral& operator=(IDataProviderDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataProviderRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataProviderRequest>
    {
        IDataProviderRequest(std::nullptr_t = nullptr) noexcept {}
        IDataProviderRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataProviderRequest(IDataProviderRequest const&) noexcept = default;
        IDataProviderRequest(IDataProviderRequest&&) noexcept = default;
        IDataProviderRequest& operator=(IDataProviderRequest const&) & noexcept = default;
        IDataProviderRequest& operator=(IDataProviderRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataRequest>
    {
        IDataRequest(std::nullptr_t = nullptr) noexcept {}
        IDataRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataRequest(IDataRequest const&) noexcept = default;
        IDataRequest(IDataRequest&&) noexcept = default;
        IDataRequest& operator=(IDataRequest const&) & noexcept = default;
        IDataRequest& operator=(IDataRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataRequestDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataRequestDeferral>
    {
        IDataRequestDeferral(std::nullptr_t = nullptr) noexcept {}
        IDataRequestDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataRequestDeferral(IDataRequestDeferral const&) noexcept = default;
        IDataRequestDeferral(IDataRequestDeferral&&) noexcept = default;
        IDataRequestDeferral& operator=(IDataRequestDeferral const&) & noexcept = default;
        IDataRequestDeferral& operator=(IDataRequestDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataRequestedEventArgs>
    {
        IDataRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDataRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataRequestedEventArgs(IDataRequestedEventArgs const&) noexcept = default;
        IDataRequestedEventArgs(IDataRequestedEventArgs&&) noexcept = default;
        IDataRequestedEventArgs& operator=(IDataRequestedEventArgs const&) & noexcept = default;
        IDataRequestedEventArgs& operator=(IDataRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTransferManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTransferManager>
    {
        IDataTransferManager(std::nullptr_t = nullptr) noexcept {}
        IDataTransferManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTransferManager(IDataTransferManager const&) noexcept = default;
        IDataTransferManager(IDataTransferManager&&) noexcept = default;
        IDataTransferManager& operator=(IDataTransferManager const&) & noexcept = default;
        IDataTransferManager& operator=(IDataTransferManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTransferManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTransferManager2>
    {
        IDataTransferManager2(std::nullptr_t = nullptr) noexcept {}
        IDataTransferManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTransferManager2(IDataTransferManager2 const&) noexcept = default;
        IDataTransferManager2(IDataTransferManager2&&) noexcept = default;
        IDataTransferManager2& operator=(IDataTransferManager2 const&) & noexcept = default;
        IDataTransferManager2& operator=(IDataTransferManager2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTransferManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTransferManagerStatics>
    {
        IDataTransferManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IDataTransferManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTransferManagerStatics(IDataTransferManagerStatics const&) noexcept = default;
        IDataTransferManagerStatics(IDataTransferManagerStatics&&) noexcept = default;
        IDataTransferManagerStatics& operator=(IDataTransferManagerStatics const&) & noexcept = default;
        IDataTransferManagerStatics& operator=(IDataTransferManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTransferManagerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTransferManagerStatics2>
    {
        IDataTransferManagerStatics2(std::nullptr_t = nullptr) noexcept {}
        IDataTransferManagerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTransferManagerStatics2(IDataTransferManagerStatics2 const&) noexcept = default;
        IDataTransferManagerStatics2(IDataTransferManagerStatics2&&) noexcept = default;
        IDataTransferManagerStatics2& operator=(IDataTransferManagerStatics2 const&) & noexcept = default;
        IDataTransferManagerStatics2& operator=(IDataTransferManagerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTransferManagerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTransferManagerStatics3>
    {
        IDataTransferManagerStatics3(std::nullptr_t = nullptr) noexcept {}
        IDataTransferManagerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTransferManagerStatics3(IDataTransferManagerStatics3 const&) noexcept = default;
        IDataTransferManagerStatics3(IDataTransferManagerStatics3&&) noexcept = default;
        IDataTransferManagerStatics3& operator=(IDataTransferManagerStatics3 const&) & noexcept = default;
        IDataTransferManagerStatics3& operator=(IDataTransferManagerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHtmlFormatHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHtmlFormatHelperStatics>
    {
        IHtmlFormatHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IHtmlFormatHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHtmlFormatHelperStatics(IHtmlFormatHelperStatics const&) noexcept = default;
        IHtmlFormatHelperStatics(IHtmlFormatHelperStatics&&) noexcept = default;
        IHtmlFormatHelperStatics& operator=(IHtmlFormatHelperStatics const&) & noexcept = default;
        IHtmlFormatHelperStatics& operator=(IHtmlFormatHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOperationCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOperationCompletedEventArgs>
    {
        IOperationCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IOperationCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOperationCompletedEventArgs(IOperationCompletedEventArgs const&) noexcept = default;
        IOperationCompletedEventArgs(IOperationCompletedEventArgs&&) noexcept = default;
        IOperationCompletedEventArgs& operator=(IOperationCompletedEventArgs const&) & noexcept = default;
        IOperationCompletedEventArgs& operator=(IOperationCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IOperationCompletedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOperationCompletedEventArgs2>
    {
        IOperationCompletedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IOperationCompletedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IOperationCompletedEventArgs2(IOperationCompletedEventArgs2 const&) noexcept = default;
        IOperationCompletedEventArgs2(IOperationCompletedEventArgs2&&) noexcept = default;
        IOperationCompletedEventArgs2& operator=(IOperationCompletedEventArgs2 const&) & noexcept = default;
        IOperationCompletedEventArgs2& operator=(IOperationCompletedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShareCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShareCompletedEventArgs>
    {
        IShareCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IShareCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShareCompletedEventArgs(IShareCompletedEventArgs const&) noexcept = default;
        IShareCompletedEventArgs(IShareCompletedEventArgs&&) noexcept = default;
        IShareCompletedEventArgs& operator=(IShareCompletedEventArgs const&) & noexcept = default;
        IShareCompletedEventArgs& operator=(IShareCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShareProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShareProvider>
    {
        IShareProvider(std::nullptr_t = nullptr) noexcept {}
        IShareProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShareProvider(IShareProvider const&) noexcept = default;
        IShareProvider(IShareProvider&&) noexcept = default;
        IShareProvider& operator=(IShareProvider const&) & noexcept = default;
        IShareProvider& operator=(IShareProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShareProviderFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShareProviderFactory>
    {
        IShareProviderFactory(std::nullptr_t = nullptr) noexcept {}
        IShareProviderFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShareProviderFactory(IShareProviderFactory const&) noexcept = default;
        IShareProviderFactory(IShareProviderFactory&&) noexcept = default;
        IShareProviderFactory& operator=(IShareProviderFactory const&) & noexcept = default;
        IShareProviderFactory& operator=(IShareProviderFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShareProviderOperation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShareProviderOperation>
    {
        IShareProviderOperation(std::nullptr_t = nullptr) noexcept {}
        IShareProviderOperation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShareProviderOperation(IShareProviderOperation const&) noexcept = default;
        IShareProviderOperation(IShareProviderOperation&&) noexcept = default;
        IShareProviderOperation& operator=(IShareProviderOperation const&) & noexcept = default;
        IShareProviderOperation& operator=(IShareProviderOperation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShareProvidersRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShareProvidersRequestedEventArgs>
    {
        IShareProvidersRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IShareProvidersRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShareProvidersRequestedEventArgs(IShareProvidersRequestedEventArgs const&) noexcept = default;
        IShareProvidersRequestedEventArgs(IShareProvidersRequestedEventArgs&&) noexcept = default;
        IShareProvidersRequestedEventArgs& operator=(IShareProvidersRequestedEventArgs const&) & noexcept = default;
        IShareProvidersRequestedEventArgs& operator=(IShareProvidersRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShareTargetInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShareTargetInfo>
    {
        IShareTargetInfo(std::nullptr_t = nullptr) noexcept {}
        IShareTargetInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShareTargetInfo(IShareTargetInfo const&) noexcept = default;
        IShareTargetInfo(IShareTargetInfo&&) noexcept = default;
        IShareTargetInfo& operator=(IShareTargetInfo const&) & noexcept = default;
        IShareTargetInfo& operator=(IShareTargetInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShareUIOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShareUIOptions>
    {
        IShareUIOptions(std::nullptr_t = nullptr) noexcept {}
        IShareUIOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShareUIOptions(IShareUIOptions const&) noexcept = default;
        IShareUIOptions(IShareUIOptions&&) noexcept = default;
        IShareUIOptions& operator=(IShareUIOptions const&) & noexcept = default;
        IShareUIOptions& operator=(IShareUIOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISharedStorageAccessManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISharedStorageAccessManagerStatics>
    {
        ISharedStorageAccessManagerStatics(std::nullptr_t = nullptr) noexcept {}
        ISharedStorageAccessManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISharedStorageAccessManagerStatics(ISharedStorageAccessManagerStatics const&) noexcept = default;
        ISharedStorageAccessManagerStatics(ISharedStorageAccessManagerStatics&&) noexcept = default;
        ISharedStorageAccessManagerStatics& operator=(ISharedStorageAccessManagerStatics const&) & noexcept = default;
        ISharedStorageAccessManagerStatics& operator=(ISharedStorageAccessManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStandardDataFormatsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStandardDataFormatsStatics>
    {
        IStandardDataFormatsStatics(std::nullptr_t = nullptr) noexcept {}
        IStandardDataFormatsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStandardDataFormatsStatics(IStandardDataFormatsStatics const&) noexcept = default;
        IStandardDataFormatsStatics(IStandardDataFormatsStatics&&) noexcept = default;
        IStandardDataFormatsStatics& operator=(IStandardDataFormatsStatics const&) & noexcept = default;
        IStandardDataFormatsStatics& operator=(IStandardDataFormatsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStandardDataFormatsStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStandardDataFormatsStatics2>
    {
        IStandardDataFormatsStatics2(std::nullptr_t = nullptr) noexcept {}
        IStandardDataFormatsStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStandardDataFormatsStatics2(IStandardDataFormatsStatics2 const&) noexcept = default;
        IStandardDataFormatsStatics2(IStandardDataFormatsStatics2&&) noexcept = default;
        IStandardDataFormatsStatics2& operator=(IStandardDataFormatsStatics2 const&) & noexcept = default;
        IStandardDataFormatsStatics2& operator=(IStandardDataFormatsStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStandardDataFormatsStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStandardDataFormatsStatics3>
    {
        IStandardDataFormatsStatics3(std::nullptr_t = nullptr) noexcept {}
        IStandardDataFormatsStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStandardDataFormatsStatics3(IStandardDataFormatsStatics3 const&) noexcept = default;
        IStandardDataFormatsStatics3(IStandardDataFormatsStatics3&&) noexcept = default;
        IStandardDataFormatsStatics3& operator=(IStandardDataFormatsStatics3 const&) & noexcept = default;
        IStandardDataFormatsStatics3& operator=(IStandardDataFormatsStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITargetApplicationChosenEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITargetApplicationChosenEventArgs>
    {
        ITargetApplicationChosenEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITargetApplicationChosenEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITargetApplicationChosenEventArgs(ITargetApplicationChosenEventArgs const&) noexcept = default;
        ITargetApplicationChosenEventArgs(ITargetApplicationChosenEventArgs&&) noexcept = default;
        ITargetApplicationChosenEventArgs& operator=(ITargetApplicationChosenEventArgs const&) & noexcept = default;
        ITargetApplicationChosenEventArgs& operator=(ITargetApplicationChosenEventArgs&&) & noexcept = default;
    };
}
#endif
