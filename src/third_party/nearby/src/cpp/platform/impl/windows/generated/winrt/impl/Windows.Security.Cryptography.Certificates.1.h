// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Security_Cryptography_Certificates_1_H
#define WINRT_Windows_Security_Cryptography_Certificates_1_H
#include "winrt/impl/Windows.Security.Cryptography.Certificates.0.h"
WINRT_EXPORT namespace winrt::Windows::Security::Cryptography::Certificates
{
    struct __declspec(empty_bases) ICertificate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificate>
    {
        ICertificate(std::nullptr_t = nullptr) noexcept {}
        ICertificate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificate(ICertificate const&) noexcept = default;
        ICertificate(ICertificate&&) noexcept = default;
        ICertificate& operator=(ICertificate const&) & noexcept = default;
        ICertificate& operator=(ICertificate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificate2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificate2>
    {
        ICertificate2(std::nullptr_t = nullptr) noexcept {}
        ICertificate2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificate2(ICertificate2 const&) noexcept = default;
        ICertificate2(ICertificate2&&) noexcept = default;
        ICertificate2& operator=(ICertificate2 const&) & noexcept = default;
        ICertificate2& operator=(ICertificate2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificate3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificate3>
    {
        ICertificate3(std::nullptr_t = nullptr) noexcept {}
        ICertificate3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificate3(ICertificate3 const&) noexcept = default;
        ICertificate3(ICertificate3&&) noexcept = default;
        ICertificate3& operator=(ICertificate3 const&) & noexcept = default;
        ICertificate3& operator=(ICertificate3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateChain :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateChain>
    {
        ICertificateChain(std::nullptr_t = nullptr) noexcept {}
        ICertificateChain(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateChain(ICertificateChain const&) noexcept = default;
        ICertificateChain(ICertificateChain&&) noexcept = default;
        ICertificateChain& operator=(ICertificateChain const&) & noexcept = default;
        ICertificateChain& operator=(ICertificateChain&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateEnrollmentManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateEnrollmentManagerStatics>
    {
        ICertificateEnrollmentManagerStatics(std::nullptr_t = nullptr) noexcept {}
        ICertificateEnrollmentManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateEnrollmentManagerStatics(ICertificateEnrollmentManagerStatics const&) noexcept = default;
        ICertificateEnrollmentManagerStatics(ICertificateEnrollmentManagerStatics&&) noexcept = default;
        ICertificateEnrollmentManagerStatics& operator=(ICertificateEnrollmentManagerStatics const&) & noexcept = default;
        ICertificateEnrollmentManagerStatics& operator=(ICertificateEnrollmentManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateEnrollmentManagerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateEnrollmentManagerStatics2>
    {
        ICertificateEnrollmentManagerStatics2(std::nullptr_t = nullptr) noexcept {}
        ICertificateEnrollmentManagerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateEnrollmentManagerStatics2(ICertificateEnrollmentManagerStatics2 const&) noexcept = default;
        ICertificateEnrollmentManagerStatics2(ICertificateEnrollmentManagerStatics2&&) noexcept = default;
        ICertificateEnrollmentManagerStatics2& operator=(ICertificateEnrollmentManagerStatics2 const&) & noexcept = default;
        ICertificateEnrollmentManagerStatics2& operator=(ICertificateEnrollmentManagerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateEnrollmentManagerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateEnrollmentManagerStatics3>
    {
        ICertificateEnrollmentManagerStatics3(std::nullptr_t = nullptr) noexcept {}
        ICertificateEnrollmentManagerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateEnrollmentManagerStatics3(ICertificateEnrollmentManagerStatics3 const&) noexcept = default;
        ICertificateEnrollmentManagerStatics3(ICertificateEnrollmentManagerStatics3&&) noexcept = default;
        ICertificateEnrollmentManagerStatics3& operator=(ICertificateEnrollmentManagerStatics3 const&) & noexcept = default;
        ICertificateEnrollmentManagerStatics3& operator=(ICertificateEnrollmentManagerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateExtension :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateExtension>
    {
        ICertificateExtension(std::nullptr_t = nullptr) noexcept {}
        ICertificateExtension(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateExtension(ICertificateExtension const&) noexcept = default;
        ICertificateExtension(ICertificateExtension&&) noexcept = default;
        ICertificateExtension& operator=(ICertificateExtension const&) & noexcept = default;
        ICertificateExtension& operator=(ICertificateExtension&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateFactory>
    {
        ICertificateFactory(std::nullptr_t = nullptr) noexcept {}
        ICertificateFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateFactory(ICertificateFactory const&) noexcept = default;
        ICertificateFactory(ICertificateFactory&&) noexcept = default;
        ICertificateFactory& operator=(ICertificateFactory const&) & noexcept = default;
        ICertificateFactory& operator=(ICertificateFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateKeyUsages :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateKeyUsages>
    {
        ICertificateKeyUsages(std::nullptr_t = nullptr) noexcept {}
        ICertificateKeyUsages(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateKeyUsages(ICertificateKeyUsages const&) noexcept = default;
        ICertificateKeyUsages(ICertificateKeyUsages&&) noexcept = default;
        ICertificateKeyUsages& operator=(ICertificateKeyUsages const&) & noexcept = default;
        ICertificateKeyUsages& operator=(ICertificateKeyUsages&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateQuery :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateQuery>
    {
        ICertificateQuery(std::nullptr_t = nullptr) noexcept {}
        ICertificateQuery(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateQuery(ICertificateQuery const&) noexcept = default;
        ICertificateQuery(ICertificateQuery&&) noexcept = default;
        ICertificateQuery& operator=(ICertificateQuery const&) & noexcept = default;
        ICertificateQuery& operator=(ICertificateQuery&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateQuery2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateQuery2>
    {
        ICertificateQuery2(std::nullptr_t = nullptr) noexcept {}
        ICertificateQuery2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateQuery2(ICertificateQuery2 const&) noexcept = default;
        ICertificateQuery2(ICertificateQuery2&&) noexcept = default;
        ICertificateQuery2& operator=(ICertificateQuery2 const&) & noexcept = default;
        ICertificateQuery2& operator=(ICertificateQuery2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateRequestProperties :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateRequestProperties>
    {
        ICertificateRequestProperties(std::nullptr_t = nullptr) noexcept {}
        ICertificateRequestProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateRequestProperties(ICertificateRequestProperties const&) noexcept = default;
        ICertificateRequestProperties(ICertificateRequestProperties&&) noexcept = default;
        ICertificateRequestProperties& operator=(ICertificateRequestProperties const&) & noexcept = default;
        ICertificateRequestProperties& operator=(ICertificateRequestProperties&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateRequestProperties2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateRequestProperties2>
    {
        ICertificateRequestProperties2(std::nullptr_t = nullptr) noexcept {}
        ICertificateRequestProperties2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateRequestProperties2(ICertificateRequestProperties2 const&) noexcept = default;
        ICertificateRequestProperties2(ICertificateRequestProperties2&&) noexcept = default;
        ICertificateRequestProperties2& operator=(ICertificateRequestProperties2 const&) & noexcept = default;
        ICertificateRequestProperties2& operator=(ICertificateRequestProperties2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateRequestProperties3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateRequestProperties3>
    {
        ICertificateRequestProperties3(std::nullptr_t = nullptr) noexcept {}
        ICertificateRequestProperties3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateRequestProperties3(ICertificateRequestProperties3 const&) noexcept = default;
        ICertificateRequestProperties3(ICertificateRequestProperties3&&) noexcept = default;
        ICertificateRequestProperties3& operator=(ICertificateRequestProperties3 const&) & noexcept = default;
        ICertificateRequestProperties3& operator=(ICertificateRequestProperties3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateRequestProperties4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateRequestProperties4>
    {
        ICertificateRequestProperties4(std::nullptr_t = nullptr) noexcept {}
        ICertificateRequestProperties4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateRequestProperties4(ICertificateRequestProperties4 const&) noexcept = default;
        ICertificateRequestProperties4(ICertificateRequestProperties4&&) noexcept = default;
        ICertificateRequestProperties4& operator=(ICertificateRequestProperties4 const&) & noexcept = default;
        ICertificateRequestProperties4& operator=(ICertificateRequestProperties4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateStore :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateStore>
    {
        ICertificateStore(std::nullptr_t = nullptr) noexcept {}
        ICertificateStore(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateStore(ICertificateStore const&) noexcept = default;
        ICertificateStore(ICertificateStore&&) noexcept = default;
        ICertificateStore& operator=(ICertificateStore const&) & noexcept = default;
        ICertificateStore& operator=(ICertificateStore&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateStore2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateStore2>
    {
        ICertificateStore2(std::nullptr_t = nullptr) noexcept {}
        ICertificateStore2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateStore2(ICertificateStore2 const&) noexcept = default;
        ICertificateStore2(ICertificateStore2&&) noexcept = default;
        ICertificateStore2& operator=(ICertificateStore2 const&) & noexcept = default;
        ICertificateStore2& operator=(ICertificateStore2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateStoresStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateStoresStatics>
    {
        ICertificateStoresStatics(std::nullptr_t = nullptr) noexcept {}
        ICertificateStoresStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateStoresStatics(ICertificateStoresStatics const&) noexcept = default;
        ICertificateStoresStatics(ICertificateStoresStatics&&) noexcept = default;
        ICertificateStoresStatics& operator=(ICertificateStoresStatics const&) & noexcept = default;
        ICertificateStoresStatics& operator=(ICertificateStoresStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICertificateStoresStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICertificateStoresStatics2>
    {
        ICertificateStoresStatics2(std::nullptr_t = nullptr) noexcept {}
        ICertificateStoresStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICertificateStoresStatics2(ICertificateStoresStatics2 const&) noexcept = default;
        ICertificateStoresStatics2(ICertificateStoresStatics2&&) noexcept = default;
        ICertificateStoresStatics2& operator=(ICertificateStoresStatics2 const&) & noexcept = default;
        ICertificateStoresStatics2& operator=(ICertificateStoresStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IChainBuildingParameters :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IChainBuildingParameters>
    {
        IChainBuildingParameters(std::nullptr_t = nullptr) noexcept {}
        IChainBuildingParameters(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IChainBuildingParameters(IChainBuildingParameters const&) noexcept = default;
        IChainBuildingParameters(IChainBuildingParameters&&) noexcept = default;
        IChainBuildingParameters& operator=(IChainBuildingParameters const&) & noexcept = default;
        IChainBuildingParameters& operator=(IChainBuildingParameters&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IChainValidationParameters :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IChainValidationParameters>
    {
        IChainValidationParameters(std::nullptr_t = nullptr) noexcept {}
        IChainValidationParameters(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IChainValidationParameters(IChainValidationParameters const&) noexcept = default;
        IChainValidationParameters(IChainValidationParameters&&) noexcept = default;
        IChainValidationParameters& operator=(IChainValidationParameters const&) & noexcept = default;
        IChainValidationParameters& operator=(IChainValidationParameters&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICmsAttachedSignature :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICmsAttachedSignature>
    {
        ICmsAttachedSignature(std::nullptr_t = nullptr) noexcept {}
        ICmsAttachedSignature(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICmsAttachedSignature(ICmsAttachedSignature const&) noexcept = default;
        ICmsAttachedSignature(ICmsAttachedSignature&&) noexcept = default;
        ICmsAttachedSignature& operator=(ICmsAttachedSignature const&) & noexcept = default;
        ICmsAttachedSignature& operator=(ICmsAttachedSignature&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICmsAttachedSignatureFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICmsAttachedSignatureFactory>
    {
        ICmsAttachedSignatureFactory(std::nullptr_t = nullptr) noexcept {}
        ICmsAttachedSignatureFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICmsAttachedSignatureFactory(ICmsAttachedSignatureFactory const&) noexcept = default;
        ICmsAttachedSignatureFactory(ICmsAttachedSignatureFactory&&) noexcept = default;
        ICmsAttachedSignatureFactory& operator=(ICmsAttachedSignatureFactory const&) & noexcept = default;
        ICmsAttachedSignatureFactory& operator=(ICmsAttachedSignatureFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICmsAttachedSignatureStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICmsAttachedSignatureStatics>
    {
        ICmsAttachedSignatureStatics(std::nullptr_t = nullptr) noexcept {}
        ICmsAttachedSignatureStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICmsAttachedSignatureStatics(ICmsAttachedSignatureStatics const&) noexcept = default;
        ICmsAttachedSignatureStatics(ICmsAttachedSignatureStatics&&) noexcept = default;
        ICmsAttachedSignatureStatics& operator=(ICmsAttachedSignatureStatics const&) & noexcept = default;
        ICmsAttachedSignatureStatics& operator=(ICmsAttachedSignatureStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICmsDetachedSignature :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICmsDetachedSignature>
    {
        ICmsDetachedSignature(std::nullptr_t = nullptr) noexcept {}
        ICmsDetachedSignature(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICmsDetachedSignature(ICmsDetachedSignature const&) noexcept = default;
        ICmsDetachedSignature(ICmsDetachedSignature&&) noexcept = default;
        ICmsDetachedSignature& operator=(ICmsDetachedSignature const&) & noexcept = default;
        ICmsDetachedSignature& operator=(ICmsDetachedSignature&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICmsDetachedSignatureFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICmsDetachedSignatureFactory>
    {
        ICmsDetachedSignatureFactory(std::nullptr_t = nullptr) noexcept {}
        ICmsDetachedSignatureFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICmsDetachedSignatureFactory(ICmsDetachedSignatureFactory const&) noexcept = default;
        ICmsDetachedSignatureFactory(ICmsDetachedSignatureFactory&&) noexcept = default;
        ICmsDetachedSignatureFactory& operator=(ICmsDetachedSignatureFactory const&) & noexcept = default;
        ICmsDetachedSignatureFactory& operator=(ICmsDetachedSignatureFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICmsDetachedSignatureStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICmsDetachedSignatureStatics>
    {
        ICmsDetachedSignatureStatics(std::nullptr_t = nullptr) noexcept {}
        ICmsDetachedSignatureStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICmsDetachedSignatureStatics(ICmsDetachedSignatureStatics const&) noexcept = default;
        ICmsDetachedSignatureStatics(ICmsDetachedSignatureStatics&&) noexcept = default;
        ICmsDetachedSignatureStatics& operator=(ICmsDetachedSignatureStatics const&) & noexcept = default;
        ICmsDetachedSignatureStatics& operator=(ICmsDetachedSignatureStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICmsSignerInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICmsSignerInfo>
    {
        ICmsSignerInfo(std::nullptr_t = nullptr) noexcept {}
        ICmsSignerInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICmsSignerInfo(ICmsSignerInfo const&) noexcept = default;
        ICmsSignerInfo(ICmsSignerInfo&&) noexcept = default;
        ICmsSignerInfo& operator=(ICmsSignerInfo const&) & noexcept = default;
        ICmsSignerInfo& operator=(ICmsSignerInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICmsTimestampInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICmsTimestampInfo>
    {
        ICmsTimestampInfo(std::nullptr_t = nullptr) noexcept {}
        ICmsTimestampInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICmsTimestampInfo(ICmsTimestampInfo const&) noexcept = default;
        ICmsTimestampInfo(ICmsTimestampInfo&&) noexcept = default;
        ICmsTimestampInfo& operator=(ICmsTimestampInfo const&) & noexcept = default;
        ICmsTimestampInfo& operator=(ICmsTimestampInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyAlgorithmNamesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyAlgorithmNamesStatics>
    {
        IKeyAlgorithmNamesStatics(std::nullptr_t = nullptr) noexcept {}
        IKeyAlgorithmNamesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyAlgorithmNamesStatics(IKeyAlgorithmNamesStatics const&) noexcept = default;
        IKeyAlgorithmNamesStatics(IKeyAlgorithmNamesStatics&&) noexcept = default;
        IKeyAlgorithmNamesStatics& operator=(IKeyAlgorithmNamesStatics const&) & noexcept = default;
        IKeyAlgorithmNamesStatics& operator=(IKeyAlgorithmNamesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyAlgorithmNamesStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyAlgorithmNamesStatics2>
    {
        IKeyAlgorithmNamesStatics2(std::nullptr_t = nullptr) noexcept {}
        IKeyAlgorithmNamesStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyAlgorithmNamesStatics2(IKeyAlgorithmNamesStatics2 const&) noexcept = default;
        IKeyAlgorithmNamesStatics2(IKeyAlgorithmNamesStatics2&&) noexcept = default;
        IKeyAlgorithmNamesStatics2& operator=(IKeyAlgorithmNamesStatics2 const&) & noexcept = default;
        IKeyAlgorithmNamesStatics2& operator=(IKeyAlgorithmNamesStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyAttestationHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyAttestationHelperStatics>
    {
        IKeyAttestationHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IKeyAttestationHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyAttestationHelperStatics(IKeyAttestationHelperStatics const&) noexcept = default;
        IKeyAttestationHelperStatics(IKeyAttestationHelperStatics&&) noexcept = default;
        IKeyAttestationHelperStatics& operator=(IKeyAttestationHelperStatics const&) & noexcept = default;
        IKeyAttestationHelperStatics& operator=(IKeyAttestationHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyAttestationHelperStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyAttestationHelperStatics2>
    {
        IKeyAttestationHelperStatics2(std::nullptr_t = nullptr) noexcept {}
        IKeyAttestationHelperStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyAttestationHelperStatics2(IKeyAttestationHelperStatics2 const&) noexcept = default;
        IKeyAttestationHelperStatics2(IKeyAttestationHelperStatics2&&) noexcept = default;
        IKeyAttestationHelperStatics2& operator=(IKeyAttestationHelperStatics2 const&) & noexcept = default;
        IKeyAttestationHelperStatics2& operator=(IKeyAttestationHelperStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyStorageProviderNamesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyStorageProviderNamesStatics>
    {
        IKeyStorageProviderNamesStatics(std::nullptr_t = nullptr) noexcept {}
        IKeyStorageProviderNamesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyStorageProviderNamesStatics(IKeyStorageProviderNamesStatics const&) noexcept = default;
        IKeyStorageProviderNamesStatics(IKeyStorageProviderNamesStatics&&) noexcept = default;
        IKeyStorageProviderNamesStatics& operator=(IKeyStorageProviderNamesStatics const&) & noexcept = default;
        IKeyStorageProviderNamesStatics& operator=(IKeyStorageProviderNamesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyStorageProviderNamesStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyStorageProviderNamesStatics2>
    {
        IKeyStorageProviderNamesStatics2(std::nullptr_t = nullptr) noexcept {}
        IKeyStorageProviderNamesStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyStorageProviderNamesStatics2(IKeyStorageProviderNamesStatics2 const&) noexcept = default;
        IKeyStorageProviderNamesStatics2(IKeyStorageProviderNamesStatics2&&) noexcept = default;
        IKeyStorageProviderNamesStatics2& operator=(IKeyStorageProviderNamesStatics2 const&) & noexcept = default;
        IKeyStorageProviderNamesStatics2& operator=(IKeyStorageProviderNamesStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPfxImportParameters :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPfxImportParameters>
    {
        IPfxImportParameters(std::nullptr_t = nullptr) noexcept {}
        IPfxImportParameters(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPfxImportParameters(IPfxImportParameters const&) noexcept = default;
        IPfxImportParameters(IPfxImportParameters&&) noexcept = default;
        IPfxImportParameters& operator=(IPfxImportParameters const&) & noexcept = default;
        IPfxImportParameters& operator=(IPfxImportParameters&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStandardCertificateStoreNamesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStandardCertificateStoreNamesStatics>
    {
        IStandardCertificateStoreNamesStatics(std::nullptr_t = nullptr) noexcept {}
        IStandardCertificateStoreNamesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStandardCertificateStoreNamesStatics(IStandardCertificateStoreNamesStatics const&) noexcept = default;
        IStandardCertificateStoreNamesStatics(IStandardCertificateStoreNamesStatics&&) noexcept = default;
        IStandardCertificateStoreNamesStatics& operator=(IStandardCertificateStoreNamesStatics const&) & noexcept = default;
        IStandardCertificateStoreNamesStatics& operator=(IStandardCertificateStoreNamesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISubjectAlternativeNameInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISubjectAlternativeNameInfo>
    {
        ISubjectAlternativeNameInfo(std::nullptr_t = nullptr) noexcept {}
        ISubjectAlternativeNameInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISubjectAlternativeNameInfo(ISubjectAlternativeNameInfo const&) noexcept = default;
        ISubjectAlternativeNameInfo(ISubjectAlternativeNameInfo&&) noexcept = default;
        ISubjectAlternativeNameInfo& operator=(ISubjectAlternativeNameInfo const&) & noexcept = default;
        ISubjectAlternativeNameInfo& operator=(ISubjectAlternativeNameInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISubjectAlternativeNameInfo2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISubjectAlternativeNameInfo2>
    {
        ISubjectAlternativeNameInfo2(std::nullptr_t = nullptr) noexcept {}
        ISubjectAlternativeNameInfo2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISubjectAlternativeNameInfo2(ISubjectAlternativeNameInfo2 const&) noexcept = default;
        ISubjectAlternativeNameInfo2(ISubjectAlternativeNameInfo2&&) noexcept = default;
        ISubjectAlternativeNameInfo2& operator=(ISubjectAlternativeNameInfo2 const&) & noexcept = default;
        ISubjectAlternativeNameInfo2& operator=(ISubjectAlternativeNameInfo2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserCertificateEnrollmentManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserCertificateEnrollmentManager>
    {
        IUserCertificateEnrollmentManager(std::nullptr_t = nullptr) noexcept {}
        IUserCertificateEnrollmentManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserCertificateEnrollmentManager(IUserCertificateEnrollmentManager const&) noexcept = default;
        IUserCertificateEnrollmentManager(IUserCertificateEnrollmentManager&&) noexcept = default;
        IUserCertificateEnrollmentManager& operator=(IUserCertificateEnrollmentManager const&) & noexcept = default;
        IUserCertificateEnrollmentManager& operator=(IUserCertificateEnrollmentManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserCertificateEnrollmentManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserCertificateEnrollmentManager2>
    {
        IUserCertificateEnrollmentManager2(std::nullptr_t = nullptr) noexcept {}
        IUserCertificateEnrollmentManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserCertificateEnrollmentManager2(IUserCertificateEnrollmentManager2 const&) noexcept = default;
        IUserCertificateEnrollmentManager2(IUserCertificateEnrollmentManager2&&) noexcept = default;
        IUserCertificateEnrollmentManager2& operator=(IUserCertificateEnrollmentManager2 const&) & noexcept = default;
        IUserCertificateEnrollmentManager2& operator=(IUserCertificateEnrollmentManager2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserCertificateStore :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserCertificateStore>
    {
        IUserCertificateStore(std::nullptr_t = nullptr) noexcept {}
        IUserCertificateStore(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserCertificateStore(IUserCertificateStore const&) noexcept = default;
        IUserCertificateStore(IUserCertificateStore&&) noexcept = default;
        IUserCertificateStore& operator=(IUserCertificateStore const&) & noexcept = default;
        IUserCertificateStore& operator=(IUserCertificateStore&&) & noexcept = default;
    };
}
#endif
