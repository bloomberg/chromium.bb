// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_Email_1_H
#define WINRT_Windows_ApplicationModel_Email_1_H
#include "winrt/impl/Windows.ApplicationModel.Email.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::Email
{
    struct __declspec(empty_bases) IEmailAttachment :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailAttachment>
    {
        IEmailAttachment(std::nullptr_t = nullptr) noexcept {}
        IEmailAttachment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailAttachment(IEmailAttachment const&) noexcept = default;
        IEmailAttachment(IEmailAttachment&&) noexcept = default;
        IEmailAttachment& operator=(IEmailAttachment const&) & noexcept = default;
        IEmailAttachment& operator=(IEmailAttachment&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailAttachment2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailAttachment2>
    {
        IEmailAttachment2(std::nullptr_t = nullptr) noexcept {}
        IEmailAttachment2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailAttachment2(IEmailAttachment2 const&) noexcept = default;
        IEmailAttachment2(IEmailAttachment2&&) noexcept = default;
        IEmailAttachment2& operator=(IEmailAttachment2 const&) & noexcept = default;
        IEmailAttachment2& operator=(IEmailAttachment2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailAttachmentFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailAttachmentFactory>
    {
        IEmailAttachmentFactory(std::nullptr_t = nullptr) noexcept {}
        IEmailAttachmentFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailAttachmentFactory(IEmailAttachmentFactory const&) noexcept = default;
        IEmailAttachmentFactory(IEmailAttachmentFactory&&) noexcept = default;
        IEmailAttachmentFactory& operator=(IEmailAttachmentFactory const&) & noexcept = default;
        IEmailAttachmentFactory& operator=(IEmailAttachmentFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailAttachmentFactory2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailAttachmentFactory2>
    {
        IEmailAttachmentFactory2(std::nullptr_t = nullptr) noexcept {}
        IEmailAttachmentFactory2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailAttachmentFactory2(IEmailAttachmentFactory2 const&) noexcept = default;
        IEmailAttachmentFactory2(IEmailAttachmentFactory2&&) noexcept = default;
        IEmailAttachmentFactory2& operator=(IEmailAttachmentFactory2 const&) & noexcept = default;
        IEmailAttachmentFactory2& operator=(IEmailAttachmentFactory2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailConversation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailConversation>
    {
        IEmailConversation(std::nullptr_t = nullptr) noexcept {}
        IEmailConversation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailConversation(IEmailConversation const&) noexcept = default;
        IEmailConversation(IEmailConversation&&) noexcept = default;
        IEmailConversation& operator=(IEmailConversation const&) & noexcept = default;
        IEmailConversation& operator=(IEmailConversation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailConversationBatch :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailConversationBatch>
    {
        IEmailConversationBatch(std::nullptr_t = nullptr) noexcept {}
        IEmailConversationBatch(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailConversationBatch(IEmailConversationBatch const&) noexcept = default;
        IEmailConversationBatch(IEmailConversationBatch&&) noexcept = default;
        IEmailConversationBatch& operator=(IEmailConversationBatch const&) & noexcept = default;
        IEmailConversationBatch& operator=(IEmailConversationBatch&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailConversationReader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailConversationReader>
    {
        IEmailConversationReader(std::nullptr_t = nullptr) noexcept {}
        IEmailConversationReader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailConversationReader(IEmailConversationReader const&) noexcept = default;
        IEmailConversationReader(IEmailConversationReader&&) noexcept = default;
        IEmailConversationReader& operator=(IEmailConversationReader const&) & noexcept = default;
        IEmailConversationReader& operator=(IEmailConversationReader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailFolder :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailFolder>
    {
        IEmailFolder(std::nullptr_t = nullptr) noexcept {}
        IEmailFolder(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailFolder(IEmailFolder const&) noexcept = default;
        IEmailFolder(IEmailFolder&&) noexcept = default;
        IEmailFolder& operator=(IEmailFolder const&) & noexcept = default;
        IEmailFolder& operator=(IEmailFolder&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailIrmInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailIrmInfo>
    {
        IEmailIrmInfo(std::nullptr_t = nullptr) noexcept {}
        IEmailIrmInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailIrmInfo(IEmailIrmInfo const&) noexcept = default;
        IEmailIrmInfo(IEmailIrmInfo&&) noexcept = default;
        IEmailIrmInfo& operator=(IEmailIrmInfo const&) & noexcept = default;
        IEmailIrmInfo& operator=(IEmailIrmInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailIrmInfoFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailIrmInfoFactory>
    {
        IEmailIrmInfoFactory(std::nullptr_t = nullptr) noexcept {}
        IEmailIrmInfoFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailIrmInfoFactory(IEmailIrmInfoFactory const&) noexcept = default;
        IEmailIrmInfoFactory(IEmailIrmInfoFactory&&) noexcept = default;
        IEmailIrmInfoFactory& operator=(IEmailIrmInfoFactory const&) & noexcept = default;
        IEmailIrmInfoFactory& operator=(IEmailIrmInfoFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailIrmTemplate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailIrmTemplate>
    {
        IEmailIrmTemplate(std::nullptr_t = nullptr) noexcept {}
        IEmailIrmTemplate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailIrmTemplate(IEmailIrmTemplate const&) noexcept = default;
        IEmailIrmTemplate(IEmailIrmTemplate&&) noexcept = default;
        IEmailIrmTemplate& operator=(IEmailIrmTemplate const&) & noexcept = default;
        IEmailIrmTemplate& operator=(IEmailIrmTemplate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailIrmTemplateFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailIrmTemplateFactory>
    {
        IEmailIrmTemplateFactory(std::nullptr_t = nullptr) noexcept {}
        IEmailIrmTemplateFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailIrmTemplateFactory(IEmailIrmTemplateFactory const&) noexcept = default;
        IEmailIrmTemplateFactory(IEmailIrmTemplateFactory&&) noexcept = default;
        IEmailIrmTemplateFactory& operator=(IEmailIrmTemplateFactory const&) & noexcept = default;
        IEmailIrmTemplateFactory& operator=(IEmailIrmTemplateFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailItemCounts :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailItemCounts>
    {
        IEmailItemCounts(std::nullptr_t = nullptr) noexcept {}
        IEmailItemCounts(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailItemCounts(IEmailItemCounts const&) noexcept = default;
        IEmailItemCounts(IEmailItemCounts&&) noexcept = default;
        IEmailItemCounts& operator=(IEmailItemCounts const&) & noexcept = default;
        IEmailItemCounts& operator=(IEmailItemCounts&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailbox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailbox>
    {
        IEmailMailbox(std::nullptr_t = nullptr) noexcept {}
        IEmailMailbox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailbox(IEmailMailbox const&) noexcept = default;
        IEmailMailbox(IEmailMailbox&&) noexcept = default;
        IEmailMailbox& operator=(IEmailMailbox const&) & noexcept = default;
        IEmailMailbox& operator=(IEmailMailbox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailbox2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailbox2>,
        impl::require<winrt::Windows::ApplicationModel::Email::IEmailMailbox2, winrt::Windows::ApplicationModel::Email::IEmailMailbox>
    {
        IEmailMailbox2(std::nullptr_t = nullptr) noexcept {}
        IEmailMailbox2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailbox2(IEmailMailbox2 const&) noexcept = default;
        IEmailMailbox2(IEmailMailbox2&&) noexcept = default;
        IEmailMailbox2& operator=(IEmailMailbox2 const&) & noexcept = default;
        IEmailMailbox2& operator=(IEmailMailbox2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailbox3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailbox3>,
        impl::require<winrt::Windows::ApplicationModel::Email::IEmailMailbox3, winrt::Windows::ApplicationModel::Email::IEmailMailbox, winrt::Windows::ApplicationModel::Email::IEmailMailbox2>
    {
        IEmailMailbox3(std::nullptr_t = nullptr) noexcept {}
        IEmailMailbox3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailbox3(IEmailMailbox3 const&) noexcept = default;
        IEmailMailbox3(IEmailMailbox3&&) noexcept = default;
        IEmailMailbox3& operator=(IEmailMailbox3 const&) & noexcept = default;
        IEmailMailbox3& operator=(IEmailMailbox3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailbox4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailbox4>
    {
        IEmailMailbox4(std::nullptr_t = nullptr) noexcept {}
        IEmailMailbox4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailbox4(IEmailMailbox4 const&) noexcept = default;
        IEmailMailbox4(IEmailMailbox4&&) noexcept = default;
        IEmailMailbox4& operator=(IEmailMailbox4 const&) & noexcept = default;
        IEmailMailbox4& operator=(IEmailMailbox4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailbox5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailbox5>
    {
        IEmailMailbox5(std::nullptr_t = nullptr) noexcept {}
        IEmailMailbox5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailbox5(IEmailMailbox5 const&) noexcept = default;
        IEmailMailbox5(IEmailMailbox5&&) noexcept = default;
        IEmailMailbox5& operator=(IEmailMailbox5 const&) & noexcept = default;
        IEmailMailbox5& operator=(IEmailMailbox5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxAction :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxAction>
    {
        IEmailMailboxAction(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxAction(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxAction(IEmailMailboxAction const&) noexcept = default;
        IEmailMailboxAction(IEmailMailboxAction&&) noexcept = default;
        IEmailMailboxAction& operator=(IEmailMailboxAction const&) & noexcept = default;
        IEmailMailboxAction& operator=(IEmailMailboxAction&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxAutoReply :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxAutoReply>
    {
        IEmailMailboxAutoReply(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxAutoReply(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxAutoReply(IEmailMailboxAutoReply const&) noexcept = default;
        IEmailMailboxAutoReply(IEmailMailboxAutoReply&&) noexcept = default;
        IEmailMailboxAutoReply& operator=(IEmailMailboxAutoReply const&) & noexcept = default;
        IEmailMailboxAutoReply& operator=(IEmailMailboxAutoReply&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxAutoReplySettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxAutoReplySettings>
    {
        IEmailMailboxAutoReplySettings(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxAutoReplySettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxAutoReplySettings(IEmailMailboxAutoReplySettings const&) noexcept = default;
        IEmailMailboxAutoReplySettings(IEmailMailboxAutoReplySettings&&) noexcept = default;
        IEmailMailboxAutoReplySettings& operator=(IEmailMailboxAutoReplySettings const&) & noexcept = default;
        IEmailMailboxAutoReplySettings& operator=(IEmailMailboxAutoReplySettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxCapabilities :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxCapabilities>
    {
        IEmailMailboxCapabilities(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxCapabilities(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxCapabilities(IEmailMailboxCapabilities const&) noexcept = default;
        IEmailMailboxCapabilities(IEmailMailboxCapabilities&&) noexcept = default;
        IEmailMailboxCapabilities& operator=(IEmailMailboxCapabilities const&) & noexcept = default;
        IEmailMailboxCapabilities& operator=(IEmailMailboxCapabilities&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxCapabilities2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxCapabilities2>
    {
        IEmailMailboxCapabilities2(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxCapabilities2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxCapabilities2(IEmailMailboxCapabilities2 const&) noexcept = default;
        IEmailMailboxCapabilities2(IEmailMailboxCapabilities2&&) noexcept = default;
        IEmailMailboxCapabilities2& operator=(IEmailMailboxCapabilities2 const&) & noexcept = default;
        IEmailMailboxCapabilities2& operator=(IEmailMailboxCapabilities2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxCapabilities3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxCapabilities3>
    {
        IEmailMailboxCapabilities3(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxCapabilities3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxCapabilities3(IEmailMailboxCapabilities3 const&) noexcept = default;
        IEmailMailboxCapabilities3(IEmailMailboxCapabilities3&&) noexcept = default;
        IEmailMailboxCapabilities3& operator=(IEmailMailboxCapabilities3 const&) & noexcept = default;
        IEmailMailboxCapabilities3& operator=(IEmailMailboxCapabilities3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxChange :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxChange>
    {
        IEmailMailboxChange(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxChange(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxChange(IEmailMailboxChange const&) noexcept = default;
        IEmailMailboxChange(IEmailMailboxChange&&) noexcept = default;
        IEmailMailboxChange& operator=(IEmailMailboxChange const&) & noexcept = default;
        IEmailMailboxChange& operator=(IEmailMailboxChange&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxChangeReader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxChangeReader>
    {
        IEmailMailboxChangeReader(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxChangeReader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxChangeReader(IEmailMailboxChangeReader const&) noexcept = default;
        IEmailMailboxChangeReader(IEmailMailboxChangeReader&&) noexcept = default;
        IEmailMailboxChangeReader& operator=(IEmailMailboxChangeReader const&) & noexcept = default;
        IEmailMailboxChangeReader& operator=(IEmailMailboxChangeReader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxChangeTracker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxChangeTracker>
    {
        IEmailMailboxChangeTracker(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxChangeTracker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxChangeTracker(IEmailMailboxChangeTracker const&) noexcept = default;
        IEmailMailboxChangeTracker(IEmailMailboxChangeTracker&&) noexcept = default;
        IEmailMailboxChangeTracker& operator=(IEmailMailboxChangeTracker const&) & noexcept = default;
        IEmailMailboxChangeTracker& operator=(IEmailMailboxChangeTracker&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxChangedDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxChangedDeferral>
    {
        IEmailMailboxChangedDeferral(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxChangedDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxChangedDeferral(IEmailMailboxChangedDeferral const&) noexcept = default;
        IEmailMailboxChangedDeferral(IEmailMailboxChangedDeferral&&) noexcept = default;
        IEmailMailboxChangedDeferral& operator=(IEmailMailboxChangedDeferral const&) & noexcept = default;
        IEmailMailboxChangedDeferral& operator=(IEmailMailboxChangedDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxChangedEventArgs>
    {
        IEmailMailboxChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxChangedEventArgs(IEmailMailboxChangedEventArgs const&) noexcept = default;
        IEmailMailboxChangedEventArgs(IEmailMailboxChangedEventArgs&&) noexcept = default;
        IEmailMailboxChangedEventArgs& operator=(IEmailMailboxChangedEventArgs const&) & noexcept = default;
        IEmailMailboxChangedEventArgs& operator=(IEmailMailboxChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxCreateFolderResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxCreateFolderResult>
    {
        IEmailMailboxCreateFolderResult(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxCreateFolderResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxCreateFolderResult(IEmailMailboxCreateFolderResult const&) noexcept = default;
        IEmailMailboxCreateFolderResult(IEmailMailboxCreateFolderResult&&) noexcept = default;
        IEmailMailboxCreateFolderResult& operator=(IEmailMailboxCreateFolderResult const&) & noexcept = default;
        IEmailMailboxCreateFolderResult& operator=(IEmailMailboxCreateFolderResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxPolicies :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxPolicies>
    {
        IEmailMailboxPolicies(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxPolicies(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxPolicies(IEmailMailboxPolicies const&) noexcept = default;
        IEmailMailboxPolicies(IEmailMailboxPolicies&&) noexcept = default;
        IEmailMailboxPolicies& operator=(IEmailMailboxPolicies const&) & noexcept = default;
        IEmailMailboxPolicies& operator=(IEmailMailboxPolicies&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxPolicies2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxPolicies2>
    {
        IEmailMailboxPolicies2(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxPolicies2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxPolicies2(IEmailMailboxPolicies2 const&) noexcept = default;
        IEmailMailboxPolicies2(IEmailMailboxPolicies2&&) noexcept = default;
        IEmailMailboxPolicies2& operator=(IEmailMailboxPolicies2 const&) & noexcept = default;
        IEmailMailboxPolicies2& operator=(IEmailMailboxPolicies2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxPolicies3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxPolicies3>
    {
        IEmailMailboxPolicies3(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxPolicies3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxPolicies3(IEmailMailboxPolicies3 const&) noexcept = default;
        IEmailMailboxPolicies3(IEmailMailboxPolicies3&&) noexcept = default;
        IEmailMailboxPolicies3& operator=(IEmailMailboxPolicies3 const&) & noexcept = default;
        IEmailMailboxPolicies3& operator=(IEmailMailboxPolicies3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxSyncManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxSyncManager>
    {
        IEmailMailboxSyncManager(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxSyncManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxSyncManager(IEmailMailboxSyncManager const&) noexcept = default;
        IEmailMailboxSyncManager(IEmailMailboxSyncManager&&) noexcept = default;
        IEmailMailboxSyncManager& operator=(IEmailMailboxSyncManager const&) & noexcept = default;
        IEmailMailboxSyncManager& operator=(IEmailMailboxSyncManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMailboxSyncManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMailboxSyncManager2>
    {
        IEmailMailboxSyncManager2(std::nullptr_t = nullptr) noexcept {}
        IEmailMailboxSyncManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMailboxSyncManager2(IEmailMailboxSyncManager2 const&) noexcept = default;
        IEmailMailboxSyncManager2(IEmailMailboxSyncManager2&&) noexcept = default;
        IEmailMailboxSyncManager2& operator=(IEmailMailboxSyncManager2 const&) & noexcept = default;
        IEmailMailboxSyncManager2& operator=(IEmailMailboxSyncManager2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailManagerForUser :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailManagerForUser>
    {
        IEmailManagerForUser(std::nullptr_t = nullptr) noexcept {}
        IEmailManagerForUser(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailManagerForUser(IEmailManagerForUser const&) noexcept = default;
        IEmailManagerForUser(IEmailManagerForUser&&) noexcept = default;
        IEmailManagerForUser& operator=(IEmailManagerForUser const&) & noexcept = default;
        IEmailManagerForUser& operator=(IEmailManagerForUser&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailManagerStatics>
    {
        IEmailManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IEmailManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailManagerStatics(IEmailManagerStatics const&) noexcept = default;
        IEmailManagerStatics(IEmailManagerStatics&&) noexcept = default;
        IEmailManagerStatics& operator=(IEmailManagerStatics const&) & noexcept = default;
        IEmailManagerStatics& operator=(IEmailManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailManagerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailManagerStatics2>
    {
        IEmailManagerStatics2(std::nullptr_t = nullptr) noexcept {}
        IEmailManagerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailManagerStatics2(IEmailManagerStatics2 const&) noexcept = default;
        IEmailManagerStatics2(IEmailManagerStatics2&&) noexcept = default;
        IEmailManagerStatics2& operator=(IEmailManagerStatics2 const&) & noexcept = default;
        IEmailManagerStatics2& operator=(IEmailManagerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailManagerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailManagerStatics3>
    {
        IEmailManagerStatics3(std::nullptr_t = nullptr) noexcept {}
        IEmailManagerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailManagerStatics3(IEmailManagerStatics3 const&) noexcept = default;
        IEmailManagerStatics3(IEmailManagerStatics3&&) noexcept = default;
        IEmailManagerStatics3& operator=(IEmailManagerStatics3 const&) & noexcept = default;
        IEmailManagerStatics3& operator=(IEmailManagerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMeetingInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMeetingInfo>
    {
        IEmailMeetingInfo(std::nullptr_t = nullptr) noexcept {}
        IEmailMeetingInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMeetingInfo(IEmailMeetingInfo const&) noexcept = default;
        IEmailMeetingInfo(IEmailMeetingInfo&&) noexcept = default;
        IEmailMeetingInfo& operator=(IEmailMeetingInfo const&) & noexcept = default;
        IEmailMeetingInfo& operator=(IEmailMeetingInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMeetingInfo2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMeetingInfo2>
    {
        IEmailMeetingInfo2(std::nullptr_t = nullptr) noexcept {}
        IEmailMeetingInfo2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMeetingInfo2(IEmailMeetingInfo2 const&) noexcept = default;
        IEmailMeetingInfo2(IEmailMeetingInfo2&&) noexcept = default;
        IEmailMeetingInfo2& operator=(IEmailMeetingInfo2 const&) & noexcept = default;
        IEmailMeetingInfo2& operator=(IEmailMeetingInfo2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMessage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMessage>
    {
        IEmailMessage(std::nullptr_t = nullptr) noexcept {}
        IEmailMessage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMessage(IEmailMessage const&) noexcept = default;
        IEmailMessage(IEmailMessage&&) noexcept = default;
        IEmailMessage& operator=(IEmailMessage const&) & noexcept = default;
        IEmailMessage& operator=(IEmailMessage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMessage2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMessage2>
    {
        IEmailMessage2(std::nullptr_t = nullptr) noexcept {}
        IEmailMessage2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMessage2(IEmailMessage2 const&) noexcept = default;
        IEmailMessage2(IEmailMessage2&&) noexcept = default;
        IEmailMessage2& operator=(IEmailMessage2 const&) & noexcept = default;
        IEmailMessage2& operator=(IEmailMessage2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMessage3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMessage3>
    {
        IEmailMessage3(std::nullptr_t = nullptr) noexcept {}
        IEmailMessage3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMessage3(IEmailMessage3 const&) noexcept = default;
        IEmailMessage3(IEmailMessage3&&) noexcept = default;
        IEmailMessage3& operator=(IEmailMessage3 const&) & noexcept = default;
        IEmailMessage3& operator=(IEmailMessage3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMessage4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMessage4>
    {
        IEmailMessage4(std::nullptr_t = nullptr) noexcept {}
        IEmailMessage4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMessage4(IEmailMessage4 const&) noexcept = default;
        IEmailMessage4(IEmailMessage4&&) noexcept = default;
        IEmailMessage4& operator=(IEmailMessage4 const&) & noexcept = default;
        IEmailMessage4& operator=(IEmailMessage4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMessageBatch :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMessageBatch>
    {
        IEmailMessageBatch(std::nullptr_t = nullptr) noexcept {}
        IEmailMessageBatch(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMessageBatch(IEmailMessageBatch const&) noexcept = default;
        IEmailMessageBatch(IEmailMessageBatch&&) noexcept = default;
        IEmailMessageBatch& operator=(IEmailMessageBatch const&) & noexcept = default;
        IEmailMessageBatch& operator=(IEmailMessageBatch&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailMessageReader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailMessageReader>
    {
        IEmailMessageReader(std::nullptr_t = nullptr) noexcept {}
        IEmailMessageReader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailMessageReader(IEmailMessageReader const&) noexcept = default;
        IEmailMessageReader(IEmailMessageReader&&) noexcept = default;
        IEmailMessageReader& operator=(IEmailMessageReader const&) & noexcept = default;
        IEmailMessageReader& operator=(IEmailMessageReader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailQueryOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailQueryOptions>
    {
        IEmailQueryOptions(std::nullptr_t = nullptr) noexcept {}
        IEmailQueryOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailQueryOptions(IEmailQueryOptions const&) noexcept = default;
        IEmailQueryOptions(IEmailQueryOptions&&) noexcept = default;
        IEmailQueryOptions& operator=(IEmailQueryOptions const&) & noexcept = default;
        IEmailQueryOptions& operator=(IEmailQueryOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailQueryOptionsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailQueryOptionsFactory>
    {
        IEmailQueryOptionsFactory(std::nullptr_t = nullptr) noexcept {}
        IEmailQueryOptionsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailQueryOptionsFactory(IEmailQueryOptionsFactory const&) noexcept = default;
        IEmailQueryOptionsFactory(IEmailQueryOptionsFactory&&) noexcept = default;
        IEmailQueryOptionsFactory& operator=(IEmailQueryOptionsFactory const&) & noexcept = default;
        IEmailQueryOptionsFactory& operator=(IEmailQueryOptionsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailQueryTextSearch :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailQueryTextSearch>
    {
        IEmailQueryTextSearch(std::nullptr_t = nullptr) noexcept {}
        IEmailQueryTextSearch(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailQueryTextSearch(IEmailQueryTextSearch const&) noexcept = default;
        IEmailQueryTextSearch(IEmailQueryTextSearch&&) noexcept = default;
        IEmailQueryTextSearch& operator=(IEmailQueryTextSearch const&) & noexcept = default;
        IEmailQueryTextSearch& operator=(IEmailQueryTextSearch&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailRecipient :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailRecipient>
    {
        IEmailRecipient(std::nullptr_t = nullptr) noexcept {}
        IEmailRecipient(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailRecipient(IEmailRecipient const&) noexcept = default;
        IEmailRecipient(IEmailRecipient&&) noexcept = default;
        IEmailRecipient& operator=(IEmailRecipient const&) & noexcept = default;
        IEmailRecipient& operator=(IEmailRecipient&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailRecipientFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailRecipientFactory>
    {
        IEmailRecipientFactory(std::nullptr_t = nullptr) noexcept {}
        IEmailRecipientFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailRecipientFactory(IEmailRecipientFactory const&) noexcept = default;
        IEmailRecipientFactory(IEmailRecipientFactory&&) noexcept = default;
        IEmailRecipientFactory& operator=(IEmailRecipientFactory const&) & noexcept = default;
        IEmailRecipientFactory& operator=(IEmailRecipientFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailRecipientResolutionResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailRecipientResolutionResult>
    {
        IEmailRecipientResolutionResult(std::nullptr_t = nullptr) noexcept {}
        IEmailRecipientResolutionResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailRecipientResolutionResult(IEmailRecipientResolutionResult const&) noexcept = default;
        IEmailRecipientResolutionResult(IEmailRecipientResolutionResult&&) noexcept = default;
        IEmailRecipientResolutionResult& operator=(IEmailRecipientResolutionResult const&) & noexcept = default;
        IEmailRecipientResolutionResult& operator=(IEmailRecipientResolutionResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailRecipientResolutionResult2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailRecipientResolutionResult2>
    {
        IEmailRecipientResolutionResult2(std::nullptr_t = nullptr) noexcept {}
        IEmailRecipientResolutionResult2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailRecipientResolutionResult2(IEmailRecipientResolutionResult2 const&) noexcept = default;
        IEmailRecipientResolutionResult2(IEmailRecipientResolutionResult2&&) noexcept = default;
        IEmailRecipientResolutionResult2& operator=(IEmailRecipientResolutionResult2 const&) & noexcept = default;
        IEmailRecipientResolutionResult2& operator=(IEmailRecipientResolutionResult2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailStore :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailStore>
    {
        IEmailStore(std::nullptr_t = nullptr) noexcept {}
        IEmailStore(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailStore(IEmailStore const&) noexcept = default;
        IEmailStore(IEmailStore&&) noexcept = default;
        IEmailStore& operator=(IEmailStore const&) & noexcept = default;
        IEmailStore& operator=(IEmailStore&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEmailStoreNotificationTriggerDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmailStoreNotificationTriggerDetails>
    {
        IEmailStoreNotificationTriggerDetails(std::nullptr_t = nullptr) noexcept {}
        IEmailStoreNotificationTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEmailStoreNotificationTriggerDetails(IEmailStoreNotificationTriggerDetails const&) noexcept = default;
        IEmailStoreNotificationTriggerDetails(IEmailStoreNotificationTriggerDetails&&) noexcept = default;
        IEmailStoreNotificationTriggerDetails& operator=(IEmailStoreNotificationTriggerDetails const&) & noexcept = default;
        IEmailStoreNotificationTriggerDetails& operator=(IEmailStoreNotificationTriggerDetails&&) & noexcept = default;
    };
}
#endif
