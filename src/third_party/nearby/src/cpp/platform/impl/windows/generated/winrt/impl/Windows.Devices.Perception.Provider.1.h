// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Devices_Perception_Provider_1_H
#define WINRT_Windows_Devices_Perception_Provider_1_H
#include "winrt/impl/Windows.Foundation.0.h"
#include "winrt/impl/Windows.Devices.Perception.Provider.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Perception::Provider
{
    struct __declspec(empty_bases) IKnownPerceptionFrameKindStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKnownPerceptionFrameKindStatics>
    {
        IKnownPerceptionFrameKindStatics(std::nullptr_t = nullptr) noexcept {}
        IKnownPerceptionFrameKindStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKnownPerceptionFrameKindStatics(IKnownPerceptionFrameKindStatics const&) noexcept = default;
        IKnownPerceptionFrameKindStatics(IKnownPerceptionFrameKindStatics&&) noexcept = default;
        IKnownPerceptionFrameKindStatics& operator=(IKnownPerceptionFrameKindStatics const&) & noexcept = default;
        IKnownPerceptionFrameKindStatics& operator=(IKnownPerceptionFrameKindStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionControlGroup :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionControlGroup>
    {
        IPerceptionControlGroup(std::nullptr_t = nullptr) noexcept {}
        IPerceptionControlGroup(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionControlGroup(IPerceptionControlGroup const&) noexcept = default;
        IPerceptionControlGroup(IPerceptionControlGroup&&) noexcept = default;
        IPerceptionControlGroup& operator=(IPerceptionControlGroup const&) & noexcept = default;
        IPerceptionControlGroup& operator=(IPerceptionControlGroup&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionControlGroupFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionControlGroupFactory>
    {
        IPerceptionControlGroupFactory(std::nullptr_t = nullptr) noexcept {}
        IPerceptionControlGroupFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionControlGroupFactory(IPerceptionControlGroupFactory const&) noexcept = default;
        IPerceptionControlGroupFactory(IPerceptionControlGroupFactory&&) noexcept = default;
        IPerceptionControlGroupFactory& operator=(IPerceptionControlGroupFactory const&) & noexcept = default;
        IPerceptionControlGroupFactory& operator=(IPerceptionControlGroupFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionCorrelation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionCorrelation>
    {
        IPerceptionCorrelation(std::nullptr_t = nullptr) noexcept {}
        IPerceptionCorrelation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionCorrelation(IPerceptionCorrelation const&) noexcept = default;
        IPerceptionCorrelation(IPerceptionCorrelation&&) noexcept = default;
        IPerceptionCorrelation& operator=(IPerceptionCorrelation const&) & noexcept = default;
        IPerceptionCorrelation& operator=(IPerceptionCorrelation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionCorrelationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionCorrelationFactory>
    {
        IPerceptionCorrelationFactory(std::nullptr_t = nullptr) noexcept {}
        IPerceptionCorrelationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionCorrelationFactory(IPerceptionCorrelationFactory const&) noexcept = default;
        IPerceptionCorrelationFactory(IPerceptionCorrelationFactory&&) noexcept = default;
        IPerceptionCorrelationFactory& operator=(IPerceptionCorrelationFactory const&) & noexcept = default;
        IPerceptionCorrelationFactory& operator=(IPerceptionCorrelationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionCorrelationGroup :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionCorrelationGroup>
    {
        IPerceptionCorrelationGroup(std::nullptr_t = nullptr) noexcept {}
        IPerceptionCorrelationGroup(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionCorrelationGroup(IPerceptionCorrelationGroup const&) noexcept = default;
        IPerceptionCorrelationGroup(IPerceptionCorrelationGroup&&) noexcept = default;
        IPerceptionCorrelationGroup& operator=(IPerceptionCorrelationGroup const&) & noexcept = default;
        IPerceptionCorrelationGroup& operator=(IPerceptionCorrelationGroup&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionCorrelationGroupFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionCorrelationGroupFactory>
    {
        IPerceptionCorrelationGroupFactory(std::nullptr_t = nullptr) noexcept {}
        IPerceptionCorrelationGroupFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionCorrelationGroupFactory(IPerceptionCorrelationGroupFactory const&) noexcept = default;
        IPerceptionCorrelationGroupFactory(IPerceptionCorrelationGroupFactory&&) noexcept = default;
        IPerceptionCorrelationGroupFactory& operator=(IPerceptionCorrelationGroupFactory const&) & noexcept = default;
        IPerceptionCorrelationGroupFactory& operator=(IPerceptionCorrelationGroupFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionFaceAuthenticationGroup :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionFaceAuthenticationGroup>
    {
        IPerceptionFaceAuthenticationGroup(std::nullptr_t = nullptr) noexcept {}
        IPerceptionFaceAuthenticationGroup(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionFaceAuthenticationGroup(IPerceptionFaceAuthenticationGroup const&) noexcept = default;
        IPerceptionFaceAuthenticationGroup(IPerceptionFaceAuthenticationGroup&&) noexcept = default;
        IPerceptionFaceAuthenticationGroup& operator=(IPerceptionFaceAuthenticationGroup const&) & noexcept = default;
        IPerceptionFaceAuthenticationGroup& operator=(IPerceptionFaceAuthenticationGroup&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionFaceAuthenticationGroupFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionFaceAuthenticationGroupFactory>
    {
        IPerceptionFaceAuthenticationGroupFactory(std::nullptr_t = nullptr) noexcept {}
        IPerceptionFaceAuthenticationGroupFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionFaceAuthenticationGroupFactory(IPerceptionFaceAuthenticationGroupFactory const&) noexcept = default;
        IPerceptionFaceAuthenticationGroupFactory(IPerceptionFaceAuthenticationGroupFactory&&) noexcept = default;
        IPerceptionFaceAuthenticationGroupFactory& operator=(IPerceptionFaceAuthenticationGroupFactory const&) & noexcept = default;
        IPerceptionFaceAuthenticationGroupFactory& operator=(IPerceptionFaceAuthenticationGroupFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionFrame>
    {
        IPerceptionFrame(std::nullptr_t = nullptr) noexcept {}
        IPerceptionFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionFrame(IPerceptionFrame const&) noexcept = default;
        IPerceptionFrame(IPerceptionFrame&&) noexcept = default;
        IPerceptionFrame& operator=(IPerceptionFrame const&) & noexcept = default;
        IPerceptionFrame& operator=(IPerceptionFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionFrameProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionFrameProvider>,
        impl::require<winrt::Windows::Devices::Perception::Provider::IPerceptionFrameProvider, winrt::Windows::Foundation::IClosable>
    {
        IPerceptionFrameProvider(std::nullptr_t = nullptr) noexcept {}
        IPerceptionFrameProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionFrameProvider(IPerceptionFrameProvider const&) noexcept = default;
        IPerceptionFrameProvider(IPerceptionFrameProvider&&) noexcept = default;
        IPerceptionFrameProvider& operator=(IPerceptionFrameProvider const&) & noexcept = default;
        IPerceptionFrameProvider& operator=(IPerceptionFrameProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionFrameProviderInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionFrameProviderInfo>
    {
        IPerceptionFrameProviderInfo(std::nullptr_t = nullptr) noexcept {}
        IPerceptionFrameProviderInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionFrameProviderInfo(IPerceptionFrameProviderInfo const&) noexcept = default;
        IPerceptionFrameProviderInfo(IPerceptionFrameProviderInfo&&) noexcept = default;
        IPerceptionFrameProviderInfo& operator=(IPerceptionFrameProviderInfo const&) & noexcept = default;
        IPerceptionFrameProviderInfo& operator=(IPerceptionFrameProviderInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionFrameProviderManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionFrameProviderManager>,
        impl::require<winrt::Windows::Devices::Perception::Provider::IPerceptionFrameProviderManager, winrt::Windows::Foundation::IClosable>
    {
        IPerceptionFrameProviderManager(std::nullptr_t = nullptr) noexcept {}
        IPerceptionFrameProviderManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionFrameProviderManager(IPerceptionFrameProviderManager const&) noexcept = default;
        IPerceptionFrameProviderManager(IPerceptionFrameProviderManager&&) noexcept = default;
        IPerceptionFrameProviderManager& operator=(IPerceptionFrameProviderManager const&) & noexcept = default;
        IPerceptionFrameProviderManager& operator=(IPerceptionFrameProviderManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionFrameProviderManagerServiceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionFrameProviderManagerServiceStatics>
    {
        IPerceptionFrameProviderManagerServiceStatics(std::nullptr_t = nullptr) noexcept {}
        IPerceptionFrameProviderManagerServiceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionFrameProviderManagerServiceStatics(IPerceptionFrameProviderManagerServiceStatics const&) noexcept = default;
        IPerceptionFrameProviderManagerServiceStatics(IPerceptionFrameProviderManagerServiceStatics&&) noexcept = default;
        IPerceptionFrameProviderManagerServiceStatics& operator=(IPerceptionFrameProviderManagerServiceStatics const&) & noexcept = default;
        IPerceptionFrameProviderManagerServiceStatics& operator=(IPerceptionFrameProviderManagerServiceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionPropertyChangeRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionPropertyChangeRequest>
    {
        IPerceptionPropertyChangeRequest(std::nullptr_t = nullptr) noexcept {}
        IPerceptionPropertyChangeRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionPropertyChangeRequest(IPerceptionPropertyChangeRequest const&) noexcept = default;
        IPerceptionPropertyChangeRequest(IPerceptionPropertyChangeRequest&&) noexcept = default;
        IPerceptionPropertyChangeRequest& operator=(IPerceptionPropertyChangeRequest const&) & noexcept = default;
        IPerceptionPropertyChangeRequest& operator=(IPerceptionPropertyChangeRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionVideoFrameAllocator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionVideoFrameAllocator>,
        impl::require<winrt::Windows::Devices::Perception::Provider::IPerceptionVideoFrameAllocator, winrt::Windows::Foundation::IClosable>
    {
        IPerceptionVideoFrameAllocator(std::nullptr_t = nullptr) noexcept {}
        IPerceptionVideoFrameAllocator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionVideoFrameAllocator(IPerceptionVideoFrameAllocator const&) noexcept = default;
        IPerceptionVideoFrameAllocator(IPerceptionVideoFrameAllocator&&) noexcept = default;
        IPerceptionVideoFrameAllocator& operator=(IPerceptionVideoFrameAllocator const&) & noexcept = default;
        IPerceptionVideoFrameAllocator& operator=(IPerceptionVideoFrameAllocator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPerceptionVideoFrameAllocatorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPerceptionVideoFrameAllocatorFactory>
    {
        IPerceptionVideoFrameAllocatorFactory(std::nullptr_t = nullptr) noexcept {}
        IPerceptionVideoFrameAllocatorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPerceptionVideoFrameAllocatorFactory(IPerceptionVideoFrameAllocatorFactory const&) noexcept = default;
        IPerceptionVideoFrameAllocatorFactory(IPerceptionVideoFrameAllocatorFactory&&) noexcept = default;
        IPerceptionVideoFrameAllocatorFactory& operator=(IPerceptionVideoFrameAllocatorFactory const&) & noexcept = default;
        IPerceptionVideoFrameAllocatorFactory& operator=(IPerceptionVideoFrameAllocatorFactory&&) & noexcept = default;
    };
}
#endif
