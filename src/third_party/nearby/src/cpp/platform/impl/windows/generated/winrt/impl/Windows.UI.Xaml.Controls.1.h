// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Xaml_Controls_1_H
#define WINRT_Windows_UI_Xaml_Controls_1_H
#include "winrt/impl/Windows.UI.Xaml.Controls.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Controls
{
    struct __declspec(empty_bases) IAnchorRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnchorRequestedEventArgs>
    {
        IAnchorRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAnchorRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAnchorRequestedEventArgs(IAnchorRequestedEventArgs const&) noexcept = default;
        IAnchorRequestedEventArgs(IAnchorRequestedEventArgs&&) noexcept = default;
        IAnchorRequestedEventArgs& operator=(IAnchorRequestedEventArgs const&) & noexcept = default;
        IAnchorRequestedEventArgs& operator=(IAnchorRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBar>
    {
        IAppBar(std::nullptr_t = nullptr) noexcept {}
        IAppBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBar(IAppBar const&) noexcept = default;
        IAppBar(IAppBar&&) noexcept = default;
        IAppBar& operator=(IAppBar const&) & noexcept = default;
        IAppBar& operator=(IAppBar&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBar2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBar2>
    {
        IAppBar2(std::nullptr_t = nullptr) noexcept {}
        IAppBar2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBar2(IAppBar2 const&) noexcept = default;
        IAppBar2(IAppBar2&&) noexcept = default;
        IAppBar2& operator=(IAppBar2 const&) & noexcept = default;
        IAppBar2& operator=(IAppBar2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBar3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBar3>
    {
        IAppBar3(std::nullptr_t = nullptr) noexcept {}
        IAppBar3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBar3(IAppBar3 const&) noexcept = default;
        IAppBar3(IAppBar3&&) noexcept = default;
        IAppBar3& operator=(IAppBar3 const&) & noexcept = default;
        IAppBar3& operator=(IAppBar3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBar4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBar4>
    {
        IAppBar4(std::nullptr_t = nullptr) noexcept {}
        IAppBar4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBar4(IAppBar4 const&) noexcept = default;
        IAppBar4(IAppBar4&&) noexcept = default;
        IAppBar4& operator=(IAppBar4 const&) & noexcept = default;
        IAppBar4& operator=(IAppBar4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButton>
    {
        IAppBarButton(std::nullptr_t = nullptr) noexcept {}
        IAppBarButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButton(IAppBarButton const&) noexcept = default;
        IAppBarButton(IAppBarButton&&) noexcept = default;
        IAppBarButton& operator=(IAppBarButton const&) & noexcept = default;
        IAppBarButton& operator=(IAppBarButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarButton3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButton3>
    {
        IAppBarButton3(std::nullptr_t = nullptr) noexcept {}
        IAppBarButton3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButton3(IAppBarButton3 const&) noexcept = default;
        IAppBarButton3(IAppBarButton3&&) noexcept = default;
        IAppBarButton3& operator=(IAppBarButton3 const&) & noexcept = default;
        IAppBarButton3& operator=(IAppBarButton3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarButton4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButton4>
    {
        IAppBarButton4(std::nullptr_t = nullptr) noexcept {}
        IAppBarButton4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButton4(IAppBarButton4 const&) noexcept = default;
        IAppBarButton4(IAppBarButton4&&) noexcept = default;
        IAppBarButton4& operator=(IAppBarButton4 const&) & noexcept = default;
        IAppBarButton4& operator=(IAppBarButton4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarButton5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButton5>
    {
        IAppBarButton5(std::nullptr_t = nullptr) noexcept {}
        IAppBarButton5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButton5(IAppBarButton5 const&) noexcept = default;
        IAppBarButton5(IAppBarButton5&&) noexcept = default;
        IAppBarButton5& operator=(IAppBarButton5 const&) & noexcept = default;
        IAppBarButton5& operator=(IAppBarButton5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonFactory>
    {
        IAppBarButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButtonFactory(IAppBarButtonFactory const&) noexcept = default;
        IAppBarButtonFactory(IAppBarButtonFactory&&) noexcept = default;
        IAppBarButtonFactory& operator=(IAppBarButtonFactory const&) & noexcept = default;
        IAppBarButtonFactory& operator=(IAppBarButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonStatics>
    {
        IAppBarButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButtonStatics(IAppBarButtonStatics const&) noexcept = default;
        IAppBarButtonStatics(IAppBarButtonStatics&&) noexcept = default;
        IAppBarButtonStatics& operator=(IAppBarButtonStatics const&) & noexcept = default;
        IAppBarButtonStatics& operator=(IAppBarButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarButtonStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonStatics3>
    {
        IAppBarButtonStatics3(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButtonStatics3(IAppBarButtonStatics3 const&) noexcept = default;
        IAppBarButtonStatics3(IAppBarButtonStatics3&&) noexcept = default;
        IAppBarButtonStatics3& operator=(IAppBarButtonStatics3 const&) & noexcept = default;
        IAppBarButtonStatics3& operator=(IAppBarButtonStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarButtonStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonStatics4>
    {
        IAppBarButtonStatics4(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarButtonStatics4(IAppBarButtonStatics4 const&) noexcept = default;
        IAppBarButtonStatics4(IAppBarButtonStatics4&&) noexcept = default;
        IAppBarButtonStatics4& operator=(IAppBarButtonStatics4 const&) & noexcept = default;
        IAppBarButtonStatics4& operator=(IAppBarButtonStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarElementContainer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarElementContainer>
    {
        IAppBarElementContainer(std::nullptr_t = nullptr) noexcept {}
        IAppBarElementContainer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarElementContainer(IAppBarElementContainer const&) noexcept = default;
        IAppBarElementContainer(IAppBarElementContainer&&) noexcept = default;
        IAppBarElementContainer& operator=(IAppBarElementContainer const&) & noexcept = default;
        IAppBarElementContainer& operator=(IAppBarElementContainer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarElementContainerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarElementContainerFactory>
    {
        IAppBarElementContainerFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarElementContainerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarElementContainerFactory(IAppBarElementContainerFactory const&) noexcept = default;
        IAppBarElementContainerFactory(IAppBarElementContainerFactory&&) noexcept = default;
        IAppBarElementContainerFactory& operator=(IAppBarElementContainerFactory const&) & noexcept = default;
        IAppBarElementContainerFactory& operator=(IAppBarElementContainerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarElementContainerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarElementContainerStatics>
    {
        IAppBarElementContainerStatics(std::nullptr_t = nullptr) noexcept {}
        IAppBarElementContainerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarElementContainerStatics(IAppBarElementContainerStatics const&) noexcept = default;
        IAppBarElementContainerStatics(IAppBarElementContainerStatics&&) noexcept = default;
        IAppBarElementContainerStatics& operator=(IAppBarElementContainerStatics const&) & noexcept = default;
        IAppBarElementContainerStatics& operator=(IAppBarElementContainerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarFactory>
    {
        IAppBarFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarFactory(IAppBarFactory const&) noexcept = default;
        IAppBarFactory(IAppBarFactory&&) noexcept = default;
        IAppBarFactory& operator=(IAppBarFactory const&) & noexcept = default;
        IAppBarFactory& operator=(IAppBarFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarOverrides>
    {
        IAppBarOverrides(std::nullptr_t = nullptr) noexcept {}
        IAppBarOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarOverrides(IAppBarOverrides const&) noexcept = default;
        IAppBarOverrides(IAppBarOverrides&&) noexcept = default;
        IAppBarOverrides& operator=(IAppBarOverrides const&) & noexcept = default;
        IAppBarOverrides& operator=(IAppBarOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarOverrides3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarOverrides3>
    {
        IAppBarOverrides3(std::nullptr_t = nullptr) noexcept {}
        IAppBarOverrides3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarOverrides3(IAppBarOverrides3 const&) noexcept = default;
        IAppBarOverrides3(IAppBarOverrides3&&) noexcept = default;
        IAppBarOverrides3& operator=(IAppBarOverrides3 const&) & noexcept = default;
        IAppBarOverrides3& operator=(IAppBarOverrides3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarSeparator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarSeparator>
    {
        IAppBarSeparator(std::nullptr_t = nullptr) noexcept {}
        IAppBarSeparator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarSeparator(IAppBarSeparator const&) noexcept = default;
        IAppBarSeparator(IAppBarSeparator&&) noexcept = default;
        IAppBarSeparator& operator=(IAppBarSeparator const&) & noexcept = default;
        IAppBarSeparator& operator=(IAppBarSeparator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarSeparatorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarSeparatorFactory>
    {
        IAppBarSeparatorFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarSeparatorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarSeparatorFactory(IAppBarSeparatorFactory const&) noexcept = default;
        IAppBarSeparatorFactory(IAppBarSeparatorFactory&&) noexcept = default;
        IAppBarSeparatorFactory& operator=(IAppBarSeparatorFactory const&) & noexcept = default;
        IAppBarSeparatorFactory& operator=(IAppBarSeparatorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarSeparatorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarSeparatorStatics>
    {
        IAppBarSeparatorStatics(std::nullptr_t = nullptr) noexcept {}
        IAppBarSeparatorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarSeparatorStatics(IAppBarSeparatorStatics const&) noexcept = default;
        IAppBarSeparatorStatics(IAppBarSeparatorStatics&&) noexcept = default;
        IAppBarSeparatorStatics& operator=(IAppBarSeparatorStatics const&) & noexcept = default;
        IAppBarSeparatorStatics& operator=(IAppBarSeparatorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarSeparatorStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarSeparatorStatics3>
    {
        IAppBarSeparatorStatics3(std::nullptr_t = nullptr) noexcept {}
        IAppBarSeparatorStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarSeparatorStatics3(IAppBarSeparatorStatics3 const&) noexcept = default;
        IAppBarSeparatorStatics3(IAppBarSeparatorStatics3&&) noexcept = default;
        IAppBarSeparatorStatics3& operator=(IAppBarSeparatorStatics3 const&) & noexcept = default;
        IAppBarSeparatorStatics3& operator=(IAppBarSeparatorStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarStatics>
    {
        IAppBarStatics(std::nullptr_t = nullptr) noexcept {}
        IAppBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarStatics(IAppBarStatics const&) noexcept = default;
        IAppBarStatics(IAppBarStatics&&) noexcept = default;
        IAppBarStatics& operator=(IAppBarStatics const&) & noexcept = default;
        IAppBarStatics& operator=(IAppBarStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarStatics2>
    {
        IAppBarStatics2(std::nullptr_t = nullptr) noexcept {}
        IAppBarStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarStatics2(IAppBarStatics2 const&) noexcept = default;
        IAppBarStatics2(IAppBarStatics2&&) noexcept = default;
        IAppBarStatics2& operator=(IAppBarStatics2 const&) & noexcept = default;
        IAppBarStatics2& operator=(IAppBarStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarStatics4>
    {
        IAppBarStatics4(std::nullptr_t = nullptr) noexcept {}
        IAppBarStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarStatics4(IAppBarStatics4 const&) noexcept = default;
        IAppBarStatics4(IAppBarStatics4&&) noexcept = default;
        IAppBarStatics4& operator=(IAppBarStatics4 const&) & noexcept = default;
        IAppBarStatics4& operator=(IAppBarStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButton>
    {
        IAppBarToggleButton(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButton(IAppBarToggleButton const&) noexcept = default;
        IAppBarToggleButton(IAppBarToggleButton&&) noexcept = default;
        IAppBarToggleButton& operator=(IAppBarToggleButton const&) & noexcept = default;
        IAppBarToggleButton& operator=(IAppBarToggleButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButton3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButton3>
    {
        IAppBarToggleButton3(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButton3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButton3(IAppBarToggleButton3 const&) noexcept = default;
        IAppBarToggleButton3(IAppBarToggleButton3&&) noexcept = default;
        IAppBarToggleButton3& operator=(IAppBarToggleButton3 const&) & noexcept = default;
        IAppBarToggleButton3& operator=(IAppBarToggleButton3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButton4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButton4>
    {
        IAppBarToggleButton4(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButton4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButton4(IAppBarToggleButton4 const&) noexcept = default;
        IAppBarToggleButton4(IAppBarToggleButton4&&) noexcept = default;
        IAppBarToggleButton4& operator=(IAppBarToggleButton4 const&) & noexcept = default;
        IAppBarToggleButton4& operator=(IAppBarToggleButton4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButton5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButton5>
    {
        IAppBarToggleButton5(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButton5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButton5(IAppBarToggleButton5 const&) noexcept = default;
        IAppBarToggleButton5(IAppBarToggleButton5&&) noexcept = default;
        IAppBarToggleButton5& operator=(IAppBarToggleButton5 const&) & noexcept = default;
        IAppBarToggleButton5& operator=(IAppBarToggleButton5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonFactory>
    {
        IAppBarToggleButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButtonFactory(IAppBarToggleButtonFactory const&) noexcept = default;
        IAppBarToggleButtonFactory(IAppBarToggleButtonFactory&&) noexcept = default;
        IAppBarToggleButtonFactory& operator=(IAppBarToggleButtonFactory const&) & noexcept = default;
        IAppBarToggleButtonFactory& operator=(IAppBarToggleButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonStatics>
    {
        IAppBarToggleButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButtonStatics(IAppBarToggleButtonStatics const&) noexcept = default;
        IAppBarToggleButtonStatics(IAppBarToggleButtonStatics&&) noexcept = default;
        IAppBarToggleButtonStatics& operator=(IAppBarToggleButtonStatics const&) & noexcept = default;
        IAppBarToggleButtonStatics& operator=(IAppBarToggleButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButtonStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonStatics3>
    {
        IAppBarToggleButtonStatics3(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButtonStatics3(IAppBarToggleButtonStatics3 const&) noexcept = default;
        IAppBarToggleButtonStatics3(IAppBarToggleButtonStatics3&&) noexcept = default;
        IAppBarToggleButtonStatics3& operator=(IAppBarToggleButtonStatics3 const&) & noexcept = default;
        IAppBarToggleButtonStatics3& operator=(IAppBarToggleButtonStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppBarToggleButtonStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonStatics4>
    {
        IAppBarToggleButtonStatics4(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppBarToggleButtonStatics4(IAppBarToggleButtonStatics4 const&) noexcept = default;
        IAppBarToggleButtonStatics4(IAppBarToggleButtonStatics4&&) noexcept = default;
        IAppBarToggleButtonStatics4& operator=(IAppBarToggleButtonStatics4 const&) & noexcept = default;
        IAppBarToggleButtonStatics4& operator=(IAppBarToggleButtonStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBox>
    {
        IAutoSuggestBox(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBox(IAutoSuggestBox const&) noexcept = default;
        IAutoSuggestBox(IAutoSuggestBox&&) noexcept = default;
        IAutoSuggestBox& operator=(IAutoSuggestBox const&) & noexcept = default;
        IAutoSuggestBox& operator=(IAutoSuggestBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBox2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBox2>
    {
        IAutoSuggestBox2(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBox2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBox2(IAutoSuggestBox2 const&) noexcept = default;
        IAutoSuggestBox2(IAutoSuggestBox2&&) noexcept = default;
        IAutoSuggestBox2& operator=(IAutoSuggestBox2 const&) & noexcept = default;
        IAutoSuggestBox2& operator=(IAutoSuggestBox2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBox3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBox3>
    {
        IAutoSuggestBox3(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBox3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBox3(IAutoSuggestBox3 const&) noexcept = default;
        IAutoSuggestBox3(IAutoSuggestBox3&&) noexcept = default;
        IAutoSuggestBox3& operator=(IAutoSuggestBox3 const&) & noexcept = default;
        IAutoSuggestBox3& operator=(IAutoSuggestBox3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBox4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBox4>
    {
        IAutoSuggestBox4(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBox4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBox4(IAutoSuggestBox4 const&) noexcept = default;
        IAutoSuggestBox4(IAutoSuggestBox4&&) noexcept = default;
        IAutoSuggestBox4& operator=(IAutoSuggestBox4 const&) & noexcept = default;
        IAutoSuggestBox4& operator=(IAutoSuggestBox4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBoxQuerySubmittedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxQuerySubmittedEventArgs>
    {
        IAutoSuggestBoxQuerySubmittedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxQuerySubmittedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBoxQuerySubmittedEventArgs(IAutoSuggestBoxQuerySubmittedEventArgs const&) noexcept = default;
        IAutoSuggestBoxQuerySubmittedEventArgs(IAutoSuggestBoxQuerySubmittedEventArgs&&) noexcept = default;
        IAutoSuggestBoxQuerySubmittedEventArgs& operator=(IAutoSuggestBoxQuerySubmittedEventArgs const&) & noexcept = default;
        IAutoSuggestBoxQuerySubmittedEventArgs& operator=(IAutoSuggestBoxQuerySubmittedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxStatics>
    {
        IAutoSuggestBoxStatics(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBoxStatics(IAutoSuggestBoxStatics const&) noexcept = default;
        IAutoSuggestBoxStatics(IAutoSuggestBoxStatics&&) noexcept = default;
        IAutoSuggestBoxStatics& operator=(IAutoSuggestBoxStatics const&) & noexcept = default;
        IAutoSuggestBoxStatics& operator=(IAutoSuggestBoxStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBoxStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxStatics2>
    {
        IAutoSuggestBoxStatics2(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBoxStatics2(IAutoSuggestBoxStatics2 const&) noexcept = default;
        IAutoSuggestBoxStatics2(IAutoSuggestBoxStatics2&&) noexcept = default;
        IAutoSuggestBoxStatics2& operator=(IAutoSuggestBoxStatics2 const&) & noexcept = default;
        IAutoSuggestBoxStatics2& operator=(IAutoSuggestBoxStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBoxStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxStatics3>
    {
        IAutoSuggestBoxStatics3(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBoxStatics3(IAutoSuggestBoxStatics3 const&) noexcept = default;
        IAutoSuggestBoxStatics3(IAutoSuggestBoxStatics3&&) noexcept = default;
        IAutoSuggestBoxStatics3& operator=(IAutoSuggestBoxStatics3 const&) & noexcept = default;
        IAutoSuggestBoxStatics3& operator=(IAutoSuggestBoxStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBoxStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxStatics4>
    {
        IAutoSuggestBoxStatics4(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBoxStatics4(IAutoSuggestBoxStatics4 const&) noexcept = default;
        IAutoSuggestBoxStatics4(IAutoSuggestBoxStatics4&&) noexcept = default;
        IAutoSuggestBoxStatics4& operator=(IAutoSuggestBoxStatics4 const&) & noexcept = default;
        IAutoSuggestBoxStatics4& operator=(IAutoSuggestBoxStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBoxSuggestionChosenEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxSuggestionChosenEventArgs>
    {
        IAutoSuggestBoxSuggestionChosenEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxSuggestionChosenEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBoxSuggestionChosenEventArgs(IAutoSuggestBoxSuggestionChosenEventArgs const&) noexcept = default;
        IAutoSuggestBoxSuggestionChosenEventArgs(IAutoSuggestBoxSuggestionChosenEventArgs&&) noexcept = default;
        IAutoSuggestBoxSuggestionChosenEventArgs& operator=(IAutoSuggestBoxSuggestionChosenEventArgs const&) & noexcept = default;
        IAutoSuggestBoxSuggestionChosenEventArgs& operator=(IAutoSuggestBoxSuggestionChosenEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBoxTextChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxTextChangedEventArgs>
    {
        IAutoSuggestBoxTextChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxTextChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBoxTextChangedEventArgs(IAutoSuggestBoxTextChangedEventArgs const&) noexcept = default;
        IAutoSuggestBoxTextChangedEventArgs(IAutoSuggestBoxTextChangedEventArgs&&) noexcept = default;
        IAutoSuggestBoxTextChangedEventArgs& operator=(IAutoSuggestBoxTextChangedEventArgs const&) & noexcept = default;
        IAutoSuggestBoxTextChangedEventArgs& operator=(IAutoSuggestBoxTextChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAutoSuggestBoxTextChangedEventArgsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxTextChangedEventArgsStatics>
    {
        IAutoSuggestBoxTextChangedEventArgsStatics(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxTextChangedEventArgsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAutoSuggestBoxTextChangedEventArgsStatics(IAutoSuggestBoxTextChangedEventArgsStatics const&) noexcept = default;
        IAutoSuggestBoxTextChangedEventArgsStatics(IAutoSuggestBoxTextChangedEventArgsStatics&&) noexcept = default;
        IAutoSuggestBoxTextChangedEventArgsStatics& operator=(IAutoSuggestBoxTextChangedEventArgsStatics const&) & noexcept = default;
        IAutoSuggestBoxTextChangedEventArgsStatics& operator=(IAutoSuggestBoxTextChangedEventArgsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBackClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBackClickEventArgs>
    {
        IBackClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IBackClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBackClickEventArgs(IBackClickEventArgs const&) noexcept = default;
        IBackClickEventArgs(IBackClickEventArgs&&) noexcept = default;
        IBackClickEventArgs& operator=(IBackClickEventArgs const&) & noexcept = default;
        IBackClickEventArgs& operator=(IBackClickEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIcon>
    {
        IBitmapIcon(std::nullptr_t = nullptr) noexcept {}
        IBitmapIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapIcon(IBitmapIcon const&) noexcept = default;
        IBitmapIcon(IBitmapIcon&&) noexcept = default;
        IBitmapIcon& operator=(IBitmapIcon const&) & noexcept = default;
        IBitmapIcon& operator=(IBitmapIcon&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapIcon2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIcon2>
    {
        IBitmapIcon2(std::nullptr_t = nullptr) noexcept {}
        IBitmapIcon2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapIcon2(IBitmapIcon2 const&) noexcept = default;
        IBitmapIcon2(IBitmapIcon2&&) noexcept = default;
        IBitmapIcon2& operator=(IBitmapIcon2 const&) & noexcept = default;
        IBitmapIcon2& operator=(IBitmapIcon2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapIconFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconFactory>
    {
        IBitmapIconFactory(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapIconFactory(IBitmapIconFactory const&) noexcept = default;
        IBitmapIconFactory(IBitmapIconFactory&&) noexcept = default;
        IBitmapIconFactory& operator=(IBitmapIconFactory const&) & noexcept = default;
        IBitmapIconFactory& operator=(IBitmapIconFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconSource>
    {
        IBitmapIconSource(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapIconSource(IBitmapIconSource const&) noexcept = default;
        IBitmapIconSource(IBitmapIconSource&&) noexcept = default;
        IBitmapIconSource& operator=(IBitmapIconSource const&) & noexcept = default;
        IBitmapIconSource& operator=(IBitmapIconSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconSourceFactory>
    {
        IBitmapIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapIconSourceFactory(IBitmapIconSourceFactory const&) noexcept = default;
        IBitmapIconSourceFactory(IBitmapIconSourceFactory&&) noexcept = default;
        IBitmapIconSourceFactory& operator=(IBitmapIconSourceFactory const&) & noexcept = default;
        IBitmapIconSourceFactory& operator=(IBitmapIconSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconSourceStatics>
    {
        IBitmapIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapIconSourceStatics(IBitmapIconSourceStatics const&) noexcept = default;
        IBitmapIconSourceStatics(IBitmapIconSourceStatics&&) noexcept = default;
        IBitmapIconSourceStatics& operator=(IBitmapIconSourceStatics const&) & noexcept = default;
        IBitmapIconSourceStatics& operator=(IBitmapIconSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconStatics>
    {
        IBitmapIconStatics(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapIconStatics(IBitmapIconStatics const&) noexcept = default;
        IBitmapIconStatics(IBitmapIconStatics&&) noexcept = default;
        IBitmapIconStatics& operator=(IBitmapIconStatics const&) & noexcept = default;
        IBitmapIconStatics& operator=(IBitmapIconStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBitmapIconStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconStatics2>
    {
        IBitmapIconStatics2(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBitmapIconStatics2(IBitmapIconStatics2 const&) noexcept = default;
        IBitmapIconStatics2(IBitmapIconStatics2&&) noexcept = default;
        IBitmapIconStatics2& operator=(IBitmapIconStatics2 const&) & noexcept = default;
        IBitmapIconStatics2& operator=(IBitmapIconStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBorder :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBorder>
    {
        IBorder(std::nullptr_t = nullptr) noexcept {}
        IBorder(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBorder(IBorder const&) noexcept = default;
        IBorder(IBorder&&) noexcept = default;
        IBorder& operator=(IBorder const&) & noexcept = default;
        IBorder& operator=(IBorder&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBorder2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBorder2>
    {
        IBorder2(std::nullptr_t = nullptr) noexcept {}
        IBorder2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBorder2(IBorder2 const&) noexcept = default;
        IBorder2(IBorder2&&) noexcept = default;
        IBorder2& operator=(IBorder2 const&) & noexcept = default;
        IBorder2& operator=(IBorder2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBorderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBorderStatics>
    {
        IBorderStatics(std::nullptr_t = nullptr) noexcept {}
        IBorderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBorderStatics(IBorderStatics const&) noexcept = default;
        IBorderStatics(IBorderStatics&&) noexcept = default;
        IBorderStatics& operator=(IBorderStatics const&) & noexcept = default;
        IBorderStatics& operator=(IBorderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBorderStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBorderStatics2>
    {
        IBorderStatics2(std::nullptr_t = nullptr) noexcept {}
        IBorderStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBorderStatics2(IBorderStatics2 const&) noexcept = default;
        IBorderStatics2(IBorderStatics2&&) noexcept = default;
        IBorderStatics2& operator=(IBorderStatics2 const&) & noexcept = default;
        IBorderStatics2& operator=(IBorderStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButton>
    {
        IButton(std::nullptr_t = nullptr) noexcept {}
        IButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButton(IButton const&) noexcept = default;
        IButton(IButton&&) noexcept = default;
        IButton& operator=(IButton const&) & noexcept = default;
        IButton& operator=(IButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonFactory>
    {
        IButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButtonFactory(IButtonFactory const&) noexcept = default;
        IButtonFactory(IButtonFactory&&) noexcept = default;
        IButtonFactory& operator=(IButtonFactory const&) & noexcept = default;
        IButtonFactory& operator=(IButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButtonStaticsWithFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonStaticsWithFlyout>
    {
        IButtonStaticsWithFlyout(std::nullptr_t = nullptr) noexcept {}
        IButtonStaticsWithFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButtonStaticsWithFlyout(IButtonStaticsWithFlyout const&) noexcept = default;
        IButtonStaticsWithFlyout(IButtonStaticsWithFlyout&&) noexcept = default;
        IButtonStaticsWithFlyout& operator=(IButtonStaticsWithFlyout const&) & noexcept = default;
        IButtonStaticsWithFlyout& operator=(IButtonStaticsWithFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IButtonWithFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonWithFlyout>
    {
        IButtonWithFlyout(std::nullptr_t = nullptr) noexcept {}
        IButtonWithFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IButtonWithFlyout(IButtonWithFlyout const&) noexcept = default;
        IButtonWithFlyout(IButtonWithFlyout&&) noexcept = default;
        IButtonWithFlyout& operator=(IButtonWithFlyout const&) & noexcept = default;
        IButtonWithFlyout& operator=(IButtonWithFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarDatePicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePicker>
    {
        ICalendarDatePicker(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarDatePicker(ICalendarDatePicker const&) noexcept = default;
        ICalendarDatePicker(ICalendarDatePicker&&) noexcept = default;
        ICalendarDatePicker& operator=(ICalendarDatePicker const&) & noexcept = default;
        ICalendarDatePicker& operator=(ICalendarDatePicker&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarDatePicker2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePicker2>
    {
        ICalendarDatePicker2(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePicker2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarDatePicker2(ICalendarDatePicker2 const&) noexcept = default;
        ICalendarDatePicker2(ICalendarDatePicker2&&) noexcept = default;
        ICalendarDatePicker2& operator=(ICalendarDatePicker2 const&) & noexcept = default;
        ICalendarDatePicker2& operator=(ICalendarDatePicker2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarDatePicker3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePicker3>
    {
        ICalendarDatePicker3(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePicker3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarDatePicker3(ICalendarDatePicker3 const&) noexcept = default;
        ICalendarDatePicker3(ICalendarDatePicker3&&) noexcept = default;
        ICalendarDatePicker3& operator=(ICalendarDatePicker3 const&) & noexcept = default;
        ICalendarDatePicker3& operator=(ICalendarDatePicker3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarDatePickerDateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerDateChangedEventArgs>
    {
        ICalendarDatePickerDateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerDateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarDatePickerDateChangedEventArgs(ICalendarDatePickerDateChangedEventArgs const&) noexcept = default;
        ICalendarDatePickerDateChangedEventArgs(ICalendarDatePickerDateChangedEventArgs&&) noexcept = default;
        ICalendarDatePickerDateChangedEventArgs& operator=(ICalendarDatePickerDateChangedEventArgs const&) & noexcept = default;
        ICalendarDatePickerDateChangedEventArgs& operator=(ICalendarDatePickerDateChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarDatePickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerFactory>
    {
        ICalendarDatePickerFactory(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarDatePickerFactory(ICalendarDatePickerFactory const&) noexcept = default;
        ICalendarDatePickerFactory(ICalendarDatePickerFactory&&) noexcept = default;
        ICalendarDatePickerFactory& operator=(ICalendarDatePickerFactory const&) & noexcept = default;
        ICalendarDatePickerFactory& operator=(ICalendarDatePickerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarDatePickerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerStatics>
    {
        ICalendarDatePickerStatics(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarDatePickerStatics(ICalendarDatePickerStatics const&) noexcept = default;
        ICalendarDatePickerStatics(ICalendarDatePickerStatics&&) noexcept = default;
        ICalendarDatePickerStatics& operator=(ICalendarDatePickerStatics const&) & noexcept = default;
        ICalendarDatePickerStatics& operator=(ICalendarDatePickerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarDatePickerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerStatics2>
    {
        ICalendarDatePickerStatics2(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarDatePickerStatics2(ICalendarDatePickerStatics2 const&) noexcept = default;
        ICalendarDatePickerStatics2(ICalendarDatePickerStatics2&&) noexcept = default;
        ICalendarDatePickerStatics2& operator=(ICalendarDatePickerStatics2 const&) & noexcept = default;
        ICalendarDatePickerStatics2& operator=(ICalendarDatePickerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarDatePickerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerStatics3>
    {
        ICalendarDatePickerStatics3(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarDatePickerStatics3(ICalendarDatePickerStatics3 const&) noexcept = default;
        ICalendarDatePickerStatics3(ICalendarDatePickerStatics3&&) noexcept = default;
        ICalendarDatePickerStatics3& operator=(ICalendarDatePickerStatics3 const&) & noexcept = default;
        ICalendarDatePickerStatics3& operator=(ICalendarDatePickerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarView>
    {
        ICalendarView(std::nullptr_t = nullptr) noexcept {}
        ICalendarView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarView(ICalendarView const&) noexcept = default;
        ICalendarView(ICalendarView&&) noexcept = default;
        ICalendarView& operator=(ICalendarView const&) & noexcept = default;
        ICalendarView& operator=(ICalendarView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarViewDayItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewDayItem>
    {
        ICalendarViewDayItem(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewDayItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarViewDayItem(ICalendarViewDayItem const&) noexcept = default;
        ICalendarViewDayItem(ICalendarViewDayItem&&) noexcept = default;
        ICalendarViewDayItem& operator=(ICalendarViewDayItem const&) & noexcept = default;
        ICalendarViewDayItem& operator=(ICalendarViewDayItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarViewDayItemChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewDayItemChangingEventArgs>
    {
        ICalendarViewDayItemChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewDayItemChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarViewDayItemChangingEventArgs(ICalendarViewDayItemChangingEventArgs const&) noexcept = default;
        ICalendarViewDayItemChangingEventArgs(ICalendarViewDayItemChangingEventArgs&&) noexcept = default;
        ICalendarViewDayItemChangingEventArgs& operator=(ICalendarViewDayItemChangingEventArgs const&) & noexcept = default;
        ICalendarViewDayItemChangingEventArgs& operator=(ICalendarViewDayItemChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarViewDayItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewDayItemFactory>
    {
        ICalendarViewDayItemFactory(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewDayItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarViewDayItemFactory(ICalendarViewDayItemFactory const&) noexcept = default;
        ICalendarViewDayItemFactory(ICalendarViewDayItemFactory&&) noexcept = default;
        ICalendarViewDayItemFactory& operator=(ICalendarViewDayItemFactory const&) & noexcept = default;
        ICalendarViewDayItemFactory& operator=(ICalendarViewDayItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarViewDayItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewDayItemStatics>
    {
        ICalendarViewDayItemStatics(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewDayItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarViewDayItemStatics(ICalendarViewDayItemStatics const&) noexcept = default;
        ICalendarViewDayItemStatics(ICalendarViewDayItemStatics&&) noexcept = default;
        ICalendarViewDayItemStatics& operator=(ICalendarViewDayItemStatics const&) & noexcept = default;
        ICalendarViewDayItemStatics& operator=(ICalendarViewDayItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewFactory>
    {
        ICalendarViewFactory(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarViewFactory(ICalendarViewFactory const&) noexcept = default;
        ICalendarViewFactory(ICalendarViewFactory&&) noexcept = default;
        ICalendarViewFactory& operator=(ICalendarViewFactory const&) & noexcept = default;
        ICalendarViewFactory& operator=(ICalendarViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarViewSelectedDatesChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewSelectedDatesChangedEventArgs>
    {
        ICalendarViewSelectedDatesChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewSelectedDatesChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarViewSelectedDatesChangedEventArgs(ICalendarViewSelectedDatesChangedEventArgs const&) noexcept = default;
        ICalendarViewSelectedDatesChangedEventArgs(ICalendarViewSelectedDatesChangedEventArgs&&) noexcept = default;
        ICalendarViewSelectedDatesChangedEventArgs& operator=(ICalendarViewSelectedDatesChangedEventArgs const&) & noexcept = default;
        ICalendarViewSelectedDatesChangedEventArgs& operator=(ICalendarViewSelectedDatesChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICalendarViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewStatics>
    {
        ICalendarViewStatics(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICalendarViewStatics(ICalendarViewStatics const&) noexcept = default;
        ICalendarViewStatics(ICalendarViewStatics&&) noexcept = default;
        ICalendarViewStatics& operator=(ICalendarViewStatics const&) & noexcept = default;
        ICalendarViewStatics& operator=(ICalendarViewStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICandidateWindowBoundsChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICandidateWindowBoundsChangedEventArgs>
    {
        ICandidateWindowBoundsChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICandidateWindowBoundsChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICandidateWindowBoundsChangedEventArgs(ICandidateWindowBoundsChangedEventArgs const&) noexcept = default;
        ICandidateWindowBoundsChangedEventArgs(ICandidateWindowBoundsChangedEventArgs&&) noexcept = default;
        ICandidateWindowBoundsChangedEventArgs& operator=(ICandidateWindowBoundsChangedEventArgs const&) & noexcept = default;
        ICandidateWindowBoundsChangedEventArgs& operator=(ICandidateWindowBoundsChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICanvas :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvas>
    {
        ICanvas(std::nullptr_t = nullptr) noexcept {}
        ICanvas(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICanvas(ICanvas const&) noexcept = default;
        ICanvas(ICanvas&&) noexcept = default;
        ICanvas& operator=(ICanvas const&) & noexcept = default;
        ICanvas& operator=(ICanvas&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICanvasFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasFactory>
    {
        ICanvasFactory(std::nullptr_t = nullptr) noexcept {}
        ICanvasFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICanvasFactory(ICanvasFactory const&) noexcept = default;
        ICanvasFactory(ICanvasFactory&&) noexcept = default;
        ICanvasFactory& operator=(ICanvasFactory const&) & noexcept = default;
        ICanvasFactory& operator=(ICanvasFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICanvasStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasStatics>
    {
        ICanvasStatics(std::nullptr_t = nullptr) noexcept {}
        ICanvasStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICanvasStatics(ICanvasStatics const&) noexcept = default;
        ICanvasStatics(ICanvasStatics&&) noexcept = default;
        ICanvasStatics& operator=(ICanvasStatics const&) & noexcept = default;
        ICanvasStatics& operator=(ICanvasStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICaptureElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICaptureElement>
    {
        ICaptureElement(std::nullptr_t = nullptr) noexcept {}
        ICaptureElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICaptureElement(ICaptureElement const&) noexcept = default;
        ICaptureElement(ICaptureElement&&) noexcept = default;
        ICaptureElement& operator=(ICaptureElement const&) & noexcept = default;
        ICaptureElement& operator=(ICaptureElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICaptureElementStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICaptureElementStatics>
    {
        ICaptureElementStatics(std::nullptr_t = nullptr) noexcept {}
        ICaptureElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICaptureElementStatics(ICaptureElementStatics const&) noexcept = default;
        ICaptureElementStatics(ICaptureElementStatics&&) noexcept = default;
        ICaptureElementStatics& operator=(ICaptureElementStatics const&) & noexcept = default;
        ICaptureElementStatics& operator=(ICaptureElementStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICheckBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICheckBox>
    {
        ICheckBox(std::nullptr_t = nullptr) noexcept {}
        ICheckBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICheckBox(ICheckBox const&) noexcept = default;
        ICheckBox(ICheckBox&&) noexcept = default;
        ICheckBox& operator=(ICheckBox const&) & noexcept = default;
        ICheckBox& operator=(ICheckBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICheckBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICheckBoxFactory>
    {
        ICheckBoxFactory(std::nullptr_t = nullptr) noexcept {}
        ICheckBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICheckBoxFactory(ICheckBoxFactory const&) noexcept = default;
        ICheckBoxFactory(ICheckBoxFactory&&) noexcept = default;
        ICheckBoxFactory& operator=(ICheckBoxFactory const&) & noexcept = default;
        ICheckBoxFactory& operator=(ICheckBoxFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IChoosingGroupHeaderContainerEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IChoosingGroupHeaderContainerEventArgs>
    {
        IChoosingGroupHeaderContainerEventArgs(std::nullptr_t = nullptr) noexcept {}
        IChoosingGroupHeaderContainerEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IChoosingGroupHeaderContainerEventArgs(IChoosingGroupHeaderContainerEventArgs const&) noexcept = default;
        IChoosingGroupHeaderContainerEventArgs(IChoosingGroupHeaderContainerEventArgs&&) noexcept = default;
        IChoosingGroupHeaderContainerEventArgs& operator=(IChoosingGroupHeaderContainerEventArgs const&) & noexcept = default;
        IChoosingGroupHeaderContainerEventArgs& operator=(IChoosingGroupHeaderContainerEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IChoosingItemContainerEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IChoosingItemContainerEventArgs>
    {
        IChoosingItemContainerEventArgs(std::nullptr_t = nullptr) noexcept {}
        IChoosingItemContainerEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IChoosingItemContainerEventArgs(IChoosingItemContainerEventArgs const&) noexcept = default;
        IChoosingItemContainerEventArgs(IChoosingItemContainerEventArgs&&) noexcept = default;
        IChoosingItemContainerEventArgs& operator=(IChoosingItemContainerEventArgs const&) & noexcept = default;
        IChoosingItemContainerEventArgs& operator=(IChoosingItemContainerEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICleanUpVirtualizedItemEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICleanUpVirtualizedItemEventArgs>
    {
        ICleanUpVirtualizedItemEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICleanUpVirtualizedItemEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICleanUpVirtualizedItemEventArgs(ICleanUpVirtualizedItemEventArgs const&) noexcept = default;
        ICleanUpVirtualizedItemEventArgs(ICleanUpVirtualizedItemEventArgs&&) noexcept = default;
        ICleanUpVirtualizedItemEventArgs& operator=(ICleanUpVirtualizedItemEventArgs const&) & noexcept = default;
        ICleanUpVirtualizedItemEventArgs& operator=(ICleanUpVirtualizedItemEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorChangedEventArgs>
    {
        IColorChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IColorChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorChangedEventArgs(IColorChangedEventArgs const&) noexcept = default;
        IColorChangedEventArgs(IColorChangedEventArgs&&) noexcept = default;
        IColorChangedEventArgs& operator=(IColorChangedEventArgs const&) & noexcept = default;
        IColorChangedEventArgs& operator=(IColorChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorPicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPicker>
    {
        IColorPicker(std::nullptr_t = nullptr) noexcept {}
        IColorPicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorPicker(IColorPicker const&) noexcept = default;
        IColorPicker(IColorPicker&&) noexcept = default;
        IColorPicker& operator=(IColorPicker const&) & noexcept = default;
        IColorPicker& operator=(IColorPicker&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorPickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerFactory>
    {
        IColorPickerFactory(std::nullptr_t = nullptr) noexcept {}
        IColorPickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorPickerFactory(IColorPickerFactory const&) noexcept = default;
        IColorPickerFactory(IColorPickerFactory&&) noexcept = default;
        IColorPickerFactory& operator=(IColorPickerFactory const&) & noexcept = default;
        IColorPickerFactory& operator=(IColorPickerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorPickerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerStatics>
    {
        IColorPickerStatics(std::nullptr_t = nullptr) noexcept {}
        IColorPickerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorPickerStatics(IColorPickerStatics const&) noexcept = default;
        IColorPickerStatics(IColorPickerStatics&&) noexcept = default;
        IColorPickerStatics& operator=(IColorPickerStatics const&) & noexcept = default;
        IColorPickerStatics& operator=(IColorPickerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColumnDefinition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColumnDefinition>
    {
        IColumnDefinition(std::nullptr_t = nullptr) noexcept {}
        IColumnDefinition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColumnDefinition(IColumnDefinition const&) noexcept = default;
        IColumnDefinition(IColumnDefinition&&) noexcept = default;
        IColumnDefinition& operator=(IColumnDefinition const&) & noexcept = default;
        IColumnDefinition& operator=(IColumnDefinition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColumnDefinitionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColumnDefinitionStatics>
    {
        IColumnDefinitionStatics(std::nullptr_t = nullptr) noexcept {}
        IColumnDefinitionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColumnDefinitionStatics(IColumnDefinitionStatics const&) noexcept = default;
        IColumnDefinitionStatics(IColumnDefinitionStatics&&) noexcept = default;
        IColumnDefinitionStatics& operator=(IColumnDefinitionStatics const&) & noexcept = default;
        IColumnDefinitionStatics& operator=(IColumnDefinitionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBox>
    {
        IComboBox(std::nullptr_t = nullptr) noexcept {}
        IComboBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBox(IComboBox const&) noexcept = default;
        IComboBox(IComboBox&&) noexcept = default;
        IComboBox& operator=(IComboBox const&) & noexcept = default;
        IComboBox& operator=(IComboBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBox2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBox2>
    {
        IComboBox2(std::nullptr_t = nullptr) noexcept {}
        IComboBox2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBox2(IComboBox2 const&) noexcept = default;
        IComboBox2(IComboBox2&&) noexcept = default;
        IComboBox2& operator=(IComboBox2 const&) & noexcept = default;
        IComboBox2& operator=(IComboBox2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBox3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBox3>
    {
        IComboBox3(std::nullptr_t = nullptr) noexcept {}
        IComboBox3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBox3(IComboBox3 const&) noexcept = default;
        IComboBox3(IComboBox3&&) noexcept = default;
        IComboBox3& operator=(IComboBox3 const&) & noexcept = default;
        IComboBox3& operator=(IComboBox3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBox4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBox4>
    {
        IComboBox4(std::nullptr_t = nullptr) noexcept {}
        IComboBox4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBox4(IComboBox4 const&) noexcept = default;
        IComboBox4(IComboBox4&&) noexcept = default;
        IComboBox4& operator=(IComboBox4 const&) & noexcept = default;
        IComboBox4& operator=(IComboBox4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBox5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBox5>
    {
        IComboBox5(std::nullptr_t = nullptr) noexcept {}
        IComboBox5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBox5(IComboBox5 const&) noexcept = default;
        IComboBox5(IComboBox5&&) noexcept = default;
        IComboBox5& operator=(IComboBox5 const&) & noexcept = default;
        IComboBox5& operator=(IComboBox5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBox6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBox6>
    {
        IComboBox6(std::nullptr_t = nullptr) noexcept {}
        IComboBox6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBox6(IComboBox6 const&) noexcept = default;
        IComboBox6(IComboBox6&&) noexcept = default;
        IComboBox6& operator=(IComboBox6 const&) & noexcept = default;
        IComboBox6& operator=(IComboBox6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxFactory>
    {
        IComboBoxFactory(std::nullptr_t = nullptr) noexcept {}
        IComboBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxFactory(IComboBoxFactory const&) noexcept = default;
        IComboBoxFactory(IComboBoxFactory&&) noexcept = default;
        IComboBoxFactory& operator=(IComboBoxFactory const&) & noexcept = default;
        IComboBoxFactory& operator=(IComboBoxFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItem>
    {
        IComboBoxItem(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxItem(IComboBoxItem const&) noexcept = default;
        IComboBoxItem(IComboBoxItem&&) noexcept = default;
        IComboBoxItem& operator=(IComboBoxItem const&) & noexcept = default;
        IComboBoxItem& operator=(IComboBoxItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItemFactory>
    {
        IComboBoxItemFactory(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxItemFactory(IComboBoxItemFactory const&) noexcept = default;
        IComboBoxItemFactory(IComboBoxItemFactory&&) noexcept = default;
        IComboBoxItemFactory& operator=(IComboBoxItemFactory const&) & noexcept = default;
        IComboBoxItemFactory& operator=(IComboBoxItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxOverrides>
    {
        IComboBoxOverrides(std::nullptr_t = nullptr) noexcept {}
        IComboBoxOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxOverrides(IComboBoxOverrides const&) noexcept = default;
        IComboBoxOverrides(IComboBoxOverrides&&) noexcept = default;
        IComboBoxOverrides& operator=(IComboBoxOverrides const&) & noexcept = default;
        IComboBoxOverrides& operator=(IComboBoxOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxStatics>
    {
        IComboBoxStatics(std::nullptr_t = nullptr) noexcept {}
        IComboBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxStatics(IComboBoxStatics const&) noexcept = default;
        IComboBoxStatics(IComboBoxStatics&&) noexcept = default;
        IComboBoxStatics& operator=(IComboBoxStatics const&) & noexcept = default;
        IComboBoxStatics& operator=(IComboBoxStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxStatics2>
    {
        IComboBoxStatics2(std::nullptr_t = nullptr) noexcept {}
        IComboBoxStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxStatics2(IComboBoxStatics2 const&) noexcept = default;
        IComboBoxStatics2(IComboBoxStatics2&&) noexcept = default;
        IComboBoxStatics2& operator=(IComboBoxStatics2 const&) & noexcept = default;
        IComboBoxStatics2& operator=(IComboBoxStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxStatics3>
    {
        IComboBoxStatics3(std::nullptr_t = nullptr) noexcept {}
        IComboBoxStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxStatics3(IComboBoxStatics3 const&) noexcept = default;
        IComboBoxStatics3(IComboBoxStatics3&&) noexcept = default;
        IComboBoxStatics3& operator=(IComboBoxStatics3 const&) & noexcept = default;
        IComboBoxStatics3& operator=(IComboBoxStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxStatics4>
    {
        IComboBoxStatics4(std::nullptr_t = nullptr) noexcept {}
        IComboBoxStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxStatics4(IComboBoxStatics4 const&) noexcept = default;
        IComboBoxStatics4(IComboBoxStatics4&&) noexcept = default;
        IComboBoxStatics4& operator=(IComboBoxStatics4 const&) & noexcept = default;
        IComboBoxStatics4& operator=(IComboBoxStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxStatics5>
    {
        IComboBoxStatics5(std::nullptr_t = nullptr) noexcept {}
        IComboBoxStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxStatics5(IComboBoxStatics5 const&) noexcept = default;
        IComboBoxStatics5(IComboBoxStatics5&&) noexcept = default;
        IComboBoxStatics5& operator=(IComboBoxStatics5 const&) & noexcept = default;
        IComboBoxStatics5& operator=(IComboBoxStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxStatics6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxStatics6>
    {
        IComboBoxStatics6(std::nullptr_t = nullptr) noexcept {}
        IComboBoxStatics6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxStatics6(IComboBoxStatics6 const&) noexcept = default;
        IComboBoxStatics6(IComboBoxStatics6&&) noexcept = default;
        IComboBoxStatics6& operator=(IComboBoxStatics6 const&) & noexcept = default;
        IComboBoxStatics6& operator=(IComboBoxStatics6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IComboBoxTextSubmittedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxTextSubmittedEventArgs>
    {
        IComboBoxTextSubmittedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IComboBoxTextSubmittedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IComboBoxTextSubmittedEventArgs(IComboBoxTextSubmittedEventArgs const&) noexcept = default;
        IComboBoxTextSubmittedEventArgs(IComboBoxTextSubmittedEventArgs&&) noexcept = default;
        IComboBoxTextSubmittedEventArgs& operator=(IComboBoxTextSubmittedEventArgs const&) & noexcept = default;
        IComboBoxTextSubmittedEventArgs& operator=(IComboBoxTextSubmittedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBar>
    {
        ICommandBar(std::nullptr_t = nullptr) noexcept {}
        ICommandBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBar(ICommandBar const&) noexcept = default;
        ICommandBar(ICommandBar&&) noexcept = default;
        ICommandBar& operator=(ICommandBar const&) & noexcept = default;
        ICommandBar& operator=(ICommandBar&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBar2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBar2>
    {
        ICommandBar2(std::nullptr_t = nullptr) noexcept {}
        ICommandBar2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBar2(ICommandBar2 const&) noexcept = default;
        ICommandBar2(ICommandBar2&&) noexcept = default;
        ICommandBar2& operator=(ICommandBar2 const&) & noexcept = default;
        ICommandBar2& operator=(ICommandBar2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBar3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBar3>
    {
        ICommandBar3(std::nullptr_t = nullptr) noexcept {}
        ICommandBar3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBar3(ICommandBar3 const&) noexcept = default;
        ICommandBar3(ICommandBar3&&) noexcept = default;
        ICommandBar3& operator=(ICommandBar3 const&) & noexcept = default;
        ICommandBar3& operator=(ICommandBar3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarElement>
    {
        ICommandBarElement(std::nullptr_t = nullptr) noexcept {}
        ICommandBarElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarElement(ICommandBarElement const&) noexcept = default;
        ICommandBarElement(ICommandBarElement&&) noexcept = default;
        ICommandBarElement& operator=(ICommandBarElement const&) & noexcept = default;
        ICommandBarElement& operator=(ICommandBarElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarElement2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarElement2>
    {
        ICommandBarElement2(std::nullptr_t = nullptr) noexcept {}
        ICommandBarElement2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarElement2(ICommandBarElement2 const&) noexcept = default;
        ICommandBarElement2(ICommandBarElement2&&) noexcept = default;
        ICommandBarElement2& operator=(ICommandBarElement2 const&) & noexcept = default;
        ICommandBarElement2& operator=(ICommandBarElement2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarFactory>
    {
        ICommandBarFactory(std::nullptr_t = nullptr) noexcept {}
        ICommandBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarFactory(ICommandBarFactory const&) noexcept = default;
        ICommandBarFactory(ICommandBarFactory&&) noexcept = default;
        ICommandBarFactory& operator=(ICommandBarFactory const&) & noexcept = default;
        ICommandBarFactory& operator=(ICommandBarFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarFlyout>
    {
        ICommandBarFlyout(std::nullptr_t = nullptr) noexcept {}
        ICommandBarFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarFlyout(ICommandBarFlyout const&) noexcept = default;
        ICommandBarFlyout(ICommandBarFlyout&&) noexcept = default;
        ICommandBarFlyout& operator=(ICommandBarFlyout const&) & noexcept = default;
        ICommandBarFlyout& operator=(ICommandBarFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarFlyoutFactory>
    {
        ICommandBarFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        ICommandBarFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarFlyoutFactory(ICommandBarFlyoutFactory const&) noexcept = default;
        ICommandBarFlyoutFactory(ICommandBarFlyoutFactory&&) noexcept = default;
        ICommandBarFlyoutFactory& operator=(ICommandBarFlyoutFactory const&) & noexcept = default;
        ICommandBarFlyoutFactory& operator=(ICommandBarFlyoutFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarOverflowPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarOverflowPresenter>
    {
        ICommandBarOverflowPresenter(std::nullptr_t = nullptr) noexcept {}
        ICommandBarOverflowPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarOverflowPresenter(ICommandBarOverflowPresenter const&) noexcept = default;
        ICommandBarOverflowPresenter(ICommandBarOverflowPresenter&&) noexcept = default;
        ICommandBarOverflowPresenter& operator=(ICommandBarOverflowPresenter const&) & noexcept = default;
        ICommandBarOverflowPresenter& operator=(ICommandBarOverflowPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarOverflowPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarOverflowPresenterFactory>
    {
        ICommandBarOverflowPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        ICommandBarOverflowPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarOverflowPresenterFactory(ICommandBarOverflowPresenterFactory const&) noexcept = default;
        ICommandBarOverflowPresenterFactory(ICommandBarOverflowPresenterFactory&&) noexcept = default;
        ICommandBarOverflowPresenterFactory& operator=(ICommandBarOverflowPresenterFactory const&) & noexcept = default;
        ICommandBarOverflowPresenterFactory& operator=(ICommandBarOverflowPresenterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarStatics>
    {
        ICommandBarStatics(std::nullptr_t = nullptr) noexcept {}
        ICommandBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarStatics(ICommandBarStatics const&) noexcept = default;
        ICommandBarStatics(ICommandBarStatics&&) noexcept = default;
        ICommandBarStatics& operator=(ICommandBarStatics const&) & noexcept = default;
        ICommandBarStatics& operator=(ICommandBarStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarStatics2>
    {
        ICommandBarStatics2(std::nullptr_t = nullptr) noexcept {}
        ICommandBarStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarStatics2(ICommandBarStatics2 const&) noexcept = default;
        ICommandBarStatics2(ICommandBarStatics2&&) noexcept = default;
        ICommandBarStatics2& operator=(ICommandBarStatics2 const&) & noexcept = default;
        ICommandBarStatics2& operator=(ICommandBarStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommandBarStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarStatics3>
    {
        ICommandBarStatics3(std::nullptr_t = nullptr) noexcept {}
        ICommandBarStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommandBarStatics3(ICommandBarStatics3 const&) noexcept = default;
        ICommandBarStatics3(ICommandBarStatics3&&) noexcept = default;
        ICommandBarStatics3& operator=(ICommandBarStatics3 const&) & noexcept = default;
        ICommandBarStatics3& operator=(ICommandBarStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContainerContentChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContainerContentChangingEventArgs>
    {
        IContainerContentChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContainerContentChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContainerContentChangingEventArgs(IContainerContentChangingEventArgs const&) noexcept = default;
        IContainerContentChangingEventArgs(IContainerContentChangingEventArgs&&) noexcept = default;
        IContainerContentChangingEventArgs& operator=(IContainerContentChangingEventArgs const&) & noexcept = default;
        IContainerContentChangingEventArgs& operator=(IContainerContentChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentControl>
    {
        IContentControl(std::nullptr_t = nullptr) noexcept {}
        IContentControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentControl(IContentControl const&) noexcept = default;
        IContentControl(IContentControl&&) noexcept = default;
        IContentControl& operator=(IContentControl const&) & noexcept = default;
        IContentControl& operator=(IContentControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentControl2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentControl2>
    {
        IContentControl2(std::nullptr_t = nullptr) noexcept {}
        IContentControl2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentControl2(IContentControl2 const&) noexcept = default;
        IContentControl2(IContentControl2&&) noexcept = default;
        IContentControl2& operator=(IContentControl2 const&) & noexcept = default;
        IContentControl2& operator=(IContentControl2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentControlFactory>
    {
        IContentControlFactory(std::nullptr_t = nullptr) noexcept {}
        IContentControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentControlFactory(IContentControlFactory const&) noexcept = default;
        IContentControlFactory(IContentControlFactory&&) noexcept = default;
        IContentControlFactory& operator=(IContentControlFactory const&) & noexcept = default;
        IContentControlFactory& operator=(IContentControlFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentControlOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentControlOverrides>
    {
        IContentControlOverrides(std::nullptr_t = nullptr) noexcept {}
        IContentControlOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentControlOverrides(IContentControlOverrides const&) noexcept = default;
        IContentControlOverrides(IContentControlOverrides&&) noexcept = default;
        IContentControlOverrides& operator=(IContentControlOverrides const&) & noexcept = default;
        IContentControlOverrides& operator=(IContentControlOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentControlStatics>
    {
        IContentControlStatics(std::nullptr_t = nullptr) noexcept {}
        IContentControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentControlStatics(IContentControlStatics const&) noexcept = default;
        IContentControlStatics(IContentControlStatics&&) noexcept = default;
        IContentControlStatics& operator=(IContentControlStatics const&) & noexcept = default;
        IContentControlStatics& operator=(IContentControlStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialog :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialog>
    {
        IContentDialog(std::nullptr_t = nullptr) noexcept {}
        IContentDialog(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialog(IContentDialog const&) noexcept = default;
        IContentDialog(IContentDialog&&) noexcept = default;
        IContentDialog& operator=(IContentDialog const&) & noexcept = default;
        IContentDialog& operator=(IContentDialog&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialog2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialog2>
    {
        IContentDialog2(std::nullptr_t = nullptr) noexcept {}
        IContentDialog2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialog2(IContentDialog2 const&) noexcept = default;
        IContentDialog2(IContentDialog2&&) noexcept = default;
        IContentDialog2& operator=(IContentDialog2 const&) & noexcept = default;
        IContentDialog2& operator=(IContentDialog2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialog3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialog3>
    {
        IContentDialog3(std::nullptr_t = nullptr) noexcept {}
        IContentDialog3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialog3(IContentDialog3 const&) noexcept = default;
        IContentDialog3(IContentDialog3&&) noexcept = default;
        IContentDialog3& operator=(IContentDialog3 const&) & noexcept = default;
        IContentDialog3& operator=(IContentDialog3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialogButtonClickDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogButtonClickDeferral>
    {
        IContentDialogButtonClickDeferral(std::nullptr_t = nullptr) noexcept {}
        IContentDialogButtonClickDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialogButtonClickDeferral(IContentDialogButtonClickDeferral const&) noexcept = default;
        IContentDialogButtonClickDeferral(IContentDialogButtonClickDeferral&&) noexcept = default;
        IContentDialogButtonClickDeferral& operator=(IContentDialogButtonClickDeferral const&) & noexcept = default;
        IContentDialogButtonClickDeferral& operator=(IContentDialogButtonClickDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialogButtonClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogButtonClickEventArgs>
    {
        IContentDialogButtonClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentDialogButtonClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialogButtonClickEventArgs(IContentDialogButtonClickEventArgs const&) noexcept = default;
        IContentDialogButtonClickEventArgs(IContentDialogButtonClickEventArgs&&) noexcept = default;
        IContentDialogButtonClickEventArgs& operator=(IContentDialogButtonClickEventArgs const&) & noexcept = default;
        IContentDialogButtonClickEventArgs& operator=(IContentDialogButtonClickEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialogClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogClosedEventArgs>
    {
        IContentDialogClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentDialogClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialogClosedEventArgs(IContentDialogClosedEventArgs const&) noexcept = default;
        IContentDialogClosedEventArgs(IContentDialogClosedEventArgs&&) noexcept = default;
        IContentDialogClosedEventArgs& operator=(IContentDialogClosedEventArgs const&) & noexcept = default;
        IContentDialogClosedEventArgs& operator=(IContentDialogClosedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialogClosingDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogClosingDeferral>
    {
        IContentDialogClosingDeferral(std::nullptr_t = nullptr) noexcept {}
        IContentDialogClosingDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialogClosingDeferral(IContentDialogClosingDeferral const&) noexcept = default;
        IContentDialogClosingDeferral(IContentDialogClosingDeferral&&) noexcept = default;
        IContentDialogClosingDeferral& operator=(IContentDialogClosingDeferral const&) & noexcept = default;
        IContentDialogClosingDeferral& operator=(IContentDialogClosingDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialogClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogClosingEventArgs>
    {
        IContentDialogClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentDialogClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialogClosingEventArgs(IContentDialogClosingEventArgs const&) noexcept = default;
        IContentDialogClosingEventArgs(IContentDialogClosingEventArgs&&) noexcept = default;
        IContentDialogClosingEventArgs& operator=(IContentDialogClosingEventArgs const&) & noexcept = default;
        IContentDialogClosingEventArgs& operator=(IContentDialogClosingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialogFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogFactory>
    {
        IContentDialogFactory(std::nullptr_t = nullptr) noexcept {}
        IContentDialogFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialogFactory(IContentDialogFactory const&) noexcept = default;
        IContentDialogFactory(IContentDialogFactory&&) noexcept = default;
        IContentDialogFactory& operator=(IContentDialogFactory const&) & noexcept = default;
        IContentDialogFactory& operator=(IContentDialogFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialogOpenedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogOpenedEventArgs>
    {
        IContentDialogOpenedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentDialogOpenedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialogOpenedEventArgs(IContentDialogOpenedEventArgs const&) noexcept = default;
        IContentDialogOpenedEventArgs(IContentDialogOpenedEventArgs&&) noexcept = default;
        IContentDialogOpenedEventArgs& operator=(IContentDialogOpenedEventArgs const&) & noexcept = default;
        IContentDialogOpenedEventArgs& operator=(IContentDialogOpenedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialogStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogStatics>
    {
        IContentDialogStatics(std::nullptr_t = nullptr) noexcept {}
        IContentDialogStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialogStatics(IContentDialogStatics const&) noexcept = default;
        IContentDialogStatics(IContentDialogStatics&&) noexcept = default;
        IContentDialogStatics& operator=(IContentDialogStatics const&) & noexcept = default;
        IContentDialogStatics& operator=(IContentDialogStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentDialogStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogStatics2>
    {
        IContentDialogStatics2(std::nullptr_t = nullptr) noexcept {}
        IContentDialogStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentDialogStatics2(IContentDialogStatics2 const&) noexcept = default;
        IContentDialogStatics2(IContentDialogStatics2&&) noexcept = default;
        IContentDialogStatics2& operator=(IContentDialogStatics2 const&) & noexcept = default;
        IContentDialogStatics2& operator=(IContentDialogStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentLinkChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentLinkChangedEventArgs>
    {
        IContentLinkChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentLinkChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentLinkChangedEventArgs(IContentLinkChangedEventArgs const&) noexcept = default;
        IContentLinkChangedEventArgs(IContentLinkChangedEventArgs&&) noexcept = default;
        IContentLinkChangedEventArgs& operator=(IContentLinkChangedEventArgs const&) & noexcept = default;
        IContentLinkChangedEventArgs& operator=(IContentLinkChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenter>
    {
        IContentPresenter(std::nullptr_t = nullptr) noexcept {}
        IContentPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenter(IContentPresenter const&) noexcept = default;
        IContentPresenter(IContentPresenter&&) noexcept = default;
        IContentPresenter& operator=(IContentPresenter const&) & noexcept = default;
        IContentPresenter& operator=(IContentPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenter2>
    {
        IContentPresenter2(std::nullptr_t = nullptr) noexcept {}
        IContentPresenter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenter2(IContentPresenter2 const&) noexcept = default;
        IContentPresenter2(IContentPresenter2&&) noexcept = default;
        IContentPresenter2& operator=(IContentPresenter2 const&) & noexcept = default;
        IContentPresenter2& operator=(IContentPresenter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenter3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenter3>
    {
        IContentPresenter3(std::nullptr_t = nullptr) noexcept {}
        IContentPresenter3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenter3(IContentPresenter3 const&) noexcept = default;
        IContentPresenter3(IContentPresenter3&&) noexcept = default;
        IContentPresenter3& operator=(IContentPresenter3 const&) & noexcept = default;
        IContentPresenter3& operator=(IContentPresenter3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenter4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenter4>
    {
        IContentPresenter4(std::nullptr_t = nullptr) noexcept {}
        IContentPresenter4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenter4(IContentPresenter4 const&) noexcept = default;
        IContentPresenter4(IContentPresenter4&&) noexcept = default;
        IContentPresenter4& operator=(IContentPresenter4 const&) & noexcept = default;
        IContentPresenter4& operator=(IContentPresenter4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenter5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenter5>
    {
        IContentPresenter5(std::nullptr_t = nullptr) noexcept {}
        IContentPresenter5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenter5(IContentPresenter5 const&) noexcept = default;
        IContentPresenter5(IContentPresenter5&&) noexcept = default;
        IContentPresenter5& operator=(IContentPresenter5 const&) & noexcept = default;
        IContentPresenter5& operator=(IContentPresenter5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenterFactory>
    {
        IContentPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IContentPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenterFactory(IContentPresenterFactory const&) noexcept = default;
        IContentPresenterFactory(IContentPresenterFactory&&) noexcept = default;
        IContentPresenterFactory& operator=(IContentPresenterFactory const&) & noexcept = default;
        IContentPresenterFactory& operator=(IContentPresenterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenterOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenterOverrides>
    {
        IContentPresenterOverrides(std::nullptr_t = nullptr) noexcept {}
        IContentPresenterOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenterOverrides(IContentPresenterOverrides const&) noexcept = default;
        IContentPresenterOverrides(IContentPresenterOverrides&&) noexcept = default;
        IContentPresenterOverrides& operator=(IContentPresenterOverrides const&) & noexcept = default;
        IContentPresenterOverrides& operator=(IContentPresenterOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenterStatics>
    {
        IContentPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IContentPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenterStatics(IContentPresenterStatics const&) noexcept = default;
        IContentPresenterStatics(IContentPresenterStatics&&) noexcept = default;
        IContentPresenterStatics& operator=(IContentPresenterStatics const&) & noexcept = default;
        IContentPresenterStatics& operator=(IContentPresenterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenterStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenterStatics2>
    {
        IContentPresenterStatics2(std::nullptr_t = nullptr) noexcept {}
        IContentPresenterStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenterStatics2(IContentPresenterStatics2 const&) noexcept = default;
        IContentPresenterStatics2(IContentPresenterStatics2&&) noexcept = default;
        IContentPresenterStatics2& operator=(IContentPresenterStatics2 const&) & noexcept = default;
        IContentPresenterStatics2& operator=(IContentPresenterStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenterStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenterStatics3>
    {
        IContentPresenterStatics3(std::nullptr_t = nullptr) noexcept {}
        IContentPresenterStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenterStatics3(IContentPresenterStatics3 const&) noexcept = default;
        IContentPresenterStatics3(IContentPresenterStatics3&&) noexcept = default;
        IContentPresenterStatics3& operator=(IContentPresenterStatics3 const&) & noexcept = default;
        IContentPresenterStatics3& operator=(IContentPresenterStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenterStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenterStatics4>
    {
        IContentPresenterStatics4(std::nullptr_t = nullptr) noexcept {}
        IContentPresenterStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenterStatics4(IContentPresenterStatics4 const&) noexcept = default;
        IContentPresenterStatics4(IContentPresenterStatics4&&) noexcept = default;
        IContentPresenterStatics4& operator=(IContentPresenterStatics4 const&) & noexcept = default;
        IContentPresenterStatics4& operator=(IContentPresenterStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentPresenterStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenterStatics5>
    {
        IContentPresenterStatics5(std::nullptr_t = nullptr) noexcept {}
        IContentPresenterStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentPresenterStatics5(IContentPresenterStatics5 const&) noexcept = default;
        IContentPresenterStatics5(IContentPresenterStatics5&&) noexcept = default;
        IContentPresenterStatics5& operator=(IContentPresenterStatics5 const&) & noexcept = default;
        IContentPresenterStatics5& operator=(IContentPresenterStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContextMenuEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContextMenuEventArgs>
    {
        IContextMenuEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContextMenuEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContextMenuEventArgs(IContextMenuEventArgs const&) noexcept = default;
        IContextMenuEventArgs(IContextMenuEventArgs&&) noexcept = default;
        IContextMenuEventArgs& operator=(IContextMenuEventArgs const&) & noexcept = default;
        IContextMenuEventArgs& operator=(IContextMenuEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControl>
    {
        IControl(std::nullptr_t = nullptr) noexcept {}
        IControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControl(IControl const&) noexcept = default;
        IControl(IControl&&) noexcept = default;
        IControl& operator=(IControl const&) & noexcept = default;
        IControl& operator=(IControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControl2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControl2>
    {
        IControl2(std::nullptr_t = nullptr) noexcept {}
        IControl2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControl2(IControl2 const&) noexcept = default;
        IControl2(IControl2&&) noexcept = default;
        IControl2& operator=(IControl2 const&) & noexcept = default;
        IControl2& operator=(IControl2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControl3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControl3>
    {
        IControl3(std::nullptr_t = nullptr) noexcept {}
        IControl3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControl3(IControl3 const&) noexcept = default;
        IControl3(IControl3&&) noexcept = default;
        IControl3& operator=(IControl3 const&) & noexcept = default;
        IControl3& operator=(IControl3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControl4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControl4>
    {
        IControl4(std::nullptr_t = nullptr) noexcept {}
        IControl4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControl4(IControl4 const&) noexcept = default;
        IControl4(IControl4&&) noexcept = default;
        IControl4& operator=(IControl4 const&) & noexcept = default;
        IControl4& operator=(IControl4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControl5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControl5>
    {
        IControl5(std::nullptr_t = nullptr) noexcept {}
        IControl5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControl5(IControl5 const&) noexcept = default;
        IControl5(IControl5&&) noexcept = default;
        IControl5& operator=(IControl5 const&) & noexcept = default;
        IControl5& operator=(IControl5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControl7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControl7>
    {
        IControl7(std::nullptr_t = nullptr) noexcept {}
        IControl7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControl7(IControl7 const&) noexcept = default;
        IControl7(IControl7&&) noexcept = default;
        IControl7& operator=(IControl7 const&) & noexcept = default;
        IControl7& operator=(IControl7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlFactory>
    {
        IControlFactory(std::nullptr_t = nullptr) noexcept {}
        IControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlFactory(IControlFactory const&) noexcept = default;
        IControlFactory(IControlFactory&&) noexcept = default;
        IControlFactory& operator=(IControlFactory const&) & noexcept = default;
        IControlFactory& operator=(IControlFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlOverrides>
    {
        IControlOverrides(std::nullptr_t = nullptr) noexcept {}
        IControlOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlOverrides(IControlOverrides const&) noexcept = default;
        IControlOverrides(IControlOverrides&&) noexcept = default;
        IControlOverrides& operator=(IControlOverrides const&) & noexcept = default;
        IControlOverrides& operator=(IControlOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlOverrides6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlOverrides6>
    {
        IControlOverrides6(std::nullptr_t = nullptr) noexcept {}
        IControlOverrides6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlOverrides6(IControlOverrides6 const&) noexcept = default;
        IControlOverrides6(IControlOverrides6&&) noexcept = default;
        IControlOverrides6& operator=(IControlOverrides6 const&) & noexcept = default;
        IControlOverrides6& operator=(IControlOverrides6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlProtected :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlProtected>
    {
        IControlProtected(std::nullptr_t = nullptr) noexcept {}
        IControlProtected(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlProtected(IControlProtected const&) noexcept = default;
        IControlProtected(IControlProtected&&) noexcept = default;
        IControlProtected& operator=(IControlProtected const&) & noexcept = default;
        IControlProtected& operator=(IControlProtected&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlStatics>
    {
        IControlStatics(std::nullptr_t = nullptr) noexcept {}
        IControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlStatics(IControlStatics const&) noexcept = default;
        IControlStatics(IControlStatics&&) noexcept = default;
        IControlStatics& operator=(IControlStatics const&) & noexcept = default;
        IControlStatics& operator=(IControlStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlStatics2>
    {
        IControlStatics2(std::nullptr_t = nullptr) noexcept {}
        IControlStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlStatics2(IControlStatics2 const&) noexcept = default;
        IControlStatics2(IControlStatics2&&) noexcept = default;
        IControlStatics2& operator=(IControlStatics2 const&) & noexcept = default;
        IControlStatics2& operator=(IControlStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlStatics3>
    {
        IControlStatics3(std::nullptr_t = nullptr) noexcept {}
        IControlStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlStatics3(IControlStatics3 const&) noexcept = default;
        IControlStatics3(IControlStatics3&&) noexcept = default;
        IControlStatics3& operator=(IControlStatics3 const&) & noexcept = default;
        IControlStatics3& operator=(IControlStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlStatics4>
    {
        IControlStatics4(std::nullptr_t = nullptr) noexcept {}
        IControlStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlStatics4(IControlStatics4 const&) noexcept = default;
        IControlStatics4(IControlStatics4&&) noexcept = default;
        IControlStatics4& operator=(IControlStatics4 const&) & noexcept = default;
        IControlStatics4& operator=(IControlStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlStatics5>
    {
        IControlStatics5(std::nullptr_t = nullptr) noexcept {}
        IControlStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlStatics5(IControlStatics5 const&) noexcept = default;
        IControlStatics5(IControlStatics5&&) noexcept = default;
        IControlStatics5& operator=(IControlStatics5 const&) & noexcept = default;
        IControlStatics5& operator=(IControlStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlStatics7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlStatics7>
    {
        IControlStatics7(std::nullptr_t = nullptr) noexcept {}
        IControlStatics7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlStatics7(IControlStatics7 const&) noexcept = default;
        IControlStatics7(IControlStatics7&&) noexcept = default;
        IControlStatics7& operator=(IControlStatics7 const&) & noexcept = default;
        IControlStatics7& operator=(IControlStatics7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IControlTemplate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlTemplate>
    {
        IControlTemplate(std::nullptr_t = nullptr) noexcept {}
        IControlTemplate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IControlTemplate(IControlTemplate const&) noexcept = default;
        IControlTemplate(IControlTemplate&&) noexcept = default;
        IControlTemplate& operator=(IControlTemplate const&) & noexcept = default;
        IControlTemplate& operator=(IControlTemplate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateSelector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateSelector>
    {
        IDataTemplateSelector(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateSelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateSelector(IDataTemplateSelector const&) noexcept = default;
        IDataTemplateSelector(IDataTemplateSelector&&) noexcept = default;
        IDataTemplateSelector& operator=(IDataTemplateSelector const&) & noexcept = default;
        IDataTemplateSelector& operator=(IDataTemplateSelector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateSelector2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateSelector2>
    {
        IDataTemplateSelector2(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateSelector2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateSelector2(IDataTemplateSelector2 const&) noexcept = default;
        IDataTemplateSelector2(IDataTemplateSelector2&&) noexcept = default;
        IDataTemplateSelector2& operator=(IDataTemplateSelector2 const&) & noexcept = default;
        IDataTemplateSelector2& operator=(IDataTemplateSelector2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateSelectorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateSelectorFactory>
    {
        IDataTemplateSelectorFactory(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateSelectorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateSelectorFactory(IDataTemplateSelectorFactory const&) noexcept = default;
        IDataTemplateSelectorFactory(IDataTemplateSelectorFactory&&) noexcept = default;
        IDataTemplateSelectorFactory& operator=(IDataTemplateSelectorFactory const&) & noexcept = default;
        IDataTemplateSelectorFactory& operator=(IDataTemplateSelectorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateSelectorOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateSelectorOverrides>
    {
        IDataTemplateSelectorOverrides(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateSelectorOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateSelectorOverrides(IDataTemplateSelectorOverrides const&) noexcept = default;
        IDataTemplateSelectorOverrides(IDataTemplateSelectorOverrides&&) noexcept = default;
        IDataTemplateSelectorOverrides& operator=(IDataTemplateSelectorOverrides const&) & noexcept = default;
        IDataTemplateSelectorOverrides& operator=(IDataTemplateSelectorOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDataTemplateSelectorOverrides2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateSelectorOverrides2>
    {
        IDataTemplateSelectorOverrides2(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateSelectorOverrides2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDataTemplateSelectorOverrides2(IDataTemplateSelectorOverrides2 const&) noexcept = default;
        IDataTemplateSelectorOverrides2(IDataTemplateSelectorOverrides2&&) noexcept = default;
        IDataTemplateSelectorOverrides2& operator=(IDataTemplateSelectorOverrides2 const&) & noexcept = default;
        IDataTemplateSelectorOverrides2& operator=(IDataTemplateSelectorOverrides2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickedEventArgs>
    {
        IDatePickedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDatePickedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickedEventArgs(IDatePickedEventArgs const&) noexcept = default;
        IDatePickedEventArgs(IDatePickedEventArgs&&) noexcept = default;
        IDatePickedEventArgs& operator=(IDatePickedEventArgs const&) & noexcept = default;
        IDatePickedEventArgs& operator=(IDatePickedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePicker>
    {
        IDatePicker(std::nullptr_t = nullptr) noexcept {}
        IDatePicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePicker(IDatePicker const&) noexcept = default;
        IDatePicker(IDatePicker&&) noexcept = default;
        IDatePicker& operator=(IDatePicker const&) & noexcept = default;
        IDatePicker& operator=(IDatePicker&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePicker2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePicker2>
    {
        IDatePicker2(std::nullptr_t = nullptr) noexcept {}
        IDatePicker2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePicker2(IDatePicker2 const&) noexcept = default;
        IDatePicker2(IDatePicker2&&) noexcept = default;
        IDatePicker2& operator=(IDatePicker2 const&) & noexcept = default;
        IDatePicker2& operator=(IDatePicker2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePicker3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePicker3>
    {
        IDatePicker3(std::nullptr_t = nullptr) noexcept {}
        IDatePicker3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePicker3(IDatePicker3 const&) noexcept = default;
        IDatePicker3(IDatePicker3&&) noexcept = default;
        IDatePicker3& operator=(IDatePicker3 const&) & noexcept = default;
        IDatePicker3& operator=(IDatePicker3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFactory>
    {
        IDatePickerFactory(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFactory(IDatePickerFactory const&) noexcept = default;
        IDatePickerFactory(IDatePickerFactory&&) noexcept = default;
        IDatePickerFactory& operator=(IDatePickerFactory const&) & noexcept = default;
        IDatePickerFactory& operator=(IDatePickerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyout>
    {
        IDatePickerFlyout(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFlyout(IDatePickerFlyout const&) noexcept = default;
        IDatePickerFlyout(IDatePickerFlyout&&) noexcept = default;
        IDatePickerFlyout& operator=(IDatePickerFlyout const&) & noexcept = default;
        IDatePickerFlyout& operator=(IDatePickerFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFlyout2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyout2>
    {
        IDatePickerFlyout2(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyout2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFlyout2(IDatePickerFlyout2 const&) noexcept = default;
        IDatePickerFlyout2(IDatePickerFlyout2&&) noexcept = default;
        IDatePickerFlyout2& operator=(IDatePickerFlyout2 const&) & noexcept = default;
        IDatePickerFlyout2& operator=(IDatePickerFlyout2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFlyoutItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutItem>
    {
        IDatePickerFlyoutItem(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFlyoutItem(IDatePickerFlyoutItem const&) noexcept = default;
        IDatePickerFlyoutItem(IDatePickerFlyoutItem&&) noexcept = default;
        IDatePickerFlyoutItem& operator=(IDatePickerFlyoutItem const&) & noexcept = default;
        IDatePickerFlyoutItem& operator=(IDatePickerFlyoutItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFlyoutItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutItemStatics>
    {
        IDatePickerFlyoutItemStatics(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFlyoutItemStatics(IDatePickerFlyoutItemStatics const&) noexcept = default;
        IDatePickerFlyoutItemStatics(IDatePickerFlyoutItemStatics&&) noexcept = default;
        IDatePickerFlyoutItemStatics& operator=(IDatePickerFlyoutItemStatics const&) & noexcept = default;
        IDatePickerFlyoutItemStatics& operator=(IDatePickerFlyoutItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutPresenter>
    {
        IDatePickerFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFlyoutPresenter(IDatePickerFlyoutPresenter const&) noexcept = default;
        IDatePickerFlyoutPresenter(IDatePickerFlyoutPresenter&&) noexcept = default;
        IDatePickerFlyoutPresenter& operator=(IDatePickerFlyoutPresenter const&) & noexcept = default;
        IDatePickerFlyoutPresenter& operator=(IDatePickerFlyoutPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFlyoutPresenter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutPresenter2>
    {
        IDatePickerFlyoutPresenter2(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutPresenter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFlyoutPresenter2(IDatePickerFlyoutPresenter2 const&) noexcept = default;
        IDatePickerFlyoutPresenter2(IDatePickerFlyoutPresenter2&&) noexcept = default;
        IDatePickerFlyoutPresenter2& operator=(IDatePickerFlyoutPresenter2 const&) & noexcept = default;
        IDatePickerFlyoutPresenter2& operator=(IDatePickerFlyoutPresenter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFlyoutPresenterStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutPresenterStatics2>
    {
        IDatePickerFlyoutPresenterStatics2(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutPresenterStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFlyoutPresenterStatics2(IDatePickerFlyoutPresenterStatics2 const&) noexcept = default;
        IDatePickerFlyoutPresenterStatics2(IDatePickerFlyoutPresenterStatics2&&) noexcept = default;
        IDatePickerFlyoutPresenterStatics2& operator=(IDatePickerFlyoutPresenterStatics2 const&) & noexcept = default;
        IDatePickerFlyoutPresenterStatics2& operator=(IDatePickerFlyoutPresenterStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutStatics>
    {
        IDatePickerFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFlyoutStatics(IDatePickerFlyoutStatics const&) noexcept = default;
        IDatePickerFlyoutStatics(IDatePickerFlyoutStatics&&) noexcept = default;
        IDatePickerFlyoutStatics& operator=(IDatePickerFlyoutStatics const&) & noexcept = default;
        IDatePickerFlyoutStatics& operator=(IDatePickerFlyoutStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerFlyoutStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutStatics2>
    {
        IDatePickerFlyoutStatics2(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerFlyoutStatics2(IDatePickerFlyoutStatics2 const&) noexcept = default;
        IDatePickerFlyoutStatics2(IDatePickerFlyoutStatics2&&) noexcept = default;
        IDatePickerFlyoutStatics2& operator=(IDatePickerFlyoutStatics2 const&) & noexcept = default;
        IDatePickerFlyoutStatics2& operator=(IDatePickerFlyoutStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerSelectedValueChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerSelectedValueChangedEventArgs>
    {
        IDatePickerSelectedValueChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDatePickerSelectedValueChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerSelectedValueChangedEventArgs(IDatePickerSelectedValueChangedEventArgs const&) noexcept = default;
        IDatePickerSelectedValueChangedEventArgs(IDatePickerSelectedValueChangedEventArgs&&) noexcept = default;
        IDatePickerSelectedValueChangedEventArgs& operator=(IDatePickerSelectedValueChangedEventArgs const&) & noexcept = default;
        IDatePickerSelectedValueChangedEventArgs& operator=(IDatePickerSelectedValueChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerStatics>
    {
        IDatePickerStatics(std::nullptr_t = nullptr) noexcept {}
        IDatePickerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerStatics(IDatePickerStatics const&) noexcept = default;
        IDatePickerStatics(IDatePickerStatics&&) noexcept = default;
        IDatePickerStatics& operator=(IDatePickerStatics const&) & noexcept = default;
        IDatePickerStatics& operator=(IDatePickerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerStatics2>
    {
        IDatePickerStatics2(std::nullptr_t = nullptr) noexcept {}
        IDatePickerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerStatics2(IDatePickerStatics2 const&) noexcept = default;
        IDatePickerStatics2(IDatePickerStatics2&&) noexcept = default;
        IDatePickerStatics2& operator=(IDatePickerStatics2 const&) & noexcept = default;
        IDatePickerStatics2& operator=(IDatePickerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerStatics3>
    {
        IDatePickerStatics3(std::nullptr_t = nullptr) noexcept {}
        IDatePickerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerStatics3(IDatePickerStatics3 const&) noexcept = default;
        IDatePickerStatics3(IDatePickerStatics3&&) noexcept = default;
        IDatePickerStatics3& operator=(IDatePickerStatics3 const&) & noexcept = default;
        IDatePickerStatics3& operator=(IDatePickerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDatePickerValueChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerValueChangedEventArgs>
    {
        IDatePickerValueChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDatePickerValueChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDatePickerValueChangedEventArgs(IDatePickerValueChangedEventArgs const&) noexcept = default;
        IDatePickerValueChangedEventArgs(IDatePickerValueChangedEventArgs&&) noexcept = default;
        IDatePickerValueChangedEventArgs& operator=(IDatePickerValueChangedEventArgs const&) & noexcept = default;
        IDatePickerValueChangedEventArgs& operator=(IDatePickerValueChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragItemsCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragItemsCompletedEventArgs>
    {
        IDragItemsCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDragItemsCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragItemsCompletedEventArgs(IDragItemsCompletedEventArgs const&) noexcept = default;
        IDragItemsCompletedEventArgs(IDragItemsCompletedEventArgs&&) noexcept = default;
        IDragItemsCompletedEventArgs& operator=(IDragItemsCompletedEventArgs const&) & noexcept = default;
        IDragItemsCompletedEventArgs& operator=(IDragItemsCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragItemsStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragItemsStartingEventArgs>
    {
        IDragItemsStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDragItemsStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragItemsStartingEventArgs(IDragItemsStartingEventArgs const&) noexcept = default;
        IDragItemsStartingEventArgs(IDragItemsStartingEventArgs&&) noexcept = default;
        IDragItemsStartingEventArgs& operator=(IDragItemsStartingEventArgs const&) & noexcept = default;
        IDragItemsStartingEventArgs& operator=(IDragItemsStartingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDropDownButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropDownButton>
    {
        IDropDownButton(std::nullptr_t = nullptr) noexcept {}
        IDropDownButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDropDownButton(IDropDownButton const&) noexcept = default;
        IDropDownButton(IDropDownButton&&) noexcept = default;
        IDropDownButton& operator=(IDropDownButton const&) & noexcept = default;
        IDropDownButton& operator=(IDropDownButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDropDownButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropDownButtonAutomationPeer>
    {
        IDropDownButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IDropDownButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDropDownButtonAutomationPeer(IDropDownButtonAutomationPeer const&) noexcept = default;
        IDropDownButtonAutomationPeer(IDropDownButtonAutomationPeer&&) noexcept = default;
        IDropDownButtonAutomationPeer& operator=(IDropDownButtonAutomationPeer const&) & noexcept = default;
        IDropDownButtonAutomationPeer& operator=(IDropDownButtonAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDropDownButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropDownButtonAutomationPeerFactory>
    {
        IDropDownButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IDropDownButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDropDownButtonAutomationPeerFactory(IDropDownButtonAutomationPeerFactory const&) noexcept = default;
        IDropDownButtonAutomationPeerFactory(IDropDownButtonAutomationPeerFactory&&) noexcept = default;
        IDropDownButtonAutomationPeerFactory& operator=(IDropDownButtonAutomationPeerFactory const&) & noexcept = default;
        IDropDownButtonAutomationPeerFactory& operator=(IDropDownButtonAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDropDownButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropDownButtonFactory>
    {
        IDropDownButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IDropDownButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDropDownButtonFactory(IDropDownButtonFactory const&) noexcept = default;
        IDropDownButtonFactory(IDropDownButtonFactory&&) noexcept = default;
        IDropDownButtonFactory& operator=(IDropDownButtonFactory const&) & noexcept = default;
        IDropDownButtonFactory& operator=(IDropDownButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDynamicOverflowItemsChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDynamicOverflowItemsChangingEventArgs>
    {
        IDynamicOverflowItemsChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDynamicOverflowItemsChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDynamicOverflowItemsChangingEventArgs(IDynamicOverflowItemsChangingEventArgs const&) noexcept = default;
        IDynamicOverflowItemsChangingEventArgs(IDynamicOverflowItemsChangingEventArgs&&) noexcept = default;
        IDynamicOverflowItemsChangingEventArgs& operator=(IDynamicOverflowItemsChangingEventArgs const&) & noexcept = default;
        IDynamicOverflowItemsChangingEventArgs& operator=(IDynamicOverflowItemsChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipView>
    {
        IFlipView(std::nullptr_t = nullptr) noexcept {}
        IFlipView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipView(IFlipView const&) noexcept = default;
        IFlipView(IFlipView&&) noexcept = default;
        IFlipView& operator=(IFlipView const&) & noexcept = default;
        IFlipView& operator=(IFlipView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipView2>
    {
        IFlipView2(std::nullptr_t = nullptr) noexcept {}
        IFlipView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipView2(IFlipView2 const&) noexcept = default;
        IFlipView2(IFlipView2&&) noexcept = default;
        IFlipView2& operator=(IFlipView2 const&) & noexcept = default;
        IFlipView2& operator=(IFlipView2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewFactory>
    {
        IFlipViewFactory(std::nullptr_t = nullptr) noexcept {}
        IFlipViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipViewFactory(IFlipViewFactory const&) noexcept = default;
        IFlipViewFactory(IFlipViewFactory&&) noexcept = default;
        IFlipViewFactory& operator=(IFlipViewFactory const&) & noexcept = default;
        IFlipViewFactory& operator=(IFlipViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItem>
    {
        IFlipViewItem(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipViewItem(IFlipViewItem const&) noexcept = default;
        IFlipViewItem(IFlipViewItem&&) noexcept = default;
        IFlipViewItem& operator=(IFlipViewItem const&) & noexcept = default;
        IFlipViewItem& operator=(IFlipViewItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItemFactory>
    {
        IFlipViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipViewItemFactory(IFlipViewItemFactory const&) noexcept = default;
        IFlipViewItemFactory(IFlipViewItemFactory&&) noexcept = default;
        IFlipViewItemFactory& operator=(IFlipViewItemFactory const&) & noexcept = default;
        IFlipViewItemFactory& operator=(IFlipViewItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlipViewStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewStatics2>
    {
        IFlipViewStatics2(std::nullptr_t = nullptr) noexcept {}
        IFlipViewStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlipViewStatics2(IFlipViewStatics2 const&) noexcept = default;
        IFlipViewStatics2(IFlipViewStatics2&&) noexcept = default;
        IFlipViewStatics2& operator=(IFlipViewStatics2 const&) & noexcept = default;
        IFlipViewStatics2& operator=(IFlipViewStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyout>
    {
        IFlyout(std::nullptr_t = nullptr) noexcept {}
        IFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyout(IFlyout const&) noexcept = default;
        IFlyout(IFlyout&&) noexcept = default;
        IFlyout& operator=(IFlyout const&) & noexcept = default;
        IFlyout& operator=(IFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutFactory>
    {
        IFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        IFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutFactory(IFlyoutFactory const&) noexcept = default;
        IFlyoutFactory(IFlyoutFactory&&) noexcept = default;
        IFlyoutFactory& operator=(IFlyoutFactory const&) & noexcept = default;
        IFlyoutFactory& operator=(IFlyoutFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenter>
    {
        IFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutPresenter(IFlyoutPresenter const&) noexcept = default;
        IFlyoutPresenter(IFlyoutPresenter&&) noexcept = default;
        IFlyoutPresenter& operator=(IFlyoutPresenter const&) & noexcept = default;
        IFlyoutPresenter& operator=(IFlyoutPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutPresenter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenter2>
    {
        IFlyoutPresenter2(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutPresenter2(IFlyoutPresenter2 const&) noexcept = default;
        IFlyoutPresenter2(IFlyoutPresenter2&&) noexcept = default;
        IFlyoutPresenter2& operator=(IFlyoutPresenter2 const&) & noexcept = default;
        IFlyoutPresenter2& operator=(IFlyoutPresenter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenterFactory>
    {
        IFlyoutPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutPresenterFactory(IFlyoutPresenterFactory const&) noexcept = default;
        IFlyoutPresenterFactory(IFlyoutPresenterFactory&&) noexcept = default;
        IFlyoutPresenterFactory& operator=(IFlyoutPresenterFactory const&) & noexcept = default;
        IFlyoutPresenterFactory& operator=(IFlyoutPresenterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutPresenterStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenterStatics2>
    {
        IFlyoutPresenterStatics2(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenterStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutPresenterStatics2(IFlyoutPresenterStatics2 const&) noexcept = default;
        IFlyoutPresenterStatics2(IFlyoutPresenterStatics2&&) noexcept = default;
        IFlyoutPresenterStatics2& operator=(IFlyoutPresenterStatics2 const&) & noexcept = default;
        IFlyoutPresenterStatics2& operator=(IFlyoutPresenterStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutStatics>
    {
        IFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        IFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFlyoutStatics(IFlyoutStatics const&) noexcept = default;
        IFlyoutStatics(IFlyoutStatics&&) noexcept = default;
        IFlyoutStatics& operator=(IFlyoutStatics const&) & noexcept = default;
        IFlyoutStatics& operator=(IFlyoutStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusDisengagedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusDisengagedEventArgs>
    {
        IFocusDisengagedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IFocusDisengagedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusDisengagedEventArgs(IFocusDisengagedEventArgs const&) noexcept = default;
        IFocusDisengagedEventArgs(IFocusDisengagedEventArgs&&) noexcept = default;
        IFocusDisengagedEventArgs& operator=(IFocusDisengagedEventArgs const&) & noexcept = default;
        IFocusDisengagedEventArgs& operator=(IFocusDisengagedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusEngagedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusEngagedEventArgs>
    {
        IFocusEngagedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IFocusEngagedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusEngagedEventArgs(IFocusEngagedEventArgs const&) noexcept = default;
        IFocusEngagedEventArgs(IFocusEngagedEventArgs&&) noexcept = default;
        IFocusEngagedEventArgs& operator=(IFocusEngagedEventArgs const&) & noexcept = default;
        IFocusEngagedEventArgs& operator=(IFocusEngagedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusEngagedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusEngagedEventArgs2>
    {
        IFocusEngagedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IFocusEngagedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusEngagedEventArgs2(IFocusEngagedEventArgs2 const&) noexcept = default;
        IFocusEngagedEventArgs2(IFocusEngagedEventArgs2&&) noexcept = default;
        IFocusEngagedEventArgs2& operator=(IFocusEngagedEventArgs2 const&) & noexcept = default;
        IFocusEngagedEventArgs2& operator=(IFocusEngagedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIcon>
    {
        IFontIcon(std::nullptr_t = nullptr) noexcept {}
        IFontIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontIcon(IFontIcon const&) noexcept = default;
        IFontIcon(IFontIcon&&) noexcept = default;
        IFontIcon& operator=(IFontIcon const&) & noexcept = default;
        IFontIcon& operator=(IFontIcon&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontIcon2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIcon2>
    {
        IFontIcon2(std::nullptr_t = nullptr) noexcept {}
        IFontIcon2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontIcon2(IFontIcon2 const&) noexcept = default;
        IFontIcon2(IFontIcon2&&) noexcept = default;
        IFontIcon2& operator=(IFontIcon2 const&) & noexcept = default;
        IFontIcon2& operator=(IFontIcon2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontIcon3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIcon3>
    {
        IFontIcon3(std::nullptr_t = nullptr) noexcept {}
        IFontIcon3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontIcon3(IFontIcon3 const&) noexcept = default;
        IFontIcon3(IFontIcon3&&) noexcept = default;
        IFontIcon3& operator=(IFontIcon3 const&) & noexcept = default;
        IFontIcon3& operator=(IFontIcon3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontIconFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconFactory>
    {
        IFontIconFactory(std::nullptr_t = nullptr) noexcept {}
        IFontIconFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontIconFactory(IFontIconFactory const&) noexcept = default;
        IFontIconFactory(IFontIconFactory&&) noexcept = default;
        IFontIconFactory& operator=(IFontIconFactory const&) & noexcept = default;
        IFontIconFactory& operator=(IFontIconFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconSource>
    {
        IFontIconSource(std::nullptr_t = nullptr) noexcept {}
        IFontIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontIconSource(IFontIconSource const&) noexcept = default;
        IFontIconSource(IFontIconSource&&) noexcept = default;
        IFontIconSource& operator=(IFontIconSource const&) & noexcept = default;
        IFontIconSource& operator=(IFontIconSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconSourceFactory>
    {
        IFontIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IFontIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontIconSourceFactory(IFontIconSourceFactory const&) noexcept = default;
        IFontIconSourceFactory(IFontIconSourceFactory&&) noexcept = default;
        IFontIconSourceFactory& operator=(IFontIconSourceFactory const&) & noexcept = default;
        IFontIconSourceFactory& operator=(IFontIconSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconSourceStatics>
    {
        IFontIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IFontIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontIconSourceStatics(IFontIconSourceStatics const&) noexcept = default;
        IFontIconSourceStatics(IFontIconSourceStatics&&) noexcept = default;
        IFontIconSourceStatics& operator=(IFontIconSourceStatics const&) & noexcept = default;
        IFontIconSourceStatics& operator=(IFontIconSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconStatics>
    {
        IFontIconStatics(std::nullptr_t = nullptr) noexcept {}
        IFontIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontIconStatics(IFontIconStatics const&) noexcept = default;
        IFontIconStatics(IFontIconStatics&&) noexcept = default;
        IFontIconStatics& operator=(IFontIconStatics const&) & noexcept = default;
        IFontIconStatics& operator=(IFontIconStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontIconStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconStatics2>
    {
        IFontIconStatics2(std::nullptr_t = nullptr) noexcept {}
        IFontIconStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontIconStatics2(IFontIconStatics2 const&) noexcept = default;
        IFontIconStatics2(IFontIconStatics2&&) noexcept = default;
        IFontIconStatics2& operator=(IFontIconStatics2 const&) & noexcept = default;
        IFontIconStatics2& operator=(IFontIconStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFontIconStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconStatics3>
    {
        IFontIconStatics3(std::nullptr_t = nullptr) noexcept {}
        IFontIconStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFontIconStatics3(IFontIconStatics3 const&) noexcept = default;
        IFontIconStatics3(IFontIconStatics3&&) noexcept = default;
        IFontIconStatics3& operator=(IFontIconStatics3 const&) & noexcept = default;
        IFontIconStatics3& operator=(IFontIconStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrame>
    {
        IFrame(std::nullptr_t = nullptr) noexcept {}
        IFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrame(IFrame const&) noexcept = default;
        IFrame(IFrame&&) noexcept = default;
        IFrame& operator=(IFrame const&) & noexcept = default;
        IFrame& operator=(IFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrame2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrame2>
    {
        IFrame2(std::nullptr_t = nullptr) noexcept {}
        IFrame2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrame2(IFrame2 const&) noexcept = default;
        IFrame2(IFrame2&&) noexcept = default;
        IFrame2& operator=(IFrame2 const&) & noexcept = default;
        IFrame2& operator=(IFrame2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrame3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrame3>
    {
        IFrame3(std::nullptr_t = nullptr) noexcept {}
        IFrame3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrame3(IFrame3 const&) noexcept = default;
        IFrame3(IFrame3&&) noexcept = default;
        IFrame3& operator=(IFrame3 const&) & noexcept = default;
        IFrame3& operator=(IFrame3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrame4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrame4>
    {
        IFrame4(std::nullptr_t = nullptr) noexcept {}
        IFrame4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrame4(IFrame4 const&) noexcept = default;
        IFrame4(IFrame4&&) noexcept = default;
        IFrame4& operator=(IFrame4 const&) & noexcept = default;
        IFrame4& operator=(IFrame4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrame5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrame5>
    {
        IFrame5(std::nullptr_t = nullptr) noexcept {}
        IFrame5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrame5(IFrame5 const&) noexcept = default;
        IFrame5(IFrame5&&) noexcept = default;
        IFrame5& operator=(IFrame5 const&) & noexcept = default;
        IFrame5& operator=(IFrame5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameFactory>
    {
        IFrameFactory(std::nullptr_t = nullptr) noexcept {}
        IFrameFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameFactory(IFrameFactory const&) noexcept = default;
        IFrameFactory(IFrameFactory&&) noexcept = default;
        IFrameFactory& operator=(IFrameFactory const&) & noexcept = default;
        IFrameFactory& operator=(IFrameFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameStatics>
    {
        IFrameStatics(std::nullptr_t = nullptr) noexcept {}
        IFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameStatics(IFrameStatics const&) noexcept = default;
        IFrameStatics(IFrameStatics&&) noexcept = default;
        IFrameStatics& operator=(IFrameStatics const&) & noexcept = default;
        IFrameStatics& operator=(IFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameStatics2>
    {
        IFrameStatics2(std::nullptr_t = nullptr) noexcept {}
        IFrameStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameStatics2(IFrameStatics2 const&) noexcept = default;
        IFrameStatics2(IFrameStatics2&&) noexcept = default;
        IFrameStatics2& operator=(IFrameStatics2 const&) & noexcept = default;
        IFrameStatics2& operator=(IFrameStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameStatics5>
    {
        IFrameStatics5(std::nullptr_t = nullptr) noexcept {}
        IFrameStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameStatics5(IFrameStatics5 const&) noexcept = default;
        IFrameStatics5(IFrameStatics5&&) noexcept = default;
        IFrameStatics5& operator=(IFrameStatics5 const&) & noexcept = default;
        IFrameStatics5& operator=(IFrameStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGrid :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGrid>
    {
        IGrid(std::nullptr_t = nullptr) noexcept {}
        IGrid(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGrid(IGrid const&) noexcept = default;
        IGrid(IGrid&&) noexcept = default;
        IGrid& operator=(IGrid const&) & noexcept = default;
        IGrid& operator=(IGrid&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGrid2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGrid2>
    {
        IGrid2(std::nullptr_t = nullptr) noexcept {}
        IGrid2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGrid2(IGrid2 const&) noexcept = default;
        IGrid2(IGrid2&&) noexcept = default;
        IGrid2& operator=(IGrid2 const&) & noexcept = default;
        IGrid2& operator=(IGrid2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGrid3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGrid3>
    {
        IGrid3(std::nullptr_t = nullptr) noexcept {}
        IGrid3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGrid3(IGrid3 const&) noexcept = default;
        IGrid3(IGrid3&&) noexcept = default;
        IGrid3& operator=(IGrid3 const&) & noexcept = default;
        IGrid3& operator=(IGrid3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGrid4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGrid4>
    {
        IGrid4(std::nullptr_t = nullptr) noexcept {}
        IGrid4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGrid4(IGrid4 const&) noexcept = default;
        IGrid4(IGrid4&&) noexcept = default;
        IGrid4& operator=(IGrid4 const&) & noexcept = default;
        IGrid4& operator=(IGrid4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridFactory>
    {
        IGridFactory(std::nullptr_t = nullptr) noexcept {}
        IGridFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridFactory(IGridFactory const&) noexcept = default;
        IGridFactory(IGridFactory&&) noexcept = default;
        IGridFactory& operator=(IGridFactory const&) & noexcept = default;
        IGridFactory& operator=(IGridFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridStatics>
    {
        IGridStatics(std::nullptr_t = nullptr) noexcept {}
        IGridStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridStatics(IGridStatics const&) noexcept = default;
        IGridStatics(IGridStatics&&) noexcept = default;
        IGridStatics& operator=(IGridStatics const&) & noexcept = default;
        IGridStatics& operator=(IGridStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridStatics2>
    {
        IGridStatics2(std::nullptr_t = nullptr) noexcept {}
        IGridStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridStatics2(IGridStatics2 const&) noexcept = default;
        IGridStatics2(IGridStatics2&&) noexcept = default;
        IGridStatics2& operator=(IGridStatics2 const&) & noexcept = default;
        IGridStatics2& operator=(IGridStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridStatics3>
    {
        IGridStatics3(std::nullptr_t = nullptr) noexcept {}
        IGridStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridStatics3(IGridStatics3 const&) noexcept = default;
        IGridStatics3(IGridStatics3&&) noexcept = default;
        IGridStatics3& operator=(IGridStatics3 const&) & noexcept = default;
        IGridStatics3& operator=(IGridStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridStatics4>
    {
        IGridStatics4(std::nullptr_t = nullptr) noexcept {}
        IGridStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridStatics4(IGridStatics4 const&) noexcept = default;
        IGridStatics4(IGridStatics4&&) noexcept = default;
        IGridStatics4& operator=(IGridStatics4 const&) & noexcept = default;
        IGridStatics4& operator=(IGridStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridView>
    {
        IGridView(std::nullptr_t = nullptr) noexcept {}
        IGridView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridView(IGridView const&) noexcept = default;
        IGridView(IGridView&&) noexcept = default;
        IGridView& operator=(IGridView const&) & noexcept = default;
        IGridView& operator=(IGridView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewFactory>
    {
        IGridViewFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewFactory(IGridViewFactory const&) noexcept = default;
        IGridViewFactory(IGridViewFactory&&) noexcept = default;
        IGridViewFactory& operator=(IGridViewFactory const&) & noexcept = default;
        IGridViewFactory& operator=(IGridViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewHeaderItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewHeaderItem>
    {
        IGridViewHeaderItem(std::nullptr_t = nullptr) noexcept {}
        IGridViewHeaderItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewHeaderItem(IGridViewHeaderItem const&) noexcept = default;
        IGridViewHeaderItem(IGridViewHeaderItem&&) noexcept = default;
        IGridViewHeaderItem& operator=(IGridViewHeaderItem const&) & noexcept = default;
        IGridViewHeaderItem& operator=(IGridViewHeaderItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewHeaderItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewHeaderItemFactory>
    {
        IGridViewHeaderItemFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewHeaderItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewHeaderItemFactory(IGridViewHeaderItemFactory const&) noexcept = default;
        IGridViewHeaderItemFactory(IGridViewHeaderItemFactory&&) noexcept = default;
        IGridViewHeaderItemFactory& operator=(IGridViewHeaderItemFactory const&) & noexcept = default;
        IGridViewHeaderItemFactory& operator=(IGridViewHeaderItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItem>
    {
        IGridViewItem(std::nullptr_t = nullptr) noexcept {}
        IGridViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewItem(IGridViewItem const&) noexcept = default;
        IGridViewItem(IGridViewItem&&) noexcept = default;
        IGridViewItem& operator=(IGridViewItem const&) & noexcept = default;
        IGridViewItem& operator=(IGridViewItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGridViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemFactory>
    {
        IGridViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGridViewItemFactory(IGridViewItemFactory const&) noexcept = default;
        IGridViewItemFactory(IGridViewItemFactory&&) noexcept = default;
        IGridViewItemFactory& operator=(IGridViewItemFactory const&) & noexcept = default;
        IGridViewItemFactory& operator=(IGridViewItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGroupItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupItem>
    {
        IGroupItem(std::nullptr_t = nullptr) noexcept {}
        IGroupItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGroupItem(IGroupItem const&) noexcept = default;
        IGroupItem(IGroupItem&&) noexcept = default;
        IGroupItem& operator=(IGroupItem const&) & noexcept = default;
        IGroupItem& operator=(IGroupItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGroupItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupItemFactory>
    {
        IGroupItemFactory(std::nullptr_t = nullptr) noexcept {}
        IGroupItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGroupItemFactory(IGroupItemFactory const&) noexcept = default;
        IGroupItemFactory(IGroupItemFactory&&) noexcept = default;
        IGroupItemFactory& operator=(IGroupItemFactory const&) & noexcept = default;
        IGroupItemFactory& operator=(IGroupItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGroupStyle :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyle>
    {
        IGroupStyle(std::nullptr_t = nullptr) noexcept {}
        IGroupStyle(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGroupStyle(IGroupStyle const&) noexcept = default;
        IGroupStyle(IGroupStyle&&) noexcept = default;
        IGroupStyle& operator=(IGroupStyle const&) & noexcept = default;
        IGroupStyle& operator=(IGroupStyle&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGroupStyle2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyle2>
    {
        IGroupStyle2(std::nullptr_t = nullptr) noexcept {}
        IGroupStyle2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGroupStyle2(IGroupStyle2 const&) noexcept = default;
        IGroupStyle2(IGroupStyle2&&) noexcept = default;
        IGroupStyle2& operator=(IGroupStyle2 const&) & noexcept = default;
        IGroupStyle2& operator=(IGroupStyle2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGroupStyleFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyleFactory>
    {
        IGroupStyleFactory(std::nullptr_t = nullptr) noexcept {}
        IGroupStyleFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGroupStyleFactory(IGroupStyleFactory const&) noexcept = default;
        IGroupStyleFactory(IGroupStyleFactory&&) noexcept = default;
        IGroupStyleFactory& operator=(IGroupStyleFactory const&) & noexcept = default;
        IGroupStyleFactory& operator=(IGroupStyleFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGroupStyleSelector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyleSelector>
    {
        IGroupStyleSelector(std::nullptr_t = nullptr) noexcept {}
        IGroupStyleSelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGroupStyleSelector(IGroupStyleSelector const&) noexcept = default;
        IGroupStyleSelector(IGroupStyleSelector&&) noexcept = default;
        IGroupStyleSelector& operator=(IGroupStyleSelector const&) & noexcept = default;
        IGroupStyleSelector& operator=(IGroupStyleSelector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGroupStyleSelectorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyleSelectorFactory>
    {
        IGroupStyleSelectorFactory(std::nullptr_t = nullptr) noexcept {}
        IGroupStyleSelectorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGroupStyleSelectorFactory(IGroupStyleSelectorFactory const&) noexcept = default;
        IGroupStyleSelectorFactory(IGroupStyleSelectorFactory&&) noexcept = default;
        IGroupStyleSelectorFactory& operator=(IGroupStyleSelectorFactory const&) & noexcept = default;
        IGroupStyleSelectorFactory& operator=(IGroupStyleSelectorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGroupStyleSelectorOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyleSelectorOverrides>
    {
        IGroupStyleSelectorOverrides(std::nullptr_t = nullptr) noexcept {}
        IGroupStyleSelectorOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGroupStyleSelectorOverrides(IGroupStyleSelectorOverrides const&) noexcept = default;
        IGroupStyleSelectorOverrides(IGroupStyleSelectorOverrides&&) noexcept = default;
        IGroupStyleSelectorOverrides& operator=(IGroupStyleSelectorOverrides const&) & noexcept = default;
        IGroupStyleSelectorOverrides& operator=(IGroupStyleSelectorOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHandwritingPanelClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHandwritingPanelClosedEventArgs>
    {
        IHandwritingPanelClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHandwritingPanelClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHandwritingPanelClosedEventArgs(IHandwritingPanelClosedEventArgs const&) noexcept = default;
        IHandwritingPanelClosedEventArgs(IHandwritingPanelClosedEventArgs&&) noexcept = default;
        IHandwritingPanelClosedEventArgs& operator=(IHandwritingPanelClosedEventArgs const&) & noexcept = default;
        IHandwritingPanelClosedEventArgs& operator=(IHandwritingPanelClosedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHandwritingPanelOpenedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHandwritingPanelOpenedEventArgs>
    {
        IHandwritingPanelOpenedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHandwritingPanelOpenedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHandwritingPanelOpenedEventArgs(IHandwritingPanelOpenedEventArgs const&) noexcept = default;
        IHandwritingPanelOpenedEventArgs(IHandwritingPanelOpenedEventArgs&&) noexcept = default;
        IHandwritingPanelOpenedEventArgs& operator=(IHandwritingPanelOpenedEventArgs const&) & noexcept = default;
        IHandwritingPanelOpenedEventArgs& operator=(IHandwritingPanelOpenedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHandwritingView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHandwritingView>
    {
        IHandwritingView(std::nullptr_t = nullptr) noexcept {}
        IHandwritingView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHandwritingView(IHandwritingView const&) noexcept = default;
        IHandwritingView(IHandwritingView&&) noexcept = default;
        IHandwritingView& operator=(IHandwritingView const&) & noexcept = default;
        IHandwritingView& operator=(IHandwritingView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHandwritingViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHandwritingViewFactory>
    {
        IHandwritingViewFactory(std::nullptr_t = nullptr) noexcept {}
        IHandwritingViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHandwritingViewFactory(IHandwritingViewFactory const&) noexcept = default;
        IHandwritingViewFactory(IHandwritingViewFactory&&) noexcept = default;
        IHandwritingViewFactory& operator=(IHandwritingViewFactory const&) & noexcept = default;
        IHandwritingViewFactory& operator=(IHandwritingViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHandwritingViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHandwritingViewStatics>
    {
        IHandwritingViewStatics(std::nullptr_t = nullptr) noexcept {}
        IHandwritingViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHandwritingViewStatics(IHandwritingViewStatics const&) noexcept = default;
        IHandwritingViewStatics(IHandwritingViewStatics&&) noexcept = default;
        IHandwritingViewStatics& operator=(IHandwritingViewStatics const&) & noexcept = default;
        IHandwritingViewStatics& operator=(IHandwritingViewStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHub :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHub>
    {
        IHub(std::nullptr_t = nullptr) noexcept {}
        IHub(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHub(IHub const&) noexcept = default;
        IHub(IHub&&) noexcept = default;
        IHub& operator=(IHub const&) & noexcept = default;
        IHub& operator=(IHub&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHubFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubFactory>
    {
        IHubFactory(std::nullptr_t = nullptr) noexcept {}
        IHubFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHubFactory(IHubFactory const&) noexcept = default;
        IHubFactory(IHubFactory&&) noexcept = default;
        IHubFactory& operator=(IHubFactory const&) & noexcept = default;
        IHubFactory& operator=(IHubFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHubSection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSection>
    {
        IHubSection(std::nullptr_t = nullptr) noexcept {}
        IHubSection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHubSection(IHubSection const&) noexcept = default;
        IHubSection(IHubSection&&) noexcept = default;
        IHubSection& operator=(IHubSection const&) & noexcept = default;
        IHubSection& operator=(IHubSection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHubSectionFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSectionFactory>
    {
        IHubSectionFactory(std::nullptr_t = nullptr) noexcept {}
        IHubSectionFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHubSectionFactory(IHubSectionFactory const&) noexcept = default;
        IHubSectionFactory(IHubSectionFactory&&) noexcept = default;
        IHubSectionFactory& operator=(IHubSectionFactory const&) & noexcept = default;
        IHubSectionFactory& operator=(IHubSectionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHubSectionHeaderClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSectionHeaderClickEventArgs>
    {
        IHubSectionHeaderClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHubSectionHeaderClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHubSectionHeaderClickEventArgs(IHubSectionHeaderClickEventArgs const&) noexcept = default;
        IHubSectionHeaderClickEventArgs(IHubSectionHeaderClickEventArgs&&) noexcept = default;
        IHubSectionHeaderClickEventArgs& operator=(IHubSectionHeaderClickEventArgs const&) & noexcept = default;
        IHubSectionHeaderClickEventArgs& operator=(IHubSectionHeaderClickEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHubSectionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSectionStatics>
    {
        IHubSectionStatics(std::nullptr_t = nullptr) noexcept {}
        IHubSectionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHubSectionStatics(IHubSectionStatics const&) noexcept = default;
        IHubSectionStatics(IHubSectionStatics&&) noexcept = default;
        IHubSectionStatics& operator=(IHubSectionStatics const&) & noexcept = default;
        IHubSectionStatics& operator=(IHubSectionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHubStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubStatics>
    {
        IHubStatics(std::nullptr_t = nullptr) noexcept {}
        IHubStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHubStatics(IHubStatics const&) noexcept = default;
        IHubStatics(IHubStatics&&) noexcept = default;
        IHubStatics& operator=(IHubStatics const&) & noexcept = default;
        IHubStatics& operator=(IHubStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkButton>
    {
        IHyperlinkButton(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkButton(IHyperlinkButton const&) noexcept = default;
        IHyperlinkButton(IHyperlinkButton&&) noexcept = default;
        IHyperlinkButton& operator=(IHyperlinkButton const&) & noexcept = default;
        IHyperlinkButton& operator=(IHyperlinkButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkButtonFactory>
    {
        IHyperlinkButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkButtonFactory(IHyperlinkButtonFactory const&) noexcept = default;
        IHyperlinkButtonFactory(IHyperlinkButtonFactory&&) noexcept = default;
        IHyperlinkButtonFactory& operator=(IHyperlinkButtonFactory const&) & noexcept = default;
        IHyperlinkButtonFactory& operator=(IHyperlinkButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHyperlinkButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkButtonStatics>
    {
        IHyperlinkButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHyperlinkButtonStatics(IHyperlinkButtonStatics const&) noexcept = default;
        IHyperlinkButtonStatics(IHyperlinkButtonStatics&&) noexcept = default;
        IHyperlinkButtonStatics& operator=(IHyperlinkButtonStatics const&) & noexcept = default;
        IHyperlinkButtonStatics& operator=(IHyperlinkButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIconElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconElement>
    {
        IIconElement(std::nullptr_t = nullptr) noexcept {}
        IIconElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIconElement(IIconElement const&) noexcept = default;
        IIconElement(IIconElement&&) noexcept = default;
        IIconElement& operator=(IIconElement const&) & noexcept = default;
        IIconElement& operator=(IIconElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIconElementFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconElementFactory>
    {
        IIconElementFactory(std::nullptr_t = nullptr) noexcept {}
        IIconElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIconElementFactory(IIconElementFactory const&) noexcept = default;
        IIconElementFactory(IIconElementFactory&&) noexcept = default;
        IIconElementFactory& operator=(IIconElementFactory const&) & noexcept = default;
        IIconElementFactory& operator=(IIconElementFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIconElementStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconElementStatics>
    {
        IIconElementStatics(std::nullptr_t = nullptr) noexcept {}
        IIconElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIconElementStatics(IIconElementStatics const&) noexcept = default;
        IIconElementStatics(IIconElementStatics&&) noexcept = default;
        IIconElementStatics& operator=(IIconElementStatics const&) & noexcept = default;
        IIconElementStatics& operator=(IIconElementStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSource>
    {
        IIconSource(std::nullptr_t = nullptr) noexcept {}
        IIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIconSource(IIconSource const&) noexcept = default;
        IIconSource(IIconSource&&) noexcept = default;
        IIconSource& operator=(IIconSource const&) & noexcept = default;
        IIconSource& operator=(IIconSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIconSourceElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceElement>
    {
        IIconSourceElement(std::nullptr_t = nullptr) noexcept {}
        IIconSourceElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIconSourceElement(IIconSourceElement const&) noexcept = default;
        IIconSourceElement(IIconSourceElement&&) noexcept = default;
        IIconSourceElement& operator=(IIconSourceElement const&) & noexcept = default;
        IIconSourceElement& operator=(IIconSourceElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIconSourceElementFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceElementFactory>
    {
        IIconSourceElementFactory(std::nullptr_t = nullptr) noexcept {}
        IIconSourceElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIconSourceElementFactory(IIconSourceElementFactory const&) noexcept = default;
        IIconSourceElementFactory(IIconSourceElementFactory&&) noexcept = default;
        IIconSourceElementFactory& operator=(IIconSourceElementFactory const&) & noexcept = default;
        IIconSourceElementFactory& operator=(IIconSourceElementFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIconSourceElementStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceElementStatics>
    {
        IIconSourceElementStatics(std::nullptr_t = nullptr) noexcept {}
        IIconSourceElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIconSourceElementStatics(IIconSourceElementStatics const&) noexcept = default;
        IIconSourceElementStatics(IIconSourceElementStatics&&) noexcept = default;
        IIconSourceElementStatics& operator=(IIconSourceElementStatics const&) & noexcept = default;
        IIconSourceElementStatics& operator=(IIconSourceElementStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceFactory>
    {
        IIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIconSourceFactory(IIconSourceFactory const&) noexcept = default;
        IIconSourceFactory(IIconSourceFactory&&) noexcept = default;
        IIconSourceFactory& operator=(IIconSourceFactory const&) & noexcept = default;
        IIconSourceFactory& operator=(IIconSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceStatics>
    {
        IIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIconSourceStatics(IIconSourceStatics const&) noexcept = default;
        IIconSourceStatics(IIconSourceStatics&&) noexcept = default;
        IIconSourceStatics& operator=(IIconSourceStatics const&) & noexcept = default;
        IIconSourceStatics& operator=(IIconSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IImage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImage>
    {
        IImage(std::nullptr_t = nullptr) noexcept {}
        IImage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImage(IImage const&) noexcept = default;
        IImage(IImage&&) noexcept = default;
        IImage& operator=(IImage const&) & noexcept = default;
        IImage& operator=(IImage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IImage2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImage2>
    {
        IImage2(std::nullptr_t = nullptr) noexcept {}
        IImage2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImage2(IImage2 const&) noexcept = default;
        IImage2(IImage2&&) noexcept = default;
        IImage2& operator=(IImage2 const&) & noexcept = default;
        IImage2& operator=(IImage2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IImage3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImage3>
    {
        IImage3(std::nullptr_t = nullptr) noexcept {}
        IImage3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImage3(IImage3 const&) noexcept = default;
        IImage3(IImage3&&) noexcept = default;
        IImage3& operator=(IImage3 const&) & noexcept = default;
        IImage3& operator=(IImage3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IImageStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageStatics>
    {
        IImageStatics(std::nullptr_t = nullptr) noexcept {}
        IImageStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IImageStatics(IImageStatics const&) noexcept = default;
        IImageStatics(IImageStatics&&) noexcept = default;
        IImageStatics& operator=(IImageStatics const&) & noexcept = default;
        IImageStatics& operator=(IImageStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkCanvas :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkCanvas>
    {
        IInkCanvas(std::nullptr_t = nullptr) noexcept {}
        IInkCanvas(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkCanvas(IInkCanvas const&) noexcept = default;
        IInkCanvas(IInkCanvas&&) noexcept = default;
        IInkCanvas& operator=(IInkCanvas const&) & noexcept = default;
        IInkCanvas& operator=(IInkCanvas&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkCanvasFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkCanvasFactory>
    {
        IInkCanvasFactory(std::nullptr_t = nullptr) noexcept {}
        IInkCanvasFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkCanvasFactory(IInkCanvasFactory const&) noexcept = default;
        IInkCanvasFactory(IInkCanvasFactory&&) noexcept = default;
        IInkCanvasFactory& operator=(IInkCanvasFactory const&) & noexcept = default;
        IInkCanvasFactory& operator=(IInkCanvasFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbar>
    {
        IInkToolbar(std::nullptr_t = nullptr) noexcept {}
        IInkToolbar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbar(IInkToolbar const&) noexcept = default;
        IInkToolbar(IInkToolbar&&) noexcept = default;
        IInkToolbar& operator=(IInkToolbar const&) & noexcept = default;
        IInkToolbar& operator=(IInkToolbar&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbar2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbar2>
    {
        IInkToolbar2(std::nullptr_t = nullptr) noexcept {}
        IInkToolbar2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbar2(IInkToolbar2 const&) noexcept = default;
        IInkToolbar2(IInkToolbar2&&) noexcept = default;
        IInkToolbar2& operator=(IInkToolbar2 const&) & noexcept = default;
        IInkToolbar2& operator=(IInkToolbar2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbar3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbar3>
    {
        IInkToolbar3(std::nullptr_t = nullptr) noexcept {}
        IInkToolbar3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbar3(IInkToolbar3 const&) noexcept = default;
        IInkToolbar3(IInkToolbar3&&) noexcept = default;
        IInkToolbar3& operator=(IInkToolbar3 const&) & noexcept = default;
        IInkToolbar3& operator=(IInkToolbar3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarBallpointPenButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarBallpointPenButton>
    {
        IInkToolbarBallpointPenButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarBallpointPenButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarBallpointPenButton(IInkToolbarBallpointPenButton const&) noexcept = default;
        IInkToolbarBallpointPenButton(IInkToolbarBallpointPenButton&&) noexcept = default;
        IInkToolbarBallpointPenButton& operator=(IInkToolbarBallpointPenButton const&) & noexcept = default;
        IInkToolbarBallpointPenButton& operator=(IInkToolbarBallpointPenButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarBallpointPenButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarBallpointPenButtonFactory>
    {
        IInkToolbarBallpointPenButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarBallpointPenButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarBallpointPenButtonFactory(IInkToolbarBallpointPenButtonFactory const&) noexcept = default;
        IInkToolbarBallpointPenButtonFactory(IInkToolbarBallpointPenButtonFactory&&) noexcept = default;
        IInkToolbarBallpointPenButtonFactory& operator=(IInkToolbarBallpointPenButtonFactory const&) & noexcept = default;
        IInkToolbarBallpointPenButtonFactory& operator=(IInkToolbarBallpointPenButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomPen :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomPen>
    {
        IInkToolbarCustomPen(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomPen(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomPen(IInkToolbarCustomPen const&) noexcept = default;
        IInkToolbarCustomPen(IInkToolbarCustomPen&&) noexcept = default;
        IInkToolbarCustomPen& operator=(IInkToolbarCustomPen const&) & noexcept = default;
        IInkToolbarCustomPen& operator=(IInkToolbarCustomPen&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomPenButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomPenButton>
    {
        IInkToolbarCustomPenButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomPenButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomPenButton(IInkToolbarCustomPenButton const&) noexcept = default;
        IInkToolbarCustomPenButton(IInkToolbarCustomPenButton&&) noexcept = default;
        IInkToolbarCustomPenButton& operator=(IInkToolbarCustomPenButton const&) & noexcept = default;
        IInkToolbarCustomPenButton& operator=(IInkToolbarCustomPenButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomPenButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomPenButtonFactory>
    {
        IInkToolbarCustomPenButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomPenButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomPenButtonFactory(IInkToolbarCustomPenButtonFactory const&) noexcept = default;
        IInkToolbarCustomPenButtonFactory(IInkToolbarCustomPenButtonFactory&&) noexcept = default;
        IInkToolbarCustomPenButtonFactory& operator=(IInkToolbarCustomPenButtonFactory const&) & noexcept = default;
        IInkToolbarCustomPenButtonFactory& operator=(IInkToolbarCustomPenButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomPenButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomPenButtonStatics>
    {
        IInkToolbarCustomPenButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomPenButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomPenButtonStatics(IInkToolbarCustomPenButtonStatics const&) noexcept = default;
        IInkToolbarCustomPenButtonStatics(IInkToolbarCustomPenButtonStatics&&) noexcept = default;
        IInkToolbarCustomPenButtonStatics& operator=(IInkToolbarCustomPenButtonStatics const&) & noexcept = default;
        IInkToolbarCustomPenButtonStatics& operator=(IInkToolbarCustomPenButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomPenFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomPenFactory>
    {
        IInkToolbarCustomPenFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomPenFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomPenFactory(IInkToolbarCustomPenFactory const&) noexcept = default;
        IInkToolbarCustomPenFactory(IInkToolbarCustomPenFactory&&) noexcept = default;
        IInkToolbarCustomPenFactory& operator=(IInkToolbarCustomPenFactory const&) & noexcept = default;
        IInkToolbarCustomPenFactory& operator=(IInkToolbarCustomPenFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomPenOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomPenOverrides>
    {
        IInkToolbarCustomPenOverrides(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomPenOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomPenOverrides(IInkToolbarCustomPenOverrides const&) noexcept = default;
        IInkToolbarCustomPenOverrides(IInkToolbarCustomPenOverrides&&) noexcept = default;
        IInkToolbarCustomPenOverrides& operator=(IInkToolbarCustomPenOverrides const&) & noexcept = default;
        IInkToolbarCustomPenOverrides& operator=(IInkToolbarCustomPenOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomToggleButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomToggleButton>
    {
        IInkToolbarCustomToggleButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomToggleButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomToggleButton(IInkToolbarCustomToggleButton const&) noexcept = default;
        IInkToolbarCustomToggleButton(IInkToolbarCustomToggleButton&&) noexcept = default;
        IInkToolbarCustomToggleButton& operator=(IInkToolbarCustomToggleButton const&) & noexcept = default;
        IInkToolbarCustomToggleButton& operator=(IInkToolbarCustomToggleButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomToggleButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomToggleButtonFactory>
    {
        IInkToolbarCustomToggleButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomToggleButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomToggleButtonFactory(IInkToolbarCustomToggleButtonFactory const&) noexcept = default;
        IInkToolbarCustomToggleButtonFactory(IInkToolbarCustomToggleButtonFactory&&) noexcept = default;
        IInkToolbarCustomToggleButtonFactory& operator=(IInkToolbarCustomToggleButtonFactory const&) & noexcept = default;
        IInkToolbarCustomToggleButtonFactory& operator=(IInkToolbarCustomToggleButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomToolButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomToolButton>
    {
        IInkToolbarCustomToolButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomToolButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomToolButton(IInkToolbarCustomToolButton const&) noexcept = default;
        IInkToolbarCustomToolButton(IInkToolbarCustomToolButton&&) noexcept = default;
        IInkToolbarCustomToolButton& operator=(IInkToolbarCustomToolButton const&) & noexcept = default;
        IInkToolbarCustomToolButton& operator=(IInkToolbarCustomToolButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomToolButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomToolButtonFactory>
    {
        IInkToolbarCustomToolButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomToolButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomToolButtonFactory(IInkToolbarCustomToolButtonFactory const&) noexcept = default;
        IInkToolbarCustomToolButtonFactory(IInkToolbarCustomToolButtonFactory&&) noexcept = default;
        IInkToolbarCustomToolButtonFactory& operator=(IInkToolbarCustomToolButtonFactory const&) & noexcept = default;
        IInkToolbarCustomToolButtonFactory& operator=(IInkToolbarCustomToolButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarCustomToolButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarCustomToolButtonStatics>
    {
        IInkToolbarCustomToolButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarCustomToolButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarCustomToolButtonStatics(IInkToolbarCustomToolButtonStatics const&) noexcept = default;
        IInkToolbarCustomToolButtonStatics(IInkToolbarCustomToolButtonStatics&&) noexcept = default;
        IInkToolbarCustomToolButtonStatics& operator=(IInkToolbarCustomToolButtonStatics const&) & noexcept = default;
        IInkToolbarCustomToolButtonStatics& operator=(IInkToolbarCustomToolButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarEraserButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarEraserButton>
    {
        IInkToolbarEraserButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarEraserButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarEraserButton(IInkToolbarEraserButton const&) noexcept = default;
        IInkToolbarEraserButton(IInkToolbarEraserButton&&) noexcept = default;
        IInkToolbarEraserButton& operator=(IInkToolbarEraserButton const&) & noexcept = default;
        IInkToolbarEraserButton& operator=(IInkToolbarEraserButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarEraserButton2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarEraserButton2>
    {
        IInkToolbarEraserButton2(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarEraserButton2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarEraserButton2(IInkToolbarEraserButton2 const&) noexcept = default;
        IInkToolbarEraserButton2(IInkToolbarEraserButton2&&) noexcept = default;
        IInkToolbarEraserButton2& operator=(IInkToolbarEraserButton2 const&) & noexcept = default;
        IInkToolbarEraserButton2& operator=(IInkToolbarEraserButton2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarEraserButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarEraserButtonFactory>
    {
        IInkToolbarEraserButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarEraserButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarEraserButtonFactory(IInkToolbarEraserButtonFactory const&) noexcept = default;
        IInkToolbarEraserButtonFactory(IInkToolbarEraserButtonFactory&&) noexcept = default;
        IInkToolbarEraserButtonFactory& operator=(IInkToolbarEraserButtonFactory const&) & noexcept = default;
        IInkToolbarEraserButtonFactory& operator=(IInkToolbarEraserButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarEraserButtonStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarEraserButtonStatics2>
    {
        IInkToolbarEraserButtonStatics2(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarEraserButtonStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarEraserButtonStatics2(IInkToolbarEraserButtonStatics2 const&) noexcept = default;
        IInkToolbarEraserButtonStatics2(IInkToolbarEraserButtonStatics2&&) noexcept = default;
        IInkToolbarEraserButtonStatics2& operator=(IInkToolbarEraserButtonStatics2 const&) & noexcept = default;
        IInkToolbarEraserButtonStatics2& operator=(IInkToolbarEraserButtonStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarFactory>
    {
        IInkToolbarFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarFactory(IInkToolbarFactory const&) noexcept = default;
        IInkToolbarFactory(IInkToolbarFactory&&) noexcept = default;
        IInkToolbarFactory& operator=(IInkToolbarFactory const&) & noexcept = default;
        IInkToolbarFactory& operator=(IInkToolbarFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarFlyoutItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarFlyoutItem>
    {
        IInkToolbarFlyoutItem(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarFlyoutItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarFlyoutItem(IInkToolbarFlyoutItem const&) noexcept = default;
        IInkToolbarFlyoutItem(IInkToolbarFlyoutItem&&) noexcept = default;
        IInkToolbarFlyoutItem& operator=(IInkToolbarFlyoutItem const&) & noexcept = default;
        IInkToolbarFlyoutItem& operator=(IInkToolbarFlyoutItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarFlyoutItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarFlyoutItemFactory>
    {
        IInkToolbarFlyoutItemFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarFlyoutItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarFlyoutItemFactory(IInkToolbarFlyoutItemFactory const&) noexcept = default;
        IInkToolbarFlyoutItemFactory(IInkToolbarFlyoutItemFactory&&) noexcept = default;
        IInkToolbarFlyoutItemFactory& operator=(IInkToolbarFlyoutItemFactory const&) & noexcept = default;
        IInkToolbarFlyoutItemFactory& operator=(IInkToolbarFlyoutItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarFlyoutItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarFlyoutItemStatics>
    {
        IInkToolbarFlyoutItemStatics(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarFlyoutItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarFlyoutItemStatics(IInkToolbarFlyoutItemStatics const&) noexcept = default;
        IInkToolbarFlyoutItemStatics(IInkToolbarFlyoutItemStatics&&) noexcept = default;
        IInkToolbarFlyoutItemStatics& operator=(IInkToolbarFlyoutItemStatics const&) & noexcept = default;
        IInkToolbarFlyoutItemStatics& operator=(IInkToolbarFlyoutItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarHighlighterButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarHighlighterButton>
    {
        IInkToolbarHighlighterButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarHighlighterButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarHighlighterButton(IInkToolbarHighlighterButton const&) noexcept = default;
        IInkToolbarHighlighterButton(IInkToolbarHighlighterButton&&) noexcept = default;
        IInkToolbarHighlighterButton& operator=(IInkToolbarHighlighterButton const&) & noexcept = default;
        IInkToolbarHighlighterButton& operator=(IInkToolbarHighlighterButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarHighlighterButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarHighlighterButtonFactory>
    {
        IInkToolbarHighlighterButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarHighlighterButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarHighlighterButtonFactory(IInkToolbarHighlighterButtonFactory const&) noexcept = default;
        IInkToolbarHighlighterButtonFactory(IInkToolbarHighlighterButtonFactory&&) noexcept = default;
        IInkToolbarHighlighterButtonFactory& operator=(IInkToolbarHighlighterButtonFactory const&) & noexcept = default;
        IInkToolbarHighlighterButtonFactory& operator=(IInkToolbarHighlighterButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarIsStencilButtonCheckedChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarIsStencilButtonCheckedChangedEventArgs>
    {
        IInkToolbarIsStencilButtonCheckedChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarIsStencilButtonCheckedChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarIsStencilButtonCheckedChangedEventArgs(IInkToolbarIsStencilButtonCheckedChangedEventArgs const&) noexcept = default;
        IInkToolbarIsStencilButtonCheckedChangedEventArgs(IInkToolbarIsStencilButtonCheckedChangedEventArgs&&) noexcept = default;
        IInkToolbarIsStencilButtonCheckedChangedEventArgs& operator=(IInkToolbarIsStencilButtonCheckedChangedEventArgs const&) & noexcept = default;
        IInkToolbarIsStencilButtonCheckedChangedEventArgs& operator=(IInkToolbarIsStencilButtonCheckedChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarMenuButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarMenuButton>
    {
        IInkToolbarMenuButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarMenuButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarMenuButton(IInkToolbarMenuButton const&) noexcept = default;
        IInkToolbarMenuButton(IInkToolbarMenuButton&&) noexcept = default;
        IInkToolbarMenuButton& operator=(IInkToolbarMenuButton const&) & noexcept = default;
        IInkToolbarMenuButton& operator=(IInkToolbarMenuButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarMenuButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarMenuButtonFactory>
    {
        IInkToolbarMenuButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarMenuButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarMenuButtonFactory(IInkToolbarMenuButtonFactory const&) noexcept = default;
        IInkToolbarMenuButtonFactory(IInkToolbarMenuButtonFactory&&) noexcept = default;
        IInkToolbarMenuButtonFactory& operator=(IInkToolbarMenuButtonFactory const&) & noexcept = default;
        IInkToolbarMenuButtonFactory& operator=(IInkToolbarMenuButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarMenuButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarMenuButtonStatics>
    {
        IInkToolbarMenuButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarMenuButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarMenuButtonStatics(IInkToolbarMenuButtonStatics const&) noexcept = default;
        IInkToolbarMenuButtonStatics(IInkToolbarMenuButtonStatics&&) noexcept = default;
        IInkToolbarMenuButtonStatics& operator=(IInkToolbarMenuButtonStatics const&) & noexcept = default;
        IInkToolbarMenuButtonStatics& operator=(IInkToolbarMenuButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarPenButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarPenButton>
    {
        IInkToolbarPenButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarPenButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarPenButton(IInkToolbarPenButton const&) noexcept = default;
        IInkToolbarPenButton(IInkToolbarPenButton&&) noexcept = default;
        IInkToolbarPenButton& operator=(IInkToolbarPenButton const&) & noexcept = default;
        IInkToolbarPenButton& operator=(IInkToolbarPenButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarPenButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarPenButtonFactory>
    {
        IInkToolbarPenButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarPenButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarPenButtonFactory(IInkToolbarPenButtonFactory const&) noexcept = default;
        IInkToolbarPenButtonFactory(IInkToolbarPenButtonFactory&&) noexcept = default;
        IInkToolbarPenButtonFactory& operator=(IInkToolbarPenButtonFactory const&) & noexcept = default;
        IInkToolbarPenButtonFactory& operator=(IInkToolbarPenButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarPenButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarPenButtonStatics>
    {
        IInkToolbarPenButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarPenButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarPenButtonStatics(IInkToolbarPenButtonStatics const&) noexcept = default;
        IInkToolbarPenButtonStatics(IInkToolbarPenButtonStatics&&) noexcept = default;
        IInkToolbarPenButtonStatics& operator=(IInkToolbarPenButtonStatics const&) & noexcept = default;
        IInkToolbarPenButtonStatics& operator=(IInkToolbarPenButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarPenConfigurationControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarPenConfigurationControl>
    {
        IInkToolbarPenConfigurationControl(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarPenConfigurationControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarPenConfigurationControl(IInkToolbarPenConfigurationControl const&) noexcept = default;
        IInkToolbarPenConfigurationControl(IInkToolbarPenConfigurationControl&&) noexcept = default;
        IInkToolbarPenConfigurationControl& operator=(IInkToolbarPenConfigurationControl const&) & noexcept = default;
        IInkToolbarPenConfigurationControl& operator=(IInkToolbarPenConfigurationControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarPenConfigurationControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarPenConfigurationControlFactory>
    {
        IInkToolbarPenConfigurationControlFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarPenConfigurationControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarPenConfigurationControlFactory(IInkToolbarPenConfigurationControlFactory const&) noexcept = default;
        IInkToolbarPenConfigurationControlFactory(IInkToolbarPenConfigurationControlFactory&&) noexcept = default;
        IInkToolbarPenConfigurationControlFactory& operator=(IInkToolbarPenConfigurationControlFactory const&) & noexcept = default;
        IInkToolbarPenConfigurationControlFactory& operator=(IInkToolbarPenConfigurationControlFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarPenConfigurationControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarPenConfigurationControlStatics>
    {
        IInkToolbarPenConfigurationControlStatics(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarPenConfigurationControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarPenConfigurationControlStatics(IInkToolbarPenConfigurationControlStatics const&) noexcept = default;
        IInkToolbarPenConfigurationControlStatics(IInkToolbarPenConfigurationControlStatics&&) noexcept = default;
        IInkToolbarPenConfigurationControlStatics& operator=(IInkToolbarPenConfigurationControlStatics const&) & noexcept = default;
        IInkToolbarPenConfigurationControlStatics& operator=(IInkToolbarPenConfigurationControlStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarPencilButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarPencilButton>
    {
        IInkToolbarPencilButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarPencilButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarPencilButton(IInkToolbarPencilButton const&) noexcept = default;
        IInkToolbarPencilButton(IInkToolbarPencilButton&&) noexcept = default;
        IInkToolbarPencilButton& operator=(IInkToolbarPencilButton const&) & noexcept = default;
        IInkToolbarPencilButton& operator=(IInkToolbarPencilButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarPencilButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarPencilButtonFactory>
    {
        IInkToolbarPencilButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarPencilButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarPencilButtonFactory(IInkToolbarPencilButtonFactory const&) noexcept = default;
        IInkToolbarPencilButtonFactory(IInkToolbarPencilButtonFactory&&) noexcept = default;
        IInkToolbarPencilButtonFactory& operator=(IInkToolbarPencilButtonFactory const&) & noexcept = default;
        IInkToolbarPencilButtonFactory& operator=(IInkToolbarPencilButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarRulerButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarRulerButton>
    {
        IInkToolbarRulerButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarRulerButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarRulerButton(IInkToolbarRulerButton const&) noexcept = default;
        IInkToolbarRulerButton(IInkToolbarRulerButton&&) noexcept = default;
        IInkToolbarRulerButton& operator=(IInkToolbarRulerButton const&) & noexcept = default;
        IInkToolbarRulerButton& operator=(IInkToolbarRulerButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarRulerButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarRulerButtonFactory>
    {
        IInkToolbarRulerButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarRulerButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarRulerButtonFactory(IInkToolbarRulerButtonFactory const&) noexcept = default;
        IInkToolbarRulerButtonFactory(IInkToolbarRulerButtonFactory&&) noexcept = default;
        IInkToolbarRulerButtonFactory& operator=(IInkToolbarRulerButtonFactory const&) & noexcept = default;
        IInkToolbarRulerButtonFactory& operator=(IInkToolbarRulerButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarRulerButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarRulerButtonStatics>
    {
        IInkToolbarRulerButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarRulerButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarRulerButtonStatics(IInkToolbarRulerButtonStatics const&) noexcept = default;
        IInkToolbarRulerButtonStatics(IInkToolbarRulerButtonStatics&&) noexcept = default;
        IInkToolbarRulerButtonStatics& operator=(IInkToolbarRulerButtonStatics const&) & noexcept = default;
        IInkToolbarRulerButtonStatics& operator=(IInkToolbarRulerButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarStatics>
    {
        IInkToolbarStatics(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarStatics(IInkToolbarStatics const&) noexcept = default;
        IInkToolbarStatics(IInkToolbarStatics&&) noexcept = default;
        IInkToolbarStatics& operator=(IInkToolbarStatics const&) & noexcept = default;
        IInkToolbarStatics& operator=(IInkToolbarStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarStatics2>
    {
        IInkToolbarStatics2(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarStatics2(IInkToolbarStatics2 const&) noexcept = default;
        IInkToolbarStatics2(IInkToolbarStatics2&&) noexcept = default;
        IInkToolbarStatics2& operator=(IInkToolbarStatics2 const&) & noexcept = default;
        IInkToolbarStatics2& operator=(IInkToolbarStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarStatics3>
    {
        IInkToolbarStatics3(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarStatics3(IInkToolbarStatics3 const&) noexcept = default;
        IInkToolbarStatics3(IInkToolbarStatics3&&) noexcept = default;
        IInkToolbarStatics3& operator=(IInkToolbarStatics3 const&) & noexcept = default;
        IInkToolbarStatics3& operator=(IInkToolbarStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarStencilButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarStencilButton>
    {
        IInkToolbarStencilButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarStencilButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarStencilButton(IInkToolbarStencilButton const&) noexcept = default;
        IInkToolbarStencilButton(IInkToolbarStencilButton&&) noexcept = default;
        IInkToolbarStencilButton& operator=(IInkToolbarStencilButton const&) & noexcept = default;
        IInkToolbarStencilButton& operator=(IInkToolbarStencilButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarStencilButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarStencilButtonFactory>
    {
        IInkToolbarStencilButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarStencilButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarStencilButtonFactory(IInkToolbarStencilButtonFactory const&) noexcept = default;
        IInkToolbarStencilButtonFactory(IInkToolbarStencilButtonFactory&&) noexcept = default;
        IInkToolbarStencilButtonFactory& operator=(IInkToolbarStencilButtonFactory const&) & noexcept = default;
        IInkToolbarStencilButtonFactory& operator=(IInkToolbarStencilButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarStencilButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarStencilButtonStatics>
    {
        IInkToolbarStencilButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarStencilButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarStencilButtonStatics(IInkToolbarStencilButtonStatics const&) noexcept = default;
        IInkToolbarStencilButtonStatics(IInkToolbarStencilButtonStatics&&) noexcept = default;
        IInkToolbarStencilButtonStatics& operator=(IInkToolbarStencilButtonStatics const&) & noexcept = default;
        IInkToolbarStencilButtonStatics& operator=(IInkToolbarStencilButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarToggleButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarToggleButton>
    {
        IInkToolbarToggleButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarToggleButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarToggleButton(IInkToolbarToggleButton const&) noexcept = default;
        IInkToolbarToggleButton(IInkToolbarToggleButton&&) noexcept = default;
        IInkToolbarToggleButton& operator=(IInkToolbarToggleButton const&) & noexcept = default;
        IInkToolbarToggleButton& operator=(IInkToolbarToggleButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarToggleButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarToggleButtonFactory>
    {
        IInkToolbarToggleButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarToggleButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarToggleButtonFactory(IInkToolbarToggleButtonFactory const&) noexcept = default;
        IInkToolbarToggleButtonFactory(IInkToolbarToggleButtonFactory&&) noexcept = default;
        IInkToolbarToggleButtonFactory& operator=(IInkToolbarToggleButtonFactory const&) & noexcept = default;
        IInkToolbarToggleButtonFactory& operator=(IInkToolbarToggleButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarToolButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarToolButton>
    {
        IInkToolbarToolButton(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarToolButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarToolButton(IInkToolbarToolButton const&) noexcept = default;
        IInkToolbarToolButton(IInkToolbarToolButton&&) noexcept = default;
        IInkToolbarToolButton& operator=(IInkToolbarToolButton const&) & noexcept = default;
        IInkToolbarToolButton& operator=(IInkToolbarToolButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarToolButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarToolButtonFactory>
    {
        IInkToolbarToolButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarToolButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarToolButtonFactory(IInkToolbarToolButtonFactory const&) noexcept = default;
        IInkToolbarToolButtonFactory(IInkToolbarToolButtonFactory&&) noexcept = default;
        IInkToolbarToolButtonFactory& operator=(IInkToolbarToolButtonFactory const&) & noexcept = default;
        IInkToolbarToolButtonFactory& operator=(IInkToolbarToolButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInkToolbarToolButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInkToolbarToolButtonStatics>
    {
        IInkToolbarToolButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IInkToolbarToolButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInkToolbarToolButtonStatics(IInkToolbarToolButtonStatics const&) noexcept = default;
        IInkToolbarToolButtonStatics(IInkToolbarToolButtonStatics&&) noexcept = default;
        IInkToolbarToolButtonStatics& operator=(IInkToolbarToolButtonStatics const&) & noexcept = default;
        IInkToolbarToolButtonStatics& operator=(IInkToolbarToolButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IInsertionPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInsertionPanel>
    {
        IInsertionPanel(std::nullptr_t = nullptr) noexcept {}
        IInsertionPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IInsertionPanel(IInsertionPanel const&) noexcept = default;
        IInsertionPanel(IInsertionPanel&&) noexcept = default;
        IInsertionPanel& operator=(IInsertionPanel const&) & noexcept = default;
        IInsertionPanel& operator=(IInsertionPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIsTextTrimmedChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIsTextTrimmedChangedEventArgs>
    {
        IIsTextTrimmedChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IIsTextTrimmedChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIsTextTrimmedChangedEventArgs(IIsTextTrimmedChangedEventArgs const&) noexcept = default;
        IIsTextTrimmedChangedEventArgs(IIsTextTrimmedChangedEventArgs&&) noexcept = default;
        IIsTextTrimmedChangedEventArgs& operator=(IIsTextTrimmedChangedEventArgs const&) & noexcept = default;
        IIsTextTrimmedChangedEventArgs& operator=(IIsTextTrimmedChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemClickEventArgs>
    {
        IItemClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemClickEventArgs(IItemClickEventArgs const&) noexcept = default;
        IItemClickEventArgs(IItemClickEventArgs&&) noexcept = default;
        IItemClickEventArgs& operator=(IItemClickEventArgs const&) & noexcept = default;
        IItemClickEventArgs& operator=(IItemClickEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemContainerGenerator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemContainerGenerator>
    {
        IItemContainerGenerator(std::nullptr_t = nullptr) noexcept {}
        IItemContainerGenerator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemContainerGenerator(IItemContainerGenerator const&) noexcept = default;
        IItemContainerGenerator(IItemContainerGenerator&&) noexcept = default;
        IItemContainerGenerator& operator=(IItemContainerGenerator const&) & noexcept = default;
        IItemContainerGenerator& operator=(IItemContainerGenerator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemContainerMapping :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemContainerMapping>
    {
        IItemContainerMapping(std::nullptr_t = nullptr) noexcept {}
        IItemContainerMapping(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemContainerMapping(IItemContainerMapping const&) noexcept = default;
        IItemContainerMapping(IItemContainerMapping&&) noexcept = default;
        IItemContainerMapping& operator=(IItemContainerMapping const&) & noexcept = default;
        IItemContainerMapping& operator=(IItemContainerMapping&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControl>
    {
        IItemsControl(std::nullptr_t = nullptr) noexcept {}
        IItemsControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsControl(IItemsControl const&) noexcept = default;
        IItemsControl(IItemsControl&&) noexcept = default;
        IItemsControl& operator=(IItemsControl const&) & noexcept = default;
        IItemsControl& operator=(IItemsControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsControl2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControl2>
    {
        IItemsControl2(std::nullptr_t = nullptr) noexcept {}
        IItemsControl2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsControl2(IItemsControl2 const&) noexcept = default;
        IItemsControl2(IItemsControl2&&) noexcept = default;
        IItemsControl2& operator=(IItemsControl2 const&) & noexcept = default;
        IItemsControl2& operator=(IItemsControl2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsControl3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControl3>
    {
        IItemsControl3(std::nullptr_t = nullptr) noexcept {}
        IItemsControl3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsControl3(IItemsControl3 const&) noexcept = default;
        IItemsControl3(IItemsControl3&&) noexcept = default;
        IItemsControl3& operator=(IItemsControl3 const&) & noexcept = default;
        IItemsControl3& operator=(IItemsControl3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlFactory>
    {
        IItemsControlFactory(std::nullptr_t = nullptr) noexcept {}
        IItemsControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsControlFactory(IItemsControlFactory const&) noexcept = default;
        IItemsControlFactory(IItemsControlFactory&&) noexcept = default;
        IItemsControlFactory& operator=(IItemsControlFactory const&) & noexcept = default;
        IItemsControlFactory& operator=(IItemsControlFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsControlOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlOverrides>
    {
        IItemsControlOverrides(std::nullptr_t = nullptr) noexcept {}
        IItemsControlOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsControlOverrides(IItemsControlOverrides const&) noexcept = default;
        IItemsControlOverrides(IItemsControlOverrides&&) noexcept = default;
        IItemsControlOverrides& operator=(IItemsControlOverrides const&) & noexcept = default;
        IItemsControlOverrides& operator=(IItemsControlOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlStatics>
    {
        IItemsControlStatics(std::nullptr_t = nullptr) noexcept {}
        IItemsControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsControlStatics(IItemsControlStatics const&) noexcept = default;
        IItemsControlStatics(IItemsControlStatics&&) noexcept = default;
        IItemsControlStatics& operator=(IItemsControlStatics const&) & noexcept = default;
        IItemsControlStatics& operator=(IItemsControlStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsPanelTemplate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsPanelTemplate>
    {
        IItemsPanelTemplate(std::nullptr_t = nullptr) noexcept {}
        IItemsPanelTemplate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsPanelTemplate(IItemsPanelTemplate const&) noexcept = default;
        IItemsPanelTemplate(IItemsPanelTemplate&&) noexcept = default;
        IItemsPanelTemplate& operator=(IItemsPanelTemplate const&) & noexcept = default;
        IItemsPanelTemplate& operator=(IItemsPanelTemplate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsPickedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsPickedEventArgs>
    {
        IItemsPickedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemsPickedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsPickedEventArgs(IItemsPickedEventArgs const&) noexcept = default;
        IItemsPickedEventArgs(IItemsPickedEventArgs&&) noexcept = default;
        IItemsPickedEventArgs& operator=(IItemsPickedEventArgs const&) & noexcept = default;
        IItemsPickedEventArgs& operator=(IItemsPickedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsPresenter>
    {
        IItemsPresenter(std::nullptr_t = nullptr) noexcept {}
        IItemsPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsPresenter(IItemsPresenter const&) noexcept = default;
        IItemsPresenter(IItemsPresenter&&) noexcept = default;
        IItemsPresenter& operator=(IItemsPresenter const&) & noexcept = default;
        IItemsPresenter& operator=(IItemsPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsPresenter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsPresenter2>
    {
        IItemsPresenter2(std::nullptr_t = nullptr) noexcept {}
        IItemsPresenter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsPresenter2(IItemsPresenter2 const&) noexcept = default;
        IItemsPresenter2(IItemsPresenter2&&) noexcept = default;
        IItemsPresenter2& operator=(IItemsPresenter2 const&) & noexcept = default;
        IItemsPresenter2& operator=(IItemsPresenter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsPresenterStatics>
    {
        IItemsPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IItemsPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsPresenterStatics(IItemsPresenterStatics const&) noexcept = default;
        IItemsPresenterStatics(IItemsPresenterStatics&&) noexcept = default;
        IItemsPresenterStatics& operator=(IItemsPresenterStatics const&) & noexcept = default;
        IItemsPresenterStatics& operator=(IItemsPresenterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsPresenterStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsPresenterStatics2>
    {
        IItemsPresenterStatics2(std::nullptr_t = nullptr) noexcept {}
        IItemsPresenterStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsPresenterStatics2(IItemsPresenterStatics2 const&) noexcept = default;
        IItemsPresenterStatics2(IItemsPresenterStatics2&&) noexcept = default;
        IItemsPresenterStatics2& operator=(IItemsPresenterStatics2 const&) & noexcept = default;
        IItemsPresenterStatics2& operator=(IItemsPresenterStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsStackPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsStackPanel>
    {
        IItemsStackPanel(std::nullptr_t = nullptr) noexcept {}
        IItemsStackPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsStackPanel(IItemsStackPanel const&) noexcept = default;
        IItemsStackPanel(IItemsStackPanel&&) noexcept = default;
        IItemsStackPanel& operator=(IItemsStackPanel const&) & noexcept = default;
        IItemsStackPanel& operator=(IItemsStackPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsStackPanel2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsStackPanel2>
    {
        IItemsStackPanel2(std::nullptr_t = nullptr) noexcept {}
        IItemsStackPanel2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsStackPanel2(IItemsStackPanel2 const&) noexcept = default;
        IItemsStackPanel2(IItemsStackPanel2&&) noexcept = default;
        IItemsStackPanel2& operator=(IItemsStackPanel2 const&) & noexcept = default;
        IItemsStackPanel2& operator=(IItemsStackPanel2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsStackPanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsStackPanelStatics>
    {
        IItemsStackPanelStatics(std::nullptr_t = nullptr) noexcept {}
        IItemsStackPanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsStackPanelStatics(IItemsStackPanelStatics const&) noexcept = default;
        IItemsStackPanelStatics(IItemsStackPanelStatics&&) noexcept = default;
        IItemsStackPanelStatics& operator=(IItemsStackPanelStatics const&) & noexcept = default;
        IItemsStackPanelStatics& operator=(IItemsStackPanelStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsStackPanelStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsStackPanelStatics2>
    {
        IItemsStackPanelStatics2(std::nullptr_t = nullptr) noexcept {}
        IItemsStackPanelStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsStackPanelStatics2(IItemsStackPanelStatics2 const&) noexcept = default;
        IItemsStackPanelStatics2(IItemsStackPanelStatics2&&) noexcept = default;
        IItemsStackPanelStatics2& operator=(IItemsStackPanelStatics2 const&) & noexcept = default;
        IItemsStackPanelStatics2& operator=(IItemsStackPanelStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsWrapGrid :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsWrapGrid>
    {
        IItemsWrapGrid(std::nullptr_t = nullptr) noexcept {}
        IItemsWrapGrid(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsWrapGrid(IItemsWrapGrid const&) noexcept = default;
        IItemsWrapGrid(IItemsWrapGrid&&) noexcept = default;
        IItemsWrapGrid& operator=(IItemsWrapGrid const&) & noexcept = default;
        IItemsWrapGrid& operator=(IItemsWrapGrid&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsWrapGrid2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsWrapGrid2>
    {
        IItemsWrapGrid2(std::nullptr_t = nullptr) noexcept {}
        IItemsWrapGrid2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsWrapGrid2(IItemsWrapGrid2 const&) noexcept = default;
        IItemsWrapGrid2(IItemsWrapGrid2&&) noexcept = default;
        IItemsWrapGrid2& operator=(IItemsWrapGrid2 const&) & noexcept = default;
        IItemsWrapGrid2& operator=(IItemsWrapGrid2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsWrapGridStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsWrapGridStatics>
    {
        IItemsWrapGridStatics(std::nullptr_t = nullptr) noexcept {}
        IItemsWrapGridStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsWrapGridStatics(IItemsWrapGridStatics const&) noexcept = default;
        IItemsWrapGridStatics(IItemsWrapGridStatics&&) noexcept = default;
        IItemsWrapGridStatics& operator=(IItemsWrapGridStatics const&) & noexcept = default;
        IItemsWrapGridStatics& operator=(IItemsWrapGridStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IItemsWrapGridStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsWrapGridStatics2>
    {
        IItemsWrapGridStatics2(std::nullptr_t = nullptr) noexcept {}
        IItemsWrapGridStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IItemsWrapGridStatics2(IItemsWrapGridStatics2 const&) noexcept = default;
        IItemsWrapGridStatics2(IItemsWrapGridStatics2&&) noexcept = default;
        IItemsWrapGridStatics2& operator=(IItemsWrapGridStatics2 const&) & noexcept = default;
        IItemsWrapGridStatics2& operator=(IItemsWrapGridStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBox>
    {
        IListBox(std::nullptr_t = nullptr) noexcept {}
        IListBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBox(IListBox const&) noexcept = default;
        IListBox(IListBox&&) noexcept = default;
        IListBox& operator=(IListBox const&) & noexcept = default;
        IListBox& operator=(IListBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBox2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBox2>
    {
        IListBox2(std::nullptr_t = nullptr) noexcept {}
        IListBox2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBox2(IListBox2 const&) noexcept = default;
        IListBox2(IListBox2&&) noexcept = default;
        IListBox2& operator=(IListBox2 const&) & noexcept = default;
        IListBox2& operator=(IListBox2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxFactory>
    {
        IListBoxFactory(std::nullptr_t = nullptr) noexcept {}
        IListBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxFactory(IListBoxFactory const&) noexcept = default;
        IListBoxFactory(IListBoxFactory&&) noexcept = default;
        IListBoxFactory& operator=(IListBoxFactory const&) & noexcept = default;
        IListBoxFactory& operator=(IListBoxFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItem>
    {
        IListBoxItem(std::nullptr_t = nullptr) noexcept {}
        IListBoxItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxItem(IListBoxItem const&) noexcept = default;
        IListBoxItem(IListBoxItem&&) noexcept = default;
        IListBoxItem& operator=(IListBoxItem const&) & noexcept = default;
        IListBoxItem& operator=(IListBoxItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItemFactory>
    {
        IListBoxItemFactory(std::nullptr_t = nullptr) noexcept {}
        IListBoxItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxItemFactory(IListBoxItemFactory const&) noexcept = default;
        IListBoxItemFactory(IListBoxItemFactory&&) noexcept = default;
        IListBoxItemFactory& operator=(IListBoxItemFactory const&) & noexcept = default;
        IListBoxItemFactory& operator=(IListBoxItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxStatics>
    {
        IListBoxStatics(std::nullptr_t = nullptr) noexcept {}
        IListBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxStatics(IListBoxStatics const&) noexcept = default;
        IListBoxStatics(IListBoxStatics&&) noexcept = default;
        IListBoxStatics& operator=(IListBoxStatics const&) & noexcept = default;
        IListBoxStatics& operator=(IListBoxStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListBoxStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxStatics2>
    {
        IListBoxStatics2(std::nullptr_t = nullptr) noexcept {}
        IListBoxStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListBoxStatics2(IListBoxStatics2 const&) noexcept = default;
        IListBoxStatics2(IListBoxStatics2&&) noexcept = default;
        IListBoxStatics2& operator=(IListBoxStatics2 const&) & noexcept = default;
        IListBoxStatics2& operator=(IListBoxStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListPickerFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListPickerFlyout>
    {
        IListPickerFlyout(std::nullptr_t = nullptr) noexcept {}
        IListPickerFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListPickerFlyout(IListPickerFlyout const&) noexcept = default;
        IListPickerFlyout(IListPickerFlyout&&) noexcept = default;
        IListPickerFlyout& operator=(IListPickerFlyout const&) & noexcept = default;
        IListPickerFlyout& operator=(IListPickerFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListPickerFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListPickerFlyoutPresenter>
    {
        IListPickerFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        IListPickerFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListPickerFlyoutPresenter(IListPickerFlyoutPresenter const&) noexcept = default;
        IListPickerFlyoutPresenter(IListPickerFlyoutPresenter&&) noexcept = default;
        IListPickerFlyoutPresenter& operator=(IListPickerFlyoutPresenter const&) & noexcept = default;
        IListPickerFlyoutPresenter& operator=(IListPickerFlyoutPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListPickerFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListPickerFlyoutStatics>
    {
        IListPickerFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        IListPickerFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListPickerFlyoutStatics(IListPickerFlyoutStatics const&) noexcept = default;
        IListPickerFlyoutStatics(IListPickerFlyoutStatics&&) noexcept = default;
        IListPickerFlyoutStatics& operator=(IListPickerFlyoutStatics const&) & noexcept = default;
        IListPickerFlyoutStatics& operator=(IListPickerFlyoutStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListView>
    {
        IListView(std::nullptr_t = nullptr) noexcept {}
        IListView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListView(IListView const&) noexcept = default;
        IListView(IListView&&) noexcept = default;
        IListView& operator=(IListView const&) & noexcept = default;
        IListView& operator=(IListView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBase>
    {
        IListViewBase(std::nullptr_t = nullptr) noexcept {}
        IListViewBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBase(IListViewBase const&) noexcept = default;
        IListViewBase(IListViewBase&&) noexcept = default;
        IListViewBase& operator=(IListViewBase const&) & noexcept = default;
        IListViewBase& operator=(IListViewBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBase2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBase2>
    {
        IListViewBase2(std::nullptr_t = nullptr) noexcept {}
        IListViewBase2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBase2(IListViewBase2 const&) noexcept = default;
        IListViewBase2(IListViewBase2&&) noexcept = default;
        IListViewBase2& operator=(IListViewBase2 const&) & noexcept = default;
        IListViewBase2& operator=(IListViewBase2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBase3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBase3>
    {
        IListViewBase3(std::nullptr_t = nullptr) noexcept {}
        IListViewBase3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBase3(IListViewBase3 const&) noexcept = default;
        IListViewBase3(IListViewBase3&&) noexcept = default;
        IListViewBase3& operator=(IListViewBase3 const&) & noexcept = default;
        IListViewBase3& operator=(IListViewBase3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBase4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBase4>
    {
        IListViewBase4(std::nullptr_t = nullptr) noexcept {}
        IListViewBase4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBase4(IListViewBase4 const&) noexcept = default;
        IListViewBase4(IListViewBase4&&) noexcept = default;
        IListViewBase4& operator=(IListViewBase4 const&) & noexcept = default;
        IListViewBase4& operator=(IListViewBase4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBase5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBase5>
    {
        IListViewBase5(std::nullptr_t = nullptr) noexcept {}
        IListViewBase5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBase5(IListViewBase5 const&) noexcept = default;
        IListViewBase5(IListViewBase5&&) noexcept = default;
        IListViewBase5& operator=(IListViewBase5 const&) & noexcept = default;
        IListViewBase5& operator=(IListViewBase5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBase6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBase6>
    {
        IListViewBase6(std::nullptr_t = nullptr) noexcept {}
        IListViewBase6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBase6(IListViewBase6 const&) noexcept = default;
        IListViewBase6(IListViewBase6&&) noexcept = default;
        IListViewBase6& operator=(IListViewBase6 const&) & noexcept = default;
        IListViewBase6& operator=(IListViewBase6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseFactory>
    {
        IListViewBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseFactory(IListViewBaseFactory const&) noexcept = default;
        IListViewBaseFactory(IListViewBaseFactory&&) noexcept = default;
        IListViewBaseFactory& operator=(IListViewBaseFactory const&) & noexcept = default;
        IListViewBaseFactory& operator=(IListViewBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseHeaderItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseHeaderItem>
    {
        IListViewBaseHeaderItem(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseHeaderItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseHeaderItem(IListViewBaseHeaderItem const&) noexcept = default;
        IListViewBaseHeaderItem(IListViewBaseHeaderItem&&) noexcept = default;
        IListViewBaseHeaderItem& operator=(IListViewBaseHeaderItem const&) & noexcept = default;
        IListViewBaseHeaderItem& operator=(IListViewBaseHeaderItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseHeaderItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseHeaderItemFactory>
    {
        IListViewBaseHeaderItemFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseHeaderItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseHeaderItemFactory(IListViewBaseHeaderItemFactory const&) noexcept = default;
        IListViewBaseHeaderItemFactory(IListViewBaseHeaderItemFactory&&) noexcept = default;
        IListViewBaseHeaderItemFactory& operator=(IListViewBaseHeaderItemFactory const&) & noexcept = default;
        IListViewBaseHeaderItemFactory& operator=(IListViewBaseHeaderItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseStatics>
    {
        IListViewBaseStatics(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseStatics(IListViewBaseStatics const&) noexcept = default;
        IListViewBaseStatics(IListViewBaseStatics&&) noexcept = default;
        IListViewBaseStatics& operator=(IListViewBaseStatics const&) & noexcept = default;
        IListViewBaseStatics& operator=(IListViewBaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseStatics2>
    {
        IListViewBaseStatics2(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseStatics2(IListViewBaseStatics2 const&) noexcept = default;
        IListViewBaseStatics2(IListViewBaseStatics2&&) noexcept = default;
        IListViewBaseStatics2& operator=(IListViewBaseStatics2 const&) & noexcept = default;
        IListViewBaseStatics2& operator=(IListViewBaseStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseStatics3>
    {
        IListViewBaseStatics3(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseStatics3(IListViewBaseStatics3 const&) noexcept = default;
        IListViewBaseStatics3(IListViewBaseStatics3&&) noexcept = default;
        IListViewBaseStatics3& operator=(IListViewBaseStatics3 const&) & noexcept = default;
        IListViewBaseStatics3& operator=(IListViewBaseStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseStatics4>
    {
        IListViewBaseStatics4(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseStatics4(IListViewBaseStatics4 const&) noexcept = default;
        IListViewBaseStatics4(IListViewBaseStatics4&&) noexcept = default;
        IListViewBaseStatics4& operator=(IListViewBaseStatics4 const&) & noexcept = default;
        IListViewBaseStatics4& operator=(IListViewBaseStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewBaseStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseStatics5>
    {
        IListViewBaseStatics5(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewBaseStatics5(IListViewBaseStatics5 const&) noexcept = default;
        IListViewBaseStatics5(IListViewBaseStatics5&&) noexcept = default;
        IListViewBaseStatics5& operator=(IListViewBaseStatics5 const&) & noexcept = default;
        IListViewBaseStatics5& operator=(IListViewBaseStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewFactory>
    {
        IListViewFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewFactory(IListViewFactory const&) noexcept = default;
        IListViewFactory(IListViewFactory&&) noexcept = default;
        IListViewFactory& operator=(IListViewFactory const&) & noexcept = default;
        IListViewFactory& operator=(IListViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewHeaderItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewHeaderItem>
    {
        IListViewHeaderItem(std::nullptr_t = nullptr) noexcept {}
        IListViewHeaderItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewHeaderItem(IListViewHeaderItem const&) noexcept = default;
        IListViewHeaderItem(IListViewHeaderItem&&) noexcept = default;
        IListViewHeaderItem& operator=(IListViewHeaderItem const&) & noexcept = default;
        IListViewHeaderItem& operator=(IListViewHeaderItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewHeaderItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewHeaderItemFactory>
    {
        IListViewHeaderItemFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewHeaderItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewHeaderItemFactory(IListViewHeaderItemFactory const&) noexcept = default;
        IListViewHeaderItemFactory(IListViewHeaderItemFactory&&) noexcept = default;
        IListViewHeaderItemFactory& operator=(IListViewHeaderItemFactory const&) & noexcept = default;
        IListViewHeaderItemFactory& operator=(IListViewHeaderItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItem>
    {
        IListViewItem(std::nullptr_t = nullptr) noexcept {}
        IListViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItem(IListViewItem const&) noexcept = default;
        IListViewItem(IListViewItem&&) noexcept = default;
        IListViewItem& operator=(IListViewItem const&) & noexcept = default;
        IListViewItem& operator=(IListViewItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemFactory>
    {
        IListViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewItemFactory(IListViewItemFactory const&) noexcept = default;
        IListViewItemFactory(IListViewItemFactory&&) noexcept = default;
        IListViewItemFactory& operator=(IListViewItemFactory const&) & noexcept = default;
        IListViewItemFactory& operator=(IListViewItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewPersistenceHelper :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewPersistenceHelper>
    {
        IListViewPersistenceHelper(std::nullptr_t = nullptr) noexcept {}
        IListViewPersistenceHelper(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewPersistenceHelper(IListViewPersistenceHelper const&) noexcept = default;
        IListViewPersistenceHelper(IListViewPersistenceHelper&&) noexcept = default;
        IListViewPersistenceHelper& operator=(IListViewPersistenceHelper const&) & noexcept = default;
        IListViewPersistenceHelper& operator=(IListViewPersistenceHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IListViewPersistenceHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewPersistenceHelperStatics>
    {
        IListViewPersistenceHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IListViewPersistenceHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IListViewPersistenceHelperStatics(IListViewPersistenceHelperStatics const&) noexcept = default;
        IListViewPersistenceHelperStatics(IListViewPersistenceHelperStatics&&) noexcept = default;
        IListViewPersistenceHelperStatics& operator=(IListViewPersistenceHelperStatics const&) & noexcept = default;
        IListViewPersistenceHelperStatics& operator=(IListViewPersistenceHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaElement>
    {
        IMediaElement(std::nullptr_t = nullptr) noexcept {}
        IMediaElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaElement(IMediaElement const&) noexcept = default;
        IMediaElement(IMediaElement&&) noexcept = default;
        IMediaElement& operator=(IMediaElement const&) & noexcept = default;
        IMediaElement& operator=(IMediaElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaElement2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaElement2>
    {
        IMediaElement2(std::nullptr_t = nullptr) noexcept {}
        IMediaElement2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaElement2(IMediaElement2 const&) noexcept = default;
        IMediaElement2(IMediaElement2&&) noexcept = default;
        IMediaElement2& operator=(IMediaElement2 const&) & noexcept = default;
        IMediaElement2& operator=(IMediaElement2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaElement3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaElement3>
    {
        IMediaElement3(std::nullptr_t = nullptr) noexcept {}
        IMediaElement3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaElement3(IMediaElement3 const&) noexcept = default;
        IMediaElement3(IMediaElement3&&) noexcept = default;
        IMediaElement3& operator=(IMediaElement3 const&) & noexcept = default;
        IMediaElement3& operator=(IMediaElement3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaElementStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaElementStatics>
    {
        IMediaElementStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaElementStatics(IMediaElementStatics const&) noexcept = default;
        IMediaElementStatics(IMediaElementStatics&&) noexcept = default;
        IMediaElementStatics& operator=(IMediaElementStatics const&) & noexcept = default;
        IMediaElementStatics& operator=(IMediaElementStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaElementStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaElementStatics2>
    {
        IMediaElementStatics2(std::nullptr_t = nullptr) noexcept {}
        IMediaElementStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaElementStatics2(IMediaElementStatics2 const&) noexcept = default;
        IMediaElementStatics2(IMediaElementStatics2&&) noexcept = default;
        IMediaElementStatics2& operator=(IMediaElementStatics2 const&) & noexcept = default;
        IMediaElementStatics2& operator=(IMediaElementStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaPlayerElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerElement>
    {
        IMediaPlayerElement(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaPlayerElement(IMediaPlayerElement const&) noexcept = default;
        IMediaPlayerElement(IMediaPlayerElement&&) noexcept = default;
        IMediaPlayerElement& operator=(IMediaPlayerElement const&) & noexcept = default;
        IMediaPlayerElement& operator=(IMediaPlayerElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaPlayerElementFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerElementFactory>
    {
        IMediaPlayerElementFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaPlayerElementFactory(IMediaPlayerElementFactory const&) noexcept = default;
        IMediaPlayerElementFactory(IMediaPlayerElementFactory&&) noexcept = default;
        IMediaPlayerElementFactory& operator=(IMediaPlayerElementFactory const&) & noexcept = default;
        IMediaPlayerElementFactory& operator=(IMediaPlayerElementFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaPlayerElementStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerElementStatics>
    {
        IMediaPlayerElementStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaPlayerElementStatics(IMediaPlayerElementStatics const&) noexcept = default;
        IMediaPlayerElementStatics(IMediaPlayerElementStatics&&) noexcept = default;
        IMediaPlayerElementStatics& operator=(IMediaPlayerElementStatics const&) & noexcept = default;
        IMediaPlayerElementStatics& operator=(IMediaPlayerElementStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaPlayerPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerPresenter>
    {
        IMediaPlayerPresenter(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaPlayerPresenter(IMediaPlayerPresenter const&) noexcept = default;
        IMediaPlayerPresenter(IMediaPlayerPresenter&&) noexcept = default;
        IMediaPlayerPresenter& operator=(IMediaPlayerPresenter const&) & noexcept = default;
        IMediaPlayerPresenter& operator=(IMediaPlayerPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaPlayerPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerPresenterFactory>
    {
        IMediaPlayerPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaPlayerPresenterFactory(IMediaPlayerPresenterFactory const&) noexcept = default;
        IMediaPlayerPresenterFactory(IMediaPlayerPresenterFactory&&) noexcept = default;
        IMediaPlayerPresenterFactory& operator=(IMediaPlayerPresenterFactory const&) & noexcept = default;
        IMediaPlayerPresenterFactory& operator=(IMediaPlayerPresenterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaPlayerPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerPresenterStatics>
    {
        IMediaPlayerPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaPlayerPresenterStatics(IMediaPlayerPresenterStatics const&) noexcept = default;
        IMediaPlayerPresenterStatics(IMediaPlayerPresenterStatics&&) noexcept = default;
        IMediaPlayerPresenterStatics& operator=(IMediaPlayerPresenterStatics const&) & noexcept = default;
        IMediaPlayerPresenterStatics& operator=(IMediaPlayerPresenterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControls :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControls>
    {
        IMediaTransportControls(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControls(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControls(IMediaTransportControls const&) noexcept = default;
        IMediaTransportControls(IMediaTransportControls&&) noexcept = default;
        IMediaTransportControls& operator=(IMediaTransportControls const&) & noexcept = default;
        IMediaTransportControls& operator=(IMediaTransportControls&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControls2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControls2>
    {
        IMediaTransportControls2(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControls2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControls2(IMediaTransportControls2 const&) noexcept = default;
        IMediaTransportControls2(IMediaTransportControls2&&) noexcept = default;
        IMediaTransportControls2& operator=(IMediaTransportControls2 const&) & noexcept = default;
        IMediaTransportControls2& operator=(IMediaTransportControls2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControls3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControls3>
    {
        IMediaTransportControls3(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControls3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControls3(IMediaTransportControls3 const&) noexcept = default;
        IMediaTransportControls3(IMediaTransportControls3&&) noexcept = default;
        IMediaTransportControls3& operator=(IMediaTransportControls3 const&) & noexcept = default;
        IMediaTransportControls3& operator=(IMediaTransportControls3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControls4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControls4>
    {
        IMediaTransportControls4(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControls4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControls4(IMediaTransportControls4 const&) noexcept = default;
        IMediaTransportControls4(IMediaTransportControls4&&) noexcept = default;
        IMediaTransportControls4& operator=(IMediaTransportControls4 const&) & noexcept = default;
        IMediaTransportControls4& operator=(IMediaTransportControls4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControlsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsFactory>
    {
        IMediaTransportControlsFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControlsFactory(IMediaTransportControlsFactory const&) noexcept = default;
        IMediaTransportControlsFactory(IMediaTransportControlsFactory&&) noexcept = default;
        IMediaTransportControlsFactory& operator=(IMediaTransportControlsFactory const&) & noexcept = default;
        IMediaTransportControlsFactory& operator=(IMediaTransportControlsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControlsHelper :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsHelper>
    {
        IMediaTransportControlsHelper(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsHelper(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControlsHelper(IMediaTransportControlsHelper const&) noexcept = default;
        IMediaTransportControlsHelper(IMediaTransportControlsHelper&&) noexcept = default;
        IMediaTransportControlsHelper& operator=(IMediaTransportControlsHelper const&) & noexcept = default;
        IMediaTransportControlsHelper& operator=(IMediaTransportControlsHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControlsHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsHelperStatics>
    {
        IMediaTransportControlsHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControlsHelperStatics(IMediaTransportControlsHelperStatics const&) noexcept = default;
        IMediaTransportControlsHelperStatics(IMediaTransportControlsHelperStatics&&) noexcept = default;
        IMediaTransportControlsHelperStatics& operator=(IMediaTransportControlsHelperStatics const&) & noexcept = default;
        IMediaTransportControlsHelperStatics& operator=(IMediaTransportControlsHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControlsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsStatics>
    {
        IMediaTransportControlsStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControlsStatics(IMediaTransportControlsStatics const&) noexcept = default;
        IMediaTransportControlsStatics(IMediaTransportControlsStatics&&) noexcept = default;
        IMediaTransportControlsStatics& operator=(IMediaTransportControlsStatics const&) & noexcept = default;
        IMediaTransportControlsStatics& operator=(IMediaTransportControlsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControlsStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsStatics2>
    {
        IMediaTransportControlsStatics2(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControlsStatics2(IMediaTransportControlsStatics2 const&) noexcept = default;
        IMediaTransportControlsStatics2(IMediaTransportControlsStatics2&&) noexcept = default;
        IMediaTransportControlsStatics2& operator=(IMediaTransportControlsStatics2 const&) & noexcept = default;
        IMediaTransportControlsStatics2& operator=(IMediaTransportControlsStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControlsStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsStatics3>
    {
        IMediaTransportControlsStatics3(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControlsStatics3(IMediaTransportControlsStatics3 const&) noexcept = default;
        IMediaTransportControlsStatics3(IMediaTransportControlsStatics3&&) noexcept = default;
        IMediaTransportControlsStatics3& operator=(IMediaTransportControlsStatics3 const&) & noexcept = default;
        IMediaTransportControlsStatics3& operator=(IMediaTransportControlsStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMediaTransportControlsStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsStatics4>
    {
        IMediaTransportControlsStatics4(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMediaTransportControlsStatics4(IMediaTransportControlsStatics4 const&) noexcept = default;
        IMediaTransportControlsStatics4(IMediaTransportControlsStatics4&&) noexcept = default;
        IMediaTransportControlsStatics4& operator=(IMediaTransportControlsStatics4 const&) & noexcept = default;
        IMediaTransportControlsStatics4& operator=(IMediaTransportControlsStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBar>
    {
        IMenuBar(std::nullptr_t = nullptr) noexcept {}
        IMenuBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBar(IMenuBar const&) noexcept = default;
        IMenuBar(IMenuBar&&) noexcept = default;
        IMenuBar& operator=(IMenuBar const&) & noexcept = default;
        IMenuBar& operator=(IMenuBar&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarFactory>
    {
        IMenuBarFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarFactory(IMenuBarFactory const&) noexcept = default;
        IMenuBarFactory(IMenuBarFactory&&) noexcept = default;
        IMenuBarFactory& operator=(IMenuBarFactory const&) & noexcept = default;
        IMenuBarFactory& operator=(IMenuBarFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItem>
    {
        IMenuBarItem(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarItem(IMenuBarItem const&) noexcept = default;
        IMenuBarItem(IMenuBarItem&&) noexcept = default;
        IMenuBarItem& operator=(IMenuBarItem const&) & noexcept = default;
        IMenuBarItem& operator=(IMenuBarItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemFactory>
    {
        IMenuBarItemFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarItemFactory(IMenuBarItemFactory const&) noexcept = default;
        IMenuBarItemFactory(IMenuBarItemFactory&&) noexcept = default;
        IMenuBarItemFactory& operator=(IMenuBarItemFactory const&) & noexcept = default;
        IMenuBarItemFactory& operator=(IMenuBarItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarItemFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemFlyout>
    {
        IMenuBarItemFlyout(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarItemFlyout(IMenuBarItemFlyout const&) noexcept = default;
        IMenuBarItemFlyout(IMenuBarItemFlyout&&) noexcept = default;
        IMenuBarItemFlyout& operator=(IMenuBarItemFlyout const&) & noexcept = default;
        IMenuBarItemFlyout& operator=(IMenuBarItemFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarItemFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemFlyoutFactory>
    {
        IMenuBarItemFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarItemFlyoutFactory(IMenuBarItemFlyoutFactory const&) noexcept = default;
        IMenuBarItemFlyoutFactory(IMenuBarItemFlyoutFactory&&) noexcept = default;
        IMenuBarItemFlyoutFactory& operator=(IMenuBarItemFlyoutFactory const&) & noexcept = default;
        IMenuBarItemFlyoutFactory& operator=(IMenuBarItemFlyoutFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemStatics>
    {
        IMenuBarItemStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarItemStatics(IMenuBarItemStatics const&) noexcept = default;
        IMenuBarItemStatics(IMenuBarItemStatics&&) noexcept = default;
        IMenuBarItemStatics& operator=(IMenuBarItemStatics const&) & noexcept = default;
        IMenuBarItemStatics& operator=(IMenuBarItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarStatics>
    {
        IMenuBarStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuBarStatics(IMenuBarStatics const&) noexcept = default;
        IMenuBarStatics(IMenuBarStatics&&) noexcept = default;
        IMenuBarStatics& operator=(IMenuBarStatics const&) & noexcept = default;
        IMenuBarStatics& operator=(IMenuBarStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyout>
    {
        IMenuFlyout(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyout(IMenuFlyout const&) noexcept = default;
        IMenuFlyout(IMenuFlyout&&) noexcept = default;
        IMenuFlyout& operator=(IMenuFlyout const&) & noexcept = default;
        IMenuFlyout& operator=(IMenuFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyout2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyout2>
    {
        IMenuFlyout2(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyout2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyout2(IMenuFlyout2 const&) noexcept = default;
        IMenuFlyout2(IMenuFlyout2&&) noexcept = default;
        IMenuFlyout2& operator=(IMenuFlyout2 const&) & noexcept = default;
        IMenuFlyout2& operator=(IMenuFlyout2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutFactory>
    {
        IMenuFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutFactory(IMenuFlyoutFactory const&) noexcept = default;
        IMenuFlyoutFactory(IMenuFlyoutFactory&&) noexcept = default;
        IMenuFlyoutFactory& operator=(IMenuFlyoutFactory const&) & noexcept = default;
        IMenuFlyoutFactory& operator=(IMenuFlyoutFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItem>
    {
        IMenuFlyoutItem(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItem(IMenuFlyoutItem const&) noexcept = default;
        IMenuFlyoutItem(IMenuFlyoutItem&&) noexcept = default;
        IMenuFlyoutItem& operator=(IMenuFlyoutItem const&) & noexcept = default;
        IMenuFlyoutItem& operator=(IMenuFlyoutItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItem2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItem2>
    {
        IMenuFlyoutItem2(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItem2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItem2(IMenuFlyoutItem2 const&) noexcept = default;
        IMenuFlyoutItem2(IMenuFlyoutItem2&&) noexcept = default;
        IMenuFlyoutItem2& operator=(IMenuFlyoutItem2 const&) & noexcept = default;
        IMenuFlyoutItem2& operator=(IMenuFlyoutItem2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItem3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItem3>
    {
        IMenuFlyoutItem3(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItem3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItem3(IMenuFlyoutItem3 const&) noexcept = default;
        IMenuFlyoutItem3(IMenuFlyoutItem3&&) noexcept = default;
        IMenuFlyoutItem3& operator=(IMenuFlyoutItem3 const&) & noexcept = default;
        IMenuFlyoutItem3& operator=(IMenuFlyoutItem3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItemBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemBase>
    {
        IMenuFlyoutItemBase(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItemBase(IMenuFlyoutItemBase const&) noexcept = default;
        IMenuFlyoutItemBase(IMenuFlyoutItemBase&&) noexcept = default;
        IMenuFlyoutItemBase& operator=(IMenuFlyoutItemBase const&) & noexcept = default;
        IMenuFlyoutItemBase& operator=(IMenuFlyoutItemBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItemBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemBaseFactory>
    {
        IMenuFlyoutItemBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItemBaseFactory(IMenuFlyoutItemBaseFactory const&) noexcept = default;
        IMenuFlyoutItemBaseFactory(IMenuFlyoutItemBaseFactory&&) noexcept = default;
        IMenuFlyoutItemBaseFactory& operator=(IMenuFlyoutItemBaseFactory const&) & noexcept = default;
        IMenuFlyoutItemBaseFactory& operator=(IMenuFlyoutItemBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemFactory>
    {
        IMenuFlyoutItemFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItemFactory(IMenuFlyoutItemFactory const&) noexcept = default;
        IMenuFlyoutItemFactory(IMenuFlyoutItemFactory&&) noexcept = default;
        IMenuFlyoutItemFactory& operator=(IMenuFlyoutItemFactory const&) & noexcept = default;
        IMenuFlyoutItemFactory& operator=(IMenuFlyoutItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemStatics>
    {
        IMenuFlyoutItemStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItemStatics(IMenuFlyoutItemStatics const&) noexcept = default;
        IMenuFlyoutItemStatics(IMenuFlyoutItemStatics&&) noexcept = default;
        IMenuFlyoutItemStatics& operator=(IMenuFlyoutItemStatics const&) & noexcept = default;
        IMenuFlyoutItemStatics& operator=(IMenuFlyoutItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItemStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemStatics2>
    {
        IMenuFlyoutItemStatics2(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItemStatics2(IMenuFlyoutItemStatics2 const&) noexcept = default;
        IMenuFlyoutItemStatics2(IMenuFlyoutItemStatics2&&) noexcept = default;
        IMenuFlyoutItemStatics2& operator=(IMenuFlyoutItemStatics2 const&) & noexcept = default;
        IMenuFlyoutItemStatics2& operator=(IMenuFlyoutItemStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutItemStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemStatics3>
    {
        IMenuFlyoutItemStatics3(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutItemStatics3(IMenuFlyoutItemStatics3 const&) noexcept = default;
        IMenuFlyoutItemStatics3(IMenuFlyoutItemStatics3&&) noexcept = default;
        IMenuFlyoutItemStatics3& operator=(IMenuFlyoutItemStatics3 const&) & noexcept = default;
        IMenuFlyoutItemStatics3& operator=(IMenuFlyoutItemStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenter>
    {
        IMenuFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutPresenter(IMenuFlyoutPresenter const&) noexcept = default;
        IMenuFlyoutPresenter(IMenuFlyoutPresenter&&) noexcept = default;
        IMenuFlyoutPresenter& operator=(IMenuFlyoutPresenter const&) & noexcept = default;
        IMenuFlyoutPresenter& operator=(IMenuFlyoutPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutPresenter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenter2>
    {
        IMenuFlyoutPresenter2(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutPresenter2(IMenuFlyoutPresenter2 const&) noexcept = default;
        IMenuFlyoutPresenter2(IMenuFlyoutPresenter2&&) noexcept = default;
        IMenuFlyoutPresenter2& operator=(IMenuFlyoutPresenter2 const&) & noexcept = default;
        IMenuFlyoutPresenter2& operator=(IMenuFlyoutPresenter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutPresenter3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenter3>
    {
        IMenuFlyoutPresenter3(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenter3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutPresenter3(IMenuFlyoutPresenter3 const&) noexcept = default;
        IMenuFlyoutPresenter3(IMenuFlyoutPresenter3&&) noexcept = default;
        IMenuFlyoutPresenter3& operator=(IMenuFlyoutPresenter3 const&) & noexcept = default;
        IMenuFlyoutPresenter3& operator=(IMenuFlyoutPresenter3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenterFactory>
    {
        IMenuFlyoutPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutPresenterFactory(IMenuFlyoutPresenterFactory const&) noexcept = default;
        IMenuFlyoutPresenterFactory(IMenuFlyoutPresenterFactory&&) noexcept = default;
        IMenuFlyoutPresenterFactory& operator=(IMenuFlyoutPresenterFactory const&) & noexcept = default;
        IMenuFlyoutPresenterFactory& operator=(IMenuFlyoutPresenterFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutPresenterStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenterStatics3>
    {
        IMenuFlyoutPresenterStatics3(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenterStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutPresenterStatics3(IMenuFlyoutPresenterStatics3 const&) noexcept = default;
        IMenuFlyoutPresenterStatics3(IMenuFlyoutPresenterStatics3&&) noexcept = default;
        IMenuFlyoutPresenterStatics3& operator=(IMenuFlyoutPresenterStatics3 const&) & noexcept = default;
        IMenuFlyoutPresenterStatics3& operator=(IMenuFlyoutPresenterStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutSeparator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutSeparator>
    {
        IMenuFlyoutSeparator(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutSeparator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutSeparator(IMenuFlyoutSeparator const&) noexcept = default;
        IMenuFlyoutSeparator(IMenuFlyoutSeparator&&) noexcept = default;
        IMenuFlyoutSeparator& operator=(IMenuFlyoutSeparator const&) & noexcept = default;
        IMenuFlyoutSeparator& operator=(IMenuFlyoutSeparator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutSeparatorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutSeparatorFactory>
    {
        IMenuFlyoutSeparatorFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutSeparatorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutSeparatorFactory(IMenuFlyoutSeparatorFactory const&) noexcept = default;
        IMenuFlyoutSeparatorFactory(IMenuFlyoutSeparatorFactory&&) noexcept = default;
        IMenuFlyoutSeparatorFactory& operator=(IMenuFlyoutSeparatorFactory const&) & noexcept = default;
        IMenuFlyoutSeparatorFactory& operator=(IMenuFlyoutSeparatorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutStatics>
    {
        IMenuFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutStatics(IMenuFlyoutStatics const&) noexcept = default;
        IMenuFlyoutStatics(IMenuFlyoutStatics&&) noexcept = default;
        IMenuFlyoutStatics& operator=(IMenuFlyoutStatics const&) & noexcept = default;
        IMenuFlyoutStatics& operator=(IMenuFlyoutStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutSubItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutSubItem>
    {
        IMenuFlyoutSubItem(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutSubItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutSubItem(IMenuFlyoutSubItem const&) noexcept = default;
        IMenuFlyoutSubItem(IMenuFlyoutSubItem&&) noexcept = default;
        IMenuFlyoutSubItem& operator=(IMenuFlyoutSubItem const&) & noexcept = default;
        IMenuFlyoutSubItem& operator=(IMenuFlyoutSubItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutSubItem2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutSubItem2>
    {
        IMenuFlyoutSubItem2(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutSubItem2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutSubItem2(IMenuFlyoutSubItem2 const&) noexcept = default;
        IMenuFlyoutSubItem2(IMenuFlyoutSubItem2&&) noexcept = default;
        IMenuFlyoutSubItem2& operator=(IMenuFlyoutSubItem2 const&) & noexcept = default;
        IMenuFlyoutSubItem2& operator=(IMenuFlyoutSubItem2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutSubItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutSubItemStatics>
    {
        IMenuFlyoutSubItemStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutSubItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutSubItemStatics(IMenuFlyoutSubItemStatics const&) noexcept = default;
        IMenuFlyoutSubItemStatics(IMenuFlyoutSubItemStatics&&) noexcept = default;
        IMenuFlyoutSubItemStatics& operator=(IMenuFlyoutSubItemStatics const&) & noexcept = default;
        IMenuFlyoutSubItemStatics& operator=(IMenuFlyoutSubItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMenuFlyoutSubItemStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutSubItemStatics2>
    {
        IMenuFlyoutSubItemStatics2(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutSubItemStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMenuFlyoutSubItemStatics2(IMenuFlyoutSubItemStatics2 const&) noexcept = default;
        IMenuFlyoutSubItemStatics2(IMenuFlyoutSubItemStatics2&&) noexcept = default;
        IMenuFlyoutSubItemStatics2& operator=(IMenuFlyoutSubItemStatics2 const&) & noexcept = default;
        IMenuFlyoutSubItemStatics2& operator=(IMenuFlyoutSubItemStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigate>
    {
        INavigate(std::nullptr_t = nullptr) noexcept {}
        INavigate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigate(INavigate const&) noexcept = default;
        INavigate(INavigate&&) noexcept = default;
        INavigate& operator=(INavigate const&) & noexcept = default;
        INavigate& operator=(INavigate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationView>
    {
        INavigationView(std::nullptr_t = nullptr) noexcept {}
        INavigationView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationView(INavigationView const&) noexcept = default;
        INavigationView(INavigationView&&) noexcept = default;
        INavigationView& operator=(INavigationView const&) & noexcept = default;
        INavigationView& operator=(INavigationView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationView2>
    {
        INavigationView2(std::nullptr_t = nullptr) noexcept {}
        INavigationView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationView2(INavigationView2 const&) noexcept = default;
        INavigationView2(INavigationView2&&) noexcept = default;
        INavigationView2& operator=(INavigationView2 const&) & noexcept = default;
        INavigationView2& operator=(INavigationView2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationView3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationView3>
    {
        INavigationView3(std::nullptr_t = nullptr) noexcept {}
        INavigationView3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationView3(INavigationView3 const&) noexcept = default;
        INavigationView3(INavigationView3&&) noexcept = default;
        INavigationView3& operator=(INavigationView3 const&) & noexcept = default;
        INavigationView3& operator=(INavigationView3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewBackRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewBackRequestedEventArgs>
    {
        INavigationViewBackRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewBackRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewBackRequestedEventArgs(INavigationViewBackRequestedEventArgs const&) noexcept = default;
        INavigationViewBackRequestedEventArgs(INavigationViewBackRequestedEventArgs&&) noexcept = default;
        INavigationViewBackRequestedEventArgs& operator=(INavigationViewBackRequestedEventArgs const&) & noexcept = default;
        INavigationViewBackRequestedEventArgs& operator=(INavigationViewBackRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewDisplayModeChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewDisplayModeChangedEventArgs>
    {
        INavigationViewDisplayModeChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewDisplayModeChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewDisplayModeChangedEventArgs(INavigationViewDisplayModeChangedEventArgs const&) noexcept = default;
        INavigationViewDisplayModeChangedEventArgs(INavigationViewDisplayModeChangedEventArgs&&) noexcept = default;
        INavigationViewDisplayModeChangedEventArgs& operator=(INavigationViewDisplayModeChangedEventArgs const&) & noexcept = default;
        INavigationViewDisplayModeChangedEventArgs& operator=(INavigationViewDisplayModeChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewFactory>
    {
        INavigationViewFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewFactory(INavigationViewFactory const&) noexcept = default;
        INavigationViewFactory(INavigationViewFactory&&) noexcept = default;
        INavigationViewFactory& operator=(INavigationViewFactory const&) & noexcept = default;
        INavigationViewFactory& operator=(INavigationViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItem>
    {
        INavigationViewItem(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItem(INavigationViewItem const&) noexcept = default;
        INavigationViewItem(INavigationViewItem&&) noexcept = default;
        INavigationViewItem& operator=(INavigationViewItem const&) & noexcept = default;
        INavigationViewItem& operator=(INavigationViewItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItem2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItem2>
    {
        INavigationViewItem2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItem2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItem2(INavigationViewItem2 const&) noexcept = default;
        INavigationViewItem2(INavigationViewItem2&&) noexcept = default;
        INavigationViewItem2& operator=(INavigationViewItem2 const&) & noexcept = default;
        INavigationViewItem2& operator=(INavigationViewItem2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemBase>
    {
        INavigationViewItemBase(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemBase(INavigationViewItemBase const&) noexcept = default;
        INavigationViewItemBase(INavigationViewItemBase&&) noexcept = default;
        INavigationViewItemBase& operator=(INavigationViewItemBase const&) & noexcept = default;
        INavigationViewItemBase& operator=(INavigationViewItemBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemBaseFactory>
    {
        INavigationViewItemBaseFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemBaseFactory(INavigationViewItemBaseFactory const&) noexcept = default;
        INavigationViewItemBaseFactory(INavigationViewItemBaseFactory&&) noexcept = default;
        INavigationViewItemBaseFactory& operator=(INavigationViewItemBaseFactory const&) & noexcept = default;
        INavigationViewItemBaseFactory& operator=(INavigationViewItemBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemFactory>
    {
        INavigationViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemFactory(INavigationViewItemFactory const&) noexcept = default;
        INavigationViewItemFactory(INavigationViewItemFactory&&) noexcept = default;
        INavigationViewItemFactory& operator=(INavigationViewItemFactory const&) & noexcept = default;
        INavigationViewItemFactory& operator=(INavigationViewItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemHeader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemHeader>
    {
        INavigationViewItemHeader(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemHeader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemHeader(INavigationViewItemHeader const&) noexcept = default;
        INavigationViewItemHeader(INavigationViewItemHeader&&) noexcept = default;
        INavigationViewItemHeader& operator=(INavigationViewItemHeader const&) & noexcept = default;
        INavigationViewItemHeader& operator=(INavigationViewItemHeader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemHeaderFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemHeaderFactory>
    {
        INavigationViewItemHeaderFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemHeaderFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemHeaderFactory(INavigationViewItemHeaderFactory const&) noexcept = default;
        INavigationViewItemHeaderFactory(INavigationViewItemHeaderFactory&&) noexcept = default;
        INavigationViewItemHeaderFactory& operator=(INavigationViewItemHeaderFactory const&) & noexcept = default;
        INavigationViewItemHeaderFactory& operator=(INavigationViewItemHeaderFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemInvokedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemInvokedEventArgs>
    {
        INavigationViewItemInvokedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemInvokedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemInvokedEventArgs(INavigationViewItemInvokedEventArgs const&) noexcept = default;
        INavigationViewItemInvokedEventArgs(INavigationViewItemInvokedEventArgs&&) noexcept = default;
        INavigationViewItemInvokedEventArgs& operator=(INavigationViewItemInvokedEventArgs const&) & noexcept = default;
        INavigationViewItemInvokedEventArgs& operator=(INavigationViewItemInvokedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemInvokedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemInvokedEventArgs2>
    {
        INavigationViewItemInvokedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemInvokedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemInvokedEventArgs2(INavigationViewItemInvokedEventArgs2 const&) noexcept = default;
        INavigationViewItemInvokedEventArgs2(INavigationViewItemInvokedEventArgs2&&) noexcept = default;
        INavigationViewItemInvokedEventArgs2& operator=(INavigationViewItemInvokedEventArgs2 const&) & noexcept = default;
        INavigationViewItemInvokedEventArgs2& operator=(INavigationViewItemInvokedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemSeparator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemSeparator>
    {
        INavigationViewItemSeparator(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemSeparator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemSeparator(INavigationViewItemSeparator const&) noexcept = default;
        INavigationViewItemSeparator(INavigationViewItemSeparator&&) noexcept = default;
        INavigationViewItemSeparator& operator=(INavigationViewItemSeparator const&) & noexcept = default;
        INavigationViewItemSeparator& operator=(INavigationViewItemSeparator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemSeparatorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemSeparatorFactory>
    {
        INavigationViewItemSeparatorFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemSeparatorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemSeparatorFactory(INavigationViewItemSeparatorFactory const&) noexcept = default;
        INavigationViewItemSeparatorFactory(INavigationViewItemSeparatorFactory&&) noexcept = default;
        INavigationViewItemSeparatorFactory& operator=(INavigationViewItemSeparatorFactory const&) & noexcept = default;
        INavigationViewItemSeparatorFactory& operator=(INavigationViewItemSeparatorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemStatics>
    {
        INavigationViewItemStatics(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemStatics(INavigationViewItemStatics const&) noexcept = default;
        INavigationViewItemStatics(INavigationViewItemStatics&&) noexcept = default;
        INavigationViewItemStatics& operator=(INavigationViewItemStatics const&) & noexcept = default;
        INavigationViewItemStatics& operator=(INavigationViewItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewItemStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemStatics2>
    {
        INavigationViewItemStatics2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewItemStatics2(INavigationViewItemStatics2 const&) noexcept = default;
        INavigationViewItemStatics2(INavigationViewItemStatics2&&) noexcept = default;
        INavigationViewItemStatics2& operator=(INavigationViewItemStatics2 const&) & noexcept = default;
        INavigationViewItemStatics2& operator=(INavigationViewItemStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewList :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewList>
    {
        INavigationViewList(std::nullptr_t = nullptr) noexcept {}
        INavigationViewList(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewList(INavigationViewList const&) noexcept = default;
        INavigationViewList(INavigationViewList&&) noexcept = default;
        INavigationViewList& operator=(INavigationViewList const&) & noexcept = default;
        INavigationViewList& operator=(INavigationViewList&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewListFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewListFactory>
    {
        INavigationViewListFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewListFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewListFactory(INavigationViewListFactory const&) noexcept = default;
        INavigationViewListFactory(INavigationViewListFactory&&) noexcept = default;
        INavigationViewListFactory& operator=(INavigationViewListFactory const&) & noexcept = default;
        INavigationViewListFactory& operator=(INavigationViewListFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewPaneClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewPaneClosingEventArgs>
    {
        INavigationViewPaneClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewPaneClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewPaneClosingEventArgs(INavigationViewPaneClosingEventArgs const&) noexcept = default;
        INavigationViewPaneClosingEventArgs(INavigationViewPaneClosingEventArgs&&) noexcept = default;
        INavigationViewPaneClosingEventArgs& operator=(INavigationViewPaneClosingEventArgs const&) & noexcept = default;
        INavigationViewPaneClosingEventArgs& operator=(INavigationViewPaneClosingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewSelectionChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewSelectionChangedEventArgs>
    {
        INavigationViewSelectionChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewSelectionChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewSelectionChangedEventArgs(INavigationViewSelectionChangedEventArgs const&) noexcept = default;
        INavigationViewSelectionChangedEventArgs(INavigationViewSelectionChangedEventArgs&&) noexcept = default;
        INavigationViewSelectionChangedEventArgs& operator=(INavigationViewSelectionChangedEventArgs const&) & noexcept = default;
        INavigationViewSelectionChangedEventArgs& operator=(INavigationViewSelectionChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewSelectionChangedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewSelectionChangedEventArgs2>
    {
        INavigationViewSelectionChangedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewSelectionChangedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewSelectionChangedEventArgs2(INavigationViewSelectionChangedEventArgs2 const&) noexcept = default;
        INavigationViewSelectionChangedEventArgs2(INavigationViewSelectionChangedEventArgs2&&) noexcept = default;
        INavigationViewSelectionChangedEventArgs2& operator=(INavigationViewSelectionChangedEventArgs2 const&) & noexcept = default;
        INavigationViewSelectionChangedEventArgs2& operator=(INavigationViewSelectionChangedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewStatics>
    {
        INavigationViewStatics(std::nullptr_t = nullptr) noexcept {}
        INavigationViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewStatics(INavigationViewStatics const&) noexcept = default;
        INavigationViewStatics(INavigationViewStatics&&) noexcept = default;
        INavigationViewStatics& operator=(INavigationViewStatics const&) & noexcept = default;
        INavigationViewStatics& operator=(INavigationViewStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewStatics2>
    {
        INavigationViewStatics2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewStatics2(INavigationViewStatics2 const&) noexcept = default;
        INavigationViewStatics2(INavigationViewStatics2&&) noexcept = default;
        INavigationViewStatics2& operator=(INavigationViewStatics2 const&) & noexcept = default;
        INavigationViewStatics2& operator=(INavigationViewStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewStatics3>
    {
        INavigationViewStatics3(std::nullptr_t = nullptr) noexcept {}
        INavigationViewStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewStatics3(INavigationViewStatics3 const&) noexcept = default;
        INavigationViewStatics3(INavigationViewStatics3&&) noexcept = default;
        INavigationViewStatics3& operator=(INavigationViewStatics3 const&) & noexcept = default;
        INavigationViewStatics3& operator=(INavigationViewStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewTemplateSettings>
    {
        INavigationViewTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        INavigationViewTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewTemplateSettings(INavigationViewTemplateSettings const&) noexcept = default;
        INavigationViewTemplateSettings(INavigationViewTemplateSettings&&) noexcept = default;
        INavigationViewTemplateSettings& operator=(INavigationViewTemplateSettings const&) & noexcept = default;
        INavigationViewTemplateSettings& operator=(INavigationViewTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewTemplateSettingsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewTemplateSettingsFactory>
    {
        INavigationViewTemplateSettingsFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewTemplateSettingsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewTemplateSettingsFactory(INavigationViewTemplateSettingsFactory const&) noexcept = default;
        INavigationViewTemplateSettingsFactory(INavigationViewTemplateSettingsFactory&&) noexcept = default;
        INavigationViewTemplateSettingsFactory& operator=(INavigationViewTemplateSettingsFactory const&) & noexcept = default;
        INavigationViewTemplateSettingsFactory& operator=(INavigationViewTemplateSettingsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationViewTemplateSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewTemplateSettingsStatics>
    {
        INavigationViewTemplateSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        INavigationViewTemplateSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationViewTemplateSettingsStatics(INavigationViewTemplateSettingsStatics const&) noexcept = default;
        INavigationViewTemplateSettingsStatics(INavigationViewTemplateSettingsStatics&&) noexcept = default;
        INavigationViewTemplateSettingsStatics& operator=(INavigationViewTemplateSettingsStatics const&) & noexcept = default;
        INavigationViewTemplateSettingsStatics& operator=(INavigationViewTemplateSettingsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INotifyEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INotifyEventArgs>
    {
        INotifyEventArgs(std::nullptr_t = nullptr) noexcept {}
        INotifyEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INotifyEventArgs(INotifyEventArgs const&) noexcept = default;
        INotifyEventArgs(INotifyEventArgs&&) noexcept = default;
        INotifyEventArgs& operator=(INotifyEventArgs const&) & noexcept = default;
        INotifyEventArgs& operator=(INotifyEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INotifyEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INotifyEventArgs2>
    {
        INotifyEventArgs2(std::nullptr_t = nullptr) noexcept {}
        INotifyEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INotifyEventArgs2(INotifyEventArgs2 const&) noexcept = default;
        INotifyEventArgs2(INotifyEventArgs2&&) noexcept = default;
        INotifyEventArgs2& operator=(INotifyEventArgs2 const&) & noexcept = default;
        INotifyEventArgs2& operator=(INotifyEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPage>
    {
        IPage(std::nullptr_t = nullptr) noexcept {}
        IPage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPage(IPage const&) noexcept = default;
        IPage(IPage&&) noexcept = default;
        IPage& operator=(IPage const&) & noexcept = default;
        IPage& operator=(IPage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPageFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPageFactory>
    {
        IPageFactory(std::nullptr_t = nullptr) noexcept {}
        IPageFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPageFactory(IPageFactory const&) noexcept = default;
        IPageFactory(IPageFactory&&) noexcept = default;
        IPageFactory& operator=(IPageFactory const&) & noexcept = default;
        IPageFactory& operator=(IPageFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPageOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPageOverrides>
    {
        IPageOverrides(std::nullptr_t = nullptr) noexcept {}
        IPageOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPageOverrides(IPageOverrides const&) noexcept = default;
        IPageOverrides(IPageOverrides&&) noexcept = default;
        IPageOverrides& operator=(IPageOverrides const&) & noexcept = default;
        IPageOverrides& operator=(IPageOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPageStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPageStatics>
    {
        IPageStatics(std::nullptr_t = nullptr) noexcept {}
        IPageStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPageStatics(IPageStatics const&) noexcept = default;
        IPageStatics(IPageStatics&&) noexcept = default;
        IPageStatics& operator=(IPageStatics const&) & noexcept = default;
        IPageStatics& operator=(IPageStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPanel>
    {
        IPanel(std::nullptr_t = nullptr) noexcept {}
        IPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPanel(IPanel const&) noexcept = default;
        IPanel(IPanel&&) noexcept = default;
        IPanel& operator=(IPanel const&) & noexcept = default;
        IPanel& operator=(IPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPanel2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPanel2>
    {
        IPanel2(std::nullptr_t = nullptr) noexcept {}
        IPanel2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPanel2(IPanel2 const&) noexcept = default;
        IPanel2(IPanel2&&) noexcept = default;
        IPanel2& operator=(IPanel2 const&) & noexcept = default;
        IPanel2& operator=(IPanel2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPanelFactory>
    {
        IPanelFactory(std::nullptr_t = nullptr) noexcept {}
        IPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPanelFactory(IPanelFactory const&) noexcept = default;
        IPanelFactory(IPanelFactory&&) noexcept = default;
        IPanelFactory& operator=(IPanelFactory const&) & noexcept = default;
        IPanelFactory& operator=(IPanelFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPanelStatics>
    {
        IPanelStatics(std::nullptr_t = nullptr) noexcept {}
        IPanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPanelStatics(IPanelStatics const&) noexcept = default;
        IPanelStatics(IPanelStatics&&) noexcept = default;
        IPanelStatics& operator=(IPanelStatics const&) & noexcept = default;
        IPanelStatics& operator=(IPanelStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IParallaxView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IParallaxView>
    {
        IParallaxView(std::nullptr_t = nullptr) noexcept {}
        IParallaxView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IParallaxView(IParallaxView const&) noexcept = default;
        IParallaxView(IParallaxView&&) noexcept = default;
        IParallaxView& operator=(IParallaxView const&) & noexcept = default;
        IParallaxView& operator=(IParallaxView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IParallaxViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IParallaxViewFactory>
    {
        IParallaxViewFactory(std::nullptr_t = nullptr) noexcept {}
        IParallaxViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IParallaxViewFactory(IParallaxViewFactory const&) noexcept = default;
        IParallaxViewFactory(IParallaxViewFactory&&) noexcept = default;
        IParallaxViewFactory& operator=(IParallaxViewFactory const&) & noexcept = default;
        IParallaxViewFactory& operator=(IParallaxViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IParallaxViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IParallaxViewStatics>
    {
        IParallaxViewStatics(std::nullptr_t = nullptr) noexcept {}
        IParallaxViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IParallaxViewStatics(IParallaxViewStatics const&) noexcept = default;
        IParallaxViewStatics(IParallaxViewStatics&&) noexcept = default;
        IParallaxViewStatics& operator=(IParallaxViewStatics const&) & noexcept = default;
        IParallaxViewStatics& operator=(IParallaxViewStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBox>
    {
        IPasswordBox(std::nullptr_t = nullptr) noexcept {}
        IPasswordBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBox(IPasswordBox const&) noexcept = default;
        IPasswordBox(IPasswordBox&&) noexcept = default;
        IPasswordBox& operator=(IPasswordBox const&) & noexcept = default;
        IPasswordBox& operator=(IPasswordBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBox2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBox2>
    {
        IPasswordBox2(std::nullptr_t = nullptr) noexcept {}
        IPasswordBox2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBox2(IPasswordBox2 const&) noexcept = default;
        IPasswordBox2(IPasswordBox2&&) noexcept = default;
        IPasswordBox2& operator=(IPasswordBox2 const&) & noexcept = default;
        IPasswordBox2& operator=(IPasswordBox2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBox3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBox3>
    {
        IPasswordBox3(std::nullptr_t = nullptr) noexcept {}
        IPasswordBox3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBox3(IPasswordBox3 const&) noexcept = default;
        IPasswordBox3(IPasswordBox3&&) noexcept = default;
        IPasswordBox3& operator=(IPasswordBox3 const&) & noexcept = default;
        IPasswordBox3& operator=(IPasswordBox3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBox4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBox4>
    {
        IPasswordBox4(std::nullptr_t = nullptr) noexcept {}
        IPasswordBox4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBox4(IPasswordBox4 const&) noexcept = default;
        IPasswordBox4(IPasswordBox4&&) noexcept = default;
        IPasswordBox4& operator=(IPasswordBox4 const&) & noexcept = default;
        IPasswordBox4& operator=(IPasswordBox4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBox5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBox5>
    {
        IPasswordBox5(std::nullptr_t = nullptr) noexcept {}
        IPasswordBox5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBox5(IPasswordBox5 const&) noexcept = default;
        IPasswordBox5(IPasswordBox5&&) noexcept = default;
        IPasswordBox5& operator=(IPasswordBox5 const&) & noexcept = default;
        IPasswordBox5& operator=(IPasswordBox5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBoxPasswordChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxPasswordChangingEventArgs>
    {
        IPasswordBoxPasswordChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxPasswordChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBoxPasswordChangingEventArgs(IPasswordBoxPasswordChangingEventArgs const&) noexcept = default;
        IPasswordBoxPasswordChangingEventArgs(IPasswordBoxPasswordChangingEventArgs&&) noexcept = default;
        IPasswordBoxPasswordChangingEventArgs& operator=(IPasswordBoxPasswordChangingEventArgs const&) & noexcept = default;
        IPasswordBoxPasswordChangingEventArgs& operator=(IPasswordBoxPasswordChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxStatics>
    {
        IPasswordBoxStatics(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBoxStatics(IPasswordBoxStatics const&) noexcept = default;
        IPasswordBoxStatics(IPasswordBoxStatics&&) noexcept = default;
        IPasswordBoxStatics& operator=(IPasswordBoxStatics const&) & noexcept = default;
        IPasswordBoxStatics& operator=(IPasswordBoxStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBoxStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxStatics2>
    {
        IPasswordBoxStatics2(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBoxStatics2(IPasswordBoxStatics2 const&) noexcept = default;
        IPasswordBoxStatics2(IPasswordBoxStatics2&&) noexcept = default;
        IPasswordBoxStatics2& operator=(IPasswordBoxStatics2 const&) & noexcept = default;
        IPasswordBoxStatics2& operator=(IPasswordBoxStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBoxStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxStatics3>
    {
        IPasswordBoxStatics3(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBoxStatics3(IPasswordBoxStatics3 const&) noexcept = default;
        IPasswordBoxStatics3(IPasswordBoxStatics3&&) noexcept = default;
        IPasswordBoxStatics3& operator=(IPasswordBoxStatics3 const&) & noexcept = default;
        IPasswordBoxStatics3& operator=(IPasswordBoxStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPasswordBoxStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxStatics5>
    {
        IPasswordBoxStatics5(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPasswordBoxStatics5(IPasswordBoxStatics5 const&) noexcept = default;
        IPasswordBoxStatics5(IPasswordBoxStatics5&&) noexcept = default;
        IPasswordBoxStatics5& operator=(IPasswordBoxStatics5 const&) & noexcept = default;
        IPasswordBoxStatics5& operator=(IPasswordBoxStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPathIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIcon>
    {
        IPathIcon(std::nullptr_t = nullptr) noexcept {}
        IPathIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPathIcon(IPathIcon const&) noexcept = default;
        IPathIcon(IPathIcon&&) noexcept = default;
        IPathIcon& operator=(IPathIcon const&) & noexcept = default;
        IPathIcon& operator=(IPathIcon&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPathIconFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIconFactory>
    {
        IPathIconFactory(std::nullptr_t = nullptr) noexcept {}
        IPathIconFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPathIconFactory(IPathIconFactory const&) noexcept = default;
        IPathIconFactory(IPathIconFactory&&) noexcept = default;
        IPathIconFactory& operator=(IPathIconFactory const&) & noexcept = default;
        IPathIconFactory& operator=(IPathIconFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPathIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIconSource>
    {
        IPathIconSource(std::nullptr_t = nullptr) noexcept {}
        IPathIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPathIconSource(IPathIconSource const&) noexcept = default;
        IPathIconSource(IPathIconSource&&) noexcept = default;
        IPathIconSource& operator=(IPathIconSource const&) & noexcept = default;
        IPathIconSource& operator=(IPathIconSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPathIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIconSourceFactory>
    {
        IPathIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IPathIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPathIconSourceFactory(IPathIconSourceFactory const&) noexcept = default;
        IPathIconSourceFactory(IPathIconSourceFactory&&) noexcept = default;
        IPathIconSourceFactory& operator=(IPathIconSourceFactory const&) & noexcept = default;
        IPathIconSourceFactory& operator=(IPathIconSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPathIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIconSourceStatics>
    {
        IPathIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IPathIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPathIconSourceStatics(IPathIconSourceStatics const&) noexcept = default;
        IPathIconSourceStatics(IPathIconSourceStatics&&) noexcept = default;
        IPathIconSourceStatics& operator=(IPathIconSourceStatics const&) & noexcept = default;
        IPathIconSourceStatics& operator=(IPathIconSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPathIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIconStatics>
    {
        IPathIconStatics(std::nullptr_t = nullptr) noexcept {}
        IPathIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPathIconStatics(IPathIconStatics const&) noexcept = default;
        IPathIconStatics(IPathIconStatics&&) noexcept = default;
        IPathIconStatics& operator=(IPathIconStatics const&) & noexcept = default;
        IPathIconStatics& operator=(IPathIconStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPersonPicture :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPicture>
    {
        IPersonPicture(std::nullptr_t = nullptr) noexcept {}
        IPersonPicture(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPersonPicture(IPersonPicture const&) noexcept = default;
        IPersonPicture(IPersonPicture&&) noexcept = default;
        IPersonPicture& operator=(IPersonPicture const&) & noexcept = default;
        IPersonPicture& operator=(IPersonPicture&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPersonPictureFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPictureFactory>
    {
        IPersonPictureFactory(std::nullptr_t = nullptr) noexcept {}
        IPersonPictureFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPersonPictureFactory(IPersonPictureFactory const&) noexcept = default;
        IPersonPictureFactory(IPersonPictureFactory&&) noexcept = default;
        IPersonPictureFactory& operator=(IPersonPictureFactory const&) & noexcept = default;
        IPersonPictureFactory& operator=(IPersonPictureFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPersonPictureStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPictureStatics>
    {
        IPersonPictureStatics(std::nullptr_t = nullptr) noexcept {}
        IPersonPictureStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPersonPictureStatics(IPersonPictureStatics const&) noexcept = default;
        IPersonPictureStatics(IPersonPictureStatics&&) noexcept = default;
        IPersonPictureStatics& operator=(IPersonPictureStatics const&) & noexcept = default;
        IPersonPictureStatics& operator=(IPersonPictureStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPickerConfirmedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerConfirmedEventArgs>
    {
        IPickerConfirmedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPickerConfirmedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPickerConfirmedEventArgs(IPickerConfirmedEventArgs const&) noexcept = default;
        IPickerConfirmedEventArgs(IPickerConfirmedEventArgs&&) noexcept = default;
        IPickerConfirmedEventArgs& operator=(IPickerConfirmedEventArgs const&) & noexcept = default;
        IPickerConfirmedEventArgs& operator=(IPickerConfirmedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPickerFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyout>
    {
        IPickerFlyout(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPickerFlyout(IPickerFlyout const&) noexcept = default;
        IPickerFlyout(IPickerFlyout&&) noexcept = default;
        IPickerFlyout& operator=(IPickerFlyout const&) & noexcept = default;
        IPickerFlyout& operator=(IPickerFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPickerFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyoutPresenter>
    {
        IPickerFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPickerFlyoutPresenter(IPickerFlyoutPresenter const&) noexcept = default;
        IPickerFlyoutPresenter(IPickerFlyoutPresenter&&) noexcept = default;
        IPickerFlyoutPresenter& operator=(IPickerFlyoutPresenter const&) & noexcept = default;
        IPickerFlyoutPresenter& operator=(IPickerFlyoutPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPickerFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyoutStatics>
    {
        IPickerFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPickerFlyoutStatics(IPickerFlyoutStatics const&) noexcept = default;
        IPickerFlyoutStatics(IPickerFlyoutStatics&&) noexcept = default;
        IPickerFlyoutStatics& operator=(IPickerFlyoutStatics const&) & noexcept = default;
        IPickerFlyoutStatics& operator=(IPickerFlyoutStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivot :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivot>
    {
        IPivot(std::nullptr_t = nullptr) noexcept {}
        IPivot(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivot(IPivot const&) noexcept = default;
        IPivot(IPivot&&) noexcept = default;
        IPivot& operator=(IPivot const&) & noexcept = default;
        IPivot& operator=(IPivot&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivot2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivot2>
    {
        IPivot2(std::nullptr_t = nullptr) noexcept {}
        IPivot2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivot2(IPivot2 const&) noexcept = default;
        IPivot2(IPivot2&&) noexcept = default;
        IPivot2& operator=(IPivot2 const&) & noexcept = default;
        IPivot2& operator=(IPivot2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivot3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivot3>
    {
        IPivot3(std::nullptr_t = nullptr) noexcept {}
        IPivot3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivot3(IPivot3 const&) noexcept = default;
        IPivot3(IPivot3&&) noexcept = default;
        IPivot3& operator=(IPivot3 const&) & noexcept = default;
        IPivot3& operator=(IPivot3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotFactory>
    {
        IPivotFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotFactory(IPivotFactory const&) noexcept = default;
        IPivotFactory(IPivotFactory&&) noexcept = default;
        IPivotFactory& operator=(IPivotFactory const&) & noexcept = default;
        IPivotFactory& operator=(IPivotFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItem>
    {
        IPivotItem(std::nullptr_t = nullptr) noexcept {}
        IPivotItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotItem(IPivotItem const&) noexcept = default;
        IPivotItem(IPivotItem&&) noexcept = default;
        IPivotItem& operator=(IPivotItem const&) & noexcept = default;
        IPivotItem& operator=(IPivotItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotItemEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemEventArgs>
    {
        IPivotItemEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPivotItemEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotItemEventArgs(IPivotItemEventArgs const&) noexcept = default;
        IPivotItemEventArgs(IPivotItemEventArgs&&) noexcept = default;
        IPivotItemEventArgs& operator=(IPivotItemEventArgs const&) & noexcept = default;
        IPivotItemEventArgs& operator=(IPivotItemEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemFactory>
    {
        IPivotItemFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotItemFactory(IPivotItemFactory const&) noexcept = default;
        IPivotItemFactory(IPivotItemFactory&&) noexcept = default;
        IPivotItemFactory& operator=(IPivotItemFactory const&) & noexcept = default;
        IPivotItemFactory& operator=(IPivotItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemStatics>
    {
        IPivotItemStatics(std::nullptr_t = nullptr) noexcept {}
        IPivotItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotItemStatics(IPivotItemStatics const&) noexcept = default;
        IPivotItemStatics(IPivotItemStatics&&) noexcept = default;
        IPivotItemStatics& operator=(IPivotItemStatics const&) & noexcept = default;
        IPivotItemStatics& operator=(IPivotItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotStatics>
    {
        IPivotStatics(std::nullptr_t = nullptr) noexcept {}
        IPivotStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotStatics(IPivotStatics const&) noexcept = default;
        IPivotStatics(IPivotStatics&&) noexcept = default;
        IPivotStatics& operator=(IPivotStatics const&) & noexcept = default;
        IPivotStatics& operator=(IPivotStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotStatics2>
    {
        IPivotStatics2(std::nullptr_t = nullptr) noexcept {}
        IPivotStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotStatics2(IPivotStatics2 const&) noexcept = default;
        IPivotStatics2(IPivotStatics2&&) noexcept = default;
        IPivotStatics2& operator=(IPivotStatics2 const&) & noexcept = default;
        IPivotStatics2& operator=(IPivotStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPivotStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotStatics3>
    {
        IPivotStatics3(std::nullptr_t = nullptr) noexcept {}
        IPivotStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPivotStatics3(IPivotStatics3 const&) noexcept = default;
        IPivotStatics3(IPivotStatics3&&) noexcept = default;
        IPivotStatics3& operator=(IPivotStatics3 const&) & noexcept = default;
        IPivotStatics3& operator=(IPivotStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBar>
    {
        IProgressBar(std::nullptr_t = nullptr) noexcept {}
        IProgressBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressBar(IProgressBar const&) noexcept = default;
        IProgressBar(IProgressBar&&) noexcept = default;
        IProgressBar& operator=(IProgressBar const&) & noexcept = default;
        IProgressBar& operator=(IProgressBar&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBarFactory>
    {
        IProgressBarFactory(std::nullptr_t = nullptr) noexcept {}
        IProgressBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressBarFactory(IProgressBarFactory const&) noexcept = default;
        IProgressBarFactory(IProgressBarFactory&&) noexcept = default;
        IProgressBarFactory& operator=(IProgressBarFactory const&) & noexcept = default;
        IProgressBarFactory& operator=(IProgressBarFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBarStatics>
    {
        IProgressBarStatics(std::nullptr_t = nullptr) noexcept {}
        IProgressBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressBarStatics(IProgressBarStatics const&) noexcept = default;
        IProgressBarStatics(IProgressBarStatics&&) noexcept = default;
        IProgressBarStatics& operator=(IProgressBarStatics const&) & noexcept = default;
        IProgressBarStatics& operator=(IProgressBarStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressRing :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRing>
    {
        IProgressRing(std::nullptr_t = nullptr) noexcept {}
        IProgressRing(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressRing(IProgressRing const&) noexcept = default;
        IProgressRing(IProgressRing&&) noexcept = default;
        IProgressRing& operator=(IProgressRing const&) & noexcept = default;
        IProgressRing& operator=(IProgressRing&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IProgressRingStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRingStatics>
    {
        IProgressRingStatics(std::nullptr_t = nullptr) noexcept {}
        IProgressRingStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IProgressRingStatics(IProgressRingStatics const&) noexcept = default;
        IProgressRingStatics(IProgressRingStatics&&) noexcept = default;
        IProgressRingStatics& operator=(IProgressRingStatics const&) & noexcept = default;
        IProgressRingStatics& operator=(IProgressRingStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadioButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButton>
    {
        IRadioButton(std::nullptr_t = nullptr) noexcept {}
        IRadioButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadioButton(IRadioButton const&) noexcept = default;
        IRadioButton(IRadioButton&&) noexcept = default;
        IRadioButton& operator=(IRadioButton const&) & noexcept = default;
        IRadioButton& operator=(IRadioButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadioButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonFactory>
    {
        IRadioButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadioButtonFactory(IRadioButtonFactory const&) noexcept = default;
        IRadioButtonFactory(IRadioButtonFactory&&) noexcept = default;
        IRadioButtonFactory& operator=(IRadioButtonFactory const&) & noexcept = default;
        IRadioButtonFactory& operator=(IRadioButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRadioButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonStatics>
    {
        IRadioButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRadioButtonStatics(IRadioButtonStatics const&) noexcept = default;
        IRadioButtonStatics(IRadioButtonStatics&&) noexcept = default;
        IRadioButtonStatics& operator=(IRadioButtonStatics const&) & noexcept = default;
        IRadioButtonStatics& operator=(IRadioButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingControl>
    {
        IRatingControl(std::nullptr_t = nullptr) noexcept {}
        IRatingControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingControl(IRatingControl const&) noexcept = default;
        IRatingControl(IRatingControl&&) noexcept = default;
        IRatingControl& operator=(IRatingControl const&) & noexcept = default;
        IRatingControl& operator=(IRatingControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingControlFactory>
    {
        IRatingControlFactory(std::nullptr_t = nullptr) noexcept {}
        IRatingControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingControlFactory(IRatingControlFactory const&) noexcept = default;
        IRatingControlFactory(IRatingControlFactory&&) noexcept = default;
        IRatingControlFactory& operator=(IRatingControlFactory const&) & noexcept = default;
        IRatingControlFactory& operator=(IRatingControlFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingControlStatics>
    {
        IRatingControlStatics(std::nullptr_t = nullptr) noexcept {}
        IRatingControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingControlStatics(IRatingControlStatics const&) noexcept = default;
        IRatingControlStatics(IRatingControlStatics&&) noexcept = default;
        IRatingControlStatics& operator=(IRatingControlStatics const&) & noexcept = default;
        IRatingControlStatics& operator=(IRatingControlStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingItemFontInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemFontInfo>
    {
        IRatingItemFontInfo(std::nullptr_t = nullptr) noexcept {}
        IRatingItemFontInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingItemFontInfo(IRatingItemFontInfo const&) noexcept = default;
        IRatingItemFontInfo(IRatingItemFontInfo&&) noexcept = default;
        IRatingItemFontInfo& operator=(IRatingItemFontInfo const&) & noexcept = default;
        IRatingItemFontInfo& operator=(IRatingItemFontInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingItemFontInfoFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemFontInfoFactory>
    {
        IRatingItemFontInfoFactory(std::nullptr_t = nullptr) noexcept {}
        IRatingItemFontInfoFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingItemFontInfoFactory(IRatingItemFontInfoFactory const&) noexcept = default;
        IRatingItemFontInfoFactory(IRatingItemFontInfoFactory&&) noexcept = default;
        IRatingItemFontInfoFactory& operator=(IRatingItemFontInfoFactory const&) & noexcept = default;
        IRatingItemFontInfoFactory& operator=(IRatingItemFontInfoFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingItemFontInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemFontInfoStatics>
    {
        IRatingItemFontInfoStatics(std::nullptr_t = nullptr) noexcept {}
        IRatingItemFontInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingItemFontInfoStatics(IRatingItemFontInfoStatics const&) noexcept = default;
        IRatingItemFontInfoStatics(IRatingItemFontInfoStatics&&) noexcept = default;
        IRatingItemFontInfoStatics& operator=(IRatingItemFontInfoStatics const&) & noexcept = default;
        IRatingItemFontInfoStatics& operator=(IRatingItemFontInfoStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingItemImageInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemImageInfo>
    {
        IRatingItemImageInfo(std::nullptr_t = nullptr) noexcept {}
        IRatingItemImageInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingItemImageInfo(IRatingItemImageInfo const&) noexcept = default;
        IRatingItemImageInfo(IRatingItemImageInfo&&) noexcept = default;
        IRatingItemImageInfo& operator=(IRatingItemImageInfo const&) & noexcept = default;
        IRatingItemImageInfo& operator=(IRatingItemImageInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingItemImageInfoFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemImageInfoFactory>
    {
        IRatingItemImageInfoFactory(std::nullptr_t = nullptr) noexcept {}
        IRatingItemImageInfoFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingItemImageInfoFactory(IRatingItemImageInfoFactory const&) noexcept = default;
        IRatingItemImageInfoFactory(IRatingItemImageInfoFactory&&) noexcept = default;
        IRatingItemImageInfoFactory& operator=(IRatingItemImageInfoFactory const&) & noexcept = default;
        IRatingItemImageInfoFactory& operator=(IRatingItemImageInfoFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingItemImageInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemImageInfoStatics>
    {
        IRatingItemImageInfoStatics(std::nullptr_t = nullptr) noexcept {}
        IRatingItemImageInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingItemImageInfoStatics(IRatingItemImageInfoStatics const&) noexcept = default;
        IRatingItemImageInfoStatics(IRatingItemImageInfoStatics&&) noexcept = default;
        IRatingItemImageInfoStatics& operator=(IRatingItemImageInfoStatics const&) & noexcept = default;
        IRatingItemImageInfoStatics& operator=(IRatingItemImageInfoStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingItemInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemInfo>
    {
        IRatingItemInfo(std::nullptr_t = nullptr) noexcept {}
        IRatingItemInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingItemInfo(IRatingItemInfo const&) noexcept = default;
        IRatingItemInfo(IRatingItemInfo&&) noexcept = default;
        IRatingItemInfo& operator=(IRatingItemInfo const&) & noexcept = default;
        IRatingItemInfo& operator=(IRatingItemInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRatingItemInfoFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemInfoFactory>
    {
        IRatingItemInfoFactory(std::nullptr_t = nullptr) noexcept {}
        IRatingItemInfoFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRatingItemInfoFactory(IRatingItemInfoFactory const&) noexcept = default;
        IRatingItemInfoFactory(IRatingItemInfoFactory&&) noexcept = default;
        IRatingItemInfoFactory& operator=(IRatingItemInfoFactory const&) & noexcept = default;
        IRatingItemInfoFactory& operator=(IRatingItemInfoFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRefreshContainer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshContainer>
    {
        IRefreshContainer(std::nullptr_t = nullptr) noexcept {}
        IRefreshContainer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRefreshContainer(IRefreshContainer const&) noexcept = default;
        IRefreshContainer(IRefreshContainer&&) noexcept = default;
        IRefreshContainer& operator=(IRefreshContainer const&) & noexcept = default;
        IRefreshContainer& operator=(IRefreshContainer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRefreshContainerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshContainerFactory>
    {
        IRefreshContainerFactory(std::nullptr_t = nullptr) noexcept {}
        IRefreshContainerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRefreshContainerFactory(IRefreshContainerFactory const&) noexcept = default;
        IRefreshContainerFactory(IRefreshContainerFactory&&) noexcept = default;
        IRefreshContainerFactory& operator=(IRefreshContainerFactory const&) & noexcept = default;
        IRefreshContainerFactory& operator=(IRefreshContainerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRefreshContainerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshContainerStatics>
    {
        IRefreshContainerStatics(std::nullptr_t = nullptr) noexcept {}
        IRefreshContainerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRefreshContainerStatics(IRefreshContainerStatics const&) noexcept = default;
        IRefreshContainerStatics(IRefreshContainerStatics&&) noexcept = default;
        IRefreshContainerStatics& operator=(IRefreshContainerStatics const&) & noexcept = default;
        IRefreshContainerStatics& operator=(IRefreshContainerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRefreshInteractionRatioChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshInteractionRatioChangedEventArgs>
    {
        IRefreshInteractionRatioChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRefreshInteractionRatioChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRefreshInteractionRatioChangedEventArgs(IRefreshInteractionRatioChangedEventArgs const&) noexcept = default;
        IRefreshInteractionRatioChangedEventArgs(IRefreshInteractionRatioChangedEventArgs&&) noexcept = default;
        IRefreshInteractionRatioChangedEventArgs& operator=(IRefreshInteractionRatioChangedEventArgs const&) & noexcept = default;
        IRefreshInteractionRatioChangedEventArgs& operator=(IRefreshInteractionRatioChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRefreshRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshRequestedEventArgs>
    {
        IRefreshRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRefreshRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRefreshRequestedEventArgs(IRefreshRequestedEventArgs const&) noexcept = default;
        IRefreshRequestedEventArgs(IRefreshRequestedEventArgs&&) noexcept = default;
        IRefreshRequestedEventArgs& operator=(IRefreshRequestedEventArgs const&) & noexcept = default;
        IRefreshRequestedEventArgs& operator=(IRefreshRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRefreshStateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshStateChangedEventArgs>
    {
        IRefreshStateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRefreshStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRefreshStateChangedEventArgs(IRefreshStateChangedEventArgs const&) noexcept = default;
        IRefreshStateChangedEventArgs(IRefreshStateChangedEventArgs&&) noexcept = default;
        IRefreshStateChangedEventArgs& operator=(IRefreshStateChangedEventArgs const&) & noexcept = default;
        IRefreshStateChangedEventArgs& operator=(IRefreshStateChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRefreshVisualizer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshVisualizer>
    {
        IRefreshVisualizer(std::nullptr_t = nullptr) noexcept {}
        IRefreshVisualizer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRefreshVisualizer(IRefreshVisualizer const&) noexcept = default;
        IRefreshVisualizer(IRefreshVisualizer&&) noexcept = default;
        IRefreshVisualizer& operator=(IRefreshVisualizer const&) & noexcept = default;
        IRefreshVisualizer& operator=(IRefreshVisualizer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRefreshVisualizerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshVisualizerFactory>
    {
        IRefreshVisualizerFactory(std::nullptr_t = nullptr) noexcept {}
        IRefreshVisualizerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRefreshVisualizerFactory(IRefreshVisualizerFactory const&) noexcept = default;
        IRefreshVisualizerFactory(IRefreshVisualizerFactory&&) noexcept = default;
        IRefreshVisualizerFactory& operator=(IRefreshVisualizerFactory const&) & noexcept = default;
        IRefreshVisualizerFactory& operator=(IRefreshVisualizerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRefreshVisualizerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshVisualizerStatics>
    {
        IRefreshVisualizerStatics(std::nullptr_t = nullptr) noexcept {}
        IRefreshVisualizerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRefreshVisualizerStatics(IRefreshVisualizerStatics const&) noexcept = default;
        IRefreshVisualizerStatics(IRefreshVisualizerStatics&&) noexcept = default;
        IRefreshVisualizerStatics& operator=(IRefreshVisualizerStatics const&) & noexcept = default;
        IRefreshVisualizerStatics& operator=(IRefreshVisualizerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRelativePanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRelativePanel>
    {
        IRelativePanel(std::nullptr_t = nullptr) noexcept {}
        IRelativePanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRelativePanel(IRelativePanel const&) noexcept = default;
        IRelativePanel(IRelativePanel&&) noexcept = default;
        IRelativePanel& operator=(IRelativePanel const&) & noexcept = default;
        IRelativePanel& operator=(IRelativePanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRelativePanel2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRelativePanel2>
    {
        IRelativePanel2(std::nullptr_t = nullptr) noexcept {}
        IRelativePanel2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRelativePanel2(IRelativePanel2 const&) noexcept = default;
        IRelativePanel2(IRelativePanel2&&) noexcept = default;
        IRelativePanel2& operator=(IRelativePanel2 const&) & noexcept = default;
        IRelativePanel2& operator=(IRelativePanel2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRelativePanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRelativePanelFactory>
    {
        IRelativePanelFactory(std::nullptr_t = nullptr) noexcept {}
        IRelativePanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRelativePanelFactory(IRelativePanelFactory const&) noexcept = default;
        IRelativePanelFactory(IRelativePanelFactory&&) noexcept = default;
        IRelativePanelFactory& operator=(IRelativePanelFactory const&) & noexcept = default;
        IRelativePanelFactory& operator=(IRelativePanelFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRelativePanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRelativePanelStatics>
    {
        IRelativePanelStatics(std::nullptr_t = nullptr) noexcept {}
        IRelativePanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRelativePanelStatics(IRelativePanelStatics const&) noexcept = default;
        IRelativePanelStatics(IRelativePanelStatics&&) noexcept = default;
        IRelativePanelStatics& operator=(IRelativePanelStatics const&) & noexcept = default;
        IRelativePanelStatics& operator=(IRelativePanelStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRelativePanelStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRelativePanelStatics2>
    {
        IRelativePanelStatics2(std::nullptr_t = nullptr) noexcept {}
        IRelativePanelStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRelativePanelStatics2(IRelativePanelStatics2 const&) noexcept = default;
        IRelativePanelStatics2(IRelativePanelStatics2&&) noexcept = default;
        IRelativePanelStatics2& operator=(IRelativePanelStatics2 const&) & noexcept = default;
        IRelativePanelStatics2& operator=(IRelativePanelStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBox>
    {
        IRichEditBox(std::nullptr_t = nullptr) noexcept {}
        IRichEditBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBox(IRichEditBox const&) noexcept = default;
        IRichEditBox(IRichEditBox&&) noexcept = default;
        IRichEditBox& operator=(IRichEditBox const&) & noexcept = default;
        IRichEditBox& operator=(IRichEditBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBox2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBox2>
    {
        IRichEditBox2(std::nullptr_t = nullptr) noexcept {}
        IRichEditBox2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBox2(IRichEditBox2 const&) noexcept = default;
        IRichEditBox2(IRichEditBox2&&) noexcept = default;
        IRichEditBox2& operator=(IRichEditBox2 const&) & noexcept = default;
        IRichEditBox2& operator=(IRichEditBox2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBox3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBox3>
    {
        IRichEditBox3(std::nullptr_t = nullptr) noexcept {}
        IRichEditBox3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBox3(IRichEditBox3 const&) noexcept = default;
        IRichEditBox3(IRichEditBox3&&) noexcept = default;
        IRichEditBox3& operator=(IRichEditBox3 const&) & noexcept = default;
        IRichEditBox3& operator=(IRichEditBox3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBox4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBox4>
    {
        IRichEditBox4(std::nullptr_t = nullptr) noexcept {}
        IRichEditBox4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBox4(IRichEditBox4 const&) noexcept = default;
        IRichEditBox4(IRichEditBox4&&) noexcept = default;
        IRichEditBox4& operator=(IRichEditBox4 const&) & noexcept = default;
        IRichEditBox4& operator=(IRichEditBox4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBox5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBox5>
    {
        IRichEditBox5(std::nullptr_t = nullptr) noexcept {}
        IRichEditBox5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBox5(IRichEditBox5 const&) noexcept = default;
        IRichEditBox5(IRichEditBox5&&) noexcept = default;
        IRichEditBox5& operator=(IRichEditBox5 const&) & noexcept = default;
        IRichEditBox5& operator=(IRichEditBox5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBox6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBox6>
    {
        IRichEditBox6(std::nullptr_t = nullptr) noexcept {}
        IRichEditBox6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBox6(IRichEditBox6 const&) noexcept = default;
        IRichEditBox6(IRichEditBox6&&) noexcept = default;
        IRichEditBox6& operator=(IRichEditBox6 const&) & noexcept = default;
        IRichEditBox6& operator=(IRichEditBox6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBox7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBox7>
    {
        IRichEditBox7(std::nullptr_t = nullptr) noexcept {}
        IRichEditBox7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBox7(IRichEditBox7 const&) noexcept = default;
        IRichEditBox7(IRichEditBox7&&) noexcept = default;
        IRichEditBox7& operator=(IRichEditBox7 const&) & noexcept = default;
        IRichEditBox7& operator=(IRichEditBox7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBox8 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBox8>
    {
        IRichEditBox8(std::nullptr_t = nullptr) noexcept {}
        IRichEditBox8(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBox8(IRichEditBox8 const&) noexcept = default;
        IRichEditBox8(IRichEditBox8&&) noexcept = default;
        IRichEditBox8& operator=(IRichEditBox8 const&) & noexcept = default;
        IRichEditBox8& operator=(IRichEditBox8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxFactory>
    {
        IRichEditBoxFactory(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxFactory(IRichEditBoxFactory const&) noexcept = default;
        IRichEditBoxFactory(IRichEditBoxFactory&&) noexcept = default;
        IRichEditBoxFactory& operator=(IRichEditBoxFactory const&) & noexcept = default;
        IRichEditBoxFactory& operator=(IRichEditBoxFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxSelectionChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxSelectionChangingEventArgs>
    {
        IRichEditBoxSelectionChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxSelectionChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxSelectionChangingEventArgs(IRichEditBoxSelectionChangingEventArgs const&) noexcept = default;
        IRichEditBoxSelectionChangingEventArgs(IRichEditBoxSelectionChangingEventArgs&&) noexcept = default;
        IRichEditBoxSelectionChangingEventArgs& operator=(IRichEditBoxSelectionChangingEventArgs const&) & noexcept = default;
        IRichEditBoxSelectionChangingEventArgs& operator=(IRichEditBoxSelectionChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxStatics>
    {
        IRichEditBoxStatics(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxStatics(IRichEditBoxStatics const&) noexcept = default;
        IRichEditBoxStatics(IRichEditBoxStatics&&) noexcept = default;
        IRichEditBoxStatics& operator=(IRichEditBoxStatics const&) & noexcept = default;
        IRichEditBoxStatics& operator=(IRichEditBoxStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxStatics2>
    {
        IRichEditBoxStatics2(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxStatics2(IRichEditBoxStatics2 const&) noexcept = default;
        IRichEditBoxStatics2(IRichEditBoxStatics2&&) noexcept = default;
        IRichEditBoxStatics2& operator=(IRichEditBoxStatics2 const&) & noexcept = default;
        IRichEditBoxStatics2& operator=(IRichEditBoxStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxStatics3>
    {
        IRichEditBoxStatics3(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxStatics3(IRichEditBoxStatics3 const&) noexcept = default;
        IRichEditBoxStatics3(IRichEditBoxStatics3&&) noexcept = default;
        IRichEditBoxStatics3& operator=(IRichEditBoxStatics3 const&) & noexcept = default;
        IRichEditBoxStatics3& operator=(IRichEditBoxStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxStatics4>
    {
        IRichEditBoxStatics4(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxStatics4(IRichEditBoxStatics4 const&) noexcept = default;
        IRichEditBoxStatics4(IRichEditBoxStatics4&&) noexcept = default;
        IRichEditBoxStatics4& operator=(IRichEditBoxStatics4 const&) & noexcept = default;
        IRichEditBoxStatics4& operator=(IRichEditBoxStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxStatics5>
    {
        IRichEditBoxStatics5(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxStatics5(IRichEditBoxStatics5 const&) noexcept = default;
        IRichEditBoxStatics5(IRichEditBoxStatics5&&) noexcept = default;
        IRichEditBoxStatics5& operator=(IRichEditBoxStatics5 const&) & noexcept = default;
        IRichEditBoxStatics5& operator=(IRichEditBoxStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxStatics6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxStatics6>
    {
        IRichEditBoxStatics6(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxStatics6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxStatics6(IRichEditBoxStatics6 const&) noexcept = default;
        IRichEditBoxStatics6(IRichEditBoxStatics6&&) noexcept = default;
        IRichEditBoxStatics6& operator=(IRichEditBoxStatics6 const&) & noexcept = default;
        IRichEditBoxStatics6& operator=(IRichEditBoxStatics6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxStatics7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxStatics7>
    {
        IRichEditBoxStatics7(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxStatics7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxStatics7(IRichEditBoxStatics7 const&) noexcept = default;
        IRichEditBoxStatics7(IRichEditBoxStatics7&&) noexcept = default;
        IRichEditBoxStatics7& operator=(IRichEditBoxStatics7 const&) & noexcept = default;
        IRichEditBoxStatics7& operator=(IRichEditBoxStatics7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxStatics8 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxStatics8>
    {
        IRichEditBoxStatics8(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxStatics8(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxStatics8(IRichEditBoxStatics8 const&) noexcept = default;
        IRichEditBoxStatics8(IRichEditBoxStatics8&&) noexcept = default;
        IRichEditBoxStatics8& operator=(IRichEditBoxStatics8 const&) & noexcept = default;
        IRichEditBoxStatics8& operator=(IRichEditBoxStatics8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxTextChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxTextChangingEventArgs>
    {
        IRichEditBoxTextChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxTextChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxTextChangingEventArgs(IRichEditBoxTextChangingEventArgs const&) noexcept = default;
        IRichEditBoxTextChangingEventArgs(IRichEditBoxTextChangingEventArgs&&) noexcept = default;
        IRichEditBoxTextChangingEventArgs& operator=(IRichEditBoxTextChangingEventArgs const&) & noexcept = default;
        IRichEditBoxTextChangingEventArgs& operator=(IRichEditBoxTextChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichEditBoxTextChangingEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxTextChangingEventArgs2>
    {
        IRichEditBoxTextChangingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxTextChangingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichEditBoxTextChangingEventArgs2(IRichEditBoxTextChangingEventArgs2 const&) noexcept = default;
        IRichEditBoxTextChangingEventArgs2(IRichEditBoxTextChangingEventArgs2&&) noexcept = default;
        IRichEditBoxTextChangingEventArgs2& operator=(IRichEditBoxTextChangingEventArgs2 const&) & noexcept = default;
        IRichEditBoxTextChangingEventArgs2& operator=(IRichEditBoxTextChangingEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlock :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlock>
    {
        IRichTextBlock(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlock(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlock(IRichTextBlock const&) noexcept = default;
        IRichTextBlock(IRichTextBlock&&) noexcept = default;
        IRichTextBlock& operator=(IRichTextBlock const&) & noexcept = default;
        IRichTextBlock& operator=(IRichTextBlock&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlock2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlock2>
    {
        IRichTextBlock2(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlock2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlock2(IRichTextBlock2 const&) noexcept = default;
        IRichTextBlock2(IRichTextBlock2&&) noexcept = default;
        IRichTextBlock2& operator=(IRichTextBlock2 const&) & noexcept = default;
        IRichTextBlock2& operator=(IRichTextBlock2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlock3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlock3>
    {
        IRichTextBlock3(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlock3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlock3(IRichTextBlock3 const&) noexcept = default;
        IRichTextBlock3(IRichTextBlock3&&) noexcept = default;
        IRichTextBlock3& operator=(IRichTextBlock3 const&) & noexcept = default;
        IRichTextBlock3& operator=(IRichTextBlock3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlock4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlock4>
    {
        IRichTextBlock4(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlock4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlock4(IRichTextBlock4 const&) noexcept = default;
        IRichTextBlock4(IRichTextBlock4&&) noexcept = default;
        IRichTextBlock4& operator=(IRichTextBlock4 const&) & noexcept = default;
        IRichTextBlock4& operator=(IRichTextBlock4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlock5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlock5>
    {
        IRichTextBlock5(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlock5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlock5(IRichTextBlock5 const&) noexcept = default;
        IRichTextBlock5(IRichTextBlock5&&) noexcept = default;
        IRichTextBlock5& operator=(IRichTextBlock5 const&) & noexcept = default;
        IRichTextBlock5& operator=(IRichTextBlock5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlock6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlock6>
    {
        IRichTextBlock6(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlock6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlock6(IRichTextBlock6 const&) noexcept = default;
        IRichTextBlock6(IRichTextBlock6&&) noexcept = default;
        IRichTextBlock6& operator=(IRichTextBlock6 const&) & noexcept = default;
        IRichTextBlock6& operator=(IRichTextBlock6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockOverflow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflow>
    {
        IRichTextBlockOverflow(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockOverflow(IRichTextBlockOverflow const&) noexcept = default;
        IRichTextBlockOverflow(IRichTextBlockOverflow&&) noexcept = default;
        IRichTextBlockOverflow& operator=(IRichTextBlockOverflow const&) & noexcept = default;
        IRichTextBlockOverflow& operator=(IRichTextBlockOverflow&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockOverflow2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflow2>
    {
        IRichTextBlockOverflow2(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflow2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockOverflow2(IRichTextBlockOverflow2 const&) noexcept = default;
        IRichTextBlockOverflow2(IRichTextBlockOverflow2&&) noexcept = default;
        IRichTextBlockOverflow2& operator=(IRichTextBlockOverflow2 const&) & noexcept = default;
        IRichTextBlockOverflow2& operator=(IRichTextBlockOverflow2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockOverflow3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflow3>
    {
        IRichTextBlockOverflow3(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflow3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockOverflow3(IRichTextBlockOverflow3 const&) noexcept = default;
        IRichTextBlockOverflow3(IRichTextBlockOverflow3&&) noexcept = default;
        IRichTextBlockOverflow3& operator=(IRichTextBlockOverflow3 const&) & noexcept = default;
        IRichTextBlockOverflow3& operator=(IRichTextBlockOverflow3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockOverflowStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflowStatics>
    {
        IRichTextBlockOverflowStatics(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflowStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockOverflowStatics(IRichTextBlockOverflowStatics const&) noexcept = default;
        IRichTextBlockOverflowStatics(IRichTextBlockOverflowStatics&&) noexcept = default;
        IRichTextBlockOverflowStatics& operator=(IRichTextBlockOverflowStatics const&) & noexcept = default;
        IRichTextBlockOverflowStatics& operator=(IRichTextBlockOverflowStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockOverflowStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflowStatics2>
    {
        IRichTextBlockOverflowStatics2(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflowStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockOverflowStatics2(IRichTextBlockOverflowStatics2 const&) noexcept = default;
        IRichTextBlockOverflowStatics2(IRichTextBlockOverflowStatics2&&) noexcept = default;
        IRichTextBlockOverflowStatics2& operator=(IRichTextBlockOverflowStatics2 const&) & noexcept = default;
        IRichTextBlockOverflowStatics2& operator=(IRichTextBlockOverflowStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockOverflowStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflowStatics3>
    {
        IRichTextBlockOverflowStatics3(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflowStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockOverflowStatics3(IRichTextBlockOverflowStatics3 const&) noexcept = default;
        IRichTextBlockOverflowStatics3(IRichTextBlockOverflowStatics3&&) noexcept = default;
        IRichTextBlockOverflowStatics3& operator=(IRichTextBlockOverflowStatics3 const&) & noexcept = default;
        IRichTextBlockOverflowStatics3& operator=(IRichTextBlockOverflowStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockStatics>
    {
        IRichTextBlockStatics(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockStatics(IRichTextBlockStatics const&) noexcept = default;
        IRichTextBlockStatics(IRichTextBlockStatics&&) noexcept = default;
        IRichTextBlockStatics& operator=(IRichTextBlockStatics const&) & noexcept = default;
        IRichTextBlockStatics& operator=(IRichTextBlockStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockStatics2>
    {
        IRichTextBlockStatics2(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockStatics2(IRichTextBlockStatics2 const&) noexcept = default;
        IRichTextBlockStatics2(IRichTextBlockStatics2&&) noexcept = default;
        IRichTextBlockStatics2& operator=(IRichTextBlockStatics2 const&) & noexcept = default;
        IRichTextBlockStatics2& operator=(IRichTextBlockStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockStatics3>
    {
        IRichTextBlockStatics3(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockStatics3(IRichTextBlockStatics3 const&) noexcept = default;
        IRichTextBlockStatics3(IRichTextBlockStatics3&&) noexcept = default;
        IRichTextBlockStatics3& operator=(IRichTextBlockStatics3 const&) & noexcept = default;
        IRichTextBlockStatics3& operator=(IRichTextBlockStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockStatics4>
    {
        IRichTextBlockStatics4(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockStatics4(IRichTextBlockStatics4 const&) noexcept = default;
        IRichTextBlockStatics4(IRichTextBlockStatics4&&) noexcept = default;
        IRichTextBlockStatics4& operator=(IRichTextBlockStatics4 const&) & noexcept = default;
        IRichTextBlockStatics4& operator=(IRichTextBlockStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockStatics5>
    {
        IRichTextBlockStatics5(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockStatics5(IRichTextBlockStatics5 const&) noexcept = default;
        IRichTextBlockStatics5(IRichTextBlockStatics5&&) noexcept = default;
        IRichTextBlockStatics5& operator=(IRichTextBlockStatics5 const&) & noexcept = default;
        IRichTextBlockStatics5& operator=(IRichTextBlockStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRichTextBlockStatics6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockStatics6>
    {
        IRichTextBlockStatics6(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockStatics6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRichTextBlockStatics6(IRichTextBlockStatics6 const&) noexcept = default;
        IRichTextBlockStatics6(IRichTextBlockStatics6&&) noexcept = default;
        IRichTextBlockStatics6& operator=(IRichTextBlockStatics6 const&) & noexcept = default;
        IRichTextBlockStatics6& operator=(IRichTextBlockStatics6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRowDefinition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRowDefinition>
    {
        IRowDefinition(std::nullptr_t = nullptr) noexcept {}
        IRowDefinition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRowDefinition(IRowDefinition const&) noexcept = default;
        IRowDefinition(IRowDefinition&&) noexcept = default;
        IRowDefinition& operator=(IRowDefinition const&) & noexcept = default;
        IRowDefinition& operator=(IRowDefinition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRowDefinitionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRowDefinitionStatics>
    {
        IRowDefinitionStatics(std::nullptr_t = nullptr) noexcept {}
        IRowDefinitionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRowDefinitionStatics(IRowDefinitionStatics const&) noexcept = default;
        IRowDefinitionStatics(IRowDefinitionStatics&&) noexcept = default;
        IRowDefinitionStatics& operator=(IRowDefinitionStatics const&) & noexcept = default;
        IRowDefinitionStatics& operator=(IRowDefinitionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollAnchorProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollAnchorProvider>
    {
        IScrollAnchorProvider(std::nullptr_t = nullptr) noexcept {}
        IScrollAnchorProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollAnchorProvider(IScrollAnchorProvider const&) noexcept = default;
        IScrollAnchorProvider(IScrollAnchorProvider&&) noexcept = default;
        IScrollAnchorProvider& operator=(IScrollAnchorProvider const&) & noexcept = default;
        IScrollAnchorProvider& operator=(IScrollAnchorProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollContentPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollContentPresenter>
    {
        IScrollContentPresenter(std::nullptr_t = nullptr) noexcept {}
        IScrollContentPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollContentPresenter(IScrollContentPresenter const&) noexcept = default;
        IScrollContentPresenter(IScrollContentPresenter&&) noexcept = default;
        IScrollContentPresenter& operator=(IScrollContentPresenter const&) & noexcept = default;
        IScrollContentPresenter& operator=(IScrollContentPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollContentPresenter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollContentPresenter2>
    {
        IScrollContentPresenter2(std::nullptr_t = nullptr) noexcept {}
        IScrollContentPresenter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollContentPresenter2(IScrollContentPresenter2 const&) noexcept = default;
        IScrollContentPresenter2(IScrollContentPresenter2&&) noexcept = default;
        IScrollContentPresenter2& operator=(IScrollContentPresenter2 const&) & noexcept = default;
        IScrollContentPresenter2& operator=(IScrollContentPresenter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollContentPresenterStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollContentPresenterStatics2>
    {
        IScrollContentPresenterStatics2(std::nullptr_t = nullptr) noexcept {}
        IScrollContentPresenterStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollContentPresenterStatics2(IScrollContentPresenterStatics2 const&) noexcept = default;
        IScrollContentPresenterStatics2(IScrollContentPresenterStatics2&&) noexcept = default;
        IScrollContentPresenterStatics2& operator=(IScrollContentPresenterStatics2 const&) & noexcept = default;
        IScrollContentPresenterStatics2& operator=(IScrollContentPresenterStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewer>
    {
        IScrollViewer(std::nullptr_t = nullptr) noexcept {}
        IScrollViewer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewer(IScrollViewer const&) noexcept = default;
        IScrollViewer(IScrollViewer&&) noexcept = default;
        IScrollViewer& operator=(IScrollViewer const&) & noexcept = default;
        IScrollViewer& operator=(IScrollViewer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewer2>
    {
        IScrollViewer2(std::nullptr_t = nullptr) noexcept {}
        IScrollViewer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewer2(IScrollViewer2 const&) noexcept = default;
        IScrollViewer2(IScrollViewer2&&) noexcept = default;
        IScrollViewer2& operator=(IScrollViewer2 const&) & noexcept = default;
        IScrollViewer2& operator=(IScrollViewer2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewer3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewer3>
    {
        IScrollViewer3(std::nullptr_t = nullptr) noexcept {}
        IScrollViewer3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewer3(IScrollViewer3 const&) noexcept = default;
        IScrollViewer3(IScrollViewer3&&) noexcept = default;
        IScrollViewer3& operator=(IScrollViewer3 const&) & noexcept = default;
        IScrollViewer3& operator=(IScrollViewer3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewer4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewer4>
    {
        IScrollViewer4(std::nullptr_t = nullptr) noexcept {}
        IScrollViewer4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewer4(IScrollViewer4 const&) noexcept = default;
        IScrollViewer4(IScrollViewer4&&) noexcept = default;
        IScrollViewer4& operator=(IScrollViewer4 const&) & noexcept = default;
        IScrollViewer4& operator=(IScrollViewer4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerStatics>
    {
        IScrollViewerStatics(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewerStatics(IScrollViewerStatics const&) noexcept = default;
        IScrollViewerStatics(IScrollViewerStatics&&) noexcept = default;
        IScrollViewerStatics& operator=(IScrollViewerStatics const&) & noexcept = default;
        IScrollViewerStatics& operator=(IScrollViewerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerStatics2>
    {
        IScrollViewerStatics2(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewerStatics2(IScrollViewerStatics2 const&) noexcept = default;
        IScrollViewerStatics2(IScrollViewerStatics2&&) noexcept = default;
        IScrollViewerStatics2& operator=(IScrollViewerStatics2 const&) & noexcept = default;
        IScrollViewerStatics2& operator=(IScrollViewerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewerStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerStatics4>
    {
        IScrollViewerStatics4(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewerStatics4(IScrollViewerStatics4 const&) noexcept = default;
        IScrollViewerStatics4(IScrollViewerStatics4&&) noexcept = default;
        IScrollViewerStatics4& operator=(IScrollViewerStatics4 const&) & noexcept = default;
        IScrollViewerStatics4& operator=(IScrollViewerStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewerView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerView>
    {
        IScrollViewerView(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewerView(IScrollViewerView const&) noexcept = default;
        IScrollViewerView(IScrollViewerView&&) noexcept = default;
        IScrollViewerView& operator=(IScrollViewerView const&) & noexcept = default;
        IScrollViewerView& operator=(IScrollViewerView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewerViewChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerViewChangedEventArgs>
    {
        IScrollViewerViewChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerViewChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewerViewChangedEventArgs(IScrollViewerViewChangedEventArgs const&) noexcept = default;
        IScrollViewerViewChangedEventArgs(IScrollViewerViewChangedEventArgs&&) noexcept = default;
        IScrollViewerViewChangedEventArgs& operator=(IScrollViewerViewChangedEventArgs const&) & noexcept = default;
        IScrollViewerViewChangedEventArgs& operator=(IScrollViewerViewChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IScrollViewerViewChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerViewChangingEventArgs>
    {
        IScrollViewerViewChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerViewChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IScrollViewerViewChangingEventArgs(IScrollViewerViewChangingEventArgs const&) noexcept = default;
        IScrollViewerViewChangingEventArgs(IScrollViewerViewChangingEventArgs&&) noexcept = default;
        IScrollViewerViewChangingEventArgs& operator=(IScrollViewerViewChangingEventArgs const&) & noexcept = default;
        IScrollViewerViewChangingEventArgs& operator=(IScrollViewerViewChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISearchBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISearchBox>
    {
        ISearchBox(std::nullptr_t = nullptr) noexcept {}
        ISearchBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISearchBox(ISearchBox const&) noexcept = default;
        ISearchBox(ISearchBox&&) noexcept = default;
        ISearchBox& operator=(ISearchBox const&) & noexcept = default;
        ISearchBox& operator=(ISearchBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISearchBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISearchBoxFactory>
    {
        ISearchBoxFactory(std::nullptr_t = nullptr) noexcept {}
        ISearchBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISearchBoxFactory(ISearchBoxFactory const&) noexcept = default;
        ISearchBoxFactory(ISearchBoxFactory&&) noexcept = default;
        ISearchBoxFactory& operator=(ISearchBoxFactory const&) & noexcept = default;
        ISearchBoxFactory& operator=(ISearchBoxFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISearchBoxQueryChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISearchBoxQueryChangedEventArgs>
    {
        ISearchBoxQueryChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISearchBoxQueryChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISearchBoxQueryChangedEventArgs(ISearchBoxQueryChangedEventArgs const&) noexcept = default;
        ISearchBoxQueryChangedEventArgs(ISearchBoxQueryChangedEventArgs&&) noexcept = default;
        ISearchBoxQueryChangedEventArgs& operator=(ISearchBoxQueryChangedEventArgs const&) & noexcept = default;
        ISearchBoxQueryChangedEventArgs& operator=(ISearchBoxQueryChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISearchBoxQuerySubmittedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISearchBoxQuerySubmittedEventArgs>
    {
        ISearchBoxQuerySubmittedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISearchBoxQuerySubmittedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISearchBoxQuerySubmittedEventArgs(ISearchBoxQuerySubmittedEventArgs const&) noexcept = default;
        ISearchBoxQuerySubmittedEventArgs(ISearchBoxQuerySubmittedEventArgs&&) noexcept = default;
        ISearchBoxQuerySubmittedEventArgs& operator=(ISearchBoxQuerySubmittedEventArgs const&) & noexcept = default;
        ISearchBoxQuerySubmittedEventArgs& operator=(ISearchBoxQuerySubmittedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISearchBoxResultSuggestionChosenEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISearchBoxResultSuggestionChosenEventArgs>
    {
        ISearchBoxResultSuggestionChosenEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISearchBoxResultSuggestionChosenEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISearchBoxResultSuggestionChosenEventArgs(ISearchBoxResultSuggestionChosenEventArgs const&) noexcept = default;
        ISearchBoxResultSuggestionChosenEventArgs(ISearchBoxResultSuggestionChosenEventArgs&&) noexcept = default;
        ISearchBoxResultSuggestionChosenEventArgs& operator=(ISearchBoxResultSuggestionChosenEventArgs const&) & noexcept = default;
        ISearchBoxResultSuggestionChosenEventArgs& operator=(ISearchBoxResultSuggestionChosenEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISearchBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISearchBoxStatics>
    {
        ISearchBoxStatics(std::nullptr_t = nullptr) noexcept {}
        ISearchBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISearchBoxStatics(ISearchBoxStatics const&) noexcept = default;
        ISearchBoxStatics(ISearchBoxStatics&&) noexcept = default;
        ISearchBoxStatics& operator=(ISearchBoxStatics const&) & noexcept = default;
        ISearchBoxStatics& operator=(ISearchBoxStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISearchBoxSuggestionsRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISearchBoxSuggestionsRequestedEventArgs>
    {
        ISearchBoxSuggestionsRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISearchBoxSuggestionsRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISearchBoxSuggestionsRequestedEventArgs(ISearchBoxSuggestionsRequestedEventArgs const&) noexcept = default;
        ISearchBoxSuggestionsRequestedEventArgs(ISearchBoxSuggestionsRequestedEventArgs&&) noexcept = default;
        ISearchBoxSuggestionsRequestedEventArgs& operator=(ISearchBoxSuggestionsRequestedEventArgs const&) & noexcept = default;
        ISearchBoxSuggestionsRequestedEventArgs& operator=(ISearchBoxSuggestionsRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISectionsInViewChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISectionsInViewChangedEventArgs>
    {
        ISectionsInViewChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISectionsInViewChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISectionsInViewChangedEventArgs(ISectionsInViewChangedEventArgs const&) noexcept = default;
        ISectionsInViewChangedEventArgs(ISectionsInViewChangedEventArgs&&) noexcept = default;
        ISectionsInViewChangedEventArgs& operator=(ISectionsInViewChangedEventArgs const&) & noexcept = default;
        ISectionsInViewChangedEventArgs& operator=(ISectionsInViewChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISectionsInViewChangedEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISectionsInViewChangedEventArgsFactory>
    {
        ISectionsInViewChangedEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        ISectionsInViewChangedEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISectionsInViewChangedEventArgsFactory(ISectionsInViewChangedEventArgsFactory const&) noexcept = default;
        ISectionsInViewChangedEventArgsFactory(ISectionsInViewChangedEventArgsFactory&&) noexcept = default;
        ISectionsInViewChangedEventArgsFactory& operator=(ISectionsInViewChangedEventArgsFactory const&) & noexcept = default;
        ISectionsInViewChangedEventArgsFactory& operator=(ISectionsInViewChangedEventArgsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectionChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectionChangedEventArgs>
    {
        ISelectionChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISelectionChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectionChangedEventArgs(ISelectionChangedEventArgs const&) noexcept = default;
        ISelectionChangedEventArgs(ISelectionChangedEventArgs&&) noexcept = default;
        ISelectionChangedEventArgs& operator=(ISelectionChangedEventArgs const&) & noexcept = default;
        ISelectionChangedEventArgs& operator=(ISelectionChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISelectionChangedEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectionChangedEventArgsFactory>
    {
        ISelectionChangedEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        ISelectionChangedEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISelectionChangedEventArgsFactory(ISelectionChangedEventArgsFactory const&) noexcept = default;
        ISelectionChangedEventArgsFactory(ISelectionChangedEventArgsFactory&&) noexcept = default;
        ISelectionChangedEventArgsFactory& operator=(ISelectionChangedEventArgsFactory const&) & noexcept = default;
        ISelectionChangedEventArgsFactory& operator=(ISelectionChangedEventArgsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISemanticZoom :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoom>
    {
        ISemanticZoom(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoom(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISemanticZoom(ISemanticZoom const&) noexcept = default;
        ISemanticZoom(ISemanticZoom&&) noexcept = default;
        ISemanticZoom& operator=(ISemanticZoom const&) & noexcept = default;
        ISemanticZoom& operator=(ISemanticZoom&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISemanticZoomInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomInformation>
    {
        ISemanticZoomInformation(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISemanticZoomInformation(ISemanticZoomInformation const&) noexcept = default;
        ISemanticZoomInformation(ISemanticZoomInformation&&) noexcept = default;
        ISemanticZoomInformation& operator=(ISemanticZoomInformation const&) & noexcept = default;
        ISemanticZoomInformation& operator=(ISemanticZoomInformation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISemanticZoomLocation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomLocation>
    {
        ISemanticZoomLocation(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomLocation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISemanticZoomLocation(ISemanticZoomLocation const&) noexcept = default;
        ISemanticZoomLocation(ISemanticZoomLocation&&) noexcept = default;
        ISemanticZoomLocation& operator=(ISemanticZoomLocation const&) & noexcept = default;
        ISemanticZoomLocation& operator=(ISemanticZoomLocation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISemanticZoomStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomStatics>
    {
        ISemanticZoomStatics(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISemanticZoomStatics(ISemanticZoomStatics const&) noexcept = default;
        ISemanticZoomStatics(ISemanticZoomStatics&&) noexcept = default;
        ISemanticZoomStatics& operator=(ISemanticZoomStatics const&) & noexcept = default;
        ISemanticZoomStatics& operator=(ISemanticZoomStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISemanticZoomViewChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomViewChangedEventArgs>
    {
        ISemanticZoomViewChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomViewChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISemanticZoomViewChangedEventArgs(ISemanticZoomViewChangedEventArgs const&) noexcept = default;
        ISemanticZoomViewChangedEventArgs(ISemanticZoomViewChangedEventArgs&&) noexcept = default;
        ISemanticZoomViewChangedEventArgs& operator=(ISemanticZoomViewChangedEventArgs const&) & noexcept = default;
        ISemanticZoomViewChangedEventArgs& operator=(ISemanticZoomViewChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISettingsFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISettingsFlyout>
    {
        ISettingsFlyout(std::nullptr_t = nullptr) noexcept {}
        ISettingsFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISettingsFlyout(ISettingsFlyout const&) noexcept = default;
        ISettingsFlyout(ISettingsFlyout&&) noexcept = default;
        ISettingsFlyout& operator=(ISettingsFlyout const&) & noexcept = default;
        ISettingsFlyout& operator=(ISettingsFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISettingsFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISettingsFlyoutFactory>
    {
        ISettingsFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        ISettingsFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISettingsFlyoutFactory(ISettingsFlyoutFactory const&) noexcept = default;
        ISettingsFlyoutFactory(ISettingsFlyoutFactory&&) noexcept = default;
        ISettingsFlyoutFactory& operator=(ISettingsFlyoutFactory const&) & noexcept = default;
        ISettingsFlyoutFactory& operator=(ISettingsFlyoutFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISettingsFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISettingsFlyoutStatics>
    {
        ISettingsFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        ISettingsFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISettingsFlyoutStatics(ISettingsFlyoutStatics const&) noexcept = default;
        ISettingsFlyoutStatics(ISettingsFlyoutStatics&&) noexcept = default;
        ISettingsFlyoutStatics& operator=(ISettingsFlyoutStatics const&) & noexcept = default;
        ISettingsFlyoutStatics& operator=(ISettingsFlyoutStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISlider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISlider>
    {
        ISlider(std::nullptr_t = nullptr) noexcept {}
        ISlider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISlider(ISlider const&) noexcept = default;
        ISlider(ISlider&&) noexcept = default;
        ISlider& operator=(ISlider const&) & noexcept = default;
        ISlider& operator=(ISlider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISlider2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISlider2>
    {
        ISlider2(std::nullptr_t = nullptr) noexcept {}
        ISlider2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISlider2(ISlider2 const&) noexcept = default;
        ISlider2(ISlider2&&) noexcept = default;
        ISlider2& operator=(ISlider2 const&) & noexcept = default;
        ISlider2& operator=(ISlider2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISliderFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISliderFactory>
    {
        ISliderFactory(std::nullptr_t = nullptr) noexcept {}
        ISliderFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISliderFactory(ISliderFactory const&) noexcept = default;
        ISliderFactory(ISliderFactory&&) noexcept = default;
        ISliderFactory& operator=(ISliderFactory const&) & noexcept = default;
        ISliderFactory& operator=(ISliderFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISliderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISliderStatics>
    {
        ISliderStatics(std::nullptr_t = nullptr) noexcept {}
        ISliderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISliderStatics(ISliderStatics const&) noexcept = default;
        ISliderStatics(ISliderStatics&&) noexcept = default;
        ISliderStatics& operator=(ISliderStatics const&) & noexcept = default;
        ISliderStatics& operator=(ISliderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISliderStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISliderStatics2>
    {
        ISliderStatics2(std::nullptr_t = nullptr) noexcept {}
        ISliderStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISliderStatics2(ISliderStatics2 const&) noexcept = default;
        ISliderStatics2(ISliderStatics2&&) noexcept = default;
        ISliderStatics2& operator=(ISliderStatics2 const&) & noexcept = default;
        ISliderStatics2& operator=(ISliderStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButton>
    {
        ISplitButton(std::nullptr_t = nullptr) noexcept {}
        ISplitButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitButton(ISplitButton const&) noexcept = default;
        ISplitButton(ISplitButton&&) noexcept = default;
        ISplitButton& operator=(ISplitButton const&) & noexcept = default;
        ISplitButton& operator=(ISplitButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButtonAutomationPeer>
    {
        ISplitButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISplitButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitButtonAutomationPeer(ISplitButtonAutomationPeer const&) noexcept = default;
        ISplitButtonAutomationPeer(ISplitButtonAutomationPeer&&) noexcept = default;
        ISplitButtonAutomationPeer& operator=(ISplitButtonAutomationPeer const&) & noexcept = default;
        ISplitButtonAutomationPeer& operator=(ISplitButtonAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButtonAutomationPeerFactory>
    {
        ISplitButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISplitButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitButtonAutomationPeerFactory(ISplitButtonAutomationPeerFactory const&) noexcept = default;
        ISplitButtonAutomationPeerFactory(ISplitButtonAutomationPeerFactory&&) noexcept = default;
        ISplitButtonAutomationPeerFactory& operator=(ISplitButtonAutomationPeerFactory const&) & noexcept = default;
        ISplitButtonAutomationPeerFactory& operator=(ISplitButtonAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitButtonClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButtonClickEventArgs>
    {
        ISplitButtonClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISplitButtonClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitButtonClickEventArgs(ISplitButtonClickEventArgs const&) noexcept = default;
        ISplitButtonClickEventArgs(ISplitButtonClickEventArgs&&) noexcept = default;
        ISplitButtonClickEventArgs& operator=(ISplitButtonClickEventArgs const&) & noexcept = default;
        ISplitButtonClickEventArgs& operator=(ISplitButtonClickEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButtonFactory>
    {
        ISplitButtonFactory(std::nullptr_t = nullptr) noexcept {}
        ISplitButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitButtonFactory(ISplitButtonFactory const&) noexcept = default;
        ISplitButtonFactory(ISplitButtonFactory&&) noexcept = default;
        ISplitButtonFactory& operator=(ISplitButtonFactory const&) & noexcept = default;
        ISplitButtonFactory& operator=(ISplitButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButtonStatics>
    {
        ISplitButtonStatics(std::nullptr_t = nullptr) noexcept {}
        ISplitButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitButtonStatics(ISplitButtonStatics const&) noexcept = default;
        ISplitButtonStatics(ISplitButtonStatics&&) noexcept = default;
        ISplitButtonStatics& operator=(ISplitButtonStatics const&) & noexcept = default;
        ISplitButtonStatics& operator=(ISplitButtonStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitView>
    {
        ISplitView(std::nullptr_t = nullptr) noexcept {}
        ISplitView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitView(ISplitView const&) noexcept = default;
        ISplitView(ISplitView&&) noexcept = default;
        ISplitView& operator=(ISplitView const&) & noexcept = default;
        ISplitView& operator=(ISplitView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitView2>
    {
        ISplitView2(std::nullptr_t = nullptr) noexcept {}
        ISplitView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitView2(ISplitView2 const&) noexcept = default;
        ISplitView2(ISplitView2&&) noexcept = default;
        ISplitView2& operator=(ISplitView2 const&) & noexcept = default;
        ISplitView2& operator=(ISplitView2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitView3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitView3>
    {
        ISplitView3(std::nullptr_t = nullptr) noexcept {}
        ISplitView3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitView3(ISplitView3 const&) noexcept = default;
        ISplitView3(ISplitView3&&) noexcept = default;
        ISplitView3& operator=(ISplitView3 const&) & noexcept = default;
        ISplitView3& operator=(ISplitView3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitViewFactory>
    {
        ISplitViewFactory(std::nullptr_t = nullptr) noexcept {}
        ISplitViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitViewFactory(ISplitViewFactory const&) noexcept = default;
        ISplitViewFactory(ISplitViewFactory&&) noexcept = default;
        ISplitViewFactory& operator=(ISplitViewFactory const&) & noexcept = default;
        ISplitViewFactory& operator=(ISplitViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitViewPaneClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitViewPaneClosingEventArgs>
    {
        ISplitViewPaneClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISplitViewPaneClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitViewPaneClosingEventArgs(ISplitViewPaneClosingEventArgs const&) noexcept = default;
        ISplitViewPaneClosingEventArgs(ISplitViewPaneClosingEventArgs&&) noexcept = default;
        ISplitViewPaneClosingEventArgs& operator=(ISplitViewPaneClosingEventArgs const&) & noexcept = default;
        ISplitViewPaneClosingEventArgs& operator=(ISplitViewPaneClosingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitViewStatics>
    {
        ISplitViewStatics(std::nullptr_t = nullptr) noexcept {}
        ISplitViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitViewStatics(ISplitViewStatics const&) noexcept = default;
        ISplitViewStatics(ISplitViewStatics&&) noexcept = default;
        ISplitViewStatics& operator=(ISplitViewStatics const&) & noexcept = default;
        ISplitViewStatics& operator=(ISplitViewStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitViewStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitViewStatics2>
    {
        ISplitViewStatics2(std::nullptr_t = nullptr) noexcept {}
        ISplitViewStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitViewStatics2(ISplitViewStatics2 const&) noexcept = default;
        ISplitViewStatics2(ISplitViewStatics2&&) noexcept = default;
        ISplitViewStatics2& operator=(ISplitViewStatics2 const&) & noexcept = default;
        ISplitViewStatics2& operator=(ISplitViewStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStackPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanel>
    {
        IStackPanel(std::nullptr_t = nullptr) noexcept {}
        IStackPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStackPanel(IStackPanel const&) noexcept = default;
        IStackPanel(IStackPanel&&) noexcept = default;
        IStackPanel& operator=(IStackPanel const&) & noexcept = default;
        IStackPanel& operator=(IStackPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStackPanel2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanel2>
    {
        IStackPanel2(std::nullptr_t = nullptr) noexcept {}
        IStackPanel2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStackPanel2(IStackPanel2 const&) noexcept = default;
        IStackPanel2(IStackPanel2&&) noexcept = default;
        IStackPanel2& operator=(IStackPanel2 const&) & noexcept = default;
        IStackPanel2& operator=(IStackPanel2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStackPanel4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanel4>
    {
        IStackPanel4(std::nullptr_t = nullptr) noexcept {}
        IStackPanel4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStackPanel4(IStackPanel4 const&) noexcept = default;
        IStackPanel4(IStackPanel4&&) noexcept = default;
        IStackPanel4& operator=(IStackPanel4 const&) & noexcept = default;
        IStackPanel4& operator=(IStackPanel4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStackPanel5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanel5>
    {
        IStackPanel5(std::nullptr_t = nullptr) noexcept {}
        IStackPanel5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStackPanel5(IStackPanel5 const&) noexcept = default;
        IStackPanel5(IStackPanel5&&) noexcept = default;
        IStackPanel5& operator=(IStackPanel5 const&) & noexcept = default;
        IStackPanel5& operator=(IStackPanel5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStackPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanelFactory>
    {
        IStackPanelFactory(std::nullptr_t = nullptr) noexcept {}
        IStackPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStackPanelFactory(IStackPanelFactory const&) noexcept = default;
        IStackPanelFactory(IStackPanelFactory&&) noexcept = default;
        IStackPanelFactory& operator=(IStackPanelFactory const&) & noexcept = default;
        IStackPanelFactory& operator=(IStackPanelFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStackPanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanelStatics>
    {
        IStackPanelStatics(std::nullptr_t = nullptr) noexcept {}
        IStackPanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStackPanelStatics(IStackPanelStatics const&) noexcept = default;
        IStackPanelStatics(IStackPanelStatics&&) noexcept = default;
        IStackPanelStatics& operator=(IStackPanelStatics const&) & noexcept = default;
        IStackPanelStatics& operator=(IStackPanelStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStackPanelStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanelStatics2>
    {
        IStackPanelStatics2(std::nullptr_t = nullptr) noexcept {}
        IStackPanelStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStackPanelStatics2(IStackPanelStatics2 const&) noexcept = default;
        IStackPanelStatics2(IStackPanelStatics2&&) noexcept = default;
        IStackPanelStatics2& operator=(IStackPanelStatics2 const&) & noexcept = default;
        IStackPanelStatics2& operator=(IStackPanelStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStackPanelStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanelStatics4>
    {
        IStackPanelStatics4(std::nullptr_t = nullptr) noexcept {}
        IStackPanelStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStackPanelStatics4(IStackPanelStatics4 const&) noexcept = default;
        IStackPanelStatics4(IStackPanelStatics4&&) noexcept = default;
        IStackPanelStatics4& operator=(IStackPanelStatics4 const&) & noexcept = default;
        IStackPanelStatics4& operator=(IStackPanelStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStackPanelStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanelStatics5>
    {
        IStackPanelStatics5(std::nullptr_t = nullptr) noexcept {}
        IStackPanelStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStackPanelStatics5(IStackPanelStatics5 const&) noexcept = default;
        IStackPanelStatics5(IStackPanelStatics5&&) noexcept = default;
        IStackPanelStatics5& operator=(IStackPanelStatics5 const&) & noexcept = default;
        IStackPanelStatics5& operator=(IStackPanelStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStyleSelector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStyleSelector>
    {
        IStyleSelector(std::nullptr_t = nullptr) noexcept {}
        IStyleSelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStyleSelector(IStyleSelector const&) noexcept = default;
        IStyleSelector(IStyleSelector&&) noexcept = default;
        IStyleSelector& operator=(IStyleSelector const&) & noexcept = default;
        IStyleSelector& operator=(IStyleSelector&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStyleSelectorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStyleSelectorFactory>
    {
        IStyleSelectorFactory(std::nullptr_t = nullptr) noexcept {}
        IStyleSelectorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStyleSelectorFactory(IStyleSelectorFactory const&) noexcept = default;
        IStyleSelectorFactory(IStyleSelectorFactory&&) noexcept = default;
        IStyleSelectorFactory& operator=(IStyleSelectorFactory const&) & noexcept = default;
        IStyleSelectorFactory& operator=(IStyleSelectorFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStyleSelectorOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStyleSelectorOverrides>
    {
        IStyleSelectorOverrides(std::nullptr_t = nullptr) noexcept {}
        IStyleSelectorOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStyleSelectorOverrides(IStyleSelectorOverrides const&) noexcept = default;
        IStyleSelectorOverrides(IStyleSelectorOverrides&&) noexcept = default;
        IStyleSelectorOverrides& operator=(IStyleSelectorOverrides const&) & noexcept = default;
        IStyleSelectorOverrides& operator=(IStyleSelectorOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwapChainBackgroundPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainBackgroundPanel>
    {
        ISwapChainBackgroundPanel(std::nullptr_t = nullptr) noexcept {}
        ISwapChainBackgroundPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwapChainBackgroundPanel(ISwapChainBackgroundPanel const&) noexcept = default;
        ISwapChainBackgroundPanel(ISwapChainBackgroundPanel&&) noexcept = default;
        ISwapChainBackgroundPanel& operator=(ISwapChainBackgroundPanel const&) & noexcept = default;
        ISwapChainBackgroundPanel& operator=(ISwapChainBackgroundPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwapChainBackgroundPanel2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainBackgroundPanel2>
    {
        ISwapChainBackgroundPanel2(std::nullptr_t = nullptr) noexcept {}
        ISwapChainBackgroundPanel2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwapChainBackgroundPanel2(ISwapChainBackgroundPanel2 const&) noexcept = default;
        ISwapChainBackgroundPanel2(ISwapChainBackgroundPanel2&&) noexcept = default;
        ISwapChainBackgroundPanel2& operator=(ISwapChainBackgroundPanel2 const&) & noexcept = default;
        ISwapChainBackgroundPanel2& operator=(ISwapChainBackgroundPanel2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwapChainBackgroundPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainBackgroundPanelFactory>
    {
        ISwapChainBackgroundPanelFactory(std::nullptr_t = nullptr) noexcept {}
        ISwapChainBackgroundPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwapChainBackgroundPanelFactory(ISwapChainBackgroundPanelFactory const&) noexcept = default;
        ISwapChainBackgroundPanelFactory(ISwapChainBackgroundPanelFactory&&) noexcept = default;
        ISwapChainBackgroundPanelFactory& operator=(ISwapChainBackgroundPanelFactory const&) & noexcept = default;
        ISwapChainBackgroundPanelFactory& operator=(ISwapChainBackgroundPanelFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwapChainPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainPanel>
    {
        ISwapChainPanel(std::nullptr_t = nullptr) noexcept {}
        ISwapChainPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwapChainPanel(ISwapChainPanel const&) noexcept = default;
        ISwapChainPanel(ISwapChainPanel&&) noexcept = default;
        ISwapChainPanel& operator=(ISwapChainPanel const&) & noexcept = default;
        ISwapChainPanel& operator=(ISwapChainPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwapChainPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainPanelFactory>
    {
        ISwapChainPanelFactory(std::nullptr_t = nullptr) noexcept {}
        ISwapChainPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwapChainPanelFactory(ISwapChainPanelFactory const&) noexcept = default;
        ISwapChainPanelFactory(ISwapChainPanelFactory&&) noexcept = default;
        ISwapChainPanelFactory& operator=(ISwapChainPanelFactory const&) & noexcept = default;
        ISwapChainPanelFactory& operator=(ISwapChainPanelFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwapChainPanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainPanelStatics>
    {
        ISwapChainPanelStatics(std::nullptr_t = nullptr) noexcept {}
        ISwapChainPanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwapChainPanelStatics(ISwapChainPanelStatics const&) noexcept = default;
        ISwapChainPanelStatics(ISwapChainPanelStatics&&) noexcept = default;
        ISwapChainPanelStatics& operator=(ISwapChainPanelStatics const&) & noexcept = default;
        ISwapChainPanelStatics& operator=(ISwapChainPanelStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeControl>
    {
        ISwipeControl(std::nullptr_t = nullptr) noexcept {}
        ISwipeControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeControl(ISwipeControl const&) noexcept = default;
        ISwipeControl(ISwipeControl&&) noexcept = default;
        ISwipeControl& operator=(ISwipeControl const&) & noexcept = default;
        ISwipeControl& operator=(ISwipeControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeControlFactory>
    {
        ISwipeControlFactory(std::nullptr_t = nullptr) noexcept {}
        ISwipeControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeControlFactory(ISwipeControlFactory const&) noexcept = default;
        ISwipeControlFactory(ISwipeControlFactory&&) noexcept = default;
        ISwipeControlFactory& operator=(ISwipeControlFactory const&) & noexcept = default;
        ISwipeControlFactory& operator=(ISwipeControlFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeControlStatics>
    {
        ISwipeControlStatics(std::nullptr_t = nullptr) noexcept {}
        ISwipeControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeControlStatics(ISwipeControlStatics const&) noexcept = default;
        ISwipeControlStatics(ISwipeControlStatics&&) noexcept = default;
        ISwipeControlStatics& operator=(ISwipeControlStatics const&) & noexcept = default;
        ISwipeControlStatics& operator=(ISwipeControlStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItem>
    {
        ISwipeItem(std::nullptr_t = nullptr) noexcept {}
        ISwipeItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeItem(ISwipeItem const&) noexcept = default;
        ISwipeItem(ISwipeItem&&) noexcept = default;
        ISwipeItem& operator=(ISwipeItem const&) & noexcept = default;
        ISwipeItem& operator=(ISwipeItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItemFactory>
    {
        ISwipeItemFactory(std::nullptr_t = nullptr) noexcept {}
        ISwipeItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeItemFactory(ISwipeItemFactory const&) noexcept = default;
        ISwipeItemFactory(ISwipeItemFactory&&) noexcept = default;
        ISwipeItemFactory& operator=(ISwipeItemFactory const&) & noexcept = default;
        ISwipeItemFactory& operator=(ISwipeItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeItemInvokedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItemInvokedEventArgs>
    {
        ISwipeItemInvokedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISwipeItemInvokedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeItemInvokedEventArgs(ISwipeItemInvokedEventArgs const&) noexcept = default;
        ISwipeItemInvokedEventArgs(ISwipeItemInvokedEventArgs&&) noexcept = default;
        ISwipeItemInvokedEventArgs& operator=(ISwipeItemInvokedEventArgs const&) & noexcept = default;
        ISwipeItemInvokedEventArgs& operator=(ISwipeItemInvokedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItemStatics>
    {
        ISwipeItemStatics(std::nullptr_t = nullptr) noexcept {}
        ISwipeItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeItemStatics(ISwipeItemStatics const&) noexcept = default;
        ISwipeItemStatics(ISwipeItemStatics&&) noexcept = default;
        ISwipeItemStatics& operator=(ISwipeItemStatics const&) & noexcept = default;
        ISwipeItemStatics& operator=(ISwipeItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeItems :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItems>
    {
        ISwipeItems(std::nullptr_t = nullptr) noexcept {}
        ISwipeItems(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeItems(ISwipeItems const&) noexcept = default;
        ISwipeItems(ISwipeItems&&) noexcept = default;
        ISwipeItems& operator=(ISwipeItems const&) & noexcept = default;
        ISwipeItems& operator=(ISwipeItems&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeItemsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItemsFactory>
    {
        ISwipeItemsFactory(std::nullptr_t = nullptr) noexcept {}
        ISwipeItemsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeItemsFactory(ISwipeItemsFactory const&) noexcept = default;
        ISwipeItemsFactory(ISwipeItemsFactory&&) noexcept = default;
        ISwipeItemsFactory& operator=(ISwipeItemsFactory const&) & noexcept = default;
        ISwipeItemsFactory& operator=(ISwipeItemsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeItemsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItemsStatics>
    {
        ISwipeItemsStatics(std::nullptr_t = nullptr) noexcept {}
        ISwipeItemsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeItemsStatics(ISwipeItemsStatics const&) noexcept = default;
        ISwipeItemsStatics(ISwipeItemsStatics&&) noexcept = default;
        ISwipeItemsStatics& operator=(ISwipeItemsStatics const&) & noexcept = default;
        ISwipeItemsStatics& operator=(ISwipeItemsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISymbolIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIcon>
    {
        ISymbolIcon(std::nullptr_t = nullptr) noexcept {}
        ISymbolIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISymbolIcon(ISymbolIcon const&) noexcept = default;
        ISymbolIcon(ISymbolIcon&&) noexcept = default;
        ISymbolIcon& operator=(ISymbolIcon const&) & noexcept = default;
        ISymbolIcon& operator=(ISymbolIcon&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISymbolIconFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIconFactory>
    {
        ISymbolIconFactory(std::nullptr_t = nullptr) noexcept {}
        ISymbolIconFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISymbolIconFactory(ISymbolIconFactory const&) noexcept = default;
        ISymbolIconFactory(ISymbolIconFactory&&) noexcept = default;
        ISymbolIconFactory& operator=(ISymbolIconFactory const&) & noexcept = default;
        ISymbolIconFactory& operator=(ISymbolIconFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISymbolIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIconSource>
    {
        ISymbolIconSource(std::nullptr_t = nullptr) noexcept {}
        ISymbolIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISymbolIconSource(ISymbolIconSource const&) noexcept = default;
        ISymbolIconSource(ISymbolIconSource&&) noexcept = default;
        ISymbolIconSource& operator=(ISymbolIconSource const&) & noexcept = default;
        ISymbolIconSource& operator=(ISymbolIconSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISymbolIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIconSourceFactory>
    {
        ISymbolIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        ISymbolIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISymbolIconSourceFactory(ISymbolIconSourceFactory const&) noexcept = default;
        ISymbolIconSourceFactory(ISymbolIconSourceFactory&&) noexcept = default;
        ISymbolIconSourceFactory& operator=(ISymbolIconSourceFactory const&) & noexcept = default;
        ISymbolIconSourceFactory& operator=(ISymbolIconSourceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISymbolIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIconSourceStatics>
    {
        ISymbolIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        ISymbolIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISymbolIconSourceStatics(ISymbolIconSourceStatics const&) noexcept = default;
        ISymbolIconSourceStatics(ISymbolIconSourceStatics&&) noexcept = default;
        ISymbolIconSourceStatics& operator=(ISymbolIconSourceStatics const&) & noexcept = default;
        ISymbolIconSourceStatics& operator=(ISymbolIconSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISymbolIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIconStatics>
    {
        ISymbolIconStatics(std::nullptr_t = nullptr) noexcept {}
        ISymbolIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISymbolIconStatics(ISymbolIconStatics const&) noexcept = default;
        ISymbolIconStatics(ISymbolIconStatics&&) noexcept = default;
        ISymbolIconStatics& operator=(ISymbolIconStatics const&) & noexcept = default;
        ISymbolIconStatics& operator=(ISymbolIconStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlock :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlock>
    {
        ITextBlock(std::nullptr_t = nullptr) noexcept {}
        ITextBlock(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlock(ITextBlock const&) noexcept = default;
        ITextBlock(ITextBlock&&) noexcept = default;
        ITextBlock& operator=(ITextBlock const&) & noexcept = default;
        ITextBlock& operator=(ITextBlock&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlock2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlock2>
    {
        ITextBlock2(std::nullptr_t = nullptr) noexcept {}
        ITextBlock2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlock2(ITextBlock2 const&) noexcept = default;
        ITextBlock2(ITextBlock2&&) noexcept = default;
        ITextBlock2& operator=(ITextBlock2 const&) & noexcept = default;
        ITextBlock2& operator=(ITextBlock2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlock3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlock3>
    {
        ITextBlock3(std::nullptr_t = nullptr) noexcept {}
        ITextBlock3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlock3(ITextBlock3 const&) noexcept = default;
        ITextBlock3(ITextBlock3&&) noexcept = default;
        ITextBlock3& operator=(ITextBlock3 const&) & noexcept = default;
        ITextBlock3& operator=(ITextBlock3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlock4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlock4>
    {
        ITextBlock4(std::nullptr_t = nullptr) noexcept {}
        ITextBlock4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlock4(ITextBlock4 const&) noexcept = default;
        ITextBlock4(ITextBlock4&&) noexcept = default;
        ITextBlock4& operator=(ITextBlock4 const&) & noexcept = default;
        ITextBlock4& operator=(ITextBlock4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlock5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlock5>
    {
        ITextBlock5(std::nullptr_t = nullptr) noexcept {}
        ITextBlock5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlock5(ITextBlock5 const&) noexcept = default;
        ITextBlock5(ITextBlock5&&) noexcept = default;
        ITextBlock5& operator=(ITextBlock5 const&) & noexcept = default;
        ITextBlock5& operator=(ITextBlock5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlock6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlock6>
    {
        ITextBlock6(std::nullptr_t = nullptr) noexcept {}
        ITextBlock6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlock6(ITextBlock6 const&) noexcept = default;
        ITextBlock6(ITextBlock6&&) noexcept = default;
        ITextBlock6& operator=(ITextBlock6 const&) & noexcept = default;
        ITextBlock6& operator=(ITextBlock6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlock7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlock7>
    {
        ITextBlock7(std::nullptr_t = nullptr) noexcept {}
        ITextBlock7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlock7(ITextBlock7 const&) noexcept = default;
        ITextBlock7(ITextBlock7&&) noexcept = default;
        ITextBlock7& operator=(ITextBlock7 const&) & noexcept = default;
        ITextBlock7& operator=(ITextBlock7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlockStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockStatics>
    {
        ITextBlockStatics(std::nullptr_t = nullptr) noexcept {}
        ITextBlockStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlockStatics(ITextBlockStatics const&) noexcept = default;
        ITextBlockStatics(ITextBlockStatics&&) noexcept = default;
        ITextBlockStatics& operator=(ITextBlockStatics const&) & noexcept = default;
        ITextBlockStatics& operator=(ITextBlockStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlockStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockStatics2>
    {
        ITextBlockStatics2(std::nullptr_t = nullptr) noexcept {}
        ITextBlockStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlockStatics2(ITextBlockStatics2 const&) noexcept = default;
        ITextBlockStatics2(ITextBlockStatics2&&) noexcept = default;
        ITextBlockStatics2& operator=(ITextBlockStatics2 const&) & noexcept = default;
        ITextBlockStatics2& operator=(ITextBlockStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlockStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockStatics3>
    {
        ITextBlockStatics3(std::nullptr_t = nullptr) noexcept {}
        ITextBlockStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlockStatics3(ITextBlockStatics3 const&) noexcept = default;
        ITextBlockStatics3(ITextBlockStatics3&&) noexcept = default;
        ITextBlockStatics3& operator=(ITextBlockStatics3 const&) & noexcept = default;
        ITextBlockStatics3& operator=(ITextBlockStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlockStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockStatics5>
    {
        ITextBlockStatics5(std::nullptr_t = nullptr) noexcept {}
        ITextBlockStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlockStatics5(ITextBlockStatics5 const&) noexcept = default;
        ITextBlockStatics5(ITextBlockStatics5&&) noexcept = default;
        ITextBlockStatics5& operator=(ITextBlockStatics5 const&) & noexcept = default;
        ITextBlockStatics5& operator=(ITextBlockStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlockStatics6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockStatics6>
    {
        ITextBlockStatics6(std::nullptr_t = nullptr) noexcept {}
        ITextBlockStatics6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlockStatics6(ITextBlockStatics6 const&) noexcept = default;
        ITextBlockStatics6(ITextBlockStatics6&&) noexcept = default;
        ITextBlockStatics6& operator=(ITextBlockStatics6 const&) & noexcept = default;
        ITextBlockStatics6& operator=(ITextBlockStatics6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBlockStatics7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockStatics7>
    {
        ITextBlockStatics7(std::nullptr_t = nullptr) noexcept {}
        ITextBlockStatics7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBlockStatics7(ITextBlockStatics7 const&) noexcept = default;
        ITextBlockStatics7(ITextBlockStatics7&&) noexcept = default;
        ITextBlockStatics7& operator=(ITextBlockStatics7 const&) & noexcept = default;
        ITextBlockStatics7& operator=(ITextBlockStatics7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBox>
    {
        ITextBox(std::nullptr_t = nullptr) noexcept {}
        ITextBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBox(ITextBox const&) noexcept = default;
        ITextBox(ITextBox&&) noexcept = default;
        ITextBox& operator=(ITextBox const&) & noexcept = default;
        ITextBox& operator=(ITextBox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBox2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBox2>
    {
        ITextBox2(std::nullptr_t = nullptr) noexcept {}
        ITextBox2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBox2(ITextBox2 const&) noexcept = default;
        ITextBox2(ITextBox2&&) noexcept = default;
        ITextBox2& operator=(ITextBox2 const&) & noexcept = default;
        ITextBox2& operator=(ITextBox2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBox3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBox3>
    {
        ITextBox3(std::nullptr_t = nullptr) noexcept {}
        ITextBox3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBox3(ITextBox3 const&) noexcept = default;
        ITextBox3(ITextBox3&&) noexcept = default;
        ITextBox3& operator=(ITextBox3 const&) & noexcept = default;
        ITextBox3& operator=(ITextBox3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBox4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBox4>
    {
        ITextBox4(std::nullptr_t = nullptr) noexcept {}
        ITextBox4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBox4(ITextBox4 const&) noexcept = default;
        ITextBox4(ITextBox4&&) noexcept = default;
        ITextBox4& operator=(ITextBox4 const&) & noexcept = default;
        ITextBox4& operator=(ITextBox4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBox5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBox5>
    {
        ITextBox5(std::nullptr_t = nullptr) noexcept {}
        ITextBox5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBox5(ITextBox5 const&) noexcept = default;
        ITextBox5(ITextBox5&&) noexcept = default;
        ITextBox5& operator=(ITextBox5 const&) & noexcept = default;
        ITextBox5& operator=(ITextBox5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBox6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBox6>
    {
        ITextBox6(std::nullptr_t = nullptr) noexcept {}
        ITextBox6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBox6(ITextBox6 const&) noexcept = default;
        ITextBox6(ITextBox6&&) noexcept = default;
        ITextBox6& operator=(ITextBox6 const&) & noexcept = default;
        ITextBox6& operator=(ITextBox6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBox7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBox7>
    {
        ITextBox7(std::nullptr_t = nullptr) noexcept {}
        ITextBox7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBox7(ITextBox7 const&) noexcept = default;
        ITextBox7(ITextBox7&&) noexcept = default;
        ITextBox7& operator=(ITextBox7 const&) & noexcept = default;
        ITextBox7& operator=(ITextBox7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBox8 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBox8>
    {
        ITextBox8(std::nullptr_t = nullptr) noexcept {}
        ITextBox8(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBox8(ITextBox8 const&) noexcept = default;
        ITextBox8(ITextBox8&&) noexcept = default;
        ITextBox8& operator=(ITextBox8 const&) & noexcept = default;
        ITextBox8& operator=(ITextBox8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxBeforeTextChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxBeforeTextChangingEventArgs>
    {
        ITextBoxBeforeTextChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextBoxBeforeTextChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxBeforeTextChangingEventArgs(ITextBoxBeforeTextChangingEventArgs const&) noexcept = default;
        ITextBoxBeforeTextChangingEventArgs(ITextBoxBeforeTextChangingEventArgs&&) noexcept = default;
        ITextBoxBeforeTextChangingEventArgs& operator=(ITextBoxBeforeTextChangingEventArgs const&) & noexcept = default;
        ITextBoxBeforeTextChangingEventArgs& operator=(ITextBoxBeforeTextChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxFactory>
    {
        ITextBoxFactory(std::nullptr_t = nullptr) noexcept {}
        ITextBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxFactory(ITextBoxFactory const&) noexcept = default;
        ITextBoxFactory(ITextBoxFactory&&) noexcept = default;
        ITextBoxFactory& operator=(ITextBoxFactory const&) & noexcept = default;
        ITextBoxFactory& operator=(ITextBoxFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxSelectionChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxSelectionChangingEventArgs>
    {
        ITextBoxSelectionChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextBoxSelectionChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxSelectionChangingEventArgs(ITextBoxSelectionChangingEventArgs const&) noexcept = default;
        ITextBoxSelectionChangingEventArgs(ITextBoxSelectionChangingEventArgs&&) noexcept = default;
        ITextBoxSelectionChangingEventArgs& operator=(ITextBoxSelectionChangingEventArgs const&) & noexcept = default;
        ITextBoxSelectionChangingEventArgs& operator=(ITextBoxSelectionChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxStatics>
    {
        ITextBoxStatics(std::nullptr_t = nullptr) noexcept {}
        ITextBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxStatics(ITextBoxStatics const&) noexcept = default;
        ITextBoxStatics(ITextBoxStatics&&) noexcept = default;
        ITextBoxStatics& operator=(ITextBoxStatics const&) & noexcept = default;
        ITextBoxStatics& operator=(ITextBoxStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxStatics2>
    {
        ITextBoxStatics2(std::nullptr_t = nullptr) noexcept {}
        ITextBoxStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxStatics2(ITextBoxStatics2 const&) noexcept = default;
        ITextBoxStatics2(ITextBoxStatics2&&) noexcept = default;
        ITextBoxStatics2& operator=(ITextBoxStatics2 const&) & noexcept = default;
        ITextBoxStatics2& operator=(ITextBoxStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxStatics3>
    {
        ITextBoxStatics3(std::nullptr_t = nullptr) noexcept {}
        ITextBoxStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxStatics3(ITextBoxStatics3 const&) noexcept = default;
        ITextBoxStatics3(ITextBoxStatics3&&) noexcept = default;
        ITextBoxStatics3& operator=(ITextBoxStatics3 const&) & noexcept = default;
        ITextBoxStatics3& operator=(ITextBoxStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxStatics5>
    {
        ITextBoxStatics5(std::nullptr_t = nullptr) noexcept {}
        ITextBoxStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxStatics5(ITextBoxStatics5 const&) noexcept = default;
        ITextBoxStatics5(ITextBoxStatics5&&) noexcept = default;
        ITextBoxStatics5& operator=(ITextBoxStatics5 const&) & noexcept = default;
        ITextBoxStatics5& operator=(ITextBoxStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxStatics6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxStatics6>
    {
        ITextBoxStatics6(std::nullptr_t = nullptr) noexcept {}
        ITextBoxStatics6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxStatics6(ITextBoxStatics6 const&) noexcept = default;
        ITextBoxStatics6(ITextBoxStatics6&&) noexcept = default;
        ITextBoxStatics6& operator=(ITextBoxStatics6 const&) & noexcept = default;
        ITextBoxStatics6& operator=(ITextBoxStatics6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxStatics7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxStatics7>
    {
        ITextBoxStatics7(std::nullptr_t = nullptr) noexcept {}
        ITextBoxStatics7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxStatics7(ITextBoxStatics7 const&) noexcept = default;
        ITextBoxStatics7(ITextBoxStatics7&&) noexcept = default;
        ITextBoxStatics7& operator=(ITextBoxStatics7 const&) & noexcept = default;
        ITextBoxStatics7& operator=(ITextBoxStatics7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxStatics8 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxStatics8>
    {
        ITextBoxStatics8(std::nullptr_t = nullptr) noexcept {}
        ITextBoxStatics8(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxStatics8(ITextBoxStatics8 const&) noexcept = default;
        ITextBoxStatics8(ITextBoxStatics8&&) noexcept = default;
        ITextBoxStatics8& operator=(ITextBoxStatics8 const&) & noexcept = default;
        ITextBoxStatics8& operator=(ITextBoxStatics8&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxTextChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxTextChangingEventArgs>
    {
        ITextBoxTextChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextBoxTextChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxTextChangingEventArgs(ITextBoxTextChangingEventArgs const&) noexcept = default;
        ITextBoxTextChangingEventArgs(ITextBoxTextChangingEventArgs&&) noexcept = default;
        ITextBoxTextChangingEventArgs& operator=(ITextBoxTextChangingEventArgs const&) & noexcept = default;
        ITextBoxTextChangingEventArgs& operator=(ITextBoxTextChangingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextBoxTextChangingEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxTextChangingEventArgs2>
    {
        ITextBoxTextChangingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        ITextBoxTextChangingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextBoxTextChangingEventArgs2(ITextBoxTextChangingEventArgs2 const&) noexcept = default;
        ITextBoxTextChangingEventArgs2(ITextBoxTextChangingEventArgs2&&) noexcept = default;
        ITextBoxTextChangingEventArgs2& operator=(ITextBoxTextChangingEventArgs2 const&) & noexcept = default;
        ITextBoxTextChangingEventArgs2& operator=(ITextBoxTextChangingEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextChangedEventArgs>
    {
        ITextChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextChangedEventArgs(ITextChangedEventArgs const&) noexcept = default;
        ITextChangedEventArgs(ITextChangedEventArgs&&) noexcept = default;
        ITextChangedEventArgs& operator=(ITextChangedEventArgs const&) & noexcept = default;
        ITextChangedEventArgs& operator=(ITextChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextCommandBarFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCommandBarFlyout>
    {
        ITextCommandBarFlyout(std::nullptr_t = nullptr) noexcept {}
        ITextCommandBarFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextCommandBarFlyout(ITextCommandBarFlyout const&) noexcept = default;
        ITextCommandBarFlyout(ITextCommandBarFlyout&&) noexcept = default;
        ITextCommandBarFlyout& operator=(ITextCommandBarFlyout const&) & noexcept = default;
        ITextCommandBarFlyout& operator=(ITextCommandBarFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextCommandBarFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCommandBarFlyoutFactory>
    {
        ITextCommandBarFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        ITextCommandBarFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextCommandBarFlyoutFactory(ITextCommandBarFlyoutFactory const&) noexcept = default;
        ITextCommandBarFlyoutFactory(ITextCommandBarFlyoutFactory&&) noexcept = default;
        ITextCommandBarFlyoutFactory& operator=(ITextCommandBarFlyoutFactory const&) & noexcept = default;
        ITextCommandBarFlyoutFactory& operator=(ITextCommandBarFlyoutFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextCompositionChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCompositionChangedEventArgs>
    {
        ITextCompositionChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextCompositionChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextCompositionChangedEventArgs(ITextCompositionChangedEventArgs const&) noexcept = default;
        ITextCompositionChangedEventArgs(ITextCompositionChangedEventArgs&&) noexcept = default;
        ITextCompositionChangedEventArgs& operator=(ITextCompositionChangedEventArgs const&) & noexcept = default;
        ITextCompositionChangedEventArgs& operator=(ITextCompositionChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextCompositionEndedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCompositionEndedEventArgs>
    {
        ITextCompositionEndedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextCompositionEndedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextCompositionEndedEventArgs(ITextCompositionEndedEventArgs const&) noexcept = default;
        ITextCompositionEndedEventArgs(ITextCompositionEndedEventArgs&&) noexcept = default;
        ITextCompositionEndedEventArgs& operator=(ITextCompositionEndedEventArgs const&) & noexcept = default;
        ITextCompositionEndedEventArgs& operator=(ITextCompositionEndedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextCompositionStartedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCompositionStartedEventArgs>
    {
        ITextCompositionStartedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextCompositionStartedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextCompositionStartedEventArgs(ITextCompositionStartedEventArgs const&) noexcept = default;
        ITextCompositionStartedEventArgs(ITextCompositionStartedEventArgs&&) noexcept = default;
        ITextCompositionStartedEventArgs& operator=(ITextCompositionStartedEventArgs const&) & noexcept = default;
        ITextCompositionStartedEventArgs& operator=(ITextCompositionStartedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextControlCopyingToClipboardEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextControlCopyingToClipboardEventArgs>
    {
        ITextControlCopyingToClipboardEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextControlCopyingToClipboardEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextControlCopyingToClipboardEventArgs(ITextControlCopyingToClipboardEventArgs const&) noexcept = default;
        ITextControlCopyingToClipboardEventArgs(ITextControlCopyingToClipboardEventArgs&&) noexcept = default;
        ITextControlCopyingToClipboardEventArgs& operator=(ITextControlCopyingToClipboardEventArgs const&) & noexcept = default;
        ITextControlCopyingToClipboardEventArgs& operator=(ITextControlCopyingToClipboardEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextControlCuttingToClipboardEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextControlCuttingToClipboardEventArgs>
    {
        ITextControlCuttingToClipboardEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextControlCuttingToClipboardEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextControlCuttingToClipboardEventArgs(ITextControlCuttingToClipboardEventArgs const&) noexcept = default;
        ITextControlCuttingToClipboardEventArgs(ITextControlCuttingToClipboardEventArgs&&) noexcept = default;
        ITextControlCuttingToClipboardEventArgs& operator=(ITextControlCuttingToClipboardEventArgs const&) & noexcept = default;
        ITextControlCuttingToClipboardEventArgs& operator=(ITextControlCuttingToClipboardEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextControlPasteEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextControlPasteEventArgs>
    {
        ITextControlPasteEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextControlPasteEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextControlPasteEventArgs(ITextControlPasteEventArgs const&) noexcept = default;
        ITextControlPasteEventArgs(ITextControlPasteEventArgs&&) noexcept = default;
        ITextControlPasteEventArgs& operator=(ITextControlPasteEventArgs const&) & noexcept = default;
        ITextControlPasteEventArgs& operator=(ITextControlPasteEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickedEventArgs>
    {
        ITimePickedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITimePickedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickedEventArgs(ITimePickedEventArgs const&) noexcept = default;
        ITimePickedEventArgs(ITimePickedEventArgs&&) noexcept = default;
        ITimePickedEventArgs& operator=(ITimePickedEventArgs const&) & noexcept = default;
        ITimePickedEventArgs& operator=(ITimePickedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePicker>
    {
        ITimePicker(std::nullptr_t = nullptr) noexcept {}
        ITimePicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePicker(ITimePicker const&) noexcept = default;
        ITimePicker(ITimePicker&&) noexcept = default;
        ITimePicker& operator=(ITimePicker const&) & noexcept = default;
        ITimePicker& operator=(ITimePicker&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePicker2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePicker2>
    {
        ITimePicker2(std::nullptr_t = nullptr) noexcept {}
        ITimePicker2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePicker2(ITimePicker2 const&) noexcept = default;
        ITimePicker2(ITimePicker2&&) noexcept = default;
        ITimePicker2& operator=(ITimePicker2 const&) & noexcept = default;
        ITimePicker2& operator=(ITimePicker2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePicker3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePicker3>
    {
        ITimePicker3(std::nullptr_t = nullptr) noexcept {}
        ITimePicker3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePicker3(ITimePicker3 const&) noexcept = default;
        ITimePicker3(ITimePicker3&&) noexcept = default;
        ITimePicker3& operator=(ITimePicker3 const&) & noexcept = default;
        ITimePicker3& operator=(ITimePicker3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFactory>
    {
        ITimePickerFactory(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerFactory(ITimePickerFactory const&) noexcept = default;
        ITimePickerFactory(ITimePickerFactory&&) noexcept = default;
        ITimePickerFactory& operator=(ITimePickerFactory const&) & noexcept = default;
        ITimePickerFactory& operator=(ITimePickerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyout>
    {
        ITimePickerFlyout(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerFlyout(ITimePickerFlyout const&) noexcept = default;
        ITimePickerFlyout(ITimePickerFlyout&&) noexcept = default;
        ITimePickerFlyout& operator=(ITimePickerFlyout const&) & noexcept = default;
        ITimePickerFlyout& operator=(ITimePickerFlyout&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyoutPresenter>
    {
        ITimePickerFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerFlyoutPresenter(ITimePickerFlyoutPresenter const&) noexcept = default;
        ITimePickerFlyoutPresenter(ITimePickerFlyoutPresenter&&) noexcept = default;
        ITimePickerFlyoutPresenter& operator=(ITimePickerFlyoutPresenter const&) & noexcept = default;
        ITimePickerFlyoutPresenter& operator=(ITimePickerFlyoutPresenter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerFlyoutPresenter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyoutPresenter2>
    {
        ITimePickerFlyoutPresenter2(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyoutPresenter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerFlyoutPresenter2(ITimePickerFlyoutPresenter2 const&) noexcept = default;
        ITimePickerFlyoutPresenter2(ITimePickerFlyoutPresenter2&&) noexcept = default;
        ITimePickerFlyoutPresenter2& operator=(ITimePickerFlyoutPresenter2 const&) & noexcept = default;
        ITimePickerFlyoutPresenter2& operator=(ITimePickerFlyoutPresenter2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerFlyoutPresenterStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyoutPresenterStatics2>
    {
        ITimePickerFlyoutPresenterStatics2(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyoutPresenterStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerFlyoutPresenterStatics2(ITimePickerFlyoutPresenterStatics2 const&) noexcept = default;
        ITimePickerFlyoutPresenterStatics2(ITimePickerFlyoutPresenterStatics2&&) noexcept = default;
        ITimePickerFlyoutPresenterStatics2& operator=(ITimePickerFlyoutPresenterStatics2 const&) & noexcept = default;
        ITimePickerFlyoutPresenterStatics2& operator=(ITimePickerFlyoutPresenterStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyoutStatics>
    {
        ITimePickerFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerFlyoutStatics(ITimePickerFlyoutStatics const&) noexcept = default;
        ITimePickerFlyoutStatics(ITimePickerFlyoutStatics&&) noexcept = default;
        ITimePickerFlyoutStatics& operator=(ITimePickerFlyoutStatics const&) & noexcept = default;
        ITimePickerFlyoutStatics& operator=(ITimePickerFlyoutStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerSelectedValueChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerSelectedValueChangedEventArgs>
    {
        ITimePickerSelectedValueChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITimePickerSelectedValueChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerSelectedValueChangedEventArgs(ITimePickerSelectedValueChangedEventArgs const&) noexcept = default;
        ITimePickerSelectedValueChangedEventArgs(ITimePickerSelectedValueChangedEventArgs&&) noexcept = default;
        ITimePickerSelectedValueChangedEventArgs& operator=(ITimePickerSelectedValueChangedEventArgs const&) & noexcept = default;
        ITimePickerSelectedValueChangedEventArgs& operator=(ITimePickerSelectedValueChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerStatics>
    {
        ITimePickerStatics(std::nullptr_t = nullptr) noexcept {}
        ITimePickerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerStatics(ITimePickerStatics const&) noexcept = default;
        ITimePickerStatics(ITimePickerStatics&&) noexcept = default;
        ITimePickerStatics& operator=(ITimePickerStatics const&) & noexcept = default;
        ITimePickerStatics& operator=(ITimePickerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerStatics2>
    {
        ITimePickerStatics2(std::nullptr_t = nullptr) noexcept {}
        ITimePickerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerStatics2(ITimePickerStatics2 const&) noexcept = default;
        ITimePickerStatics2(ITimePickerStatics2&&) noexcept = default;
        ITimePickerStatics2& operator=(ITimePickerStatics2 const&) & noexcept = default;
        ITimePickerStatics2& operator=(ITimePickerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerStatics3>
    {
        ITimePickerStatics3(std::nullptr_t = nullptr) noexcept {}
        ITimePickerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerStatics3(ITimePickerStatics3 const&) noexcept = default;
        ITimePickerStatics3(ITimePickerStatics3&&) noexcept = default;
        ITimePickerStatics3& operator=(ITimePickerStatics3 const&) & noexcept = default;
        ITimePickerStatics3& operator=(ITimePickerStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimePickerValueChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerValueChangedEventArgs>
    {
        ITimePickerValueChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITimePickerValueChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimePickerValueChangedEventArgs(ITimePickerValueChangedEventArgs const&) noexcept = default;
        ITimePickerValueChangedEventArgs(ITimePickerValueChangedEventArgs&&) noexcept = default;
        ITimePickerValueChangedEventArgs& operator=(ITimePickerValueChangedEventArgs const&) & noexcept = default;
        ITimePickerValueChangedEventArgs& operator=(ITimePickerValueChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleMenuFlyoutItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleMenuFlyoutItem>
    {
        IToggleMenuFlyoutItem(std::nullptr_t = nullptr) noexcept {}
        IToggleMenuFlyoutItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleMenuFlyoutItem(IToggleMenuFlyoutItem const&) noexcept = default;
        IToggleMenuFlyoutItem(IToggleMenuFlyoutItem&&) noexcept = default;
        IToggleMenuFlyoutItem& operator=(IToggleMenuFlyoutItem const&) & noexcept = default;
        IToggleMenuFlyoutItem& operator=(IToggleMenuFlyoutItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleMenuFlyoutItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleMenuFlyoutItemFactory>
    {
        IToggleMenuFlyoutItemFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleMenuFlyoutItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleMenuFlyoutItemFactory(IToggleMenuFlyoutItemFactory const&) noexcept = default;
        IToggleMenuFlyoutItemFactory(IToggleMenuFlyoutItemFactory&&) noexcept = default;
        IToggleMenuFlyoutItemFactory& operator=(IToggleMenuFlyoutItemFactory const&) & noexcept = default;
        IToggleMenuFlyoutItemFactory& operator=(IToggleMenuFlyoutItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleMenuFlyoutItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleMenuFlyoutItemStatics>
    {
        IToggleMenuFlyoutItemStatics(std::nullptr_t = nullptr) noexcept {}
        IToggleMenuFlyoutItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleMenuFlyoutItemStatics(IToggleMenuFlyoutItemStatics const&) noexcept = default;
        IToggleMenuFlyoutItemStatics(IToggleMenuFlyoutItemStatics&&) noexcept = default;
        IToggleMenuFlyoutItemStatics& operator=(IToggleMenuFlyoutItemStatics const&) & noexcept = default;
        IToggleMenuFlyoutItemStatics& operator=(IToggleMenuFlyoutItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSplitButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButton>
    {
        IToggleSplitButton(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSplitButton(IToggleSplitButton const&) noexcept = default;
        IToggleSplitButton(IToggleSplitButton&&) noexcept = default;
        IToggleSplitButton& operator=(IToggleSplitButton const&) & noexcept = default;
        IToggleSplitButton& operator=(IToggleSplitButton&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSplitButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButtonAutomationPeer>
    {
        IToggleSplitButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSplitButtonAutomationPeer(IToggleSplitButtonAutomationPeer const&) noexcept = default;
        IToggleSplitButtonAutomationPeer(IToggleSplitButtonAutomationPeer&&) noexcept = default;
        IToggleSplitButtonAutomationPeer& operator=(IToggleSplitButtonAutomationPeer const&) & noexcept = default;
        IToggleSplitButtonAutomationPeer& operator=(IToggleSplitButtonAutomationPeer&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSplitButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButtonAutomationPeerFactory>
    {
        IToggleSplitButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSplitButtonAutomationPeerFactory(IToggleSplitButtonAutomationPeerFactory const&) noexcept = default;
        IToggleSplitButtonAutomationPeerFactory(IToggleSplitButtonAutomationPeerFactory&&) noexcept = default;
        IToggleSplitButtonAutomationPeerFactory& operator=(IToggleSplitButtonAutomationPeerFactory const&) & noexcept = default;
        IToggleSplitButtonAutomationPeerFactory& operator=(IToggleSplitButtonAutomationPeerFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSplitButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButtonFactory>
    {
        IToggleSplitButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSplitButtonFactory(IToggleSplitButtonFactory const&) noexcept = default;
        IToggleSplitButtonFactory(IToggleSplitButtonFactory&&) noexcept = default;
        IToggleSplitButtonFactory& operator=(IToggleSplitButtonFactory const&) & noexcept = default;
        IToggleSplitButtonFactory& operator=(IToggleSplitButtonFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSplitButtonIsCheckedChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButtonIsCheckedChangedEventArgs>
    {
        IToggleSplitButtonIsCheckedChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButtonIsCheckedChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSplitButtonIsCheckedChangedEventArgs(IToggleSplitButtonIsCheckedChangedEventArgs const&) noexcept = default;
        IToggleSplitButtonIsCheckedChangedEventArgs(IToggleSplitButtonIsCheckedChangedEventArgs&&) noexcept = default;
        IToggleSplitButtonIsCheckedChangedEventArgs& operator=(IToggleSplitButtonIsCheckedChangedEventArgs const&) & noexcept = default;
        IToggleSplitButtonIsCheckedChangedEventArgs& operator=(IToggleSplitButtonIsCheckedChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSwitch :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitch>
    {
        IToggleSwitch(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitch(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSwitch(IToggleSwitch const&) noexcept = default;
        IToggleSwitch(IToggleSwitch&&) noexcept = default;
        IToggleSwitch& operator=(IToggleSwitch const&) & noexcept = default;
        IToggleSwitch& operator=(IToggleSwitch&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSwitchOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitchOverrides>
    {
        IToggleSwitchOverrides(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitchOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSwitchOverrides(IToggleSwitchOverrides const&) noexcept = default;
        IToggleSwitchOverrides(IToggleSwitchOverrides&&) noexcept = default;
        IToggleSwitchOverrides& operator=(IToggleSwitchOverrides const&) & noexcept = default;
        IToggleSwitchOverrides& operator=(IToggleSwitchOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToggleSwitchStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitchStatics>
    {
        IToggleSwitchStatics(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitchStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToggleSwitchStatics(IToggleSwitchStatics const&) noexcept = default;
        IToggleSwitchStatics(IToggleSwitchStatics&&) noexcept = default;
        IToggleSwitchStatics& operator=(IToggleSwitchStatics const&) & noexcept = default;
        IToggleSwitchStatics& operator=(IToggleSwitchStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToolTip :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTip>
    {
        IToolTip(std::nullptr_t = nullptr) noexcept {}
        IToolTip(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToolTip(IToolTip const&) noexcept = default;
        IToolTip(IToolTip&&) noexcept = default;
        IToolTip& operator=(IToolTip const&) & noexcept = default;
        IToolTip& operator=(IToolTip&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToolTip2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTip2>
    {
        IToolTip2(std::nullptr_t = nullptr) noexcept {}
        IToolTip2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToolTip2(IToolTip2 const&) noexcept = default;
        IToolTip2(IToolTip2&&) noexcept = default;
        IToolTip2& operator=(IToolTip2 const&) & noexcept = default;
        IToolTip2& operator=(IToolTip2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToolTipFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTipFactory>
    {
        IToolTipFactory(std::nullptr_t = nullptr) noexcept {}
        IToolTipFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToolTipFactory(IToolTipFactory const&) noexcept = default;
        IToolTipFactory(IToolTipFactory&&) noexcept = default;
        IToolTipFactory& operator=(IToolTipFactory const&) & noexcept = default;
        IToolTipFactory& operator=(IToolTipFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToolTipService :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTipService>
    {
        IToolTipService(std::nullptr_t = nullptr) noexcept {}
        IToolTipService(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToolTipService(IToolTipService const&) noexcept = default;
        IToolTipService(IToolTipService&&) noexcept = default;
        IToolTipService& operator=(IToolTipService const&) & noexcept = default;
        IToolTipService& operator=(IToolTipService&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToolTipServiceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTipServiceStatics>
    {
        IToolTipServiceStatics(std::nullptr_t = nullptr) noexcept {}
        IToolTipServiceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToolTipServiceStatics(IToolTipServiceStatics const&) noexcept = default;
        IToolTipServiceStatics(IToolTipServiceStatics&&) noexcept = default;
        IToolTipServiceStatics& operator=(IToolTipServiceStatics const&) & noexcept = default;
        IToolTipServiceStatics& operator=(IToolTipServiceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToolTipStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTipStatics>
    {
        IToolTipStatics(std::nullptr_t = nullptr) noexcept {}
        IToolTipStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToolTipStatics(IToolTipStatics const&) noexcept = default;
        IToolTipStatics(IToolTipStatics&&) noexcept = default;
        IToolTipStatics& operator=(IToolTipStatics const&) & noexcept = default;
        IToolTipStatics& operator=(IToolTipStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IToolTipStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTipStatics2>
    {
        IToolTipStatics2(std::nullptr_t = nullptr) noexcept {}
        IToolTipStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IToolTipStatics2(IToolTipStatics2 const&) noexcept = default;
        IToolTipStatics2(IToolTipStatics2&&) noexcept = default;
        IToolTipStatics2& operator=(IToolTipStatics2 const&) & noexcept = default;
        IToolTipStatics2& operator=(IToolTipStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeView>
    {
        ITreeView(std::nullptr_t = nullptr) noexcept {}
        ITreeView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeView(ITreeView const&) noexcept = default;
        ITreeView(ITreeView&&) noexcept = default;
        ITreeView& operator=(ITreeView const&) & noexcept = default;
        ITreeView& operator=(ITreeView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeView2>
    {
        ITreeView2(std::nullptr_t = nullptr) noexcept {}
        ITreeView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeView2(ITreeView2 const&) noexcept = default;
        ITreeView2(ITreeView2&&) noexcept = default;
        ITreeView2& operator=(ITreeView2 const&) & noexcept = default;
        ITreeView2& operator=(ITreeView2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewCollapsedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewCollapsedEventArgs>
    {
        ITreeViewCollapsedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewCollapsedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewCollapsedEventArgs(ITreeViewCollapsedEventArgs const&) noexcept = default;
        ITreeViewCollapsedEventArgs(ITreeViewCollapsedEventArgs&&) noexcept = default;
        ITreeViewCollapsedEventArgs& operator=(ITreeViewCollapsedEventArgs const&) & noexcept = default;
        ITreeViewCollapsedEventArgs& operator=(ITreeViewCollapsedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewCollapsedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewCollapsedEventArgs2>
    {
        ITreeViewCollapsedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewCollapsedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewCollapsedEventArgs2(ITreeViewCollapsedEventArgs2 const&) noexcept = default;
        ITreeViewCollapsedEventArgs2(ITreeViewCollapsedEventArgs2&&) noexcept = default;
        ITreeViewCollapsedEventArgs2& operator=(ITreeViewCollapsedEventArgs2 const&) & noexcept = default;
        ITreeViewCollapsedEventArgs2& operator=(ITreeViewCollapsedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewDragItemsCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewDragItemsCompletedEventArgs>
    {
        ITreeViewDragItemsCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewDragItemsCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewDragItemsCompletedEventArgs(ITreeViewDragItemsCompletedEventArgs const&) noexcept = default;
        ITreeViewDragItemsCompletedEventArgs(ITreeViewDragItemsCompletedEventArgs&&) noexcept = default;
        ITreeViewDragItemsCompletedEventArgs& operator=(ITreeViewDragItemsCompletedEventArgs const&) & noexcept = default;
        ITreeViewDragItemsCompletedEventArgs& operator=(ITreeViewDragItemsCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewDragItemsStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewDragItemsStartingEventArgs>
    {
        ITreeViewDragItemsStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewDragItemsStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewDragItemsStartingEventArgs(ITreeViewDragItemsStartingEventArgs const&) noexcept = default;
        ITreeViewDragItemsStartingEventArgs(ITreeViewDragItemsStartingEventArgs&&) noexcept = default;
        ITreeViewDragItemsStartingEventArgs& operator=(ITreeViewDragItemsStartingEventArgs const&) & noexcept = default;
        ITreeViewDragItemsStartingEventArgs& operator=(ITreeViewDragItemsStartingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewExpandingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewExpandingEventArgs>
    {
        ITreeViewExpandingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewExpandingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewExpandingEventArgs(ITreeViewExpandingEventArgs const&) noexcept = default;
        ITreeViewExpandingEventArgs(ITreeViewExpandingEventArgs&&) noexcept = default;
        ITreeViewExpandingEventArgs& operator=(ITreeViewExpandingEventArgs const&) & noexcept = default;
        ITreeViewExpandingEventArgs& operator=(ITreeViewExpandingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewExpandingEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewExpandingEventArgs2>
    {
        ITreeViewExpandingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewExpandingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewExpandingEventArgs2(ITreeViewExpandingEventArgs2 const&) noexcept = default;
        ITreeViewExpandingEventArgs2(ITreeViewExpandingEventArgs2&&) noexcept = default;
        ITreeViewExpandingEventArgs2& operator=(ITreeViewExpandingEventArgs2 const&) & noexcept = default;
        ITreeViewExpandingEventArgs2& operator=(ITreeViewExpandingEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewFactory>
    {
        ITreeViewFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewFactory(ITreeViewFactory const&) noexcept = default;
        ITreeViewFactory(ITreeViewFactory&&) noexcept = default;
        ITreeViewFactory& operator=(ITreeViewFactory const&) & noexcept = default;
        ITreeViewFactory& operator=(ITreeViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItem>
    {
        ITreeViewItem(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItem(ITreeViewItem const&) noexcept = default;
        ITreeViewItem(ITreeViewItem&&) noexcept = default;
        ITreeViewItem& operator=(ITreeViewItem const&) & noexcept = default;
        ITreeViewItem& operator=(ITreeViewItem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItem2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItem2>
    {
        ITreeViewItem2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItem2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItem2(ITreeViewItem2 const&) noexcept = default;
        ITreeViewItem2(ITreeViewItem2&&) noexcept = default;
        ITreeViewItem2& operator=(ITreeViewItem2 const&) & noexcept = default;
        ITreeViewItem2& operator=(ITreeViewItem2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemFactory>
    {
        ITreeViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItemFactory(ITreeViewItemFactory const&) noexcept = default;
        ITreeViewItemFactory(ITreeViewItemFactory&&) noexcept = default;
        ITreeViewItemFactory& operator=(ITreeViewItemFactory const&) & noexcept = default;
        ITreeViewItemFactory& operator=(ITreeViewItemFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItemInvokedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemInvokedEventArgs>
    {
        ITreeViewItemInvokedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemInvokedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItemInvokedEventArgs(ITreeViewItemInvokedEventArgs const&) noexcept = default;
        ITreeViewItemInvokedEventArgs(ITreeViewItemInvokedEventArgs&&) noexcept = default;
        ITreeViewItemInvokedEventArgs& operator=(ITreeViewItemInvokedEventArgs const&) & noexcept = default;
        ITreeViewItemInvokedEventArgs& operator=(ITreeViewItemInvokedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemStatics>
    {
        ITreeViewItemStatics(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItemStatics(ITreeViewItemStatics const&) noexcept = default;
        ITreeViewItemStatics(ITreeViewItemStatics&&) noexcept = default;
        ITreeViewItemStatics& operator=(ITreeViewItemStatics const&) & noexcept = default;
        ITreeViewItemStatics& operator=(ITreeViewItemStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItemStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemStatics2>
    {
        ITreeViewItemStatics2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItemStatics2(ITreeViewItemStatics2 const&) noexcept = default;
        ITreeViewItemStatics2(ITreeViewItemStatics2&&) noexcept = default;
        ITreeViewItemStatics2& operator=(ITreeViewItemStatics2 const&) & noexcept = default;
        ITreeViewItemStatics2& operator=(ITreeViewItemStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItemTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemTemplateSettings>
    {
        ITreeViewItemTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItemTemplateSettings(ITreeViewItemTemplateSettings const&) noexcept = default;
        ITreeViewItemTemplateSettings(ITreeViewItemTemplateSettings&&) noexcept = default;
        ITreeViewItemTemplateSettings& operator=(ITreeViewItemTemplateSettings const&) & noexcept = default;
        ITreeViewItemTemplateSettings& operator=(ITreeViewItemTemplateSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItemTemplateSettingsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemTemplateSettingsFactory>
    {
        ITreeViewItemTemplateSettingsFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemTemplateSettingsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItemTemplateSettingsFactory(ITreeViewItemTemplateSettingsFactory const&) noexcept = default;
        ITreeViewItemTemplateSettingsFactory(ITreeViewItemTemplateSettingsFactory&&) noexcept = default;
        ITreeViewItemTemplateSettingsFactory& operator=(ITreeViewItemTemplateSettingsFactory const&) & noexcept = default;
        ITreeViewItemTemplateSettingsFactory& operator=(ITreeViewItemTemplateSettingsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewItemTemplateSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemTemplateSettingsStatics>
    {
        ITreeViewItemTemplateSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemTemplateSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewItemTemplateSettingsStatics(ITreeViewItemTemplateSettingsStatics const&) noexcept = default;
        ITreeViewItemTemplateSettingsStatics(ITreeViewItemTemplateSettingsStatics&&) noexcept = default;
        ITreeViewItemTemplateSettingsStatics& operator=(ITreeViewItemTemplateSettingsStatics const&) & noexcept = default;
        ITreeViewItemTemplateSettingsStatics& operator=(ITreeViewItemTemplateSettingsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewList :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewList>
    {
        ITreeViewList(std::nullptr_t = nullptr) noexcept {}
        ITreeViewList(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewList(ITreeViewList const&) noexcept = default;
        ITreeViewList(ITreeViewList&&) noexcept = default;
        ITreeViewList& operator=(ITreeViewList const&) & noexcept = default;
        ITreeViewList& operator=(ITreeViewList&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewListFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewListFactory>
    {
        ITreeViewListFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewListFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewListFactory(ITreeViewListFactory const&) noexcept = default;
        ITreeViewListFactory(ITreeViewListFactory&&) noexcept = default;
        ITreeViewListFactory& operator=(ITreeViewListFactory const&) & noexcept = default;
        ITreeViewListFactory& operator=(ITreeViewListFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewNode :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewNode>
    {
        ITreeViewNode(std::nullptr_t = nullptr) noexcept {}
        ITreeViewNode(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewNode(ITreeViewNode const&) noexcept = default;
        ITreeViewNode(ITreeViewNode&&) noexcept = default;
        ITreeViewNode& operator=(ITreeViewNode const&) & noexcept = default;
        ITreeViewNode& operator=(ITreeViewNode&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewNodeFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewNodeFactory>
    {
        ITreeViewNodeFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewNodeFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewNodeFactory(ITreeViewNodeFactory const&) noexcept = default;
        ITreeViewNodeFactory(ITreeViewNodeFactory&&) noexcept = default;
        ITreeViewNodeFactory& operator=(ITreeViewNodeFactory const&) & noexcept = default;
        ITreeViewNodeFactory& operator=(ITreeViewNodeFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewNodeStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewNodeStatics>
    {
        ITreeViewNodeStatics(std::nullptr_t = nullptr) noexcept {}
        ITreeViewNodeStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewNodeStatics(ITreeViewNodeStatics const&) noexcept = default;
        ITreeViewNodeStatics(ITreeViewNodeStatics&&) noexcept = default;
        ITreeViewNodeStatics& operator=(ITreeViewNodeStatics const&) & noexcept = default;
        ITreeViewNodeStatics& operator=(ITreeViewNodeStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewStatics>
    {
        ITreeViewStatics(std::nullptr_t = nullptr) noexcept {}
        ITreeViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewStatics(ITreeViewStatics const&) noexcept = default;
        ITreeViewStatics(ITreeViewStatics&&) noexcept = default;
        ITreeViewStatics& operator=(ITreeViewStatics const&) & noexcept = default;
        ITreeViewStatics& operator=(ITreeViewStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITreeViewStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewStatics2>
    {
        ITreeViewStatics2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITreeViewStatics2(ITreeViewStatics2 const&) noexcept = default;
        ITreeViewStatics2(ITreeViewStatics2&&) noexcept = default;
        ITreeViewStatics2& operator=(ITreeViewStatics2 const&) & noexcept = default;
        ITreeViewStatics2& operator=(ITreeViewStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITwoPaneView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITwoPaneView>
    {
        ITwoPaneView(std::nullptr_t = nullptr) noexcept {}
        ITwoPaneView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITwoPaneView(ITwoPaneView const&) noexcept = default;
        ITwoPaneView(ITwoPaneView&&) noexcept = default;
        ITwoPaneView& operator=(ITwoPaneView const&) & noexcept = default;
        ITwoPaneView& operator=(ITwoPaneView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITwoPaneViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITwoPaneViewFactory>
    {
        ITwoPaneViewFactory(std::nullptr_t = nullptr) noexcept {}
        ITwoPaneViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITwoPaneViewFactory(ITwoPaneViewFactory const&) noexcept = default;
        ITwoPaneViewFactory(ITwoPaneViewFactory&&) noexcept = default;
        ITwoPaneViewFactory& operator=(ITwoPaneViewFactory const&) & noexcept = default;
        ITwoPaneViewFactory& operator=(ITwoPaneViewFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITwoPaneViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITwoPaneViewStatics>
    {
        ITwoPaneViewStatics(std::nullptr_t = nullptr) noexcept {}
        ITwoPaneViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITwoPaneViewStatics(ITwoPaneViewStatics const&) noexcept = default;
        ITwoPaneViewStatics(ITwoPaneViewStatics&&) noexcept = default;
        ITwoPaneViewStatics& operator=(ITwoPaneViewStatics const&) & noexcept = default;
        ITwoPaneViewStatics& operator=(ITwoPaneViewStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUIElementCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementCollection>
    {
        IUIElementCollection(std::nullptr_t = nullptr) noexcept {}
        IUIElementCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUIElementCollection(IUIElementCollection const&) noexcept = default;
        IUIElementCollection(IUIElementCollection&&) noexcept = default;
        IUIElementCollection& operator=(IUIElementCollection const&) & noexcept = default;
        IUIElementCollection& operator=(IUIElementCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserControl>
    {
        IUserControl(std::nullptr_t = nullptr) noexcept {}
        IUserControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserControl(IUserControl const&) noexcept = default;
        IUserControl(IUserControl&&) noexcept = default;
        IUserControl& operator=(IUserControl const&) & noexcept = default;
        IUserControl& operator=(IUserControl&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserControlFactory>
    {
        IUserControlFactory(std::nullptr_t = nullptr) noexcept {}
        IUserControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserControlFactory(IUserControlFactory const&) noexcept = default;
        IUserControlFactory(IUserControlFactory&&) noexcept = default;
        IUserControlFactory& operator=(IUserControlFactory const&) & noexcept = default;
        IUserControlFactory& operator=(IUserControlFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUserControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserControlStatics>
    {
        IUserControlStatics(std::nullptr_t = nullptr) noexcept {}
        IUserControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUserControlStatics(IUserControlStatics const&) noexcept = default;
        IUserControlStatics(IUserControlStatics&&) noexcept = default;
        IUserControlStatics& operator=(IUserControlStatics const&) & noexcept = default;
        IUserControlStatics& operator=(IUserControlStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVariableSizedWrapGrid :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVariableSizedWrapGrid>
    {
        IVariableSizedWrapGrid(std::nullptr_t = nullptr) noexcept {}
        IVariableSizedWrapGrid(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVariableSizedWrapGrid(IVariableSizedWrapGrid const&) noexcept = default;
        IVariableSizedWrapGrid(IVariableSizedWrapGrid&&) noexcept = default;
        IVariableSizedWrapGrid& operator=(IVariableSizedWrapGrid const&) & noexcept = default;
        IVariableSizedWrapGrid& operator=(IVariableSizedWrapGrid&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVariableSizedWrapGridStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVariableSizedWrapGridStatics>
    {
        IVariableSizedWrapGridStatics(std::nullptr_t = nullptr) noexcept {}
        IVariableSizedWrapGridStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVariableSizedWrapGridStatics(IVariableSizedWrapGridStatics const&) noexcept = default;
        IVariableSizedWrapGridStatics(IVariableSizedWrapGridStatics&&) noexcept = default;
        IVariableSizedWrapGridStatics& operator=(IVariableSizedWrapGridStatics const&) & noexcept = default;
        IVariableSizedWrapGridStatics& operator=(IVariableSizedWrapGridStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IViewbox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IViewbox>
    {
        IViewbox(std::nullptr_t = nullptr) noexcept {}
        IViewbox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IViewbox(IViewbox const&) noexcept = default;
        IViewbox(IViewbox&&) noexcept = default;
        IViewbox& operator=(IViewbox const&) & noexcept = default;
        IViewbox& operator=(IViewbox&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IViewboxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IViewboxStatics>
    {
        IViewboxStatics(std::nullptr_t = nullptr) noexcept {}
        IViewboxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IViewboxStatics(IViewboxStatics const&) noexcept = default;
        IViewboxStatics(IViewboxStatics&&) noexcept = default;
        IViewboxStatics& operator=(IViewboxStatics const&) & noexcept = default;
        IViewboxStatics& operator=(IViewboxStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualizingPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingPanel>
    {
        IVirtualizingPanel(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualizingPanel(IVirtualizingPanel const&) noexcept = default;
        IVirtualizingPanel(IVirtualizingPanel&&) noexcept = default;
        IVirtualizingPanel& operator=(IVirtualizingPanel const&) & noexcept = default;
        IVirtualizingPanel& operator=(IVirtualizingPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualizingPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingPanelFactory>
    {
        IVirtualizingPanelFactory(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualizingPanelFactory(IVirtualizingPanelFactory const&) noexcept = default;
        IVirtualizingPanelFactory(IVirtualizingPanelFactory&&) noexcept = default;
        IVirtualizingPanelFactory& operator=(IVirtualizingPanelFactory const&) & noexcept = default;
        IVirtualizingPanelFactory& operator=(IVirtualizingPanelFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualizingPanelOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingPanelOverrides>
    {
        IVirtualizingPanelOverrides(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingPanelOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualizingPanelOverrides(IVirtualizingPanelOverrides const&) noexcept = default;
        IVirtualizingPanelOverrides(IVirtualizingPanelOverrides&&) noexcept = default;
        IVirtualizingPanelOverrides& operator=(IVirtualizingPanelOverrides const&) & noexcept = default;
        IVirtualizingPanelOverrides& operator=(IVirtualizingPanelOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualizingPanelProtected :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingPanelProtected>
    {
        IVirtualizingPanelProtected(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingPanelProtected(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualizingPanelProtected(IVirtualizingPanelProtected const&) noexcept = default;
        IVirtualizingPanelProtected(IVirtualizingPanelProtected&&) noexcept = default;
        IVirtualizingPanelProtected& operator=(IVirtualizingPanelProtected const&) & noexcept = default;
        IVirtualizingPanelProtected& operator=(IVirtualizingPanelProtected&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualizingStackPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingStackPanel>
    {
        IVirtualizingStackPanel(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingStackPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualizingStackPanel(IVirtualizingStackPanel const&) noexcept = default;
        IVirtualizingStackPanel(IVirtualizingStackPanel&&) noexcept = default;
        IVirtualizingStackPanel& operator=(IVirtualizingStackPanel const&) & noexcept = default;
        IVirtualizingStackPanel& operator=(IVirtualizingStackPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualizingStackPanelOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingStackPanelOverrides>
    {
        IVirtualizingStackPanelOverrides(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingStackPanelOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualizingStackPanelOverrides(IVirtualizingStackPanelOverrides const&) noexcept = default;
        IVirtualizingStackPanelOverrides(IVirtualizingStackPanelOverrides&&) noexcept = default;
        IVirtualizingStackPanelOverrides& operator=(IVirtualizingStackPanelOverrides const&) & noexcept = default;
        IVirtualizingStackPanelOverrides& operator=(IVirtualizingStackPanelOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualizingStackPanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingStackPanelStatics>
    {
        IVirtualizingStackPanelStatics(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingStackPanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualizingStackPanelStatics(IVirtualizingStackPanelStatics const&) noexcept = default;
        IVirtualizingStackPanelStatics(IVirtualizingStackPanelStatics&&) noexcept = default;
        IVirtualizingStackPanelStatics& operator=(IVirtualizingStackPanelStatics const&) & noexcept = default;
        IVirtualizingStackPanelStatics& operator=(IVirtualizingStackPanelStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView>
    {
        IWebView(std::nullptr_t = nullptr) noexcept {}
        IWebView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebView(IWebView const&) noexcept = default;
        IWebView(IWebView&&) noexcept = default;
        IWebView& operator=(IWebView const&) & noexcept = default;
        IWebView& operator=(IWebView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView2>
    {
        IWebView2(std::nullptr_t = nullptr) noexcept {}
        IWebView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebView2(IWebView2 const&) noexcept = default;
        IWebView2(IWebView2&&) noexcept = default;
        IWebView2& operator=(IWebView2 const&) & noexcept = default;
        IWebView2& operator=(IWebView2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebView3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView3>
    {
        IWebView3(std::nullptr_t = nullptr) noexcept {}
        IWebView3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebView3(IWebView3 const&) noexcept = default;
        IWebView3(IWebView3&&) noexcept = default;
        IWebView3& operator=(IWebView3 const&) & noexcept = default;
        IWebView3& operator=(IWebView3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebView4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView4>
    {
        IWebView4(std::nullptr_t = nullptr) noexcept {}
        IWebView4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebView4(IWebView4 const&) noexcept = default;
        IWebView4(IWebView4&&) noexcept = default;
        IWebView4& operator=(IWebView4 const&) & noexcept = default;
        IWebView4& operator=(IWebView4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebView5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView5>
    {
        IWebView5(std::nullptr_t = nullptr) noexcept {}
        IWebView5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebView5(IWebView5 const&) noexcept = default;
        IWebView5(IWebView5&&) noexcept = default;
        IWebView5& operator=(IWebView5 const&) & noexcept = default;
        IWebView5& operator=(IWebView5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebView6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView6>
    {
        IWebView6(std::nullptr_t = nullptr) noexcept {}
        IWebView6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebView6(IWebView6 const&) noexcept = default;
        IWebView6(IWebView6&&) noexcept = default;
        IWebView6& operator=(IWebView6 const&) & noexcept = default;
        IWebView6& operator=(IWebView6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebView7 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView7>
    {
        IWebView7(std::nullptr_t = nullptr) noexcept {}
        IWebView7(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebView7(IWebView7 const&) noexcept = default;
        IWebView7(IWebView7&&) noexcept = default;
        IWebView7& operator=(IWebView7 const&) & noexcept = default;
        IWebView7& operator=(IWebView7&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewBrush :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewBrush>
    {
        IWebViewBrush(std::nullptr_t = nullptr) noexcept {}
        IWebViewBrush(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewBrush(IWebViewBrush const&) noexcept = default;
        IWebViewBrush(IWebViewBrush&&) noexcept = default;
        IWebViewBrush& operator=(IWebViewBrush const&) & noexcept = default;
        IWebViewBrush& operator=(IWebViewBrush&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewBrushStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewBrushStatics>
    {
        IWebViewBrushStatics(std::nullptr_t = nullptr) noexcept {}
        IWebViewBrushStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewBrushStatics(IWebViewBrushStatics const&) noexcept = default;
        IWebViewBrushStatics(IWebViewBrushStatics&&) noexcept = default;
        IWebViewBrushStatics& operator=(IWebViewBrushStatics const&) & noexcept = default;
        IWebViewBrushStatics& operator=(IWebViewBrushStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewContentLoadingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewContentLoadingEventArgs>
    {
        IWebViewContentLoadingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewContentLoadingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewContentLoadingEventArgs(IWebViewContentLoadingEventArgs const&) noexcept = default;
        IWebViewContentLoadingEventArgs(IWebViewContentLoadingEventArgs&&) noexcept = default;
        IWebViewContentLoadingEventArgs& operator=(IWebViewContentLoadingEventArgs const&) & noexcept = default;
        IWebViewContentLoadingEventArgs& operator=(IWebViewContentLoadingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewDOMContentLoadedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewDOMContentLoadedEventArgs>
    {
        IWebViewDOMContentLoadedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewDOMContentLoadedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewDOMContentLoadedEventArgs(IWebViewDOMContentLoadedEventArgs const&) noexcept = default;
        IWebViewDOMContentLoadedEventArgs(IWebViewDOMContentLoadedEventArgs&&) noexcept = default;
        IWebViewDOMContentLoadedEventArgs& operator=(IWebViewDOMContentLoadedEventArgs const&) & noexcept = default;
        IWebViewDOMContentLoadedEventArgs& operator=(IWebViewDOMContentLoadedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewDeferredPermissionRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewDeferredPermissionRequest>
    {
        IWebViewDeferredPermissionRequest(std::nullptr_t = nullptr) noexcept {}
        IWebViewDeferredPermissionRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewDeferredPermissionRequest(IWebViewDeferredPermissionRequest const&) noexcept = default;
        IWebViewDeferredPermissionRequest(IWebViewDeferredPermissionRequest&&) noexcept = default;
        IWebViewDeferredPermissionRequest& operator=(IWebViewDeferredPermissionRequest const&) & noexcept = default;
        IWebViewDeferredPermissionRequest& operator=(IWebViewDeferredPermissionRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewFactory4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewFactory4>
    {
        IWebViewFactory4(std::nullptr_t = nullptr) noexcept {}
        IWebViewFactory4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewFactory4(IWebViewFactory4 const&) noexcept = default;
        IWebViewFactory4(IWebViewFactory4&&) noexcept = default;
        IWebViewFactory4& operator=(IWebViewFactory4 const&) & noexcept = default;
        IWebViewFactory4& operator=(IWebViewFactory4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewLongRunningScriptDetectedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewLongRunningScriptDetectedEventArgs>
    {
        IWebViewLongRunningScriptDetectedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewLongRunningScriptDetectedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewLongRunningScriptDetectedEventArgs(IWebViewLongRunningScriptDetectedEventArgs const&) noexcept = default;
        IWebViewLongRunningScriptDetectedEventArgs(IWebViewLongRunningScriptDetectedEventArgs&&) noexcept = default;
        IWebViewLongRunningScriptDetectedEventArgs& operator=(IWebViewLongRunningScriptDetectedEventArgs const&) & noexcept = default;
        IWebViewLongRunningScriptDetectedEventArgs& operator=(IWebViewLongRunningScriptDetectedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewNavigationCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewNavigationCompletedEventArgs>
    {
        IWebViewNavigationCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewNavigationCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewNavigationCompletedEventArgs(IWebViewNavigationCompletedEventArgs const&) noexcept = default;
        IWebViewNavigationCompletedEventArgs(IWebViewNavigationCompletedEventArgs&&) noexcept = default;
        IWebViewNavigationCompletedEventArgs& operator=(IWebViewNavigationCompletedEventArgs const&) & noexcept = default;
        IWebViewNavigationCompletedEventArgs& operator=(IWebViewNavigationCompletedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewNavigationFailedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewNavigationFailedEventArgs>
    {
        IWebViewNavigationFailedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewNavigationFailedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewNavigationFailedEventArgs(IWebViewNavigationFailedEventArgs const&) noexcept = default;
        IWebViewNavigationFailedEventArgs(IWebViewNavigationFailedEventArgs&&) noexcept = default;
        IWebViewNavigationFailedEventArgs& operator=(IWebViewNavigationFailedEventArgs const&) & noexcept = default;
        IWebViewNavigationFailedEventArgs& operator=(IWebViewNavigationFailedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewNavigationStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewNavigationStartingEventArgs>
    {
        IWebViewNavigationStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewNavigationStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewNavigationStartingEventArgs(IWebViewNavigationStartingEventArgs const&) noexcept = default;
        IWebViewNavigationStartingEventArgs(IWebViewNavigationStartingEventArgs&&) noexcept = default;
        IWebViewNavigationStartingEventArgs& operator=(IWebViewNavigationStartingEventArgs const&) & noexcept = default;
        IWebViewNavigationStartingEventArgs& operator=(IWebViewNavigationStartingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewNewWindowRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewNewWindowRequestedEventArgs>
    {
        IWebViewNewWindowRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewNewWindowRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewNewWindowRequestedEventArgs(IWebViewNewWindowRequestedEventArgs const&) noexcept = default;
        IWebViewNewWindowRequestedEventArgs(IWebViewNewWindowRequestedEventArgs&&) noexcept = default;
        IWebViewNewWindowRequestedEventArgs& operator=(IWebViewNewWindowRequestedEventArgs const&) & noexcept = default;
        IWebViewNewWindowRequestedEventArgs& operator=(IWebViewNewWindowRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewPermissionRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewPermissionRequest>
    {
        IWebViewPermissionRequest(std::nullptr_t = nullptr) noexcept {}
        IWebViewPermissionRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewPermissionRequest(IWebViewPermissionRequest const&) noexcept = default;
        IWebViewPermissionRequest(IWebViewPermissionRequest&&) noexcept = default;
        IWebViewPermissionRequest& operator=(IWebViewPermissionRequest const&) & noexcept = default;
        IWebViewPermissionRequest& operator=(IWebViewPermissionRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewPermissionRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewPermissionRequestedEventArgs>
    {
        IWebViewPermissionRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewPermissionRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewPermissionRequestedEventArgs(IWebViewPermissionRequestedEventArgs const&) noexcept = default;
        IWebViewPermissionRequestedEventArgs(IWebViewPermissionRequestedEventArgs&&) noexcept = default;
        IWebViewPermissionRequestedEventArgs& operator=(IWebViewPermissionRequestedEventArgs const&) & noexcept = default;
        IWebViewPermissionRequestedEventArgs& operator=(IWebViewPermissionRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewSeparateProcessLostEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewSeparateProcessLostEventArgs>
    {
        IWebViewSeparateProcessLostEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewSeparateProcessLostEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewSeparateProcessLostEventArgs(IWebViewSeparateProcessLostEventArgs const&) noexcept = default;
        IWebViewSeparateProcessLostEventArgs(IWebViewSeparateProcessLostEventArgs&&) noexcept = default;
        IWebViewSeparateProcessLostEventArgs& operator=(IWebViewSeparateProcessLostEventArgs const&) & noexcept = default;
        IWebViewSeparateProcessLostEventArgs& operator=(IWebViewSeparateProcessLostEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewSettings>
    {
        IWebViewSettings(std::nullptr_t = nullptr) noexcept {}
        IWebViewSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewSettings(IWebViewSettings const&) noexcept = default;
        IWebViewSettings(IWebViewSettings&&) noexcept = default;
        IWebViewSettings& operator=(IWebViewSettings const&) & noexcept = default;
        IWebViewSettings& operator=(IWebViewSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewStatics>
    {
        IWebViewStatics(std::nullptr_t = nullptr) noexcept {}
        IWebViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewStatics(IWebViewStatics const&) noexcept = default;
        IWebViewStatics(IWebViewStatics&&) noexcept = default;
        IWebViewStatics& operator=(IWebViewStatics const&) & noexcept = default;
        IWebViewStatics& operator=(IWebViewStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewStatics2>
    {
        IWebViewStatics2(std::nullptr_t = nullptr) noexcept {}
        IWebViewStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewStatics2(IWebViewStatics2 const&) noexcept = default;
        IWebViewStatics2(IWebViewStatics2&&) noexcept = default;
        IWebViewStatics2& operator=(IWebViewStatics2 const&) & noexcept = default;
        IWebViewStatics2& operator=(IWebViewStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewStatics3>
    {
        IWebViewStatics3(std::nullptr_t = nullptr) noexcept {}
        IWebViewStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewStatics3(IWebViewStatics3 const&) noexcept = default;
        IWebViewStatics3(IWebViewStatics3&&) noexcept = default;
        IWebViewStatics3& operator=(IWebViewStatics3 const&) & noexcept = default;
        IWebViewStatics3& operator=(IWebViewStatics3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewStatics4>
    {
        IWebViewStatics4(std::nullptr_t = nullptr) noexcept {}
        IWebViewStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewStatics4(IWebViewStatics4 const&) noexcept = default;
        IWebViewStatics4(IWebViewStatics4&&) noexcept = default;
        IWebViewStatics4& operator=(IWebViewStatics4 const&) & noexcept = default;
        IWebViewStatics4& operator=(IWebViewStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewStatics5>
    {
        IWebViewStatics5(std::nullptr_t = nullptr) noexcept {}
        IWebViewStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewStatics5(IWebViewStatics5 const&) noexcept = default;
        IWebViewStatics5(IWebViewStatics5&&) noexcept = default;
        IWebViewStatics5& operator=(IWebViewStatics5 const&) & noexcept = default;
        IWebViewStatics5& operator=(IWebViewStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewUnsupportedUriSchemeIdentifiedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewUnsupportedUriSchemeIdentifiedEventArgs>
    {
        IWebViewUnsupportedUriSchemeIdentifiedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewUnsupportedUriSchemeIdentifiedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewUnsupportedUriSchemeIdentifiedEventArgs(IWebViewUnsupportedUriSchemeIdentifiedEventArgs const&) noexcept = default;
        IWebViewUnsupportedUriSchemeIdentifiedEventArgs(IWebViewUnsupportedUriSchemeIdentifiedEventArgs&&) noexcept = default;
        IWebViewUnsupportedUriSchemeIdentifiedEventArgs& operator=(IWebViewUnsupportedUriSchemeIdentifiedEventArgs const&) & noexcept = default;
        IWebViewUnsupportedUriSchemeIdentifiedEventArgs& operator=(IWebViewUnsupportedUriSchemeIdentifiedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewUnviewableContentIdentifiedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewUnviewableContentIdentifiedEventArgs>
    {
        IWebViewUnviewableContentIdentifiedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewUnviewableContentIdentifiedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewUnviewableContentIdentifiedEventArgs(IWebViewUnviewableContentIdentifiedEventArgs const&) noexcept = default;
        IWebViewUnviewableContentIdentifiedEventArgs(IWebViewUnviewableContentIdentifiedEventArgs&&) noexcept = default;
        IWebViewUnviewableContentIdentifiedEventArgs& operator=(IWebViewUnviewableContentIdentifiedEventArgs const&) & noexcept = default;
        IWebViewUnviewableContentIdentifiedEventArgs& operator=(IWebViewUnviewableContentIdentifiedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewUnviewableContentIdentifiedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewUnviewableContentIdentifiedEventArgs2>
    {
        IWebViewUnviewableContentIdentifiedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IWebViewUnviewableContentIdentifiedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewUnviewableContentIdentifiedEventArgs2(IWebViewUnviewableContentIdentifiedEventArgs2 const&) noexcept = default;
        IWebViewUnviewableContentIdentifiedEventArgs2(IWebViewUnviewableContentIdentifiedEventArgs2&&) noexcept = default;
        IWebViewUnviewableContentIdentifiedEventArgs2& operator=(IWebViewUnviewableContentIdentifiedEventArgs2 const&) & noexcept = default;
        IWebViewUnviewableContentIdentifiedEventArgs2& operator=(IWebViewUnviewableContentIdentifiedEventArgs2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWebViewWebResourceRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebViewWebResourceRequestedEventArgs>
    {
        IWebViewWebResourceRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWebViewWebResourceRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWebViewWebResourceRequestedEventArgs(IWebViewWebResourceRequestedEventArgs const&) noexcept = default;
        IWebViewWebResourceRequestedEventArgs(IWebViewWebResourceRequestedEventArgs&&) noexcept = default;
        IWebViewWebResourceRequestedEventArgs& operator=(IWebViewWebResourceRequestedEventArgs const&) & noexcept = default;
        IWebViewWebResourceRequestedEventArgs& operator=(IWebViewWebResourceRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWrapGrid :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWrapGrid>
    {
        IWrapGrid(std::nullptr_t = nullptr) noexcept {}
        IWrapGrid(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWrapGrid(IWrapGrid const&) noexcept = default;
        IWrapGrid(IWrapGrid&&) noexcept = default;
        IWrapGrid& operator=(IWrapGrid const&) & noexcept = default;
        IWrapGrid& operator=(IWrapGrid&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWrapGridStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWrapGridStatics>
    {
        IWrapGridStatics(std::nullptr_t = nullptr) noexcept {}
        IWrapGridStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWrapGridStatics(IWrapGridStatics const&) noexcept = default;
        IWrapGridStatics(IWrapGridStatics&&) noexcept = default;
        IWrapGridStatics& operator=(IWrapGridStatics const&) & noexcept = default;
        IWrapGridStatics& operator=(IWrapGridStatics&&) & noexcept = default;
    };
}
#endif
