// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_Contacts_1_H
#define WINRT_Windows_ApplicationModel_Contacts_1_H
#include "winrt/impl/Windows.Foundation.0.h"
#include "winrt/impl/Windows.ApplicationModel.Contacts.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::Contacts
{
    struct __declspec(empty_bases) IAggregateContactManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAggregateContactManager>
    {
        IAggregateContactManager(std::nullptr_t = nullptr) noexcept {}
        IAggregateContactManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAggregateContactManager(IAggregateContactManager const&) noexcept = default;
        IAggregateContactManager(IAggregateContactManager&&) noexcept = default;
        IAggregateContactManager& operator=(IAggregateContactManager const&) & noexcept = default;
        IAggregateContactManager& operator=(IAggregateContactManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAggregateContactManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAggregateContactManager2>
    {
        IAggregateContactManager2(std::nullptr_t = nullptr) noexcept {}
        IAggregateContactManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAggregateContactManager2(IAggregateContactManager2 const&) noexcept = default;
        IAggregateContactManager2(IAggregateContactManager2&&) noexcept = default;
        IAggregateContactManager2& operator=(IAggregateContactManager2 const&) & noexcept = default;
        IAggregateContactManager2& operator=(IAggregateContactManager2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContact :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContact>
    {
        IContact(std::nullptr_t = nullptr) noexcept {}
        IContact(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContact(IContact const&) noexcept = default;
        IContact(IContact&&) noexcept = default;
        IContact& operator=(IContact const&) & noexcept = default;
        IContact& operator=(IContact&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContact2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContact2>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContact2, winrt::Windows::ApplicationModel::Contacts::IContact>
    {
        IContact2(std::nullptr_t = nullptr) noexcept {}
        IContact2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContact2(IContact2 const&) noexcept = default;
        IContact2(IContact2&&) noexcept = default;
        IContact2& operator=(IContact2 const&) & noexcept = default;
        IContact2& operator=(IContact2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContact3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContact3>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContact3, winrt::Windows::ApplicationModel::Contacts::IContact, winrt::Windows::ApplicationModel::Contacts::IContact2>
    {
        IContact3(std::nullptr_t = nullptr) noexcept {}
        IContact3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContact3(IContact3 const&) noexcept = default;
        IContact3(IContact3&&) noexcept = default;
        IContact3& operator=(IContact3 const&) & noexcept = default;
        IContact3& operator=(IContact3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactAddress :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactAddress>
    {
        IContactAddress(std::nullptr_t = nullptr) noexcept {}
        IContactAddress(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactAddress(IContactAddress const&) noexcept = default;
        IContactAddress(IContactAddress&&) noexcept = default;
        IContactAddress& operator=(IContactAddress const&) & noexcept = default;
        IContactAddress& operator=(IContactAddress&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactAnnotation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactAnnotation>
    {
        IContactAnnotation(std::nullptr_t = nullptr) noexcept {}
        IContactAnnotation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactAnnotation(IContactAnnotation const&) noexcept = default;
        IContactAnnotation(IContactAnnotation&&) noexcept = default;
        IContactAnnotation& operator=(IContactAnnotation const&) & noexcept = default;
        IContactAnnotation& operator=(IContactAnnotation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactAnnotation2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactAnnotation2>
    {
        IContactAnnotation2(std::nullptr_t = nullptr) noexcept {}
        IContactAnnotation2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactAnnotation2(IContactAnnotation2 const&) noexcept = default;
        IContactAnnotation2(IContactAnnotation2&&) noexcept = default;
        IContactAnnotation2& operator=(IContactAnnotation2 const&) & noexcept = default;
        IContactAnnotation2& operator=(IContactAnnotation2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactAnnotationList :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactAnnotationList>
    {
        IContactAnnotationList(std::nullptr_t = nullptr) noexcept {}
        IContactAnnotationList(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactAnnotationList(IContactAnnotationList const&) noexcept = default;
        IContactAnnotationList(IContactAnnotationList&&) noexcept = default;
        IContactAnnotationList& operator=(IContactAnnotationList const&) & noexcept = default;
        IContactAnnotationList& operator=(IContactAnnotationList&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactAnnotationStore :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactAnnotationStore>
    {
        IContactAnnotationStore(std::nullptr_t = nullptr) noexcept {}
        IContactAnnotationStore(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactAnnotationStore(IContactAnnotationStore const&) noexcept = default;
        IContactAnnotationStore(IContactAnnotationStore&&) noexcept = default;
        IContactAnnotationStore& operator=(IContactAnnotationStore const&) & noexcept = default;
        IContactAnnotationStore& operator=(IContactAnnotationStore&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactAnnotationStore2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactAnnotationStore2>
    {
        IContactAnnotationStore2(std::nullptr_t = nullptr) noexcept {}
        IContactAnnotationStore2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactAnnotationStore2(IContactAnnotationStore2 const&) noexcept = default;
        IContactAnnotationStore2(IContactAnnotationStore2&&) noexcept = default;
        IContactAnnotationStore2& operator=(IContactAnnotationStore2 const&) & noexcept = default;
        IContactAnnotationStore2& operator=(IContactAnnotationStore2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactBatch :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactBatch>
    {
        IContactBatch(std::nullptr_t = nullptr) noexcept {}
        IContactBatch(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactBatch(IContactBatch const&) noexcept = default;
        IContactBatch(IContactBatch&&) noexcept = default;
        IContactBatch& operator=(IContactBatch const&) & noexcept = default;
        IContactBatch& operator=(IContactBatch&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactCardDelayedDataLoader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactCardDelayedDataLoader>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContactCardDelayedDataLoader, winrt::Windows::Foundation::IClosable>
    {
        IContactCardDelayedDataLoader(std::nullptr_t = nullptr) noexcept {}
        IContactCardDelayedDataLoader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactCardDelayedDataLoader(IContactCardDelayedDataLoader const&) noexcept = default;
        IContactCardDelayedDataLoader(IContactCardDelayedDataLoader&&) noexcept = default;
        IContactCardDelayedDataLoader& operator=(IContactCardDelayedDataLoader const&) & noexcept = default;
        IContactCardDelayedDataLoader& operator=(IContactCardDelayedDataLoader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactCardOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactCardOptions>
    {
        IContactCardOptions(std::nullptr_t = nullptr) noexcept {}
        IContactCardOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactCardOptions(IContactCardOptions const&) noexcept = default;
        IContactCardOptions(IContactCardOptions&&) noexcept = default;
        IContactCardOptions& operator=(IContactCardOptions const&) & noexcept = default;
        IContactCardOptions& operator=(IContactCardOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactCardOptions2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactCardOptions2>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContactCardOptions2, winrt::Windows::ApplicationModel::Contacts::IContactCardOptions>
    {
        IContactCardOptions2(std::nullptr_t = nullptr) noexcept {}
        IContactCardOptions2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactCardOptions2(IContactCardOptions2 const&) noexcept = default;
        IContactCardOptions2(IContactCardOptions2&&) noexcept = default;
        IContactCardOptions2& operator=(IContactCardOptions2 const&) & noexcept = default;
        IContactCardOptions2& operator=(IContactCardOptions2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactChange :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactChange>
    {
        IContactChange(std::nullptr_t = nullptr) noexcept {}
        IContactChange(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactChange(IContactChange const&) noexcept = default;
        IContactChange(IContactChange&&) noexcept = default;
        IContactChange& operator=(IContactChange const&) & noexcept = default;
        IContactChange& operator=(IContactChange&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactChangeReader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactChangeReader>
    {
        IContactChangeReader(std::nullptr_t = nullptr) noexcept {}
        IContactChangeReader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactChangeReader(IContactChangeReader const&) noexcept = default;
        IContactChangeReader(IContactChangeReader&&) noexcept = default;
        IContactChangeReader& operator=(IContactChangeReader const&) & noexcept = default;
        IContactChangeReader& operator=(IContactChangeReader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactChangeTracker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactChangeTracker>
    {
        IContactChangeTracker(std::nullptr_t = nullptr) noexcept {}
        IContactChangeTracker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactChangeTracker(IContactChangeTracker const&) noexcept = default;
        IContactChangeTracker(IContactChangeTracker&&) noexcept = default;
        IContactChangeTracker& operator=(IContactChangeTracker const&) & noexcept = default;
        IContactChangeTracker& operator=(IContactChangeTracker&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactChangeTracker2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactChangeTracker2>
    {
        IContactChangeTracker2(std::nullptr_t = nullptr) noexcept {}
        IContactChangeTracker2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactChangeTracker2(IContactChangeTracker2 const&) noexcept = default;
        IContactChangeTracker2(IContactChangeTracker2&&) noexcept = default;
        IContactChangeTracker2& operator=(IContactChangeTracker2 const&) & noexcept = default;
        IContactChangeTracker2& operator=(IContactChangeTracker2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactChangedDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactChangedDeferral>
    {
        IContactChangedDeferral(std::nullptr_t = nullptr) noexcept {}
        IContactChangedDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactChangedDeferral(IContactChangedDeferral const&) noexcept = default;
        IContactChangedDeferral(IContactChangedDeferral&&) noexcept = default;
        IContactChangedDeferral& operator=(IContactChangedDeferral const&) & noexcept = default;
        IContactChangedDeferral& operator=(IContactChangedDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactChangedEventArgs>
    {
        IContactChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContactChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactChangedEventArgs(IContactChangedEventArgs const&) noexcept = default;
        IContactChangedEventArgs(IContactChangedEventArgs&&) noexcept = default;
        IContactChangedEventArgs& operator=(IContactChangedEventArgs const&) & noexcept = default;
        IContactChangedEventArgs& operator=(IContactChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactConnectedServiceAccount :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactConnectedServiceAccount>
    {
        IContactConnectedServiceAccount(std::nullptr_t = nullptr) noexcept {}
        IContactConnectedServiceAccount(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactConnectedServiceAccount(IContactConnectedServiceAccount const&) noexcept = default;
        IContactConnectedServiceAccount(IContactConnectedServiceAccount&&) noexcept = default;
        IContactConnectedServiceAccount& operator=(IContactConnectedServiceAccount const&) & noexcept = default;
        IContactConnectedServiceAccount& operator=(IContactConnectedServiceAccount&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactDate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactDate>
    {
        IContactDate(std::nullptr_t = nullptr) noexcept {}
        IContactDate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactDate(IContactDate const&) noexcept = default;
        IContactDate(IContactDate&&) noexcept = default;
        IContactDate& operator=(IContactDate const&) & noexcept = default;
        IContactDate& operator=(IContactDate&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactEmail :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactEmail>
    {
        IContactEmail(std::nullptr_t = nullptr) noexcept {}
        IContactEmail(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactEmail(IContactEmail const&) noexcept = default;
        IContactEmail(IContactEmail&&) noexcept = default;
        IContactEmail& operator=(IContactEmail const&) & noexcept = default;
        IContactEmail& operator=(IContactEmail&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactField :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactField>
    {
        IContactField(std::nullptr_t = nullptr) noexcept {}
        IContactField(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactField(IContactField const&) noexcept = default;
        IContactField(IContactField&&) noexcept = default;
        IContactField& operator=(IContactField const&) & noexcept = default;
        IContactField& operator=(IContactField&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactFieldFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactFieldFactory>
    {
        IContactFieldFactory(std::nullptr_t = nullptr) noexcept {}
        IContactFieldFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactFieldFactory(IContactFieldFactory const&) noexcept = default;
        IContactFieldFactory(IContactFieldFactory&&) noexcept = default;
        IContactFieldFactory& operator=(IContactFieldFactory const&) & noexcept = default;
        IContactFieldFactory& operator=(IContactFieldFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactGroup :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactGroup>
    {
        IContactGroup(std::nullptr_t = nullptr) noexcept {}
        IContactGroup(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactGroup(IContactGroup const&) noexcept = default;
        IContactGroup(IContactGroup&&) noexcept = default;
        IContactGroup& operator=(IContactGroup const&) & noexcept = default;
        IContactGroup& operator=(IContactGroup&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactInformation>
    {
        IContactInformation(std::nullptr_t = nullptr) noexcept {}
        IContactInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactInformation(IContactInformation const&) noexcept = default;
        IContactInformation(IContactInformation&&) noexcept = default;
        IContactInformation& operator=(IContactInformation const&) & noexcept = default;
        IContactInformation& operator=(IContactInformation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactInstantMessageField :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactInstantMessageField>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContactInstantMessageField, winrt::Windows::ApplicationModel::Contacts::IContactField>
    {
        IContactInstantMessageField(std::nullptr_t = nullptr) noexcept {}
        IContactInstantMessageField(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactInstantMessageField(IContactInstantMessageField const&) noexcept = default;
        IContactInstantMessageField(IContactInstantMessageField&&) noexcept = default;
        IContactInstantMessageField& operator=(IContactInstantMessageField const&) & noexcept = default;
        IContactInstantMessageField& operator=(IContactInstantMessageField&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactInstantMessageFieldFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactInstantMessageFieldFactory>
    {
        IContactInstantMessageFieldFactory(std::nullptr_t = nullptr) noexcept {}
        IContactInstantMessageFieldFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactInstantMessageFieldFactory(IContactInstantMessageFieldFactory const&) noexcept = default;
        IContactInstantMessageFieldFactory(IContactInstantMessageFieldFactory&&) noexcept = default;
        IContactInstantMessageFieldFactory& operator=(IContactInstantMessageFieldFactory const&) & noexcept = default;
        IContactInstantMessageFieldFactory& operator=(IContactInstantMessageFieldFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactJobInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactJobInfo>
    {
        IContactJobInfo(std::nullptr_t = nullptr) noexcept {}
        IContactJobInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactJobInfo(IContactJobInfo const&) noexcept = default;
        IContactJobInfo(IContactJobInfo&&) noexcept = default;
        IContactJobInfo& operator=(IContactJobInfo const&) & noexcept = default;
        IContactJobInfo& operator=(IContactJobInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactLaunchActionVerbsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactLaunchActionVerbsStatics>
    {
        IContactLaunchActionVerbsStatics(std::nullptr_t = nullptr) noexcept {}
        IContactLaunchActionVerbsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactLaunchActionVerbsStatics(IContactLaunchActionVerbsStatics const&) noexcept = default;
        IContactLaunchActionVerbsStatics(IContactLaunchActionVerbsStatics&&) noexcept = default;
        IContactLaunchActionVerbsStatics& operator=(IContactLaunchActionVerbsStatics const&) & noexcept = default;
        IContactLaunchActionVerbsStatics& operator=(IContactLaunchActionVerbsStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactList :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactList>
    {
        IContactList(std::nullptr_t = nullptr) noexcept {}
        IContactList(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactList(IContactList const&) noexcept = default;
        IContactList(IContactList&&) noexcept = default;
        IContactList& operator=(IContactList const&) & noexcept = default;
        IContactList& operator=(IContactList&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactList2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactList2>
    {
        IContactList2(std::nullptr_t = nullptr) noexcept {}
        IContactList2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactList2(IContactList2 const&) noexcept = default;
        IContactList2(IContactList2&&) noexcept = default;
        IContactList2& operator=(IContactList2 const&) & noexcept = default;
        IContactList2& operator=(IContactList2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactList3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactList3>
    {
        IContactList3(std::nullptr_t = nullptr) noexcept {}
        IContactList3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactList3(IContactList3 const&) noexcept = default;
        IContactList3(IContactList3&&) noexcept = default;
        IContactList3& operator=(IContactList3 const&) & noexcept = default;
        IContactList3& operator=(IContactList3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactListLimitedWriteOperations :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactListLimitedWriteOperations>
    {
        IContactListLimitedWriteOperations(std::nullptr_t = nullptr) noexcept {}
        IContactListLimitedWriteOperations(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactListLimitedWriteOperations(IContactListLimitedWriteOperations const&) noexcept = default;
        IContactListLimitedWriteOperations(IContactListLimitedWriteOperations&&) noexcept = default;
        IContactListLimitedWriteOperations& operator=(IContactListLimitedWriteOperations const&) & noexcept = default;
        IContactListLimitedWriteOperations& operator=(IContactListLimitedWriteOperations&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactListSyncConstraints :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactListSyncConstraints>
    {
        IContactListSyncConstraints(std::nullptr_t = nullptr) noexcept {}
        IContactListSyncConstraints(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactListSyncConstraints(IContactListSyncConstraints const&) noexcept = default;
        IContactListSyncConstraints(IContactListSyncConstraints&&) noexcept = default;
        IContactListSyncConstraints& operator=(IContactListSyncConstraints const&) & noexcept = default;
        IContactListSyncConstraints& operator=(IContactListSyncConstraints&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactListSyncManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactListSyncManager>
    {
        IContactListSyncManager(std::nullptr_t = nullptr) noexcept {}
        IContactListSyncManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactListSyncManager(IContactListSyncManager const&) noexcept = default;
        IContactListSyncManager(IContactListSyncManager&&) noexcept = default;
        IContactListSyncManager& operator=(IContactListSyncManager const&) & noexcept = default;
        IContactListSyncManager& operator=(IContactListSyncManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactListSyncManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactListSyncManager2>
    {
        IContactListSyncManager2(std::nullptr_t = nullptr) noexcept {}
        IContactListSyncManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactListSyncManager2(IContactListSyncManager2 const&) noexcept = default;
        IContactListSyncManager2(IContactListSyncManager2&&) noexcept = default;
        IContactListSyncManager2& operator=(IContactListSyncManager2 const&) & noexcept = default;
        IContactListSyncManager2& operator=(IContactListSyncManager2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactLocationField :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactLocationField>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContactLocationField, winrt::Windows::ApplicationModel::Contacts::IContactField>
    {
        IContactLocationField(std::nullptr_t = nullptr) noexcept {}
        IContactLocationField(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactLocationField(IContactLocationField const&) noexcept = default;
        IContactLocationField(IContactLocationField&&) noexcept = default;
        IContactLocationField& operator=(IContactLocationField const&) & noexcept = default;
        IContactLocationField& operator=(IContactLocationField&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactLocationFieldFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactLocationFieldFactory>
    {
        IContactLocationFieldFactory(std::nullptr_t = nullptr) noexcept {}
        IContactLocationFieldFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactLocationFieldFactory(IContactLocationFieldFactory const&) noexcept = default;
        IContactLocationFieldFactory(IContactLocationFieldFactory&&) noexcept = default;
        IContactLocationFieldFactory& operator=(IContactLocationFieldFactory const&) & noexcept = default;
        IContactLocationFieldFactory& operator=(IContactLocationFieldFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactManagerForUser :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactManagerForUser>
    {
        IContactManagerForUser(std::nullptr_t = nullptr) noexcept {}
        IContactManagerForUser(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactManagerForUser(IContactManagerForUser const&) noexcept = default;
        IContactManagerForUser(IContactManagerForUser&&) noexcept = default;
        IContactManagerForUser& operator=(IContactManagerForUser const&) & noexcept = default;
        IContactManagerForUser& operator=(IContactManagerForUser&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactManagerForUser2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactManagerForUser2>
    {
        IContactManagerForUser2(std::nullptr_t = nullptr) noexcept {}
        IContactManagerForUser2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactManagerForUser2(IContactManagerForUser2 const&) noexcept = default;
        IContactManagerForUser2(IContactManagerForUser2&&) noexcept = default;
        IContactManagerForUser2& operator=(IContactManagerForUser2 const&) & noexcept = default;
        IContactManagerForUser2& operator=(IContactManagerForUser2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactManagerStatics>
    {
        IContactManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IContactManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactManagerStatics(IContactManagerStatics const&) noexcept = default;
        IContactManagerStatics(IContactManagerStatics&&) noexcept = default;
        IContactManagerStatics& operator=(IContactManagerStatics const&) & noexcept = default;
        IContactManagerStatics& operator=(IContactManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactManagerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactManagerStatics2>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContactManagerStatics2, winrt::Windows::ApplicationModel::Contacts::IContactManagerStatics>
    {
        IContactManagerStatics2(std::nullptr_t = nullptr) noexcept {}
        IContactManagerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactManagerStatics2(IContactManagerStatics2 const&) noexcept = default;
        IContactManagerStatics2(IContactManagerStatics2&&) noexcept = default;
        IContactManagerStatics2& operator=(IContactManagerStatics2 const&) & noexcept = default;
        IContactManagerStatics2& operator=(IContactManagerStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactManagerStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactManagerStatics3>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContactManagerStatics3, winrt::Windows::ApplicationModel::Contacts::IContactManagerStatics, winrt::Windows::ApplicationModel::Contacts::IContactManagerStatics2>
    {
        IContactManagerStatics3(std::nullptr_t = nullptr) noexcept {}
        IContactManagerStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactManagerStatics3(IContactManagerStatics3 const&) noexcept = default;
        IContactManagerStatics3(IContactManagerStatics3&&) noexcept = default;
        IContactManagerStatics3& operator=(IContactManagerStatics3 const&) & noexcept = default;
        IContactManagerStatics3& operator=(IContactManagerStatics3&&) & noexcept = default;
        using impl::consume_t<IContactManagerStatics3, IContactManagerStatics3>::RequestStoreAsync;
        using impl::consume_t<IContactManagerStatics3, winrt::Windows::ApplicationModel::Contacts::IContactManagerStatics2>::RequestStoreAsync;
        using impl::consume_t<IContactManagerStatics3, IContactManagerStatics3>::ShowContactCard;
        using impl::consume_t<IContactManagerStatics3, winrt::Windows::ApplicationModel::Contacts::IContactManagerStatics>::ShowContactCard;
        using impl::consume_t<IContactManagerStatics3, IContactManagerStatics3>::ShowDelayLoadedContactCard;
        using impl::consume_t<IContactManagerStatics3, winrt::Windows::ApplicationModel::Contacts::IContactManagerStatics>::ShowDelayLoadedContactCard;
    };
    struct __declspec(empty_bases) IContactManagerStatics4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactManagerStatics4>
    {
        IContactManagerStatics4(std::nullptr_t = nullptr) noexcept {}
        IContactManagerStatics4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactManagerStatics4(IContactManagerStatics4 const&) noexcept = default;
        IContactManagerStatics4(IContactManagerStatics4&&) noexcept = default;
        IContactManagerStatics4& operator=(IContactManagerStatics4 const&) & noexcept = default;
        IContactManagerStatics4& operator=(IContactManagerStatics4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactManagerStatics5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactManagerStatics5>
    {
        IContactManagerStatics5(std::nullptr_t = nullptr) noexcept {}
        IContactManagerStatics5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactManagerStatics5(IContactManagerStatics5 const&) noexcept = default;
        IContactManagerStatics5(IContactManagerStatics5&&) noexcept = default;
        IContactManagerStatics5& operator=(IContactManagerStatics5 const&) & noexcept = default;
        IContactManagerStatics5& operator=(IContactManagerStatics5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactMatchReason :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactMatchReason>
    {
        IContactMatchReason(std::nullptr_t = nullptr) noexcept {}
        IContactMatchReason(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactMatchReason(IContactMatchReason const&) noexcept = default;
        IContactMatchReason(IContactMatchReason&&) noexcept = default;
        IContactMatchReason& operator=(IContactMatchReason const&) & noexcept = default;
        IContactMatchReason& operator=(IContactMatchReason&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactName :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactName>
    {
        IContactName(std::nullptr_t = nullptr) noexcept {}
        IContactName(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactName(IContactName const&) noexcept = default;
        IContactName(IContactName&&) noexcept = default;
        IContactName& operator=(IContactName const&) & noexcept = default;
        IContactName& operator=(IContactName&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactPanel>
    {
        IContactPanel(std::nullptr_t = nullptr) noexcept {}
        IContactPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactPanel(IContactPanel const&) noexcept = default;
        IContactPanel(IContactPanel&&) noexcept = default;
        IContactPanel& operator=(IContactPanel const&) & noexcept = default;
        IContactPanel& operator=(IContactPanel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactPanelClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactPanelClosingEventArgs>
    {
        IContactPanelClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContactPanelClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactPanelClosingEventArgs(IContactPanelClosingEventArgs const&) noexcept = default;
        IContactPanelClosingEventArgs(IContactPanelClosingEventArgs&&) noexcept = default;
        IContactPanelClosingEventArgs& operator=(IContactPanelClosingEventArgs const&) & noexcept = default;
        IContactPanelClosingEventArgs& operator=(IContactPanelClosingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactPanelLaunchFullAppRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactPanelLaunchFullAppRequestedEventArgs>
    {
        IContactPanelLaunchFullAppRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContactPanelLaunchFullAppRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactPanelLaunchFullAppRequestedEventArgs(IContactPanelLaunchFullAppRequestedEventArgs const&) noexcept = default;
        IContactPanelLaunchFullAppRequestedEventArgs(IContactPanelLaunchFullAppRequestedEventArgs&&) noexcept = default;
        IContactPanelLaunchFullAppRequestedEventArgs& operator=(IContactPanelLaunchFullAppRequestedEventArgs const&) & noexcept = default;
        IContactPanelLaunchFullAppRequestedEventArgs& operator=(IContactPanelLaunchFullAppRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactPhone :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactPhone>
    {
        IContactPhone(std::nullptr_t = nullptr) noexcept {}
        IContactPhone(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactPhone(IContactPhone const&) noexcept = default;
        IContactPhone(IContactPhone&&) noexcept = default;
        IContactPhone& operator=(IContactPhone const&) & noexcept = default;
        IContactPhone& operator=(IContactPhone&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactPicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactPicker>
    {
        IContactPicker(std::nullptr_t = nullptr) noexcept {}
        IContactPicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactPicker(IContactPicker const&) noexcept = default;
        IContactPicker(IContactPicker&&) noexcept = default;
        IContactPicker& operator=(IContactPicker const&) & noexcept = default;
        IContactPicker& operator=(IContactPicker&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactPicker2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactPicker2>
    {
        IContactPicker2(std::nullptr_t = nullptr) noexcept {}
        IContactPicker2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactPicker2(IContactPicker2 const&) noexcept = default;
        IContactPicker2(IContactPicker2&&) noexcept = default;
        IContactPicker2& operator=(IContactPicker2 const&) & noexcept = default;
        IContactPicker2& operator=(IContactPicker2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactPicker3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactPicker3>
    {
        IContactPicker3(std::nullptr_t = nullptr) noexcept {}
        IContactPicker3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactPicker3(IContactPicker3 const&) noexcept = default;
        IContactPicker3(IContactPicker3&&) noexcept = default;
        IContactPicker3& operator=(IContactPicker3 const&) & noexcept = default;
        IContactPicker3& operator=(IContactPicker3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactPickerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactPickerStatics>
    {
        IContactPickerStatics(std::nullptr_t = nullptr) noexcept {}
        IContactPickerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactPickerStatics(IContactPickerStatics const&) noexcept = default;
        IContactPickerStatics(IContactPickerStatics&&) noexcept = default;
        IContactPickerStatics& operator=(IContactPickerStatics const&) & noexcept = default;
        IContactPickerStatics& operator=(IContactPickerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactQueryOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactQueryOptions>
    {
        IContactQueryOptions(std::nullptr_t = nullptr) noexcept {}
        IContactQueryOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactQueryOptions(IContactQueryOptions const&) noexcept = default;
        IContactQueryOptions(IContactQueryOptions&&) noexcept = default;
        IContactQueryOptions& operator=(IContactQueryOptions const&) & noexcept = default;
        IContactQueryOptions& operator=(IContactQueryOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactQueryOptionsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactQueryOptionsFactory>
    {
        IContactQueryOptionsFactory(std::nullptr_t = nullptr) noexcept {}
        IContactQueryOptionsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactQueryOptionsFactory(IContactQueryOptionsFactory const&) noexcept = default;
        IContactQueryOptionsFactory(IContactQueryOptionsFactory&&) noexcept = default;
        IContactQueryOptionsFactory& operator=(IContactQueryOptionsFactory const&) & noexcept = default;
        IContactQueryOptionsFactory& operator=(IContactQueryOptionsFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactQueryTextSearch :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactQueryTextSearch>
    {
        IContactQueryTextSearch(std::nullptr_t = nullptr) noexcept {}
        IContactQueryTextSearch(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactQueryTextSearch(IContactQueryTextSearch const&) noexcept = default;
        IContactQueryTextSearch(IContactQueryTextSearch&&) noexcept = default;
        IContactQueryTextSearch& operator=(IContactQueryTextSearch const&) & noexcept = default;
        IContactQueryTextSearch& operator=(IContactQueryTextSearch&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactReader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactReader>
    {
        IContactReader(std::nullptr_t = nullptr) noexcept {}
        IContactReader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactReader(IContactReader const&) noexcept = default;
        IContactReader(IContactReader&&) noexcept = default;
        IContactReader& operator=(IContactReader const&) & noexcept = default;
        IContactReader& operator=(IContactReader&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactSignificantOther :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactSignificantOther>
    {
        IContactSignificantOther(std::nullptr_t = nullptr) noexcept {}
        IContactSignificantOther(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactSignificantOther(IContactSignificantOther const&) noexcept = default;
        IContactSignificantOther(IContactSignificantOther&&) noexcept = default;
        IContactSignificantOther& operator=(IContactSignificantOther const&) & noexcept = default;
        IContactSignificantOther& operator=(IContactSignificantOther&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactSignificantOther2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactSignificantOther2>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContactSignificantOther2, winrt::Windows::ApplicationModel::Contacts::IContactSignificantOther>
    {
        IContactSignificantOther2(std::nullptr_t = nullptr) noexcept {}
        IContactSignificantOther2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactSignificantOther2(IContactSignificantOther2 const&) noexcept = default;
        IContactSignificantOther2(IContactSignificantOther2&&) noexcept = default;
        IContactSignificantOther2& operator=(IContactSignificantOther2 const&) & noexcept = default;
        IContactSignificantOther2& operator=(IContactSignificantOther2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactStore :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactStore>
    {
        IContactStore(std::nullptr_t = nullptr) noexcept {}
        IContactStore(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactStore(IContactStore const&) noexcept = default;
        IContactStore(IContactStore&&) noexcept = default;
        IContactStore& operator=(IContactStore const&) & noexcept = default;
        IContactStore& operator=(IContactStore&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactStore2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactStore2>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContactStore2, winrt::Windows::ApplicationModel::Contacts::IContactStore>
    {
        IContactStore2(std::nullptr_t = nullptr) noexcept {}
        IContactStore2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactStore2(IContactStore2 const&) noexcept = default;
        IContactStore2(IContactStore2&&) noexcept = default;
        IContactStore2& operator=(IContactStore2 const&) & noexcept = default;
        IContactStore2& operator=(IContactStore2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactStore3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactStore3>
    {
        IContactStore3(std::nullptr_t = nullptr) noexcept {}
        IContactStore3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactStore3(IContactStore3 const&) noexcept = default;
        IContactStore3(IContactStore3&&) noexcept = default;
        IContactStore3& operator=(IContactStore3 const&) & noexcept = default;
        IContactStore3& operator=(IContactStore3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactStoreNotificationTriggerDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactStoreNotificationTriggerDetails>
    {
        IContactStoreNotificationTriggerDetails(std::nullptr_t = nullptr) noexcept {}
        IContactStoreNotificationTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactStoreNotificationTriggerDetails(IContactStoreNotificationTriggerDetails const&) noexcept = default;
        IContactStoreNotificationTriggerDetails(IContactStoreNotificationTriggerDetails&&) noexcept = default;
        IContactStoreNotificationTriggerDetails& operator=(IContactStoreNotificationTriggerDetails const&) & noexcept = default;
        IContactStoreNotificationTriggerDetails& operator=(IContactStoreNotificationTriggerDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactWebsite :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactWebsite>
    {
        IContactWebsite(std::nullptr_t = nullptr) noexcept {}
        IContactWebsite(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactWebsite(IContactWebsite const&) noexcept = default;
        IContactWebsite(IContactWebsite&&) noexcept = default;
        IContactWebsite& operator=(IContactWebsite const&) & noexcept = default;
        IContactWebsite& operator=(IContactWebsite&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactWebsite2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactWebsite2>,
        impl::require<winrt::Windows::ApplicationModel::Contacts::IContactWebsite2, winrt::Windows::ApplicationModel::Contacts::IContactWebsite>
    {
        IContactWebsite2(std::nullptr_t = nullptr) noexcept {}
        IContactWebsite2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactWebsite2(IContactWebsite2 const&) noexcept = default;
        IContactWebsite2(IContactWebsite2&&) noexcept = default;
        IContactWebsite2& operator=(IContactWebsite2 const&) & noexcept = default;
        IContactWebsite2& operator=(IContactWebsite2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFullContactCardOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFullContactCardOptions>
    {
        IFullContactCardOptions(std::nullptr_t = nullptr) noexcept {}
        IFullContactCardOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFullContactCardOptions(IFullContactCardOptions const&) noexcept = default;
        IFullContactCardOptions(IFullContactCardOptions&&) noexcept = default;
        IFullContactCardOptions& operator=(IFullContactCardOptions const&) & noexcept = default;
        IFullContactCardOptions& operator=(IFullContactCardOptions&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKnownContactFieldStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKnownContactFieldStatics>
    {
        IKnownContactFieldStatics(std::nullptr_t = nullptr) noexcept {}
        IKnownContactFieldStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKnownContactFieldStatics(IKnownContactFieldStatics const&) noexcept = default;
        IKnownContactFieldStatics(IKnownContactFieldStatics&&) noexcept = default;
        IKnownContactFieldStatics& operator=(IKnownContactFieldStatics const&) & noexcept = default;
        IKnownContactFieldStatics& operator=(IKnownContactFieldStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPinnedContactIdsQueryResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPinnedContactIdsQueryResult>
    {
        IPinnedContactIdsQueryResult(std::nullptr_t = nullptr) noexcept {}
        IPinnedContactIdsQueryResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPinnedContactIdsQueryResult(IPinnedContactIdsQueryResult const&) noexcept = default;
        IPinnedContactIdsQueryResult(IPinnedContactIdsQueryResult&&) noexcept = default;
        IPinnedContactIdsQueryResult& operator=(IPinnedContactIdsQueryResult const&) & noexcept = default;
        IPinnedContactIdsQueryResult& operator=(IPinnedContactIdsQueryResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPinnedContactManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPinnedContactManager>
    {
        IPinnedContactManager(std::nullptr_t = nullptr) noexcept {}
        IPinnedContactManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPinnedContactManager(IPinnedContactManager const&) noexcept = default;
        IPinnedContactManager(IPinnedContactManager&&) noexcept = default;
        IPinnedContactManager& operator=(IPinnedContactManager const&) & noexcept = default;
        IPinnedContactManager& operator=(IPinnedContactManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPinnedContactManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPinnedContactManagerStatics>
    {
        IPinnedContactManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IPinnedContactManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPinnedContactManagerStatics(IPinnedContactManagerStatics const&) noexcept = default;
        IPinnedContactManagerStatics(IPinnedContactManagerStatics&&) noexcept = default;
        IPinnedContactManagerStatics& operator=(IPinnedContactManagerStatics const&) & noexcept = default;
        IPinnedContactManagerStatics& operator=(IPinnedContactManagerStatics&&) & noexcept = default;
    };
}
#endif
