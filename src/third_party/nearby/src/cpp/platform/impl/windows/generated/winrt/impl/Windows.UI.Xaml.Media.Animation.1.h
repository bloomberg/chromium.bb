// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Xaml_Media_Animation_1_H
#define WINRT_Windows_UI_Xaml_Media_Animation_1_H
#include "winrt/impl/Windows.UI.Xaml.Media.Animation.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Media::Animation
{
    struct __declspec(empty_bases) IAddDeleteThemeTransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAddDeleteThemeTransition>
    {
        IAddDeleteThemeTransition(std::nullptr_t = nullptr) noexcept {}
        IAddDeleteThemeTransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAddDeleteThemeTransition(IAddDeleteThemeTransition const&) noexcept = default;
        IAddDeleteThemeTransition(IAddDeleteThemeTransition&&) noexcept = default;
        IAddDeleteThemeTransition& operator=(IAddDeleteThemeTransition const&) & noexcept = default;
        IAddDeleteThemeTransition& operator=(IAddDeleteThemeTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBackEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBackEase>
    {
        IBackEase(std::nullptr_t = nullptr) noexcept {}
        IBackEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBackEase(IBackEase const&) noexcept = default;
        IBackEase(IBackEase&&) noexcept = default;
        IBackEase& operator=(IBackEase const&) & noexcept = default;
        IBackEase& operator=(IBackEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBackEaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBackEaseStatics>
    {
        IBackEaseStatics(std::nullptr_t = nullptr) noexcept {}
        IBackEaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBackEaseStatics(IBackEaseStatics const&) noexcept = default;
        IBackEaseStatics(IBackEaseStatics&&) noexcept = default;
        IBackEaseStatics& operator=(IBackEaseStatics const&) & noexcept = default;
        IBackEaseStatics& operator=(IBackEaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBasicConnectedAnimationConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBasicConnectedAnimationConfiguration>
    {
        IBasicConnectedAnimationConfiguration(std::nullptr_t = nullptr) noexcept {}
        IBasicConnectedAnimationConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBasicConnectedAnimationConfiguration(IBasicConnectedAnimationConfiguration const&) noexcept = default;
        IBasicConnectedAnimationConfiguration(IBasicConnectedAnimationConfiguration&&) noexcept = default;
        IBasicConnectedAnimationConfiguration& operator=(IBasicConnectedAnimationConfiguration const&) & noexcept = default;
        IBasicConnectedAnimationConfiguration& operator=(IBasicConnectedAnimationConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBasicConnectedAnimationConfigurationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBasicConnectedAnimationConfigurationFactory>
    {
        IBasicConnectedAnimationConfigurationFactory(std::nullptr_t = nullptr) noexcept {}
        IBasicConnectedAnimationConfigurationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBasicConnectedAnimationConfigurationFactory(IBasicConnectedAnimationConfigurationFactory const&) noexcept = default;
        IBasicConnectedAnimationConfigurationFactory(IBasicConnectedAnimationConfigurationFactory&&) noexcept = default;
        IBasicConnectedAnimationConfigurationFactory& operator=(IBasicConnectedAnimationConfigurationFactory const&) & noexcept = default;
        IBasicConnectedAnimationConfigurationFactory& operator=(IBasicConnectedAnimationConfigurationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBeginStoryboard :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBeginStoryboard>
    {
        IBeginStoryboard(std::nullptr_t = nullptr) noexcept {}
        IBeginStoryboard(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBeginStoryboard(IBeginStoryboard const&) noexcept = default;
        IBeginStoryboard(IBeginStoryboard&&) noexcept = default;
        IBeginStoryboard& operator=(IBeginStoryboard const&) & noexcept = default;
        IBeginStoryboard& operator=(IBeginStoryboard&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBeginStoryboardStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBeginStoryboardStatics>
    {
        IBeginStoryboardStatics(std::nullptr_t = nullptr) noexcept {}
        IBeginStoryboardStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBeginStoryboardStatics(IBeginStoryboardStatics const&) noexcept = default;
        IBeginStoryboardStatics(IBeginStoryboardStatics&&) noexcept = default;
        IBeginStoryboardStatics& operator=(IBeginStoryboardStatics const&) & noexcept = default;
        IBeginStoryboardStatics& operator=(IBeginStoryboardStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBounceEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBounceEase>
    {
        IBounceEase(std::nullptr_t = nullptr) noexcept {}
        IBounceEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBounceEase(IBounceEase const&) noexcept = default;
        IBounceEase(IBounceEase&&) noexcept = default;
        IBounceEase& operator=(IBounceEase const&) & noexcept = default;
        IBounceEase& operator=(IBounceEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IBounceEaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBounceEaseStatics>
    {
        IBounceEaseStatics(std::nullptr_t = nullptr) noexcept {}
        IBounceEaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IBounceEaseStatics(IBounceEaseStatics const&) noexcept = default;
        IBounceEaseStatics(IBounceEaseStatics&&) noexcept = default;
        IBounceEaseStatics& operator=(IBounceEaseStatics const&) & noexcept = default;
        IBounceEaseStatics& operator=(IBounceEaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICircleEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICircleEase>
    {
        ICircleEase(std::nullptr_t = nullptr) noexcept {}
        ICircleEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICircleEase(ICircleEase const&) noexcept = default;
        ICircleEase(ICircleEase&&) noexcept = default;
        ICircleEase& operator=(ICircleEase const&) & noexcept = default;
        ICircleEase& operator=(ICircleEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorAnimation>
    {
        IColorAnimation(std::nullptr_t = nullptr) noexcept {}
        IColorAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorAnimation(IColorAnimation const&) noexcept = default;
        IColorAnimation(IColorAnimation&&) noexcept = default;
        IColorAnimation& operator=(IColorAnimation const&) & noexcept = default;
        IColorAnimation& operator=(IColorAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorAnimationStatics>
    {
        IColorAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IColorAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorAnimationStatics(IColorAnimationStatics const&) noexcept = default;
        IColorAnimationStatics(IColorAnimationStatics&&) noexcept = default;
        IColorAnimationStatics& operator=(IColorAnimationStatics const&) & noexcept = default;
        IColorAnimationStatics& operator=(IColorAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorAnimationUsingKeyFrames :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorAnimationUsingKeyFrames>
    {
        IColorAnimationUsingKeyFrames(std::nullptr_t = nullptr) noexcept {}
        IColorAnimationUsingKeyFrames(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorAnimationUsingKeyFrames(IColorAnimationUsingKeyFrames const&) noexcept = default;
        IColorAnimationUsingKeyFrames(IColorAnimationUsingKeyFrames&&) noexcept = default;
        IColorAnimationUsingKeyFrames& operator=(IColorAnimationUsingKeyFrames const&) & noexcept = default;
        IColorAnimationUsingKeyFrames& operator=(IColorAnimationUsingKeyFrames&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorAnimationUsingKeyFramesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorAnimationUsingKeyFramesStatics>
    {
        IColorAnimationUsingKeyFramesStatics(std::nullptr_t = nullptr) noexcept {}
        IColorAnimationUsingKeyFramesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorAnimationUsingKeyFramesStatics(IColorAnimationUsingKeyFramesStatics const&) noexcept = default;
        IColorAnimationUsingKeyFramesStatics(IColorAnimationUsingKeyFramesStatics&&) noexcept = default;
        IColorAnimationUsingKeyFramesStatics& operator=(IColorAnimationUsingKeyFramesStatics const&) & noexcept = default;
        IColorAnimationUsingKeyFramesStatics& operator=(IColorAnimationUsingKeyFramesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorKeyFrame>
    {
        IColorKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IColorKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorKeyFrame(IColorKeyFrame const&) noexcept = default;
        IColorKeyFrame(IColorKeyFrame&&) noexcept = default;
        IColorKeyFrame& operator=(IColorKeyFrame const&) & noexcept = default;
        IColorKeyFrame& operator=(IColorKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorKeyFrameFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorKeyFrameFactory>
    {
        IColorKeyFrameFactory(std::nullptr_t = nullptr) noexcept {}
        IColorKeyFrameFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorKeyFrameFactory(IColorKeyFrameFactory const&) noexcept = default;
        IColorKeyFrameFactory(IColorKeyFrameFactory&&) noexcept = default;
        IColorKeyFrameFactory& operator=(IColorKeyFrameFactory const&) & noexcept = default;
        IColorKeyFrameFactory& operator=(IColorKeyFrameFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IColorKeyFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorKeyFrameStatics>
    {
        IColorKeyFrameStatics(std::nullptr_t = nullptr) noexcept {}
        IColorKeyFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IColorKeyFrameStatics(IColorKeyFrameStatics const&) noexcept = default;
        IColorKeyFrameStatics(IColorKeyFrameStatics&&) noexcept = default;
        IColorKeyFrameStatics& operator=(IColorKeyFrameStatics const&) & noexcept = default;
        IColorKeyFrameStatics& operator=(IColorKeyFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommonNavigationTransitionInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommonNavigationTransitionInfo>
    {
        ICommonNavigationTransitionInfo(std::nullptr_t = nullptr) noexcept {}
        ICommonNavigationTransitionInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommonNavigationTransitionInfo(ICommonNavigationTransitionInfo const&) noexcept = default;
        ICommonNavigationTransitionInfo(ICommonNavigationTransitionInfo&&) noexcept = default;
        ICommonNavigationTransitionInfo& operator=(ICommonNavigationTransitionInfo const&) & noexcept = default;
        ICommonNavigationTransitionInfo& operator=(ICommonNavigationTransitionInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICommonNavigationTransitionInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommonNavigationTransitionInfoStatics>
    {
        ICommonNavigationTransitionInfoStatics(std::nullptr_t = nullptr) noexcept {}
        ICommonNavigationTransitionInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICommonNavigationTransitionInfoStatics(ICommonNavigationTransitionInfoStatics const&) noexcept = default;
        ICommonNavigationTransitionInfoStatics(ICommonNavigationTransitionInfoStatics&&) noexcept = default;
        ICommonNavigationTransitionInfoStatics& operator=(ICommonNavigationTransitionInfoStatics const&) & noexcept = default;
        ICommonNavigationTransitionInfoStatics& operator=(ICommonNavigationTransitionInfoStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectedAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectedAnimation>
    {
        IConnectedAnimation(std::nullptr_t = nullptr) noexcept {}
        IConnectedAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectedAnimation(IConnectedAnimation const&) noexcept = default;
        IConnectedAnimation(IConnectedAnimation&&) noexcept = default;
        IConnectedAnimation& operator=(IConnectedAnimation const&) & noexcept = default;
        IConnectedAnimation& operator=(IConnectedAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectedAnimation2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectedAnimation2>
    {
        IConnectedAnimation2(std::nullptr_t = nullptr) noexcept {}
        IConnectedAnimation2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectedAnimation2(IConnectedAnimation2 const&) noexcept = default;
        IConnectedAnimation2(IConnectedAnimation2&&) noexcept = default;
        IConnectedAnimation2& operator=(IConnectedAnimation2 const&) & noexcept = default;
        IConnectedAnimation2& operator=(IConnectedAnimation2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectedAnimation3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectedAnimation3>
    {
        IConnectedAnimation3(std::nullptr_t = nullptr) noexcept {}
        IConnectedAnimation3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectedAnimation3(IConnectedAnimation3 const&) noexcept = default;
        IConnectedAnimation3(IConnectedAnimation3&&) noexcept = default;
        IConnectedAnimation3& operator=(IConnectedAnimation3 const&) & noexcept = default;
        IConnectedAnimation3& operator=(IConnectedAnimation3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectedAnimationConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectedAnimationConfiguration>
    {
        IConnectedAnimationConfiguration(std::nullptr_t = nullptr) noexcept {}
        IConnectedAnimationConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectedAnimationConfiguration(IConnectedAnimationConfiguration const&) noexcept = default;
        IConnectedAnimationConfiguration(IConnectedAnimationConfiguration&&) noexcept = default;
        IConnectedAnimationConfiguration& operator=(IConnectedAnimationConfiguration const&) & noexcept = default;
        IConnectedAnimationConfiguration& operator=(IConnectedAnimationConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectedAnimationConfigurationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectedAnimationConfigurationFactory>
    {
        IConnectedAnimationConfigurationFactory(std::nullptr_t = nullptr) noexcept {}
        IConnectedAnimationConfigurationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectedAnimationConfigurationFactory(IConnectedAnimationConfigurationFactory const&) noexcept = default;
        IConnectedAnimationConfigurationFactory(IConnectedAnimationConfigurationFactory&&) noexcept = default;
        IConnectedAnimationConfigurationFactory& operator=(IConnectedAnimationConfigurationFactory const&) & noexcept = default;
        IConnectedAnimationConfigurationFactory& operator=(IConnectedAnimationConfigurationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectedAnimationService :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectedAnimationService>
    {
        IConnectedAnimationService(std::nullptr_t = nullptr) noexcept {}
        IConnectedAnimationService(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectedAnimationService(IConnectedAnimationService const&) noexcept = default;
        IConnectedAnimationService(IConnectedAnimationService&&) noexcept = default;
        IConnectedAnimationService& operator=(IConnectedAnimationService const&) & noexcept = default;
        IConnectedAnimationService& operator=(IConnectedAnimationService&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IConnectedAnimationServiceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConnectedAnimationServiceStatics>
    {
        IConnectedAnimationServiceStatics(std::nullptr_t = nullptr) noexcept {}
        IConnectedAnimationServiceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IConnectedAnimationServiceStatics(IConnectedAnimationServiceStatics const&) noexcept = default;
        IConnectedAnimationServiceStatics(IConnectedAnimationServiceStatics&&) noexcept = default;
        IConnectedAnimationServiceStatics& operator=(IConnectedAnimationServiceStatics const&) & noexcept = default;
        IConnectedAnimationServiceStatics& operator=(IConnectedAnimationServiceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentThemeTransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentThemeTransition>
    {
        IContentThemeTransition(std::nullptr_t = nullptr) noexcept {}
        IContentThemeTransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentThemeTransition(IContentThemeTransition const&) noexcept = default;
        IContentThemeTransition(IContentThemeTransition&&) noexcept = default;
        IContentThemeTransition& operator=(IContentThemeTransition const&) & noexcept = default;
        IContentThemeTransition& operator=(IContentThemeTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContentThemeTransitionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentThemeTransitionStatics>
    {
        IContentThemeTransitionStatics(std::nullptr_t = nullptr) noexcept {}
        IContentThemeTransitionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContentThemeTransitionStatics(IContentThemeTransitionStatics const&) noexcept = default;
        IContentThemeTransitionStatics(IContentThemeTransitionStatics&&) noexcept = default;
        IContentThemeTransitionStatics& operator=(IContentThemeTransitionStatics const&) & noexcept = default;
        IContentThemeTransitionStatics& operator=(IContentThemeTransitionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContinuumNavigationTransitionInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContinuumNavigationTransitionInfo>
    {
        IContinuumNavigationTransitionInfo(std::nullptr_t = nullptr) noexcept {}
        IContinuumNavigationTransitionInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContinuumNavigationTransitionInfo(IContinuumNavigationTransitionInfo const&) noexcept = default;
        IContinuumNavigationTransitionInfo(IContinuumNavigationTransitionInfo&&) noexcept = default;
        IContinuumNavigationTransitionInfo& operator=(IContinuumNavigationTransitionInfo const&) & noexcept = default;
        IContinuumNavigationTransitionInfo& operator=(IContinuumNavigationTransitionInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContinuumNavigationTransitionInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContinuumNavigationTransitionInfoStatics>
    {
        IContinuumNavigationTransitionInfoStatics(std::nullptr_t = nullptr) noexcept {}
        IContinuumNavigationTransitionInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContinuumNavigationTransitionInfoStatics(IContinuumNavigationTransitionInfoStatics const&) noexcept = default;
        IContinuumNavigationTransitionInfoStatics(IContinuumNavigationTransitionInfoStatics&&) noexcept = default;
        IContinuumNavigationTransitionInfoStatics& operator=(IContinuumNavigationTransitionInfoStatics const&) & noexcept = default;
        IContinuumNavigationTransitionInfoStatics& operator=(IContinuumNavigationTransitionInfoStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICubicEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICubicEase>
    {
        ICubicEase(std::nullptr_t = nullptr) noexcept {}
        ICubicEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICubicEase(ICubicEase const&) noexcept = default;
        ICubicEase(ICubicEase&&) noexcept = default;
        ICubicEase& operator=(ICubicEase const&) & noexcept = default;
        ICubicEase& operator=(ICubicEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDirectConnectedAnimationConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDirectConnectedAnimationConfiguration>
    {
        IDirectConnectedAnimationConfiguration(std::nullptr_t = nullptr) noexcept {}
        IDirectConnectedAnimationConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDirectConnectedAnimationConfiguration(IDirectConnectedAnimationConfiguration const&) noexcept = default;
        IDirectConnectedAnimationConfiguration(IDirectConnectedAnimationConfiguration&&) noexcept = default;
        IDirectConnectedAnimationConfiguration& operator=(IDirectConnectedAnimationConfiguration const&) & noexcept = default;
        IDirectConnectedAnimationConfiguration& operator=(IDirectConnectedAnimationConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDirectConnectedAnimationConfigurationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDirectConnectedAnimationConfigurationFactory>
    {
        IDirectConnectedAnimationConfigurationFactory(std::nullptr_t = nullptr) noexcept {}
        IDirectConnectedAnimationConfigurationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDirectConnectedAnimationConfigurationFactory(IDirectConnectedAnimationConfigurationFactory const&) noexcept = default;
        IDirectConnectedAnimationConfigurationFactory(IDirectConnectedAnimationConfigurationFactory&&) noexcept = default;
        IDirectConnectedAnimationConfigurationFactory& operator=(IDirectConnectedAnimationConfigurationFactory const&) & noexcept = default;
        IDirectConnectedAnimationConfigurationFactory& operator=(IDirectConnectedAnimationConfigurationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDiscreteColorKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDiscreteColorKeyFrame>
    {
        IDiscreteColorKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IDiscreteColorKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDiscreteColorKeyFrame(IDiscreteColorKeyFrame const&) noexcept = default;
        IDiscreteColorKeyFrame(IDiscreteColorKeyFrame&&) noexcept = default;
        IDiscreteColorKeyFrame& operator=(IDiscreteColorKeyFrame const&) & noexcept = default;
        IDiscreteColorKeyFrame& operator=(IDiscreteColorKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDiscreteDoubleKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDiscreteDoubleKeyFrame>
    {
        IDiscreteDoubleKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IDiscreteDoubleKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDiscreteDoubleKeyFrame(IDiscreteDoubleKeyFrame const&) noexcept = default;
        IDiscreteDoubleKeyFrame(IDiscreteDoubleKeyFrame&&) noexcept = default;
        IDiscreteDoubleKeyFrame& operator=(IDiscreteDoubleKeyFrame const&) & noexcept = default;
        IDiscreteDoubleKeyFrame& operator=(IDiscreteDoubleKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDiscreteObjectKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDiscreteObjectKeyFrame>
    {
        IDiscreteObjectKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IDiscreteObjectKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDiscreteObjectKeyFrame(IDiscreteObjectKeyFrame const&) noexcept = default;
        IDiscreteObjectKeyFrame(IDiscreteObjectKeyFrame&&) noexcept = default;
        IDiscreteObjectKeyFrame& operator=(IDiscreteObjectKeyFrame const&) & noexcept = default;
        IDiscreteObjectKeyFrame& operator=(IDiscreteObjectKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDiscretePointKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDiscretePointKeyFrame>
    {
        IDiscretePointKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IDiscretePointKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDiscretePointKeyFrame(IDiscretePointKeyFrame const&) noexcept = default;
        IDiscretePointKeyFrame(IDiscretePointKeyFrame&&) noexcept = default;
        IDiscretePointKeyFrame& operator=(IDiscretePointKeyFrame const&) & noexcept = default;
        IDiscretePointKeyFrame& operator=(IDiscretePointKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDoubleAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDoubleAnimation>
    {
        IDoubleAnimation(std::nullptr_t = nullptr) noexcept {}
        IDoubleAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDoubleAnimation(IDoubleAnimation const&) noexcept = default;
        IDoubleAnimation(IDoubleAnimation&&) noexcept = default;
        IDoubleAnimation& operator=(IDoubleAnimation const&) & noexcept = default;
        IDoubleAnimation& operator=(IDoubleAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDoubleAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDoubleAnimationStatics>
    {
        IDoubleAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IDoubleAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDoubleAnimationStatics(IDoubleAnimationStatics const&) noexcept = default;
        IDoubleAnimationStatics(IDoubleAnimationStatics&&) noexcept = default;
        IDoubleAnimationStatics& operator=(IDoubleAnimationStatics const&) & noexcept = default;
        IDoubleAnimationStatics& operator=(IDoubleAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDoubleAnimationUsingKeyFrames :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDoubleAnimationUsingKeyFrames>
    {
        IDoubleAnimationUsingKeyFrames(std::nullptr_t = nullptr) noexcept {}
        IDoubleAnimationUsingKeyFrames(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDoubleAnimationUsingKeyFrames(IDoubleAnimationUsingKeyFrames const&) noexcept = default;
        IDoubleAnimationUsingKeyFrames(IDoubleAnimationUsingKeyFrames&&) noexcept = default;
        IDoubleAnimationUsingKeyFrames& operator=(IDoubleAnimationUsingKeyFrames const&) & noexcept = default;
        IDoubleAnimationUsingKeyFrames& operator=(IDoubleAnimationUsingKeyFrames&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDoubleAnimationUsingKeyFramesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDoubleAnimationUsingKeyFramesStatics>
    {
        IDoubleAnimationUsingKeyFramesStatics(std::nullptr_t = nullptr) noexcept {}
        IDoubleAnimationUsingKeyFramesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDoubleAnimationUsingKeyFramesStatics(IDoubleAnimationUsingKeyFramesStatics const&) noexcept = default;
        IDoubleAnimationUsingKeyFramesStatics(IDoubleAnimationUsingKeyFramesStatics&&) noexcept = default;
        IDoubleAnimationUsingKeyFramesStatics& operator=(IDoubleAnimationUsingKeyFramesStatics const&) & noexcept = default;
        IDoubleAnimationUsingKeyFramesStatics& operator=(IDoubleAnimationUsingKeyFramesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDoubleKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDoubleKeyFrame>
    {
        IDoubleKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IDoubleKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDoubleKeyFrame(IDoubleKeyFrame const&) noexcept = default;
        IDoubleKeyFrame(IDoubleKeyFrame&&) noexcept = default;
        IDoubleKeyFrame& operator=(IDoubleKeyFrame const&) & noexcept = default;
        IDoubleKeyFrame& operator=(IDoubleKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDoubleKeyFrameFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDoubleKeyFrameFactory>
    {
        IDoubleKeyFrameFactory(std::nullptr_t = nullptr) noexcept {}
        IDoubleKeyFrameFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDoubleKeyFrameFactory(IDoubleKeyFrameFactory const&) noexcept = default;
        IDoubleKeyFrameFactory(IDoubleKeyFrameFactory&&) noexcept = default;
        IDoubleKeyFrameFactory& operator=(IDoubleKeyFrameFactory const&) & noexcept = default;
        IDoubleKeyFrameFactory& operator=(IDoubleKeyFrameFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDoubleKeyFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDoubleKeyFrameStatics>
    {
        IDoubleKeyFrameStatics(std::nullptr_t = nullptr) noexcept {}
        IDoubleKeyFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDoubleKeyFrameStatics(IDoubleKeyFrameStatics const&) noexcept = default;
        IDoubleKeyFrameStatics(IDoubleKeyFrameStatics&&) noexcept = default;
        IDoubleKeyFrameStatics& operator=(IDoubleKeyFrameStatics const&) & noexcept = default;
        IDoubleKeyFrameStatics& operator=(IDoubleKeyFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragItemThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragItemThemeAnimation>
    {
        IDragItemThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IDragItemThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragItemThemeAnimation(IDragItemThemeAnimation const&) noexcept = default;
        IDragItemThemeAnimation(IDragItemThemeAnimation&&) noexcept = default;
        IDragItemThemeAnimation& operator=(IDragItemThemeAnimation const&) & noexcept = default;
        IDragItemThemeAnimation& operator=(IDragItemThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragItemThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragItemThemeAnimationStatics>
    {
        IDragItemThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IDragItemThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragItemThemeAnimationStatics(IDragItemThemeAnimationStatics const&) noexcept = default;
        IDragItemThemeAnimationStatics(IDragItemThemeAnimationStatics&&) noexcept = default;
        IDragItemThemeAnimationStatics& operator=(IDragItemThemeAnimationStatics const&) & noexcept = default;
        IDragItemThemeAnimationStatics& operator=(IDragItemThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragOverThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragOverThemeAnimation>
    {
        IDragOverThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IDragOverThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragOverThemeAnimation(IDragOverThemeAnimation const&) noexcept = default;
        IDragOverThemeAnimation(IDragOverThemeAnimation&&) noexcept = default;
        IDragOverThemeAnimation& operator=(IDragOverThemeAnimation const&) & noexcept = default;
        IDragOverThemeAnimation& operator=(IDragOverThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDragOverThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragOverThemeAnimationStatics>
    {
        IDragOverThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IDragOverThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDragOverThemeAnimationStatics(IDragOverThemeAnimationStatics const&) noexcept = default;
        IDragOverThemeAnimationStatics(IDragOverThemeAnimationStatics&&) noexcept = default;
        IDragOverThemeAnimationStatics& operator=(IDragOverThemeAnimationStatics const&) & noexcept = default;
        IDragOverThemeAnimationStatics& operator=(IDragOverThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDrillInNavigationTransitionInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDrillInNavigationTransitionInfo>
    {
        IDrillInNavigationTransitionInfo(std::nullptr_t = nullptr) noexcept {}
        IDrillInNavigationTransitionInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDrillInNavigationTransitionInfo(IDrillInNavigationTransitionInfo const&) noexcept = default;
        IDrillInNavigationTransitionInfo(IDrillInNavigationTransitionInfo&&) noexcept = default;
        IDrillInNavigationTransitionInfo& operator=(IDrillInNavigationTransitionInfo const&) & noexcept = default;
        IDrillInNavigationTransitionInfo& operator=(IDrillInNavigationTransitionInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDrillInThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDrillInThemeAnimation>
    {
        IDrillInThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IDrillInThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDrillInThemeAnimation(IDrillInThemeAnimation const&) noexcept = default;
        IDrillInThemeAnimation(IDrillInThemeAnimation&&) noexcept = default;
        IDrillInThemeAnimation& operator=(IDrillInThemeAnimation const&) & noexcept = default;
        IDrillInThemeAnimation& operator=(IDrillInThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDrillInThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDrillInThemeAnimationStatics>
    {
        IDrillInThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IDrillInThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDrillInThemeAnimationStatics(IDrillInThemeAnimationStatics const&) noexcept = default;
        IDrillInThemeAnimationStatics(IDrillInThemeAnimationStatics&&) noexcept = default;
        IDrillInThemeAnimationStatics& operator=(IDrillInThemeAnimationStatics const&) & noexcept = default;
        IDrillInThemeAnimationStatics& operator=(IDrillInThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDrillOutThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDrillOutThemeAnimation>
    {
        IDrillOutThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IDrillOutThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDrillOutThemeAnimation(IDrillOutThemeAnimation const&) noexcept = default;
        IDrillOutThemeAnimation(IDrillOutThemeAnimation&&) noexcept = default;
        IDrillOutThemeAnimation& operator=(IDrillOutThemeAnimation const&) & noexcept = default;
        IDrillOutThemeAnimation& operator=(IDrillOutThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDrillOutThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDrillOutThemeAnimationStatics>
    {
        IDrillOutThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IDrillOutThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDrillOutThemeAnimationStatics(IDrillOutThemeAnimationStatics const&) noexcept = default;
        IDrillOutThemeAnimationStatics(IDrillOutThemeAnimationStatics&&) noexcept = default;
        IDrillOutThemeAnimationStatics& operator=(IDrillOutThemeAnimationStatics const&) & noexcept = default;
        IDrillOutThemeAnimationStatics& operator=(IDrillOutThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDropTargetItemThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropTargetItemThemeAnimation>
    {
        IDropTargetItemThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IDropTargetItemThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDropTargetItemThemeAnimation(IDropTargetItemThemeAnimation const&) noexcept = default;
        IDropTargetItemThemeAnimation(IDropTargetItemThemeAnimation&&) noexcept = default;
        IDropTargetItemThemeAnimation& operator=(IDropTargetItemThemeAnimation const&) & noexcept = default;
        IDropTargetItemThemeAnimation& operator=(IDropTargetItemThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDropTargetItemThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropTargetItemThemeAnimationStatics>
    {
        IDropTargetItemThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IDropTargetItemThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDropTargetItemThemeAnimationStatics(IDropTargetItemThemeAnimationStatics const&) noexcept = default;
        IDropTargetItemThemeAnimationStatics(IDropTargetItemThemeAnimationStatics&&) noexcept = default;
        IDropTargetItemThemeAnimationStatics& operator=(IDropTargetItemThemeAnimationStatics const&) & noexcept = default;
        IDropTargetItemThemeAnimationStatics& operator=(IDropTargetItemThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEasingColorKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEasingColorKeyFrame>
    {
        IEasingColorKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IEasingColorKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEasingColorKeyFrame(IEasingColorKeyFrame const&) noexcept = default;
        IEasingColorKeyFrame(IEasingColorKeyFrame&&) noexcept = default;
        IEasingColorKeyFrame& operator=(IEasingColorKeyFrame const&) & noexcept = default;
        IEasingColorKeyFrame& operator=(IEasingColorKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEasingColorKeyFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEasingColorKeyFrameStatics>
    {
        IEasingColorKeyFrameStatics(std::nullptr_t = nullptr) noexcept {}
        IEasingColorKeyFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEasingColorKeyFrameStatics(IEasingColorKeyFrameStatics const&) noexcept = default;
        IEasingColorKeyFrameStatics(IEasingColorKeyFrameStatics&&) noexcept = default;
        IEasingColorKeyFrameStatics& operator=(IEasingColorKeyFrameStatics const&) & noexcept = default;
        IEasingColorKeyFrameStatics& operator=(IEasingColorKeyFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEasingDoubleKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEasingDoubleKeyFrame>
    {
        IEasingDoubleKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IEasingDoubleKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEasingDoubleKeyFrame(IEasingDoubleKeyFrame const&) noexcept = default;
        IEasingDoubleKeyFrame(IEasingDoubleKeyFrame&&) noexcept = default;
        IEasingDoubleKeyFrame& operator=(IEasingDoubleKeyFrame const&) & noexcept = default;
        IEasingDoubleKeyFrame& operator=(IEasingDoubleKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEasingDoubleKeyFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEasingDoubleKeyFrameStatics>
    {
        IEasingDoubleKeyFrameStatics(std::nullptr_t = nullptr) noexcept {}
        IEasingDoubleKeyFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEasingDoubleKeyFrameStatics(IEasingDoubleKeyFrameStatics const&) noexcept = default;
        IEasingDoubleKeyFrameStatics(IEasingDoubleKeyFrameStatics&&) noexcept = default;
        IEasingDoubleKeyFrameStatics& operator=(IEasingDoubleKeyFrameStatics const&) & noexcept = default;
        IEasingDoubleKeyFrameStatics& operator=(IEasingDoubleKeyFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEasingFunctionBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEasingFunctionBase>
    {
        IEasingFunctionBase(std::nullptr_t = nullptr) noexcept {}
        IEasingFunctionBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEasingFunctionBase(IEasingFunctionBase const&) noexcept = default;
        IEasingFunctionBase(IEasingFunctionBase&&) noexcept = default;
        IEasingFunctionBase& operator=(IEasingFunctionBase const&) & noexcept = default;
        IEasingFunctionBase& operator=(IEasingFunctionBase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEasingFunctionBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEasingFunctionBaseFactory>
    {
        IEasingFunctionBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IEasingFunctionBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEasingFunctionBaseFactory(IEasingFunctionBaseFactory const&) noexcept = default;
        IEasingFunctionBaseFactory(IEasingFunctionBaseFactory&&) noexcept = default;
        IEasingFunctionBaseFactory& operator=(IEasingFunctionBaseFactory const&) & noexcept = default;
        IEasingFunctionBaseFactory& operator=(IEasingFunctionBaseFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEasingFunctionBaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEasingFunctionBaseStatics>
    {
        IEasingFunctionBaseStatics(std::nullptr_t = nullptr) noexcept {}
        IEasingFunctionBaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEasingFunctionBaseStatics(IEasingFunctionBaseStatics const&) noexcept = default;
        IEasingFunctionBaseStatics(IEasingFunctionBaseStatics&&) noexcept = default;
        IEasingFunctionBaseStatics& operator=(IEasingFunctionBaseStatics const&) & noexcept = default;
        IEasingFunctionBaseStatics& operator=(IEasingFunctionBaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEasingPointKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEasingPointKeyFrame>
    {
        IEasingPointKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IEasingPointKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEasingPointKeyFrame(IEasingPointKeyFrame const&) noexcept = default;
        IEasingPointKeyFrame(IEasingPointKeyFrame&&) noexcept = default;
        IEasingPointKeyFrame& operator=(IEasingPointKeyFrame const&) & noexcept = default;
        IEasingPointKeyFrame& operator=(IEasingPointKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEasingPointKeyFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEasingPointKeyFrameStatics>
    {
        IEasingPointKeyFrameStatics(std::nullptr_t = nullptr) noexcept {}
        IEasingPointKeyFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEasingPointKeyFrameStatics(IEasingPointKeyFrameStatics const&) noexcept = default;
        IEasingPointKeyFrameStatics(IEasingPointKeyFrameStatics&&) noexcept = default;
        IEasingPointKeyFrameStatics& operator=(IEasingPointKeyFrameStatics const&) & noexcept = default;
        IEasingPointKeyFrameStatics& operator=(IEasingPointKeyFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEdgeUIThemeTransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEdgeUIThemeTransition>
    {
        IEdgeUIThemeTransition(std::nullptr_t = nullptr) noexcept {}
        IEdgeUIThemeTransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEdgeUIThemeTransition(IEdgeUIThemeTransition const&) noexcept = default;
        IEdgeUIThemeTransition(IEdgeUIThemeTransition&&) noexcept = default;
        IEdgeUIThemeTransition& operator=(IEdgeUIThemeTransition const&) & noexcept = default;
        IEdgeUIThemeTransition& operator=(IEdgeUIThemeTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEdgeUIThemeTransitionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEdgeUIThemeTransitionStatics>
    {
        IEdgeUIThemeTransitionStatics(std::nullptr_t = nullptr) noexcept {}
        IEdgeUIThemeTransitionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEdgeUIThemeTransitionStatics(IEdgeUIThemeTransitionStatics const&) noexcept = default;
        IEdgeUIThemeTransitionStatics(IEdgeUIThemeTransitionStatics&&) noexcept = default;
        IEdgeUIThemeTransitionStatics& operator=(IEdgeUIThemeTransitionStatics const&) & noexcept = default;
        IEdgeUIThemeTransitionStatics& operator=(IEdgeUIThemeTransitionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IElasticEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IElasticEase>
    {
        IElasticEase(std::nullptr_t = nullptr) noexcept {}
        IElasticEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IElasticEase(IElasticEase const&) noexcept = default;
        IElasticEase(IElasticEase&&) noexcept = default;
        IElasticEase& operator=(IElasticEase const&) & noexcept = default;
        IElasticEase& operator=(IElasticEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IElasticEaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IElasticEaseStatics>
    {
        IElasticEaseStatics(std::nullptr_t = nullptr) noexcept {}
        IElasticEaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IElasticEaseStatics(IElasticEaseStatics const&) noexcept = default;
        IElasticEaseStatics(IElasticEaseStatics&&) noexcept = default;
        IElasticEaseStatics& operator=(IElasticEaseStatics const&) & noexcept = default;
        IElasticEaseStatics& operator=(IElasticEaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEntranceNavigationTransitionInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEntranceNavigationTransitionInfo>
    {
        IEntranceNavigationTransitionInfo(std::nullptr_t = nullptr) noexcept {}
        IEntranceNavigationTransitionInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEntranceNavigationTransitionInfo(IEntranceNavigationTransitionInfo const&) noexcept = default;
        IEntranceNavigationTransitionInfo(IEntranceNavigationTransitionInfo&&) noexcept = default;
        IEntranceNavigationTransitionInfo& operator=(IEntranceNavigationTransitionInfo const&) & noexcept = default;
        IEntranceNavigationTransitionInfo& operator=(IEntranceNavigationTransitionInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEntranceNavigationTransitionInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEntranceNavigationTransitionInfoStatics>
    {
        IEntranceNavigationTransitionInfoStatics(std::nullptr_t = nullptr) noexcept {}
        IEntranceNavigationTransitionInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEntranceNavigationTransitionInfoStatics(IEntranceNavigationTransitionInfoStatics const&) noexcept = default;
        IEntranceNavigationTransitionInfoStatics(IEntranceNavigationTransitionInfoStatics&&) noexcept = default;
        IEntranceNavigationTransitionInfoStatics& operator=(IEntranceNavigationTransitionInfoStatics const&) & noexcept = default;
        IEntranceNavigationTransitionInfoStatics& operator=(IEntranceNavigationTransitionInfoStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEntranceThemeTransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEntranceThemeTransition>
    {
        IEntranceThemeTransition(std::nullptr_t = nullptr) noexcept {}
        IEntranceThemeTransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEntranceThemeTransition(IEntranceThemeTransition const&) noexcept = default;
        IEntranceThemeTransition(IEntranceThemeTransition&&) noexcept = default;
        IEntranceThemeTransition& operator=(IEntranceThemeTransition const&) & noexcept = default;
        IEntranceThemeTransition& operator=(IEntranceThemeTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEntranceThemeTransitionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEntranceThemeTransitionStatics>
    {
        IEntranceThemeTransitionStatics(std::nullptr_t = nullptr) noexcept {}
        IEntranceThemeTransitionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEntranceThemeTransitionStatics(IEntranceThemeTransitionStatics const&) noexcept = default;
        IEntranceThemeTransitionStatics(IEntranceThemeTransitionStatics&&) noexcept = default;
        IEntranceThemeTransitionStatics& operator=(IEntranceThemeTransitionStatics const&) & noexcept = default;
        IEntranceThemeTransitionStatics& operator=(IEntranceThemeTransitionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IExponentialEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExponentialEase>
    {
        IExponentialEase(std::nullptr_t = nullptr) noexcept {}
        IExponentialEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IExponentialEase(IExponentialEase const&) noexcept = default;
        IExponentialEase(IExponentialEase&&) noexcept = default;
        IExponentialEase& operator=(IExponentialEase const&) & noexcept = default;
        IExponentialEase& operator=(IExponentialEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IExponentialEaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExponentialEaseStatics>
    {
        IExponentialEaseStatics(std::nullptr_t = nullptr) noexcept {}
        IExponentialEaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IExponentialEaseStatics(IExponentialEaseStatics const&) noexcept = default;
        IExponentialEaseStatics(IExponentialEaseStatics&&) noexcept = default;
        IExponentialEaseStatics& operator=(IExponentialEaseStatics const&) & noexcept = default;
        IExponentialEaseStatics& operator=(IExponentialEaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFadeInThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFadeInThemeAnimation>
    {
        IFadeInThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IFadeInThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFadeInThemeAnimation(IFadeInThemeAnimation const&) noexcept = default;
        IFadeInThemeAnimation(IFadeInThemeAnimation&&) noexcept = default;
        IFadeInThemeAnimation& operator=(IFadeInThemeAnimation const&) & noexcept = default;
        IFadeInThemeAnimation& operator=(IFadeInThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFadeInThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFadeInThemeAnimationStatics>
    {
        IFadeInThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IFadeInThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFadeInThemeAnimationStatics(IFadeInThemeAnimationStatics const&) noexcept = default;
        IFadeInThemeAnimationStatics(IFadeInThemeAnimationStatics&&) noexcept = default;
        IFadeInThemeAnimationStatics& operator=(IFadeInThemeAnimationStatics const&) & noexcept = default;
        IFadeInThemeAnimationStatics& operator=(IFadeInThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFadeOutThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFadeOutThemeAnimation>
    {
        IFadeOutThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IFadeOutThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFadeOutThemeAnimation(IFadeOutThemeAnimation const&) noexcept = default;
        IFadeOutThemeAnimation(IFadeOutThemeAnimation&&) noexcept = default;
        IFadeOutThemeAnimation& operator=(IFadeOutThemeAnimation const&) & noexcept = default;
        IFadeOutThemeAnimation& operator=(IFadeOutThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFadeOutThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFadeOutThemeAnimationStatics>
    {
        IFadeOutThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IFadeOutThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFadeOutThemeAnimationStatics(IFadeOutThemeAnimationStatics const&) noexcept = default;
        IFadeOutThemeAnimationStatics(IFadeOutThemeAnimationStatics&&) noexcept = default;
        IFadeOutThemeAnimationStatics& operator=(IFadeOutThemeAnimationStatics const&) & noexcept = default;
        IFadeOutThemeAnimationStatics& operator=(IFadeOutThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGravityConnectedAnimationConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGravityConnectedAnimationConfiguration>
    {
        IGravityConnectedAnimationConfiguration(std::nullptr_t = nullptr) noexcept {}
        IGravityConnectedAnimationConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGravityConnectedAnimationConfiguration(IGravityConnectedAnimationConfiguration const&) noexcept = default;
        IGravityConnectedAnimationConfiguration(IGravityConnectedAnimationConfiguration&&) noexcept = default;
        IGravityConnectedAnimationConfiguration& operator=(IGravityConnectedAnimationConfiguration const&) & noexcept = default;
        IGravityConnectedAnimationConfiguration& operator=(IGravityConnectedAnimationConfiguration&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGravityConnectedAnimationConfiguration2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGravityConnectedAnimationConfiguration2>
    {
        IGravityConnectedAnimationConfiguration2(std::nullptr_t = nullptr) noexcept {}
        IGravityConnectedAnimationConfiguration2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGravityConnectedAnimationConfiguration2(IGravityConnectedAnimationConfiguration2 const&) noexcept = default;
        IGravityConnectedAnimationConfiguration2(IGravityConnectedAnimationConfiguration2&&) noexcept = default;
        IGravityConnectedAnimationConfiguration2& operator=(IGravityConnectedAnimationConfiguration2 const&) & noexcept = default;
        IGravityConnectedAnimationConfiguration2& operator=(IGravityConnectedAnimationConfiguration2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGravityConnectedAnimationConfigurationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGravityConnectedAnimationConfigurationFactory>
    {
        IGravityConnectedAnimationConfigurationFactory(std::nullptr_t = nullptr) noexcept {}
        IGravityConnectedAnimationConfigurationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGravityConnectedAnimationConfigurationFactory(IGravityConnectedAnimationConfigurationFactory const&) noexcept = default;
        IGravityConnectedAnimationConfigurationFactory(IGravityConnectedAnimationConfigurationFactory&&) noexcept = default;
        IGravityConnectedAnimationConfigurationFactory& operator=(IGravityConnectedAnimationConfigurationFactory const&) & noexcept = default;
        IGravityConnectedAnimationConfigurationFactory& operator=(IGravityConnectedAnimationConfigurationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeySpline :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeySpline>
    {
        IKeySpline(std::nullptr_t = nullptr) noexcept {}
        IKeySpline(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeySpline(IKeySpline const&) noexcept = default;
        IKeySpline(IKeySpline&&) noexcept = default;
        IKeySpline& operator=(IKeySpline const&) & noexcept = default;
        IKeySpline& operator=(IKeySpline&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyTimeHelper :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyTimeHelper>
    {
        IKeyTimeHelper(std::nullptr_t = nullptr) noexcept {}
        IKeyTimeHelper(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyTimeHelper(IKeyTimeHelper const&) noexcept = default;
        IKeyTimeHelper(IKeyTimeHelper&&) noexcept = default;
        IKeyTimeHelper& operator=(IKeyTimeHelper const&) & noexcept = default;
        IKeyTimeHelper& operator=(IKeyTimeHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyTimeHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyTimeHelperStatics>
    {
        IKeyTimeHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IKeyTimeHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyTimeHelperStatics(IKeyTimeHelperStatics const&) noexcept = default;
        IKeyTimeHelperStatics(IKeyTimeHelperStatics&&) noexcept = default;
        IKeyTimeHelperStatics& operator=(IKeyTimeHelperStatics const&) & noexcept = default;
        IKeyTimeHelperStatics& operator=(IKeyTimeHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILinearColorKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILinearColorKeyFrame>
    {
        ILinearColorKeyFrame(std::nullptr_t = nullptr) noexcept {}
        ILinearColorKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILinearColorKeyFrame(ILinearColorKeyFrame const&) noexcept = default;
        ILinearColorKeyFrame(ILinearColorKeyFrame&&) noexcept = default;
        ILinearColorKeyFrame& operator=(ILinearColorKeyFrame const&) & noexcept = default;
        ILinearColorKeyFrame& operator=(ILinearColorKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILinearDoubleKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILinearDoubleKeyFrame>
    {
        ILinearDoubleKeyFrame(std::nullptr_t = nullptr) noexcept {}
        ILinearDoubleKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILinearDoubleKeyFrame(ILinearDoubleKeyFrame const&) noexcept = default;
        ILinearDoubleKeyFrame(ILinearDoubleKeyFrame&&) noexcept = default;
        ILinearDoubleKeyFrame& operator=(ILinearDoubleKeyFrame const&) & noexcept = default;
        ILinearDoubleKeyFrame& operator=(ILinearDoubleKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ILinearPointKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILinearPointKeyFrame>
    {
        ILinearPointKeyFrame(std::nullptr_t = nullptr) noexcept {}
        ILinearPointKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ILinearPointKeyFrame(ILinearPointKeyFrame const&) noexcept = default;
        ILinearPointKeyFrame(ILinearPointKeyFrame&&) noexcept = default;
        ILinearPointKeyFrame& operator=(ILinearPointKeyFrame const&) & noexcept = default;
        ILinearPointKeyFrame& operator=(ILinearPointKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationThemeTransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationThemeTransition>
    {
        INavigationThemeTransition(std::nullptr_t = nullptr) noexcept {}
        INavigationThemeTransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationThemeTransition(INavigationThemeTransition const&) noexcept = default;
        INavigationThemeTransition(INavigationThemeTransition&&) noexcept = default;
        INavigationThemeTransition& operator=(INavigationThemeTransition const&) & noexcept = default;
        INavigationThemeTransition& operator=(INavigationThemeTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationThemeTransitionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationThemeTransitionStatics>
    {
        INavigationThemeTransitionStatics(std::nullptr_t = nullptr) noexcept {}
        INavigationThemeTransitionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationThemeTransitionStatics(INavigationThemeTransitionStatics const&) noexcept = default;
        INavigationThemeTransitionStatics(INavigationThemeTransitionStatics&&) noexcept = default;
        INavigationThemeTransitionStatics& operator=(INavigationThemeTransitionStatics const&) & noexcept = default;
        INavigationThemeTransitionStatics& operator=(INavigationThemeTransitionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationTransitionInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationTransitionInfo>
    {
        INavigationTransitionInfo(std::nullptr_t = nullptr) noexcept {}
        INavigationTransitionInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationTransitionInfo(INavigationTransitionInfo const&) noexcept = default;
        INavigationTransitionInfo(INavigationTransitionInfo&&) noexcept = default;
        INavigationTransitionInfo& operator=(INavigationTransitionInfo const&) & noexcept = default;
        INavigationTransitionInfo& operator=(INavigationTransitionInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationTransitionInfoFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationTransitionInfoFactory>
    {
        INavigationTransitionInfoFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationTransitionInfoFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationTransitionInfoFactory(INavigationTransitionInfoFactory const&) noexcept = default;
        INavigationTransitionInfoFactory(INavigationTransitionInfoFactory&&) noexcept = default;
        INavigationTransitionInfoFactory& operator=(INavigationTransitionInfoFactory const&) & noexcept = default;
        INavigationTransitionInfoFactory& operator=(INavigationTransitionInfoFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INavigationTransitionInfoOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationTransitionInfoOverrides>
    {
        INavigationTransitionInfoOverrides(std::nullptr_t = nullptr) noexcept {}
        INavigationTransitionInfoOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INavigationTransitionInfoOverrides(INavigationTransitionInfoOverrides const&) noexcept = default;
        INavigationTransitionInfoOverrides(INavigationTransitionInfoOverrides&&) noexcept = default;
        INavigationTransitionInfoOverrides& operator=(INavigationTransitionInfoOverrides const&) & noexcept = default;
        INavigationTransitionInfoOverrides& operator=(INavigationTransitionInfoOverrides&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectAnimationUsingKeyFrames :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IObjectAnimationUsingKeyFrames>
    {
        IObjectAnimationUsingKeyFrames(std::nullptr_t = nullptr) noexcept {}
        IObjectAnimationUsingKeyFrames(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectAnimationUsingKeyFrames(IObjectAnimationUsingKeyFrames const&) noexcept = default;
        IObjectAnimationUsingKeyFrames(IObjectAnimationUsingKeyFrames&&) noexcept = default;
        IObjectAnimationUsingKeyFrames& operator=(IObjectAnimationUsingKeyFrames const&) & noexcept = default;
        IObjectAnimationUsingKeyFrames& operator=(IObjectAnimationUsingKeyFrames&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectAnimationUsingKeyFramesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IObjectAnimationUsingKeyFramesStatics>
    {
        IObjectAnimationUsingKeyFramesStatics(std::nullptr_t = nullptr) noexcept {}
        IObjectAnimationUsingKeyFramesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectAnimationUsingKeyFramesStatics(IObjectAnimationUsingKeyFramesStatics const&) noexcept = default;
        IObjectAnimationUsingKeyFramesStatics(IObjectAnimationUsingKeyFramesStatics&&) noexcept = default;
        IObjectAnimationUsingKeyFramesStatics& operator=(IObjectAnimationUsingKeyFramesStatics const&) & noexcept = default;
        IObjectAnimationUsingKeyFramesStatics& operator=(IObjectAnimationUsingKeyFramesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IObjectKeyFrame>
    {
        IObjectKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IObjectKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectKeyFrame(IObjectKeyFrame const&) noexcept = default;
        IObjectKeyFrame(IObjectKeyFrame&&) noexcept = default;
        IObjectKeyFrame& operator=(IObjectKeyFrame const&) & noexcept = default;
        IObjectKeyFrame& operator=(IObjectKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectKeyFrameFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IObjectKeyFrameFactory>
    {
        IObjectKeyFrameFactory(std::nullptr_t = nullptr) noexcept {}
        IObjectKeyFrameFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectKeyFrameFactory(IObjectKeyFrameFactory const&) noexcept = default;
        IObjectKeyFrameFactory(IObjectKeyFrameFactory&&) noexcept = default;
        IObjectKeyFrameFactory& operator=(IObjectKeyFrameFactory const&) & noexcept = default;
        IObjectKeyFrameFactory& operator=(IObjectKeyFrameFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectKeyFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IObjectKeyFrameStatics>
    {
        IObjectKeyFrameStatics(std::nullptr_t = nullptr) noexcept {}
        IObjectKeyFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectKeyFrameStatics(IObjectKeyFrameStatics const&) noexcept = default;
        IObjectKeyFrameStatics(IObjectKeyFrameStatics&&) noexcept = default;
        IObjectKeyFrameStatics& operator=(IObjectKeyFrameStatics const&) & noexcept = default;
        IObjectKeyFrameStatics& operator=(IObjectKeyFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPaneThemeTransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPaneThemeTransition>
    {
        IPaneThemeTransition(std::nullptr_t = nullptr) noexcept {}
        IPaneThemeTransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPaneThemeTransition(IPaneThemeTransition const&) noexcept = default;
        IPaneThemeTransition(IPaneThemeTransition&&) noexcept = default;
        IPaneThemeTransition& operator=(IPaneThemeTransition const&) & noexcept = default;
        IPaneThemeTransition& operator=(IPaneThemeTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPaneThemeTransitionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPaneThemeTransitionStatics>
    {
        IPaneThemeTransitionStatics(std::nullptr_t = nullptr) noexcept {}
        IPaneThemeTransitionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPaneThemeTransitionStatics(IPaneThemeTransitionStatics const&) noexcept = default;
        IPaneThemeTransitionStatics(IPaneThemeTransitionStatics&&) noexcept = default;
        IPaneThemeTransitionStatics& operator=(IPaneThemeTransitionStatics const&) & noexcept = default;
        IPaneThemeTransitionStatics& operator=(IPaneThemeTransitionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointAnimation>
    {
        IPointAnimation(std::nullptr_t = nullptr) noexcept {}
        IPointAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointAnimation(IPointAnimation const&) noexcept = default;
        IPointAnimation(IPointAnimation&&) noexcept = default;
        IPointAnimation& operator=(IPointAnimation const&) & noexcept = default;
        IPointAnimation& operator=(IPointAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointAnimationStatics>
    {
        IPointAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IPointAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointAnimationStatics(IPointAnimationStatics const&) noexcept = default;
        IPointAnimationStatics(IPointAnimationStatics&&) noexcept = default;
        IPointAnimationStatics& operator=(IPointAnimationStatics const&) & noexcept = default;
        IPointAnimationStatics& operator=(IPointAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointAnimationUsingKeyFrames :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointAnimationUsingKeyFrames>
    {
        IPointAnimationUsingKeyFrames(std::nullptr_t = nullptr) noexcept {}
        IPointAnimationUsingKeyFrames(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointAnimationUsingKeyFrames(IPointAnimationUsingKeyFrames const&) noexcept = default;
        IPointAnimationUsingKeyFrames(IPointAnimationUsingKeyFrames&&) noexcept = default;
        IPointAnimationUsingKeyFrames& operator=(IPointAnimationUsingKeyFrames const&) & noexcept = default;
        IPointAnimationUsingKeyFrames& operator=(IPointAnimationUsingKeyFrames&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointAnimationUsingKeyFramesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointAnimationUsingKeyFramesStatics>
    {
        IPointAnimationUsingKeyFramesStatics(std::nullptr_t = nullptr) noexcept {}
        IPointAnimationUsingKeyFramesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointAnimationUsingKeyFramesStatics(IPointAnimationUsingKeyFramesStatics const&) noexcept = default;
        IPointAnimationUsingKeyFramesStatics(IPointAnimationUsingKeyFramesStatics&&) noexcept = default;
        IPointAnimationUsingKeyFramesStatics& operator=(IPointAnimationUsingKeyFramesStatics const&) & noexcept = default;
        IPointAnimationUsingKeyFramesStatics& operator=(IPointAnimationUsingKeyFramesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointKeyFrame>
    {
        IPointKeyFrame(std::nullptr_t = nullptr) noexcept {}
        IPointKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointKeyFrame(IPointKeyFrame const&) noexcept = default;
        IPointKeyFrame(IPointKeyFrame&&) noexcept = default;
        IPointKeyFrame& operator=(IPointKeyFrame const&) & noexcept = default;
        IPointKeyFrame& operator=(IPointKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointKeyFrameFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointKeyFrameFactory>
    {
        IPointKeyFrameFactory(std::nullptr_t = nullptr) noexcept {}
        IPointKeyFrameFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointKeyFrameFactory(IPointKeyFrameFactory const&) noexcept = default;
        IPointKeyFrameFactory(IPointKeyFrameFactory&&) noexcept = default;
        IPointKeyFrameFactory& operator=(IPointKeyFrameFactory const&) & noexcept = default;
        IPointKeyFrameFactory& operator=(IPointKeyFrameFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointKeyFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointKeyFrameStatics>
    {
        IPointKeyFrameStatics(std::nullptr_t = nullptr) noexcept {}
        IPointKeyFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointKeyFrameStatics(IPointKeyFrameStatics const&) noexcept = default;
        IPointKeyFrameStatics(IPointKeyFrameStatics&&) noexcept = default;
        IPointKeyFrameStatics& operator=(IPointKeyFrameStatics const&) & noexcept = default;
        IPointKeyFrameStatics& operator=(IPointKeyFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerDownThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerDownThemeAnimation>
    {
        IPointerDownThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IPointerDownThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerDownThemeAnimation(IPointerDownThemeAnimation const&) noexcept = default;
        IPointerDownThemeAnimation(IPointerDownThemeAnimation&&) noexcept = default;
        IPointerDownThemeAnimation& operator=(IPointerDownThemeAnimation const&) & noexcept = default;
        IPointerDownThemeAnimation& operator=(IPointerDownThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerDownThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerDownThemeAnimationStatics>
    {
        IPointerDownThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IPointerDownThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerDownThemeAnimationStatics(IPointerDownThemeAnimationStatics const&) noexcept = default;
        IPointerDownThemeAnimationStatics(IPointerDownThemeAnimationStatics&&) noexcept = default;
        IPointerDownThemeAnimationStatics& operator=(IPointerDownThemeAnimationStatics const&) & noexcept = default;
        IPointerDownThemeAnimationStatics& operator=(IPointerDownThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerUpThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerUpThemeAnimation>
    {
        IPointerUpThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IPointerUpThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerUpThemeAnimation(IPointerUpThemeAnimation const&) noexcept = default;
        IPointerUpThemeAnimation(IPointerUpThemeAnimation&&) noexcept = default;
        IPointerUpThemeAnimation& operator=(IPointerUpThemeAnimation const&) & noexcept = default;
        IPointerUpThemeAnimation& operator=(IPointerUpThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPointerUpThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerUpThemeAnimationStatics>
    {
        IPointerUpThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IPointerUpThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPointerUpThemeAnimationStatics(IPointerUpThemeAnimationStatics const&) noexcept = default;
        IPointerUpThemeAnimationStatics(IPointerUpThemeAnimationStatics&&) noexcept = default;
        IPointerUpThemeAnimationStatics& operator=(IPointerUpThemeAnimationStatics const&) & noexcept = default;
        IPointerUpThemeAnimationStatics& operator=(IPointerUpThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopInThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopInThemeAnimation>
    {
        IPopInThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IPopInThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopInThemeAnimation(IPopInThemeAnimation const&) noexcept = default;
        IPopInThemeAnimation(IPopInThemeAnimation&&) noexcept = default;
        IPopInThemeAnimation& operator=(IPopInThemeAnimation const&) & noexcept = default;
        IPopInThemeAnimation& operator=(IPopInThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopInThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopInThemeAnimationStatics>
    {
        IPopInThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IPopInThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopInThemeAnimationStatics(IPopInThemeAnimationStatics const&) noexcept = default;
        IPopInThemeAnimationStatics(IPopInThemeAnimationStatics&&) noexcept = default;
        IPopInThemeAnimationStatics& operator=(IPopInThemeAnimationStatics const&) & noexcept = default;
        IPopInThemeAnimationStatics& operator=(IPopInThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopOutThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopOutThemeAnimation>
    {
        IPopOutThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IPopOutThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopOutThemeAnimation(IPopOutThemeAnimation const&) noexcept = default;
        IPopOutThemeAnimation(IPopOutThemeAnimation&&) noexcept = default;
        IPopOutThemeAnimation& operator=(IPopOutThemeAnimation const&) & noexcept = default;
        IPopOutThemeAnimation& operator=(IPopOutThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopOutThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopOutThemeAnimationStatics>
    {
        IPopOutThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IPopOutThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopOutThemeAnimationStatics(IPopOutThemeAnimationStatics const&) noexcept = default;
        IPopOutThemeAnimationStatics(IPopOutThemeAnimationStatics&&) noexcept = default;
        IPopOutThemeAnimationStatics& operator=(IPopOutThemeAnimationStatics const&) & noexcept = default;
        IPopOutThemeAnimationStatics& operator=(IPopOutThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopupThemeTransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopupThemeTransition>
    {
        IPopupThemeTransition(std::nullptr_t = nullptr) noexcept {}
        IPopupThemeTransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopupThemeTransition(IPopupThemeTransition const&) noexcept = default;
        IPopupThemeTransition(IPopupThemeTransition&&) noexcept = default;
        IPopupThemeTransition& operator=(IPopupThemeTransition const&) & noexcept = default;
        IPopupThemeTransition& operator=(IPopupThemeTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPopupThemeTransitionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPopupThemeTransitionStatics>
    {
        IPopupThemeTransitionStatics(std::nullptr_t = nullptr) noexcept {}
        IPopupThemeTransitionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPopupThemeTransitionStatics(IPopupThemeTransitionStatics const&) noexcept = default;
        IPopupThemeTransitionStatics(IPopupThemeTransitionStatics&&) noexcept = default;
        IPopupThemeTransitionStatics& operator=(IPopupThemeTransitionStatics const&) & noexcept = default;
        IPopupThemeTransitionStatics& operator=(IPopupThemeTransitionStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPowerEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPowerEase>
    {
        IPowerEase(std::nullptr_t = nullptr) noexcept {}
        IPowerEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPowerEase(IPowerEase const&) noexcept = default;
        IPowerEase(IPowerEase&&) noexcept = default;
        IPowerEase& operator=(IPowerEase const&) & noexcept = default;
        IPowerEase& operator=(IPowerEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPowerEaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPowerEaseStatics>
    {
        IPowerEaseStatics(std::nullptr_t = nullptr) noexcept {}
        IPowerEaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPowerEaseStatics(IPowerEaseStatics const&) noexcept = default;
        IPowerEaseStatics(IPowerEaseStatics&&) noexcept = default;
        IPowerEaseStatics& operator=(IPowerEaseStatics const&) & noexcept = default;
        IPowerEaseStatics& operator=(IPowerEaseStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IQuadraticEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IQuadraticEase>
    {
        IQuadraticEase(std::nullptr_t = nullptr) noexcept {}
        IQuadraticEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IQuadraticEase(IQuadraticEase const&) noexcept = default;
        IQuadraticEase(IQuadraticEase&&) noexcept = default;
        IQuadraticEase& operator=(IQuadraticEase const&) & noexcept = default;
        IQuadraticEase& operator=(IQuadraticEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IQuarticEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IQuarticEase>
    {
        IQuarticEase(std::nullptr_t = nullptr) noexcept {}
        IQuarticEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IQuarticEase(IQuarticEase const&) noexcept = default;
        IQuarticEase(IQuarticEase&&) noexcept = default;
        IQuarticEase& operator=(IQuarticEase const&) & noexcept = default;
        IQuarticEase& operator=(IQuarticEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IQuinticEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IQuinticEase>
    {
        IQuinticEase(std::nullptr_t = nullptr) noexcept {}
        IQuinticEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IQuinticEase(IQuinticEase const&) noexcept = default;
        IQuinticEase(IQuinticEase&&) noexcept = default;
        IQuinticEase& operator=(IQuinticEase const&) & noexcept = default;
        IQuinticEase& operator=(IQuinticEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IReorderThemeTransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IReorderThemeTransition>
    {
        IReorderThemeTransition(std::nullptr_t = nullptr) noexcept {}
        IReorderThemeTransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IReorderThemeTransition(IReorderThemeTransition const&) noexcept = default;
        IReorderThemeTransition(IReorderThemeTransition&&) noexcept = default;
        IReorderThemeTransition& operator=(IReorderThemeTransition const&) & noexcept = default;
        IReorderThemeTransition& operator=(IReorderThemeTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepeatBehaviorHelper :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepeatBehaviorHelper>
    {
        IRepeatBehaviorHelper(std::nullptr_t = nullptr) noexcept {}
        IRepeatBehaviorHelper(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepeatBehaviorHelper(IRepeatBehaviorHelper const&) noexcept = default;
        IRepeatBehaviorHelper(IRepeatBehaviorHelper&&) noexcept = default;
        IRepeatBehaviorHelper& operator=(IRepeatBehaviorHelper const&) & noexcept = default;
        IRepeatBehaviorHelper& operator=(IRepeatBehaviorHelper&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepeatBehaviorHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepeatBehaviorHelperStatics>
    {
        IRepeatBehaviorHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IRepeatBehaviorHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepeatBehaviorHelperStatics(IRepeatBehaviorHelperStatics const&) noexcept = default;
        IRepeatBehaviorHelperStatics(IRepeatBehaviorHelperStatics&&) noexcept = default;
        IRepeatBehaviorHelperStatics& operator=(IRepeatBehaviorHelperStatics const&) & noexcept = default;
        IRepeatBehaviorHelperStatics& operator=(IRepeatBehaviorHelperStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepositionThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepositionThemeAnimation>
    {
        IRepositionThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        IRepositionThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepositionThemeAnimation(IRepositionThemeAnimation const&) noexcept = default;
        IRepositionThemeAnimation(IRepositionThemeAnimation&&) noexcept = default;
        IRepositionThemeAnimation& operator=(IRepositionThemeAnimation const&) & noexcept = default;
        IRepositionThemeAnimation& operator=(IRepositionThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepositionThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepositionThemeAnimationStatics>
    {
        IRepositionThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        IRepositionThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepositionThemeAnimationStatics(IRepositionThemeAnimationStatics const&) noexcept = default;
        IRepositionThemeAnimationStatics(IRepositionThemeAnimationStatics&&) noexcept = default;
        IRepositionThemeAnimationStatics& operator=(IRepositionThemeAnimationStatics const&) & noexcept = default;
        IRepositionThemeAnimationStatics& operator=(IRepositionThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepositionThemeTransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepositionThemeTransition>
    {
        IRepositionThemeTransition(std::nullptr_t = nullptr) noexcept {}
        IRepositionThemeTransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepositionThemeTransition(IRepositionThemeTransition const&) noexcept = default;
        IRepositionThemeTransition(IRepositionThemeTransition&&) noexcept = default;
        IRepositionThemeTransition& operator=(IRepositionThemeTransition const&) & noexcept = default;
        IRepositionThemeTransition& operator=(IRepositionThemeTransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepositionThemeTransition2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepositionThemeTransition2>
    {
        IRepositionThemeTransition2(std::nullptr_t = nullptr) noexcept {}
        IRepositionThemeTransition2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepositionThemeTransition2(IRepositionThemeTransition2 const&) noexcept = default;
        IRepositionThemeTransition2(IRepositionThemeTransition2&&) noexcept = default;
        IRepositionThemeTransition2& operator=(IRepositionThemeTransition2 const&) & noexcept = default;
        IRepositionThemeTransition2& operator=(IRepositionThemeTransition2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRepositionThemeTransitionStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepositionThemeTransitionStatics2>
    {
        IRepositionThemeTransitionStatics2(std::nullptr_t = nullptr) noexcept {}
        IRepositionThemeTransitionStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRepositionThemeTransitionStatics2(IRepositionThemeTransitionStatics2 const&) noexcept = default;
        IRepositionThemeTransitionStatics2(IRepositionThemeTransitionStatics2&&) noexcept = default;
        IRepositionThemeTransitionStatics2& operator=(IRepositionThemeTransitionStatics2 const&) & noexcept = default;
        IRepositionThemeTransitionStatics2& operator=(IRepositionThemeTransitionStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISineEase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISineEase>
    {
        ISineEase(std::nullptr_t = nullptr) noexcept {}
        ISineEase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISineEase(ISineEase const&) noexcept = default;
        ISineEase(ISineEase&&) noexcept = default;
        ISineEase& operator=(ISineEase const&) & noexcept = default;
        ISineEase& operator=(ISineEase&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISlideNavigationTransitionInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISlideNavigationTransitionInfo>
    {
        ISlideNavigationTransitionInfo(std::nullptr_t = nullptr) noexcept {}
        ISlideNavigationTransitionInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISlideNavigationTransitionInfo(ISlideNavigationTransitionInfo const&) noexcept = default;
        ISlideNavigationTransitionInfo(ISlideNavigationTransitionInfo&&) noexcept = default;
        ISlideNavigationTransitionInfo& operator=(ISlideNavigationTransitionInfo const&) & noexcept = default;
        ISlideNavigationTransitionInfo& operator=(ISlideNavigationTransitionInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISlideNavigationTransitionInfo2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISlideNavigationTransitionInfo2>
    {
        ISlideNavigationTransitionInfo2(std::nullptr_t = nullptr) noexcept {}
        ISlideNavigationTransitionInfo2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISlideNavigationTransitionInfo2(ISlideNavigationTransitionInfo2 const&) noexcept = default;
        ISlideNavigationTransitionInfo2(ISlideNavigationTransitionInfo2&&) noexcept = default;
        ISlideNavigationTransitionInfo2& operator=(ISlideNavigationTransitionInfo2 const&) & noexcept = default;
        ISlideNavigationTransitionInfo2& operator=(ISlideNavigationTransitionInfo2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISlideNavigationTransitionInfoStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISlideNavigationTransitionInfoStatics2>
    {
        ISlideNavigationTransitionInfoStatics2(std::nullptr_t = nullptr) noexcept {}
        ISlideNavigationTransitionInfoStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISlideNavigationTransitionInfoStatics2(ISlideNavigationTransitionInfoStatics2 const&) noexcept = default;
        ISlideNavigationTransitionInfoStatics2(ISlideNavigationTransitionInfoStatics2&&) noexcept = default;
        ISlideNavigationTransitionInfoStatics2& operator=(ISlideNavigationTransitionInfoStatics2 const&) & noexcept = default;
        ISlideNavigationTransitionInfoStatics2& operator=(ISlideNavigationTransitionInfoStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplineColorKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplineColorKeyFrame>
    {
        ISplineColorKeyFrame(std::nullptr_t = nullptr) noexcept {}
        ISplineColorKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplineColorKeyFrame(ISplineColorKeyFrame const&) noexcept = default;
        ISplineColorKeyFrame(ISplineColorKeyFrame&&) noexcept = default;
        ISplineColorKeyFrame& operator=(ISplineColorKeyFrame const&) & noexcept = default;
        ISplineColorKeyFrame& operator=(ISplineColorKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplineColorKeyFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplineColorKeyFrameStatics>
    {
        ISplineColorKeyFrameStatics(std::nullptr_t = nullptr) noexcept {}
        ISplineColorKeyFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplineColorKeyFrameStatics(ISplineColorKeyFrameStatics const&) noexcept = default;
        ISplineColorKeyFrameStatics(ISplineColorKeyFrameStatics&&) noexcept = default;
        ISplineColorKeyFrameStatics& operator=(ISplineColorKeyFrameStatics const&) & noexcept = default;
        ISplineColorKeyFrameStatics& operator=(ISplineColorKeyFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplineDoubleKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplineDoubleKeyFrame>
    {
        ISplineDoubleKeyFrame(std::nullptr_t = nullptr) noexcept {}
        ISplineDoubleKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplineDoubleKeyFrame(ISplineDoubleKeyFrame const&) noexcept = default;
        ISplineDoubleKeyFrame(ISplineDoubleKeyFrame&&) noexcept = default;
        ISplineDoubleKeyFrame& operator=(ISplineDoubleKeyFrame const&) & noexcept = default;
        ISplineDoubleKeyFrame& operator=(ISplineDoubleKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplineDoubleKeyFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplineDoubleKeyFrameStatics>
    {
        ISplineDoubleKeyFrameStatics(std::nullptr_t = nullptr) noexcept {}
        ISplineDoubleKeyFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplineDoubleKeyFrameStatics(ISplineDoubleKeyFrameStatics const&) noexcept = default;
        ISplineDoubleKeyFrameStatics(ISplineDoubleKeyFrameStatics&&) noexcept = default;
        ISplineDoubleKeyFrameStatics& operator=(ISplineDoubleKeyFrameStatics const&) & noexcept = default;
        ISplineDoubleKeyFrameStatics& operator=(ISplineDoubleKeyFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplinePointKeyFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplinePointKeyFrame>
    {
        ISplinePointKeyFrame(std::nullptr_t = nullptr) noexcept {}
        ISplinePointKeyFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplinePointKeyFrame(ISplinePointKeyFrame const&) noexcept = default;
        ISplinePointKeyFrame(ISplinePointKeyFrame&&) noexcept = default;
        ISplinePointKeyFrame& operator=(ISplinePointKeyFrame const&) & noexcept = default;
        ISplinePointKeyFrame& operator=(ISplinePointKeyFrame&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplinePointKeyFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplinePointKeyFrameStatics>
    {
        ISplinePointKeyFrameStatics(std::nullptr_t = nullptr) noexcept {}
        ISplinePointKeyFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplinePointKeyFrameStatics(ISplinePointKeyFrameStatics const&) noexcept = default;
        ISplinePointKeyFrameStatics(ISplinePointKeyFrameStatics&&) noexcept = default;
        ISplinePointKeyFrameStatics& operator=(ISplinePointKeyFrameStatics const&) & noexcept = default;
        ISplinePointKeyFrameStatics& operator=(ISplinePointKeyFrameStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitCloseThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitCloseThemeAnimation>
    {
        ISplitCloseThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        ISplitCloseThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitCloseThemeAnimation(ISplitCloseThemeAnimation const&) noexcept = default;
        ISplitCloseThemeAnimation(ISplitCloseThemeAnimation&&) noexcept = default;
        ISplitCloseThemeAnimation& operator=(ISplitCloseThemeAnimation const&) & noexcept = default;
        ISplitCloseThemeAnimation& operator=(ISplitCloseThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitCloseThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitCloseThemeAnimationStatics>
    {
        ISplitCloseThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        ISplitCloseThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitCloseThemeAnimationStatics(ISplitCloseThemeAnimationStatics const&) noexcept = default;
        ISplitCloseThemeAnimationStatics(ISplitCloseThemeAnimationStatics&&) noexcept = default;
        ISplitCloseThemeAnimationStatics& operator=(ISplitCloseThemeAnimationStatics const&) & noexcept = default;
        ISplitCloseThemeAnimationStatics& operator=(ISplitCloseThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitOpenThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitOpenThemeAnimation>
    {
        ISplitOpenThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        ISplitOpenThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitOpenThemeAnimation(ISplitOpenThemeAnimation const&) noexcept = default;
        ISplitOpenThemeAnimation(ISplitOpenThemeAnimation&&) noexcept = default;
        ISplitOpenThemeAnimation& operator=(ISplitOpenThemeAnimation const&) & noexcept = default;
        ISplitOpenThemeAnimation& operator=(ISplitOpenThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISplitOpenThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitOpenThemeAnimationStatics>
    {
        ISplitOpenThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        ISplitOpenThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISplitOpenThemeAnimationStatics(ISplitOpenThemeAnimationStatics const&) noexcept = default;
        ISplitOpenThemeAnimationStatics(ISplitOpenThemeAnimationStatics&&) noexcept = default;
        ISplitOpenThemeAnimationStatics& operator=(ISplitOpenThemeAnimationStatics const&) & noexcept = default;
        ISplitOpenThemeAnimationStatics& operator=(ISplitOpenThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoryboard :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoryboard>
    {
        IStoryboard(std::nullptr_t = nullptr) noexcept {}
        IStoryboard(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoryboard(IStoryboard const&) noexcept = default;
        IStoryboard(IStoryboard&&) noexcept = default;
        IStoryboard& operator=(IStoryboard const&) & noexcept = default;
        IStoryboard& operator=(IStoryboard&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoryboardStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoryboardStatics>
    {
        IStoryboardStatics(std::nullptr_t = nullptr) noexcept {}
        IStoryboardStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoryboardStatics(IStoryboardStatics const&) noexcept = default;
        IStoryboardStatics(IStoryboardStatics&&) noexcept = default;
        IStoryboardStatics& operator=(IStoryboardStatics const&) & noexcept = default;
        IStoryboardStatics& operator=(IStoryboardStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISuppressNavigationTransitionInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISuppressNavigationTransitionInfo>
    {
        ISuppressNavigationTransitionInfo(std::nullptr_t = nullptr) noexcept {}
        ISuppressNavigationTransitionInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISuppressNavigationTransitionInfo(ISuppressNavigationTransitionInfo const&) noexcept = default;
        ISuppressNavigationTransitionInfo(ISuppressNavigationTransitionInfo&&) noexcept = default;
        ISuppressNavigationTransitionInfo& operator=(ISuppressNavigationTransitionInfo const&) & noexcept = default;
        ISuppressNavigationTransitionInfo& operator=(ISuppressNavigationTransitionInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeBackThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeBackThemeAnimation>
    {
        ISwipeBackThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        ISwipeBackThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeBackThemeAnimation(ISwipeBackThemeAnimation const&) noexcept = default;
        ISwipeBackThemeAnimation(ISwipeBackThemeAnimation&&) noexcept = default;
        ISwipeBackThemeAnimation& operator=(ISwipeBackThemeAnimation const&) & noexcept = default;
        ISwipeBackThemeAnimation& operator=(ISwipeBackThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeBackThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeBackThemeAnimationStatics>
    {
        ISwipeBackThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        ISwipeBackThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeBackThemeAnimationStatics(ISwipeBackThemeAnimationStatics const&) noexcept = default;
        ISwipeBackThemeAnimationStatics(ISwipeBackThemeAnimationStatics&&) noexcept = default;
        ISwipeBackThemeAnimationStatics& operator=(ISwipeBackThemeAnimationStatics const&) & noexcept = default;
        ISwipeBackThemeAnimationStatics& operator=(ISwipeBackThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeHintThemeAnimation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeHintThemeAnimation>
    {
        ISwipeHintThemeAnimation(std::nullptr_t = nullptr) noexcept {}
        ISwipeHintThemeAnimation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeHintThemeAnimation(ISwipeHintThemeAnimation const&) noexcept = default;
        ISwipeHintThemeAnimation(ISwipeHintThemeAnimation&&) noexcept = default;
        ISwipeHintThemeAnimation& operator=(ISwipeHintThemeAnimation const&) & noexcept = default;
        ISwipeHintThemeAnimation& operator=(ISwipeHintThemeAnimation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISwipeHintThemeAnimationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeHintThemeAnimationStatics>
    {
        ISwipeHintThemeAnimationStatics(std::nullptr_t = nullptr) noexcept {}
        ISwipeHintThemeAnimationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISwipeHintThemeAnimationStatics(ISwipeHintThemeAnimationStatics const&) noexcept = default;
        ISwipeHintThemeAnimationStatics(ISwipeHintThemeAnimationStatics&&) noexcept = default;
        ISwipeHintThemeAnimationStatics& operator=(ISwipeHintThemeAnimationStatics const&) & noexcept = default;
        ISwipeHintThemeAnimationStatics& operator=(ISwipeHintThemeAnimationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimeline :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimeline>
    {
        ITimeline(std::nullptr_t = nullptr) noexcept {}
        ITimeline(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimeline(ITimeline const&) noexcept = default;
        ITimeline(ITimeline&&) noexcept = default;
        ITimeline& operator=(ITimeline const&) & noexcept = default;
        ITimeline& operator=(ITimeline&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimelineFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimelineFactory>
    {
        ITimelineFactory(std::nullptr_t = nullptr) noexcept {}
        ITimelineFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimelineFactory(ITimelineFactory const&) noexcept = default;
        ITimelineFactory(ITimelineFactory&&) noexcept = default;
        ITimelineFactory& operator=(ITimelineFactory const&) & noexcept = default;
        ITimelineFactory& operator=(ITimelineFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITimelineStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimelineStatics>
    {
        ITimelineStatics(std::nullptr_t = nullptr) noexcept {}
        ITimelineStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITimelineStatics(ITimelineStatics const&) noexcept = default;
        ITimelineStatics(ITimelineStatics&&) noexcept = default;
        ITimelineStatics& operator=(ITimelineStatics const&) & noexcept = default;
        ITimelineStatics& operator=(ITimelineStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITransition>
    {
        ITransition(std::nullptr_t = nullptr) noexcept {}
        ITransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITransition(ITransition const&) noexcept = default;
        ITransition(ITransition&&) noexcept = default;
        ITransition& operator=(ITransition const&) & noexcept = default;
        ITransition& operator=(ITransition&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITransitionFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITransitionFactory>
    {
        ITransitionFactory(std::nullptr_t = nullptr) noexcept {}
        ITransitionFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITransitionFactory(ITransitionFactory const&) noexcept = default;
        ITransitionFactory(ITransitionFactory&&) noexcept = default;
        ITransitionFactory& operator=(ITransitionFactory const&) & noexcept = default;
        ITransitionFactory& operator=(ITransitionFactory&&) & noexcept = default;
    };
}
#endif
