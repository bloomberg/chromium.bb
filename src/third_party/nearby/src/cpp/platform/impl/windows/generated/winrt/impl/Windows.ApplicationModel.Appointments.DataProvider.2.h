// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_Appointments_DataProvider_2_H
#define WINRT_Windows_ApplicationModel_Appointments_DataProvider_2_H
#include "winrt/impl/Windows.ApplicationModel.Appointments.DataProvider.1.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::Appointments::DataProvider
{
    struct __declspec(empty_bases) AppointmentCalendarCancelMeetingRequest : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarCancelMeetingRequest
    {
        AppointmentCalendarCancelMeetingRequest(std::nullptr_t) noexcept {}
        AppointmentCalendarCancelMeetingRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarCancelMeetingRequest(ptr, take_ownership_from_abi) {}
        AppointmentCalendarCancelMeetingRequest(AppointmentCalendarCancelMeetingRequest const&) noexcept = default;
        AppointmentCalendarCancelMeetingRequest(AppointmentCalendarCancelMeetingRequest&&) noexcept = default;
        AppointmentCalendarCancelMeetingRequest& operator=(AppointmentCalendarCancelMeetingRequest const&) & noexcept = default;
        AppointmentCalendarCancelMeetingRequest& operator=(AppointmentCalendarCancelMeetingRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarCancelMeetingRequestEventArgs : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarCancelMeetingRequestEventArgs
    {
        AppointmentCalendarCancelMeetingRequestEventArgs(std::nullptr_t) noexcept {}
        AppointmentCalendarCancelMeetingRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarCancelMeetingRequestEventArgs(ptr, take_ownership_from_abi) {}
        AppointmentCalendarCancelMeetingRequestEventArgs(AppointmentCalendarCancelMeetingRequestEventArgs const&) noexcept = default;
        AppointmentCalendarCancelMeetingRequestEventArgs(AppointmentCalendarCancelMeetingRequestEventArgs&&) noexcept = default;
        AppointmentCalendarCancelMeetingRequestEventArgs& operator=(AppointmentCalendarCancelMeetingRequestEventArgs const&) & noexcept = default;
        AppointmentCalendarCancelMeetingRequestEventArgs& operator=(AppointmentCalendarCancelMeetingRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarCreateOrUpdateAppointmentRequest : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarCreateOrUpdateAppointmentRequest
    {
        AppointmentCalendarCreateOrUpdateAppointmentRequest(std::nullptr_t) noexcept {}
        AppointmentCalendarCreateOrUpdateAppointmentRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarCreateOrUpdateAppointmentRequest(ptr, take_ownership_from_abi) {}
        AppointmentCalendarCreateOrUpdateAppointmentRequest(AppointmentCalendarCreateOrUpdateAppointmentRequest const&) noexcept = default;
        AppointmentCalendarCreateOrUpdateAppointmentRequest(AppointmentCalendarCreateOrUpdateAppointmentRequest&&) noexcept = default;
        AppointmentCalendarCreateOrUpdateAppointmentRequest& operator=(AppointmentCalendarCreateOrUpdateAppointmentRequest const&) & noexcept = default;
        AppointmentCalendarCreateOrUpdateAppointmentRequest& operator=(AppointmentCalendarCreateOrUpdateAppointmentRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs
    {
        AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs(std::nullptr_t) noexcept {}
        AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs(ptr, take_ownership_from_abi) {}
        AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs(AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs const&) noexcept = default;
        AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs(AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs&&) noexcept = default;
        AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs& operator=(AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs const&) & noexcept = default;
        AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs& operator=(AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarForwardMeetingRequest : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarForwardMeetingRequest
    {
        AppointmentCalendarForwardMeetingRequest(std::nullptr_t) noexcept {}
        AppointmentCalendarForwardMeetingRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarForwardMeetingRequest(ptr, take_ownership_from_abi) {}
        AppointmentCalendarForwardMeetingRequest(AppointmentCalendarForwardMeetingRequest const&) noexcept = default;
        AppointmentCalendarForwardMeetingRequest(AppointmentCalendarForwardMeetingRequest&&) noexcept = default;
        AppointmentCalendarForwardMeetingRequest& operator=(AppointmentCalendarForwardMeetingRequest const&) & noexcept = default;
        AppointmentCalendarForwardMeetingRequest& operator=(AppointmentCalendarForwardMeetingRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarForwardMeetingRequestEventArgs : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarForwardMeetingRequestEventArgs
    {
        AppointmentCalendarForwardMeetingRequestEventArgs(std::nullptr_t) noexcept {}
        AppointmentCalendarForwardMeetingRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarForwardMeetingRequestEventArgs(ptr, take_ownership_from_abi) {}
        AppointmentCalendarForwardMeetingRequestEventArgs(AppointmentCalendarForwardMeetingRequestEventArgs const&) noexcept = default;
        AppointmentCalendarForwardMeetingRequestEventArgs(AppointmentCalendarForwardMeetingRequestEventArgs&&) noexcept = default;
        AppointmentCalendarForwardMeetingRequestEventArgs& operator=(AppointmentCalendarForwardMeetingRequestEventArgs const&) & noexcept = default;
        AppointmentCalendarForwardMeetingRequestEventArgs& operator=(AppointmentCalendarForwardMeetingRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarProposeNewTimeForMeetingRequest : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarProposeNewTimeForMeetingRequest
    {
        AppointmentCalendarProposeNewTimeForMeetingRequest(std::nullptr_t) noexcept {}
        AppointmentCalendarProposeNewTimeForMeetingRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarProposeNewTimeForMeetingRequest(ptr, take_ownership_from_abi) {}
        AppointmentCalendarProposeNewTimeForMeetingRequest(AppointmentCalendarProposeNewTimeForMeetingRequest const&) noexcept = default;
        AppointmentCalendarProposeNewTimeForMeetingRequest(AppointmentCalendarProposeNewTimeForMeetingRequest&&) noexcept = default;
        AppointmentCalendarProposeNewTimeForMeetingRequest& operator=(AppointmentCalendarProposeNewTimeForMeetingRequest const&) & noexcept = default;
        AppointmentCalendarProposeNewTimeForMeetingRequest& operator=(AppointmentCalendarProposeNewTimeForMeetingRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs
    {
        AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs(std::nullptr_t) noexcept {}
        AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarProposeNewTimeForMeetingRequestEventArgs(ptr, take_ownership_from_abi) {}
        AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs(AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs const&) noexcept = default;
        AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs(AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs&&) noexcept = default;
        AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs& operator=(AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs const&) & noexcept = default;
        AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs& operator=(AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarSyncManagerSyncRequest : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarSyncManagerSyncRequest
    {
        AppointmentCalendarSyncManagerSyncRequest(std::nullptr_t) noexcept {}
        AppointmentCalendarSyncManagerSyncRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarSyncManagerSyncRequest(ptr, take_ownership_from_abi) {}
        AppointmentCalendarSyncManagerSyncRequest(AppointmentCalendarSyncManagerSyncRequest const&) noexcept = default;
        AppointmentCalendarSyncManagerSyncRequest(AppointmentCalendarSyncManagerSyncRequest&&) noexcept = default;
        AppointmentCalendarSyncManagerSyncRequest& operator=(AppointmentCalendarSyncManagerSyncRequest const&) & noexcept = default;
        AppointmentCalendarSyncManagerSyncRequest& operator=(AppointmentCalendarSyncManagerSyncRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarSyncManagerSyncRequestEventArgs : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarSyncManagerSyncRequestEventArgs
    {
        AppointmentCalendarSyncManagerSyncRequestEventArgs(std::nullptr_t) noexcept {}
        AppointmentCalendarSyncManagerSyncRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarSyncManagerSyncRequestEventArgs(ptr, take_ownership_from_abi) {}
        AppointmentCalendarSyncManagerSyncRequestEventArgs(AppointmentCalendarSyncManagerSyncRequestEventArgs const&) noexcept = default;
        AppointmentCalendarSyncManagerSyncRequestEventArgs(AppointmentCalendarSyncManagerSyncRequestEventArgs&&) noexcept = default;
        AppointmentCalendarSyncManagerSyncRequestEventArgs& operator=(AppointmentCalendarSyncManagerSyncRequestEventArgs const&) & noexcept = default;
        AppointmentCalendarSyncManagerSyncRequestEventArgs& operator=(AppointmentCalendarSyncManagerSyncRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarUpdateMeetingResponseRequest : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarUpdateMeetingResponseRequest
    {
        AppointmentCalendarUpdateMeetingResponseRequest(std::nullptr_t) noexcept {}
        AppointmentCalendarUpdateMeetingResponseRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarUpdateMeetingResponseRequest(ptr, take_ownership_from_abi) {}
        AppointmentCalendarUpdateMeetingResponseRequest(AppointmentCalendarUpdateMeetingResponseRequest const&) noexcept = default;
        AppointmentCalendarUpdateMeetingResponseRequest(AppointmentCalendarUpdateMeetingResponseRequest&&) noexcept = default;
        AppointmentCalendarUpdateMeetingResponseRequest& operator=(AppointmentCalendarUpdateMeetingResponseRequest const&) & noexcept = default;
        AppointmentCalendarUpdateMeetingResponseRequest& operator=(AppointmentCalendarUpdateMeetingResponseRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentCalendarUpdateMeetingResponseRequestEventArgs : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarUpdateMeetingResponseRequestEventArgs
    {
        AppointmentCalendarUpdateMeetingResponseRequestEventArgs(std::nullptr_t) noexcept {}
        AppointmentCalendarUpdateMeetingResponseRequestEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentCalendarUpdateMeetingResponseRequestEventArgs(ptr, take_ownership_from_abi) {}
        AppointmentCalendarUpdateMeetingResponseRequestEventArgs(AppointmentCalendarUpdateMeetingResponseRequestEventArgs const&) noexcept = default;
        AppointmentCalendarUpdateMeetingResponseRequestEventArgs(AppointmentCalendarUpdateMeetingResponseRequestEventArgs&&) noexcept = default;
        AppointmentCalendarUpdateMeetingResponseRequestEventArgs& operator=(AppointmentCalendarUpdateMeetingResponseRequestEventArgs const&) & noexcept = default;
        AppointmentCalendarUpdateMeetingResponseRequestEventArgs& operator=(AppointmentCalendarUpdateMeetingResponseRequestEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentDataProviderConnection : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentDataProviderConnection
    {
        AppointmentDataProviderConnection(std::nullptr_t) noexcept {}
        AppointmentDataProviderConnection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentDataProviderConnection(ptr, take_ownership_from_abi) {}
        AppointmentDataProviderConnection(AppointmentDataProviderConnection const&) noexcept = default;
        AppointmentDataProviderConnection(AppointmentDataProviderConnection&&) noexcept = default;
        AppointmentDataProviderConnection& operator=(AppointmentDataProviderConnection const&) & noexcept = default;
        AppointmentDataProviderConnection& operator=(AppointmentDataProviderConnection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AppointmentDataProviderTriggerDetails : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentDataProviderTriggerDetails
    {
        AppointmentDataProviderTriggerDetails(std::nullptr_t) noexcept {}
        AppointmentDataProviderTriggerDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::Appointments::DataProvider::IAppointmentDataProviderTriggerDetails(ptr, take_ownership_from_abi) {}
        AppointmentDataProviderTriggerDetails(AppointmentDataProviderTriggerDetails const&) noexcept = default;
        AppointmentDataProviderTriggerDetails(AppointmentDataProviderTriggerDetails&&) noexcept = default;
        AppointmentDataProviderTriggerDetails& operator=(AppointmentDataProviderTriggerDetails const&) & noexcept = default;
        AppointmentDataProviderTriggerDetails& operator=(AppointmentDataProviderTriggerDetails&&) & noexcept = default;
    };
}
#endif
