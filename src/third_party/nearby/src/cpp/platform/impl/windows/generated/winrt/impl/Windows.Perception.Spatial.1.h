// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Perception_Spatial_1_H
#define WINRT_Windows_Perception_Spatial_1_H
#include "winrt/impl/Windows.Perception.Spatial.0.h"
WINRT_EXPORT namespace winrt::Windows::Perception::Spatial
{
    struct __declspec(empty_bases) ISpatialAnchor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchor>
    {
        ISpatialAnchor(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialAnchor(ISpatialAnchor const&) noexcept = default;
        ISpatialAnchor(ISpatialAnchor&&) noexcept = default;
        ISpatialAnchor& operator=(ISpatialAnchor const&) & noexcept = default;
        ISpatialAnchor& operator=(ISpatialAnchor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialAnchor2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchor2>
    {
        ISpatialAnchor2(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchor2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialAnchor2(ISpatialAnchor2 const&) noexcept = default;
        ISpatialAnchor2(ISpatialAnchor2&&) noexcept = default;
        ISpatialAnchor2& operator=(ISpatialAnchor2 const&) & noexcept = default;
        ISpatialAnchor2& operator=(ISpatialAnchor2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialAnchorExportSufficiency :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchorExportSufficiency>
    {
        ISpatialAnchorExportSufficiency(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchorExportSufficiency(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialAnchorExportSufficiency(ISpatialAnchorExportSufficiency const&) noexcept = default;
        ISpatialAnchorExportSufficiency(ISpatialAnchorExportSufficiency&&) noexcept = default;
        ISpatialAnchorExportSufficiency& operator=(ISpatialAnchorExportSufficiency const&) & noexcept = default;
        ISpatialAnchorExportSufficiency& operator=(ISpatialAnchorExportSufficiency&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialAnchorExporter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchorExporter>
    {
        ISpatialAnchorExporter(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchorExporter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialAnchorExporter(ISpatialAnchorExporter const&) noexcept = default;
        ISpatialAnchorExporter(ISpatialAnchorExporter&&) noexcept = default;
        ISpatialAnchorExporter& operator=(ISpatialAnchorExporter const&) & noexcept = default;
        ISpatialAnchorExporter& operator=(ISpatialAnchorExporter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialAnchorExporterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchorExporterStatics>
    {
        ISpatialAnchorExporterStatics(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchorExporterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialAnchorExporterStatics(ISpatialAnchorExporterStatics const&) noexcept = default;
        ISpatialAnchorExporterStatics(ISpatialAnchorExporterStatics&&) noexcept = default;
        ISpatialAnchorExporterStatics& operator=(ISpatialAnchorExporterStatics const&) & noexcept = default;
        ISpatialAnchorExporterStatics& operator=(ISpatialAnchorExporterStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialAnchorManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchorManagerStatics>
    {
        ISpatialAnchorManagerStatics(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchorManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialAnchorManagerStatics(ISpatialAnchorManagerStatics const&) noexcept = default;
        ISpatialAnchorManagerStatics(ISpatialAnchorManagerStatics&&) noexcept = default;
        ISpatialAnchorManagerStatics& operator=(ISpatialAnchorManagerStatics const&) & noexcept = default;
        ISpatialAnchorManagerStatics& operator=(ISpatialAnchorManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialAnchorRawCoordinateSystemAdjustedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchorRawCoordinateSystemAdjustedEventArgs>
    {
        ISpatialAnchorRawCoordinateSystemAdjustedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchorRawCoordinateSystemAdjustedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialAnchorRawCoordinateSystemAdjustedEventArgs(ISpatialAnchorRawCoordinateSystemAdjustedEventArgs const&) noexcept = default;
        ISpatialAnchorRawCoordinateSystemAdjustedEventArgs(ISpatialAnchorRawCoordinateSystemAdjustedEventArgs&&) noexcept = default;
        ISpatialAnchorRawCoordinateSystemAdjustedEventArgs& operator=(ISpatialAnchorRawCoordinateSystemAdjustedEventArgs const&) & noexcept = default;
        ISpatialAnchorRawCoordinateSystemAdjustedEventArgs& operator=(ISpatialAnchorRawCoordinateSystemAdjustedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialAnchorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchorStatics>
    {
        ISpatialAnchorStatics(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialAnchorStatics(ISpatialAnchorStatics const&) noexcept = default;
        ISpatialAnchorStatics(ISpatialAnchorStatics&&) noexcept = default;
        ISpatialAnchorStatics& operator=(ISpatialAnchorStatics const&) & noexcept = default;
        ISpatialAnchorStatics& operator=(ISpatialAnchorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialAnchorStore :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchorStore>
    {
        ISpatialAnchorStore(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchorStore(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialAnchorStore(ISpatialAnchorStore const&) noexcept = default;
        ISpatialAnchorStore(ISpatialAnchorStore&&) noexcept = default;
        ISpatialAnchorStore& operator=(ISpatialAnchorStore const&) & noexcept = default;
        ISpatialAnchorStore& operator=(ISpatialAnchorStore&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialAnchorTransferManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchorTransferManagerStatics>
    {
        ISpatialAnchorTransferManagerStatics(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchorTransferManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialAnchorTransferManagerStatics(ISpatialAnchorTransferManagerStatics const&) noexcept = default;
        ISpatialAnchorTransferManagerStatics(ISpatialAnchorTransferManagerStatics&&) noexcept = default;
        ISpatialAnchorTransferManagerStatics& operator=(ISpatialAnchorTransferManagerStatics const&) & noexcept = default;
        ISpatialAnchorTransferManagerStatics& operator=(ISpatialAnchorTransferManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialBoundingVolume :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialBoundingVolume>
    {
        ISpatialBoundingVolume(std::nullptr_t = nullptr) noexcept {}
        ISpatialBoundingVolume(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialBoundingVolume(ISpatialBoundingVolume const&) noexcept = default;
        ISpatialBoundingVolume(ISpatialBoundingVolume&&) noexcept = default;
        ISpatialBoundingVolume& operator=(ISpatialBoundingVolume const&) & noexcept = default;
        ISpatialBoundingVolume& operator=(ISpatialBoundingVolume&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialBoundingVolumeStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialBoundingVolumeStatics>
    {
        ISpatialBoundingVolumeStatics(std::nullptr_t = nullptr) noexcept {}
        ISpatialBoundingVolumeStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialBoundingVolumeStatics(ISpatialBoundingVolumeStatics const&) noexcept = default;
        ISpatialBoundingVolumeStatics(ISpatialBoundingVolumeStatics&&) noexcept = default;
        ISpatialBoundingVolumeStatics& operator=(ISpatialBoundingVolumeStatics const&) & noexcept = default;
        ISpatialBoundingVolumeStatics& operator=(ISpatialBoundingVolumeStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialCoordinateSystem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialCoordinateSystem>
    {
        ISpatialCoordinateSystem(std::nullptr_t = nullptr) noexcept {}
        ISpatialCoordinateSystem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialCoordinateSystem(ISpatialCoordinateSystem const&) noexcept = default;
        ISpatialCoordinateSystem(ISpatialCoordinateSystem&&) noexcept = default;
        ISpatialCoordinateSystem& operator=(ISpatialCoordinateSystem const&) & noexcept = default;
        ISpatialCoordinateSystem& operator=(ISpatialCoordinateSystem&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialEntity>
    {
        ISpatialEntity(std::nullptr_t = nullptr) noexcept {}
        ISpatialEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialEntity(ISpatialEntity const&) noexcept = default;
        ISpatialEntity(ISpatialEntity&&) noexcept = default;
        ISpatialEntity& operator=(ISpatialEntity const&) & noexcept = default;
        ISpatialEntity& operator=(ISpatialEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialEntityAddedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialEntityAddedEventArgs>
    {
        ISpatialEntityAddedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISpatialEntityAddedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialEntityAddedEventArgs(ISpatialEntityAddedEventArgs const&) noexcept = default;
        ISpatialEntityAddedEventArgs(ISpatialEntityAddedEventArgs&&) noexcept = default;
        ISpatialEntityAddedEventArgs& operator=(ISpatialEntityAddedEventArgs const&) & noexcept = default;
        ISpatialEntityAddedEventArgs& operator=(ISpatialEntityAddedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialEntityFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialEntityFactory>
    {
        ISpatialEntityFactory(std::nullptr_t = nullptr) noexcept {}
        ISpatialEntityFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialEntityFactory(ISpatialEntityFactory const&) noexcept = default;
        ISpatialEntityFactory(ISpatialEntityFactory&&) noexcept = default;
        ISpatialEntityFactory& operator=(ISpatialEntityFactory const&) & noexcept = default;
        ISpatialEntityFactory& operator=(ISpatialEntityFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialEntityRemovedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialEntityRemovedEventArgs>
    {
        ISpatialEntityRemovedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISpatialEntityRemovedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialEntityRemovedEventArgs(ISpatialEntityRemovedEventArgs const&) noexcept = default;
        ISpatialEntityRemovedEventArgs(ISpatialEntityRemovedEventArgs&&) noexcept = default;
        ISpatialEntityRemovedEventArgs& operator=(ISpatialEntityRemovedEventArgs const&) & noexcept = default;
        ISpatialEntityRemovedEventArgs& operator=(ISpatialEntityRemovedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialEntityStore :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialEntityStore>
    {
        ISpatialEntityStore(std::nullptr_t = nullptr) noexcept {}
        ISpatialEntityStore(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialEntityStore(ISpatialEntityStore const&) noexcept = default;
        ISpatialEntityStore(ISpatialEntityStore&&) noexcept = default;
        ISpatialEntityStore& operator=(ISpatialEntityStore const&) & noexcept = default;
        ISpatialEntityStore& operator=(ISpatialEntityStore&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialEntityStoreStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialEntityStoreStatics>
    {
        ISpatialEntityStoreStatics(std::nullptr_t = nullptr) noexcept {}
        ISpatialEntityStoreStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialEntityStoreStatics(ISpatialEntityStoreStatics const&) noexcept = default;
        ISpatialEntityStoreStatics(ISpatialEntityStoreStatics&&) noexcept = default;
        ISpatialEntityStoreStatics& operator=(ISpatialEntityStoreStatics const&) & noexcept = default;
        ISpatialEntityStoreStatics& operator=(ISpatialEntityStoreStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialEntityUpdatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialEntityUpdatedEventArgs>
    {
        ISpatialEntityUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISpatialEntityUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialEntityUpdatedEventArgs(ISpatialEntityUpdatedEventArgs const&) noexcept = default;
        ISpatialEntityUpdatedEventArgs(ISpatialEntityUpdatedEventArgs&&) noexcept = default;
        ISpatialEntityUpdatedEventArgs& operator=(ISpatialEntityUpdatedEventArgs const&) & noexcept = default;
        ISpatialEntityUpdatedEventArgs& operator=(ISpatialEntityUpdatedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialEntityWatcher :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialEntityWatcher>
    {
        ISpatialEntityWatcher(std::nullptr_t = nullptr) noexcept {}
        ISpatialEntityWatcher(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialEntityWatcher(ISpatialEntityWatcher const&) noexcept = default;
        ISpatialEntityWatcher(ISpatialEntityWatcher&&) noexcept = default;
        ISpatialEntityWatcher& operator=(ISpatialEntityWatcher const&) & noexcept = default;
        ISpatialEntityWatcher& operator=(ISpatialEntityWatcher&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialLocation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialLocation>
    {
        ISpatialLocation(std::nullptr_t = nullptr) noexcept {}
        ISpatialLocation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialLocation(ISpatialLocation const&) noexcept = default;
        ISpatialLocation(ISpatialLocation&&) noexcept = default;
        ISpatialLocation& operator=(ISpatialLocation const&) & noexcept = default;
        ISpatialLocation& operator=(ISpatialLocation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialLocation2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialLocation2>
    {
        ISpatialLocation2(std::nullptr_t = nullptr) noexcept {}
        ISpatialLocation2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialLocation2(ISpatialLocation2 const&) noexcept = default;
        ISpatialLocation2(ISpatialLocation2&&) noexcept = default;
        ISpatialLocation2& operator=(ISpatialLocation2 const&) & noexcept = default;
        ISpatialLocation2& operator=(ISpatialLocation2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialLocator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialLocator>
    {
        ISpatialLocator(std::nullptr_t = nullptr) noexcept {}
        ISpatialLocator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialLocator(ISpatialLocator const&) noexcept = default;
        ISpatialLocator(ISpatialLocator&&) noexcept = default;
        ISpatialLocator& operator=(ISpatialLocator const&) & noexcept = default;
        ISpatialLocator& operator=(ISpatialLocator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialLocatorAttachedFrameOfReference :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialLocatorAttachedFrameOfReference>
    {
        ISpatialLocatorAttachedFrameOfReference(std::nullptr_t = nullptr) noexcept {}
        ISpatialLocatorAttachedFrameOfReference(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialLocatorAttachedFrameOfReference(ISpatialLocatorAttachedFrameOfReference const&) noexcept = default;
        ISpatialLocatorAttachedFrameOfReference(ISpatialLocatorAttachedFrameOfReference&&) noexcept = default;
        ISpatialLocatorAttachedFrameOfReference& operator=(ISpatialLocatorAttachedFrameOfReference const&) & noexcept = default;
        ISpatialLocatorAttachedFrameOfReference& operator=(ISpatialLocatorAttachedFrameOfReference&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialLocatorPositionalTrackingDeactivatingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialLocatorPositionalTrackingDeactivatingEventArgs>
    {
        ISpatialLocatorPositionalTrackingDeactivatingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISpatialLocatorPositionalTrackingDeactivatingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialLocatorPositionalTrackingDeactivatingEventArgs(ISpatialLocatorPositionalTrackingDeactivatingEventArgs const&) noexcept = default;
        ISpatialLocatorPositionalTrackingDeactivatingEventArgs(ISpatialLocatorPositionalTrackingDeactivatingEventArgs&&) noexcept = default;
        ISpatialLocatorPositionalTrackingDeactivatingEventArgs& operator=(ISpatialLocatorPositionalTrackingDeactivatingEventArgs const&) & noexcept = default;
        ISpatialLocatorPositionalTrackingDeactivatingEventArgs& operator=(ISpatialLocatorPositionalTrackingDeactivatingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialLocatorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialLocatorStatics>
    {
        ISpatialLocatorStatics(std::nullptr_t = nullptr) noexcept {}
        ISpatialLocatorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialLocatorStatics(ISpatialLocatorStatics const&) noexcept = default;
        ISpatialLocatorStatics(ISpatialLocatorStatics&&) noexcept = default;
        ISpatialLocatorStatics& operator=(ISpatialLocatorStatics const&) & noexcept = default;
        ISpatialLocatorStatics& operator=(ISpatialLocatorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialStageFrameOfReference :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialStageFrameOfReference>
    {
        ISpatialStageFrameOfReference(std::nullptr_t = nullptr) noexcept {}
        ISpatialStageFrameOfReference(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialStageFrameOfReference(ISpatialStageFrameOfReference const&) noexcept = default;
        ISpatialStageFrameOfReference(ISpatialStageFrameOfReference&&) noexcept = default;
        ISpatialStageFrameOfReference& operator=(ISpatialStageFrameOfReference const&) & noexcept = default;
        ISpatialStageFrameOfReference& operator=(ISpatialStageFrameOfReference&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialStageFrameOfReferenceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialStageFrameOfReferenceStatics>
    {
        ISpatialStageFrameOfReferenceStatics(std::nullptr_t = nullptr) noexcept {}
        ISpatialStageFrameOfReferenceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialStageFrameOfReferenceStatics(ISpatialStageFrameOfReferenceStatics const&) noexcept = default;
        ISpatialStageFrameOfReferenceStatics(ISpatialStageFrameOfReferenceStatics&&) noexcept = default;
        ISpatialStageFrameOfReferenceStatics& operator=(ISpatialStageFrameOfReferenceStatics const&) & noexcept = default;
        ISpatialStageFrameOfReferenceStatics& operator=(ISpatialStageFrameOfReferenceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISpatialStationaryFrameOfReference :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialStationaryFrameOfReference>
    {
        ISpatialStationaryFrameOfReference(std::nullptr_t = nullptr) noexcept {}
        ISpatialStationaryFrameOfReference(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISpatialStationaryFrameOfReference(ISpatialStationaryFrameOfReference const&) noexcept = default;
        ISpatialStationaryFrameOfReference(ISpatialStationaryFrameOfReference&&) noexcept = default;
        ISpatialStationaryFrameOfReference& operator=(ISpatialStationaryFrameOfReference const&) & noexcept = default;
        ISpatialStationaryFrameOfReference& operator=(ISpatialStationaryFrameOfReference&&) & noexcept = default;
    };
}
#endif
