// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Storage_Pickers_Provider_2_H
#define WINRT_Windows_Storage_Pickers_Provider_2_H
#include "winrt/impl/Windows.Storage.Pickers.Provider.1.h"
WINRT_EXPORT namespace winrt::Windows::Storage::Pickers::Provider
{
    struct __declspec(empty_bases) FileOpenPickerUI : winrt::Windows::Storage::Pickers::Provider::IFileOpenPickerUI
    {
        FileOpenPickerUI(std::nullptr_t) noexcept {}
        FileOpenPickerUI(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::Pickers::Provider::IFileOpenPickerUI(ptr, take_ownership_from_abi) {}
        FileOpenPickerUI(FileOpenPickerUI const&) noexcept = default;
        FileOpenPickerUI(FileOpenPickerUI&&) noexcept = default;
        FileOpenPickerUI& operator=(FileOpenPickerUI const&) & noexcept = default;
        FileOpenPickerUI& operator=(FileOpenPickerUI&&) & noexcept = default;
    };
    struct __declspec(empty_bases) FileRemovedEventArgs : winrt::Windows::Storage::Pickers::Provider::IFileRemovedEventArgs
    {
        FileRemovedEventArgs(std::nullptr_t) noexcept {}
        FileRemovedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::Pickers::Provider::IFileRemovedEventArgs(ptr, take_ownership_from_abi) {}
        FileRemovedEventArgs(FileRemovedEventArgs const&) noexcept = default;
        FileRemovedEventArgs(FileRemovedEventArgs&&) noexcept = default;
        FileRemovedEventArgs& operator=(FileRemovedEventArgs const&) & noexcept = default;
        FileRemovedEventArgs& operator=(FileRemovedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) FileSavePickerUI : winrt::Windows::Storage::Pickers::Provider::IFileSavePickerUI
    {
        FileSavePickerUI(std::nullptr_t) noexcept {}
        FileSavePickerUI(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::Pickers::Provider::IFileSavePickerUI(ptr, take_ownership_from_abi) {}
        FileSavePickerUI(FileSavePickerUI const&) noexcept = default;
        FileSavePickerUI(FileSavePickerUI&&) noexcept = default;
        FileSavePickerUI& operator=(FileSavePickerUI const&) & noexcept = default;
        FileSavePickerUI& operator=(FileSavePickerUI&&) & noexcept = default;
    };
    struct __declspec(empty_bases) PickerClosingDeferral : winrt::Windows::Storage::Pickers::Provider::IPickerClosingDeferral
    {
        PickerClosingDeferral(std::nullptr_t) noexcept {}
        PickerClosingDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::Pickers::Provider::IPickerClosingDeferral(ptr, take_ownership_from_abi) {}
        PickerClosingDeferral(PickerClosingDeferral const&) noexcept = default;
        PickerClosingDeferral(PickerClosingDeferral&&) noexcept = default;
        PickerClosingDeferral& operator=(PickerClosingDeferral const&) & noexcept = default;
        PickerClosingDeferral& operator=(PickerClosingDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) PickerClosingEventArgs : winrt::Windows::Storage::Pickers::Provider::IPickerClosingEventArgs
    {
        PickerClosingEventArgs(std::nullptr_t) noexcept {}
        PickerClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::Pickers::Provider::IPickerClosingEventArgs(ptr, take_ownership_from_abi) {}
        PickerClosingEventArgs(PickerClosingEventArgs const&) noexcept = default;
        PickerClosingEventArgs(PickerClosingEventArgs&&) noexcept = default;
        PickerClosingEventArgs& operator=(PickerClosingEventArgs const&) & noexcept = default;
        PickerClosingEventArgs& operator=(PickerClosingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) PickerClosingOperation : winrt::Windows::Storage::Pickers::Provider::IPickerClosingOperation
    {
        PickerClosingOperation(std::nullptr_t) noexcept {}
        PickerClosingOperation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::Pickers::Provider::IPickerClosingOperation(ptr, take_ownership_from_abi) {}
        PickerClosingOperation(PickerClosingOperation const&) noexcept = default;
        PickerClosingOperation(PickerClosingOperation&&) noexcept = default;
        PickerClosingOperation& operator=(PickerClosingOperation const&) & noexcept = default;
        PickerClosingOperation& operator=(PickerClosingOperation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) TargetFileRequest : winrt::Windows::Storage::Pickers::Provider::ITargetFileRequest
    {
        TargetFileRequest(std::nullptr_t) noexcept {}
        TargetFileRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::Pickers::Provider::ITargetFileRequest(ptr, take_ownership_from_abi) {}
        TargetFileRequest(TargetFileRequest const&) noexcept = default;
        TargetFileRequest(TargetFileRequest&&) noexcept = default;
        TargetFileRequest& operator=(TargetFileRequest const&) & noexcept = default;
        TargetFileRequest& operator=(TargetFileRequest&&) & noexcept = default;
    };
    struct __declspec(empty_bases) TargetFileRequestDeferral : winrt::Windows::Storage::Pickers::Provider::ITargetFileRequestDeferral
    {
        TargetFileRequestDeferral(std::nullptr_t) noexcept {}
        TargetFileRequestDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::Pickers::Provider::ITargetFileRequestDeferral(ptr, take_ownership_from_abi) {}
        TargetFileRequestDeferral(TargetFileRequestDeferral const&) noexcept = default;
        TargetFileRequestDeferral(TargetFileRequestDeferral&&) noexcept = default;
        TargetFileRequestDeferral& operator=(TargetFileRequestDeferral const&) & noexcept = default;
        TargetFileRequestDeferral& operator=(TargetFileRequestDeferral&&) & noexcept = default;
    };
    struct __declspec(empty_bases) TargetFileRequestedEventArgs : winrt::Windows::Storage::Pickers::Provider::ITargetFileRequestedEventArgs
    {
        TargetFileRequestedEventArgs(std::nullptr_t) noexcept {}
        TargetFileRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Storage::Pickers::Provider::ITargetFileRequestedEventArgs(ptr, take_ownership_from_abi) {}
        TargetFileRequestedEventArgs(TargetFileRequestedEventArgs const&) noexcept = default;
        TargetFileRequestedEventArgs(TargetFileRequestedEventArgs&&) noexcept = default;
        TargetFileRequestedEventArgs& operator=(TargetFileRequestedEventArgs const&) & noexcept = default;
        TargetFileRequestedEventArgs& operator=(TargetFileRequestedEventArgs&&) & noexcept = default;
    };
}
#endif
