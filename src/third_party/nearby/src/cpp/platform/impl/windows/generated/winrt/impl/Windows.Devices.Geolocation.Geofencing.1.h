// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Devices_Geolocation_Geofencing_1_H
#define WINRT_Windows_Devices_Geolocation_Geofencing_1_H
#include "winrt/impl/Windows.Devices.Geolocation.Geofencing.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Geolocation::Geofencing
{
    struct __declspec(empty_bases) IGeofence :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGeofence>
    {
        IGeofence(std::nullptr_t = nullptr) noexcept {}
        IGeofence(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGeofence(IGeofence const&) noexcept = default;
        IGeofence(IGeofence&&) noexcept = default;
        IGeofence& operator=(IGeofence const&) & noexcept = default;
        IGeofence& operator=(IGeofence&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGeofenceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGeofenceFactory>
    {
        IGeofenceFactory(std::nullptr_t = nullptr) noexcept {}
        IGeofenceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGeofenceFactory(IGeofenceFactory const&) noexcept = default;
        IGeofenceFactory(IGeofenceFactory&&) noexcept = default;
        IGeofenceFactory& operator=(IGeofenceFactory const&) & noexcept = default;
        IGeofenceFactory& operator=(IGeofenceFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGeofenceMonitor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGeofenceMonitor>
    {
        IGeofenceMonitor(std::nullptr_t = nullptr) noexcept {}
        IGeofenceMonitor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGeofenceMonitor(IGeofenceMonitor const&) noexcept = default;
        IGeofenceMonitor(IGeofenceMonitor&&) noexcept = default;
        IGeofenceMonitor& operator=(IGeofenceMonitor const&) & noexcept = default;
        IGeofenceMonitor& operator=(IGeofenceMonitor&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGeofenceMonitorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGeofenceMonitorStatics>
    {
        IGeofenceMonitorStatics(std::nullptr_t = nullptr) noexcept {}
        IGeofenceMonitorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGeofenceMonitorStatics(IGeofenceMonitorStatics const&) noexcept = default;
        IGeofenceMonitorStatics(IGeofenceMonitorStatics&&) noexcept = default;
        IGeofenceMonitorStatics& operator=(IGeofenceMonitorStatics const&) & noexcept = default;
        IGeofenceMonitorStatics& operator=(IGeofenceMonitorStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IGeofenceStateChangeReport :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGeofenceStateChangeReport>
    {
        IGeofenceStateChangeReport(std::nullptr_t = nullptr) noexcept {}
        IGeofenceStateChangeReport(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IGeofenceStateChangeReport(IGeofenceStateChangeReport const&) noexcept = default;
        IGeofenceStateChangeReport(IGeofenceStateChangeReport&&) noexcept = default;
        IGeofenceStateChangeReport& operator=(IGeofenceStateChangeReport const&) & noexcept = default;
        IGeofenceStateChangeReport& operator=(IGeofenceStateChangeReport&&) & noexcept = default;
    };
}
#endif
