// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_ApplicationModel_Core_1_H
#define WINRT_Windows_ApplicationModel_Core_1_H
#include "winrt/impl/Windows.ApplicationModel.Core.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::Core
{
    struct __declspec(empty_bases) IAppListEntry :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppListEntry>
    {
        IAppListEntry(std::nullptr_t = nullptr) noexcept {}
        IAppListEntry(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppListEntry(IAppListEntry const&) noexcept = default;
        IAppListEntry(IAppListEntry&&) noexcept = default;
        IAppListEntry& operator=(IAppListEntry const&) & noexcept = default;
        IAppListEntry& operator=(IAppListEntry&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppListEntry2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppListEntry2>
    {
        IAppListEntry2(std::nullptr_t = nullptr) noexcept {}
        IAppListEntry2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppListEntry2(IAppListEntry2 const&) noexcept = default;
        IAppListEntry2(IAppListEntry2&&) noexcept = default;
        IAppListEntry2& operator=(IAppListEntry2 const&) & noexcept = default;
        IAppListEntry2& operator=(IAppListEntry2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAppListEntry3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppListEntry3>
    {
        IAppListEntry3(std::nullptr_t = nullptr) noexcept {}
        IAppListEntry3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAppListEntry3(IAppListEntry3 const&) noexcept = default;
        IAppListEntry3(IAppListEntry3&&) noexcept = default;
        IAppListEntry3& operator=(IAppListEntry3 const&) & noexcept = default;
        IAppListEntry3& operator=(IAppListEntry3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplication :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplication>
    {
        ICoreApplication(std::nullptr_t = nullptr) noexcept {}
        ICoreApplication(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplication(ICoreApplication const&) noexcept = default;
        ICoreApplication(ICoreApplication&&) noexcept = default;
        ICoreApplication& operator=(ICoreApplication const&) & noexcept = default;
        ICoreApplication& operator=(ICoreApplication&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplication2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplication2>
    {
        ICoreApplication2(std::nullptr_t = nullptr) noexcept {}
        ICoreApplication2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplication2(ICoreApplication2 const&) noexcept = default;
        ICoreApplication2(ICoreApplication2&&) noexcept = default;
        ICoreApplication2& operator=(ICoreApplication2 const&) & noexcept = default;
        ICoreApplication2& operator=(ICoreApplication2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplication3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplication3>
    {
        ICoreApplication3(std::nullptr_t = nullptr) noexcept {}
        ICoreApplication3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplication3(ICoreApplication3 const&) noexcept = default;
        ICoreApplication3(ICoreApplication3&&) noexcept = default;
        ICoreApplication3& operator=(ICoreApplication3 const&) & noexcept = default;
        ICoreApplication3& operator=(ICoreApplication3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplicationExit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplicationExit>
    {
        ICoreApplicationExit(std::nullptr_t = nullptr) noexcept {}
        ICoreApplicationExit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplicationExit(ICoreApplicationExit const&) noexcept = default;
        ICoreApplicationExit(ICoreApplicationExit&&) noexcept = default;
        ICoreApplicationExit& operator=(ICoreApplicationExit const&) & noexcept = default;
        ICoreApplicationExit& operator=(ICoreApplicationExit&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplicationUnhandledError :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplicationUnhandledError>
    {
        ICoreApplicationUnhandledError(std::nullptr_t = nullptr) noexcept {}
        ICoreApplicationUnhandledError(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplicationUnhandledError(ICoreApplicationUnhandledError const&) noexcept = default;
        ICoreApplicationUnhandledError(ICoreApplicationUnhandledError&&) noexcept = default;
        ICoreApplicationUnhandledError& operator=(ICoreApplicationUnhandledError const&) & noexcept = default;
        ICoreApplicationUnhandledError& operator=(ICoreApplicationUnhandledError&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplicationUseCount :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplicationUseCount>
    {
        ICoreApplicationUseCount(std::nullptr_t = nullptr) noexcept {}
        ICoreApplicationUseCount(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplicationUseCount(ICoreApplicationUseCount const&) noexcept = default;
        ICoreApplicationUseCount(ICoreApplicationUseCount&&) noexcept = default;
        ICoreApplicationUseCount& operator=(ICoreApplicationUseCount const&) & noexcept = default;
        ICoreApplicationUseCount& operator=(ICoreApplicationUseCount&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplicationView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplicationView>
    {
        ICoreApplicationView(std::nullptr_t = nullptr) noexcept {}
        ICoreApplicationView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplicationView(ICoreApplicationView const&) noexcept = default;
        ICoreApplicationView(ICoreApplicationView&&) noexcept = default;
        ICoreApplicationView& operator=(ICoreApplicationView const&) & noexcept = default;
        ICoreApplicationView& operator=(ICoreApplicationView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplicationView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplicationView2>
    {
        ICoreApplicationView2(std::nullptr_t = nullptr) noexcept {}
        ICoreApplicationView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplicationView2(ICoreApplicationView2 const&) noexcept = default;
        ICoreApplicationView2(ICoreApplicationView2&&) noexcept = default;
        ICoreApplicationView2& operator=(ICoreApplicationView2 const&) & noexcept = default;
        ICoreApplicationView2& operator=(ICoreApplicationView2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplicationView3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplicationView3>
    {
        ICoreApplicationView3(std::nullptr_t = nullptr) noexcept {}
        ICoreApplicationView3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplicationView3(ICoreApplicationView3 const&) noexcept = default;
        ICoreApplicationView3(ICoreApplicationView3&&) noexcept = default;
        ICoreApplicationView3& operator=(ICoreApplicationView3 const&) & noexcept = default;
        ICoreApplicationView3& operator=(ICoreApplicationView3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplicationView5 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplicationView5>
    {
        ICoreApplicationView5(std::nullptr_t = nullptr) noexcept {}
        ICoreApplicationView5(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplicationView5(ICoreApplicationView5 const&) noexcept = default;
        ICoreApplicationView5(ICoreApplicationView5&&) noexcept = default;
        ICoreApplicationView5& operator=(ICoreApplicationView5 const&) & noexcept = default;
        ICoreApplicationView5& operator=(ICoreApplicationView5&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplicationView6 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplicationView6>
    {
        ICoreApplicationView6(std::nullptr_t = nullptr) noexcept {}
        ICoreApplicationView6(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplicationView6(ICoreApplicationView6 const&) noexcept = default;
        ICoreApplicationView6(ICoreApplicationView6&&) noexcept = default;
        ICoreApplicationView6& operator=(ICoreApplicationView6 const&) & noexcept = default;
        ICoreApplicationView6& operator=(ICoreApplicationView6&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreApplicationViewTitleBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreApplicationViewTitleBar>
    {
        ICoreApplicationViewTitleBar(std::nullptr_t = nullptr) noexcept {}
        ICoreApplicationViewTitleBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreApplicationViewTitleBar(ICoreApplicationViewTitleBar const&) noexcept = default;
        ICoreApplicationViewTitleBar(ICoreApplicationViewTitleBar&&) noexcept = default;
        ICoreApplicationViewTitleBar& operator=(ICoreApplicationViewTitleBar const&) & noexcept = default;
        ICoreApplicationViewTitleBar& operator=(ICoreApplicationViewTitleBar&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreImmersiveApplication :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreImmersiveApplication>
    {
        ICoreImmersiveApplication(std::nullptr_t = nullptr) noexcept {}
        ICoreImmersiveApplication(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreImmersiveApplication(ICoreImmersiveApplication const&) noexcept = default;
        ICoreImmersiveApplication(ICoreImmersiveApplication&&) noexcept = default;
        ICoreImmersiveApplication& operator=(ICoreImmersiveApplication const&) & noexcept = default;
        ICoreImmersiveApplication& operator=(ICoreImmersiveApplication&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreImmersiveApplication2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreImmersiveApplication2>
    {
        ICoreImmersiveApplication2(std::nullptr_t = nullptr) noexcept {}
        ICoreImmersiveApplication2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreImmersiveApplication2(ICoreImmersiveApplication2 const&) noexcept = default;
        ICoreImmersiveApplication2(ICoreImmersiveApplication2&&) noexcept = default;
        ICoreImmersiveApplication2& operator=(ICoreImmersiveApplication2 const&) & noexcept = default;
        ICoreImmersiveApplication2& operator=(ICoreImmersiveApplication2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICoreImmersiveApplication3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreImmersiveApplication3>
    {
        ICoreImmersiveApplication3(std::nullptr_t = nullptr) noexcept {}
        ICoreImmersiveApplication3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICoreImmersiveApplication3(ICoreImmersiveApplication3 const&) noexcept = default;
        ICoreImmersiveApplication3(ICoreImmersiveApplication3&&) noexcept = default;
        ICoreImmersiveApplication3& operator=(ICoreImmersiveApplication3 const&) & noexcept = default;
        ICoreImmersiveApplication3& operator=(ICoreImmersiveApplication3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkView>
    {
        IFrameworkView(std::nullptr_t = nullptr) noexcept {}
        IFrameworkView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkView(IFrameworkView const&) noexcept = default;
        IFrameworkView(IFrameworkView&&) noexcept = default;
        IFrameworkView& operator=(IFrameworkView const&) & noexcept = default;
        IFrameworkView& operator=(IFrameworkView&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFrameworkViewSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkViewSource>
    {
        IFrameworkViewSource(std::nullptr_t = nullptr) noexcept {}
        IFrameworkViewSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFrameworkViewSource(IFrameworkViewSource const&) noexcept = default;
        IFrameworkViewSource(IFrameworkViewSource&&) noexcept = default;
        IFrameworkViewSource& operator=(IFrameworkViewSource const&) & noexcept = default;
        IFrameworkViewSource& operator=(IFrameworkViewSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHostedViewClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHostedViewClosingEventArgs>
    {
        IHostedViewClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHostedViewClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHostedViewClosingEventArgs(IHostedViewClosingEventArgs const&) noexcept = default;
        IHostedViewClosingEventArgs(IHostedViewClosingEventArgs&&) noexcept = default;
        IHostedViewClosingEventArgs& operator=(IHostedViewClosingEventArgs const&) & noexcept = default;
        IHostedViewClosingEventArgs& operator=(IHostedViewClosingEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUnhandledError :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUnhandledError>
    {
        IUnhandledError(std::nullptr_t = nullptr) noexcept {}
        IUnhandledError(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUnhandledError(IUnhandledError const&) noexcept = default;
        IUnhandledError(IUnhandledError&&) noexcept = default;
        IUnhandledError& operator=(IUnhandledError const&) & noexcept = default;
        IUnhandledError& operator=(IUnhandledError&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IUnhandledErrorDetectedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUnhandledErrorDetectedEventArgs>
    {
        IUnhandledErrorDetectedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IUnhandledErrorDetectedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IUnhandledErrorDetectedEventArgs(IUnhandledErrorDetectedEventArgs const&) noexcept = default;
        IUnhandledErrorDetectedEventArgs(IUnhandledErrorDetectedEventArgs&&) noexcept = default;
        IUnhandledErrorDetectedEventArgs& operator=(IUnhandledErrorDetectedEventArgs const&) & noexcept = default;
        IUnhandledErrorDetectedEventArgs& operator=(IUnhandledErrorDetectedEventArgs&&) & noexcept = default;
    };
}
#endif
