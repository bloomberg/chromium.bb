// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Security_Cryptography_Core_1_H
#define WINRT_Windows_Security_Cryptography_Core_1_H
#include "winrt/impl/Windows.Security.Cryptography.Core.0.h"
WINRT_EXPORT namespace winrt::Windows::Security::Cryptography::Core
{
    struct __declspec(empty_bases) IAsymmetricAlgorithmNamesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAsymmetricAlgorithmNamesStatics>
    {
        IAsymmetricAlgorithmNamesStatics(std::nullptr_t = nullptr) noexcept {}
        IAsymmetricAlgorithmNamesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAsymmetricAlgorithmNamesStatics(IAsymmetricAlgorithmNamesStatics const&) noexcept = default;
        IAsymmetricAlgorithmNamesStatics(IAsymmetricAlgorithmNamesStatics&&) noexcept = default;
        IAsymmetricAlgorithmNamesStatics& operator=(IAsymmetricAlgorithmNamesStatics const&) & noexcept = default;
        IAsymmetricAlgorithmNamesStatics& operator=(IAsymmetricAlgorithmNamesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAsymmetricAlgorithmNamesStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAsymmetricAlgorithmNamesStatics2>
    {
        IAsymmetricAlgorithmNamesStatics2(std::nullptr_t = nullptr) noexcept {}
        IAsymmetricAlgorithmNamesStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAsymmetricAlgorithmNamesStatics2(IAsymmetricAlgorithmNamesStatics2 const&) noexcept = default;
        IAsymmetricAlgorithmNamesStatics2(IAsymmetricAlgorithmNamesStatics2&&) noexcept = default;
        IAsymmetricAlgorithmNamesStatics2& operator=(IAsymmetricAlgorithmNamesStatics2 const&) & noexcept = default;
        IAsymmetricAlgorithmNamesStatics2& operator=(IAsymmetricAlgorithmNamesStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAsymmetricKeyAlgorithmProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAsymmetricKeyAlgorithmProvider>
    {
        IAsymmetricKeyAlgorithmProvider(std::nullptr_t = nullptr) noexcept {}
        IAsymmetricKeyAlgorithmProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAsymmetricKeyAlgorithmProvider(IAsymmetricKeyAlgorithmProvider const&) noexcept = default;
        IAsymmetricKeyAlgorithmProvider(IAsymmetricKeyAlgorithmProvider&&) noexcept = default;
        IAsymmetricKeyAlgorithmProvider& operator=(IAsymmetricKeyAlgorithmProvider const&) & noexcept = default;
        IAsymmetricKeyAlgorithmProvider& operator=(IAsymmetricKeyAlgorithmProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAsymmetricKeyAlgorithmProvider2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAsymmetricKeyAlgorithmProvider2>
    {
        IAsymmetricKeyAlgorithmProvider2(std::nullptr_t = nullptr) noexcept {}
        IAsymmetricKeyAlgorithmProvider2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAsymmetricKeyAlgorithmProvider2(IAsymmetricKeyAlgorithmProvider2 const&) noexcept = default;
        IAsymmetricKeyAlgorithmProvider2(IAsymmetricKeyAlgorithmProvider2&&) noexcept = default;
        IAsymmetricKeyAlgorithmProvider2& operator=(IAsymmetricKeyAlgorithmProvider2 const&) & noexcept = default;
        IAsymmetricKeyAlgorithmProvider2& operator=(IAsymmetricKeyAlgorithmProvider2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAsymmetricKeyAlgorithmProviderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAsymmetricKeyAlgorithmProviderStatics>
    {
        IAsymmetricKeyAlgorithmProviderStatics(std::nullptr_t = nullptr) noexcept {}
        IAsymmetricKeyAlgorithmProviderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAsymmetricKeyAlgorithmProviderStatics(IAsymmetricKeyAlgorithmProviderStatics const&) noexcept = default;
        IAsymmetricKeyAlgorithmProviderStatics(IAsymmetricKeyAlgorithmProviderStatics&&) noexcept = default;
        IAsymmetricKeyAlgorithmProviderStatics& operator=(IAsymmetricKeyAlgorithmProviderStatics const&) & noexcept = default;
        IAsymmetricKeyAlgorithmProviderStatics& operator=(IAsymmetricKeyAlgorithmProviderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICryptographicEngineStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICryptographicEngineStatics>
    {
        ICryptographicEngineStatics(std::nullptr_t = nullptr) noexcept {}
        ICryptographicEngineStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICryptographicEngineStatics(ICryptographicEngineStatics const&) noexcept = default;
        ICryptographicEngineStatics(ICryptographicEngineStatics&&) noexcept = default;
        ICryptographicEngineStatics& operator=(ICryptographicEngineStatics const&) & noexcept = default;
        ICryptographicEngineStatics& operator=(ICryptographicEngineStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICryptographicEngineStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICryptographicEngineStatics2>
    {
        ICryptographicEngineStatics2(std::nullptr_t = nullptr) noexcept {}
        ICryptographicEngineStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICryptographicEngineStatics2(ICryptographicEngineStatics2 const&) noexcept = default;
        ICryptographicEngineStatics2(ICryptographicEngineStatics2&&) noexcept = default;
        ICryptographicEngineStatics2& operator=(ICryptographicEngineStatics2 const&) & noexcept = default;
        ICryptographicEngineStatics2& operator=(ICryptographicEngineStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ICryptographicKey :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICryptographicKey>
    {
        ICryptographicKey(std::nullptr_t = nullptr) noexcept {}
        ICryptographicKey(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ICryptographicKey(ICryptographicKey const&) noexcept = default;
        ICryptographicKey(ICryptographicKey&&) noexcept = default;
        ICryptographicKey& operator=(ICryptographicKey const&) & noexcept = default;
        ICryptographicKey& operator=(ICryptographicKey&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEccCurveNamesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEccCurveNamesStatics>
    {
        IEccCurveNamesStatics(std::nullptr_t = nullptr) noexcept {}
        IEccCurveNamesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEccCurveNamesStatics(IEccCurveNamesStatics const&) noexcept = default;
        IEccCurveNamesStatics(IEccCurveNamesStatics&&) noexcept = default;
        IEccCurveNamesStatics& operator=(IEccCurveNamesStatics const&) & noexcept = default;
        IEccCurveNamesStatics& operator=(IEccCurveNamesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEncryptedAndAuthenticatedData :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEncryptedAndAuthenticatedData>
    {
        IEncryptedAndAuthenticatedData(std::nullptr_t = nullptr) noexcept {}
        IEncryptedAndAuthenticatedData(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEncryptedAndAuthenticatedData(IEncryptedAndAuthenticatedData const&) noexcept = default;
        IEncryptedAndAuthenticatedData(IEncryptedAndAuthenticatedData&&) noexcept = default;
        IEncryptedAndAuthenticatedData& operator=(IEncryptedAndAuthenticatedData const&) & noexcept = default;
        IEncryptedAndAuthenticatedData& operator=(IEncryptedAndAuthenticatedData&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHashAlgorithmNamesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHashAlgorithmNamesStatics>
    {
        IHashAlgorithmNamesStatics(std::nullptr_t = nullptr) noexcept {}
        IHashAlgorithmNamesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHashAlgorithmNamesStatics(IHashAlgorithmNamesStatics const&) noexcept = default;
        IHashAlgorithmNamesStatics(IHashAlgorithmNamesStatics&&) noexcept = default;
        IHashAlgorithmNamesStatics& operator=(IHashAlgorithmNamesStatics const&) & noexcept = default;
        IHashAlgorithmNamesStatics& operator=(IHashAlgorithmNamesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHashAlgorithmProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHashAlgorithmProvider>
    {
        IHashAlgorithmProvider(std::nullptr_t = nullptr) noexcept {}
        IHashAlgorithmProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHashAlgorithmProvider(IHashAlgorithmProvider const&) noexcept = default;
        IHashAlgorithmProvider(IHashAlgorithmProvider&&) noexcept = default;
        IHashAlgorithmProvider& operator=(IHashAlgorithmProvider const&) & noexcept = default;
        IHashAlgorithmProvider& operator=(IHashAlgorithmProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHashAlgorithmProviderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHashAlgorithmProviderStatics>
    {
        IHashAlgorithmProviderStatics(std::nullptr_t = nullptr) noexcept {}
        IHashAlgorithmProviderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHashAlgorithmProviderStatics(IHashAlgorithmProviderStatics const&) noexcept = default;
        IHashAlgorithmProviderStatics(IHashAlgorithmProviderStatics&&) noexcept = default;
        IHashAlgorithmProviderStatics& operator=(IHashAlgorithmProviderStatics const&) & noexcept = default;
        IHashAlgorithmProviderStatics& operator=(IHashAlgorithmProviderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IHashComputation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHashComputation>
    {
        IHashComputation(std::nullptr_t = nullptr) noexcept {}
        IHashComputation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IHashComputation(IHashComputation const&) noexcept = default;
        IHashComputation(IHashComputation&&) noexcept = default;
        IHashComputation& operator=(IHashComputation const&) & noexcept = default;
        IHashComputation& operator=(IHashComputation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyDerivationAlgorithmNamesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyDerivationAlgorithmNamesStatics>
    {
        IKeyDerivationAlgorithmNamesStatics(std::nullptr_t = nullptr) noexcept {}
        IKeyDerivationAlgorithmNamesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyDerivationAlgorithmNamesStatics(IKeyDerivationAlgorithmNamesStatics const&) noexcept = default;
        IKeyDerivationAlgorithmNamesStatics(IKeyDerivationAlgorithmNamesStatics&&) noexcept = default;
        IKeyDerivationAlgorithmNamesStatics& operator=(IKeyDerivationAlgorithmNamesStatics const&) & noexcept = default;
        IKeyDerivationAlgorithmNamesStatics& operator=(IKeyDerivationAlgorithmNamesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyDerivationAlgorithmNamesStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyDerivationAlgorithmNamesStatics2>
    {
        IKeyDerivationAlgorithmNamesStatics2(std::nullptr_t = nullptr) noexcept {}
        IKeyDerivationAlgorithmNamesStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyDerivationAlgorithmNamesStatics2(IKeyDerivationAlgorithmNamesStatics2 const&) noexcept = default;
        IKeyDerivationAlgorithmNamesStatics2(IKeyDerivationAlgorithmNamesStatics2&&) noexcept = default;
        IKeyDerivationAlgorithmNamesStatics2& operator=(IKeyDerivationAlgorithmNamesStatics2 const&) & noexcept = default;
        IKeyDerivationAlgorithmNamesStatics2& operator=(IKeyDerivationAlgorithmNamesStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyDerivationAlgorithmProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyDerivationAlgorithmProvider>
    {
        IKeyDerivationAlgorithmProvider(std::nullptr_t = nullptr) noexcept {}
        IKeyDerivationAlgorithmProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyDerivationAlgorithmProvider(IKeyDerivationAlgorithmProvider const&) noexcept = default;
        IKeyDerivationAlgorithmProvider(IKeyDerivationAlgorithmProvider&&) noexcept = default;
        IKeyDerivationAlgorithmProvider& operator=(IKeyDerivationAlgorithmProvider const&) & noexcept = default;
        IKeyDerivationAlgorithmProvider& operator=(IKeyDerivationAlgorithmProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyDerivationAlgorithmProviderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyDerivationAlgorithmProviderStatics>
    {
        IKeyDerivationAlgorithmProviderStatics(std::nullptr_t = nullptr) noexcept {}
        IKeyDerivationAlgorithmProviderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyDerivationAlgorithmProviderStatics(IKeyDerivationAlgorithmProviderStatics const&) noexcept = default;
        IKeyDerivationAlgorithmProviderStatics(IKeyDerivationAlgorithmProviderStatics&&) noexcept = default;
        IKeyDerivationAlgorithmProviderStatics& operator=(IKeyDerivationAlgorithmProviderStatics const&) & noexcept = default;
        IKeyDerivationAlgorithmProviderStatics& operator=(IKeyDerivationAlgorithmProviderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyDerivationParameters :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyDerivationParameters>
    {
        IKeyDerivationParameters(std::nullptr_t = nullptr) noexcept {}
        IKeyDerivationParameters(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyDerivationParameters(IKeyDerivationParameters const&) noexcept = default;
        IKeyDerivationParameters(IKeyDerivationParameters&&) noexcept = default;
        IKeyDerivationParameters& operator=(IKeyDerivationParameters const&) & noexcept = default;
        IKeyDerivationParameters& operator=(IKeyDerivationParameters&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyDerivationParameters2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyDerivationParameters2>
    {
        IKeyDerivationParameters2(std::nullptr_t = nullptr) noexcept {}
        IKeyDerivationParameters2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyDerivationParameters2(IKeyDerivationParameters2 const&) noexcept = default;
        IKeyDerivationParameters2(IKeyDerivationParameters2&&) noexcept = default;
        IKeyDerivationParameters2& operator=(IKeyDerivationParameters2 const&) & noexcept = default;
        IKeyDerivationParameters2& operator=(IKeyDerivationParameters2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyDerivationParametersStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyDerivationParametersStatics>
    {
        IKeyDerivationParametersStatics(std::nullptr_t = nullptr) noexcept {}
        IKeyDerivationParametersStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyDerivationParametersStatics(IKeyDerivationParametersStatics const&) noexcept = default;
        IKeyDerivationParametersStatics(IKeyDerivationParametersStatics&&) noexcept = default;
        IKeyDerivationParametersStatics& operator=(IKeyDerivationParametersStatics const&) & noexcept = default;
        IKeyDerivationParametersStatics& operator=(IKeyDerivationParametersStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IKeyDerivationParametersStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyDerivationParametersStatics2>
    {
        IKeyDerivationParametersStatics2(std::nullptr_t = nullptr) noexcept {}
        IKeyDerivationParametersStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IKeyDerivationParametersStatics2(IKeyDerivationParametersStatics2 const&) noexcept = default;
        IKeyDerivationParametersStatics2(IKeyDerivationParametersStatics2&&) noexcept = default;
        IKeyDerivationParametersStatics2& operator=(IKeyDerivationParametersStatics2 const&) & noexcept = default;
        IKeyDerivationParametersStatics2& operator=(IKeyDerivationParametersStatics2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMacAlgorithmNamesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMacAlgorithmNamesStatics>
    {
        IMacAlgorithmNamesStatics(std::nullptr_t = nullptr) noexcept {}
        IMacAlgorithmNamesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMacAlgorithmNamesStatics(IMacAlgorithmNamesStatics const&) noexcept = default;
        IMacAlgorithmNamesStatics(IMacAlgorithmNamesStatics&&) noexcept = default;
        IMacAlgorithmNamesStatics& operator=(IMacAlgorithmNamesStatics const&) & noexcept = default;
        IMacAlgorithmNamesStatics& operator=(IMacAlgorithmNamesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMacAlgorithmProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMacAlgorithmProvider>
    {
        IMacAlgorithmProvider(std::nullptr_t = nullptr) noexcept {}
        IMacAlgorithmProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMacAlgorithmProvider(IMacAlgorithmProvider const&) noexcept = default;
        IMacAlgorithmProvider(IMacAlgorithmProvider&&) noexcept = default;
        IMacAlgorithmProvider& operator=(IMacAlgorithmProvider const&) & noexcept = default;
        IMacAlgorithmProvider& operator=(IMacAlgorithmProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMacAlgorithmProvider2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMacAlgorithmProvider2>
    {
        IMacAlgorithmProvider2(std::nullptr_t = nullptr) noexcept {}
        IMacAlgorithmProvider2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMacAlgorithmProvider2(IMacAlgorithmProvider2 const&) noexcept = default;
        IMacAlgorithmProvider2(IMacAlgorithmProvider2&&) noexcept = default;
        IMacAlgorithmProvider2& operator=(IMacAlgorithmProvider2 const&) & noexcept = default;
        IMacAlgorithmProvider2& operator=(IMacAlgorithmProvider2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IMacAlgorithmProviderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMacAlgorithmProviderStatics>
    {
        IMacAlgorithmProviderStatics(std::nullptr_t = nullptr) noexcept {}
        IMacAlgorithmProviderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IMacAlgorithmProviderStatics(IMacAlgorithmProviderStatics const&) noexcept = default;
        IMacAlgorithmProviderStatics(IMacAlgorithmProviderStatics&&) noexcept = default;
        IMacAlgorithmProviderStatics& operator=(IMacAlgorithmProviderStatics const&) & noexcept = default;
        IMacAlgorithmProviderStatics& operator=(IMacAlgorithmProviderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPersistedKeyProviderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersistedKeyProviderStatics>
    {
        IPersistedKeyProviderStatics(std::nullptr_t = nullptr) noexcept {}
        IPersistedKeyProviderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPersistedKeyProviderStatics(IPersistedKeyProviderStatics const&) noexcept = default;
        IPersistedKeyProviderStatics(IPersistedKeyProviderStatics&&) noexcept = default;
        IPersistedKeyProviderStatics& operator=(IPersistedKeyProviderStatics const&) & noexcept = default;
        IPersistedKeyProviderStatics& operator=(IPersistedKeyProviderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISymmetricAlgorithmNamesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymmetricAlgorithmNamesStatics>
    {
        ISymmetricAlgorithmNamesStatics(std::nullptr_t = nullptr) noexcept {}
        ISymmetricAlgorithmNamesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISymmetricAlgorithmNamesStatics(ISymmetricAlgorithmNamesStatics const&) noexcept = default;
        ISymmetricAlgorithmNamesStatics(ISymmetricAlgorithmNamesStatics&&) noexcept = default;
        ISymmetricAlgorithmNamesStatics& operator=(ISymmetricAlgorithmNamesStatics const&) & noexcept = default;
        ISymmetricAlgorithmNamesStatics& operator=(ISymmetricAlgorithmNamesStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISymmetricKeyAlgorithmProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymmetricKeyAlgorithmProvider>
    {
        ISymmetricKeyAlgorithmProvider(std::nullptr_t = nullptr) noexcept {}
        ISymmetricKeyAlgorithmProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISymmetricKeyAlgorithmProvider(ISymmetricKeyAlgorithmProvider const&) noexcept = default;
        ISymmetricKeyAlgorithmProvider(ISymmetricKeyAlgorithmProvider&&) noexcept = default;
        ISymmetricKeyAlgorithmProvider& operator=(ISymmetricKeyAlgorithmProvider const&) & noexcept = default;
        ISymmetricKeyAlgorithmProvider& operator=(ISymmetricKeyAlgorithmProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISymmetricKeyAlgorithmProviderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymmetricKeyAlgorithmProviderStatics>
    {
        ISymmetricKeyAlgorithmProviderStatics(std::nullptr_t = nullptr) noexcept {}
        ISymmetricKeyAlgorithmProviderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISymmetricKeyAlgorithmProviderStatics(ISymmetricKeyAlgorithmProviderStatics const&) noexcept = default;
        ISymmetricKeyAlgorithmProviderStatics(ISymmetricKeyAlgorithmProviderStatics&&) noexcept = default;
        ISymmetricKeyAlgorithmProviderStatics& operator=(ISymmetricKeyAlgorithmProviderStatics const&) & noexcept = default;
        ISymmetricKeyAlgorithmProviderStatics& operator=(ISymmetricKeyAlgorithmProviderStatics&&) & noexcept = default;
    };
}
#endif
