# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")

assert(is_chromeos_ash, "Non-ChromeOS builds cannot depend on //ash")

component("constants") {
  output_name = "ash_ime_constants"
  defines = [ "IS_ASH_IME_CONSTANTS_IMPL" ]
  deps = [
    "//base",
    "//build:branding_buildflags",
  ]
  sources = [
    "constants.cc",
    "constants.h",
  ]
}

source_set("decoder") {
  sources = [
    "ime_decoder.cc",
    "ime_decoder.h",
  ]

  deps = [
    ":constants",
    "//ash/constants",
    "//ash/services/ime/public/cpp/shared_lib:interfaces",
    "//base",
  ]
}

source_set("lib") {
  sources = [
    "connection_factory.cc",
    "connection_factory.h",
    "decoder/decoder_engine.cc",
    "decoder/decoder_engine.h",
    "decoder/system_engine.cc",
    "decoder/system_engine.h",
    "ime_service.cc",
    "ime_service.h",
    "rule_based_engine.cc",
    "rule_based_engine.h",
  ]

  deps = [
    ":constants",
    ":decoder",
    "//ash/constants",
    "//ash/services/ime/public/cpp:rulebased",
    "//ash/services/ime/public/cpp/shared_lib:interfaces",
    "//ash/services/ime/public/mojom",
    "//base",
  ]
}

source_set("sandbox_hook") {
  sources = [
    "ime_sandbox_hook.cc",
    "ime_sandbox_hook.h",
  ]

  deps = [
    ":constants",
    ":decoder",
    "//base",
    "//sandbox/linux:sandbox_services",
    "//sandbox/policy",
  ]
}

source_set("unit_tests") {
  testonly = true
  deps = [ "//ash/services/ime/public/cpp:rulebased_unit_tests" ]
}

source_set("services_unittests") {
  testonly = true
  deps = [
    ":lib",
    ":test_support",
    "//ash/constants",
    "//ash/services/ime:decoder",
    "//ash/services/ime/public/mojom",
    "//base",
    "//base/test:test_support",
    "//mojo/public/cpp/bindings",
    "//services/network:test_support",
    "//testing/gmock",
    "//testing/gtest",
  ]
  sources = [
    "decoder/system_engine_unittest.cc",
    "ime_service_unittest.cc",
  ]
}

static_library("test_support") {
  testonly = true
  sources = [
    "mock_input_channel.cc",
    "mock_input_channel.h",
  ]
  deps = [
    "//ash/services/ime/public/mojom",
    "//testing/gmock",
  ]
}
