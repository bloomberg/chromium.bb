# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//mojo/public/tools/bindings/mojom.gni")

# C++ headers and sources that can be used outside ash.
component("cpp") {
  sources = [
    "accelerators.cc",
    "accelerators.h",
    "accessibility_controller.cc",
    "accessibility_controller.h",
    "accessibility_controller_client.h",
    "accessibility_controller_enums.h",
    "accessibility_focus_ring_controller.cc",
    "accessibility_focus_ring_controller.h",
    "accessibility_focus_ring_info.cc",
    "accessibility_focus_ring_info.h",
    "ambient/photo_controller.cc",
    "ambient/photo_controller.h",
    "android_intent_helper.cc",
    "android_intent_helper.h",
    "app_list/app_list_client.h",
    "app_list/app_list_config.cc",
    "app_list/app_list_config.h",
    "app_list/app_list_controller.cc",
    "app_list/app_list_controller.h",
    "app_list/app_list_features.cc",
    "app_list/app_list_features.h",
    "app_list/app_list_metrics.cc",
    "app_list/app_list_metrics.h",
    "app_list/app_list_switches.cc",
    "app_list/app_list_switches.h",
    "app_list/app_list_types.cc",
    "app_list/app_list_types.h",
    "app_list/internal_app_id_constants.h",
    "app_list/term_break_iterator.cc",
    "app_list/term_break_iterator.h",
    "app_list/tokenized_string.cc",
    "app_list/tokenized_string.h",
    "app_list/tokenized_string_char_iterator.cc",
    "app_list/tokenized_string_char_iterator.h",
    "app_list/tokenized_string_match.cc",
    "app_list/tokenized_string_match.h",
    "app_menu_constants.h",
    "app_types.h",
    "arc_app_id_provider.cc",
    "arc_app_id_provider.h",
    "arc_notifications_host_initializer.cc",
    "arc_notifications_host_initializer.h",
    "ash_constants.h",
    "ash_features.cc",
    "ash_features.h",
    "ash_pref_names.cc",
    "ash_pref_names.h",
    "ash_public_export.h",
    "ash_switches.cc",
    "ash_switches.h",
    "ash_typography.cc",
    "ash_typography.h",
    "ash_view_ids.h",
    "assistant/assistant_image_downloader.cc",
    "assistant/assistant_image_downloader.h",
    "assistant/assistant_setup.cc",
    "assistant/assistant_setup.h",
    "assistant/assistant_state_base.cc",
    "assistant/assistant_state_base.h",
    "assistant/assistant_state_proxy.cc",
    "assistant/assistant_state_proxy.h",
    "assistant/default_voice_interaction_observer.h",
    "caption_buttons/caption_button_model.h",
    "caption_buttons/frame_back_button.cc",
    "caption_buttons/frame_back_button.h",
    "caption_buttons/frame_caption_button_container_view.cc",
    "caption_buttons/frame_caption_button_container_view.h",
    "caption_buttons/frame_size_button.cc",
    "caption_buttons/frame_size_button.h",
    "caption_buttons/frame_size_button_delegate.h",
    "caption_buttons/snap_controller.cc",
    "caption_buttons/snap_controller.h",
    "cast_config_controller.cc",
    "cast_config_controller.h",
    "default_frame_header.cc",
    "default_frame_header.h",
    "default_scale_factor_retriever.cc",
    "default_scale_factor_retriever.h",
    "fps_counter.cc",
    "fps_counter.h",
    "frame_header.cc",
    "frame_header.h",
    "frame_utils.cc",
    "frame_utils.h",
    "gesture_action_type.h",
    "immersive/immersive_context.cc",
    "immersive/immersive_context.h",
    "immersive/immersive_focus_watcher.cc",
    "immersive/immersive_focus_watcher.h",
    "immersive/immersive_fullscreen_controller.cc",
    "immersive/immersive_fullscreen_controller.h",
    "immersive/immersive_fullscreen_controller_delegate.h",
    "immersive/immersive_revealed_lock.cc",
    "immersive/immersive_revealed_lock.h",
    "keyboard/keyboard_config.h",
    "keyboard/keyboard_controller.cc",
    "keyboard/keyboard_controller.h",
    "keyboard/keyboard_controller_observer.h",
    "keyboard/keyboard_switches.cc",
    "keyboard/keyboard_switches.h",
    "keyboard/keyboard_types.h",
    "keyboard_shortcut_viewer.h",
    "kiosk_app_menu.cc",
    "kiosk_app_menu.h",
    "locale_update_controller.cc",
    "locale_update_controller.h",
    "lock_screen_widget_factory.cc",
    "lock_screen_widget_factory.h",
    "login_constants.h",
    "login_screen.cc",
    "login_screen.h",
    "login_screen_client.h",
    "login_screen_model.cc",
    "login_screen_model.h",
    "login_screen_test_api.h",
    "login_types.cc",
    "login_types.h",
    "media_client.h",
    "media_controller.cc",
    "media_controller.h",
    "network_icon_image_source.cc",
    "network_icon_image_source.h",
    "new_window_delegate.cc",
    "new_window_delegate.h",
    "night_light_controller.cc",
    "night_light_controller.h",
    "note_taking_client.cc",
    "note_taking_client.h",
    "notification_utils.cc",
    "notification_utils.h",
    "notifier_metadata.cc",
    "notifier_metadata.h",
    "notifier_settings_controller.cc",
    "notifier_settings_controller.h",
    "notifier_settings_observer.h",
    "pagination/pagination_controller.cc",
    "pagination/pagination_controller.h",
    "pagination/pagination_model.cc",
    "pagination/pagination_model.h",
    "pagination/pagination_model_observer.h",
    "power_utils.cc",
    "power_utils.h",
    "presentation_time_recorder.cc",
    "presentation_time_recorder.h",
    "rounded_corner_decorator.cc",
    "rounded_corner_decorator.h",
    "scale_utility.cc",
    "scale_utility.h",
    "scoped_guest_button_blocker.h",
    "select_to_speak_event_handler_delegate.h",
    "session/session_activation_observer.h",
    "session/session_controller.cc",
    "session/session_controller.h",
    "session/session_controller_client.h",
    "session/session_types.cc",
    "session/session_types.h",
    "session/user_info.cc",
    "session/user_info.h",
    "shelf_item.cc",
    "shelf_item.h",
    "shelf_item_delegate.cc",
    "shelf_item_delegate.h",
    "shelf_model.cc",
    "shelf_model.h",
    "shelf_model_observer.h",
    "shelf_prefs.cc",
    "shelf_prefs.h",
    "shelf_types.cc",
    "shelf_types.h",
    "shell_window_ids.cc",
    "shell_window_ids.h",
    "shutdown_controller.cc",
    "shutdown_controller.h",
    "split_view.cc",
    "split_view.h",
    "spoken_feedback_event_rewriter_delegate.h",
    "stylus_utils.cc",
    "stylus_utils.h",
    "switch_access_event_handler_delegate.h",
    "system_tray.cc",
    "system_tray.h",
    "system_tray_client.h",
    "system_tray_focus_observer.h",
    "tablet_mode.cc",
    "tablet_mode.h",
    "tablet_mode_observer.h",
    "toast_data.cc",
    "toast_data.h",
    "toast_manager.cc",
    "toast_manager.h",
    "touch_uma.cc",
    "touch_uma.h",
    "update_types.h",
    "view_shadow.cc",
    "view_shadow.h",
    "voice_interaction_controller.cc",
    "voice_interaction_controller.h",
    "wallpaper_controller.cc",
    "wallpaper_controller.h",
    "wallpaper_controller_client.h",
    "wallpaper_controller_observer.cc",
    "wallpaper_controller_observer.h",
    "wallpaper_info.h",
    "wallpaper_types.h",
    "window_animation_types.h",
    "window_pin_type.cc",
    "window_pin_type.h",
    "window_properties.cc",
    "window_properties.h",
    "window_state_type.cc",
    "window_state_type.h",
  ]

  defines = [ "ASH_PUBLIC_IMPLEMENTATION" ]

  deps = [
    "//ash/public/cpp/vector_icons",
    "//chromeos/constants",
    "//chromeos/dbus/power:power_manager_proto",
    "//components/prefs",
    "//components/sync:rest_of_sync",
    "//mojo/public/cpp/bindings",
    "//services/service_manager/public/cpp",
    "//skia/public/interfaces",
    "//ui/aura",
    "//ui/chromeos/strings",
    "//ui/compositor_extra",
    "//ui/display",
    "//ui/events/devices",
    "//ui/message_center/public/cpp",
    "//ui/views",
    "//ui/views/window/vector_icons",
    "//ui/wm",
    "//ui/wm/public",
  ]

  public_deps = [
    "//ash/public/interfaces",
    "//base",
    "//components/arc/common:notifications",
    "//components/session_manager:base",
    "//components/user_manager",
    "//ui/gfx",
  ]

  output_name = "ash_public_cpp"
}

source_set("manifest") {
  sources = [
    "manifest.cc",
    "manifest.h",
  ]

  deps = [
    "//ash/public/interfaces",
    "//base",
    "//chromeos/services/multidevice_setup/public/mojom",
    "//chromeos/services/network_config/public/mojom",
    "//services/content/public/mojom",
    "//services/data_decoder/public/mojom",
    "//services/device/public/mojom",
    "//services/preferences/public/mojom",
    "//services/service_manager/public/cpp",
    "//services/service_manager/public/mojom",
    "//services/viz/public/interfaces",
  ]
}

source_set("manifest_for_tests") {
  testonly = true

  sources = [
    "test_manifest.cc",
    "test_manifest.h",
  ]

  deps = [
    ":manifest",
    "//ash/public/interfaces:test_interfaces",
    "//base",
    "//services/service_manager/public/cpp",
    "//services/service_manager/public/mojom",
  ]
}

source_set("unit_tests") {
  testonly = true
  sources = [
    "default_scale_factor_retriever_unittest.cc",
    "pagination/pagination_model_unittest.cc",
    "power_utils_unittest.cc",
    "rounded_corner_decorator_unittest.cc",
    "shelf_model_unittest.cc",
    "view_shadow_unittest.cc",
    "voice_interaction_controller_unittest.cc",
  ]

  deps = [
    ":cpp",
    "//base",
    "//base/test:test_support",
    "//testing/gtest",
    "//ui/aura:test_support",
    "//ui/compositor_extra",
    "//ui/gfx:test_support",
    "//ui/views",
    "//ui/views:test_support",
  ]
}

source_set("test_support") {
  testonly = true
  sources = [
    "immersive/immersive_fullscreen_controller_test_api.cc",
    "immersive/immersive_fullscreen_controller_test_api.h",
    "test/test_keyboard_controller_observer.cc",
    "test/test_keyboard_controller_observer.h",
    "test/test_new_window_delegate.cc",
    "test/test_new_window_delegate.h",
    "test/test_system_tray_client.cc",
    "test/test_system_tray_client.h",
  ]

  deps = [
    ":cpp",
    "//base",
    "//services/service_manager/public/cpp",
    "//ui/aura",
    "//ui/aura:test_support",
    "//ui/gfx",
    "//ui/views",
  ]
}
