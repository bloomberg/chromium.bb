# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//third_party/closure_compiler/compile_js.gni")
import("//tools/typescript/ts_definitions.gni")
import("//tools/typescript/ts_library.gni")
import("//ui/webui/resources/tools/generate_grd.gni")

include_polymer = !is_android && !is_ios

generate_grd("build_grd") {
  grd_prefix = "webui_generated"
  out_grd = "$target_gen_dir/${grd_prefix}_resources.grd"

  deps = [
    ":build_ts_grdp",
    "css:build_grdp",
    "html:build_grdp",
    "images:build_grdp",
    "js:build_grdp",
    "js/cr/ui:build_grdp",
    "//third_party/jstemplate:build_grdp",
  ]
  grdp_files = [
    "$target_gen_dir/ts_resources.grdp",
    "$target_gen_dir/css/resources.grdp",
    "$target_gen_dir/html/resources.grdp",
    "$target_gen_dir/images/resources.grdp",
    "$target_gen_dir/js/cr/ui/resources.grdp",
    "$target_gen_dir/js/resources.grdp",
    "$root_gen_dir/third_party/jstemplate/resources.grdp",
  ]

  if (!is_chromeos_ash && !is_android) {
    # Roboto Font. Roboto-Regular and Roboto-Light is already available on
    # Android, and Roboto-Medium is not used on Android. All 6 weights of
    # Roboto are available on Chrome OS.
    input_files_base_dir = rebase_path(".", "//")
    input_files = [
      "roboto/roboto-bold.woff2",
      "roboto/roboto-medium.woff2",
      "roboto/roboto-regular.woff2",
    ]
  }

  if (include_polymer) {
    deps += [
      "cr_components:build_grdp",
      "cr_elements:build_grdp",
      "//third_party/polymer/v3_0:build_grdp",
    ]
    grdp_files += [
      "$root_gen_dir/third_party/polymer/v3_0/polymer_3_0_resources.grdp",
      "$root_gen_dir/ui/webui/resources/cr_components/cr_components_resources.grdp",
      "$root_gen_dir/ui/webui/resources/cr_elements/cr_elements_resources.grdp",
    ]

    # TODO(crbug.com/1184053): Fully remove once no longer used by CrOS.
    if (is_chromeos_ash) {
      deps += [ "//third_party/polymer/v1_0:build_grdp" ]
      grdp_files += [
        "$root_gen_dir/third_party/polymer/v1_0/polymer_1_0_resources.grdp",
      ]
    }
  }

  if (is_chromeos_ash) {
    deps += [ "//third_party/web-animations-js:build_grdp" ]
    grdp_files += [ "$root_gen_dir/third_party/web-animations-js/web_animations_resources.grdp" ]
  }

  if (!is_android && !is_ios) {
    deps += [ "//third_party/lottie:build_grdp" ]
    grdp_files += [ "$root_gen_dir/third_party/lottie/resources.grdp" ]
  }
}

group("preprocess") {
  deps = [
    "cr_components:preprocess",
    "cr_elements:preprocess",
    "js:preprocess",
  ]
}

group("closure_compile") {
  deps = [
    "js:closure_compile",
    "js:closure_compile_modules",
  ]

  if (!is_android) {
    deps += [
      "cr_components:closure_compile",
      "cr_elements:closure_compile",
    ]
  }
}

group("modulize") {
  public_deps = [
    "js:modulize",
    "js/cr:modulize",
    "js/cr/ui:modulize",
  ]

  if (!is_android) {
    public_deps += [
      "cr_components:polymer3_elements",
      "cr_elements:polymer3_elements",
    ]
  }
}

# Experimental TypeScript targets, to test how TS files can depend on
# chrome://resources files.
# TODO(dpapad): Delete once the TypeScript demo page is no longer needed.

generate_grd("build_ts_grdp") {
  grd_prefix = "webui"
  out_grd = "$target_gen_dir/ts_resources.grdp"
  deps = [ ":library" ]
  manifest_files = [ "$target_gen_dir/tsconfig.manifest" ]
}

ts_library("library") {
  sources = [
    "js/cr/world.ts",
    "js/hello_world.ts",
  ]
  definitions = [
    "js/assert.m.d.ts",
    "js/cr.m.d.ts",
    "js/promise_resolver.m.d.ts",
    "js/util.m.d.ts",
  ]
  extra_deps = [
    ":generate_definitions",
    ":generate_definitions_src",
  ]
}

ts_definitions("generate_definitions") {
  root_dir = "$root_gen_dir/ui/webui/resources/preprocessed"
  js_files = [
    "js/assert.m.js",
    "js/promise_resolver.m.js",
    "js/util.m.js",
  ]
  extra_deps = [ "js:preprocess" ]
}

ts_definitions("generate_definitions_src") {
  js_files = [ "js/cr.m.js" ]
}
