# Copyright 2019 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

common_namespace_rewrites = [
  "cr_slider.SliderTick|SliderTick",
  "cr.addSingletonGetter|addSingletonGetter",
  "cr.addWebUIListener|addWebUIListener",
  "cr.dispatchSimpleEvent|dispatchSimpleEvent",
  "cr.icon.getFavicon|getFavicon",
  "cr.icon.getImage|getImage",
  "cr.isAndroid|isAndroid",
  "cr.isChromeOS|isChromeOS",
  "cr.isIOS|isIOS",
  "cr.isLinux|isLinux",
  "cr.isMac|isMac",
  "cr.isWindows|isWindows",
  "cr.png.convertImageSequenceToPng|convertImageSequenceToPng",
  "cr.removeWebUIListener|removeWebUIListener",
  "cr.sendWithPromise|sendWithPromise",
  "cr.toastManager.getToastManager|getToastManager",
  "cr.ui.FocusOutlineManager|FocusOutlineManager",
  "cr.ui.FocusRowBehavior|FocusRowBehavior",
  "cr.ui.focusWithoutInk|focusWithoutInk",
  "cr.ui.Store|Store",
  "Polymer.dom.flush|flush",
  "Polymer.IronA11yAnnouncer|IronA11yAnnouncer",
  "Polymer.PaperRippleBehavior|PaperRippleBehavior",
  "Polymer.RenderStatus.afterNextRender|afterNextRender",
  "Polymer.RenderStatus.beforeNextRender|beforeNextRender",

  # TODO(dpapad): Add more such rewrites as they get discovered.
]

template("js_modulizer") {
  action(target_name) {
    script = "//ui/webui/resources/tools/js_modulizer.py"

    inputs = invoker.input_files

    outputs = []
    foreach(_input, invoker.input_files) {
      outputs +=
          [ "$target_gen_dir/" + get_path_info(_input, "name") + ".m.js" ]
    }

    args = [
             "--in_folder",
             rebase_path(".", root_build_dir),
             "--out_folder",
             rebase_path(target_gen_dir, root_build_dir),
             "--input_files",
           ] + invoker.input_files

    args += [ "--namespace_rewrites" ] + common_namespace_rewrites
    if (defined(invoker.namespace_rewrites)) {
      args += invoker.namespace_rewrites
    }

    if (defined(invoker.deps)) {
      deps = invoker.deps
    }
  }
}
