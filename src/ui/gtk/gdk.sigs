GdkDisplay* gdk_display_get_default(void);
gboolean gdk_keymap_translate_keyboard_state(GdkKeymap* keymap, guint hardware_keycode, GdkModifierType state, gint group, guint* keyval, gint* effective_group, gint* level, GdkModifierType* consumed_modifiers);
void gdk_keymap_add_virtual_modifiers(GdkKeymap* keymap, GdkModifierType* state);
GdkEvent* gdk_event_new(GdkEventType type);
void gdk_event_free(GdkEvent* event);
gboolean gdk_keymap_get_entries_for_keycode(GdkKeymap* keymap, guint hardware_keycode, GdkKeymapKey** keys, guint** keyvals, gint* n_entries);
GdkKeymap* gdk_keymap_get_for_display(GdkDisplay* display);
int gdk_texture_get_width(GdkTexture* texture);
int gdk_texture_get_height(GdkTexture* texture);
void gdk_texture_download(GdkTexture* texture, guchar* data, gsize stride);
gboolean gdk_display_map_keycode(GdkDisplay* display, guint keycode, GdkKeymapKey** keys, guint** keyvals, int* n_entries);
void gdk_paintable_snapshot(GdkPaintable* paintable, GdkSnapshot* snapshot, double width, double height);
GType gdk_paintable_get_type(void);
GdkSeat* gdk_display_get_default_seat(GdkDisplay* display);
GdkDevice* gdk_seat_get_keyboard(GdkSeat* seat);
GdkTexture* gdk_memory_texture_new(int width, int height, GdkMemoryFormat format, GBytes* bytes, gsize stride);
int gdk_paintable_get_intrinsic_width(GdkPaintable* paintable);
int gdk_paintable_get_intrinsic_height(GdkPaintable* paintable);
GdkScreen* gdk_screen_get_default(void);
gdouble gdk_screen_get_resolution(GdkScreen *screen);
