# Copyright 2019 The Chromium Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//third_party/closure_compiler/js_unit_tests.gni")

# Describes a list of js_unittest targets that will each have a generated HTML
# file that imports the test JS module and adds the test* functions to the
# window to be consumed by the test harness.
#
# A companion group target with a "_type_check_auto" suffix is also generated
# with this template. This depends on a list of js_type_check(..) targets -- one
# for # each test -- that will type check the test js file and its dependency
# subtree.
#
# Must be declared after the js_library targets it depends on.
#
# Note js_type_check() is only in effect if `closure_compile` is set in gn args.
#
# Variables:
#   deps:
#     List of js_unittest targets to depend on
#
#   is_polymer3:
#     Boolean indicating that it's a test for a Polymer 3 element, the only
#     difference is the js_type_check() rule also has the is_polymer3=true.
#
#
# Non-Polymer example:
#   js_test_gen_html("folder_tests") {
#     deps = [
#       ":foo_unittest",
#       ":bar_unittest",
#       ":baz_unittest",
#     ]
#   }
#
#   group("closure_compile") {
#     # ...
#     ":folder_tests_type_check_auto".
#   }
#
#   test("browser_tests") {
#     # ...
#     data_deps += [ "//folder:folder_tests" ]
#   }
#
# Polymer example:
#   js_test_gen_html("polymer_tests") {
#     is_polymer3 = true
#     deps = [
#       ":element1_unittest",
#     ]
#   }
#
template("js_test_gen_html") {
  html_gen_target_name = target_name + "_gen_html"
  action_foreach(html_gen_target_name) {
    script_path = "//ui/file_manager/base/gn/"
    script = "$script_path/js_test_gen_html.py"
    forward_variables_from(invoker, [ "deps" ])

    testonly = true
    sources = []
    foreach(dep, deps) {
      sources += get_target_outputs(dep)
    }

    outputs = [ "$target_gen_dir/{{source_name_part}}_gen.html" ]
    args = [ "--output" ] + rebase_path(outputs, root_build_dir)
    args += [
      "--src_path",
      rebase_path("//"),
    ]
    args += [ "--input" ] + [ "{{source}}" ]
  }

  type_check_deps = []
  foreach(dep, invoker.deps) {
    type_check_target_name = target_name + "_" + dep + "_type_check_auto"
    type_check_deps += [ ":$type_check_target_name" ]
    js_type_check(type_check_target_name) {
      testonly = true
      forward_variables_from(invoker,
                             [
                               "closure_flags",
                               "is_polymer3",
                             ])
      deps = [ dep ]
    }
  }

  type_check_group_name = target_name + "_type_check_auto"
  group(type_check_group_name) {
    testonly = true
    deps = type_check_deps
  }

  group(target_name) {
    data = get_target_outputs(":$html_gen_target_name")
    testonly = true
    deps = [ ":$html_gen_target_name" ]
  }
}
