# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//third_party/closure_compiler/compile_js.gni")
import("//third_party/closure_compiler/js_unit_tests.gni")

# TODO(tapted): This entire folder should move to //ui/file_manager/base.
visibility = [ "//ui/file_manager/*" ]

js_type_check("closure_compile_module") {
  deps = [
    ":async_util",
    ":error_util",
    ":file_type",
    ":files_app_entry_types",
    ":importer_common",
    ":lru_cache",
    ":metrics",
    ":metrics_base",
    ":metrics_events",
    ":mock_entry",
    ":progress_center_common",
    ":unittest_util",
    ":util",
    ":volume_manager_common",
  ]
}

js_library("async_util") {
}

js_library("async_util_unittest") {
  deps = [
    ":async_util",
    ":unittest_util",
  ]
}

js_library("error_util") {
}

js_library("files_app_entry_types") {
  deps = [
    "../../../externs:file_manager_private",
  ]
  externs_list = [ "../../../externs/volume_info.js" ]
}

js_library("files_app_entry_types_unittest") {
  deps = [
    ":files_app_entry_types",
    ":unittest_util",
    ":volume_manager_common",
  ]
}

js_library("file_type") {
  deps = [
    ":files_app_entry_types",
    ":volume_manager_common",
  ]
}

# These importer files actually belong here. Nothing outside the Files app uses
# them, so restrict visibility. TODO(tapted): Simplify visibility when
# everything else moves to //ui/file_manager/base.
js_library("importer_common") {
  visibility = []
  visibility = [ "//ui/file_manager/file_manager/*" ]
  deps = [
    ":file_type",
    ":volume_manager_common",
    "../../../externs:volume_manager",
  ]
  externs_list = [
    "//third_party/analytics/externs.js",
    "../../../externs/volume_info_list.js",
    "../../../externs/background_window.js",
    "../../../externs/background/file_browser_background.js",
  ]
}

js_library("test_importer_common") {
  deps = [
    ":importer_common",
    ":unittest_util",
  ]
  visibility = []
  visibility = [ "//ui/file_manager/file_manager/*" ]
}

js_library("importer_common_unittest") {
  deps = [
    ":mock_entry",
    ":test_importer_common",
    ":util",
    "//ui/file_manager/file_manager/background/js:mock_volume_manager",
  ]
}

js_library("lru_cache") {
}

js_library("lru_cache_unittest") {
  deps = [
    ":lru_cache",
    "//ui/webui/resources/js:webui_resource_test",
  ]
}

js_library("metrics") {
  deps = [
    ":metrics_base",
    "../../../externs:file_manager_private",
    "//ui/webui/resources/js:assert",
  ]
  externs_list = [
    "$externs_path/metrics_private.js",
    "//third_party/analytics/externs.js",
  ]
}

js_library("metrics_base") {
}

js_library("metrics_events") {
  deps = [
    ":metrics_base",
  ]
}

js_library("mock_entry") {
  deps = [
    ":util",
    "//ui/webui/resources/js:assert",
  ]
}

js_library("progress_center_common") {
}

js_library("unittest_util") {
  deps = [
    "//ui/webui/resources/js:webui_resource_test",
  ]
  externs_list = [ "$externs_path/command_line_private.js" ]
}

js_library("util") {
  deps = [
    ":files_app_entry_types",
    ":volume_manager_common",
    "../../../externs:file_manager_private",
    "//ui/webui/resources/js:load_time_data",
    "//ui/webui/resources/js:util",
    "//ui/webui/resources/js/cr:event_target",
    "//ui/webui/resources/js/cr:ui",
  ]
  externs_list = [
    "$externs_path/command_line_private.js",
    "../../../externs/app_window_common.js",
    "../../../externs/entry_location.js",
    "../../../externs/platform.js",
  ]
}

js_library("util_unittest") {
  deps = [
    ":mock_entry",
    ":unittest_util",
    ":util",
  ]
}

js_library("volume_manager_common") {
  deps = [
    "//ui/webui/resources/js:assert",
  ]
}

js_unit_tests("unit_tests") {
  deps = [
    ":async_util_unittest",
    ":files_app_entry_types_unittest",
    ":importer_common_unittest",
    ":lru_cache_unittest",
    ":util_unittest",
  ]
}

js_type_check("test_support_type_check") {
  deps = [
    ":test_importer_common",
  ]
}

group("closure_compile") {
  deps = [
    ":closure_compile_module",
    ":test_support_type_check",
    ":unit_tests_type_check",
  ]
}
