# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//third_party/closure_compiler/compile_js.gni")
import("//third_party/closure_compiler/js_unit_tests.gni")

js_type_check("closure_compile_module") {
  deps = [
    ":commands",
    ":exif_encoder",
    ":filter",
    ":image_adjust",
    ":image_buffer",
    ":image_editor",
    ":image_editor_mode",
    ":image_editor_prompt",
    ":image_editor_toolbar",
    ":image_encoder",
    ":image_loader",
    ":image_resize",
    ":image_transform",
    ":image_util",
    ":image_view",
    ":test_util",
    ":viewport",
  ]
}

js_library("commands") {
  deps = [
    ":filter",
    ":image_editor_prompt",
    ":image_util",
    ":image_view",
    ":viewport",
    "../../../file_manager/foreground/elements:files_toast",
  ]
}

js_library("exif_encoder") {
  deps = [
    ":image_encoder",
    "../../../file_manager/foreground/js/metadata:exif_constants",
    "../../../file_manager/foreground/js/metadata:metadata_item",
  ]
  externs_list = [ "../../../externs/exif_entry.js" ]
}

js_unittest("exif_encoder_unittest") {
  deps = [
    ":exif_encoder",
    ":test_util",
    "../../../file_manager/foreground/js/metadata:exif_parser",
    "//ui/webui/resources/js:webui_resource_test",
  ]
}

js_library("filter") {
  deps = [
    ":image_util",
  ]
}

js_library("image_adjust") {
  deps = [
    ":commands",
    ":image_editor",
    "//ui/webui/resources/js:assert",
  ]
}

js_library("image_buffer") {
}

js_library("image_editor") {
  deps = [
    ":image_buffer",
    ":image_editor_mode",
    ":image_editor_toolbar",
    ":image_resize",
    ":image_util",
    ":image_view",
    ":viewport",
    "//ui/webui/resources/js/cr:event_target",
  ]
}

js_library("image_editor_mode") {
  deps = [
    ":commands",
    ":image_buffer",
    ":image_editor_toolbar",
    ":image_view",
    ":viewport",
  ]
}

js_library("image_editor_prompt") {
  deps = [
    "//ui/webui/resources/js:assert",
  ]
}

js_library("image_editor_toolbar") {
  deps = [
    ":image_util",
    "..:gallery_util",
    "../../../file_manager/common/js:util",
    "../../../file_manager/foreground/elements:files_tooltip",
  ]
  externs_list = [ "../../../externs/paper_elements.js" ]
}

js_library("image_encoder") {
  deps = [
    ":image_util",
    "../../../file_manager/foreground/js/metadata:metadata_item",
    "//ui/webui/resources/js:assert",
  ]
}

js_unittest("image_encoder_unittest") {
  deps = [
    ":image_encoder",
    ":test_util",
    "../../../file_manager/foreground/js/metadata:metadata_parser",
    "//ui/file_manager/base/js:test_error_reporting",
  ]
  externs_list = [ "../../../externs/metadata_worker_window.js" ]
}

js_library("image_loader") {
  deps = [
    ":image_util",
    "..:gallery_item",
    "../../../file_manager/common/js:file_type",
    "../../../file_manager/common/js:metrics_base",
    "../../../file_manager/common/js:util",
    "../../../file_manager/foreground/js/metadata:metadata_model",
    "../../../image_loader:image_loader_client",
  ]
}

js_library("image_resize") {
  deps = [
    ":image_editor_mode",
    "../../../file_manager/foreground/js/ui:files_alert_dialog",
  ]
}

js_library("image_transform") {
  deps = [
    ":commands",
    ":image_buffer",
    ":image_editor_mode",
    ":image_editor_toolbar",
    ":image_util",
    ":viewport",
  ]
}

js_library("image_util") {
  deps = [
    "//ui/webui/resources/js:assert",
  ]
}

js_library("image_view") {
  deps = [
    ":image_buffer",
    ":image_loader",
    ":image_util",
    ":viewport",
    "..:gallery_item",
    "../../../file_manager/common/js:metrics_base",
    "../../../file_manager/foreground/js:thumbnail_loader",
    "//ui/webui/resources/js:assert",
  ]
}

js_unittest("image_view_unittest") {
  deps = [
    ":image_view",
    "..:mock_gallery_item",
    "//ui/webui/resources/js:webui_resource_test",
  ]
}

js_library("test_util") {
}

js_library("viewport") {
  deps = [
    ":image_util",
    "//ui/webui/resources/js/cr:event_target",
  ]
}

js_unit_tests("unit_tests") {
  deps = [
    ":exif_encoder_unittest",
    ":image_encoder_unittest",
    ":image_view_unittest",
  ]
  mocks = [ "../../../file_manager/foreground/js/metadata/metadata_dispatcher_mock_deps.js" ]
}

group("closure_compile") {
  testonly = true
  deps = [
    ":closure_compile_module",
    ":unit_tests_type_check",
  ]
}
