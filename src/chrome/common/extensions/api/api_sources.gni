# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//build/config/features.gni")
import("//chrome/common/features.gni")

assert(enable_extensions)

schema_sources_ = [
  "accessibility_features.json",
  "accessibility_private.json",
  "activity_log_private.json",
  "autofill_private.idl",
  "autotest_private.idl",
  "bookmark_manager_private.json",
  "bookmarks.json",
  "braille_display_private.idl",
  "chrome_web_view_internal.json",
  "command_line_private.json",
  "content_settings.json",
  "context_menus.json",
  "cookies.json",
  "cryptotoken_private.idl",
  "dashboard_private.json",
  "debugger.json",
  "desktop_capture.json",
  "developer_private.idl",
  "crash_report_private.idl",
  "downloads.idl",
  "downloads_internal.idl",
  "enterprise_hardware_platform.idl",
  "enterprise_reporting_private.idl",
  "font_settings.json",
  "gcm.json",
  "history.json",
  "i18n.json",
  "identity.idl",
  "identity_private.idl",
  "image_writer_private.idl",
  "instance_id.json",
  "language_settings_private.idl",
  "notifications.idl",
  "omnibox.json",
  "page_capture.json",
  "passwords_private.idl",
  "permissions.json",
  "resources_private.idl",
  "safe_browsing_private.idl",
  "scripting.idl",
  "search.idl",
  "sessions.json",
  "settings_private.idl",
  "signed_in_devices.idl",
  "system_indicator.idl",
  "system_private.json",
  "tab_capture.idl",
  "tab_groups.json",
  "tabs.json",
  "types.json",
  "web_navigation.json",

  # Despite the name, these APIs do not rely on any WebRTC-specific bits and as
  # such do not belong in a conditional.
  "webrtc_audio_private.idl",
  "webrtc_desktop_capture_private.idl",
  "webrtc_logging_private.idl",

  "webstore_private.json",
  "windows.json",
]

if (!is_android) {
  schema_sources_ += [ "processes.idl" ]
}

if (is_chromeos_ash || is_mac || is_win) {
  schema_sources_ += [ "networking_cast_private.idl" ]
}

if (is_chromeos_ash || is_chromeos_lacros) {
  schema_sources_ += [
    "enterprise_device_attributes.idl",
    "enterprise_platform_keys.idl",
    "enterprise_platform_keys_internal.idl",
    "platform_keys_internal.idl",
    "platform_keys.idl",
  ]
}

if (is_chromeos_ash) {
  schema_sources_ += [
    "certificate_provider.idl",
    "certificate_provider_internal.idl",
    "document_scan.idl",
    "echo_private.json",
    "enterprise_networking_attributes.idl",
    "enterprise_platform_keys_private.json",
    "file_browser_handler_internal.json",
    "file_manager_private.idl",
    "file_manager_private_internal.idl",
    "file_system_provider.idl",
    "file_system_provider_internal.idl",
    "input_ime.json",
    "input_method_private.json",
    "launcher_search_provider.idl",
    "login.idl",
    "login_screen_storage.idl",
    "login_screen_ui.idl",
    "login_state.idl",
    "quick_unlock_private.idl",
    "terminal_private.json",
    "users_private.idl",
    "wallpaper.json",
    "wallpaper_private.json",
  ]
  if (use_cups) {
    schema_sources_ += [
      "printing.idl",
      "printing_metrics.idl",
    ]
  }
} else if (is_linux || is_chromeos || is_win) {
  schema_sources_ += [ "input_ime.json" ]
}

if (enable_service_discovery) {
  schema_sources_ += [ "mdns.idl" ]
}

if (enable_autofill_assistant_api) {
  schema_sources_ += [ "autofill_assistant_private.idl" ]
}

uncompiled_sources_ = [
  "action.json",
  "browser_action.json",
  "browsing_data.json",
  "extension.json",
  "idltest.idl",
  "page_action.json",
  "top_sites.json",
]

if (is_chromeos_ash) {
  uncompiled_sources_ += [
    "chromeos_info_private.json",
    "media_player_private.json",
  ]
}

chrome_extensions_api_schema_sources = get_path_info(schema_sources_, "abspath")

chrome_extensions_manifest_only_schema_sources =
    get_path_info([ "manifest_types.json" ], "abspath")

chrome_extensions_api_uncompiled_sources =
    get_path_info(uncompiled_sources_, "abspath")

chrome_extensions_api_root_namespace = "extensions::api::%(namespace)s"

chrome_extensions_api_schema_include_rules =
    "extensions/common/api:extensions::api::%(namespace)s"
