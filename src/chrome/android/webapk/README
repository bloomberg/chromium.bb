WebAPKs are a proposal to improve homescreen shortcuts by:
- Giving them a spot in the app launcher
- Enabling web pages to open a WebAPK when a user taps on a URL which belongs to
    a WebAPK
- Improving resource and permission attribution

In short, they attempt to providing additional glue to give Progress Web Apps
deeper integration into the Android OS, similar to native apps.

The directory is broken down as follows:
- shell_apk/ - a template APK which can be customized for a given domain based
    on its Web App Manifest: https://www.w3.org/TR/appmanifest/
- libs/client/ - a client library meant for a host browser to interact with
    WebAPKs
- libs/common/ - common library used by the WebAPK and host browser
- libs/runtime_library/ - a library which can be dynamically loaded by a
    ShellAPK. A host browser provides the library which the ShellAPK uses to
    implement the majority of its functionaly. For chrome, this library is
    packaged into Chrome's assets file and extracted as needed. This approach
    ensures that the majority of the WebAPK logic is shared and can be updated
    as often as the host browser, without the need for updating each individual
    WebAPK.
