# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("headers") {
  sources = [
    "encountered_surface_tracker.h",
    "identifiability_study_state.h",
    "mesa_distribution.h",
    "privacy_budget_metrics_provider.h",
    "privacy_budget_prefs.h",
    "privacy_budget_ukm_entry_filter.h",
    "representative_surface_set.h",
    "surface_set_equivalence.h",
    "surface_set_valuation.h",
    "surface_set_with_valuation.h",
  ]

  deps = [
    "//base",
    "//chrome/common/privacy_budget",
    "//components/metrics",
    "//components/prefs",
    "//components/ukm",
    "//third_party/blink/public/common/privacy_budget",
  ]
}

source_set("privacy_budget") {
  sources = [
    "encountered_surface_tracker.cc",
    "identifiability_study_state.cc",
    "privacy_budget_metrics_provider.cc",
    "privacy_budget_prefs.cc",
    "privacy_budget_ukm_entry_filter.cc",
    "representative_surface_set.cc",
    "surface_set_equivalence.cc",
    "surface_set_valuation.cc",
    "surface_set_with_valuation.cc",
  ]

  public_deps = [ ":headers" ]

  deps = [
    "//base",
    "//chrome/common/privacy_budget",
    "//components/prefs",
    "//components/ukm",
    "//services/metrics/public/cpp:metrics_cpp",
    "//services/metrics/public/cpp:ukm_builders",
    "//services/metrics/public/mojom",
    "//third_party/blink/public/common/privacy_budget",
  ]
}

source_set("unit_tests") {
  testonly = true

  sources = [
    "encountered_surface_tracker_unittest.cc",
    "identifiability_study_state_unittest.cc",
    "inspectable_identifiability_study_state.h",
    "mesa_distribution_unittest.cc",
    "privacy_budget_metrics_provider_unittest.cc",
    "privacy_budget_ukm_entry_filter_unittest.cc",
    "representative_surface_set_unittest.cc",
    "surface_set_equivalence_unittest.cc",
    "surface_set_valuation_unittest.cc",
    "surface_set_with_valuation_unittest.cc",
  ]

  deps = [
    ":headers",
    "//chrome/browser",
    "//chrome/common/privacy_budget:test_support",
    "//chrome/test:test_support",
    "//testing/gtest",
  ]
}

source_set("browser_tests") {
  testonly = true

  sources = [
    "canvas_input_key_browsertest.cc",
    "privacy_budget_browsertest.cc",
  ]

  defines = [ "HAS_OUT_OF_PROC_TEST_RUNNER" ]

  deps = [
    ":headers",
    "//chrome/browser",
    "//chrome/browser:browser_process",
    "//chrome/browser/metrics:test_support",
    "//chrome/common/privacy_budget:test_support",
    "//chrome/test:sync_integration_test_support",
    "//chrome/test:test_support",
    "//components/metrics_services_manager",
    "//components/sync/test/fake_server",
    "//components/ukm:test_support",
    "//components/ukm:ukm_test_helper",
    "//components/unified_consent",
    "//components/variations/service:buildflags",
    "//third_party/blink/public/common/privacy_budget",
  ]

  if (is_android) {
    deps += [ "//chrome/test:test_support_ui_android" ]
  } else {
    deps += [ "//chrome/test:test_support_ui" ]
  }

  data = [ "//chrome/test/data/privacy_budget/" ]
}
