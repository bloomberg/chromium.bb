# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/android/rules.gni")

android_library("util_java") {
  sources = [ "java/src/org/chromium/chrome/browser/policy/CloudManagementSharedPreferences.java" ]

  deps = [
    "//base:base_java",
    "//chrome/browser/preferences:java",
    "//components/policy/android:policy_java",
  ]

  annotation_processor_deps = [ "//base/android/jni_generator:jni_processor" ]
}

android_library("java") {
  sources = [
    "java/src/org/chromium/chrome/browser/policy/CloudManagementAndroidConnection.java",
    "java/src/org/chromium/chrome/browser/policy/PolicyServiceFactory.java",
  ]

  deps = [
    "//base:base_java",
    "//chrome/browser/profiles/android:java",
    "//components/policy/android:policy_java",
    "//third_party/androidx:androidx_annotation_annotation_java",
  ]

  public_deps = [
    ":delegate_java",
    ":util_java",
  ]

  annotation_processor_deps = [ "//base/android/jni_generator:jni_processor" ]
}

android_library("delegate_java") {
  sources = [
    "java/src/org/chromium/chrome/browser/policy/CloudManagementAndroidConnectionDelegate.java",
    "java/src/org/chromium/chrome/browser/policy/CloudManagementAndroidConnectionDelegateImpl.java",
  ]

  # Add the actual implementation where necessary so that downstream
  # targets can provide their own implementations.
  jar_excluded_patterns =
      [ "*/CloudManagementAndroidConnectionDelegateImpl.class" ]
}

android_library("delegate_public_impl_java") {
  sources = [ "java/src/org/chromium/chrome/browser/policy/CloudManagementAndroidConnectionDelegateImpl.java" ]

  deps = [
    ":delegate_java",
    ":util_java",
  ]
}

generate_jni("jni_headers") {
  sources = [
    "java/src/org/chromium/chrome/browser/policy/CloudManagementAndroidConnection.java",
    "java/src/org/chromium/chrome/browser/policy/CloudManagementSharedPreferences.java",
    "java/src/org/chromium/chrome/browser/policy/PolicyServiceFactory.java",
  ]
}

android_library("junit") {
  # Skip platform checks since Robolectric depends on requires_android targets.
  bypass_platform_checks = true
  testonly = true

  sources = [
    "java/src/org/chromium/chrome/browser/policy/CloudManagementAndroidConnectionTest.java",
    "java/src/org/chromium/chrome/browser/policy/CloudManagementSharedPreferencesTest.java",
  ]

  deps = [
    ":delegate_java",
    ":java",
    ":util_java",
    "//base:base_junit_test_support",
    "//chrome/browser/preferences:java",
    "//third_party/android_deps:robolectric_all_java",
    "//third_party/androidx:androidx_test_runner_java",
    "//third_party/junit",
  ]
}
