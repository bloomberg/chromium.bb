// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto2";

option optimize_for = LITE_RUNTIME;

package notifications.proto;

// Contains data to determine when a notification should be shown to the user
// and the user impression towards this notification. Should match Impression in
// impression_types.h.
// Next tag: 6
message Impression {
  // The type of user feedback from a displayed notification. Should match
  // UserFeedback in notification_scheduler_types.h.
  enum UserFeedback {
    NO_FEEDBACK = 0;
    HELPFUL = 1;
    NOT_HELPFUL = 2;
    CLICK = 3;
    DISMISS = 4;
    IGNORE = 5;
  }

  // The user impression of a particular notification. Should match
  // ImpressionResult in notification_scheduler_types.h.
  enum ImpressionResult {
    INVALID = 0;
    POSITIVE = 1;
    NEGATIVE = 2;
    NEUTRAL = 3;
  }

  // Enum to describe the time to process scheduled notification data. Should
  // match SchedulerTaskTime in internal_types.h.
  enum SchedulerTaskTime {
    UNKNOWN_TASK_TIME = 0;
    MORNING = 1;
    EVENING = 2;
  }

  // Creation time stamp in milliseconds since epoch.
  optional int64 create_time = 1;

  // The user feedback on the notification.
  optional UserFeedback feedback = 2;

  // The impression type.
  optional ImpressionResult impression = 3;

  // If the user feedback is used in computing the current notification deliver
  // rate.
  optional bool integrated = 4;

  // The task start time when the notification is shown.
  optional SchedulerTaskTime task_start_time = 5;
}
