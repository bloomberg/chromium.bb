// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module history_clusters.mojom;

import "components/history_clusters/core/memories.mojom";
import "url/mojom/url.mojom";

// Represents a set of Memories returned by the browser in response to a request
// for Memories related to a given query or within a given timespan.
// Optionally accompanied by a title and a thumbnail representing the Memoires
// in the set.
struct MemoriesResult {
  // Optional human readable title representing the Memories in the result set.
  string? title;
  // Optional externally hosted thumbnail representing the Memories in the
  // result set.
  url.mojom.Url? thumbnail_url;
  // The Memories in the result set in reverse chronological order.
  array<history_clusters.mojom.Memory> memories;
  // True if this is in response to a continuation query. If so, `memories` is a
  // partial set which must be appended to the existing Memories on the page and
  // not replace them.
  bool is_continuation;
  // Optional continuation query params created by the browser to be used in the
  // follow-up request to load older Memories.
  QueryParams? continuation_query_params;
};

// Browser-side handler for requests from WebUI page.
interface PageHandler {
  // The MemoriesBrowserProxy singleton calls this when it's first initialized.
  SetPage(pending_remote<Page> page);

  // Requests the freshest Memories created from the user visit history, in
  // reverse chronological order, based on the parameters in `query_params`.
  // Note: Returns mock Memories in non-chrome-branded builds if no remote
  // endpoint is specified.
  QueryMemories(QueryParams query_params);

  // Requests to remove all visits to the specified URLs in the specified
  // timespan in `visits`. This includes the less recent visits to the same set
  // of URLs whose information is preserved in `visits`. The returned Promise
  // indicates if the request was accepted by the browser.
  RemoveVisits(array<Visit> visits) => (bool accepted);
};

// WebUI-side handler for requests from the browser.
interface Page {
  // Called with the results of the last call to `QueryMemories()`. `result`
  // contains the freshest Memories in reverse chronological order, along with
  // continuation query params meant to be used in the follow-up request to load
  // older Memories.
  OnMemoriesQueryResult(MemoriesResult result);

  // Called with the set of removed visits when the last accepted call to
  // `RemoveVisits()` succeeds. `removed_visits` will be used to update the UI.
  OnVisitsRemoved(array<Visit> removed_visits);
};
