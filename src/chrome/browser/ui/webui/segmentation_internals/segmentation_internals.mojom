// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module segmentation_internals.mojom;

// Encapsulates information related to a selected segment. The information
// includes whether the segment is ready and its optimization target.
struct SegmentData {
  // Whether the segment is ready.
  bool is_ready;

  // Enum value from components/optimization_guide/proto/models.proto. Or -1
  // if the optimization target is empty.
  int32 optimization_target;
};

// Status information about the segmentation service.
struct ServiceStatus {
  // Whether the service is initialized.
  bool is_initialized;

  // Initialization status.
  int32 intialization_status;
};

// Used by the WebUI page to bootstrap bidirectional communication.
interface PageHandlerFactory {
  // The WebUI calls this method when the page is first initialized.
  CreatePageHandler(pending_remote<Page> page, pending_receiver<PageHandler>
    handler);
};

// Browser-side handler for requests from WebUI page.
interface PageHandler {
  // Gets the segment result for a given key.
  GetSegment(string key) => (SegmentData result);

  // Gets the segmentation service status.
  GetServiceStatus();
};

// Renderer-side handler for internal page to process the updates from
// the segmentation service.
interface Page {
  // Notifies the page of a status change on the segmentation service.
  // |is_page_controller| indicates whether the service is initialized,
  // |status_flag| indicates the status of various components, see
  // SegmentationPlatformServiceImpl for description of each bit in the flag.
  OnServiceStatusChanged(bool is_initialized,
                         int32 status_flag);

  // Notifies the page when all segment info becomes available from the service.
  // |segment_info| is an array of serialized string for all the segment,
  OnSegmentInfoAvailable(array<string> segment_info);
};
