// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module chromeos.crostini_upgrader.mojom;

// Lives in the browser process. A renderer uses this to create a page handler
// for controlling Crostini upgrade.
interface PageHandlerFactory {
  // Create a page handler to control Crostini upgrade.
  CreatePageHandler(pending_remote<Page> page,
                    pending_receiver<PageHandler> handler);
};

// Lives in the browser process. A renderer uses this to control Crostini
// upgrade.
interface PageHandler {
  // Backup the existing container.
  Backup();
  // Start upgrade
  Upgrade();
  // Cancel an on-going upgrade
  Cancel();
  // If a user cancels the upgrade without starting it at all, this should
  // be called so that metrics can be recorded.
  CancelBeforeStart();
  // The page normally is displayed in a dialog. Call this to close the dialog.
  // chrome.send('dialogClose') should not be used, which could kill the page
  // handler before previous mojom calls have been run.
  Close();
  // Close the dialog and launch the Terminal or other app after a successful
  // upgrade.
  Launch();
};

// Lives in the renderer process. The browser uses this to send upgrade
// updates to the web page in the renderer.
interface Page {
  // Callback to receive the container backup progress once the export has
  // started.
  OnBackupProgress(int32 percent);
  // This is called when the backup succeeded.
  OnBackupSucceeded();
  // This is called when the backup failed.
  OnBackupFailed();
  // Callback to receive the upgrade progress once the upgrade has started.
  OnUpgradeProgress(array<string> progress_messages);
  // This is called when the upgrade succeeded.
  OnUpgradeSucceeded();
  // This is called when the upgrade failed.
  OnUpgradeFailed();
  // After user cancels the upgrade, this is called when the cancellation
  // finishes.
  OnCanceled();
};
