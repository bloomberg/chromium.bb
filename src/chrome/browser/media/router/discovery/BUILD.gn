# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")

assert(!is_android)

static_library("discovery") {
  inputs = [ "$root_gen_dir/chrome/grit/generated_resources.h" ]
  deps = [
    "//base",
    "//base:i18n",
    "//build:chromeos_buildflags",
    "//chrome/app:generated_resources",
    "//chrome/browser:browser_process",
    "//chrome/browser/media/router:data_decoder_util",
    "//chrome/browser/media/router:media_router_feature",
    "//chrome/browser/media/router/discovery/access_code:discovery_resources_proto",
    "//chrome/browser/profiles:profile",
    "//chrome/browser/signin:identity_manager_provider",
    "//chrome/browser/ui/webui/access_code_cast:mojo_bindings",
    "//chrome/common:constants",
    "//components/cast_channel",
    "//components/leveldb_proto:leveldb_proto",
    "//components/media_router/browser",
    "//components/media_router/common",
    "//components/media_router/common/mojom:logger",
    "//components/net_log",
    "//components/prefs",
    "//components/signin/public/base:base",
    "//components/signin/public/identity_manager:identity_manager",
    "//components/user_manager:user_manager",
    "//components/version_info",
    "//content/public/browser",
    "//content/public/common",
    "//services/network/public/cpp",
    "//third_party/openscreen/src/cast/common/channel/proto:channel_proto",
  ]
  sources = [
    "access_code/access_code_cast_discovery_interface.cc",
    "access_code/access_code_cast_discovery_interface.h",
    "access_code/access_code_media_sink_util.cc",
    "access_code/access_code_media_sink_util.h",
    "access_code/access_code_test_util.cc",
    "access_code/access_code_test_util.h",
    "dial/device_description_fetcher.cc",
    "dial/device_description_fetcher.h",
    "dial/device_description_service.cc",
    "dial/device_description_service.h",
    "dial/dial_app_discovery_service.cc",
    "dial/dial_app_discovery_service.h",
    "dial/dial_device_data.cc",
    "dial/dial_device_data.h",
    "dial/dial_media_sink_service.cc",
    "dial/dial_media_sink_service.h",
    "dial/dial_media_sink_service_impl.cc",
    "dial/dial_media_sink_service_impl.h",
    "dial/dial_registry.cc",
    "dial/dial_registry.h",
    "dial/dial_service.h",
    "dial/dial_service_impl.cc",
    "dial/dial_service_impl.h",
    "dial/dial_url_fetcher.cc",
    "dial/dial_url_fetcher.h",
    "dial/parsed_dial_app_info.cc",
    "dial/parsed_dial_app_info.h",
    "dial/parsed_dial_device_description.cc",
    "dial/parsed_dial_device_description.h",
    "dial/safe_dial_app_info_parser.cc",
    "dial/safe_dial_app_info_parser.h",
    "dial/safe_dial_device_description_parser.cc",
    "dial/safe_dial_device_description_parser.h",
    "discovery_network_info.cc",
    "discovery_network_info.h",
    "discovery_network_list.h",
    "discovery_network_list_wifi.h",
    "discovery_network_monitor.cc",
    "discovery_network_monitor.h",
    "mdns/cast_media_sink_service.cc",
    "mdns/cast_media_sink_service.h",
    "mdns/cast_media_sink_service_impl.cc",
    "mdns/cast_media_sink_service_impl.h",
    "mdns/dns_sd_delegate.cc",
    "mdns/dns_sd_delegate.h",
    "mdns/dns_sd_device_lister.cc",
    "mdns/dns_sd_device_lister.h",
    "mdns/dns_sd_registry.cc",
    "mdns/dns_sd_registry.h",
    "mdns/media_sink_util.cc",
    "mdns/media_sink_util.h",
    "media_sink_discovery_metrics.cc",
    "media_sink_discovery_metrics.h",
  ]

  if (is_linux || is_chromeos) {
    sources += [ "discovery_network_list_wifi_linux.cc" ]
  }

  if (is_chromeos_ash) {
    deps += [ "//chromeos/network" ]
  }

  if (is_posix) {
    sources += [ "discovery_network_list_posix.cc" ]
  }

  if (is_fuchsia) {
    sources += [ "discovery_network_list_fuchsia.cc" ]
  }

  if (is_mac) {
    sources += [ "discovery_network_list_wifi_mac.mm" ]
    frameworks = [ "CoreWLAN.framework" ]
  }

  if (is_win) {
    sources += [ "discovery_network_list_win.cc" ]
    libs = [ "iphlpapi.lib" ]
  }
}
