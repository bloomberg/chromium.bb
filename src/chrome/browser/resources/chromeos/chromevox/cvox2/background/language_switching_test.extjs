// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Include test fixture.
GEN_INCLUDE(['../../testing/chromevox_next_e2e_test_base.js']);

GEN_INCLUDE(['../../testing/mock_feedback.js']);

/**
 * Test fixture for LanguageSwitching.
 * @constructor
 * @extends {ChromeVoxE2ETest}
 */
function ChromeVoxLanguageSwitchingTest() {
  ChromeVoxNextE2ETest.call(this);
}

ChromeVoxLanguageSwitchingTest.prototype = {
  __proto__: ChromeVoxNextE2ETest.prototype,

  /** @override */
  setUp: function() {
    window.doCmd = this.doCmd;
  },

  /**
   * @return {!MockFeedback}
   */
  createMockFeedback: function() {
    var mockFeedback = new MockFeedback(this.newCallback(),
      this.newCallback.bind(this));

    mockFeedback.install();
    return mockFeedback;
  },

  /**
   * Create a function which performs the command |cmd|.
   * @param {string} cmd
   * @return {function(): void}
   */
  doCmd: function(cmd) {
    return function() {
      CommandHandler.onCommand(cmd);
    }
  },

  multipleLanguagesDoc: function() {/*!
    <p lang="en">Hello.</p>
    <p lang="es">Hola.</p>
    <p lang="fr">Salut.</p>
    <span lang="it">Ciao.</span>
  */},

  nestedLanguagesDoc: function() {/*!
    <p id="breakfast" lang="en">In the morning, I sometimes eat breakfast.</p>
    <p id="lunch" lang="fr">Dans l'apres-midi, je dejeune.</p>
    <p id="greeting" lang="en">
      Hello it's a pleasure to meet you.
    <span lang="fr">Comment ca va?</span>Switching back to English.<span lang="es">Hola.</span>Goodbye.
</p>
  */},

  dialectsDoc: function() {/*!
    <p lang="en-gb">Spoken in GB English.</p>
    <p lang="en-us">This text should also be in GB English.</p>
    <p lang="en-us">So should this text.</p>
    */},

  buttonAndLinkDoc: function() {/*!
    <body lang="es">
      <p>This is a paragraph, spoken in Spanish.</p>
      <button type="submit">This is a button, spoken in Spanish.</button>
      <a href="https://www.google.com">This is a link, spoken in Spanish.</a>
    </body>
  */},
};

TEST_F('ChromeVoxLanguageSwitchingTest', 'MultipleLanguagesTest', function() {
  var mockFeedback = this.createMockFeedback();
  this.runWithLoadedTree(this.multipleLanguagesDoc, function() {
    // Turn on language switching.
    localStorage['languageSwitching'] = 'true';

    mockFeedback.call(doCmd('jumpToTop')).expectSpeechWithLanguage('en', 'Hello.');
    mockFeedback.call(doCmd('nextLine')).expectSpeechWithLanguage('es', 'Hola.');
    mockFeedback.call(doCmd('nextLine')).expectSpeechWithLanguage('fr', 'Salut.');
    mockFeedback.call(doCmd('nextLine')).expectSpeechWithLanguage('it', 'Ciao.');
    mockFeedback.replay();
  });
});

TEST_F('ChromeVoxLanguageSwitchingTest', 'NestedLanguagesTest', function() {
  var mockFeedback = this.createMockFeedback();
  this.runWithLoadedTree(this.nestedLanguagesDoc, function() {
    localStorage['languageSwitching'] = 'true';

    mockFeedback.call(doCmd('jumpToTop'))
        .expectSpeechWithLanguage('en', 'In the morning, I sometimes eat breakfast.');
    mockFeedback.call(doCmd('nextLine'))
        .expectSpeechWithLanguage('fr', "Dans l'apres-midi, je dejeune.");
    mockFeedback.call(doCmd('nextLine'))
        .expectSpeechWithLanguage('en', "Hello it's a pleasure to meet you. ");
    mockFeedback.call(doCmd('nextLine'))
        .expectSpeechWithLanguage('fr', 'Comment ca va?');
    mockFeedback.call(doCmd('nextLine'))
        .expectSpeechWithLanguage('en', 'Switching back to English.');
    mockFeedback.call(doCmd('nextLine'))
        .expectSpeechWithLanguage('es', 'Hola.');
    mockFeedback.call(doCmd('nextLine'))
        .expectSpeechWithLanguage('en', 'Goodbye.');
    mockFeedback.replay();
  });
});

TEST_F('ChromeVoxLanguageSwitchingTest', 'DialectTest', function() {
  var mockFeedback = this.createMockFeedback();
  this.runWithLoadedTree(this.dialectsDoc, function(root) {
    localStorage['languageSwitching'] = 'true';

    mockFeedback.call(doCmd('jumpToTop'))
      .call(doCmd('nextLine'))
      .call(doCmd('nextLine'))
      .expectSpeechWithLanguage('en-gb', 'Spoken in GB English.',
      'This text should also be in GB English.', 'So should this text.');
    mockFeedback.replay();
  });
});

TEST_F('ChromeVoxLanguageSwitchingTest', 'ButtonAndLinkTest', function() {
  var mockFeedback = this.createMockFeedback();
  this.runWithLoadedTree(this.buttonAndLinkDoc, function(root) {
    localStorage['languageSwitching'] = 'true';

    mockFeedback.call(doCmd('jumpToTop'))
      .expectSpeechWithLanguage('es', 'This is a paragraph, spoken in Spanish.')
      .call(doCmd('nextObject'))
      .expectSpeechWithLanguage('es', 'This is a button, spoken in Spanish.')
      .expectSpeechWithLanguage(undefined, 'Button', 'Press Search+Space to activate.')
      .call(doCmd('nextObject'))
      .expectSpeechWithLanguage('es', 'This is a link, spoken in Spanish.')
      .expectSpeechWithLanguage(undefined, 'Link');
    mockFeedback.replay();
  });
});
