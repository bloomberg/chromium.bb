# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/features.gni")
import(
    "//chrome/browser/resources/chromeos/accessibility/chromevox/run_jsbundler.gni")
import("//chrome/common/features.gni")
import("//chrome/test/base/js2gtest.gni")
import("//testing/test.gni")
import("//third_party/closure_compiler/compile_js.gni")

assert(is_chromeos)

switch_access_dir =
    "$root_out_dir/resources/chromeos/accessibility/switch_access"

group("build") {
  deps = [ ":switch_access_copied_files" ]
}

# Instead of setting up one copy target for each subdirectory, use a script
# to copy all files.
run_jsbundler("switch_access_copied_files") {
  mode = "copy"
  dest_dir = switch_access_dir
  sources = [
    "auto_scan_manager.js",
    "background.js",
    "commands.js",
    "event_helper.js",
    "focus_ring_manager.js",
    "history.js",
    "icons/back.svg",
    "icons/copy.svg",
    "icons/cut.svg",
    "icons/decrement.svg",
    "icons/dictation.svg",
    "icons/increment.svg",
    "icons/jumpToBeginningOfText.svg",
    "icons/jumpToEndOfText.svg",
    "icons/keyboard.svg",
    "icons/moveBackwardOneCharOfText.svg",
    "icons/moveBackwardOneWordOfText.svg",
    "icons/moveCursor.svg",
    "icons/moveDownOneLineOfText.svg",
    "icons/moveForwardOneCharOfText.svg",
    "icons/moveForwardOneWordOfText.svg",
    "icons/moveUpOneLineOfText.svg",
    "icons/paste.svg",
    "icons/scrollDownOrForward.svg",
    "icons/scrollLeft.svg",
    "icons/scrollRight.svg",
    "icons/scrollUpOrBackward.svg",
    "icons/select.svg",
    "icons/settings.svg",
    "icons/showContextMenu.svg",
    "icons/textSelectionEnd.svg",
    "icons/textSelectionStart.svg",
    "menu_manager.js",
    "menu_panel.css",
    "menu_panel.html",
    "menu_panel.js",
    "menu_panel_interface.js",
    "metrics.js",
    "navigation_manager.js",
    "nodes/back_button_node.js",
    "nodes/desktop_node.js",
    "nodes/editable_text_node.js",
    "nodes/group_node.js",
    "nodes/keyboard_node.js",
    "nodes/node_wrapper.js",
    "nodes/switch_access_node.js",
    "nodes/system_menu_node.js",
    "nodes/tab_node.js",
    "preferences.js",
    "rect_helper.js",
    "switch_access.js",
    "switch_access_constants.js",
    "switch_access_predicate.js",
    "text_navigation_manager.js",
  ]
  rewrite_rules = [
    rebase_path(".", root_build_dir) + ":",
    rebase_path(closure_library_dir, root_build_dir) + ":closure",
  ]
}

source_set("browser_tests") {
  testonly = true
  assert(enable_extensions)

  deps = [ ":switch_access_extjs_tests" ]

  data = [
    "//chrome/browser/resources/chromeos/accessibility/chromevox/",
    "//chrome/browser/resources/chromeos/accessibility/switch_access/",
    "//ui/webui/resources/js/cr.js",
  ]
  data += js2gtest_js_libraries
}

js2gtest("switch_access_extjs_tests") {
  test_type = "extension"
  sources = [
    "auto_scan_manager_test.js",
    "navigation_manager_test.js",
    "nodes/desktop_node_test.js",
    "nodes/node_wrapper_test.js",
    "nodes/tab_node_test.js",
    "switch_access_predicate_test.js",
    "text_navigation_manager_test.js",
  ]
  gen_include_files = [
    "../chromevox/testing/callback_helper.js",
    "switch_access_e2e_test_base.js",
  ]

  # The test base classes generate C++ code with these deps.
  deps = [
    "//ash",
    "//ash/keyboard/ui",
    "//base",
    "//chrome/browser/chromeos",
    "//chrome/common",
    "//chromeos",
  ]
  defines = [ "HAS_OUT_OF_PROC_TEST_RUNNER" ]
}

js_type_check("closure_compile") {
  deps = [
    ":auto_scan_manager",
    ":back_button_node",
    ":background",
    ":commands",
    ":desktop_node",
    ":editable_text_node",
    ":event_helper",
    ":focus_ring_manager",
    ":group_node",
    ":history",
    ":keyboard_node",
    ":menu_manager",
    ":menu_panel",
    ":menu_panel_interface",
    ":metrics",
    ":navigation_manager",
    ":node_wrapper",
    ":preferences",
    ":rect_helper",
    ":switch_access",
    ":switch_access_constants",
    ":switch_access_node",
    ":switch_access_predicate",
    ":system_menu_node",
    ":tab_node",
    ":text_navigation_manager",
    "../common:closure_shim",
    "../common:constants",
    "../common:tree_walker",
  ]
}

js_library("auto_scan_manager") {
  deps = [ ":switch_access_constants" ]
}

js_library("background") {
  deps = [ ":switch_access" ]
  externs_list = [ "$externs_path/chrome_extensions.js" ]
}

js_library("back_button_node") {
  sources = [ "nodes/back_button_node.js" ]
  deps = [
    ":rect_helper",
    ":switch_access_constants",
    ":switch_access_node",
  ]
  externs_list = [
    "$externs_path/accessibility_private.js",
    "$externs_path/automation.js",
  ]
}

js_library("commands") {
  externs_list = [ "$externs_path/accessibility_private.js" ]
}

js_library("desktop_node") {
  sources = [ "nodes/desktop_node.js" ]
  deps = [ ":node_wrapper" ]
  externs_list = [ "$externs_path/automation.js" ]
}

js_library("editable_text_node") {
  sources = [ "nodes/editable_text_node.js" ]
  deps = [
    ":node_wrapper",
    ":switch_access_constants",
    ":switch_access_node",
  ]
  externs_list = [
    "$externs_path/accessibility_private.js",
    "$externs_path/automation.js",
  ]
}

js_library("event_helper") {
  externs_list = [ "$externs_path/accessibility_private.js" ]
}

js_library("focus_ring_manager") {
  deps = [
    ":menu_panel_interface",
    ":node_wrapper",
    ":switch_access_node",
  ]
  externs_list = [ "$externs_path/accessibility_private.js" ]
}

js_library("group_node") {
  sources = [ "nodes/group_node.js" ]
  deps = [
    ":back_button_node",
    ":node_wrapper",
    ":rect_helper",
    ":switch_access_constants",
    ":switch_access_node",
  ]
  externs_list = [
    "$externs_path/accessibility_private.js",
    "$externs_path/automation.js",
  ]
}

js_library("history") {
  deps = [
    ":desktop_node",
    ":node_wrapper",
    ":switch_access_node",
    ":switch_access_predicate",
  ]
  externs_list = [ "$externs_path/automation.js" ]
}

js_library("keyboard_node") {
  sources = [ "nodes/keyboard_node.js" ]
  deps = [
    ":event_helper",
    ":group_node",
    ":node_wrapper",
    ":rect_helper",
    ":switch_access_constants",
    ":switch_access_node",
    ":switch_access_predicate",
    "../common:constants",
    "../common:tree_walker",
  ]
  externs_list = [
    "$externs_path/accessibility_private.js",
    "$externs_path/automation.js",
  ]
}

js_library("menu_manager") {
  deps = [
    ":event_helper",
    ":menu_panel_interface",
    ":metrics",
    ":node_wrapper",
    ":rect_helper",
    ":switch_access_constants",
    ":switch_access_node",
    ":switch_access_predicate",
    ":text_navigation_manager",
    "../common:constants",
    "../common:tree_walker",
  ]
  externs_list = [
    "$externs_path/accessibility_private.js",
    "$externs_path/automation.js",
    "$externs_path/clipboard.js",
  ]
}

js_library("menu_panel") {
  deps = [
    ":menu_manager",
    ":switch_access_constants",
  ]
  externs_list = [ "$externs_path/chrome_extensions.js" ]
}

js_library("menu_panel_interface") {
}

js_library("metrics") {
  deps = [ ":switch_access_constants" ]
  externs_list = [ "$externs_path/metrics_private.js" ]
}

js_library("navigation_manager") {
  deps = [
    ":desktop_node",
    ":focus_ring_manager",
    ":keyboard_node",
    ":menu_manager",
    ":menu_panel_interface",
    ":metrics",
    ":node_wrapper",
    ":switch_access_constants",
    ":switch_access_node",
    ":switch_access_predicate",
    ":system_menu_node",
  ]
  externs_list = [
    "$externs_path/accessibility_private.js",
    "$externs_path/automation.js",
  ]
}

js_library("node_wrapper") {
  sources = [ "nodes/node_wrapper.js" ]
  deps = [
    ":back_button_node",
    ":switch_access_constants",
    ":switch_access_node",
    ":switch_access_predicate",
    "../common:constants",
    "../common:tree_walker",
  ]
  externs_list = [
    "$externs_path/accessibility_private.js",
    "$externs_path/automation.js",
  ]
}

js_library("preferences") {
  deps = [ ":switch_access_constants" ]
  externs_list = [ "$externs_path/settings_private.js" ]
}

js_library("rect_helper") {
  externs_list = [ "$externs_path/accessibility_private.js" ]
}

js_library("switch_access") {
  deps = [
    ":auto_scan_manager",
    ":commands",
    ":menu_manager",
    ":menu_panel_interface",
    ":navigation_manager",
    ":preferences",
    ":switch_access_constants",
    "../common:constants",
    "../common:tree_walker",
  ]
  externs_list = [
    "$externs_path/automation.js",
    "$externs_path/command_line_private.js",
    "$externs_path/metrics_private.js",
  ]
}

js_library("switch_access_constants") {
}

js_library("switch_access_node") {
  sources = [ "nodes/switch_access_node.js" ]
  deps = [ ":switch_access_constants" ]
  externs_list = [
    "$externs_path/accessibility_private.js",
    "$externs_path/automation.js",
  ]
}

js_library("switch_access_predicate") {
  deps = [
    ":switch_access_constants",
    ":switch_access_node",
  ]
  externs_list = [ "$externs_path/automation.js" ]
}

js_library("system_menu_node") {
  sources = [ "nodes/system_menu_node.js" ]
  deps = [
    ":event_helper",
    ":node_wrapper",
    ":switch_access_constants",
    ":switch_access_node",
  ]
  externs_list = [ "$externs_path/automation.js" ]
}

js_library("tab_node") {
  sources = [ "nodes/tab_node.js" ]
  deps = [
    ":node_wrapper",
    ":rect_helper",
    ":switch_access_constants",
    ":switch_access_node",
  ]
  externs_list = [ "$externs_path/automation.js" ]
}

js_library("text_navigation_manager") {
  deps = [ ":event_helper" ]
  externs_list = [
    "$externs_path/accessibility_private.js",
    "$externs_path/automation.js",
  ]
}
