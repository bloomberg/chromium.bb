# Copyright 2022 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//components/signin/features.gni")

# Files that don't hold a Polymer element definition.
_non_web_component_files = [
  "sync_confirmation/sync_confirmation_browser_proxy.ts",
  "sync_confirmation/sync_confirmation.ts",
]

if (!is_chromeos_ash) {
  _non_web_component_files += [
    "enterprise_profile_welcome/enterprise_profile_welcome_browser_proxy.ts",
    "profile_customization/profile_customization_browser_proxy.ts",
    "signin_error/signin_error.ts",
  ]
}
if (enable_dice_support) {
  _non_web_component_files += [
    "dice_web_signin_intercept/dice_web_signin_intercept_browser_proxy.ts",
    "signin_reauth/signin_reauth_browser_proxy.ts",
  ]
}

# Files holding a Polymer element definition and have an equivalent .html file.
_web_component_files = [
  "sync_confirmation/sync_confirmation_app.ts",
  "sync_confirmation/sync_disabled_confirmation_app.ts",
]

if (!is_chromeos_ash) {
  _web_component_files += [
    "enterprise_profile_welcome/enterprise_profile_welcome_app.ts",
    "profile_customization/profile_customization_app.ts",
    "signin_email_confirmation/signin_email_confirmation_app.ts",
    "signin_error/signin_error_app.ts",
  ]
}
if (enable_dice_support) {
  _web_component_files += [
    "dice_web_signin_intercept/dice_web_signin_intercept_app.ts",
    "signin_reauth/signin_reauth_app.ts",
  ]
}

# Files that are passed as input to html_to_wrapper().
html_files = []
foreach(f, _web_component_files) {
  html_files += [ string_replace(f, ".ts", ".html") ]
}

# Files that are generated by html_to_wrapper().
html_wrapper_files = []
foreach(f, html_files) {
  html_wrapper_files += [ f + ".ts" ]
}

# Files that are passed as input to css_to_wrapper().
css_files = [
  "signin_shared.css",
  "signin_vars.css",
]

# Files that are generated by css_to_wrapper().
css_wrapper_files = []
foreach(f, css_files) {
  css_wrapper_files += [ f + ".ts" ]
}

ts_files = _web_component_files + _non_web_component_files
