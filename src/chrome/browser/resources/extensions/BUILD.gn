# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//chrome/common/features.gni")
import("//extensions/buildflags/buildflags.gni")
import("//tools/grit/grit_rule.gni")
import("//tools/grit/preprocess_if_expr.gni")
import("//tools/polymer/html_to_js.gni")
import("//tools/typescript/ts_library.gni")
import("//ui/webui/resources/tools/generate_grd.gni")
import("../tools/optimize_webui.gni")

assert(enable_extensions, "enable extensions check failed")

preprocess_folder = "preprocessed"

if (optimize_webui) {
  build_manifest = "build_manifest.json"

  optimize_webui("build") {
    host = "extensions"
    input = rebase_path("$target_gen_dir/tsc", root_build_dir)
    js_out_files = [ "extensions.rollup.js" ]
    js_module_in_files = [ "extensions.js" ]
    out_manifest = "$target_gen_dir/$build_manifest"

    deps = [
      ":build_ts",
      "../../../../ui/webui/resources:preprocess",
    ]
    excludes = [ "chrome://resources/js/cr.m.js" ]
  }
}

generate_grd("build_grd") {
  grd_prefix = "extensions"
  out_grd = "$target_gen_dir/${grd_prefix}_resources.grd"
  input_files = [ "extensions.html" ]
  input_files_base_dir = rebase_path(".", "//")

  if (optimize_webui) {
    deps = [ ":build" ]
    resource_path_rewrites = [ "extensions.rollup.js|extensions.js" ]
    manifest_files = [ "$target_gen_dir/$build_manifest" ]
  } else {
    deps = [ ":build_ts" ]
    manifest_files = [ "$target_gen_dir/tsconfig.manifest" ]
  }
}

preprocess_if_expr("preprocess") {
  in_folder = "./"
  out_folder = "$target_gen_dir/$preprocess_folder"
  in_files = [
    "drag_and_drop_handler.ts",
    "extensions.ts",
    "item_mixin.ts",
    "item_util.ts",
    "keyboard_shortcut_delegate.ts",
    "navigation_helper.ts",
    "service.ts",
    "shortcut_util.ts",
  ]

  if (is_chromeos_ash) {
    in_files += [ "kiosk_browser_proxy.ts" ]
  }
}

preprocess_if_expr("preprocess_generated") {
  public_deps = [ ":web_components" ]
  in_folder = target_gen_dir
  out_folder = "$target_gen_dir/$preprocess_folder"
  in_files = [
    "code_section.ts",
    "activity_log/activity_log_history_item.ts",
    "activity_log/activity_log_history.ts",
    "activity_log/activity_log.ts",
    "activity_log/activity_log_stream_item.ts",
    "activity_log/activity_log_stream.ts",
    "detail_view.ts",
    "drop_overlay.ts",
    "error_page.ts",
    "host_permissions_toggle_list.ts",
    "icons.ts",
    "install_warnings_dialog.ts",
    "item.ts",
    "item_list.ts",
    "keyboard_shortcuts.ts",
    "load_error.ts",
    "manager.ts",
    "options_dialog.ts",
    "pack_dialog_alert.ts",
    "pack_dialog.ts",
    "runtime_host_permissions.ts",
    "runtime_hosts_dialog.ts",
    "shared_style.ts",
    "shared_vars.ts",
    "shortcut_input.ts",
    "sidebar.ts",
    "site_access.ts",
    "toggle_row.ts",
    "toolbar.ts",
  ]

  if (is_chromeos_ash) {
    in_files += [ "kiosk_dialog.ts" ]
  }
}

group("web_components") {
  public_deps = [
    ":web_components_local",
    "activity_log:web_components",
  ]
}

html_to_js("web_components_local") {
  js_files = [
    "code_section.ts",
    "detail_view.ts",
    "drop_overlay.ts",
    "error_page.ts",
    "host_permissions_toggle_list.ts",
    "icons.ts",
    "install_warnings_dialog.ts",
    "item.ts",
    "item_list.ts",
    "keyboard_shortcuts.ts",
    "load_error.ts",
    "manager.ts",
    "options_dialog.ts",
    "pack_dialog.ts",
    "pack_dialog_alert.ts",
    "runtime_host_permissions.ts",
    "runtime_hosts_dialog.ts",
    "shared_style.ts",
    "shared_vars.ts",
    "shortcut_input.ts",
    "sidebar.ts",
    "site_access.ts",
    "toggle_row.ts",
    "toolbar.ts",
  ]

  if (is_chromeos_ash) {
    js_files += [ "kiosk_dialog.ts" ]
  }
}

grit("resources") {
  defines = chrome_grit_defines

  # These arguments are needed since the grd is generated at build time.
  enable_input_discovery_for_gn_analyze = false
  source = "$target_gen_dir/extensions_resources.grd"
  deps = [ ":build_grd" ]

  outputs = [
    "grit/extensions_resources.h",
    "grit/extensions_resources_map.cc",
    "grit/extensions_resources_map.h",
    "extensions_resources.pak",
  ]
  output_dir = "$root_gen_dir/chrome"
}

ts_library("build_ts") {
  root_dir = "$target_gen_dir/$preprocess_folder"
  out_dir = "$target_gen_dir/tsc"
  tsconfig_base = "tsconfig_base.json"
  in_files = [
    "activity_log/activity_log_history_item.ts",
    "activity_log/activity_log_history.ts",
    "activity_log/activity_log.ts",
    "activity_log/activity_log_stream_item.ts",
    "activity_log/activity_log_stream.ts",
    "code_section.ts",
    "detail_view.ts",
    "drag_and_drop_handler.ts",
    "drop_overlay.ts",
    "error_page.ts",
    "extensions.ts",
    "host_permissions_toggle_list.ts",
    "icons.ts",
    "install_warnings_dialog.ts",
    "item_mixin.ts",
    "item.ts",
    "item_list.ts",
    "item_util.ts",
    "keyboard_shortcut_delegate.ts",
    "keyboard_shortcuts.ts",
    "load_error.ts",
    "manager.ts",
    "navigation_helper.ts",
    "options_dialog.ts",
    "pack_dialog_alert.ts",
    "pack_dialog.ts",
    "runtime_host_permissions.ts",
    "runtime_hosts_dialog.ts",
    "service.ts",
    "shared_style.ts",
    "shared_vars.ts",
    "shortcut_input.ts",
    "shortcut_util.ts",
    "sidebar.ts",
    "site_access.ts",
    "toggle_row.ts",
    "toolbar.ts",
  ]
  definitions = [
    "//tools/typescript/definitions/activity_log_private.d.ts",
    "//tools/typescript/definitions/chrome_event.d.ts",
    "//tools/typescript/definitions/developer_private.d.ts",
    "//tools/typescript/definitions/management.d.ts",
    "//tools/typescript/definitions/metrics_private.d.ts",
    "//tools/typescript/definitions/runtime.d.ts",
  ]

  if (is_chromeos_ash) {
    in_files += [
      "kiosk_browser_proxy.ts",
      "kiosk_dialog.ts",
    ]
    definitions += [ "//tools/typescript/definitions/chrome_send.d.ts" ]
  }

  deps = [
    "//third_party/polymer/v3_0:library",
    "//ui/webui/resources:library",
  ]
  extra_deps = [
    ":preprocess",
    ":preprocess_generated",
  ]
}
