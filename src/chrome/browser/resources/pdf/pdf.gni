# Copyright 2022 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//pdf/features.gni")

# ------------------PDF-only files---------------------------------------------

# Files holding a Polymer element definition AND have an equivalent .html file
# AND are used only in PDF Viewer.
pdf_web_component_files = [
  "elements/viewer-bookmark.ts",
  "elements/viewer-document-outline.ts",
  "elements/viewer-download-controls.ts",
  "elements/viewer-page-selector.ts",
  "elements/viewer-password-dialog.ts",
  "elements/viewer-pdf-sidenav.ts",
  "elements/viewer-properties-dialog.ts",
  "elements/viewer-thumbnail-bar.ts",
  "elements/viewer-thumbnail.ts",
  "elements/viewer-toolbar.ts",
  "pdf_viewer.ts",
]

if (enable_ink) {
  pdf_web_component_files += [
    "elements/viewer-annotations-bar.ts",
    "elements/viewer-annotations-mode-dialog.ts",
    "elements/viewer-ink-host.ts",
    "elements/viewer-pen-options.ts",
    "elements/viewer-toolbar-dropdown.ts",
  ]
}

# Files that are passed as input to html_to_wrapper().
pdf_html_files = []
foreach(f, pdf_web_component_files) {
  pdf_html_files += [ string_replace(f, ".ts", ".html") ]
}

# Files that are generated by html_to_wrapper().
pdf_html_wrapper_files = []
foreach(f, pdf_html_files) {
  pdf_html_wrapper_files += [ f + ".ts" ]
}

# Files that are passed as input to css_to_wrapper().
pdf_css_files = [ "elements/pdf-shared.css" ]

# Files that are generated by css_to_wrapper().
pdf_css_wrapper_files = []
foreach(f, pdf_css_files) {
  pdf_css_wrapper_files += [ f + ".ts" ]
}

# Files to pass directly to preprocess_if_expr() that are used only in PDF
# Viewer.
pdf_ts_files = [
                 "bookmark_type.ts",
                 "local_storage_proxy.ts",
                 "navigator.ts",
                 "pdf_viewer_wrapper.ts",
                 "pdf_internal_plugin_wrapper.ts",
               ] + pdf_web_component_files

if (enable_ink) {
  pdf_ts_files += [
    "annotation_tool.ts",
    "ink_controller.ts",
    "ink/ink_api.ts",
  ]
}

# ------------------PDF-only files end------------------------------------------

# ------------------PrintPreview-only files--------------------------------------

# Files holding a Polymer element definition AND have an equivalent .html file
# AND are used only in Print Preview.
print_preview_web_component_files = [
  "elements/viewer-page-indicator.ts",
  "elements/viewer-zoom-button.ts",
  "elements/viewer-zoom-toolbar.ts",
  "pdf_viewer_pp.ts",
]

# Files that are passed as input to html_to_wrapper().
print_preview_html_files = []
foreach(f, print_preview_web_component_files) {
  print_preview_html_files += [ string_replace(f, ".ts", ".html") ]
}

# Files that are generated by html_to_wrapper().
print_preview_html_wrapper_files = []
foreach(f, print_preview_html_files) {
  print_preview_html_wrapper_files += [ f + ".ts" ]
}

# Files to pass directly to preprocess_if_expr() that are used only in Print
# Preview.
print_preview_ts_files =
    [ "toolbar_manager.ts" ] + print_preview_web_component_files

# ------------------PrintPreview-only files end---------------------------------

# ------------------Shared files------------------------------------------------

# Files holding a Polymer element definition AND have an equivalent .html file
# AND are used both in Print Preview and PDF Viewer.
shared_web_component_files = [ "elements/viewer-error-dialog.ts" ]

# Files that are passed as input to html_to_wrapper().
shared_html_files = []
foreach(f, shared_web_component_files) {
  shared_html_files += [ string_replace(f, ".ts", ".html") ]
}

shared_icons_html_files = [ "elements/icons.html" ]

# Files that are generated by html_to_wrapper().
shared_html_wrapper_files = []
foreach(f, shared_html_files + shared_icons_html_files) {
  shared_html_wrapper_files += [ f + ".ts" ]
}

# Files to pass directly to preprocess_if_expr() that are shared by PDF Viewer
# and Print Preview.
shared_ts_files = [
                    "browser_api.ts",
                    "constants.ts",
                    "controller.ts",
                    "gesture_detector.ts",
                    "internal_plugin.ts",
                    "main.ts",
                    "metrics.ts",
                    "open_pdf_params_parser.ts",
                    "pdf_scripting_api.ts",
                    "pdf_viewer_base.ts",
                    "pdf_viewer_utils.ts",
                    "swipe_detector.ts",
                    "viewport.ts",
                    "viewport_scroller.ts",
                    "zoom_manager.ts",
                  ] + shared_web_component_files

# Files that are passed as input to css_to_wrapper().
shared_css_files = [
  "elements/shared-vars.css",
  "pdf_viewer_shared_style.css",
]

# Files that are generated by css_to_wrapper().
shared_css_wrapper_files = []
foreach(f, shared_css_files) {
  shared_css_wrapper_files += [ f + ".ts" ]
}

# ------------------Shared files end--------------------------------------------

# Combined lists, to make consuming them in the BULID.gn easier.
ts_files = pdf_ts_files + shared_ts_files + print_preview_ts_files

html_files = pdf_html_files + shared_html_files + print_preview_html_files

html_wrapper_files = pdf_html_wrapper_files + shared_html_wrapper_files +
                     print_preview_html_wrapper_files

css_files = pdf_css_files + shared_css_files

css_wrapper_files = pdf_css_wrapper_files + shared_css_wrapper_files

print_preview_only_files =
    print_preview_ts_files + print_preview_html_wrapper_files

ts_definitions = [
  # Using an absolute path because this variable is also consumed by
  # chrome/test/data/pdf:build_ts.
  "//chrome/browser/resources/pdf/source_capabilities.d.ts",

  "//tools/typescript/definitions/chrome_event.d.ts",
  "//tools/typescript/definitions/content_settings.d.ts",
  "//tools/typescript/definitions/file_system.d.ts",
  "//tools/typescript/definitions/metrics_private.d.ts",
  "//tools/typescript/definitions/mime_handler_private.d.ts",
  "//tools/typescript/definitions/pending.d.ts",
  "//tools/typescript/definitions/resources_private.d.ts",
  "//tools/typescript/definitions/runtime.d.ts",
  "//tools/typescript/definitions/tabs.d.ts",
  "//tools/typescript/definitions/windows.d.ts",
]

if (enable_ink) {
  ts_definitions += [ "//chrome/browser/resources/pdf/ink/drawing_canvas.d.ts" ]
}

# Print Preview's .grdp file needs all the shared + Print Preview specific files.
print_preview_grdp_ts_files =
    shared_ts_files + shared_html_wrapper_files + shared_css_wrapper_files +
    print_preview_only_files

print_preview_grdp_input_files = []
foreach(f, print_preview_grdp_ts_files) {
  print_preview_grdp_input_files += [ string_replace(f, ".ts", ".js") ]
}
