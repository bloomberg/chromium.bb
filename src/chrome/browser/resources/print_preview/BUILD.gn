# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//chrome/common/features.gni")
import("//printing/buildflags/buildflags.gni")
import("//tools/grit/grit_rule.gni")
import("//tools/grit/preprocess_if_expr.gni")
import("//tools/typescript/ts_library.gni")
import("//ui/webui/resources/tools/generate_grd.gni")
import("../tools/optimize_webui.gni")

assert(enable_print_preview, "enable_print_preview check failed")

preprocess_folder = "preprocessed"
preprocess_pdf_manifest = "preprocessed_pdf_manifest.json"
preprocess_pdf_gen_manifest = "preprocessed_pdf_gen_manifest.json"

if (optimize_webui) {
  build_manifest = "build_manifest.json"

  optimize_webui("build") {
    host = "print"
    input = rebase_path("$target_gen_dir/tsc", root_build_dir)
    js_out_files = [ "print_preview.rollup.js" ]
    js_module_in_files = [ "print_preview.js" ]
    out_manifest = "$target_gen_dir/$build_manifest"

    deps = [
      ":build_ts",
      "../../../../ui/webui/resources:preprocess",
    ]
    excludes = [
      "chrome://resources/js/cr.m.js",
      "pdf/pdf_scripting_api.js",
    ]
  }
}

generate_grd("build_grd") {
  input_files = [ "print_preview.html" ]
  input_files_base_dir = rebase_path(".", "//")
  deps = [
    ":preprocess_pdf",
    ":preprocess_pdf_generated",
  ]
  manifest_files = [
    "$target_gen_dir/$preprocess_pdf_manifest",
    "$target_gen_dir/$preprocess_pdf_gen_manifest",
  ]
  resource_path_rewrites = [
    "pdf/index_pp.html|pdf/index.html",

    # Expose pdf_viewer_pp.js as pdf_viewer_wrapper.js so that the PDF viewer
    # and Print Preview viewer can use the same main.js source.
    "pdf/pdf_viewer_pp.js|pdf/pdf_viewer_wrapper.js",
  ]
  if (optimize_webui) {
    deps += [ ":build" ]
    resource_path_rewrites += [ "print_preview.rollup.js|print_preview.js" ]
    manifest_files += [ "$target_gen_dir/$build_manifest" ]
  } else {
    deps += [ ":build_ts" ]
    manifest_files += [ "$target_gen_dir/tsconfig.manifest" ]
  }
  grd_prefix = "print_preview"
  out_grd = "$target_gen_dir/${grd_prefix}_resources.grd"
}

preprocess_if_expr("preprocess") {
  in_folder = "./"
  out_folder = "$target_gen_dir/$preprocess_folder"
  in_files = [
    "cloud_print_interface.ts",
    "cloud_print_interface_impl.ts",
    "dark_mode_mixin.ts",
    "metrics.ts",
    "native_layer.ts",
    "print_preview.ts",
    "print_preview_utils.ts",
    "data/cdd.ts",
    "data/cloud_parsers.ts",
    "data/coordinate2d.ts",
    "data/destination.ts",
    "data/destination_match.ts",
    "data/destination_store.ts",
    "data/document_info.ts",
    "data/local_parsers.ts",
    "data/margins.ts",
    "data/measurement_system.ts",
    "data/model.ts",
    "data/printable_area.ts",
    "data/scaling.ts",
    "data/size.ts",
    "data/state.ts",
    "data/user_manager.ts",
    "ui/highlight_utils.ts",
    "ui/input_mixin.ts",
    "ui/plugin_proxy.ts",
    "ui/select_mixin.ts",
    "ui/settings_mixin.ts",
  ]

  if (is_chromeos) {
    in_files += [
      "data/print_server_store.ts",
      "data/printer_status_cros.ts",
      "native_layer_cros.ts",
    ]
  }
}

preprocess_if_expr("preprocess_generated") {
  deps = [ "ui:web_components" ]
  in_folder = target_gen_dir
  out_folder = "$target_gen_dir/$preprocess_folder"
  in_files = [
    "ui/advanced_options_settings.ts",
    "ui/advanced_settings_dialog.ts",
    "ui/advanced_settings_item.ts",
    "ui/app.ts",
    "ui/button_strip.ts",
    "ui/color_settings.ts",
    "ui/copies_settings.ts",
    "ui/destination_dialog_css.ts",
    "ui/destination_list.ts",
    "ui/destination_list_item.ts",
    "ui/destination_select_css.ts",
    "ui/destination_settings.ts",
    "ui/dpi_settings.ts",
    "ui/duplex_settings.ts",
    "ui/header.ts",
    "ui/icons.ts",
    "ui/layout_settings.ts",
    "ui/margin_control.ts",
    "ui/margin_control_container.ts",
    "ui/margins_settings.ts",
    "ui/media_size_settings.ts",
    "ui/more_settings.ts",
    "ui/number_settings_section.ts",
    "ui/other_options_settings.ts",
    "ui/pages_per_sheet_settings.ts",
    "ui/pages_settings.ts",
    "ui/preview_area.ts",
    "ui/print_preview_search_box.ts",
    "ui/print_preview_shared_css.ts",
    "ui/print_preview_vars_css.ts",
    "ui/scaling_settings.ts",
    "ui/settings_section.ts",
    "ui/settings_select.ts",
    "ui/sidebar.ts",
    "ui/throbber_css.ts",
  ]

  if (is_chromeos) {
    in_files += [
      "ui/destination_dropdown_cros.ts",
      "ui/destination_select_cros.ts",
      "ui/pin_settings.ts",
      "ui/provisional_destination_resolver.ts",
      "ui/destination_dialog_cros.ts",
    ]
  } else {
    in_files += [
      "ui/destination_select.ts",
      "ui/link_container.ts",
      "ui/destination_dialog.ts",
    ]
  }
}

preprocess_if_expr("preprocess_pdf") {
  in_folder = "../"
  out_folder = "$target_gen_dir/$preprocess_folder"
  out_manifest = "$target_gen_dir/$preprocess_pdf_manifest"
  in_files = [
    "pdf/browser_api.js",
    "pdf/constants.js",
    "pdf/controller.js",
    "pdf/gesture_detector.js",
    "pdf/index.css",
    "pdf/index_pp.html",
    "pdf/internal_plugin.js",
    "pdf/main.js",
    "pdf/metrics.js",
    "pdf/open_pdf_params_parser.js",
    "pdf/pdf_scripting_api.js",
    "pdf/pdf_viewer_utils.js",
    "pdf/pdf_viewer_base.js",
    "pdf/toolbar_manager.js",
    "pdf/viewport.js",
    "pdf/viewport_scroller.js",
    "pdf/zoom_manager.js",
  ]
}

preprocess_if_expr("preprocess_pdf_generated") {
  deps = [ "../pdf:web_components" ]
  in_folder = get_path_info("..", "gen_dir")
  out_folder = "$target_gen_dir/$preprocess_folder"
  out_manifest = "$target_gen_dir/$preprocess_pdf_gen_manifest"
  in_files = [
    "pdf/elements/icons.js",
    "pdf/elements/shared-vars.js",
    "pdf/elements/viewer-error-dialog.js",
    "pdf/elements/viewer-page-indicator.js",
    "pdf/elements/viewer-zoom-button.js",
    "pdf/elements/viewer-zoom-toolbar.js",
    "pdf/pdf_viewer_pp.js",
    "pdf/pdf_viewer_shared_style.js",
  ]
}

grit("resources") {
  defines = chrome_grit_defines

  # These arguments are needed since the grd is generated at build time.
  enable_input_discovery_for_gn_analyze = false
  source = "$target_gen_dir/print_preview_resources.grd"
  deps = [ ":build_grd" ]

  outputs = [
    "grit/print_preview_resources.h",
    "grit/print_preview_resources_map.cc",
    "grit/print_preview_resources_map.h",
    "print_preview_resources.pak",
  ]
  output_dir = "$root_gen_dir/chrome"
}

ts_library("build_ts") {
  root_dir = "$target_gen_dir/$preprocess_folder"
  out_dir = "$target_gen_dir/tsc"
  tsconfig_base = "tsconfig_base.json"
  in_files = [
    "cloud_print_interface.ts",
    "cloud_print_interface_impl.ts",
    "dark_mode_mixin.ts",
    "metrics.ts",
    "native_layer.ts",
    "print_preview.ts",
    "print_preview_utils.ts",
    "data/cdd.ts",
    "data/cloud_parsers.ts",
    "data/coordinate2d.ts",
    "data/destination.ts",
    "data/destination_match.ts",
    "data/destination_store.ts",
    "data/document_info.ts",
    "data/local_parsers.ts",
    "data/margins.ts",
    "data/measurement_system.ts",
    "data/model.ts",
    "data/printable_area.ts",
    "data/scaling.ts",
    "data/size.ts",
    "data/state.ts",
    "data/user_manager.ts",
    "ui/advanced_options_settings.ts",
    "ui/advanced_settings_dialog.ts",
    "ui/advanced_settings_item.ts",
    "ui/app.ts",
    "ui/button_strip.ts",
    "ui/color_settings.ts",
    "ui/copies_settings.ts",
    "ui/destination_dialog_css.ts",
    "ui/destination_list.ts",
    "ui/destination_list_item.ts",
    "ui/destination_select_css.ts",
    "ui/destination_settings.ts",
    "ui/dpi_settings.ts",
    "ui/duplex_settings.ts",
    "ui/header.ts",
    "ui/highlight_utils.ts",
    "ui/icons.ts",
    "ui/input_mixin.ts",
    "ui/layout_settings.ts",
    "ui/margin_control.ts",
    "ui/margin_control_container.ts",
    "ui/margins_settings.ts",
    "ui/media_size_settings.ts",
    "ui/more_settings.ts",
    "ui/number_settings_section.ts",
    "ui/other_options_settings.ts",
    "ui/pages_per_sheet_settings.ts",
    "ui/pages_settings.ts",
    "ui/plugin_proxy.ts",
    "ui/preview_area.ts",
    "ui/print_preview_search_box.ts",
    "ui/print_preview_shared_css.ts",
    "ui/print_preview_vars_css.ts",
    "ui/scaling_settings.ts",
    "ui/select_mixin.ts",
    "ui/settings_mixin.ts",
    "ui/settings_section.ts",
    "ui/settings_select.ts",
    "ui/sidebar.ts",
    "ui/throbber_css.ts",
  ]

  if (is_chromeos) {
    in_files += [
      "data/print_server_store.ts",
      "data/printer_status_cros.ts",
      "native_layer_cros.ts",
      "ui/destination_dialog_cros.ts",
      "ui/destination_dropdown_cros.ts",
      "ui/destination_select_cros.ts",
      "ui/pin_settings.ts",
      "ui/provisional_destination_resolver.ts",
    ]
  } else {
    in_files += [
      "ui/destination_dialog.ts",
      "ui/destination_select.ts",
      "ui/link_container.ts",
    ]
  }

  deps = [
    "//third_party/polymer/v3_0:library",
    "//ui/webui/resources:library",
  ]

  definitions = [ "//tools/typescript/definitions/chrome_send.d.ts" ]

  extra_deps = [
    ":preprocess",
    ":preprocess_generated",
    ":preprocess_pdf",
  ]
}
