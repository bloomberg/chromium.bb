// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Utility process interface exposed to the browser process on OS_WIN, for
// calling OS_WIN task pinning and file open/save dialog API.

module chrome.mojom;

import "mojo/public/mojom/base/file_path.mojom";
import "mojo/public/mojom/base/string16.mojom";

enum SelectFileDialogType {
  kNone,

  // For opening a folder.
  kFolder,

  // Like kFolder, but the dialog UI should explicitly show it's
  // specifically for "upload".
  kUploadFolder,

  // Like kFolder, but folder creation is disabled, if possible.
  kExistingFolder,

  // For saving into a file, allowing a nonexistent file to be selected.
  kSaveAsFile,

  // For opening a file.
  kOpenFile,

  // Like kOpenFile, but allowing multiple files to open.
  kOpenMultiFile,
};

struct FileFilterSpec {
  mojo_base.mojom.String16 description;
  mojo_base.mojom.String16 extension_spec;
};

interface ShellUtilWin {
  // Returns the pinned state of the current executable.
  IsPinnedToTaskbar() => (bool succeeded, bool is_pinned_to_taskbar);

  // Executes a select file operation that can be executed on a utility process.
  // |owner|:
  //   The HWND that owns the file dialog.
  // |title|:
  //   The title of the file dialog.
  // |default_path|:
  //   The path that is selected by default when the dialog is opened.
  // |filter|:
  //   Filters which files are shown based on the file extension. Ignored for
  //   folder selection dialogs (kFolder, kUploadFolder, kExistingFolder).
  // |file_type_index|:
  //   The index of the file extension filter that should be selected when the
  //   dialog is first opened. Ignored for folder selection dialogs (kFolder,
  //   kUploadFolder, kExistingFolder).
  // |default_extension|:
  //   The extension that should automatically be appended to a filename if it
  //   doesn't have one. This is only used for kSaveAsFile dialogs.
  //
  // Returns the selected file |paths| and the |file_type_index| of the filter
  // selected by the user. The |file_type_index| return value is meaningless on
  // folder selection dialogs. On cancelation or failure, |paths| will be empty.
  CallExecuteSelectFile(SelectFileDialogType type,
                        uint32 owner,
                        mojo_base.mojom.String16 title,
                        mojo_base.mojom.FilePath default_path,
                        array<FileFilterSpec> filter,
                        int32 file_type_index,
                        mojo_base.mojom.String16 default_extension) =>
      (array<mojo_base.mojom.FilePath> paths,
       int32 file_type_index);
};
