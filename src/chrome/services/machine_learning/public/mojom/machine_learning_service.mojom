// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Top-level API of the Chrome Machine Learning Service: Model loading

module machine_learning.mojom;

import "chrome/services/machine_learning/public/mojom/decision_tree.mojom";

// Model loading status values.
// These values are persisted to logs. Entries should not be renumbered and
// numeric values should never be reused.
// Should be kept in sync with the enum ChromeMLServiceLoadModelResult in
// //tools/metrics/histograms/enums.xml.
enum LoadModelResult {
  // Loading is successful.
  kOk = 0,
  // Model spec is invalid or deserialization failed.
  kModelSpecError = 1,
  // Generic model loading error.
  kLoadModelError = 2,
  // (For TFLite FlatBuffer model) model features are not supported.
  kFeatureNotSupportedError = 3,
};

// Main interface for the ML service process. This should be called from the
// browser process. This interface allows the consumer to send necessary
// data to the ML service so that the model can be loaded.
interface MachineLearningService {
  // Creates a new Decision Tree model for
  // |optimization_guide::PredictionManager|.
  LoadDecisionTree(DecisionTreeModelSpec spec,
                   pending_receiver<DecisionTreePredictor> receiver)
      => (LoadModelResult result);
};
