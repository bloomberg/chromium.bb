# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/android/config.gni")
import("//build/util/version.gni")

chrome_version_name = android_default_version_name
if (chrome_version_name == "Developer Build") {
  # In general, let the versionName attribute in the APK be the real chromium
  # version number. This is important for WebView/Monochrome, as we expose this
  # in an API, but we implement this for other Chrome targets for consistency.
  # We check for "Developer Build" so that we don't interfere with official
  # builders (which currently set the version number with this GN arg).
  chrome_version_name = chrome_version_full
}

_version_code = chrome_version_id

# The architecture preference is encoded into the version_code for devices
# that support multiple architectures
if (target_cpu == "arm") {
  _arch_preference = 0
} else if (target_cpu == "x86") {
  _arch_preference = 10
} else if (target_cpu == "mipsel") {
  _arch_preference = 20
} else if (target_cpu == "arm64") {
  _arch_preference = 50
} else if (target_cpu == "x64") {
  _arch_preference = 60
} else {
  assert(false, "Error: Unrecognized target_cpu: " + target_cpu)
}
_version_code += _arch_preference

if (!public_android_sdk) {
  # Match downstream logic for next builds
  _version_code += 100005
}

webview_version_code = "$_version_code"
chrome_version_code = "$_version_code"

_version_code += 1
chrome_modern_version_code = "$_version_code"

_version_code += 1
monochrome_version_code = "$_version_code"

_version_code += 1
trichrome_version_code = "$_version_code"

if (android_override_version_code != "") {
  webview_version_code = android_override_version_code
  chrome_version_code = android_override_version_code
  chrome_modern_version_code = android_override_version_code
  monochrome_version_code = android_override_version_code
  trichrome_version_code = android_override_version_code
}

if (android_override_version_name != "") {
  chrome_version_name = android_override_version_name
}
