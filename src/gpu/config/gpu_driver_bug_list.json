{
  "name": "gpu driver bug list",
  "entries": [
    {
      "id": 1,
      "description": "Imagination driver doesn't like uploading lots of buffer data constantly",
      "cr_bugs": [178093],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "gl_type": "gles",
      "gl_version": {
        "op": "<",
        "value": "3.0"
      },
      "features": [
        "use_client_side_arrays_for_stream_buffers"
      ]
    },
    {
      "id": 2,
      "description": "ARM driver doesn't like uploading lots of buffer data constantly",
      "cr_bugs": [178093],
      "os": {
        "type": "android"
      },
      "gl_vendor": "ARM.*",
      "gl_type": "gles",
      "gl_version": {
        "op": "<",
        "value": "3.0"
      },
      "features": [
        "use_client_side_arrays_for_stream_buffers"
      ]
    },
    {
      "id": 6,
      "description": "Restore scissor on FBO change with Qualcomm GPUs on older versions of Android",
      "cr_bugs": [165493, 222018],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "4.3"
        }
      },
      "gl_vendor": "Qualcomm.*",
      "features": [
        "restore_scissor_on_fbo_change"
      ]
    },
    {
      "id": 7,
      "cr_bugs": [89557],
      "description": "Work around a bug in offscreen buffers on NVIDIA GPUs on Macs",
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x10de",
      "features": [
        "needs_offscreen_buffer_workaround"
      ]
    },
    {
      "id": 17,
      "description": "Some drivers are unable to reset the D3D device in the GPU process sandbox",
      "os": {
        "type": "win"
      },
      "features": [
        "exit_on_context_lost"
      ]
    },
    {
      "id": 19,
      "comment": "Corresponds to software rendering list #140",
      "description": "Disable depth textures on older Qualcomm GPUs (legacy blacklist entry, original problem unclear)",
      "cr_bugs": [682075],
      "gl_renderer": "Adreno \\(TM\\) [23].*",
      "features": [
        "disable_depth_texture"
      ],
      "disabled_extensions": [
        "GL_OES_depth_texture"
      ]
    },
    {
      "id": 20,
      "description": "Disable EXT_draw_buffers on GeForce GT 650M on Mac OS X due to driver bugs",
      "cr_bugs": [180397, 779991],
      "os": {
        "type": "macosx",
        "version": {
          "op": "<",
          "value": "10.12"
        }
      },
      "vendor_id": "0x10de",
      "device_id": ["0x0fd5"],
      "multi_gpu_category": "any",
      "features": [
        "disable_ext_draw_buffers"
      ]
    },
    {
      "id": 21,
      "description": "Vivante GPUs are buggy with context switching",
      "cr_bugs": [179250, 235935],
      "os": {
        "type": "android"
      },
      "gl_extensions": ".*GL_VIV_shader_binary.*",
      "features": [
        "unbind_fbo_on_context_switch"
      ]
    },
    {
      "id": 22,
      "description": "Imagination drivers are buggy with context switching",
      "cr_bugs": [230896],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "features": [
        "unbind_fbo_on_context_switch"
      ]
    },
    {
      "id": 23,
      "cr_bugs": [243038],
      "description": "Disable OES_standard_derivative on Intel Pineview M Gallium drivers",
      "os": {
        "type": "chromeos"
      },
      "vendor_id": "0x8086",
      "device_id": ["0xa011", "0xa012"],
      "disabled_extensions": [
        "GL_OES_standard_derivatives"
      ]
    },
    {
      "id": 24,
      "cr_bugs": [231082],
      "description": "Mali-4xx drivers throw an error when a buffer object's size is set to 0",
      "os": {
        "type": "android"
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": ".*Mali-4.*",
      "features": [
        "use_non_zero_size_for_client_side_stream_buffers"
      ]
    },
    {
      "id": 26,
      "description": "Disable use of Direct3D 11 on Windows Vista and lower",
      "os": {
        "type": "win",
        "version": {
          "op": "<=",
          "value": "6.0"
        }
      },
      "features": [
        "disable_d3d11"
      ]
    },
    {
      "id": 31,
      "cr_bugs": [154715, 10068, 269829, 294779, 285292, 1018528],
      "description": "The Mali-3xx/4xx/Txxx driver does not guarantee flush ordering",
      "gl_vendor": "ARM.*",
      "gl_renderer": "Mali-[T34].*",
      "features": [
        "use_virtualized_gl_contexts"
      ]
    },
    {
      "id": 32,
      "cr_bugs": [179815],
      "description": "Share groups are not working on (older?) Broadcom drivers",
      "os": {
        "type": "android"
      },
      "gl_vendor": "Broadcom.*",
      "features": [
        "use_virtualized_gl_contexts"
      ]
    },
    {
      "id": 33,
      "description": "Share group-related crashes and poor context switching perf on Imagination drivers",
      "gl_vendor": "Imagination.*",
      "features": [
        "use_virtualized_gl_contexts"
      ]
    },
    {
      "id": 34,
      "cr_bugs": [179250, 229643, 230896],
      "description": "Share groups are not working on (older?) Vivante drivers",
      "os": {
        "type": "android"
      },
      "gl_extensions": ".*GL_VIV_shader_binary.*",
      "features": [
        "use_virtualized_gl_contexts"
      ]
    },
    {
      "id": 35,
      "cr_bugs": [163464],
      "description": "Share-group related crashes on older NVIDIA drivers",
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "4.3"
        }
      },
      "gl_vendor": "NVIDIA.*",
      "features": [
        "use_virtualized_gl_contexts"
      ]
    },
    {
      "id": 37,
      "cr_bugs": [286468],
      "description": "Program link fails in NVIDIA Linux if gl_Position is not set",
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x10de",
      "gl_vendor": "NVIDIA.*",
      "features": [
        "init_gl_position_in_vertex_shader"
      ]
    },
    {
      "id": 38,
      "cr_bugs": [163464, 233612, 289461],
      "description": "Non-virtual contexts on Qualcomm sometimes cause out-of-order frames",
      "os": {
        "type": "android"
      },
      "gl_vendor": "Qualcomm.*",
      "features": [
        "use_virtualized_gl_contexts"
      ]
    },
    {
      "id": 39,
      "cr_bugs": [290391],
      "description": "Multisampled renderbuffer allocation must be validated on some Macs",
      "os": {
        "type": "macosx",
        "version": {
          "op": "<",
          "value": "10.10"
        }
      },
      "features": [
        "validate_multisample_buffer_allocation"
      ]
    },
    {
      "id": 40,
      "cr_bugs": [290876],
      "description": "Framebuffer discarding causes flickering on old ARM drivers",
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "4.4"
        }
      },
      "gl_vendor": "ARM.*",
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 42,
      "cr_bugs": [290876, 488463],
      "description": "Framebuffer discarding causes flickering on older IMG drivers",
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR SGX 5.*",
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 43,
      "cr_bugs": [299494],
      "description": "Framebuffer discarding doesn't accept trivial attachments on Vivante",
      "os": {
        "type": "android"
      },
      "gl_extensions": ".*GL_VIV_shader_binary.*",
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 44,
      "cr_bugs": [301988],
      "description": "Framebuffer discarding causes jumpy scrolling on Mali drivers",
      "os": {
        "type": "chromeos"
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": "Mali.*",
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 45,
      "cr_bugs": [307751],
      "description": "Unfold short circuit on Mac OS X",
      "os": {
        "type": "macosx"
      },
      "features": [
        "unfold_short_circuit_as_ternary_operation"
      ]
    },
    {
      "id": 48,
      "description": "Force to use discrete GPU on older MacBookPro models",
      "cr_bugs": [113703],
      "os": {
        "type": "macosx"
      },
      "machine_model_name": ["MacBookPro"],
      "machine_model_version": {
        "op": "<",
        "value": "8"
      },
      "gpu_count": {
        "op": "=",
        "value": "2"
      },
      "features": [
        "force_high_performance_gpu"
      ]
    },
    {
      "id": 49,
      "cr_bugs": [309734],
      "description": "The first draw operation from an idle state is slow",
      "os": {
        "type": "android"
      },
      "gl_vendor": "Qualcomm.*",
      "features": [
        "wake_up_gpu_before_drawing"
      ]
    },
    {
      "id": 54,
      "cr_bugs": [124764, 349137],
      "description": "Clear uniforms before first program use on all platforms",
      "exceptions": [
        {
          "os": {
            "type": "macosx"
          }
        }
      ],
      "features": [
        "clear_uniforms_before_first_program_use"
      ]
    },
    {
      "id": 55,
      "cr_bugs": [333885],
      "description": "Mesa drivers in Linux handle varyings without static use incorrectly",
      "os": {
        "type": "linux"
      },
      "driver_vendor": "Mesa",
      "features": [
        "count_all_in_varyings_packing"
      ]
    },
    {
      "id": 56,
      "cr_bugs": [333885],
      "description": "Mesa drivers in ChromeOS handle varyings without static use incorrectly",
      "os": {
        "type": "chromeos"
      },
      "driver_vendor": "Mesa",
      "features": [
        "count_all_in_varyings_packing"
      ]
    },
    {
      "id": 59,
      "description": "Multisampling is buggy in Intel IvyBridge",
      "cr_bugs": [116370],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x8086",
      "device_id": ["0x0152", "0x0156", "0x015a", "0x0162", "0x0166"],
      "features": [
        "disable_chromium_framebuffer_multisample"
      ]
    },
    {
      "id": 64,
      "description": "Linux AMD drivers incorrectly return initial value of 1 for TEXTURE_MAX_ANISOTROPY",
      "cr_bugs": [348237],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x1002",
      "features": [
        "init_texture_max_anisotropy"
      ]
    },
    {
      "id": 65,
      "description": "Linux NVIDIA drivers don't have the correct defaults for vertex attributes",
      "cr_bugs": [351528],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x10de",
      "gl_vendor": "NVIDIA.*",
      "features": [
        "init_vertex_attributes"
      ]
    },
    {
      "id": 68,
      "description": "Disable partial swaps on Mesa drivers (detected with GL_RENDERER)",
      "cr_bugs": [339493],
      "os": {
        "type": "linux"
      },
      "gl_type": "gl",
      "gl_renderer": ".*Mesa.*",
      "features": [
        "disable_post_sub_buffers_for_onscreen_surfaces"
      ]
    },
    {
      "id": 70,
      "description": "Disable D3D11 on older nVidia drivers",
      "cr_bugs": [349929],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x10de",
      "driver_version": {
        "op": "<=",
        "value": "8.17.12.6973"
      },
      "features": [
        "disable_d3d11"
      ]
    },
    {
      "id": 71,
      "description": "Vivante's support of OES_standard_derivatives is buggy",
      "cr_bugs": [368005],
      "os": {
        "type": "android"
      },
      "gl_extensions": ".*GL_VIV_shader_binary.*",
      "disabled_extensions": [
        "GL_OES_standard_derivatives"
      ]
    },
    {
      "id": 72,
      "description": "Use virtual contexts on NVIDIA with GLES 3.1",
      "cr_bugs": [369316],
      "os": {
        "type": "android"
      },
      "gl_type": "gles",
      "gl_version": {
        "op": "=",
        "value": "3.1"
      },
      "gl_vendor": "NVIDIA.*",
      "features": [
        "use_virtualized_gl_contexts"
      ]
    },
    {
      "id": 74,
      "cr_bugs": [278606, 382686],
      "description": "Testing EGL sync fences was broken on most Qualcomm drivers",
      "os": {
        "type": "android",
        "version": {
          "op": "<=",
          "value": "4.4.4"
        }
      },
      "gl_vendor": "Qualcomm.*",
      "disabled_extensions": [
        "EGL_KHR_fence_sync"
      ]
    },
    {
      "id": 75,
      "description": "Mali-4xx support of EXT_multisampled_render_to_texture is buggy on Android < 4.3",
      "cr_bugs": [362435],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "4.3"
        }
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": ".*Mali-4.*",
      "disabled_extensions": [
        "GL_EXT_multisampled_render_to_texture"
      ]
    },
    {
      "id": 76,
      "cr_bugs": [371530],
      "description": "Testing EGL sync fences was broken on IMG",
      "os": {
        "type": "android",
        "version": {
          "op": "<=",
          "value": "4.4.4"
        }
      },
      "gl_vendor": "Imagination Technologies.*",
      "disabled_extensions": [
        "EGL_KHR_fence_sync"
      ]
    },
    {
      "id": 77,
      "cr_bugs": [378691, 373360, 371530, 398964],
      "description": "Testing fences was broken on Mali ES2 drivers",
      "os": {
        "type": "android",
        "version": {
          "op": "<=",
          "value": "4.4.4"
        }
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": "Mali.*",
      "gl_type": "gles",
      "gl_version": {
        "op": "<",
        "value": "3.0"
      },
      "disabled_extensions": [
        "EGL_KHR_fence_sync"
      ]
    },
    {
      "id": 78,
      "cr_bugs": [378691, 373360, 371530],
      "description": "Testing fences was broken on Broadcom drivers",
      "os": {
        "type": "android",
        "version": {
          "op": "<=",
          "value": "4.4.4"
        }
      },
      "gl_vendor": "Broadcom.*",
      "disabled_extensions": [
        "EGL_KHR_fence_sync"
      ]
    },
    {
      "id": 82,
      "description": "PBO mappings segfault on certain older Qualcomm drivers",
      "cr_bugs": [394510],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "4.3"
        }
      },
      "gl_vendor": "Qualcomm.*",
      "features": [
        "disable_async_readpixels"
      ]
    },
    {
      "id": 86,
      "description": "Disable use of Direct3D 11 on Matrox video cards",
      "cr_bugs": [395861],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x102b",
      "features": [
        "disable_d3d11"
      ]
    },
    {
      "id": 87,
      "description": "Disable use of Direct3D 11 on older AMD drivers",
      "cr_bugs": [402134],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "driver_version": {
        "op": "<",
        "value": "8.17.10.1070"
      },
      "features": [
        "disable_d3d11"
      ]
    },
    {
      "id": 88,
      "description": "Always rewrite vec/mat constructors to be consistent",
      "cr_bugs": [398694],
      "features": [
        "scalarize_vec_and_mat_constructor_args"
      ]
    },
    {
      "id": 89,
      "description": "Mac drivers handle struct scopes incorrectly",
      "cr_bugs": [403957],
      "os": {
        "type": "macosx"
      },
      "features": [
        "regenerate_struct_names"
      ]
    },
    {
      "id": 90,
      "description": "Linux AMD drivers handle struct scopes incorrectly",
      "cr_bugs": [403957],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x1002",
      "features": [
        "regenerate_struct_names"
      ]
    },
    {
      "id": 91,
      "cr_bugs": [150500, 414816],
      "description": "ETC1 non-power-of-two sized textures crash older IMG drivers",
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR SGX 5.*",
      "features": [
        "etc1_power_of_two_only"
      ]
    },
    {
      "id": 92,
      "description": "Old Intel drivers cannot reliably support D3D11",
      "cr_bugs": [363721],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x8086",
      "driver_version": {
        "op": "<=",
        "value": "9.18.0.0"
      },
      "features": [
        "disable_d3d11"
      ]
    },
    {
      "id": 93,
      "description": "The GL implementation on the Android emulator has problems with PBOs.",
      "cr_bugs": [340882],
      "os": {
        "type": "android"
      },
      "gl_vendor": "VMware.*",
      "gl_renderer": "Gallium.*",
      "gl_type": "gles",
      "gl_version": {
        "op": "=",
        "value": "3.0"
      },
      "features": [
        "disable_async_readpixels"
      ]
    },
    {
      "id": 94,
      "description": "Disable EGL_KHR_wait_sync on NVIDIA with GLES 3.1",
      "cr_bugs": [433057],
      "os": {
        "type": "android",
        "version": {
          "op": "<=",
          "value": "5.0.2"
        }
      },
      "gl_vendor": "NVIDIA.*",
      "gl_type": "gles",
      "gl_version": {
        "op": "=",
        "value": "3.1"
      },
      "disabled_extensions": [
        "EGL_KHR_wait_sync"
      ]
    },
    {
      "id": 95,
      "cr_bugs": [421271],
      "description": "glClear does not always work on these drivers",
      "os": {
        "type": "android"
      },
      "gl_type": "gles",
      "gl_version": {
        "op": "<",
        "value": "3.0"
      },
      "gl_vendor": "Imagination.*",
      "features": [
        "gl_clear_broken"
      ]
    },
    {
      "id": 97,
      "description": "Multisampling has poor performance in Intel BayTrail",
      "cr_bugs": [443517],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Intel.*",
      "gl_renderer": "Intel.*BayTrail",
      "features": [
        "disable_chromium_framebuffer_multisample"
      ]
    },
    {
      "id": 98,
      "description": "PowerVR SGX 540 drivers throw GL_OUT_OF_MEMORY error when a buffer object's size is set to 0",
      "cr_bugs": [451501],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR SGX 540",
      "features": [
        "use_non_zero_size_for_client_side_stream_buffers"
      ]
    },
    {
      "id": 99,
      "description": "Qualcomm driver before Lollipop deletes egl sync objects after context destruction",
      "cr_bugs": [453857],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "5.0.0"
        }
      },
      "gl_vendor": "Qualcomm.*",
      "features": [
        "ignore_egl_sync_failures"
      ]
    },
    {
      "id": 100,
      "description": "Disable Direct3D11 on systems with AMD switchable graphics",
      "cr_bugs": [451420, 721121, 755722],
      "os": {
        "type": "win",
        "version": {
          "op": "<",
          "value": "10"
        }
      },
      "driver_version": {
        "op": "<",
        "value": "20.19.0.32837"
      },
      "multi_gpu_style": "amd_switchable",
      "features": [
        "disable_d3d11"
      ]
    },
    {
      "id": 102,
      "description": "Adreno 420 driver loses FBO attachment contents on bound FBO deletion",
      "cr_bugs": [457027],
      "os": {
        "type": "android",
        "version": {
          "op": ">",
          "value": "5.0.2"
        }
      },
      "gl_renderer": "Adreno \\(TM\\) 4.*",
      "features": [
        "unbind_attachments_on_bound_render_fbo_delete"
      ]
    },
    {
      "id": 103,
      "description": "Adreno 420 driver drops draw calls after FBO invalidation",
      "cr_bugs": [443060],
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno \\(TM\\) 4.*",
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 104,
      "description": "EXT_occlusion_query_boolean hangs on MediaTek MT8135 pre-Lollipop",
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "5.0.0"
        }
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR Rogue Han",
      "disabled_extensions": [
        "GL_EXT_occlusion_query_boolean"
      ]
    },
    {
      "id": 105,
      "cr_bugs": [449488,451230],
      "description": "Framebuffer discarding causes corruption on Mali-4xx",
      "gl_renderer": "Mali-4.*",
      "os": {
        "type": "android"
      },
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 106,
      "description": "EXT_occlusion_query_boolean hangs on PowerVR SGX 544 (IMG) drivers",
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR SGX 544",
      "disabled_extensions": [
        "GL_EXT_occlusion_query_boolean"
      ]
    },
    {
      "id": 107,
      "description": "Workaround IMG PowerVR G6xxx drivers bugs",
      "cr_bugs": [480992],
      "os": {
        "type": "android",
        "version": {
          "op": "between",
          "value": "5.0.0",
          "value2": "5.1.99"
        }
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR Rogue.*",
      "driver_version": {
        "op": "between",
        "value": "1.3",
        "value2": "1.4"
      },
      "features": [
        "avoid_egl_image_target_texture_reuse"
      ],
      "disabled_extensions": [
        "EGL_KHR_wait_sync"
      ]
    },
    {
      "id": 108,
      "cr_bugs": [449150],
      "description": "Mali-4xx on Linux does not support GL_RGB format",
      "os": {
        "type": "linux"
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": ".*Mali-4.*",
      "features": [
        "disable_gl_rgb_format"
      ]
    },
    {
      "id": 109,
      "cr_bugs": [449150, 514510],
      "description": "MakeCurrent is slow on Linux with NVIDIA drivers",
      "vendor_id": "0x10de",
      "os": {
        "type": "linux"
      },
      "gl_vendor": "NVIDIA.*",
      "features": [
        "use_virtualized_gl_contexts"
      ]
    },
    {
      "id": 110,
      "description": "EGL Sync server causes crashes on Adreno 2xx and 3xx drivers",
      "cr_bugs": [482298],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Qualcomm.*",
      "gl_renderer": "Adreno \\(TM\\) [23].*",
      "driver_version": {
        "op": "<",
        "value": "95"
      },
      "disabled_extensions": [
        "EGL_KHR_wait_sync"
      ]
    },
    {
      "id": 111,
      "description": "Discard Framebuffer breaks WebGL on Mali-4xx Linux",
      "cr_bugs": [485814],
      "os": {
        "type": "linux"
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": ".*Mali-4.*",
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 112,
      "cr_bugs": [477514],
      "description": "EXT_disjoint_timer_query fails after 2 queries on adreno 3xx in lollypop",
      "os": {
        "type": "android",
        "version": {
          "op": ">=",
          "value": "5.0.0"
        }
      },
      "gl_vendor": "Qualcomm.*",
      "gl_renderer": "Adreno \\(TM\\) 3.*",
      "features": [
        "disable_timestamp_queries"
      ],
      "disabled_extensions": [
        "GL_EXT_disjoint_timer_query",
        "GL_EXT_disjoint_timer_query_webgl2"
      ]
    },
    {
      "id": 113,
      "cr_bugs": [477514],
      "description": "EXT_disjoint_timer_query fails after 256 queries on adreno 4xx",
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno \\(TM\\) 4.*",
      "disabled_extensions": [
        "GL_EXT_disjoint_timer_query",
        "GL_EXT_disjoint_timer_query_webgl2"
      ]
    },
    {
      "id": 115,
      "cr_bugs": [462553],
      "description": "glGetIntegerv with GL_GPU_DISJOINT_EXT causes GL_INVALID_ENUM error",
      "os": {
        "type": "android"
      },
      "gl_vendor": "NVIDIA.*",
      "gl_type": "gles",
      "gl_version": {
        "op": ">=",
        "value": "3.0"
      },
      "disabled_extensions": [
        "GL_EXT_disjoint_timer_query"
      ]
    },
    {
      "id": 116,
      "description": "Adreno 420 support for EXT_multisampled_render_to_texture is buggy on Android < 5.1",
      "comment": "Corresponds to software rendering list #149",
      "cr_bugs": [490379, 767913],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "5.1"
        }
      },
      "gl_renderer": "Adreno \\(TM\\) 4.*",
      "disabled_extensions": [
        "GL_EXT_multisampled_render_to_texture"
      ],
      "features": [
        "disable_chromium_framebuffer_multisample"
      ]
    },
    {
      "id": 117,
      "description": "GL_KHR_blend_equation_advanced breaks blending on Adreno 4xx",
      "cr_bugs": [488485],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Qualcomm.*",
      "gl_renderer": ".*4\\d\\d",
      "features": [
        "disable_blend_equation_advanced"
      ]
    },
    {
      "id": 118,
      "cr_bugs": [477306],
      "description": "NVIDIA 331 series drivers shader compiler may crash when attempting to optimize pow()",
      "os": {
        "type": "linux"
      },
      "driver_version": {
        "op": "<=",
        "value": "331"
      },
      "vendor_id": "0x10de",
      "gl_vendor": "NVIDIA.*",
      "features": [
        "remove_pow_with_constant_exponent"
      ]
    },
    {
      "id": 119,
      "description": "Context lost recovery often fails on Mali-400/450 on Android.",
      "cr_bugs": [496438],
      "os": {
        "type": "android"
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": ".*Mali-4.*",
      "features": [
        "exit_on_context_lost"
      ]
    },
    {
      "id": 120,
      "description": "CHROMIUM_copy_texture is slow on Mali pre-Lollipop",
      "cr_bugs": [498443],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "5.0.0"
        }
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": "Mali.*",
      "features": [
        "max_copy_texture_chromium_size_262144"
      ]
    },
    {
      "id": 123,
      "cr_bugs": [344330],
      "description": "NVIDIA drivers before 346 lack features in NV_path_rendering and related extensions to implement driver level path rendering.",
      "vendor_id": "0x10de",
      "os": {
        "type": "linux"
      },
      "driver_version": {
        "op": "<",
        "value": "346"
      },
      "disabled_extensions": ["GL_NV_path_rendering"]
    },
    {
      "id": 125,
      "description": "glFinish doesn't clear caches on Android",
      "cr_bugs": [509727],
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno.*",
      "features": [
        "unbind_egl_context_to_flush_driver_caches"
      ]
    },
    {
      "id": 126,
      "description": "Program binaries contain incorrect bound attribute locations on Adreno 3xx GPUs",
      "cr_bugs": [510637],
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno \\(TM\\) 3.*",
      "features": [
        "disable_program_cache"
      ]
    },
    {
      "id": 127,
      "description": "Android Adreno crashes on binding incomplete cube map texture to FBO",
      "cr_bugs": [518889],
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno.*",
      "features": [
        "force_cube_map_positive_x_allocation"
      ]
    },
    {
      "id": 128,
      "description": "Linux ATI drivers crash on binding incomplete cube map texture to FBO",
      "cr_bugs": [518889],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x1002",
      "features": [
        "force_cube_map_positive_x_allocation"
      ]
    },
    {
      "id": 129,
      "comment": "TODO(dshwang): Fix ANGLE crash. crbug.com/518889",
      "description": "ANGLE crash on glReadPixels from incomplete cube map texture",
      "cr_bugs": [518889],
      "os": {
        "type": "win"
      },
      "gl_renderer": "ANGLE.*",
      "features": [
        "force_cube_complete"
      ]
    },
    {
      "id": 130,
      "description": "NVIDIA fails glReadPixels from incomplete cube map texture",
      "cr_bugs": [518889],
      "vendor_id": "0x10de",
      "os": {
        "type": "linux"
      },
      "gl_vendor": "NVIDIA.*",
      "features": [
        "force_cube_complete"
      ]
    },
    {
      "id": 131,
      "description": "Linux Mesa drivers crash on glTexSubImage2D() to texture storage bound to FBO",
      "cr_bugs": [521904],
      "os": {
        "type": "linux"
      },
      "driver_vendor": "Mesa",
      "driver_version": {
        "op": "<",
        "value": "10.6"
      },
      "features": [
        "disable_texture_storage"
      ]
    },
    {
      "id": 132,
      "description": "On Intel GPUs MSAA performance is not acceptable for GPU rasterization",
      "cr_bugs": [527565],
      "vendor_id": "0x8086",
      "multi_gpu_category": "active",
      "features": [
        "msaa_is_slow"
      ]
    },
    {
      "id": 133,
      "description": "CHROMIUM_copy_texture with 1MB copy per flush to avoid unwanted cache growth on Adreno",
      "cr_bugs": [542478],
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno.*",
      "features": [
        "max_copy_texture_chromium_size_1048576"
      ]
    },
    {
      "id": 134,
      "description": "glReadPixels fails on FBOs with SRGB_ALPHA textures",
      "cr_bugs": [550292],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "5.0"
        }
      },
      "gl_vendor": "Qualcomm.*",
      "disabled_extensions": ["GL_EXT_sRGB"]
    },
    {
      "id": 135,
      "description": "Screen flickers on 2009 iMacs",
      "cr_bugs": [543324],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x1002",
      "device_id": ["0x9440", "0x944a", "0x9488", "0x9490"],
      "features": [
        "disable_overlay_ca_layers",
        "disable_post_sub_buffers_for_onscreen_surfaces"
      ]
    },
    {
      "id": 136,
      "description": "glGenerateMipmap fails if the zero texture level is not set on some Mac drivers",
      "cr_bugs": [560499],
      "os": {
        "type": "macosx"
      },
      "features": [
        "set_zero_level_before_generating_mipmap"
      ]
    },
    {
      "id": 137,
      "description": "NVIDIA fails glReadPixels from incomplete cube map texture",
      "cr_bugs": [518889],
      "os": {
        "type": "android"
      },
      "gl_vendor": "NVIDIA.*",
      "features": [
        "force_cube_complete"
      ]
    },
    {
      "id": 138,
      "description": "NVIDIA drivers before 346 lack features in NV_path_rendering and related extensions to implement driver level path rendering.",
      "cr_bugs": [344330],
      "os": {
        "type": "android"
      },
      "gl_vendor": "NVIDIA.*",
      "driver_version": {
        "op": "<",
        "value": "346"
      },
      "disabled_extensions": ["GL_NV_path_rendering"]
    },
    {
      "id": 139,
      "description": "Mesa drivers wrongly report supporting GL_EXT_texture_rg with GLES 2.0 prior version 11.1",
      "cr_bugs": [545904],
      "os": {
        "type": "linux"
      },
      "driver_vendor": "Mesa",
      "driver_version": {
        "op": "<",
        "value": "11.1"
      },
      "gl_type": "gles",
      "gl_version": {
        "op": "<",
        "value": "3.0"
      },
      "disabled_extensions": [
        "GL_EXT_texture_rg"
      ]
    },
    {
      "id": 140,
      "description": "glReadPixels fails on FBOs with SRGB_ALPHA textures, Nexus 5X",
      "cr_bugs": [550292, 565179],
      "os": {
        "type": "android",
        "comment": "Originally on Android 6.0. Expect it to fail in later versions."
      },
      "gl_vendor": "Qualcomm",
      "gl_renderer": "Adreno \\(TM\\) 4.*",
      "comment": "Originally on 418.",
      "disabled_extensions": ["GL_EXT_sRGB"]
    },
    {
      "id": 141,
      "cr_bugs": [570897],
      "description": "Framebuffer discarding can hurt performance on non-tilers",
      "os": {
        "type": "win"
      },
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 142,
      "cr_bugs": [563714],
      "description": "Pack parameters work incorrectly with pack buffer bound",
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x10de",
      "gl_vendor": "NVIDIA.*",
      "features": [
        "pack_parameters_workaround_with_pack_buffer"
      ]
    },
    {
      "id": 144,
      "cr_bugs": [563714],
      "description": "Pack parameters work incorrectly with pack buffer bound",
      "os": {
        "type": "macosx"
      },
      "features": [
        "pack_parameters_workaround_with_pack_buffer"
      ]
    },
    {
      "id": 145,
      "cr_bugs": [585250],
      "description": "EGLImage ref counting across EGLContext/threads is broken",
      "os": {
        "type": "android"
      },
      "gl_vendor": "Qualcomm.*",
      "gl_renderer": "Adreno \\(TM\\) [45].*",
      "features": [
        "broken_egl_image_ref_counting"
      ]
    },
    {
      "id": 147,
      "description": "Limit max texure size to 4096 on all of Android",
      "os": {
        "type": "android"
      },
      "features": [
        "max_texture_size_limit_4096"
      ]
    },
    {
      "id": 149,
      "description": "Direct composition flashes black initially on Win <10",
      "cr_bugs": [588588],
      "os": {
        "type": "win",
        "version": {
          "op": "<",
          "value": "10.0"
        }
      },
      "features": [
        "disable_direct_composition"
      ]
    },
    {
      "id": 150,
      "cr_bugs": [563714],
      "description": "Alignment works incorrectly with unpack buffer bound",
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x10de",
      "gl_vendor": "NVIDIA.*",
      "features": [
        "unpack_alignment_workaround_with_unpack_buffer"
      ]
    },
    {
      "id": 151,
      "cr_bugs": [563714],
      "description": "Alignment works incorrectly with unpack buffer bound",
      "os": {
        "type": "macosx"
      },
      "features": [
        "unpack_alignment_workaround_with_unpack_buffer"
      ]
    },
    {
      "id": 152,
      "cr_bugs": [581777],
      "description": "copyTexImage2D fails when reading from IOSurface on multiple GPU types.",
      "os": {
        "type": "macosx"
      },
      "features": [
        "use_intermediary_for_copy_texture_image"
      ]
    },
    {
      "id": 153,
      "cr_bugs": [594016],
      "description": "Vivante GC1000 with EXT_multisampled_render_to_texture fails glReadPixels",
      "os": {
        "type": "linux"
      },
      "gl_vendor": "Vivante Corporation",
      "gl_renderer": "Vivante GC1000",
      "disabled_extensions": [
        "GL_EXT_multisampled_render_to_texture"
      ]
    },
    {
      "id": 157,
      "description": "Testing fences was broken on Mali ES2 drivers for specific phone models",
      "cr_bugs": [589814],
      "os": {
        "type": "android"
      },
      "machine_model_name": ["SM-G361H", "SM-G531H"],
      "gl_vendor": "ARM.*",
      "gl_renderer": "Mali.*",
      "gl_type": "gles",
      "gl_version": {
        "op": "<",
        "value": "3.0"
      },
      "disabled_extensions": [
        "EGL_KHR_fence_sync"
      ]
    },
    {
      "id": 158,
      "description": "IOSurface use becomes pathologically slow over time on 10.10.",
      "cr_bugs": [580616],
      "os": {
        "type": "macosx",
        "version": {
          "op": "=",
          "value": "10.10"
        }
      },
      "vendor_id": "0x10de",
      "device_id": ["0x0fd5"],
      "features": [
        "disable_overlay_ca_layers"
      ]
    },
    {
      "id": 159,
      "cr_bugs": [570897],
      "description": "Framebuffer discarding can hurt performance on non-tilers",
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x10de",
      "gl_vendor": "NVIDIA.*",
      "gl_type": "gl",
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 160,
      "cr_bugs": [601753],
      "description": "Framebuffer discarding not useful on NVIDIA Kepler architecture and later",
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x10de",
      "gl_vendor": "NVIDIA.*",
      "gl_type": "gles",
      "gl_version": {
        "op": ">=",
        "value": "3.0"
      },
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 161,
      "cr_bugs": [601753],
      "description": "Framebuffer discarding not useful on NVIDIA Kepler architecture and later",
      "os": {
        "type": "chromeos"
      },
      "vendor_id": "0x10de",
      "gl_vendor": "NVIDIA.*",
      "gl_type": "gles",
      "gl_version": {
        "op": ">=",
        "value": "3.0"
      },
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 162,
      "cr_bugs": [601753],
      "description": "Framebuffer discarding not useful on NVIDIA Kepler architecture and later",
      "os": {
        "type": "android"
      },
      "gl_vendor": "NVIDIA.*",
      "gl_type": "gles",
      "gl_version": {
        "op": ">=",
        "value": "3.0"
      },
      "features": [
        "disable_discard_framebuffer"
      ]
    },
    {
      "id": 163,
      "cr_bugs": [607130],
      "description": "Multisample renderbuffers with format GL_RGB8 have performance issues on Intel GPUs.",
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x8086",
      "features": [
        "disable_webgl_rgb_multisampling_usage"
      ]
    },
    {
      "id": 164,
      "cr_bugs": [595948],
      "description": "glColorMask does not work for multisample renderbuffers on old AMD GPUs.",
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x1002",
      "device_id": ["0x6720", "0x6740", "0x6741", "0x68b8"],
      "features": [
        "disable_multisampling_color_mask_usage"
      ]
    },
    {
      "id": 165,
      "cr_bugs": [596774],
      "description": "Unpacking overlapping rows from unpack buffers is unstable on NVIDIA GL driver",
      "gl_vendor": "NVIDIA.*",
      "features": [
        "unpack_overlapping_rows_separately_unpack_buffer"
      ]
    },
    {
      "id": 168,
      "description": "VirtualBox driver doesn't correctly support partial swaps.",
      "cr_bugs": [613722],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x80ee",
      "features": [
        "disable_post_sub_buffers_for_onscreen_surfaces"
      ]
    },
    {
      "id": 170,
      "description": "Zero copy DXGI video hangs on shutdown on Win < 8.1",
      "cr_bugs": [621190],
      "os": {
        "type": "win",
        "version": {
          "op": "<",
          "value": "8.1"
        }
      },
      "features": [
        "disable_dxgi_zero_copy_video"
      ]
    },
    {
      "id": 174,
      "description": "Adreno 4xx support for EXT_multisampled_render_to_texture is buggy on Android 7.0",
      "cr_bugs": [612474],
      "os": {
        "type": "android",
        "version": {
          "op": "between",
          "value": "7.0.0",
          "value2": "7.0.99",
          "comment": "Only initial version of N."
        }
      },
      "gl_renderer": "Adreno \\(TM\\) 4.*",
      "disabled_extensions": [
        "GL_EXT_multisampled_render_to_texture"
      ]
    },
    {
      "id": 175,
      "description": "Adreno 5xx support for EXT_multisampled_render_to_texture is buggy on Android < 7.0",
      "cr_bugs": [612474],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "7.0"
        }
      },
      "gl_renderer": "Adreno \\(TM\\) 5.*",
      "disabled_extensions": [
        "GL_EXT_multisampled_render_to_texture"
      ]
    },
    {
      "id": 176,
      "description": "glClear does not work on Acer Predator GT-810",
      "cr_bugs": [633634],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Intel.*",
      "gl_renderer": ".*Atom.*x5/x7.*",
      "features": [
        "gl_clear_broken"
      ]
    },
    {
      "id": 177,
      "description": "glGetFragData{Location|Index} works incorrectly on Max",
      "cr_bugs": [638340],
      "os": {
        "type": "macosx"
      },
      "features": [
        "get_frag_data_info_bug"
      ]
    },
    {
      "id": 178,
      "description": "GL_KHR_blend_equation_advanced is incorrectly implemented on Intel BayTrail on KitKat",
      "cr_bugs": [639470],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "5.0"
        }
      },
      "gl_vendor": "Intel.*",
      "gl_renderer": "Intel(R) HD Graphics for BayTrail",
      "features": [
        "disable_blend_equation_advanced"
      ]
    },
    {
      "id": 179,
      "description": "glResumeTransformFeedback works incorrectly on Intel GPUs",
      "cr_bugs": [638514],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x8086",
      "features": [
        "rebind_transform_feedback_before_resume"
      ]
    },
    {
      "id": 180,
      "cr_bugs": [579060,632461],
      "description": "eglCreateImageKHR fails for one component textures on PowerVR",
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR .*",
      "features": [
        "avoid_one_component_egl_images"
      ]
    },
    {
      "id": 181,
      "description": "glTexStorage* are buggy when base mipmap level is not 0",
      "cr_bugs": [640506],
      "os": {
        "type": "macosx",
        "version": {
          "op": "<",
          "value": "10.12.4"
        }
      },
      "features": [
        "reset_base_mipmap_level_before_texstorage"
      ]
    },
    {
      "id": 182,
      "cr_bugs": [638691],
      "description": "Frequent hang in glClear on old android versions on Mali-T7xx",
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "6.0"
        }
      },
      "gl_renderer": ".*Mali-T7.*",
      "features": [
        "gl_clear_broken"
      ]
    },
    {
      "id": 183,
      "description": "Result of abs(i) where i is an integer in vertex shader is wrong",
      "cr_bugs": [642227],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x8086",
      "features": [
        "emulate_abs_int_function"
      ]
    },
    {
      "id": 184,
      "description": "Rewrite texelFetchOffset to texelFetch for Intel Mac",
      "cr_bugs": [642605],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x8086",
      "features": [
        "rewrite_texelfetchoffset_to_texelfetch"
      ]
    },
    {
      "id": 185,
      "description": "Zero-copy NV12 video displays incorrect colors on NVIDIA drivers.",
      "cr_bugs": [635319],
      "os": {
        "type": "win"
      },
      "driver_version": {
        "op": "<",
        "value": "21.21.13.7576"
      },
      "vendor_id": "0x10de",
      "features": [
        "disable_dxgi_zero_copy_video"
      ]
    },
    {
      "id": 186,
      "description": "Rewrite condition in for and while loops for Intel Mac",
      "cr_bugs": [644669],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x8086",
      "features": [
        "add_and_true_to_loop_condition"
      ]
    },
    {
      "id": 187,
      "description": "Rewrite do-while loops to simpler constructs on Mac",
      "cr_bugs": [644669],
      "os": {
        "type": "macosx",
        "version": {
          "op": "<",
          "value": "10.11"
        }
      },
      "features": [
        "rewrite_do_while_loops"
      ]
    },
    {
      "id": 188,
      "description": "AVSampleBufferDisplayLayer leaks IOSurfaces on 10.9.",
      "cr_bugs": [632178],
      "os": {
        "type": "macosx",
        "version": {
          "op": "<=",
          "value": "10.10"
        }
      },
      "features": [
        "disable_av_sample_buffer_display_layer"
      ]
    },
    {
      "id": 189,
      "description": "Do TexImage2D first before CopyTexImage2D for cube map texture on Intel Mac 10.11",
      "cr_bugs": [648197],
      "os": {
        "type": "macosx",
        "version": {
          "op": "<=",
          "value": "10.11"
        }
      },
      "vendor_id": "0x8086",
      "features": [
        "init_one_cube_map_level_before_copyteximage"
      ]
    },
    {
      "id": 190,
      "description": "Disable partial swaps on Mesa drivers (detected with GL_VERSION)",
      "cr_bugs": [339493],
      "os": {
        "type": "linux"
      },
      "gl_type": "gl",
      "gl_version_string": ".*Mesa.*",
      "features": [
        "disable_post_sub_buffers_for_onscreen_surfaces"
      ]
    },
    {
      "id": 191,
      "description": "Emulate GLSL function isnan() on Intel Mac",
      "cr_bugs": [650547],
      "os": {
        "type": "macosx",
        "version": {
          "op": "<",
          "value": "10.13.2"
        }
      },
      "intel_gpu_series" : [
        "skylake"
      ],
      "features" : [
        "emulate_isnan_on_float"
      ]
    },
    {
      "id": 192,
      "description": "Decode and encode before generateMipmap for srgb format textures on os except macosx",
      "cr_bugs": [634519],
      "gl_type": "gl",
      "gl_version": {
        "op": "<",
        "value": "4.4"
      },
      "exceptions": [
        {
          "os": {
            "type": "macosx"
          }
        }
      ],
      "features": [
        "decode_encode_srgb_for_generatemipmap"
      ]
    },
    {
      "id": 193,
      "description": "Decode and encode before generateMipmap for srgb format textures on macosx",
      "cr_bugs": [634519],
      "os": {
        "type": "macosx"
      },
      "features": [
        "decode_encode_srgb_for_generatemipmap"
      ]
    },
    {
      "id": 194,
      "description": "Init first two levels before CopyTexImage2D for cube map texture on Intel Mac 10.12",
      "cr_bugs": [648197],
      "os": {
        "type": "macosx",
        "version": {
          "op": ">=",
          "value": "10.12"
        }
      },
      "vendor_id": "0x8086",
      "features": [
        "init_two_cube_map_levels_before_copyteximage"
      ]
    },
    {
      "id": 195,
      "description": "Insert statements to reference all members in unused std140/shared blocks on Mac",
      "cr_bugs": [618464],
      "os": {
        "type": "macosx"
      },
      "features": [
        "use_unused_standard_shared_blocks"
      ]
    },
    {
      "id": 196,
      "description": "Tex(Sub)Image3D performs incorrectly when uploading from unpack buffer with GL_UNPACK_IMAGE_HEIGHT greater than zero on Intel Macs",
      "cr_bugs": [654258],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x8086",
      "features": [
        "unpack_image_height_workaround_with_unpack_buffer"
      ]
    },
    {
      "id": 197,
      "description": "adjust src/dst region if blitting pixels outside framebuffer on Mac",
      "cr_bugs": [644740],
      "os": {
        "type": "macosx"
      },
      "features": [
        "adjust_src_dst_region_for_blitframebuffer"
      ]
    },
    {
      "id": 198,
      "description": "adjust src/dst region if blitting pixels outside framebuffer on Linux Intel",
      "cr_bugs": [664740],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x8086",
      "features": [
        "adjust_src_dst_region_for_blitframebuffer"
      ]
    },
    {
      "id": 199,
      "description": "adjust src/dst region if blitting pixels outside framebuffer on Linux AMD",
      "cr_bugs": [664740],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x1002",
      "features": [
        "adjust_src_dst_region_for_blitframebuffer"
      ]
    },
    {
      "id": 200,
      "description": "ES3 support is unreliable on some older drivers",
      "cr_bugs": [657925],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "4.4"
        }
      },
      "features": [
        "disable_es3_gl_context"
      ]
    },
    {
      "id": 201,
      "cr_bugs": [659326,639760],
      "description": "AMD drivers in Linux require invariant qualifier to match between vertex and fragment shaders",
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x1002",
      "features": [
        "dont_remove_invariant_for_fragment_input",
        "remove_invariant_and_centroid_for_essl3"
      ]
    },
    {
      "id": 202,
      "cr_bugs": [639760,641129],
      "description": "Mac driver GL 4.1 requires invariant and centroid to match between shaders",
      "os": {
        "type": "macosx"
      },
      "features": [
        "remove_invariant_and_centroid_for_essl3"
      ]
    },
    {
      "id": 203,
      "cr_bugs": [639760,641129],
      "description": "Mesa driver GL 3.3 requires invariant and centroid to match between shaders",
      "os": {
        "type": "linux"
      },
      "driver_vendor": "Mesa",
      "gl_version": {
        "op": "=",
        "value": "3.3"
      },
      "features": [
        "remove_invariant_and_centroid_for_essl3"
      ]
    },
    {
      "id": 205,
      "description": "Adreno 5xx support for EXT_multisampled_render_to_texture is buggy on Android 7.1",
      "cr_bugs": [663811],
      "os": {
        "type": "android",
        "version": {
          "op": "=",
          "value": "7.1.0"
        }
      },
      "gl_renderer": "Adreno \\(TM\\) 5.*",
      "disabled_extensions": [
        "GL_EXT_multisampled_render_to_texture"
      ]
    },
    {
      "id": 206,
      "description": "Disable KHR_blend_equation_advanced until cc shaders are updated",
      "cr_bugs": [661715],
      "disabled_extensions": [
        "GL_KHR_blend_equation_advanced",
        "GL_KHR_blend_equation_advanced_coherent"
      ]
    },
    {
      "id": 207,
      "description": "Decode and Encode before generateMipmap for srgb format textures on Windows",
      "cr_bugs": [634519],
      "os" : {
        "type": "win"
      },
      "features" : [
        "decode_encode_srgb_for_generatemipmap"
      ]
    },
    {
      "id": 208,
      "description": "Decode and Encode before generateMipmap for srgb format textures on Linux Mesa ANGLE path",
      "cr_bugs": [634519],
      "os": {
        "type": "linux"
      },
      "gl_renderer": "ANGLE.*",
      "vendor_id": "0x8086",
      "features": [
        "decode_encode_srgb_for_generatemipmap"
      ]
    },
    {
      "id": 209,
      "description": "Decode and Encode before generateMipmap for srgb format textures on Chromeos Intel",
      "cr_bugs": [634519],
      "os": {
        "type": "chromeos"
      },
      "vendor_id": "0x8086",
      "features": [
        "decode_encode_srgb_for_generatemipmap"
      ]
    },
    {
      "id": 210,
      "description": "Decode and Encode before generateMipmap for srgb format textures on Linux AMD",
      "cr_bugs": [634519],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x1002",
      "features": [
        "decode_encode_srgb_for_generatemipmap"
      ]
    },
    {
      "id": 211,
      "description": "Rewrite -float to 0.0 - float for Intel Mac",
      "cr_bugs": [672380],
      "os": {
        "type": "macosx",
        "version": {
          "op": "<=",
          "value": "10.11"
        }
      },
      "vendor_id": "0x8086",
      "features": [
        "rewrite_float_unary_minus_operator"
      ]
    },
    {
      "id": 212,
      "description": "Program binaries don't contain transform feedback varyings on Qualcomm GPUs",
      "cr_bugs": [658074],
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno.*",
      "features": [
        "disable_program_caching_for_transform_feedback"
      ]
    },
    {
      "id": 213,
      "description": "The Mali-Gxx driver does not guarantee flush ordering",
      "cr_bugs": [678508],
      "gl_vendor": "ARM.*",
      "gl_renderer": "Mali-G.*",
      "features": [
        "use_virtualized_gl_contexts"
      ]
    },
    {
      "id": 214,
      "comment": [
        "Corresponds to software rendering list #140",
        "Mysteriously, the first workaround won't work without the second. crbug.com/698197#c10",
        "MSAA workaround shouldn't be needed beyond Adreno 3xx. crbug.com/682075#c17"
      ],
      "description": "Some Adreno 3xx don't setup scissor state correctly when FBO0 is bound, nor support MSAA properly.",
      "cr_bugs": [670607, 682075, 696627, 698197, 707839],
      "gl_renderer": "Adreno \\(TM\\) 3.*",
      "features": [
        "force_update_scissor_state_when_binding_fbo0",
        "disable_chromium_framebuffer_multisample"
      ]
    },
    {
      "id": 215,
      "description": "Fake no-op GPU driver bug workaround for testing",
      "cr_bugs": [682912],
      "test_group": 1,
      "features": [
        "use_gpu_driver_workaround_for_testing"
      ]
    },
    {
      "id": 216,
      "cr_bugs": [698926],
      "description": "Pack parameters work incorrectly with pack buffer bound",
      "os": {
        "type": "android"
      },
      "gl_vendor": "NVIDIA.*",
      "features": [
        "pack_parameters_workaround_with_pack_buffer"
      ]
    },
    {
      "id": 217,
      "cr_bugs": [698926],
      "description": "Alignment works incorrectly with unpack buffer bound",
      "os": {
        "type": "android"
      },
      "gl_vendor": "NVIDIA.*",
      "features": [
        "unpack_alignment_workaround_with_unpack_buffer"
      ]
    },
    {
      "id": 218,
      "description": "Certain Adreno 4xx and 5xx drivers often crash in glProgramBinary.",
      "cr_bugs": [699122],
      "os": {
        "type": "android"
      },
      "driver_version": {
        "op": ">=",
        "value": "103.0"
      },
      "gl_renderer": "Adreno \\(TM\\) [45].*",
      "features": [
        "disable_program_disk_cache"
      ]
    },
    {
      "id": 219,
      "description": "Zero-copy DXGI video hangs or displays incorrect colors on older AMD drivers",
      "cr_bugs": [623029, 1025427],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "driver_version": {
        "op": "<",
        "value": "23.20.826.5120"
      },
      "features": [
        "disable_dxgi_zero_copy_video"
      ]
    },
    {
      "id": 220,
      "description": "NV12 DXGI video displays incorrect colors on older AMD drivers",
      "cr_bugs": [644293],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "driver_version": {
        "op": "<",
        "value": "21.19.519.2"
      },
      "features": [
        "disable_nv12_dxgi_video"
      ]
    },
    {
      "id": 221,
      "description": "Very large instanced draw calls crash on some Adreno 3xx drivers",
      "cr_bugs": [701682],
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno \\(TM\\) 3.*",
      "features": [
        "disallow_large_instanced_draw"
      ]
    },
    {
      "id": 222,
      "description": "Software to Accelerated canvas update breaks Linux AMD",
      "cr_bugs": [710029],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x1002",
      "features": [
        "disable_software_to_accelerated_canvas_upgrade"
      ]
    },
    {
      "id": 223,
      "description": "Force integer or srgb cube map texture complete on Linux AMD",
      "cr_bugs": [712117],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x1002",
      "features": [
        "force_int_or_srgb_cube_texture_complete"
      ]
    },
    {
      "id": 224,
      "description": "VPx decoding isn't supported well before Windows 10 creators update.",
      "cr_bugs": [616318, 667532],
      "os": {
        "type": "win",
        "version": {
          "op": "<",
          "value": "10.0.15063"
        }
      },
      "features": [
        "disable_accelerated_vpx_decode"
      ]
    },
    {
      "id": 225,
      "description": "VPx decoding is too slow on Intel Broadwell, Skylake, and CherryTrail",
      "cr_bugs": [616318],
      "os": {
        "type": "win"
      },
      "intel_gpu_series": [
        "broadwell",
        "skylake",
        "cherrytrail"
      ],
      "features": [
        "disable_accelerated_vpx_decode"
      ]
    },
    {
      "id": 226,
      "description": "Accelerated VPx decoding is hanging on some videos.",
      "cr_bugs": [654111],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x8086",
      "driver_version": {
        "op": "<",
        "value": "21.20.16.4542"
      },
      "features": [
        "disable_accelerated_vpx_decode"
      ]
    },
    {
      "id": 227,
      "description": "Certain Apple devices leak stencil buffers",
      "cr_bugs": [713854],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x8086",
      "device_id": ["0x0412", "0x0d26", "0x0a2e", "0x0a26", "0x0d22", "0x161e",
                    "0x1626", "0x162b", "0x1622"],
      "multi_gpu_category": "any",
      "features": [
        "avoid_stencil_buffers"
      ]
    },
    {
      "id": 228,
      "description": "Intel HD 3000 driver crashes frequently on Mac",
      "cr_bugs": [720152],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x8086",
      "device_id": ["0x0116", "0x0126"],
      "multi_gpu_style": "amd_switchable",
      "features": [
        "force_high_performance_gpu"
      ]
    },
    {
      "id": 229,
      "description": "Overlay sizes bigger than screen aren't accelerated on some Intel drivers",
      "cr_bugs": [720059],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x8086",
      "driver_version": {
        "op": "<",
        "value": "21.20.16.4542"
      },
      "features": [
        "disable_larger_than_screen_overlays"
      ]
    },
    {
      "id": 231,
      "description": "Multisampled color renderbuffers can't be resized on Qualcomm 4xx/5xx",
      "cr_bugs": [696126],
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno \\(TM\\) [45].*",
      "features": [
        "multisample_renderbuffer_resize_emulation"
      ]
    },
    {
      "id": 232,
      "description": "Delayed copy NV12 crashes on Intel on Windows <= 8.1.",
      "cr_bugs": [727216],
      "os": {
        "type": "win",
        "version": {
          "op": "<=",
          "value": "8.1"
        }
      },
      "vendor_id": "0x8086",
      "features": [
        "disable_delayed_copy_nv12"
      ]
    },
    {
      "id": 233,
      "description": "Delayed copy NV12 displays incorrect colors on NVIDIA drivers.",
      "cr_bugs": [728670],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x10de",
      "features": [
        "disable_delayed_copy_nv12"
      ]
    },
    {
      "id": 235,
      "description": "Avoid waiting on a egl fence before pageflipping and rely on implicit sync.",
      "cr_bugs": [721463],
      "os": {
        "type": "chromeos"
      },
      "gl_vendor": "Intel.*",
      "features": [
        "rely_on_implicit_sync_for_swap_buffers"
      ]
    },
    {
      "id": 236,
      "description": "glClearColor does not always work on Intel 6xxx Mac drivers",
      "cr_bugs": [710443],
      "os": {
        "type": "macosx",
        "version": {
          "op": "<",
          "value": "10.12.6"
        }
      },
      "vendor_id": "0x8086",
      "device_id": ["0x1626", "0x162B", "0x1622"],
      "features": [
        "clear_to_zero_or_one_broken"
      ]
    },
    {
      "id": 237,
      "description": "eglSwapBuffers intermittently fails on Android when app goes to background",
      "cr_bugs": [744678],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "9.0"
        }
      },
      "features": [
        "dont_disable_webgl_when_compositor_context_lost"
      ]
    },
    {
      "id": 239,
      "description": "Reset TexImage2D base level to 0 on Intel Mac 10.12.4",
      "cr_bugs": [705865],
      "os": {
        "type": "macosx",
        "version": {
          "op": ">=",
          "value": "10.12.4"
        }
      },
      "vendor_id": "0x8086",
      "features": [
        "reset_teximage2d_base_level"
      ]
    },
    {
      "id": 240,
      "cr_bugs": [750306, 764526],
      "description": "glGetQueryObject(GL_QUERY_RESULT_AVAILABLE) blocks unexpectedly on Adreno",
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "8.1"
        }
      },
      "gl_renderer": "Adreno \\(TM\\) [345].*",
      "disabled_extensions": [
        "GL_EXT_disjoint_timer_query",
        "GL_EXT_disjoint_timer_query_webgl2"
      ]
    },
    {
      "id": 241,
      "description": "On Intel GPUs MSAA performance is not acceptable for GPU rasterization. Duplicate of 132 for Android",
      "cr_bugs": [759471],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Intel.*",
      "features": [
        "msaa_is_slow"
      ]
    },
    {
      "id": 242,
      "description": "Code produced by local variable initialization often triggers crashes in Marshmallow Adreno driver",
      "cr_bugs": [728271],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "7.0"
        }
      },
      "gl_renderer": "Adreno \\(TM\\) 4.*",
      "features": [
        "dont_initialize_uninitialized_locals"
      ]
    },
    {
      "id": 243,
      "description": "Program binaries don't contain transform feedback varyings on Mali GPUs",
      "cr_bugs": [778871],
      "os": {
        "type": "chromeos"
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": "Mali.*",
      "features": [
        "disable_program_caching_for_transform_feedback"
      ]
    },
    {
      "id": 245,
      "description": "Switching framebuffers without a flush can lead to crashes on Intel 9th Generation GPU Macs.",
      "cr_bugs": [783979],
      "os": {
        "type": "macosx"
      },
      "intel_gpu_series": [
        "skylake",
        "kabylake",
        "coffeelake"
      ],
      "multi_gpu_category": "any",
      "features": [
        "flush_on_framebuffer_change"
      ]
    },
    {
      "id": 246,
      "description": "Code produced by initializing variables using loops can trigger crashes on some Adreno drivers.",
      "cr_bugs": [784817],
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno \\(TM\\) *",
      "features": [
        "dont_use_loops_to_initialize_variables"
      ]
    },
    {
      "id": 247,
      "description": "EXT_disjoint_timer_query is broken on Samsung Galaxy S6",
      "cr_bugs": [702980],
      "os": {
        "type": "android"
      },
      "machine_model_name": ["SM-G930F"],
      "gl_vendor": "ARM.*",
      "gl_renderer": "Mali-T880",
      "disabled_extensions": [
        "GL_EXT_disjoint_timer_query"
      ]
    },
    {
      "id": 249,
      "description": "Direct composition causes slow presents on old Nvidia GPUs",
      "cr_bugs": [775898],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x10de",
      "device_id": ["0x10d8"],
      "features": [
        "disable_direct_composition"
      ]
    },
    {
      "id": 250,
      "description": "Depth/stencil renderbuffers can't be resized on NVIDIA on early macOS 10.13",
      "cr_bugs": [775202],
      "os": {
        "type": "macosx",
        "version": {
          "op": "between",
          "value": "10.13.0",
          "value2": "10.13.3",
          "comment": "Fixed in 10.13.4."
        }
      },
      "vendor_id": "0x10de",
      "multi_gpu_category": "any",
      "features": [
        "depth_stencil_renderbuffer_resize_emulation"
      ]
    },
    {
      "id": 251,
      "description": "Vivante GPUs shader cache breaks rendering",
      "cr_bugs": [780498],
      "os": {
        "type": "android"
      },
      "gl_extensions": ".*GL_VIV_shader_binary.*",
      "features": [
        "disable_program_cache"
      ]
    },
    {
      "id": 252,
      "description": "Core profile doesn't work on NVidia GeForce GT 120",
      "cr_bugs": [657817],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x10de",
      "device_id": ["0x0640"],
      "features": [
        "disable_es3_gl_context"
      ]
    },
    {
      "id": 254,
      "description": "Limit MSAA quality samples to 4 and storage samples 2 on AMD Stoney",
      "cr_bugs": [875471],
      "os": {
        "type" : "chromeos"
      },
      "vendor_id": "0x1002",
      "device_id": ["0x98e4"],
      "features": [
        "max_msaa_sample_count_4",
        "use_eqaa_storage_samples_2"
      ]
    },
    {
      "id": 255,
      "description": "Fullscreen video crashes macOS 10.11 WindowServer.",
      "cr_bugs": [806506],
      "os": {
        "type": "macosx",
        "version": {
          "op": "<",
          "value": "10.12"
        }
      },
      "features": [
        "disable_av_sample_buffer_display_layer"
      ]
    },
    {
      "id": 256,
      "description": "Don't expose disjoint_timer_query extensions to WebGL unless site isolation is enabled",
      "cr_bugs": [808744],
      "os": {
        "type": "android"
      },
      "disabled_webgl_extensions": [
        "EXT_disjoint_timer_query",
        "EXT_disjoint_timer_query_webgl2"
      ]
    },
    {
      "id": 257,
      "description": "Fake entry for testing disabling of WebGL extensions",
      "cr_bugs": [808744],
      "test_group": 2,
      "disabled_webgl_extensions": [
        "WEBGL_lose_context"
      ]
    },
    {
      "id": 258,
      "description": "Shader variable initialization in a loop caused perf regression on Mac Intel.",
      "cr_bugs": [809422],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x8086",
      "multi_gpu_category": "any",
      "features": [
        "dont_use_loops_to_initialize_variables"
      ]
    },
    {
      "id": 259,
      "description": "8x MSAA is slow for alpha:false WebGL contexts on Mac Intel",
      "cr_bugs": [812071],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x8086",
      "multi_gpu_category": "primary",
      "features": [
        "max_msaa_sample_count_4"
      ]
    },
    {
      "id": 260,
      "cr_bugs": [760389],
      "description": "eglClientWaitSyncKHR with nonzero timeout waits too long",
      "comment": [
        "This bug is specific to Samsung S8/S8+ on Android N, but there ",
        "isn't currently a way to restrict the filter to those devices. The ",
        "functionality is currently only used for WebVR on Daydream ready ",
        "devices, and the non-Samsung Daydream devices generally use ",
        "Android O, so an overbroad match seems acceptable."
      ],
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "8.0"
        }
      },
      "gl_renderer": "Adreno \\(TM\\) 540",
      "features": [
        "dont_use_eglclientwaitsync_with_timeout"
      ]
    },
    {
      "id": 261,
      "cr_bugs": [817286],
      "description": "Fallback to D3D9 if basic info collection fails on Win7",
      "os": {
        "type": "win",
        "version": {
          "op": "=",
          "value": "6.1"
        }
      },
      "vendor_id": "0xffff",
      "device_id": ["0xfffe"],
      "features": [
        "disable_d3d11"
      ]
    },
    {
      "id": 262,
      "description": "Program fails in PowerVR*GX6250 drivers if gl_Position is not set",
      "cr_bugs": [286468, 416670],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR.*GX6250",
      "features": [
        "init_gl_position_in_vertex_shader"
      ]
    },
    {
      "id": 263,
      "description": "Program fails in PowerVR SGX54x drivers if gl_Position is not set",
      "cr_bugs": [286468, 416670],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR SGX 54.*",
      "features": [
        "init_gl_position_in_vertex_shader"
      ]
    },
    {
      "id": 264,
      "description": "Program fails in PowerVR G6200 drivers if gl_Position is not set",
      "cr_bugs": [286468, 416670],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR.*G6200.*",
      "features": [
        "init_gl_position_in_vertex_shader"
      ]
    },
    {
      "id": 265,
      "cr_bugs": [811661],
      "description": "Crash in glQueryCounter() and glBeginQuery() with VMware driver ",
      "os": {
        "type": "linux"
      },
      "gl_vendor": "VMware.*",
      "features": [
        "disable_timestamp_queries"
      ],
      "disabled_extensions": [
        "GL_ARB_timer_query",
        "GL_EXT_timer_query",
        "GL_EXT_disjoint_timer_query",
        "GL_EXT_disjoint_timer_query_webgl2"
      ]
    },
    {
      "id": 266,
      "cr_bugs": [828721],
      "description": "Crash in gl::GLApiBase::glGetQueryObjectui64vFn with NetEase devices ",
      "os": {
        "type": "android"
      },
      "gl_vendor": "NetEase",
      "gl_renderer": "MuMu GL.*",
      "features": [
        "disable_timestamp_queries"
      ],
      "disabled_extensions": [
        "GL_EXT_disjoint_timer_query",
        "GL_EXT_disjoint_timer_query_webgl2"
      ]
    },
    {
      "id": 268,
      "cr_bugs": [797243],
      "description": "Limit MSAA to 4x on Android devices",
      "os": {
        "type": "android"
      },
      "features": [
        "max_msaa_sample_count_4"
      ]
    },
    {
      "id": 269,
      "cr_bugs": [841755],
      "description": "glFlush error on Mac",
      "os": {
        "type": "macosx"
      },
      "features": [
        "disable_2d_canvas_auto_flush"
      ]
    },
    {
      "id": 270,
      "cr_bugs": [859998],
      "description": "AMD Linux driver crashes when copyTexImage2D is called with PIXEL_UNPACK_BUFFER set to an uninitialized buffer",
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x1002",
      "features": [
        "clear_pixel_unpack_buffer_before_copyteximage"
      ]
    },
    {
      "id": 271,
      "cr_bugs": [860418],
      "description": "Frequent crashes in glClear on Mali-T7xx on N with driver 12.1.01alp0",
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "8.0"
        }
      },
      "driver_version": {
        "op": "=",
        "value": "12.1.01alp0"
      },
      "gl_renderer": ".*Mali-T7.*",
      "features": [
        "gl_clear_broken"
      ]
    },
    {
      "id": 272,
      "cr_bugs": [858879],
      "description": "A deleted query id for GL_TIMESTAMP cannot be reused for other query targets",
      "os": {
        "type": "android"
      },
      "gl_vendor": "Qualcomm.*",
      "features": [
        "disable_timestamp_queries"
      ]
    },
    {
      "id": 274,
      "description": "glTexStorage* are buggy when base mipmap level is not 0",
      "cr_bugs": [877874],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x10de",
      "gl_vendor": "NVIDIA.*",
      "features": [
        "reset_base_mipmap_level_before_texstorage"
      ]
    },
    {
      "id": 277,
      "description": "Direct composition path is buggy on certain AMD devices/drivers",
      "cr_bugs": [800950],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "driver_version": {
        "op": "=",
        "value": "8.17.10.1129"
      },
      "features": [
        "disable_direct_composition"
      ]
    },
    {
      "id": 278,
      "description": "Direct composition path is buggy on certain AMD devices/drivers",
      "cr_bugs": [800950],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "device_id": ["0x6900"],
      "features": [
        "disable_direct_composition"
      ]
    },
    {
      "id": 279,
      "description": "WindowServer crashes on VMWare bots using CA renderer",
      "cr_bugs": [828031],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x15ad",
      "multi_gpu_category": "any",
      "features": [
        "disable_overlay_ca_layers"
      ]
    },
    {
      "id": 280,
      "description": "ReadPixels is broken with EXT_multisampled_render_to_texture on recent Adreno drivers.",
      "cr_bugs": [890002],
      "os": {
        "type": "android"
      },
      "driver_version": {
        "op": ">",
        "value": "237.0"
      },
      "gl_renderer": "Adreno \\(TM\\) .*",
      "features": [
        "use_copyteximage2d_instead_of_readpixels_on_multisampled_textures"
      ]
    },
    {
      "id": 283,
      "cr_bugs": [893177],
      "description": "Some drivers can't recover after OUT_OF_MEM and context lost",
      "os": {
        "type": "linux"
      },
      "features": [
        "exit_on_context_lost"
      ]
    },
    {
      "id": 284,
      "cr_bugs": [913301],
      "description": "Clamp texture's BASE_LEVEL/MAX_LEVEL for GenerateMipmap",
      "os": {
        "type": "macosx"
      },
      "features": [
        "clamp_texture_base_level_and_max_level"
      ]
    },
    {
      "id": 285,
      "cr_bugs": [914976, 1000113],
      "description": "Context flush ordering doesn't seem to work on AMD",
      "vendor_id": "0x1002",
      "os": {
        "type": "linux"
      },
      "features": [
        "use_virtualized_gl_contexts"
      ],
      "exceptions": [
        {
          "driver_vendor": "Mesa",
          "driver_version": {
            "op": ">=",
            "value": "19.0"
          }
        }
      ]
    },
    {
      "id": 286,
      "cr_bugs": [908069],
      "description": "Video corruption on Intel HD 530 without hardware overlay support",
      "vendor_id": "0x8086",
      "device_id": ["0x1912"],
      "os": {
        "type": "win"
      },
      "driver_version": {
        "schema": "intel_driver",
        "op": ">",
        "value": "0.0.100.0"
      },
      "hardware_overlay": "unsupported",
      "features": [
        "disable_direct_composition"
      ]
    },
    {
      "id": 289,
      "description": "Fake entry for testing command buffer init failures on ES 2.0",
      "cr_bugs": [923134],
      "test_group": 3,
      "features": [
        "disable_es3_gl_context_for_testing"
      ]
    },
    {
      "id": 290,
      "description": "Round down glBindBufferRange size to a multiple of 4 on Qualcomm Adreno GPUs for uniform buffers",
      "cr_bugs": [906743],
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno \\(TM\\) .*",
      "features": [
        "round_down_uniform_bind_buffer_range_size"
      ]
    },
    {
      "id": 291,
      "description": "adjust src/dst region if blitting pixels outside framebuffer on Linux NVIDIA",
      "cr_bugs": [830046],
      "os": {
        "type": "linux"
      },
      "vendor_id": "0x10de",
      "features": [
        "adjust_src_dst_region_for_blitframebuffer"
      ]
    },
    {
      "id": 292,
      "description": "adjust src/dst region if blitting pixels outside framebuffer on Android NVIDIA",
      "cr_bugs": [830046],
      "os": {
        "type": "android"
      },
      "gl_vendor": "NVIDIA.*",
      "features": [
        "adjust_src_dst_region_for_blitframebuffer"
      ]
    },
    {
      "id": 293,
      "cr_bugs": [931527],
      "description": "Frequent crashes in glClear on Android N with driver 12.0.04rel0",
      "os": {
        "type": "android",
        "version": {
          "op": "<",
          "value": "8.0"
        }
      },
      "driver_version": {
        "op": "=",
        "value": "12.0.04rel0"
      },
      "features": [
        "gl_clear_broken"
      ]
    },
    {
      "id": 295,
      "description": "Avoid waiting on a egl fence before swapping buffers and rely on implicit sync on Intel GPUs",
      "cr_bugs": [938286],
      "os": {
        "type": "linux"
      },
      "gl_vendor": "Intel.*",
      "features": [
        "rely_on_implicit_sync_for_swap_buffers"
      ]
    },
    {
      "id": 296,
      "description": "Avoid waiting on a egl fence before swapping buffers and rely on implicit sync on Broadcom GPUs",
      "cr_bugs": [938286],
      "os": {
        "type": "linux"
      },
      "gl_vendor": "Broadcom.*",
      "features": [
        "rely_on_implicit_sync_for_swap_buffers"
      ]
    },
    {
      "id": 297,
      "cr_bugs": [938678],
      "description": "Needed to pass dEQP-EGL.functional.robustness.reset_context.shaders.infinite_loop.*",
      "os": {
        "type" : "chromeos"
      },
      "vendor_id": "0x1002",
      "features": [
        "exit_on_context_lost"
      ]
    },
    {
      "id": 299,
      "description": "Context lost recovery often fails on PowerVR Rogue GE8* GPUs on Android.",
      "cr_bugs": [942106],
      "os": {
        "type": "android"
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR Rogue GE8.*",
      "features": [
        "exit_on_context_lost"
      ]
    },
    {
      "id": 300,
      "cr_bugs": [775898, 785648, 9245627],
      "description": "Direct composition causes rendering issues on Intel SandyBridge and IvyBridge GPUs",
      "os": {
        "type" : "win"
      },
      "intel_gpu_series": [
        "sandybridge",
        "ivybridge"
      ],
      "features": [
        "disable_direct_composition"
      ]
    },
    {
      "id": 301,
      "description": "Mesa hangs the system when allocating large textures",
      "cr_bugs": [927470],
      "os": {
        "type" : "linux",
        "version": {
          "op": "<",
          "value": "5.0"
        }
      },
      "vendor_id": "0x8086",
      "features": [
        "max_texture_size_limit_4096",
        "max_3d_array_texture_size_1024"
      ]
    },
    {
      "id": 303,
      "cr_bugs": [890227],
      "description": "Dynamic texture map crashes on Intel drivers less than version 24",
      "os": {
        "type" : "win"
      },
      "vendor_id": "0x8086",
      "driver_version": {
        "schema": "intel_driver",
        "op": "<",
        "value": "0.0.0.9999"
      },
      "features": [
        "disable_nv12_dynamic_textures"
      ]
    },
    {
      "id": 304,
      "cr_bugs": [911349],
      "description": "Video processor blit to swap chain results in column of black pixels on older NVIDIA drivers at certain scaling factors",
      "os": {
        "type": "win"
      },
      "vendor_id": "0x10de",
      "driver_version": {
        "op": "<",
        "value": "25.21.14.1900"
      },
      "features": [
        "disable_direct_composition_video_overlays"
      ]
    },
    {
      "id": 306,
      "description": "Program binaries don't contain transform feedback varyings on Mali GPUs",
      "cr_bugs": [961950],
      "os": {
        "type": "android"
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": "Mali.*",
      "features": [
        "disable_program_caching_for_transform_feedback"
      ]
    },
    {
      "id": 307,
      "cr_bugs": [833975],
      "description": "Workaround for broken EGL_IMAGE_EXTERNAL_FLUSH_EXT implementation on NVIDIA",
      "os": {
        "type": "chromeos"
      },
      "gl_vendor": "NVIDIA.*",
      "features": [
        "force_gl_flush_on_swap_buffers"
      ]
    },
    {
      "id": 308,
      "cr_bugs": [983787],
      "description": "Delayed copy NV12 causes crashes on GPU main thread when DXVA video decoder runs on another thread",
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "features": [
        "disable_delayed_copy_nv12"
      ]
    },
    {
      "id": 309,
      "cr_bugs": [993233],
      "description": "Don't use video processor scaling on non-Intel, non-NVIDIA GPUs.",
      "os": {
        "type" : "win"
      },
      "exceptions": [
        {
          "vendor_id": "0x8086"
        },
        {
          "vendor_id": "0x10de"
        }
      ],
      "features": [
          "disable_vp_scaling"
      ]
    },
    {
      "id": 310,
      "description": "Context lost recovery often fails on Mali on CrOS.",
      "cr_bugs": [992286],
      "os": {
        "type": "chromeos"
      },
      "gl_vendor": "ARM.*",
      "gl_renderer": ".*Mali-.*",
      "features": [
        "exit_on_context_lost"
      ]
    },
    {
      "id": 311,
      "cr_bugs": [998038],
      "description": "Don't use IOSurface backed GMBs for half float textures with swiftshader",
      "os": {
        "type" : "macosx"
      },
      "gl_renderer": "Google SwiftShader*",
      "features": [
          "disable_half_float_for_gmb"
      ]
    },
    {
      "id": 312,
      "cr_bugs": [991869],
      "description": "Crash on Mali-T8x when using glTexImage2D",
      "os": {
        "type": "android"
      },
      "gl_renderer": ".*Mali-T8.*",
      "features": [
        "prefer_draw_to_copy"
      ]
    },
    {
      "id": 313,
      "description": "Context lost recovery often fails on PowerVR on CrOS.",
      "cr_bugs": [1010121],
      "os": {
        "type": "chromeos"
      },
      "gl_vendor": "Imagination.*",
      "gl_renderer": "PowerVR.*",
      "features": [
        "exit_on_context_lost"
      ]
    },
    {
      "id": 314,
      "cr_bugs": [1010338],
      "description": "Crash on Adreno when using GL_EXT_shader_framebuffer_fetch",
      "os": {
        "type": "android"
      },
      "gl_renderer": "Adreno.*",
      "disabled_extensions": [
        "GL_EXT_shader_framebuffer_fetch"
      ]
   },
   {
      "id": 315,
      "cr_bugs": [964010],
      "description": "Disable GL_MESA_framebuffer_flip_y for desktop GL",
      "gl_type": "gl",
      "disabled_extensions": [
        "GL_MESA_framebuffer_flip_y"
      ]
    },
    {
      "id": 316,
      "cr_bugs": [1003860],
      "description": "Limit MSAA to 4x on ChromeOS for Intel",
      "os": {
        "type": "chromeos"
      },
      "intel_gpu_generation": {
        "op": ">=",
        "value": "9"
      },
      "driver_vendor": "Mesa",
      "gl_vendor": "Intel.*",
      "features": [
        "max_msaa_sample_count_4"
      ]
    },
    {
      "id": 317,
      "cr_bugs": [1003860],
      "description": "Limit MSAA to 2x on older Intel GPU generations on ChromeOS",
      "os": {
        "type": "chromeos"
      },
      "intel_gpu_generation": {
        "op": "<",
        "value": "9"
      },
      "driver_vendor": "Mesa",
      "gl_vendor": "Intel.*",
      "features": [
        "max_msaa_sample_count_2"
      ]
    },
    {
      "id": 318,
      "cr_bugs": [995396],
      "description": "Direct composition caused performance issues on AMD GPUs",
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "device_id": ["0x694c"],
      "features": [
        "disable_direct_composition"
      ]
    },
    {
      "id": 319,
      "cr_bugs": [709351],
      "description": "Remove dynamic indexing for swizzled vectors on Mac",
      "os": {
        "type": "macosx"
      },
      "features": [
        "remove_dynamic_indexing_of_swizzled_vector"
      ]
    },
    {
      "id": 320,
      "cr_bugs": [709351],
      "description": "Remove dynamic indexing for swizzled vectors on Android",
      "os": {
        "type": "android"
      },
      "features": [
        "remove_dynamic_indexing_of_swizzled_vector"
      ]
    },
    {
      "id": 321,
      "description": "Zero-copy DXGI video hangs or displays incorrect colors on older AMD drivers",
      "cr_bugs": [623029, 1025427],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "device_id": ["0x9870", "0x9874", "0x98E4"],
      "driver_version": {
        "op": "<",
        "value": "26.20.15000.37"
      },
      "features": [
        "disable_dxgi_zero_copy_video"
      ]
    },
    {
      "id": 322,
      "cr_bugs": [932879, 1025427],
      "description": "Hardware overlays fail to work on older AMD drivers",
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "driver_version": {
        "op": "<",
        "value": "23.20.826.5120"
      },
      "features": [
        "disable_direct_composition_video_overlays"
      ]
    },
    {
      "id": 323,
      "cr_bugs": [932879, 1025427],
      "description": "Hardware overlays fail to work on older AMD drivers",
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "device_id": ["0x9870", "0x9874", "0x98E4"],
      "driver_version": {
        "op": "<",
        "value": "26.20.15000.37"
      },
      "features": [
        "disable_direct_composition_video_overlays"
      ]
    },
    {
      "id": 324,
      "cr_bugs": [1029855, 1050666],
      "description": "dynamic textures fail to work on AMD GPUs",
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "features": [
        "disable_nv12_dynamic_textures"
      ]
    },
    {
      "id": 326,
      "description": "Migrating OpenGL contexts between low- and high-power GPUs is unreliable on Mac NVIDIA laptops",
      "cr_bugs": [681341],
      "os": {
        "type": "macosx"
      },
      "vendor_id": "0x10de",
      "multi_gpu_category": "any",
      "features": [
        "force_low_power_gpu"
      ]
    },
    {
      "id": 327,
      "cr_bugs": [1027981],
      "description": "Disable dual source blending support",
      "os": {
        "type": "macosx",
        "version": {
          "op": "<",
          "value": "10.14"
        }
      },
      "gl_vendor": "Intel.*",
      "features": [
        "disable_dual_source_blending_support"
      ]
    },
    {
      "id": 328,
      "cr_bugs": [1041166],
      "description": "Disable D3D11VideoDecoder due to crashes on NVIDIA",
      "os": {
        "type": "win"
      },
      "vendor_id": "0x10de",
      "features": [
        "disable_d3d11_video_decoder"
      ]
    },
    {
      "id": 329,
      "cr_bugs": [1012464],
      "description": "Limit D3D11VideoDecoder to 11.0 due to crashes on AMD",
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "features": [
        "limit_d3d11_video_decoder_to_11_0"
      ]
    },
    {
      "id": 331,
      "cr_bugs": [1046462],
      "description": "GL and Vulkan interop doesn't work with AMD GPU properly",
      "os": {
        "type": "linux"
      },
      "driver_vendor": "Mesa",
      "driver_version": {
        "op": "<",
        "value": "19.3.5"
      },
      "vendor_id": "0x1002",
      "disabled_extensions": [
        "GL_EXT_memory_object_fd",
        "GL_EXT_semaphore_fd"
      ]
    },
    {
      "id": 332,
      "cr_bugs": [1045586],
      "description": "Send empty video hdr metadata due to crashes on AMD",
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "features": [
        "use_empty_video_hdr_metadata"
      ]
    },
    {
      "id": 334,
      "description": "NVidia drivers seem corrupt memory when all siblings of eglImage are destroyed",
      "cr_bugs": [1052114],
      "os": {
        "type": "android"
      },
      "gl_vendor": "NVIDIA.*",
      "features": [
        "dont_delete_source_texture_for_egl_image"
      ]
    },
    {
      "id": 336,
      "cr_bugs": [625785],
      "description": "DXVA video decoder crashes on some AMD GPUs",
      "os": {
        "type": "win"
      },
      "vendor_id": "0x1002",
      "device_id": ["0x15d8", "0x15dd"],
      "exceptions": [
        {
          "driver_version": {
            "op": "between",
            "value": "26.20.11030.2",
            "value2": "26.20.11999.99999"
          },
          "driver_version": {
            "op": "between",
            "value": "26.20.12020.15",
            "value2": "26.20.12999.99999"
          },
          "driver_version": {
            "op": "between",
            "value": "26.20.13001.27002",
            "value2": "26.20.13999.99999"
          },
          "driver_version": {
            "op": ">=",
            "value": "26.20.14001.7001"
          }
        }
      ],
      "features": [
        "disable_dxva_video_decoder"
      ]
    },
    {
      "id": 337,
      "description": "Disable hardware MFT H264 encoder on older NVIDIA drivers",
      "cr_bugs": [1058583],
      "os": {
        "type": "win"
      },
      "vendor_id": "0x10de",
      "driver_version": {
        "op": "<",
        "value": "24.21.13.9827"
      },
      "features": [
        "disable_mediafoundation_async_h264_encoding"
      ]
    },
    {
      "id": 338,
      "description": "Disable hardware overlay on icelake with older Intel drivers",
      "cr_bugs": [1062653],
      "os": {
        "type": "win"
      },
      "intel_gpu_series" : [
        "icelake"
      ],
      "vendor_id": "0x8086",
      "driver_version": {
        "op": "<",
        "value": "26.20.100.7755"
      },
      "features": [
        "disable_direct_composition_video_overlays"
      ]
    },
    {
      "id": 339,
      "description": "NV12 textures trigger crash on Intel driver 20.19.15.*",
      "cr_bugs": [971952],
      "os": {
        "type": "win",
        "version": {
          "op": "=",
          "value": "10"
        }
      },
      "vendor_id": "0x8086",
      "intel_gpu_series": [
        "skylake"
      ],
      "driver_version": {
        "op": "between",
        "value": "20.19.15.4285",
        "value2": "20.19.15.4380"
      },
      "features": [
        "disable_nv12_dxgi_video"
      ]
    },
    {
      "id": 340,
      "description": "NV12 textures trigger crash on Intel driver 10.18.15.*",
      "cr_bugs": [971952],
      "os": {
        "type": "win",
        "version": {
          "op": "=",
          "value": "10"
        }
      },
      "vendor_id": "0x8086",
      "intel_gpu_series": [
        "skylake"
      ],
      "driver_version": {
        "op": "between",
        "value": "10.18.15.4256",
        "value2": "10.18.15.4293"
      },
      "features": [
        "disable_nv12_dxgi_video"
      ]
    }
  ]
}
