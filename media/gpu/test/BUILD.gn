# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/ui.gni")
import("//media/gpu/args.gni")

source_set("helpers") {
  testonly = true
  sources = [
    "video_accelerator_unittest_helpers.h",
  ]
  deps = [
    "//base:base",
  ]
}

source_set("render_helpers") {
  testonly = true
  sources = [
    "rendering_helper.cc",
    "rendering_helper.h",
    "texture_ref.cc",
    "texture_ref.h",
    "video_frame_helpers.cc",
    "video_frame_helpers.h",
  ]
  deps = [
    "//media/gpu",
    "//ui/gl/init:init",
  ]
  if (use_ozone) {
    deps += [ "//ui/ozone" ]
  }
}

source_set("frame_mapper") {
  testonly = true
  sources = [
    "video_frame_mapper.h",
    "video_frame_mapper_factory.cc",
    "video_frame_mapper_factory.h",
  ]
  if (is_chromeos) {
    sources += [
      "generic_dmabuf_video_frame_mapper.cc",
      "generic_dmabuf_video_frame_mapper.h",
    ]
    if (use_vaapi) {
      sources += [
        "vaapi_dmabuf_video_frame_mapper.cc",
        "vaapi_dmabuf_video_frame_mapper.h",
      ]
    }
  }

  deps = [
    "//media/gpu",
  ]
}

source_set("frame_validator") {
  testonly = true
  sources = [
    "video_frame_validator.cc",
    "video_frame_validator.h",
  ]
  public_deps = [
    ":frame_mapper",
  ]
  deps = [
    ":decode_helpers",
    ":helpers",
    "//media/gpu",
    "//third_party/libyuv",
  ]
}

source_set("decode_helpers") {
  testonly = true
  sources = [
    "video_decode_accelerator_unittest_helpers.cc",
    "video_decode_accelerator_unittest_helpers.h",
  ]
  public_deps = [
    ":helpers",
    ":render_helpers",
  ]
  deps = [
    "//media/gpu",
    "//testing/gtest",
  ]
  if (use_ozone) {
    deps += [ "//ui/ozone" ]
  }
}

source_set("encode_helpers") {
  testonly = true
  sources = [
    "video_encode_accelerator_unittest_helpers.cc",
    "video_encode_accelerator_unittest_helpers.h",
  ]
  public_deps = [
    ":helpers",
    ":render_helpers",
  ]
  deps = [
    ":frame_mapper",
    "//media/gpu",
  ]
}

# TODO(dstaessens@) Make this work on other platforms too.
if (is_chromeos) {
  static_library("video_player") {
    testonly = true
    sources = [
      "video_player/frame_renderer.h",
      "video_player/frame_renderer_dummy.cc",
      "video_player/frame_renderer_dummy.h",
      "video_player/video.cc",
      "video_player/video.h",
      "video_player/video_collection.cc",
      "video_player/video_collection.h",
      "video_player/video_decoder_client.cc",
      "video_player/video_decoder_client.h",
      "video_player/video_player.cc",
      "video_player/video_player.h",
    ]
    data = [
      "//media/test/data/",
    ]
    deps = [
      ":decode_helpers",
      "//media/gpu",
    ]
    if (use_ozone) {
      deps += [ "//ui/ozone" ]
    }
  }
}
