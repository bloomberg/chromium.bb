[cfi-unrelated-cast|cfi-derived-cast]

# e.g. RolloverProtectedTickClock
fun:*MutableInstance*

# WTF allocators. See https://crbug.com/713293.
fun:*Allocate*Backing*

# WTF::ThreadSpecific
fun:*ThreadSpecific*

# Mesa contains several bad casts.
src:*third_party/mesa*

# LLVM's allocator
src:*third_party/swiftshader/third_party/llvm-subzero/include/llvm/Support/Allocator.h*

# Deliberate bad cast to derived class to hide functions.
type:*BlockIUnknownMethods*
type:*BlockRefType*
type:*SkAutoTUnref*
type:*SkBlockComRef*

# invalid downcasts for IPC messages
# https://crbug.com/520760
src:*nacl_message_scanner.cc*

# src/base/win/event_trace_provider_unittest.cc
type:*EtwTraceProvider*

# b/64003142
fun:*internal_default_instance*

#############################################################################
# Base class's constructor accesses a derived class.

fun:*DoublyLinkedListNode*

# RenderFrameObserverTracker<T>::RenderFrameObserverTracker()
fun:*content*RenderFrameObserverTracker*RenderFrame*

# RenderViewObserverTracker<T>::RenderViewObserverTracker()
fun:*content*RenderViewObserverTracker*RenderView*

fun:*RefCountedGarbageCollected*makeKeepAlive*
fun:*ThreadSafeRefCountedGarbageCollected*makeKeepAlive*

#############################################################################
# Base class's destructor accesses a derived class.

fun:*DatabaseContext*contextDestroyed*

# FIXME: Cannot handle template function LifecycleObserver<>::setContext,
# so exclude source file for now. 
src:*LifecycleObserver.h*

# Blink wtf::Vector cast on non-initialized data
# https://crbug.com/568891
src:*wtf/Vector.h*
src:*wtf/PartitionAllocator.h*

#############################################################################
# Methods disabled due to perf considerations.

[cfi-vcall]

# Skia

# https://crbug.com/638056#c1
fun:*SkCanvas*onDrawRect*

# https://crbug.com/638064
fun:*SkCanvas*drawPicture*

# https://crbug.com/638060
fun:*SkCanvas*onDrawPicture*

# https://crbug.com/638064#c2
fun:*SkBaseDevice*accessPixels*

# https://crbug.com/638056
fun:*call_hline_blitter*
fun:*do_scanline*
fun:*antifilldot8*

# Unclear what could be done here
fun:*SkCanvas*drawRect*
fun:*SkPictureGpuAnalyzer*analyzePicture*
fun:*SkScalerContext*MakeRec*

# CC

# https://crbug.com/638056
fun:*LayerTreeHost*NotifySwapPromiseMonitorsOfSetNeedsCommit*

# WebKit
# The entries below have not been categorized

# cc::DisplayItemList::Inputs::~Inputs
fun:*cc*DisplayItemList*Inputs*

fun:*PaintInvalidationState*computePaintInvalidationRectInBacking*
fun:*AdjustAndMarkTrait*mark*
fun:*TraceTrait*trace*
fun:*ChromeClientImpl*scheduleAnimation*
fun:*hasAspectRatio*
fun:*nextBreakablePosition*
fun:*supportsCachedOffsets*
fun:*traceImpl*

#############################################################################
# Cross-DSO vcalls

[cfi-vcall|cfi-unrelated-cast|cfi-derived-cast]

# These classes are used to communicate between chrome.exe and
# chrome_child.dll (see src/sandbox/win/src/sandbox.h,
# src/chrome/app/chrome_main.cc).
type:sandbox::BrokerServices
type:sandbox::TargetPolicy
type:sandbox::TargetServices

# Likewise (base/win/scoped_handle.cc).
type:*ActiveVerifier*

#############################################################################
# Disabled indirect calls

[cfi-icall]

######### Cross-DSO icalls using dynamically resolved symbols

# ANGLE
src:*third_party/angle/src/libANGLE/*
src:*third_party/angle/src/third_party/libXNVCtrl/NVCtrl.c
src:*ui/gl/angle_platform_impl.cc
# third_party/angle/src/gpu_info_util/SystemInfo_libpci.cpp
fun:*GetPCIDevicesWithLibPCI*
# third_party/angle/src/common/event_tracer.cpp
fun:*GetTraceCategoryEnabledFlag*
fun:*AddTraceEvent*

# PPAPI
src:*ppapi/*
src:*content/renderer/pepper*
fun:*PpapiThread*
fun:*BrokerProcessDispatcher*
# ppapi code uses base::Callback to call into libppappi_test.so.
# base/bind_internal.h
fun:*FunctorTraits*

# Calls to auto-generated stubs by generate_stubs.py
src:*audio/pulse/pulse_stubs.cc

# Calls to auto-generated stubs by generate_library_loader.py
src:*device/udev_linux/udev1_loader.cc
src:*net/proxy/proxy_config_service_linux.cc

# Calls to auto-generated stubs by ui/gl/generate_bindings.py
src:*ui/gl/gl_bindings_autogen_*
# ui/gl/gl_implementation.c
fun:*GetGLProcAddress*

src:*components/os_crypt/*
src:*chrome/browser/password_manager/native_backend_libsecret*

src:*content/browser/accessibility/browser_accessibility_auralinux.cc
src:*ui/accessibility/platform/ax_platform_node_auralinux.cc

src:*chrome/browser/ui/zoom/chrome_zoom_level_prefs.cc
src:*third_party/webrtc/modules/desktop_capture/x11/x_server_pixel_buffer.cc
src:*content/zygote/zygote_main_linux.cc
src:*media/cdm/*
src:*third_party/swiftshader/*
src:*base/native_library_unittest.cc

# chrome/browser/ui/libgtkui/gtk_ui.cc GtkUi::GtkUi()
fun:*GtkUi*
# chrome/browser/ui/views/frame/global_menu_bar_x11.cc
fun:*GlobalMenuBarX11*
# net/cert/cert_verify_proc_nss.cc
fun:*CertVerifyProcNSS*VerifyInternalImpl*

# third_party/skia/include/gpu/gl/GrGLFunctions.h
fun:*GrGLFunction*

######### Function pointers cast to incorrect type signatures

# libicu is currently compiled such that in libicu the 'UChar' type is a
# defined as a char16_t internally, but for the rest of chromium it's an
# unsigned short, causing mismatched type signatures for icalls to/from icu
src:*third_party/icu/source/common/*
src:*third_party/WebKit/Source/platform/wtf/*
# v8/src/intl.cc
fun:*LocaleConvertCase*

src:*third_party/boringssl/*
src:*third_party/freetype/*
src:*third_party/harfbuzz-ng/*
src:*third_party/libsrtp/*
src:*third_party/libvpx/*
src:*third_party/libxml/*
src:*third_party/pdfium/third_party/lcms/*
src:*third_party/mesa/*
src:*third_party/sqlite/*
src:*third_party/webrtc/*
src:*third_party/yasm/*
src:*v8/*

######### Uncategorized

src:*native_client/*
