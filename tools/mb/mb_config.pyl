# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a .pyl, or "Python Literal", file. You can treat it just like a
# .json file, with the following exceptions:
# * all keys must be quoted (use single quotes, please);
# * comments are allowed, using '#' syntax; and
# * trailing commas are allowed.

{
  # This is a map of buildbot master names -> buildbot builder names ->
  # config names (where each config name is a key in the 'configs' dict,
  # below). MB uses this dict to look up which config to use for a given bot.
  'masters': {
    'chrome': {
      'chromeos-amd64-generic-google-rel': 'official_cros_chrome_sdk',
      'chromeos-betty-google-rel': 'official_cros_chrome_sdk_headless_ozone',
      'chromeos-betty-pi-arc-google-rel': 'official_cros_chrome_sdk_headless_ozone',
      'chromeos-eve-google-rel': 'official_cros_chrome_sdk_headless_ozone',
      'chromeos-kevin-google-rel': 'official_cros_chrome_sdk_headless_ozone',
      'linux-chromeos-google-rel': 'official_goma_chromeos_minimal_symbols',
      'linux-google-rel': 'official_goma',
      'mac-google-rel': 'official_goma',
      'win-celab-rel': 'official_celab_release_bot',
      'win-google-rel': 'official_goma_x86',
    },

    'chromeos.chrome': {
      'chrome-tot-chromeos-amd64-generic': 'cros_chrome_sdk',
      'Chrome4CROS Packages': 'chromeos_with_codecs_release_bot',
      'Linux ChromeOS Buildspec Tests': 'chromeos_with_codecs_release_bot',
    },

    # Take care when changing any of these builders to ensure that you do not
    # include a configuration with 'chrome_with_codecs' since these builders
    # generated publicly advertised non-Official builds which are not allowed
    # to have proprietary codecs enabled.
    'chromium': {
      'android-archive-rel': 'android_without_codecs_release_bot_minimal_symbols',
      'android-archive-dbg': 'android_without_codecs_debug_bot',
      'linux-archive-rel': 'release_bot',
      'linux-archive-dbg': 'debug_bot',
      'mac-archive-rel': 'release_bot_mac_strip_minimal_symbols',
      'mac-archive-dbg': 'debug_bot',
      'win32-archive-rel': 'release_bot_x86_minimal_symbols_enable_archive_compression',
      'win32-archive-dbg': 'debug_bot_x86',
      'win-archive-rel': 'release_bot_minimal_symbols_enable_archive_compression',
      'win-archive-dbg': 'debug_bot',
    },

    'chromium.android': {
      'Android ASAN (dbg)': 'android_clang_asan_debug_bot',
      'Android arm Builder (dbg)': 'android_webview_google_debug_static_bot',
      'Android arm64 Builder (dbg)': 'android_webview_google_debug_static_bot_arm64',
      'Android x64 Builder (dbg)': 'android_debug_static_bot_x64',
      'Android x86 Builder (dbg)': 'android_debug_static_bot_x86',
      'Cast Android (dbg)': 'android_cast_debug_static_bot',
      'Deterministic Android': 'android_without_codecs_release_bot_minimal_symbols',
      'Deterministic Android (dbg)': 'android_debug_bot',

      'android-cronet-arm-dbg': 'android_cronet_debug_static_bot_arm_no_neon',
      'android-cronet-arm-rel': 'android_cronet_release_bot_minimal_symbols_arm_no_neon',
      'android-cronet-arm64-dbg': 'android_cronet_debug_static_bot_arm64',
      'android-cronet-arm64-rel': 'android_cronet_release_bot_minimal_symbols_arm64',
      'android-cronet-asan-arm-rel': 'android_cronet_release_bot_minimal_symbols_arm_no_neon_clang_asan',
      'android-cronet-marshmallow-arm64-perf-rel': 'android_cronet_release_bot_minimal_symbols_arm64',
      'android-cronet-x86-dbg': 'android_cronet_debug_static_bot_x86',
      'android-cronet-x86-rel': 'android_cronet_release_bot_minimal_symbols_x86',
      'android-incremental-dbg': 'android_incremental_debug_bot',
      'android-jumbo-rel': 'android_jumbo_release_bot_minimal_symbols',
      'android-kitkat-arm-rel': 'android_release_bot_minimal_symbols',

      # This bot must use the gpu_tests mixin to match 'Android FYI Release (Nexus 5X)'
      # on the chromium.gpu waterfall, which it mirrors via trybots.pyl.
      'android-marshmallow-arm64-rel': 'gpu_tests_android_release_bot_minimal_symbols_arm64',

      'android-pie-arm64-rel': 'android_release_bot_minimal_symbols_arm64_webview_google',
    },

    'chromium.android.fyi': {
      'Android WebView P FYI (rel)': 'android_release_bot_minimal_symbols_arm64_webview_google',
      'Android WebView P OOR-CORS FYI (rel)': 'android_release_bot_minimal_symbols_arm64_webview_google',
      'Memory Infra Tester': 'android_release_thumb_bot',
      'android-marshmallow-x86-fyi-rel': 'android_release_bot_minimal_symbols_x86_resource_whitelisting',
      'android-pie-x86-fyi-rel': 'android_release_bot_minimal_symbols_x86',
      'android-bfcache-debug': 'android_debug_bot',
    },

    'chromium.chromedriver': {
      'Win7': 'release_bot_x86',
      'Mac 10.6': 'release_bot',
      'Linux': 'release_bot',
      'Linux32': 'release_bot_x86',
    },

    'chromium.chromiumos': {
      'Linux ChromiumOS Full': 'chromeos_with_codecs_release_bot',

      'chromeos-amd64-generic-asan-rel': 'cros_chrome_sdk_asan',
      'chromeos-amd64-generic-cfi-thin-lto-rel': 'cros_chrome_sdk_headless_ozone_cfi_thin_lto',
      'chromeos-amd64-generic-dbg': 'cros_chrome_sdk_dbg',
      'chromeos-amd64-generic-rel': 'cros_chrome_sdk_headless_ozone',
      'chromeos-arm-generic-dbg': 'cros_chrome_sdk_dbg',
      'chromeos-arm-generic-rel': 'cros_chrome_sdk',
      'chromeos-kevin-rel': 'cros_chrome_sdk_headless_ozone',
      'linux-chromeos-rel': 'chromeos_with_codecs_release_bot',
      'linux-chromeos-dbg': 'chromeos_with_codecs_debug_bot',
    },

    'chromium.clang': {
      'CFI Linux CF': 'cfi_full_cfi_icall_cfi_diag_recover_release_static',
      'CFI Linux ToT': 'clang_tot_cfi_full_cfi_icall_cfi_diag_thin_lto_release_static_dcheck_always_on',
      'CrWinAsan': 'asan_clang_fuzzer_static_v8_heap_minimal_symbols_release_tot',
      'CrWinAsan(dll)': 'asan_clang_shared_v8_heap_minimal_symbols_release_tot',

      'linux-win_cross-rel': 'clang_tot_win_release_cross',
      'ToTAndroid': 'android_clang_tot_release_minimal_symbols',
      'ToTAndroid64': 'android_clang_tot_release_arm64',
      'ToTAndroidASan': 'android_clang_tot_asan',
      'ToTAndroid (dbg)': 'android_clang_tot_dbg',
      'ToTAndroidCFI': 'android_clang_tot_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on',
      'ToTAndroidOfficial': 'android_clang_tot_release_minimal_symbols_official_optimize',
      'ToTAndroid64': 'android_clang_tot_release_arm64',
      'ToTAndroid x64': 'android_clang_tot_x64',
      'ToTLinuxOfficial': 'clang_tot_official',
      'ToTLinux': 'clang_tot_linux_full_symbols_shared_release',
      'ToTLinuxCoverage': 'clang_tot_coverage_minimal_symbols_release_with_libfuzzer',
      'ToTLinux (dbg)': 'clang_tot_shared_debug',
      'ToTLinuxASan': 'clang_tot_asan_lsan_static_release',
      'ToTLinuxASanLibfuzzer': 'libfuzzer_asan_clang_tot_release',
      'ToTLinuxMSan': 'clang_tot_msan_release',
      'ToTLinuxTSan': 'clang_tot_tsan_release',
      'ToTLinuxThinLTO': 'clang_tot_release_minimal_symbols_thin_lto_static',
      'ToTLinuxUBSanVptr': 'clang_tot_ubsan_no_recover_hack_static_release',
      'ToTMac': 'clang_tot_minimal_symbols_shared_release',
      'ToTMacOfficial': 'clang_tot_official',
      'ToTMacCoverage': 'clang_tot_coverage_minimal_symbols_release',
      'ToTMac (dbg)': 'clang_tot_shared_debug',
      'ToTMacASan': 'asan_disable_nacl_clang_tot_minimal_symbols_static_release',
      'ToTWin': 'clang_tot_official_minimal_symbols_static_release_x86',
      'ToTWin(dbg)': 'clang_tot_shared_debug_x86',
      'ToTWin(dll)': 'clang_tot_minimal_symbols_shared_release_x86_dcheck',
      'ToTWinOfficial': 'clang_tot_win_official_full_symbols_thin_lto_static_x86',
      'ToTWin64': 'clang_tot_official_minimal_symbols_static_release',
      'ToTWin64(dbg)': 'clang_tot_shared_debug',
      'ToTWin64(dll)': 'clang_tot_shared_release_dcheck',
      'ToTWinASanLibfuzzer': 'libfuzzer_windows_asan_clang_tot_release_bot',
      'ToTWinCFI': 'clang_tot_win_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on_x86',
      'ToTWinCFI64': 'clang_tot_win_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on',
      'ToTWinLibcxx64': 'clang_tot_official_optimize_minimal_symbols_static_release_libcxx',
      'ToTWinThinLTO64': 'clang_tot_win_official_full_symbols_thin_lto_static',
      'ToTiOS': 'ios_error',
      'UBSanVptr Linux': 'ubsan_vptr_release_bot',
    },

    'chromium.dawn': {
      'Dawn Linux x64 Builder': 'dawn_tests_release_trybot',
      'Dawn Linux x64 DEPS Builder': 'dawn_tests_release_trybot',

      'Dawn Mac x64 Builder': 'dawn_tests_release_trybot',
      'Dawn Mac x64 DEPS Builder': 'dawn_tests_release_trybot',

      'Dawn Win10 x86 Builder': 'dawn_tests_release_trybot_x86',
      'Dawn Win10 x64 Builder': 'dawn_tests_release_trybot',
      'Dawn Win10 x86 DEPS Builder': 'dawn_tests_release_trybot_x86',
      'Dawn Win10 x64 DEPS Builder': 'dawn_tests_release_trybot',
    },

    'chromium.fuzz': {
      'ASAN Debug': 'asan_lsan_debug_bot',
      'ASAN Release Media': 'asan_lsan_fuzzer_v8_heap_chromeos_codecs_release_bot',
      'ASAN Release': 'asan_lsan_fuzzer_v8_heap_release_bot',
      'ASan Debug (32-bit x86 with V8-ARM)': 'asan_v8_heap_debug_bot_hybrid',
      'ASan Release (32-bit x86 with V8-ARM)': 'asan_fuzzer_v8_heap_release_bot_hybrid',
      'ASan Release Media (32-bit x86 with V8-ARM)': 'asan_fuzzer_v8_heap_chromeos_codecs_release_bot_hybrid',
      'Afl Upload Linux ASan': 'afl_asan_shared_release_bot',
      'ChromiumOS ASAN Release': 'chromeos_asan_lsan_fuzzer_v8_heap_release_bot',
      'Libfuzzer Upload Chrome OS ASan': 'libfuzzer_chromeos_asan_release_bot',
      'Libfuzzer Upload Linux32 ASan': 'libfuzzer_asan_release_bot_x86',
      'Libfuzzer Upload Linux32 ASan Debug': 'libfuzzer_asan_debug_bot_x86',
      'Libfuzzer Upload Linux32 V8-ARM ASan': 'libfuzzer_asan_release_bot_x86_v8_arm',
      'Libfuzzer Upload Linux32 V8-ARM ASan Debug': 'libfuzzer_asan_debug_bot_x86_v8_arm',
      'Libfuzzer Upload Linux ASan': 'libfuzzer_asan_release_bot',
      'Libfuzzer Upload Linux ASan Debug': 'libfuzzer_asan_debug_bot',
      'Libfuzzer Upload Linux V8-ARM64 ASan': 'libfuzzer_asan_release_bot_v8_arm64',
      'Libfuzzer Upload Linux V8-ARM64 ASan Debug': 'libfuzzer_asan_debug_bot_v8_arm64',
      'Libfuzzer Upload Linux MSan': 'libfuzzer_msan_release_bot',
      'Libfuzzer Upload Linux UBSan': 'libfuzzer_ubsan_release_bot',
      'Libfuzzer Upload Mac ASan': 'libfuzzer_mac_asan_shared_release_bot',
      'Libfuzzer Upload Windows ASan': 'libfuzzer_windows_asan_release_bot',
      'MSAN Release (chained origins)': 'msan_release_bot',
      'MSAN Release (no origins)': 'msan_no_origins_release_bot',
      'Mac ASAN Release Media': 'asan_disable_nacl_fuzzer_v8_heap_chrome_with_codecs_release_bot',
      'Mac ASAN Release': 'asan_disable_nacl_fuzzer_v8_heap_release_bot',
      'TSAN Debug': 'tsan_disable_nacl_debug_bot',
      'TSAN Release': 'tsan_disable_nacl_release_bot',
      'UBSan Release': 'ubsan_release_bot',
      'UBSan vptr Release': 'ubsan_vptr_release_bot',
      'Win ASan Release Media': 'asan_fuzzer_v8_heap_chrome_with_codecs_release_bot',
      'Win ASan Release': 'asan_fuzzer_v8_heap_release_bot',
    },

    'chromium.fyi': {
      'Afl Upload Linux ASan': 'afl_asan_shared_release_bot',

      'android-code-coverage': 'android_debug_static_bot_arm64_minimal_symbols_coverage',
      'chromeos-amd64-generic-rel-vm-tests': 'cros_chrome_sdk_headless_ozone_dcheck_always_on',
      'chromeos-kevin-rel-hw-tests': 'cros_chrome_sdk_headless_ozone',
      'chromeos-vm-code-coverage': 'cros_chrome_sdk_headless_ozone_coverage',
      'linux-bfcache-debug': 'debug_bot',
      'linux-oor-cors-rel': 'release_bot_minimal_symbols',
      'linux-chromeos-code-coverage': 'chromeos_with_codecs_release_bot_coverage',
      'linux-fieldtrial-rel': 'release_bot_minimal_symbols',
      'linux-wpt-fyi-rel': 'release_bot_minimal_symbols',

      'Linux Builder Goma Canary': 'gpu_tests_release_bot',
      'Linux Builder Goma Latest Client': 'gpu_tests_release_bot',
      'Linux Builder Goma RBE Canary': 'gpu_tests_release_bot',
      'Linux Builder Goma RBE Latest Client': 'gpu_tests_release_bot',
      'linux-archive-rel-goma-canary': 'release_bot',
      'linux-archive-rel-goma-latest': 'release_bot',
      'linux-archive-rel-goma-canary-localoutputcache': 'release_bot',
      'linux-archive-rel-goma-latest-localoutputcache': 'release_bot',
      'linux-archive-rel-goma-rbe-canary': 'release_bot',
      'linux-archive-rel-goma-rbe-latest': 'release_bot',
      'linux-archive-rel-goma-rbe-ats-canary': 'release_bot',
      'linux-archive-rel-goma-rbe-ats-latest': 'release_bot',

      'Win Builder Goma Canary': 'gpu_tests_release_bot_x86_minimal_symbols',
      'Win Builder Goma Latest Client': 'gpu_tests_release_bot_x86_minimal_symbols',
      'Win Builder (dbg) Goma Canary': 'gpu_tests_debug_bot_x86',
      'Win Builder (dbg) Goma Latest Client': 'gpu_tests_debug_bot_x86',
      'Win Builder Goma RBE Latest Client': 'gpu_tests_release_bot_x86_minimal_symbols',
      'Win Builder (dbg) Goma RBE Latest Client': 'gpu_tests_debug_bot_x86',
      'win32-archive-rel-goma-canary-localoutputcache': 'release_bot_x86_minimal_symbols_enable_archive_compression',
      'win32-archive-rel-goma-latest-localoutputcache': 'release_bot_x86_minimal_symbols_enable_archive_compression',
      'win32-archive-rel-goma-rbe-canary': 'release_bot_x86_minimal_symbols_enable_archive_compression',
      'win32-archive-rel-goma-rbe-latest': 'release_bot_x86_minimal_symbols_enable_archive_compression',

      'Win7 Builder Goma Canary': 'gpu_tests_release_bot_x86_minimal_symbols',
      'Win7 Builder Goma Latest Client': 'gpu_tests_release_bot_x86_minimal_symbols',
      'Win7 Builder (dbg) Goma Canary': 'gpu_tests_debug_bot_x86',
      'Win7 Builder (dbg) Goma Latest Client': 'gpu_tests_debug_bot_x86',

      'Mac Builder Goma Canary': 'gpu_tests_release_bot_minimal_symbols',
      'Mac Builder Goma Latest Client': 'gpu_tests_release_bot_minimal_symbols',
      'Mac Builder (dbg) Goma Canary': 'gpu_tests_debug_bot',
      'Mac Builder (dbg) Goma Latest Client': 'gpu_tests_debug_bot',
      'Mac Builder (dbg) Goma Canary (clobber)': 'gpu_tests_debug_bot',
      'Mac Builder (dbg) Goma Latest Client (clobber)': 'gpu_tests_debug_bot',
      'Mac Builder (dbg) Goma RBE Canary (clobber)': 'gpu_tests_debug_bot',
      'Mac Builder (dbg) Goma RBE Latest Client (clobber)': 'gpu_tests_debug_bot',
      'mac-archive-rel-goma-canary': 'release_bot_mac_strip_minimal_symbols',
      'mac-archive-rel-goma-latest': 'release_bot_mac_strip_minimal_symbols',
      'mac-archive-rel-goma-rbe-canary': 'release_bot_mac_strip_minimal_symbols',
      'mac-archive-rel-goma-rbe-latest': 'release_bot_mac_strip_minimal_symbols',

      'mac-archive-rel-goma-canary-localoutputcache': 'release_bot_mac_strip_minimal_symbols',
      'mac-archive-rel-goma-latest-localoutputcache': 'release_bot_mac_strip_minimal_symbols',

      'chromeos-amd64-generic-rel-goma-canary': 'cros_chrome_sdk_headless_ozone',
      'chromeos-amd64-generic-rel-goma-latest': 'cros_chrome_sdk_headless_ozone',
      'chromeos-amd64-generic-rel-goma-rbe-canary': 'cros_chrome_sdk_headless_ozone',
      'chromeos-amd64-generic-rel-goma-rbe-latest': 'cros_chrome_sdk_headless_ozone',
      'android-archive-dbg-goma-canary': 'android_without_codecs_debug_bot',
      'android-archive-dbg-goma-latest': 'android_without_codecs_debug_bot',
      'android-archive-dbg-goma-rbe-canary': 'android_without_codecs_debug_bot',
      'android-archive-dbg-goma-rbe-latest': 'android_without_codecs_debug_bot',
      'android-archive-dbg-goma-rbe-ats-latest': 'android_without_codecs_debug_bot',
      'android-archive-dbg-goma-rbe-ats-canary': 'android_without_codecs_debug_bot',
      'ios-device-goma-canary-clobber': 'ios_error',
      'ios-device-goma-latest-clobber': 'ios_error',
      'ios-device-goma-rbe-canary-clobber': 'ios_error',
      'ios-device-goma-rbe-latest-clobber': 'ios_error',

      # TODO(yyanagisawa): deprecate cl.exe.
      'Win cl.exe Goma Canary LocalOutputCache': 'release_bot_x86_minimal_symbols_enable_archive_compression_no_clang',
      'Win cl.exe Goma Latest Client LocalOutputCache': 'release_bot_x86_minimal_symbols_enable_archive_compression_no_clang',
      'WinMSVC64 Goma Canary': 'win_msvc_release_bot',
      'WinMSVC64 Goma Latest Client': 'win_msvc_release_bot',

      'mac-hermetic-upgrade-rel': 'release_bot',

      'fuchsia-fyi-arm64-rel': 'release_bot_fuchsia_arm64',
      'fuchsia-fyi-x64-dbg': 'debug_bot_fuchsia',
      'fuchsia-fyi-x64-rel': 'release_bot_fuchsia',

      'ios-simulator-code-coverage': 'clang_code_coverage_ios',
      'ios-simulator': 'ios_error',
      'Jumbo Linux x64': 'jumbo_large_chunks_release_bot_compile_only',
      'Jumbo Mac': 'jumbo_release_bot_compile_only',
      'Jumbo Win x64': 'jumbo_release_bot_compile_only',
      'Libfuzzer Upload Chrome OS ASan': 'libfuzzer_chromeos_asan_release_bot',
      'Libfuzzer Upload Linux ASan': 'libfuzzer_asan_release_bot',
      'Libfuzzer Upload Linux ASan Debug': 'libfuzzer_asan_debug_bot',
      'Libfuzzer Upload Linux MSan': 'libfuzzer_msan_release_bot',
      'Libfuzzer Upload Linux UBSan': 'libfuzzer_ubsan_release_bot',
      'Libfuzzer Upload Mac ASan': 'libfuzzer_mac_asan_shared_release_bot',
      'Libfuzzer Upload Windows ASan': 'libfuzzer_windows_asan_release_bot',
      'Linux remote_run Builder': 'release_bot',
      'Linux remote_run Tester': 'release_bot',
      'Linux Viz': 'release_trybot',
      'linux-annotator-rel': 'release_bot',
      'linux-autofill-captured-sites-rel': 'release_bot',
      'linux-blink-animation-use-time-delta': 'debug_bot_enable_blink_animation_use_time_delta',
      'linux-blink-heap-concurrent-marking-tsan-rel': 'release_trybot_tsan',
      'linux-blink-heap-verification': 'release_bot_enable_blink_heap_verification_dcheck_always_on',
      'linux-chromium-tests-staging-builder': 'release_bot',
      'linux-code-coverage': 'clang_code_coverage',
      'linux-password-manager-captured-sites-rel': 'release_bot',
      'Mac deterministic': 'release_bot_mac_strip_minimal_symbols_deterministic',
      'Mac deterministic (dbg)': 'debug_bot_deterministic',
      'mac-autofill-captured-sites-rel': 'release_bot',

      'android-mojo-webview-rel': 'android_release_bot_minimal_symbols_arm64',
      'Mojo ChromiumOS': 'chromeos_with_codecs_release_trybot',
      'Mojo Android': 'android_release_bot_minimal_symbols_arm64',
      'Mojo Linux': 'release_trybot',
      'mac-mojo-rel': 'release_trybot',
      'Mojo Windows': 'release_bot_x86_minimal_symbols',

      'Site Isolation Android': 'android_release_bot_minimal_symbols_arm64',
      'VR Linux': 'vr_release_bot',
      'Win 10 Fast Ring': 'release_trybot',
      'win-annotator-rel': 'release_bot',
      'win-autofill-captured-sites-rel': 'release_bot',
      'win-password-manager-captured-sites-rel': 'release_bot',
      'win-pixel-builder-rel': 'release_bot',
      'win32-arm64-rel': 'win32_arm64_release_bot',
      'win10-code-coverage': 'clang_code_coverage_nofuzzer',
    },

    'chromium.goma': {
      'Chromium Linux Goma Staging': 'release_bot',
      'Chromium Mac Goma Staging': 'release_bot',
      'CrWinGomaStaging': 'release_bot_x86_minimal_symbols',
      'Chromium Linux Goma RBE ToT': 'release_bot',
      'Chromium Linux Goma RBE ToT (ATS)': 'release_bot',
      'Chromium Linux Goma RBE Staging (clobber)': 'release_bot',
      'Chromium Linux Goma RBE Staging': 'release_bot',
      'Chromium Linux Goma RBE Staging (dbg) (clobber)': 'debug_bot',
      'Chromium Linux Goma RBE Staging (dbg)': 'debug_bot',
      'Chromium Linux Goma RBE Prod': 'release_bot',
      'Chromium Linux Goma RBE Prod (clobber)': 'release_bot',
      'Chromium Linux Goma RBE Prod (dbg)': 'debug_bot',
      'Chromium Linux Goma RBE Prod (dbg) (clobber)': 'debug_bot',
      'Chromium Mac Goma RBE ToT': 'release_bot',
      'Chromium Mac Goma RBE Staging (clobber)': 'release_bot',
      'Chromium Mac Goma RBE Staging': 'release_bot',
      'Chromium Mac Goma RBE Staging (dbg)': 'debug_bot',
      'Chromium Mac Goma RBE Prod': 'release_bot',

      # Same as CrWinGomaStaging.
      'Chromium Win Goma RBE ToT': 'release_bot_x86_minimal_symbols',
      'Chromium Win Goma RBE Staging': 'release_bot_x86_minimal_symbols',
      'Chromium Win Goma RBE Staging (clobber)': 'release_bot_x86_minimal_symbols',
      'Chromium Win Goma RBE Prod': 'release_bot_x86_minimal_symbols',
      'Chromium Win Goma RBE Prod (clobber)': 'release_bot_x86_minimal_symbols',
      'Chromium Win Goma RBE Prod (dbg)': 'debug_bot_x86',
      'Chromium Win Goma RBE Prod (dbg) (clobber)': 'debug_bot_x86',

      'Chromium Android ARM 32-bit Goma RBE ToT': 'android_release_bot_minimal_symbols',
      'Chromium Android ARM 32-bit Goma RBE ToT (ATS)': 'android_release_bot_minimal_symbols',
      'Chromium Android ARM 32-bit Goma RBE Staging': 'android_release_bot_minimal_symbols',
      'Chromium Android ARM 32-bit Goma RBE Prod': 'android_release_bot_minimal_symbols',
      'Chromium Android ARM 32-bit Goma RBE Prod (clobber)': 'android_release_bot_minimal_symbols',
      'Chromium Android ARM 32-bit Goma RBE Prod (dbg)': 'android_debug_static_bot',
      'Chromium Android ARM 32-bit Goma RBE Prod (dbg) (clobber)': 'android_debug_static_bot',

      # RBE FYI
      'chromeos-amd64-generic-rel (Goma RBE FYI)': 'cros_chrome_sdk_headless_ozone',
      'fuchsia-fyi-arm64-rel (Goma RBE FYI)': 'release_bot_fuchsia_arm64',
      'fuchsia-fyi-x64-rel (Goma RBE FYI)': 'release_bot_fuchsia',
    },

    'chromium.gpu': {
      # These all use the 'trybot' mixins to ensure that dcheck is on.
      'GPU Mac Builder': 'gpu_tests_release_trybot_deterministic_mac',
      'GPU Mac Builder (dbg)': 'gpu_tests_debug_trybot',
      'GPU Linux Builder': 'gpu_tests_release_trybot',
      'GPU Linux Builder (dbg)': 'gpu_tests_debug_trybot',
      'GPU Win x64 Builder': 'gpu_tests_release_trybot_resource_whitelisting',
      'GPU Win x64 Builder (dbg)': 'gpu_tests_debug_trybot',
      'Android Release (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
    },

    'chromium.gpu.fyi': {
      # These all use the 'trybot' mixins to ensure that dcheck is on.
      'ANGLE GPU Android Release (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI dEQP Release (Nexus 5X)': 'deqp_android_release_trybot_arm64',
      'Android FYI Release (Nexus 5)': 'gpu_tests_android_release_trybot',
      'Android FYI Release (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI Release (Nexus 6)': 'gpu_tests_android_release_trybot',
      'Android FYI Release (Nexus 6P)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI Release (Nexus 9)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI Release (NVIDIA Shield TV)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI Release (Pixel 2)': 'gpu_tests_android_release_trybot',
      'Android FYI 32 Vk Release (Pixel 2)': 'gpu_tests_android_vulkan_release_trybot',
      'Android FYI 64 Vk Release (Pixel 2)': 'gpu_tests_android_vulkan_release_trybot_arm64',
      'Android FYI 32 dEQP Vk Release (Pixel 2)': 'deqp_android_vulkan_release_trybot',
      'Android FYI 64 dEQP Vk Release (Pixel 2)': 'deqp_android_vulkan_release_trybot_arm64',
      'Android FYI SkiaRenderer GL (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
      'Android FYI SkiaRenderer Vulkan (Pixel 2)': 'gpu_tests_android_release_trybot',
      'GPU FYI Linux Builder': 'gpu_fyi_tests_release_trybot',
      'GPU FYI Linux Ozone Builder': 'gpu_fyi_tests_ozone_linux_system_gbm_libdrm_release_trybot',
      'GPU FYI Linux Builder (dbg)': 'gpu_fyi_tests_debug_trybot',
      'GPU FYI Linux dEQP Builder': 'deqp_release_trybot',
      'GPU FYI Mac Builder': 'gpu_fyi_tests_release_trybot',
      'GPU FYI Mac Builder (dbg)': 'gpu_fyi_tests_debug_trybot',
      'GPU FYI Mac dEQP Builder': 'deqp_release_trybot',
      'GPU FYI Perf Android 64 Builder': 'gpu_tests_android_vulkan_release_trybot_arm64',
      'GPU FYI Win Builder': 'gpu_fyi_tests_release_trybot_x86',
      'GPU FYI Win Builder (dbg)': 'gpu_fyi_tests_debug_trybot_x86',
      'GPU FYI Win dEQP Builder': 'deqp_release_trybot_x86',
      'GPU FYI Win x64 Builder': 'gpu_fyi_tests_release_trybot',
      'GPU FYI Win x64 Builder (dbg)': 'gpu_fyi_tests_debug_trybot',
      'GPU FYI Win x64 dEQP Builder': 'deqp_release_trybot',
      'GPU FYI XR Win x64 Builder': 'gpu_fyi_tests_release_trybot',
      'Linux FYI GPU TSAN Release': 'gpu_fyi_tests_release_trybot_tsan',
      'Mac FYI GPU ASAN Release': 'gpu_fyi_tests_release_trybot_asan',
      'Optional Android Release (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
    },

    'chromium.infra.codesearch': {
      'codesearch-gen-chromium-android': 'codesearch_gen_chromium_android_bot',
      'codesearch-gen-chromium-chromiumos': 'codesearch_gen_chromium_chromiumos_bot',
      'codesearch-gen-chromium-fuchsia': 'codesearch_gen_chromium_fuchsia_bot',
      'codesearch-gen-chromium-linux': 'codesearch_gen_chromium_bot',
      'codesearch-gen-chromium-win': 'codesearch_gen_chromium_bot',
    },

    'chromium.linux': {
      'Cast Audio Linux': 'cast_audio_release_bot',
      'Cast Linux': 'cast_release_bot',
      'Deterministic Fuchsia (dbg)': 'debug_bot_fuchsia',
      'Deterministic Linux (dbg)': {
        'local': 'debug_bot_local_build',
        'goma': 'debug_bot',
      },
      'Deterministic Linux': 'release_bot_minimal_symbols',
      'Fuchsia ARM64': 'release_bot_fuchsia_arm64',
      'Fuchsia x64': 'release_bot_fuchsia',
      'Leak Detection Linux': 'release_bot',
      'Linux Builder (dbg)': 'gpu_tests_debug_bot',
      'Linux Builder (dbg)(32)': 'gpu_tests_debug_bot_x86',
      'Linux Builder': 'gpu_tests_release_bot',
      'fuchsia-arm64-cast': 'release_bot_fuchsia_arm64_cast',
      'fuchsia-x64-cast': 'release_bot_fuchsia_cast',
      'fuchsia-x64-dbg': 'debug_bot_fuchsia_compile_only',
      'linux-gcc-rel': 'release_bot_x86_minimal_symbols_no_clang_cxx11',
      # linux-jumbo-rel is identical to linux-rel for perf comparisons, except
      # for the jumbo part.
      'linux-jumbo-rel': 'gpu_tests_release_bot_jumbo_no_symbols_use_dummy_lastchange',
      'linux-ozone-rel': 'ozone_linux_release_bot',
      'linux-trusty-rel': 'gpu_tests_release_bot',
    },

    'chromium.lkgr': {
      'ASAN Debug': 'asan_lsan_debug_bot',
      'ASAN Release Media': 'asan_lsan_fuzzer_v8_heap_chromeos_codecs_release_bot',
      'ASAN Release': 'asan_lsan_fuzzer_v8_heap_release_bot',
      'ASan Debug (32-bit x86 with V8-ARM)': 'asan_v8_heap_debug_bot_hybrid',
      'ASan Release (32-bit x86 with V8-ARM)': 'asan_fuzzer_v8_heap_release_bot_hybrid',
      'ASan Release Media (32-bit x86 with V8-ARM)': 'asan_fuzzer_v8_heap_chromeos_codecs_release_bot_hybrid',
      'ChromiumOS ASAN Release': 'chromeos_asan_lsan_fuzzer_v8_heap_release_bot',
      'MSAN Release (chained origins)': 'msan_release_bot',
      'MSAN Release (no origins)': 'msan_no_origins_release_bot',
      'Mac ASAN Release Media': 'asan_disable_nacl_fuzzer_v8_heap_chrome_with_codecs_release_bot',
      'Mac ASAN Release': 'asan_disable_nacl_fuzzer_v8_heap_release_bot',
      'TSAN Debug': 'tsan_disable_nacl_debug_bot',
      'TSAN Release': 'tsan_disable_nacl_release_bot',
      'UBSan Release': 'ubsan_release_bot',
      'UBSan vptr Release': 'ubsan_vptr_release_bot',
      'Win ASan Release Media': 'asan_fuzzer_v8_heap_chrome_with_codecs_release_bot',
      'Win ASan Release': 'asan_fuzzer_v8_heap_release_bot',
    },

    'chromium.mac': {
      'Mac Builder': 'gpu_tests_release_bot_minimal_symbols',
      'Mac Builder (dbg)': 'gpu_tests_debug_bot',
      'mac-jumbo-rel': 'jumbo_large_chunks_release_bot_compile_only',
      'ios-device': 'ios_error',
      'ios-device-xcode-clang': 'ios_error',
      'ios-simulator': 'ios_error',
      'ios-simulator-cronet': 'ios_error',
      'ios-simulator-full-configs': 'ios_error',
      'ios-simulator-xcode-clang': 'ios_error',
      'WebKit Mac10.13 (retina)': 'release_bot',
    },

    'chromium.memory': {
      'Android CFI': 'android_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on_goma',
      'Linux ASan LSan Builder': 'asan_lsan_release_trybot',
      'Linux CFI': 'cfi_full_cfi_icall_cfi_diag_thin_lto_release_static_dcheck_always_on_goma',
      'Linux Chromium OS ASan LSan Builder': 'asan_lsan_chromeos_release_trybot',
      'Linux ChromiumOS MSan Builder': 'chromeos_msan_release_bot',
      'Linux MSan Builder': 'msan_release_bot',
      'Linux TSan Builder': 'tsan_disable_nacl_release_bot',
      'Mac ASan 64 Builder': 'asan_minimal_symbols_disable_nacl_release_bot_dcheck_always_on',
      'WebKit Linux ASAN': 'asan_lsan_release_bot',
      'WebKit Linux Leak': 'release_bot',
      'WebKit Linux MSAN': 'msan_release_bot',
      'android-asan': 'android_clang_asan_release_bot',
      'win-asan': 'asan_clang_fuzzer_static_v8_heap_minimal_symbols_release',
    },

    'chromium.perf': {
      'Android Builder Perf': 'official_goma_minimal_symbols_android',
      'Android arm64 Builder Perf': 'official_goma_minimal_symbols_android_arm64',
      'android_arm64-builder-perf': 'official_goma_minimal_symbols_android_arm64',
      'android-builder-perf': 'official_goma_minimal_symbols_android',
      'linux-builder-perf': 'official_goma_perf',
      'mac-builder-perf': 'official_goma_mac_perf',
      'win32-builder-perf': 'official_goma_x86',
      'win64-builder-perf': 'official_goma',
    },

    'chromium.perf.fyi': {
      'android-cfi-builder-perf-fyi': 'official_goma_minimal_symbols_android_thin_lto_opt',
      'android_arm64-cfi-builder-perf-fyi': 'official_goma_minimal_symbols_android_thin_lto_opt_arm64',
      'chromeos-kevin-builder-perf-fyi': 'official_cros_chrome_sdk',
    },

    'chromium.swarm': {
      'Android N5 Swarm': 'android_release_bot_minimal_symbols',
      'Android N5X Swarm': 'android_release_bot_minimal_symbols_arm64',
      'ChromeOS Swarm': 'cros_chrome_sdk',
      'Linux Swarm': 'release_bot_minimal_symbols',
      'Mac Swarm': 'release_bot_mac_strip_minimal_symbols',
      'Windows Swarm': 'release_bot_minimal_symbols',
    },

    'client.nacl.sdk': {
      'linux-sdk-asan-multi': 'release_bot',
      'linux-sdk-multi': 'release_bot',
      'linux-sdk-multirel': 'release_bot',
      'mac-sdk-multi': 'release_bot',
      'mac-sdk-multirel': 'release_bot',
      'windows-sdk-multi': 'release_bot_x86_minimal_symbols',
      'windows-sdk-multirel': 'release_bot_x86_minimal_symbols',
    },

    'client.devtools-frontend.integration': {
      'DevTools Linux': 'release_bot',
    },

    'client.openscreen.chromium': {
      'chromium_linux64_debug': 'debug_bot',
      'chromium_mac_debug': 'debug_bot',
    },

    'client.v8.chromium': {
      'Linux - Future': 'v8_future_release_bot',
      'Linux - Future (dbg)': 'v8_future_debug_bot',
      'Linux V8 API Stability': 'release_bot',
    },

    'client.v8.fyi': {
      'Android Builder': 'official_goma_minimal_symbols_android',
      'Android V8 FYI Release (Nexus 5X)': 'gpu_tests_android_release_trybot_arm64',
      'Linux ASAN Builder': 'asan_lsan_release_trybot',
      'Linux Debug Builder': 'debug_bot',
      'Linux V8 FYI Release (NVIDIA)': 'gpu_tests_release_trybot',
      'Linux V8 FYI Release - pointer compression (NVIDIA)': 'gpu_tests_release_trybot_ptr_comp',
      'Linux Snapshot Builder': 'release_bot',
      'Mac V8 FYI Release (Intel)': 'gpu_tests_release_trybot',
      'V8 Android GN (dbg)': 'android_debug_bot',
      'V8 Blink Linux': 'release_bot',
      'V8 Blink Linux Debug': 'release_bot_v8_debug',
      'V8 Blink Linux Future': 'release_bot',
      'V8 Blink Linux Layout NG': 'release_bot',
      'V8 Blink Mac': 'release_bot',
      'V8 Blink Win': 'release_bot',
      'V8 Linux GN': 'release_bot',
      'V8-Blink Linux 64': 'release_bot',
      'V8-Blink Linux 64 (dbg)': 'release_bot_v8_debug',
      'V8-Blink Mac': 'release_bot',
      'V8-Blink Win': 'release_bot_x86_minimal_symbols',
      'Win V8 FYI Release (NVIDIA)': 'gpu_tests_release_trybot_x86_resource_whitelisting',
    },

    # TODO(crbug.com/818301): This master is going away.
    'chromium.webkit': {
      'WebKit Linux Trusty ASAN': 'asan_lsan_release_bot',
      'WebKit Linux Trusty Leak': 'release_bot',
      'WebKit Linux Trusty MSAN': 'msan_release_bot',
      'WebKit Mac Builder': 'release_bot',
      'WebKit Mac10.13 (retina)': 'release_bot',
      'WebKit Win Builder': 'release_bot_x86_minimal_symbols',
    },

    'chromium.webrtc': {
      'WebRTC Chromium Android Builder': 'android_debug_static_bot_arm64',
      'WebRTC Chromium Linux Builder': 'gpu_tests_release_bot',
      'WebRTC Chromium Mac Builder': 'gpu_tests_release_bot',
      'WebRTC Chromium Win Builder': 'release_bot_x86_minimal_symbols_no_com_init_hooks_with_codecs',
    },

    'chromium.webrtc.fyi': {
      'WebRTC Chromium FYI Android Builder': 'android_release_bot_minimal_symbols',
      'WebRTC Chromium FYI Android Builder (dbg)': 'android_debug_static_bot',
      'WebRTC Chromium FYI Android Builder ARM64 (dbg)': 'android_debug_static_bot_arm64',
      'WebRTC Chromium FYI Linux Builder': 'gpu_tests_release_bot',
      'WebRTC Chromium FYI Linux Builder (dbg)': 'debug_bot',
      'WebRTC Chromium FYI Mac Builder': 'gpu_tests_release_bot',
      'WebRTC Chromium FYI Mac Builder (dbg)': 'debug_bot',
      'WebRTC Chromium FYI Win Builder': 'release_bot_x86_minimal_symbols_no_com_init_hooks_with_codecs',
      'WebRTC Chromium FYI Win Builder (dbg)': 'debug_bot_x86_no_com_init_hooks_with_codecs',
    },

    'chromium.win': {
      # Windows bots take too long to link w/ full symbols and time out.
      'Win Builder': 'gpu_tests_release_bot_x86_minimal_symbols',
      'Win Builder (dbg)': 'gpu_tests_debug_bot_x86',
      'win-jumbo-rel': 'jumbo_large_chunks_release_bot_compile_only',
      'Win x64 Builder': 'gpu_tests_release_bot_minimal_symbols',
      'Win x64 Builder (dbg)': 'gpu_tests_debug_bot',
      'Windows deterministic': 'release_bot_x86_minimal_symbols',
      'win-celab-builder-rel': 'celab_release_bot',
    },

    'internal.client.kitchensync': {
      'Linux Canary': 'debug_bot',
      'Linux Dev': 'debug_bot',
      'Mac Dev': 'debug_bot',
      'Windows Dev': 'debug_bot',
    },

    # Manually triggered internal builders running on LUCI.
    'luci.infra-internal.prod': {
      'gn-builder-linux': 'gn_linux_upload',
      'gn-builder-mac': 'release_bot',
      'gn-builder-win': 'release_bot_x86_minimal_symbols',
    },

    'tryserver.blink': {
      # Most tryservers should have '_trybot' in their config names, but
      # 'release_trybot' includes 'dcheck_always_on', and the blink
      # release trybots must *not* enable dchecks, because that could
      # cause them to produce different baselines than the release
      # waterfall bots, and run_web_tests.py can't handle that (by design).
      'linux-blink-rel': 'release_bot_minimal_symbols',
      'mac10.10-blink-rel': 'release_bot_minimal_symbols',
      'mac10.11-blink-rel': 'release_bot_minimal_symbols',
      'mac10.12-blink-rel': 'release_bot_minimal_symbols',
      'mac10.13-blink-rel': 'release_bot_minimal_symbols',
      'mac10.13_retina-blink-rel': 'release_bot_minimal_symbols',
      'win7-blink-rel': 'release_bot_x86_minimal_symbols',
      'win10-blink-rel': 'release_bot_x86_minimal_symbols',
    },

    'tryserver.chromium.android': {
      'android-opus-kitkat-arm-rel': 'android_release_trybot',
      # TODO(crbug/597596): Switch this back to debug_trybot when cronet's
      # shared library loading is fixed.
      'android-cronet-arm-dbg': 'android_cronet_debug_static_bot_arm_no_neon',
      'android-kitkat-arm-rel': 'android_release_trybot',
      'android-marshmallow-arm64-coverage-rel': 'gpu_tests_android_release_trybot_arm64_resource_whitelisting_java_coverage',
      'android-marshmallow-arm64-rel': 'gpu_tests_android_release_trybot_arm64_resource_whitelisting',
      'android-marshmallow-x86-fyi-rel': 'android_release_trybot_x86_resource_whitelisting',
      'android-oreo-arm64-cts-networkservice-dbg': 'android_debug_trybot_arm64',
      'android-pie-arm64-rel': 'android_release_trybot_arm64_webview_google',
      'android-webview-pie-arm64-fyi-rel': 'android_release_trybot_arm64_webview_google',
      'android-pie-x86-fyi-rel': 'android_release_trybot_x86',
      'android-webview-marshmallow-arm64-dbg': 'android_release_trybot_arm64_webview_google',
      'android-webview-nougat-arm64-dbg': 'android_release_trybot_arm64_webview_google',
      'android-webview-oreo-arm64-dbg': 'android_release_trybot_arm64_webview_google',
      'android-webview-pie-arm64-dbg': 'android_release_trybot_arm64_webview_google',
      'android_archive_rel_ng': 'android_release_trybot',
      'android_arm64_dbg_recipe': 'android_debug_trybot_compile_only_arm64',
      'android-binary-size': 'android_binary_size',
      'android_blink_rel': 'android_release_trybot',
      'android_cfi_rel_ng': 'android_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on_goma',
      'android_clang_dbg_recipe': 'android_clang_asan_debug_trybot_compile_only',
      'android_compile_dbg': 'android_debug_trybot_compile_only',
      'android_compile_x64_dbg': 'android_debug_trybot_compile_only_x64',
      'android_compile_x86_dbg': 'android_debug_trybot_compile_only_x86',
      'android_coverage': 'android_debug_trybot_java_coverage',
      'android_cronet': 'android_cronet_release_trybot_arm_no_neon',

      'android_cronet_tester': 'android_cronet_debug_static_bot_arm_no_neon',

      'android_mojo': 'android_release_trybot_arm64',
      'android_n5x_swarming_dbg': 'android_debug_trybot_arm64',
      'android_optional_gpu_tests_rel': 'gpu_tests_android_release_trybot_arm64',
      'android_unswarmed_pixel_aosp': 'android_debug_trybot_arm64',
      'android-deterministic-dbg': 'android_debug_trybot',
      'android-deterministic-rel': 'android_without_codecs_release_trybot',
      'cast_shell_android': 'android_cast_debug_static_bot_compile_only',
      'gpu-fyi-try-android-l-nexus-5-32': 'gpu_tests_android_release_trybot',
      'gpu-fyi-try-android-l-nexus-6-32': 'gpu_tests_android_release_trybot',
      'gpu-fyi-try-android-m-nexus-5x-64': 'gpu_tests_android_release_trybot_arm64',
      'gpu-fyi-try-android-m-nexus-5x-deqp-64': 'deqp_android_release_trybot_arm64',
      'gpu-fyi-try-android-m-nexus-5x-skgl-64': 'gpu_tests_android_release_trybot_arm64',
      'gpu-fyi-try-android-m-nexus-6p-64': 'gpu_tests_android_release_trybot_arm64',
      'gpu-fyi-try-android-m-nexus-9-64': 'gpu_tests_android_release_trybot_arm64',
      'gpu-fyi-try-android-n-nvidia-shield-tv-64': 'gpu_tests_android_release_trybot_arm64',
      'gpu-fyi-try-android-p-pixel-2-32': 'gpu_tests_android_release_trybot',
      'gpu-fyi-try-android-p-pixel-2-skv-32': 'gpu_tests_android_release_trybot',
      'gpu-fyi-try-android-q-pixel-2-deqp-vk-32': 'deqp_android_vulkan_release_trybot',
      'gpu-fyi-try-android-q-pixel-2-deqp-vk-64': 'deqp_android_vulkan_release_trybot_arm64',
      'gpu-fyi-try-android-q-pixel-2-vk-32': 'gpu_tests_android_vulkan_release_trybot',
      'gpu-fyi-try-android-q-pixel-2-vk-64': 'gpu_tests_android_vulkan_release_trybot_arm64',
      'gpu-try-android-m-nexus-5x-64': 'gpu_tests_android_release_trybot_arm64',
      'linux_android_dbg_ng': 'android_debug_trybot',
      'try-nougat-phone-tester': 'android_debug_trybot_arm64',
      'android-oreo-arm64-dbg': 'android_debug_trybot_arm64',
      'android-pie-arm64-dbg': 'android_debug_trybot_arm64',
    },

    'tryserver.chromium.angle': {
      'android_angle_rel_ng': 'gpu_tests_android_release_trybot_arm64',
      'android_angle_vk32_rel_ng': 'gpu_tests_android_vulkan_release_trybot',
      'android_angle_vk64_rel_ng': 'gpu_tests_android_vulkan_release_trybot_arm64',
      'android_angle_deqp_rel_ng': 'deqp_android_release_trybot_arm64',
      'android_angle_vk32_deqp_rel_ng': 'deqp_android_vulkan_release_trybot',
      'android_angle_vk64_deqp_rel_ng': 'deqp_android_vulkan_release_trybot_arm64',
      'fuchsia-angle-rel': 'gpu_fyi_tests_release_trybot_fuchsia',
      'linux-angle-rel': 'gpu_fyi_tests_release_trybot',
      'linux_angle_ozone_rel_ng': 'gpu_fyi_tests_ozone_linux_system_gbm_libdrm_release_trybot',
      'linux_angle_deqp_rel_ng': 'deqp_release_trybot',
      'mac-angle-rel': 'gpu_fyi_tests_release_trybot',
      'win-angle-rel-32': 'gpu_fyi_tests_release_trybot_x86',
      'win-angle-rel-64': 'gpu_fyi_tests_release_trybot',
      'win-angle-deqp-rel-32': 'deqp_release_trybot_x86',
      'win-angle-deqp-rel-64': 'deqp_release_trybot',
    },

    'tryserver.chrome': {
      'chromeos-betty-chrome': 'official_cros_chrome_sdk_headless_ozone',
      'chromeos-betty-pi-arc-chrome': 'official_cros_chrome_sdk_headless_ozone',
      'chromeos-eve-chrome': 'official_cros_chrome_sdk_headless_ozone',
      'chromeos-eve-compile-chrome': 'official_cros_chrome_sdk_headless_ozone',
      'chromeos-kevin-chrome': 'official_cros_chrome_sdk_headless_ozone',
      'chromeos-kevin-compile-chrome': 'official_cros_chrome_sdk_headless_ozone',
      'linux-chrome': 'official_goma',
      'linux-chromeos-chrome': 'official_goma_chromeos_minimal_symbols',
      'win_chrome_official': 'official_goma_x86',
      'win-celab-try-rel': 'official_celab_release_bot',
    },

    'tryserver.chromium.chromiumos': {
      # TODO(crbug.com/913750): Enable DCHECKS on the two amd64-generic bots
      # and two kevin bots when the PFQ has it enabled.
      'chromeos-amd64-generic-cfi-thin-lto-rel': 'cros_chrome_sdk_headless_ozone_cfi_thin_lto',
      'chromeos-amd64-generic-dbg': 'cros_chrome_sdk_dbg',
      'chromeos-amd64-generic-rel': 'cros_chrome_sdk_headless_ozone',
      'chromeos-arm-generic-dbg': 'cros_chrome_sdk_dbg',
      'chromeos-arm-generic-rel': 'cros_chrome_sdk_dchecks_always_on',
      'chromeos-kevin-compile-rel': 'cros_chrome_sdk_headless_ozone',
      'chromeos-kevin-experimental-rel': 'cros_chrome_sdk_headless_ozone',
      'chromeos-kevin-rel': 'cros_chrome_sdk_headless_ozone',
      'linux-chromeos-rel': 'chromeos_with_codecs_release_trybot_code_coverage',
      'linux-chromeos-compile-dbg': 'chromeos_with_codecs_debug_bot',
      'linux-chromeos-dbg': 'chromeos_with_codecs_debug_bot',
    },

    'tryserver.chromium.dawn': {
      'dawn-linux-x64-deps-rel': 'dawn_tests_release_trybot',
      'dawn-mac-x64-deps-rel': 'dawn_tests_release_trybot',
      'dawn-win10-x86-deps-rel': 'dawn_tests_release_trybot_x86',
      'dawn-win10-x64-deps-rel': 'dawn_tests_release_trybot',
      'linux-dawn-rel': 'dawn_tests_release_trybot',
      'mac-dawn-rel': 'dawn_tests_release_trybot',
      'win-dawn-rel': 'dawn_tests_release_trybot',
    },

    'tryserver.chromium.linux': {
      'cast_shell_audio_linux': 'cast_audio_release_trybot',
      'cast_shell_linux': 'cast_release_trybot',
      'chromium_presubmit': 'presubmit',
      'closure_compilation': 'closure_compilation',
      'fuchsia_arm64': 'release_trybot_fuchsia_arm64',
      'fuchsia-arm64-cast': 'release_trybot_fuchsia_arm64_cast',
      'fuchsia-compile-x64-dbg': 'debug_trybot_fuchsia_compile_only',
      'fuchsia-fyi-arm64-rel': 'release_trybot_fuchsia_arm64',
      'fuchsia-fyi-x64-dbg': 'debug_trybot_fuchsia',
      'fuchsia-fyi-x64-rel': 'release_trybot_fuchsia',
      'fuchsia_x64': 'release_trybot_fuchsia',
      'fuchsia-x64-cast': 'release_trybot_fuchsia_cast',
      'gpu-fyi-try-linux-intel-dqp': 'deqp_release_trybot',
      'gpu-fyi-try-linux-intel-exp': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-intel-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-intel-skv': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-nvidia-dbg': 'gpu_fyi_tests_debug_trybot',
      'gpu-fyi-try-linux-nvidia-dqp': 'deqp_release_trybot',
      'gpu-fyi-try-linux-nvidia-exp': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-nvidia-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-nvidia-skv': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-linux-nvidia-tsn': 'gpu_fyi_tests_release_trybot_tsan',
      'gpu-try-linux-nvidia-dbg': 'gpu_tests_debug_trybot',
      'gpu-try-linux-nvidia-rel': 'gpu_tests_release_trybot',
      'layout_test_leak_detection': 'release_trybot',
      'leak_detection_linux': 'release_trybot',
      'linux-annotator-rel': 'release_trybot',
      'linux-blink-heap-concurrent-marking-tsan-rel': 'release_trybot_tsan',
      'linux-blink-heap-verification-try': 'release_trybot_enable_blink_heap_verification',
      'linux-clang-tidy-dbg': 'debug_trybot',
      'linux-clang-tidy-rel': 'release_trybot',
      'linux-dcheck-off-rel': 'release_trybot_dcheck_off',
      'linux-gcc-rel': 'release_bot_x86_minimal_symbols_no_clang_cxx11',
      'linux-jumbo-rel': 'jumbo_large_chunks_release_bot_compile_only',
      'linux-libfuzzer-asan-rel': 'libfuzzer_asan_release_trybot',
      'linux-ozone-rel': 'ozone_linux_release_trybot',
      'linux-rel': 'gpu_tests_release_trybot_no_symbols_use_dummy_lastchange_code_coverage',
      'linux-trusty-rel': 'gpu_tests_release_trybot_no_symbols_use_dummy_lastchange',
      'linux-viz-rel': 'release_trybot',
      'linux-webkit-msan-rel': 'msan_release_bot',
      'linux_arm': 'release_trybot_arm',
      'linux_chromium_archive_rel_ng': 'release_bot',
      'linux_chromium_asan_rel_ng': 'asan_lsan_release_trybot',
      'linux_chromium_cfi_rel_ng': 'cfi_full_cfi_icall_cfi_diag_thin_lto_release_static_dcheck_always_on_goma',
      'linux_chromium_chromeos_asan_rel_ng': 'asan_lsan_chromeos_release_trybot',
      'linux_chromium_chromeos_msan_rel_ng': 'chromeos_msan_release_bot',
      'linux_chromium_clobber_deterministic': 'release_trybot',
      'linux_chromium_clobber_rel_ng': 'release_trybot',
      'linux_chromium_compile_dbg_32_ng': 'debug_trybot_x86',
      'linux_chromium_compile_dbg_ng': 'debug_trybot',
      'linux_chromium_compile_rel_ng': 'release_trybot',
      'linux_chromium_dbg_ng': 'gpu_tests_debug_trybot',

      # This is intentionally a release_bot and not a release_trybot;
      # enabling DCHECKs seems to cause flaky failures that don't show up
      # on the continuous builder.
      'linux_chromium_msan_rel_ng': 'msan_release_bot',

      'linux_chromium_tsan_rel_ng': 'tsan_disable_nacl_release_trybot',

      # This is intentionally a release_bot and not a release_trybot to match
      # the CI configuration, where no debug builder exists.
      'linux_chromium_ubsan_rel_ng': 'ubsan_vptr_release_bot',

      'linux_layout_tests_composite_after_paint': 'release_trybot',
      'linux_layout_tests_layout_ng_disabled': 'release_trybot',
      'linux_mojo': 'release_trybot',
      'linux_mojo_chromeos': 'chromeos_with_codecs_release_trybot',
      'linux_optional_gpu_tests_rel': 'gpu_fyi_tests_release_trybot',
      'linux_upload_clang': 'release_bot',
      'linux_vr': 'vr_release_trybot',
    },

    'tryserver.chromium.mac': {
      'gpu-fyi-try-mac-amd-dqp': 'deqp_release_trybot',
      'gpu-fyi-try-mac-amd-pro-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-amd-retina-dbg': 'gpu_fyi_tests_debug_trybot',
      'gpu-fyi-try-mac-amd-retina-exp': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-amd-retina-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-asan': 'gpu_fyi_tests_release_trybot_asan',
      'gpu-fyi-try-mac-intel-dbg': 'gpu_fyi_tests_debug_trybot',
      'gpu-fyi-try-mac-intel-dqp': 'deqp_release_trybot',
      'gpu-fyi-try-mac-intel-exp': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-intel-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-nvidia-retina-dbg': 'gpu_fyi_tests_debug_trybot',
      'gpu-fyi-try-mac-nvidia-retina-exp': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-mac-nvidia-retina-rel': 'gpu_fyi_tests_release_trybot',
      'gpu-try-mac-amd-retina-dbg': 'gpu_tests_debug_trybot',
      'gpu-try-mac-intel-dbg': 'gpu_tests_debug_trybot',
      'ios-device': 'ios_error',
      'ios-device-xcode-clang': 'ios_error',
      'ios-simulator': 'ios_error',
      'ios-simulator-full-configs': 'ios_error',
      'ios-simulator-cronet': 'ios_error',
      'ios-simulator-xcode-clang': 'ios_error',
      'mac-jumbo-rel': 'jumbo_large_chunks_release_bot_compile_only',
      'mac-osxbeta-rel': 'gpu_tests_release_trybot_deterministic_mac',
      'mac_chromium_10.10': 'gpu_tests_release_trybot_deterministic_mac',
      'mac_chromium_10.12_rel_ng': 'gpu_tests_release_trybot_deterministic_mac',
      'mac_chromium_10.13_rel_ng': 'release_trybot',
      'mac_chromium_archive_rel_ng': 'release_bot_mac_strip_minimal_symbols',
      'mac_chromium_asan_rel_ng': 'asan_dcheck_disable_nacl_release_bot',
      'mac_chromium_compile_dbg_ng': 'gpu_tests_debug_trybot',
      'mac_chromium_compile_rel_ng': 'gpu_tests_release_trybot_deterministic_mac',
      'mac_chromium_dbg_ng': 'gpu_tests_debug_trybot',
      'mac_optional_gpu_tests_rel': 'gpu_fyi_tests_release_trybot',
      'mac_upload_clang': 'release_bot',
      'mac-rel': 'gpu_tests_release_trybot_deterministic_mac',
    },

    'tryserver.chromium.perf': {
      'Android Compile Perf': 'official_goma_minimal_symbols_android',
      'Android arm64 Compile Perf': 'official_goma_minimal_symbols_android_arm64',
      'Linux Builder Perf': 'official_goma_perf',
      'Mac Builder Perf': 'official_goma_mac_perf',
      'Win Builder Perf': 'official_goma_x86',
      'Win x64 Builder Perf': 'official_goma',
    },

    'tryserver.chromium.win': {
      'gpu-fyi-try-win-xr-builder-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win7-amd-dbg-32': 'gpu_fyi_tests_debug_trybot_x86',
      'gpu-fyi-try-win7-amd-dqp-32': 'deqp_release_trybot_x86',
      'gpu-fyi-try-win7-amd-rel-32': 'gpu_fyi_tests_release_trybot_x86',
      'gpu-fyi-try-win7-nvidia-dqp-64': 'deqp_release_trybot',
      'gpu-fyi-try-win7-nvidia-rel-32': 'gpu_fyi_tests_release_trybot_x86',
      'gpu-fyi-try-win7-nvidia-rel-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-intel-dqp-64': 'deqp_release_trybot',
      'gpu-fyi-try-win10-intel-exp-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-intel-rel-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-nvidia-dbg-64': 'gpu_fyi_tests_debug_trybot',
      'gpu-fyi-try-win10-nvidia-dqp-64': 'deqp_release_trybot',
      'gpu-fyi-try-win10-nvidia-exp-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-nvidia-rel-32': 'gpu_tests_release_trybot_x86_resource_whitelisting',
      'gpu-fyi-try-win10-nvidia-rel-64': 'gpu_fyi_tests_release_trybot',
      'gpu-fyi-try-win10-nvidia-skgl-64': 'gpu_fyi_tests_release_trybot',
      'win10_chromium_x64_dbg_ng': 'gpu_tests_debug_trybot',
      'win10_chromium_x64_rel_ng': 'gpu_tests_release_trybot_resource_whitelisting',
      'win10_chromium_x64_rel_ng_exp': 'release_trybot',
      'win-annotator-rel': 'release_trybot',
      'win-asan': 'asan_clang_fuzzer_static_v8_heap_minimal_symbols_release',
      'win-celab-try-rel': 'celab_release_bot',
      'win-jumbo-rel': 'jumbo_large_chunks_release_bot_compile_only',
      'win-libfuzzer-asan-rel': 'libfuzzer_windows_asan_release_trybot',
      'win7-rel': 'gpu_tests_release_trybot_x86_resource_whitelisting',
      'win_x64_archive': 'release_trybot',
      'win_archive': 'release_trybot_x86',
      'win_chromium_compile_dbg_ng': 'gpu_tests_debug_trybot_x86_compile_only',
      'win_chromium_compile_rel_ng': 'gpu_tests_release_trybot_x86_resource_whitelisting',
      'win_chromium_dbg_ng': 'gpu_tests_debug_trybot_x86',
      'win_chromium_x64_rel_ng': 'gpu_tests_release_trybot',
      'win_mojo': 'release_trybot_x86',
      'win_optional_gpu_tests_rel': 'gpu_fyi_tests_release_trybot',
      'win_upload_clang': 'release_bot',
    },

    'tryserver.v8': {
      'v8_linux_blink_rel': 'release_trybot',
      'v8_linux_chromium_gn_rel': 'release_trybot',
    },

    'tryserver.webrtc': {
      'win_chromium_compile': 'gpu_tests_release_trybot_resource_whitelisting',
      'mac_chromium_compile': 'gpu_tests_release_trybot',
      'linux_chromium_compile': 'release_trybot',
      'android_chromium_compile': 'android_release_trybot',
    },
  },


  # This is the list of configs that you can pass to mb; each config
  # represents a particular combination of gn args that
  # we must support. A given config *may* be platform-specific but
  # is not necessarily so (i.e., we might have mac, win, and linux
  # bots all using the 'release_bot' config).
  'configs': {
    'afl_asan_shared_release_bot': [
      'afl', 'asan', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl',
      'optimize_for_fuzzing', 'shared_release_bot', 'disable_seed_corpus',
    ],

    'android_binary_size': [
      'android', 'android_config_check', 'chrome_with_codecs', 'goma',
      'minimal_symbols', 'official_optimize', 'stable_channel',
    ],

    'android_cast_debug_static_bot': [
      'android', 'cast', 'clang', 'debug_static_bot',
    ],

    'android_cast_debug_static_bot_compile_only': [
      'android', 'cast', 'clang', 'debug_static_bot', 'compile_only',
    ],

    'android_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on_goma': [
      'android', 'cfi_full', 'cfi_diag', 'thin_lto', 'release', 'static', 'dcheck_always_on', 'goma',
    ],

    'android_clang_asan_debug_bot': [
      'android', 'clang', 'asan', 'debug_bot', 'strip_debug_info',
    ],

    'android_clang_asan_debug_trybot_compile_only': [
      'android', 'clang', 'asan', 'debug_trybot', 'compile_only',
    ],

    'android_clang_asan_release_bot': [
      'android', 'clang', 'asan', 'release_bot', 'strip_debug_info', 'minimal_symbols',
    ],

    'android_clang_tot_asan': [
      'android_without_codecs', 'clang_tot', 'asan', 'shared', 'debug', 'minimal_symbols',
      'strip_debug_info',
    ],

    'android_clang_tot_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on': [
      'android_without_codecs', 'clang_tot', 'cfi_full', 'cfi_diag', 'thin_lto', 'release',
      'static', 'dcheck_always_on',
    ],

    'android_clang_tot_dbg': [
      'android_without_codecs', 'clang_tot', 'shared', 'debug',
    ],

    'android_clang_tot_release_arm64': [
      'android_without_codecs', 'clang_tot', 'release', 'arm64',
    ],

    'android_clang_tot_release_minimal_symbols': [
      'android', 'release', 'static', 'minimal_symbols',
      'strip_debug_info', 'clang_tot',
    ],

    'android_clang_tot_release_minimal_symbols_official_optimize': [
      'android', 'release', 'static', 'minimal_symbols', 'official_optimize',
      'clang_tot',
    ],

    'android_clang_tot_x64': [
      'android_without_codecs', 'clang_tot', 'shared', 'x64', 'release',
      'dcheck_always_on',
    ],

    'android_cronet_debug_static_bot_arm64': [
      'android', 'cronet', 'debug_static_bot', 'arm64',
    ],

    'android_cronet_debug_static_bot_arm_no_neon': [
      'android', 'cronet', 'debug_static_bot', 'arm_no_neon', 'release_java',
    ],

    'android_cronet_debug_static_bot_x86': [
      'android', 'cronet', 'debug_static_bot', 'x86',
    ],

    'android_cronet_debug_static_bot_arm64': [
      'android', 'cronet', 'debug_static_bot', 'arm64',
    ],

    'android_cronet_release_bot_minimal_symbols_arm64': [
      'android', 'cronet', 'official_optimize', 'release_bot', 'minimal_symbols', 'arm64',
      'strip_debug_info',
    ],

    'android_cronet_release_bot_minimal_symbols_arm_no_neon': [
      'android', 'cronet', 'official_optimize', 'release_bot', 'minimal_symbols', 'arm_no_neon',
      'strip_debug_info',
    ],

    'android_cronet_release_bot_minimal_symbols_arm_no_neon_clang_asan': [
      'android', 'cronet', 'release_bot', 'minimal_symbols', 'arm_no_neon', 'clang', 'asan',
      'strip_debug_info',
    ],

    'android_cronet_release_bot_minimal_symbols_x86': [
      'android', 'cronet', 'official_optimize', 'release_bot', 'minimal_symbols', 'x86',
      'strip_debug_info',
    ],

    'android_cronet_release_trybot_arm_no_neon': [
      'android', 'cronet', 'release_trybot', 'arm_no_neon',
    ],

    'android_debug_bot': [
      'android', 'debug_bot',
    ],

    'android_debug_static_bot': [
      'android', 'debug_static_bot',
    ],

    'android_debug_static_bot_arm64': [
      'android', 'debug_static_bot', 'arm64',
    ],

    'android_debug_static_bot_arm64_minimal_symbols_coverage': [
      'android', 'debug_static_bot', 'arm64', 'minimal_symbols', 'java_coverage',
      'strip_debug_info',
    ],

    'android_debug_static_bot_x64': [
      'android', 'debug_static_bot', 'x64',
    ],

    'android_debug_static_bot_x86': [
      'android', 'debug_static_bot', 'x86',
    ],

    'android_debug_trybot': [
      'android', 'debug_trybot',
    ],

    'android_debug_trybot_arm64': [
      'android', 'debug_trybot', 'arm64',
    ],

    'android_debug_trybot_compile_only': [
      'android', 'debug_trybot', 'compile_only',
    ],

    'android_debug_trybot_compile_only_arm64': [
      'android', 'debug_trybot', 'compile_only', 'arm64',
    ],

    'android_debug_trybot_compile_only_x64': [
      'android', 'debug_trybot', 'compile_only', 'x64',
    ],

    'android_debug_trybot_compile_only_x86': [
      'android', 'debug_trybot', 'compile_only', 'x86',
    ],

    'android_debug_trybot_java_coverage': [
      'android', 'debug_trybot', 'java_coverage', 'strip_debug_info',
    ],

    'android_incremental_debug_bot': [
      'android', 'incremental', 'debug_bot',
    ],

    'android_jumbo_release_bot_minimal_symbols': [
      'android', 'jumbo', 'release_bot', 'minimal_symbols',
    ],

    'android_release_bot_minimal_symbols': [
      'android', 'release_bot', 'minimal_symbols',
      'strip_debug_info',
    ],

    'android_release_bot_minimal_symbols_arm64': [
      'android', 'release_bot', 'minimal_symbols', 'arm64',
      'strip_debug_info',
    ],

    'android_release_bot_minimal_symbols_arm64_webview_google': [
      'android', 'release_bot', 'minimal_symbols', 'arm64',
      'strip_debug_info', 'webview_google',
    ],

    'android_release_bot_minimal_symbols_x86': [
      'android', 'release_bot', 'minimal_symbols', 'x86',
      'strip_debug_info',
    ],

    'android_release_bot_minimal_symbols_x86_resource_whitelisting': [
      'android', 'release_bot', 'minimal_symbols', 'x86',
      'resource_whitelisting',
    ],

    'android_release_thumb_bot': [
      'android', 'release_bot', 'arm_thumb',
    ],

    'android_release_trybot': [
      'android', 'release_trybot', 'strip_debug_info',
    ],

    'android_release_trybot_arm64': [
      'android', 'release_trybot', 'arm64', 'strip_debug_info',
    ],

    'android_release_trybot_arm64_webview_google': [
      'android', 'release_trybot', 'arm64', 'strip_debug_info',
      'webview_google',
    ],

    'android_release_trybot_x86': [
      'android', 'release_trybot', 'strip_debug_info', 'x86',
    ],

    'android_release_trybot_x86_resource_whitelisting': [
      'android', 'release_trybot', 'x86', 'resource_whitelisting',
    ],

    'android_webview_google_debug_static_bot': [
      'android', 'debug_static_bot', 'webview_google',
    ],

    'android_webview_google_debug_static_bot_arm64': [
      'android', 'debug_static_bot', 'arm64', 'webview_google',
    ],

    'android_without_codecs_debug_bot': [
      'android_without_codecs', 'debug_bot',
    ],

    'android_without_codecs_release_bot_minimal_symbols': [
      'android_without_codecs', 'release_bot', 'minimal_symbols', 'strip_debug_info',
    ],

    'android_without_codecs_release_trybot': [
      'android_without_codecs', 'release_trybot', 'strip_debug_info',
    ],

    'asan_clang_shared_v8_heap_minimal_symbols_release_tot': [
      'asan', 'clang_tot', 'shared', 'v8_heap', 'minimal_symbols', 'release',
    ],

    'asan_clang_fuzzer_static_v8_heap_minimal_symbols_release': [
      'asan', 'fuzzer', 'static', 'v8_heap', 'minimal_symbols', 'release_bot',
    ],

    'asan_clang_fuzzer_static_v8_heap_minimal_symbols_release_tot': [
      'asan', 'clang_tot', 'fuzzer', 'static', 'v8_heap', 'minimal_symbols', 'release',
    ],

    'asan_dcheck_disable_nacl_release_bot': [
      'asan', 'dcheck_always_on', 'disable_nacl', 'release_bot',
    ],

    'asan_disable_nacl_clang_tot_minimal_symbols_static_release': [
      'asan', 'disable_nacl', 'clang_tot', 'minimal_symbols', 'static', 'release',
    ],

    'asan_disable_nacl_fuzzer_v8_heap_chrome_with_codecs_release_bot': [
      'asan', 'disable_nacl', 'fuzzer', 'v8_heap', 'chrome_with_codecs', 'release_bot',
    ],

    'asan_disable_nacl_fuzzer_v8_heap_release_bot': [
      'asan', 'disable_nacl', 'fuzzer', 'v8_heap', 'release_bot',
    ],

    'asan_fuzzer_v8_heap_chromeos_codecs_release_bot_hybrid': [
      'asan', 'fuzzer', 'v8_heap', 'chromeos_codecs', 'release_bot', 'hybrid',
    ],

    'asan_fuzzer_v8_heap_release_bot_hybrid': [
      'asan', 'fuzzer', 'v8_heap', 'release_bot', 'hybrid',
    ],

    'asan_v8_heap_debug_bot_hybrid': [
      'asan', 'v8_heap', 'debug_bot', 'hybrid',
    ],

    'asan_minimal_symbols_disable_nacl_release_bot_dcheck_always_on': [
      'asan', 'minimal_symbols', 'disable_nacl', 'release_bot', 'dcheck_always_on',
    ],

    'asan_fuzzer_v8_heap_chrome_with_codecs_release_bot': [
      'clang', 'asan', 'fuzzer', 'v8_heap', 'chrome_with_codecs', 'release_bot',
    ],

    'asan_fuzzer_v8_heap_release_bot': [
      'clang', 'asan', 'fuzzer', 'v8_heap', 'release_bot',
    ],

    'asan_lsan_chromeos_release_trybot': [
      'asan', 'lsan', 'chromeos', 'release_trybot',
    ],

    'asan_lsan_debug_bot': [
      'asan', 'lsan', 'debug_bot',
    ],

    'asan_lsan_fuzzer_v8_heap_chromeos_codecs_release_bot': [
      'asan', 'lsan', 'v8_heap', 'chromeos_codecs', 'release_bot',
    ],

    'asan_lsan_fuzzer_v8_heap_release_bot': [
      'asan', 'lsan', 'fuzzer', 'v8_heap', 'release_bot',
    ],

    'asan_lsan_release_bot': [
      'asan', 'lsan', 'release_bot',
    ],

    'asan_lsan_release_trybot': [
      'asan', 'lsan', 'release_trybot',
    ],

    # Cast Linux takes very long in linking, possibly due to being on GCE
    # (crbug/794423).
    'cast_release_bot': [
      'cast', 'cast_exo', 'release_bot', 'minimal_symbols',
    ],

    'cast_release_trybot': [
      'cast', 'cast_exo', 'release_trybot',
    ],

    'cast_audio_release_bot': [
      'cast', 'cast_audio', 'release_bot', 'minimal_symbols',
    ],

    'cast_audio_release_trybot': [
      'cast', 'cast_audio', 'release_trybot',
    ],

    'celab_release_bot': [
      'release_bot', 'minimal_symbols'
    ],

    'cfi_full_cfi_icall_cfi_diag_recover_release_static': [
      'cfi_full', 'cfi_icall', 'cfi_diag', 'cfi_recover', 'thin_lto', 'release', 'static',
    ],

    'cfi_full_cfi_icall_cfi_diag_thin_lto_release_static_dcheck_always_on_goma': [
      'cfi_full', 'cfi_icall', 'cfi_diag', 'thin_lto', 'release', 'static', 'dcheck_always_on', 'goma',
    ],

    'chromeos_asan_lsan_fuzzer_v8_heap_release_bot': [
      'chromeos', 'asan', 'lsan', 'fuzzer', 'v8_heap', 'release_bot',
    ],

    'chromeos_msan_release_bot': [
      'chromeos', 'msan', 'release_bot',
    ],

    'chromeos_with_codecs_debug_bot': [
      'chromeos_with_codecs', 'debug_bot',
    ],

    'chromeos_with_codecs_release_bot': [
      'chromeos_with_codecs', 'release_bot',
    ],

    'chromeos_with_codecs_release_bot_coverage': [
      'chromeos_with_codecs', 'release_bot', 'use_clang_coverage',
    ],

    'chromeos_with_codecs_release_trybot': [
      'chromeos_with_codecs', 'release_trybot', 'no_symbols',
    ],

    # Keep in sync with chromeos_with_codecs_release_trybot.
    'chromeos_with_codecs_release_trybot_code_coverage': [
      'chromeos_with_codecs', 'release_trybot', 'no_symbols',
      'use_clang_coverage', 'partial_code_coverage_instrumentation',
    ],

    'clang_code_coverage': [
      'release_bot', 'clang', 'use_clang_coverage', 'no_symbols', 'libfuzzer',
    ],

    'clang_code_coverage_ios': [
      'use_clang_coverage', 'debug_static_bot', 'x64', 'ios'
    ],

    'clang_code_coverage_nofuzzer': [
      'release_bot', 'clang', 'use_clang_coverage', 'no_symbols',
    ],

    'clang_tot_asan_lsan_static_release': [
      'clang_tot', 'asan', 'lsan', 'static', 'release',
    ],

    'clang_tot_cfi_full_cfi_icall_cfi_diag_thin_lto_release_static_dcheck_always_on': [
      'clang_tot', 'cfi_full', 'cfi_icall', 'cfi_diag', 'thin_lto', 'release', 'static', 'dcheck_always_on',
    ],

    'clang_tot_win_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on': [
      'clang_tot', 'cfi_full', 'cfi_diag', 'thin_lto', 'release', 'static',
      'dcheck_always_on', 'win_linker_timing',
    ],

    'clang_tot_win_cfi_full_cfi_diag_thin_lto_release_static_dcheck_always_on_x86': [
      'clang_tot', 'cfi_full', 'cfi_diag', 'thin_lto', 'release', 'static',
      'dcheck_always_on', 'x86', 'win_linker_timing',
    ],

    'clang_tot_ubsan_no_recover_hack_static_release': [
      'clang_tot', 'ubsan_no_recover_hack', 'static', 'release',
    ],

    'clang_tot_linux_full_symbols_shared_release': [
      # Enable debug info, as on official builders, to catch issues with
      # optimized debug info.
      'clang_tot', 'full_symbols', 'shared', 'release',
    ],

    'clang_tot_official': [
      'clang_tot', 'official',
    ],

    'clang_tot_msan_release': [
      'clang_tot', 'msan', 'release',
    ],

    'clang_tot_minimal_symbols_shared_release': [
      'clang_tot', 'minimal_symbols', 'shared', 'release',
    ],

    'clang_tot_coverage_minimal_symbols_release_with_libfuzzer': [
      'clang_tot', 'use_clang_coverage', 'minimal_symbols', 'release', 'libfuzzer',
    ],

    'clang_tot_coverage_minimal_symbols_release': [
      'clang_tot', 'use_clang_coverage', 'minimal_symbols', 'release',
    ],

    'clang_tot_shared_release_dcheck': [
      'clang_tot', 'shared', 'release', 'dcheck_always_on',
    ],

    'clang_tot_minimal_symbols_shared_release_x86_dcheck': [
      'clang_tot', 'minimal_symbols', 'shared', 'release', 'x86', 'dcheck_always_on',
    ],

    'clang_tot_win_official_full_symbols_thin_lto_static_x86': [
      'clang_tot', 'official', 'full_symbols', 'link_jobs_32', 'thin_lto', 'static', 'x86', 'win_linker_timing',
    ],

    'clang_tot_win_official_full_symbols_thin_lto_static': [
      'clang_tot', 'official', 'full_symbols', 'link_jobs_32', 'thin_lto', 'static', 'win_linker_timing',
    ],

    'clang_tot_official_minimal_symbols_static_release': [
      'clang_tot', 'official', 'minimal_symbols', 'static', 'release',
    ],

    'clang_tot_official_minimal_symbols_static_release_x86': [
      'clang_tot', 'official', 'minimal_symbols', 'static', 'release', 'x86',
    ],

    'clang_tot_official_optimize_minimal_symbols_static_release_libcxx': [
      'clang_tot', 'official_optimize', 'minimal_symbols', 'static', 'release', 'libcxx',
    ],

    'clang_tot_release_minimal_symbols_thin_lto_static': [
      'clang_tot', 'release', 'minimal_symbols', 'thin_lto', 'static',
    ],

    'clang_tot_shared_debug': [
      'clang_tot', 'shared', 'debug',
    ],

    'clang_tot_shared_debug_x86': [
      'clang_tot', 'shared', 'debug', 'x86',
    ],

    'clang_tot_tsan_release': [
      'clang_tot', 'tsan', 'release',
    ],

    'closure_compilation': [
      # The closure bots run their own recipe and shouldn't go through MB.
      'error',
    ],

    'codesearch_gen_chromium_android_bot': [
      'codesearch', 'android_without_codecs',
    ],

    'codesearch_gen_chromium_chromiumos_bot': [
      'codesearch', 'chromeos',
    ],

    'codesearch_gen_chromium_fuchsia_bot': [
      'codesearch_release', 'fuchsia',
    ],

    'codesearch_gen_chromium_bot': [
      'codesearch',
    ],

    # The 'cros_chrome_sdk_* configs are placeholders that indicate
    # that the GN args are set by the `cros chrome-sdk`
    # wrapper and need to be looked at specially.
    'cros_chrome_sdk': [
      'cros_chrome_sdk',
    ],

    'cros_chrome_sdk_asan': [
      'cros_chrome_sdk', 'asan',
    ],

    'cros_chrome_sdk_dbg': [
      'cros_chrome_sdk', 'debug',
    ],

    'cros_chrome_sdk_dchecks_always_on': [
      'cros_chrome_sdk', 'dcheck_always_on',
    ],

    'cros_chrome_sdk_headless_ozone': [
      'cros_chrome_sdk', 'ozone_platform_headless',
    ],

    'cros_chrome_sdk_headless_ozone_coverage': [
      'cros_chrome_sdk', 'ozone_platform_headless', 'use_clang_coverage',
    ],

    'cros_chrome_sdk_headless_ozone_cfi_thin_lto': [
      'cros_chrome_sdk', 'ozone_platform_headless', 'cfi_full', 'thin_lto',
    ],

    'cros_chrome_sdk_headless_ozone_dcheck_always_on': [
      'cros_chrome_sdk', 'ozone_platform_headless', 'dcheck_always_on',
    ],

    'dawn_tests_release_trybot': [
      'dawn_tests', 'release_trybot',
    ],

    'dawn_tests_release_trybot_x86': [
      'dawn_tests', 'release_trybot', 'x86',
    ],

    'debug_bot': [
      'debug_bot',
    ],

    'debug_bot_deterministic': [
      'debug_bot', 'mac_deterministic_build',
    ],

    'debug_bot_local_build': [
      'debug_bot_local_build',
    ],

    'debug_bot_enable_blink_animation_use_time_delta': [
      'debug_bot', 'enable_blink_animation_use_time_delta',
    ],

    'debug_bot_fuchsia': [
      'debug_bot', 'fuchsia',
    ],

    'debug_bot_fuchsia_compile_only': [
      'debug_bot', 'fuchsia', 'compile_only',
    ],

    'debug_bot_x86': [
      'debug_bot', 'x86',
    ],

    'debug_bot_x86_no_com_init_hooks_with_codecs': [
      'debug_bot', 'x86', 'no_com_init_hooks', 'chrome_with_codecs'
    ],

    'libfuzzer_asan_debug_bot_v8_arm64': [
      'libfuzzer', 'asan', 'debug_bot', 'shared', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'v8_simulate_arm64', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_debug_bot_x86': [
      'libfuzzer', 'asan', 'debug_bot', 'shared', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'x86', 'x86_host',  'disable_seed_corpus',
    ],

    'libfuzzer_asan_debug_bot_x86_v8_arm': [
      'libfuzzer', 'asan', 'debug_bot', 'shared', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'x86_host', 'v8_simulate_arm',  'disable_seed_corpus',
    ],

    'debug_trybot': [
      'debug_trybot',
    ],

    'debug_trybot_fuchsia': [
      'debug_trybot', 'fuchsia',
    ],

    'debug_trybot_fuchsia_compile_only': [
      'debug_trybot', 'fuchsia', 'compile_only',
    ],

    'debug_trybot_x86': [
      'debug_trybot', 'x86',
    ],

    'deqp_android_release_trybot_arm64': [
      'angle_deqp_tests', 'android', 'release_trybot', 'arm64',
    ],

    'deqp_android_vulkan_release_trybot': [
      'angle_deqp_tests', 'android', 'vulkan', 'release_trybot',
    ],

    'deqp_android_vulkan_release_trybot_arm64': [
      'angle_deqp_tests', 'android', 'vulkan', 'release_trybot', 'arm64',
    ],

    'deqp_release_trybot_x86': [
      'angle_deqp_tests', 'release_trybot', 'x86',
    ],

    'deqp_release_trybot': [
      'angle_deqp_tests', 'release_trybot',
    ],

    'gpu_fyi_tests_debug_trybot': [
      'gpu_fyi_tests', 'debug_trybot',
    ],

    'gpu_fyi_tests_debug_trybot_x86': [
      'gpu_fyi_tests', 'debug_trybot', 'x86',
    ],

    'gpu_fyi_tests_ozone_linux_system_gbm_libdrm_release_trybot': [
      'gpu_fyi_tests', 'ozone_linux', 'system_gbm_libdrm', 'release_trybot',
    ],

    'gpu_fyi_tests_release_trybot': [
      'gpu_fyi_tests', 'release_trybot',
    ],

    'gpu_fyi_tests_release_trybot_asan': [
      'gpu_fyi_tests', 'release_trybot', 'asan', 'disable_nacl',
    ],

    'gpu_fyi_tests_release_trybot_tsan': [
      'gpu_fyi_tests', 'release_trybot', 'tsan', 'disable_nacl',
    ],

    'gpu_fyi_tests_release_trybot_x86': [
      'gpu_fyi_tests', 'release_trybot', 'x86',
    ],

    'gpu_fyi_tests_release_trybot_fuchsia': [
      'gpu_fyi_tests', 'release_trybot', 'fuchsia',
    ],

    'gpu_tests_android_release_bot_minimal_symbols_arm64': [
      'android', 'release_bot', 'minimal_symbols', 'arm64',
      'resource_whitelisting', 'static_angle',
    ],

    'gpu_tests_android_release_trybot': [
      'gpu_tests', 'android', 'release_trybot', 'static_angle',
    ],

    'gpu_tests_android_release_trybot_arm64': [
      'gpu_tests', 'android', 'release_trybot', 'arm64', 'static_angle',
    ],

    'gpu_tests_android_release_trybot_arm64_resource_whitelisting': [
      'android', 'release_trybot', 'arm64', 'static_angle', 'resource_whitelisting',
    ],

    'gpu_tests_android_release_trybot_arm64_resource_whitelisting_java_coverage': [
      'android', 'release_trybot', 'arm64', 'static_angle', 'resource_whitelisting',
      'java_coverage', 'partial_code_coverage_instrumentation',
    ],

    'gpu_tests_android_vulkan_release_trybot': [
      'gpu_tests', 'android', 'vulkan', 'release_trybot', 'static_angle',
    ],

    'gpu_tests_android_vulkan_release_trybot_arm64': [
      'gpu_tests', 'android', 'vulkan', 'release_trybot', 'arm64', 'static_angle',
    ],

    'gpu_tests_debug_bot': [
      'gpu_tests', 'debug_bot',
    ],

    'gpu_tests_debug_bot_x86': [
      'gpu_tests', 'debug_bot', 'x86',
    ],

    'gpu_tests_debug_trybot': [
      'gpu_tests', 'debug_trybot',
    ],

    'gpu_tests_debug_trybot_x86': [
      'gpu_tests', 'debug_trybot', 'x86',
    ],

    'gpu_tests_debug_trybot_x86_compile_only': [
      'gpu_tests', 'debug_trybot', 'x86', 'compile_only',
    ],

    'gpu_tests_release_bot_minimal_symbols': [
      'gpu_tests', 'release_bot', 'minimal_symbols',
    ],

    'gpu_tests_release_bot_x86_minimal_symbols': [
      'gpu_tests', 'release_bot', 'x86', 'minimal_symbols',
    ],

    'gpu_tests_release_trybot': [
      'gpu_tests', 'release_trybot',
    ],

    # TODO(https://crbug.com/330262): Once deterministic builds are default on
    # macOS, remove this special case of gpu_tests_release_trybot.
    'gpu_tests_release_trybot_deterministic_mac': [
      'gpu_tests', 'release_trybot', 'mac_deterministic_build',
    ],

    'gpu_tests_release_trybot_resource_whitelisting': [
      'gpu_tests', 'release_trybot', 'resource_whitelisting',
    ],

    'gpu_tests_release_trybot_no_symbols_use_dummy_lastchange': [
      'gpu_tests', 'release_trybot', 'no_symbols', 'use_dummy_lastchange',
    ],

    # Keep in sync with
    # gpu_tests_release_trybot_no_symbols_use_dummy_lastchange.
    'gpu_tests_release_trybot_no_symbols_use_dummy_lastchange_code_coverage': [
      'gpu_tests', 'release_trybot', 'no_symbols', 'use_dummy_lastchange',
      'use_clang_coverage', 'partial_code_coverage_instrumentation',
    ],

    'gpu_tests_release_bot_jumbo_no_symbols_use_dummy_lastchange': [
      'gpu_tests', 'release_bot', 'jumbo_non_goma_chunks', 'no_symbols',
      'use_dummy_lastchange',
    ],

    'gpu_tests_release_trybot': [
      'gpu_tests', 'release_trybot',
    ],

    'gpu_tests_release_trybot_ptr_comp': [
      'gpu_tests', 'release_trybot', 'v8_pointer_compression',
    ],

    'gpu_tests_release_trybot_x86_resource_whitelisting': [
      'gpu_tests', 'release_trybot', 'x86', 'resource_whitelisting',
    ],

    'gpu_tests_release_bot': [
      'gpu_tests', 'release_bot',
    ],

    'gn_linux_upload': [
      'gn_linux_upload', 'official', 'goma',
    ],

    # The 'ios_error' config is just used for auditing. iOS bots
    # actually use the ios recipes, not the chromium recipe, and look
    # up their GN arguments via files checked in under //ios/build/bots.
    # It is an error to actually use one of these configs to generate the
    # build files.
    'ios_error': [ 'error'],

    'jumbo_release_bot_compile_only': [
      'jumbo', 'release_bot', 'compile_only',
    ],

    'jumbo_large_chunks_release_bot_compile_only': [
      'jumbo_non_goma_chunks', 'release_bot', 'compile_only',
    ],

    'libfuzzer_asan_debug_bot': [
      'libfuzzer', 'asan', 'debug_bot', 'shared', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'disable_seed_corpus',
    ],

    'libfuzzer_chromeos_asan_release_bot': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chromeos_with_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_release_bot': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing',
    ],

    'libfuzzer_asan_release_bot_v8_arm64': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'v8_simulate_arm64', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_release_bot_x86': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'x86', 'x86_host', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_release_bot_x86_v8_arm': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'x86_host', 'v8_simulate_arm', 'disable_seed_corpus',
    ],

    'libfuzzer_asan_release_trybot': [
      'libfuzzer', 'asan', 'shared_release_trybot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing',
    ],

    'libfuzzer_asan_clang_tot_release': [
      'libfuzzer', 'asan', 'clang_tot', 'release', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl',
    ],

    'libfuzzer_msan_release_bot': [
      'libfuzzer', 'msan', 'shared_release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'disable_seed_corpus',
    ],

    'libfuzzer_ubsan_release_bot': [
      'libfuzzer', 'ubsan_security', 'release_bot', 'chromeos_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing', 'disable_seed_corpus',
    ],

    'libfuzzer_mac_asan_shared_release_bot': [
      'libfuzzer', 'asan', 'shared_release_bot', 'chrome_with_codecs', 'pdf_xfa', 'disable_nacl', 'optimize_for_fuzzing',
    ],

    # Note that because of optimize_for_fuzzing, Windows cannot share a config
    # with other libFuzzer builds. optimize_for_fuzzing is used by the other
    # libFuzzer build configs but it does not work on Windows.
    'libfuzzer_windows_asan_release_bot': [
      'libfuzzer', 'asan', 'release_bot', 'chrome_with_codecs', 'pdf_xfa', 'disable_nacl', 'minimal_symbols',
    ],

    'libfuzzer_windows_asan_clang_tot_release_bot': [
      'libfuzzer', 'asan', 'clang_tot', 'release', 'chrome_with_codecs', 'pdf_xfa', 'disable_nacl', 'minimal_symbols',
    ],

    'libfuzzer_windows_asan_release_trybot': [
      'libfuzzer', 'asan', 'release_trybot', 'chrome_with_codecs', 'pdf_xfa', 'disable_nacl',
    ],

    'msan_release_bot': [
      'msan', 'release_bot',
    ],

    'msan_no_origins_release_bot': [
      'msan_no_origins', 'release_bot',
    ],

    'msan_release_bot': [
      'msan', 'release_bot',
    ],

    'official_celab_release_bot': [
      'official', 'release_bot', 'minimal_symbols',
    ],

    # The cros chrome-sdk takes care of adding needed official/branding args
    # when using the sdk with '--internal'. So use the base cros_chrome_sdk
    # config here, but make sure the '--internal' argument is passed to the
    # SDK when entering it.
    'official_cros_chrome_sdk': [
      'cros_chrome_sdk',
    ],
    'official_cros_chrome_sdk_headless_ozone': [
      'cros_chrome_sdk', 'ozone_platform_headless',
    ],

    'official_goma': [
      'official', 'goma',
    ],

    'official_goma_mac_perf': [
      'official', 'goma', 'no_keystone_registration_framework',
    ],

    'official_goma_perf': [
      'official', 'goma', 'no_gnome_keyring',
    ],

    'official_goma_chromeos_minimal_symbols': [
      'official', 'goma', 'chromeos', 'minimal_symbols',
    ],

    'official_goma_minimal_symbols_android': [
      'official', 'goma', 'minimal_symbols', 'android',
    ],

    'official_goma_minimal_symbols_android_arm64': [
      'official', 'goma', 'minimal_symbols', 'android', 'arm64',
    ],

    'official_goma_minimal_symbols_android_thin_lto_opt': [
      'official', 'goma', 'minimal_symbols', 'android', 'thin_lto_opt',
    ],

    'official_goma_minimal_symbols_android_thin_lto_opt_arm64': [
      'official', 'goma', 'minimal_symbols', 'android', 'thin_lto_opt', 'arm64',
    ],

    'official_goma_x86': [
      'official', 'goma', 'x86',
    ],

    'ozone_linux_release_bot': [
      'ozone_linux', 'release_bot',
    ],

    'ozone_linux_release_trybot': [
      'ozone_linux', 'release_trybot',
    ],

    'presubmit': [
      # The chromium_presubmit bot does not use mb.
      'error',
    ],

    'release_bot': [
      'release_bot',
    ],

    'release_bot_enable_blink_heap_verification_dcheck_always_on': [
      'release_bot', 'enable_blink_heap_verification', 'dcheck_always_on',
    ],

    'release_bot_fuchsia': [
      'release_bot', 'fuchsia',
    ],

    'release_bot_fuchsia_cast': [
      'release_bot', 'fuchsia', 'cast', 'cast', 'no_symbols',
    ],

    'release_bot_fuchsia_arm64': [
      'release_bot', 'fuchsia', 'arm64',
    ],

    'release_bot_fuchsia_arm64_cast': [
      'release_bot', 'fuchsia', 'arm64', 'cast', 'no_symbols',
    ],

    'release_bot_mac_strip_minimal_symbols': [
      'release_bot', 'mac_strip', 'minimal_symbols',
    ],

    'release_bot_mac_strip_minimal_symbols_deterministic': [
      'release_bot', 'mac_strip', 'minimal_symbols', 'mac_deterministic_build'
    ],

    'release_bot_v8_debug': [
      'release_bot', 'v8_enable_debugging_features',
    ],

    'release_bot_x86': [
      'release_bot', 'x86',
    ],

    # compiler.gni implicitly sets symbol_level=1 on Windows if goma is enabled,
    # if MSVC is used.  Explicitly set it here so that it's set consistently for
    # both MSVC and clang.
    'release_bot_minimal_symbols': [
      'release_bot', 'minimal_symbols',
    ],

    'release_bot_x86_minimal_symbols': [
      'release_bot', 'x86', 'minimal_symbols',
    ],

    'release_bot_minimal_symbols_enable_archive_compression': [
      'release_bot', 'minimal_symbols', 'enable_archive_compression'
    ],

    'release_bot_x86_minimal_symbols_enable_archive_compression': [
      'release_bot', 'x86', 'minimal_symbols', 'enable_archive_compression'
    ],

    'release_bot_x86_minimal_symbols_enable_archive_compression_no_clang': [
      'no_clang',
      'release_bot', 'x86', 'minimal_symbols', 'enable_archive_compression',
    ],

    'release_bot_x86_minimal_symbols_no_com_init_hooks_with_codecs': [
      'release_bot', 'x86', 'minimal_symbols', 'no_com_init_hooks', 'chrome_with_codecs'
    ],

    'release_trybot': [
      'release_trybot',
    ],

    'release_trybot_dcheck_off': [
      'release_trybot', 'dcheck_off',
    ],

    'release_trybot_arm': [
      'release_trybot', 'arm',
    ],

    'release_trybot_enable_blink_heap_verification': [
      'release_trybot', 'enable_blink_heap_verification',
    ],

    'release_trybot_fuchsia': [
      'release_trybot', 'fuchsia',
    ],

    'release_trybot_fuchsia_cast': [
      'release_trybot', 'fuchsia', 'cast',
    ],

    'release_trybot_fuchsia_arm64': [
      'release_trybot', 'fuchsia', 'arm64',
    ],

    'release_trybot_fuchsia_arm64_cast': [
      'release_trybot', 'fuchsia', 'arm64', 'cast',
    ],

    'release_trybot_tsan': [
      'release_trybot', 'tsan'
    ],

    'release_trybot_x86': [
      'release_trybot', 'x86',
    ],

    'release_bot_x86_minimal_symbols_no_clang_cxx11': [
      'release_bot', 'x86', 'minimal_symbols', 'no_clang', 'use_cxx11',
    ],

    'tsan_disable_nacl_debug_bot': [
      'tsan', 'disable_nacl', 'debug_bot',
    ],

    'tsan_disable_nacl_release_bot': [
      'tsan', 'disable_nacl', 'release_bot',
    ],

    'tsan_disable_nacl_release_trybot': [
      'tsan', 'disable_nacl', 'release_trybot',
    ],

    'ubsan_release_bot': [
      'ubsan', 'release_bot',
    ],

    'ubsan_vptr_release_bot': [
      'ubsan_vptr', 'release_bot',
    ],

    'ubsan_vptr_release_bot': [
      'ubsan_vptr', 'ubsan_no_recover_hack', 'release_bot',
    ],

    'v8_future_debug_bot': [
      'v8_future', 'debug_bot',
    ],

    'v8_future_release_bot': [
      'v8_future', 'release_bot',
    ],

    'vr_release_bot': [
      'vr', 'release_bot', 'ozone',
    ],

    'vr_release_trybot': [
      'vr', 'release_trybot', 'ozone',
    ],

    'win_msvc_release_bot': [
      'no_clang', 'release_bot',
    ],

    'win32_arm64_release_bot': [
      'arm64', 'disable_nacl', 'minimal_symbols', 'release_bot',
    ],

    'clang_tot_win_release_cross': [
      'clang_tot', 'win_cross', 'minimal_symbols', 'shared', 'release', 'dcheck_always_on',
    ],
  },

  # This is a dict mapping a given 'mixin' name to a dict of settings that
  # mb should use. See //tools/mb/docs/user_guide.md for more information.
  'mixins': {
    'afl': { 'gn_args': 'use_afl=true' },

    # We build Android with codecs on most bots to ensure maximum test
    # coverage, but use 'android_without_codecs' on bots responsible for
    # building publicly advertised non-Official Android builds --
    # which are not allowed to have proprietary codecs enabled.
    'android': {
      'mixins': ['android_without_codecs', 'chrome_with_codecs'],
    },

    'android_config_check': {
      'gn_args': 'check_android_configuration = true'
    },

    'android_without_codecs': {
      'gn_args': 'target_os="android"',
    },

    'angle_deqp_tests': {
      'gn_args': 'build_angle_deqp_tests=true',
    },

    'arm': {
      'gn_args': 'target_cpu="arm"',
    },

    'arm64': {
      'gn_args': 'target_cpu="arm64"',
    },

    'arm_no_neon': {
      'mixins': ['arm'],
      'gn_args': 'arm_use_neon=false',
    },

    'arm_thumb': {
      'gn_args': 'arm_use_thumb=true',
    },

    'asan': {
      'gn_args': 'is_asan=true',
    },

    'ffmpeg_branding_chrome': {
      'gn_args': 'ffmpeg_branding="Chrome"',
    },

    'ffmpeg_branding_chromeos': {
      'gn_args': 'ffmpeg_branding="ChromeOS"',
    },

    'cast': {
      'gn_args': 'is_chromecast=true'
    },

    'cast_audio': {
      'gn_args': 'is_cast_audio_only=true'
    },

    'cast_exo': {
      'gn_args': 'enable_cast_wayland_server=true',
    },

    'cfi': {
      'gn_args': 'is_cfi=true',
    },

    'cfi_full': {
      'mixins': ['cfi'],
      'gn_args': 'use_cfi_cast=true',
    },

    'cfi_icall': {
      'gn_args': 'use_cfi_icall=true',
    },

    'cfi_diag': {
      'gn_args': 'use_cfi_diag=true',
    },

    'cfi_recover': {
      'gn_args': 'use_cfi_recover=true',
    },

    'chrome_with_codecs': {
      'mixins': ['ffmpeg_branding_chrome', 'proprietary_codecs'],
    },

    'chromeos': {
      'gn_args': 'target_os="chromeos"',
    },

    'chromeos_codecs': {
      'mixins': ['ffmpeg_branding_chromeos', 'proprietary_codecs'],
    },

    'chromeos_with_codecs': {
      'mixins': ['chromeos', 'chromeos_codecs'],
    },

    'clang_tot': {
      'gn_args': 'llvm_force_head_revision=true',
      'mixins': ['clang'],
    },

    'clang': {
      'gn_args': 'is_clang=true',
    },

    'no_clang': {
      'gn_args': 'is_clang=false',
    },

    'use_clang_coverage': {
      'gn_args': 'use_clang_coverage=true',
    },

    'use_cxx11': {
      'gn_args': 'use_cxx11=true',
    },

    # Settings used by the codesearch builders to generate cross-references.
    'codesearch': {
      'gn_args': 'clang_use_chrome_plugins=false enable_kythe_annotations=true',
      'mixins': ['goma', 'clang', 'shared', 'debug', 'minimal_symbols'],
    },
    'codesearch_release': {
      'gn_args': 'clang_use_chrome_plugins=false enable_kythe_annotations=true',
      'mixins': ['release', 'static', 'goma'],
    },

    'compile_only': {
      'mixins': ['no_symbols'],
    },

    'cronet': {
      'gn_args': ('disable_file_support=true disable_ftp_support=true '
                  'enable_websockets=false use_platform_icu_alternatives=true '
                  'use_partition_alloc=false enable_reporting=true '
                  'include_transport_security_state_preload_list=false '
                  'use_crash_key_stubs=true use_hashed_jni_names=true '
                  'clang_use_default_sample_profile=false '
                  'enable_resource_whitelist_generation=false'),
    },

    'cros_chrome_sdk': {
      # This is used so that the cros chrome_sdk (simplechrome) builders
      # can manage the list of GN args in their .ebuild
      # files and just pass through the desired arguments, hence not
      # really using MB. If a bot uses this mixin, we expect that
      # both GYP_DEFINES and GN_ARGS are set in the environment,
      # and that GYP_DEFINES has chromeos=1 and GN_ARGS has
      # target_os="chromeos" in it.
      'cros_passthrough': True,
    },

    'dawn_tests': {
      'gn_args': 'use_dawn=true',
    },

    'dcheck_always_on': {
      'gn_args': 'dcheck_always_on=true',
    },

    'dcheck_off': {
      'gn_args': 'dcheck_always_on=false',
    },

    'debug': {
      'gn_args': 'is_debug=true',
    },

    'debug_bot': {
      'mixins': ['debug', 'shared', 'goma', 'minimal_symbols'],
    },

    'debug_bot_local_build': {
      'mixins': ['debug', 'shared', 'minimal_symbols'],
    },

    'debug_static_bot': {
      'mixins': ['debug', 'static', 'minimal_symbols', 'goma'],
    },

    'debug_trybot': {
      'mixins': ['debug_bot'],
    },

    'disable_nacl': {
      'gn_args': 'enable_nacl=false',
    },

    'disable_seed_corpus': {
      'gn_args': 'archive_seed_corpus=false',
    },

    'enable_blink_animation_use_time_delta': {
      'gn_args': 'blink_animation_use_time_delta=true',
    },

    'enable_blink_heap_verification': {
      'gn_args': 'enable_blink_heap_verification=true',
    },

    # This config enable compression on main waterfall win builder to reduce the
    # size of chrome installer which are downloaded by bysecting script many
    # times.
    'enable_archive_compression': {
      'gn_args': 'skip_archive_compression=false',
    },

    # This mixin is used to force configs that use it to fail. It
    # is used in two cases: when we have bots that we haven't looked
    # at yet and don't know whether they need MB or not, and for bots
    # that are test-only and should never run MB.
    'error': {
      'gn_args': 'error',
    },

    'ffmpeg_branding_chromeos': {
      'gn_args': 'ffmpeg_branding="ChromeOS"',
    },

    'fuchsia': {
      'gn_args': 'target_os="fuchsia"',
    },

    'full_symbols': {
      'gn_args': 'symbol_level=2',
    },

    'fuzzer': {
      'gn_args': 'enable_ipc_fuzzer=true',
    },

    'gn_linux_upload': {
      # We don't want to require a runtime dependency on glib in the
      # GN binary; ideally we could just turn glib off, but that doesn't
      # actually work, so we need to pretend to be doing an ozone build
      # in order for the flag to actually take effect.
      'gn_args': 'use_ozone=true',
    },

    'goma': {
      # strip_absolute_paths_from_debug_symbols is on by default on Linux and
      # Windows, but not elsewhere. Since it helps goma's cache, set this to
      # help Android builds.
      'gn_args': 'use_goma=true strip_absolute_paths_from_debug_symbols=true',
    },

    'gpu_fyi_tests': {
      'mixins': ['gpu_tests', 'internal_gles_conform_tests'],
    },

    'gpu_tests': {
      'mixins': ['chrome_with_codecs'],
    },

    'hybrid': {
      'gn_args': 'v8_target_cpu="arm" target_cpu="x86"',
      'mixins': ['disable_nacl'],
    },

    'incremental': {
      'gn_args': 'disable_incremental_isolated_processes=true incremental_apk_by_default=true',
    },

    'internal_gles_conform_tests': {
      'gn_args': 'internal_gles2_conform_tests=true build_angle_gles1_conform_tests=true',
    },

    'ios': {
      'gn_args': 'target_os="ios"',
    },

    'java_coverage': {
      'gn_args': 'use_jacoco_coverage=true',
    },

    'jumbo': {
      'gn_args': 'use_jumbo_build=true',
    },

    'jumbo_non_goma_chunks': {
      'gn_args': 'use_jumbo_build=true jumbo_file_merge_limit=50',
    },

    'libcxx': {
      'gn_args': 'use_custom_libcxx=true',
    },

    'libfuzzer': { 'gn_args': 'use_libfuzzer=true' },

    'link_jobs_32': {
      'gn_args': 'max_jobs_per_link=32',
    },

    'lsan': {
      'gn_args': 'is_lsan=true',
    },

    'mac_deterministic_build': {
      'gn_args': 'mac_deterministic_build=true',
    },

    'mac_strip': {
      'gn_args': 'enable_stripping=true',
    },

    'minimal_symbols': {
      'gn_args': 'symbol_level=1',
    },

    'msan': {
      'gn_args': 'is_msan=true msan_track_origins=2',
    },

    'msan_no_origins': {
      'gn_args': 'is_msan=true msan_track_origins=0',
    },

    'no_com_init_hooks': {
      'gn_args': 'com_init_check_hook_disabled=true',
    },

    'no_gnome_keyring': {
      'gn_args': 'use_gnome_keyring=false',
    },

    'no_keystone_registration_framework': {
      'gn_args': 'enable_keystone_registration_framework=false',
    },

    'no_symbols': {
      'gn_args': 'symbol_level=0',
    },

    'official': {
      'mixins': ['official_optimize'],
      'gn_args': 'is_chrome_branded=true',
    },

    'official_optimize': {
      'gn_args': 'is_official_build=true is_debug=false',
    },

    'optimize_for_fuzzing': {
      'gn_args': 'optimize_for_fuzzing=true',
    },

    'ozone': {
      'gn_args': 'use_ozone=true',
    },

    'ozone_linux': {
      'gn_args': ('ozone_auto_platforms=false ozone_platform_wayland=true '
                  'ozone_platform_headless=true ozone_platform_x11=true '
                  'ozone_platform_gbm=true '
                  'use_xkbcommon=true use_ozone=true'),
    },

    'ozone_platform_headless': {
      'gn_args': 'ozone_platform_headless=true',
    },

    # Used to pass the list of files to instrument for coverage to the compile
    # wrapper. See:
    # https://cs.chromium.org/chromium/build/scripts/slave/recipe_modules/code_coverage/api.py
    # and
    # https://cs.chromium.org/chromium/src/docs/clang_code_coverage_wrapper.md
    # For Java, see:
    # https://cs.chromium.org/chromium/src/build/android/gyp/jacoco_instr.py
    'partial_code_coverage_instrumentation': {
      'gn_args': 'coverage_instrumentation_input_file="//.code-coverage/files_to_instrument.txt"'
    },

    'pdf_xfa': {
      'gn_args': 'pdf_enable_xfa=true',
    },

    # Note: This is probably not what you want to use. Instead use one of the
    # chrome_with_codecs or chromeos_with_codecs mixins.
    'proprietary_codecs': {
      'gn_args': 'proprietary_codecs=true',
    },

    'release': {
      'gn_args': 'is_debug=false',
    },

    'release_bot': {
      'mixins': ['release', 'static', 'goma'],
    },

    'release_java': {
      'gn_args': 'is_java_debug=false',
    },

    'release_trybot': {
      'mixins': ['release_bot', 'minimal_symbols', 'dcheck_always_on'],
    },

    'shared': {
      'gn_args': 'is_component_build=true',
    },

    'shared_release_bot': {
      'mixins': ['shared', 'release', 'goma'],
    },

    'shared_release_trybot': {
      'mixins': ['shared_release_bot', 'minimal_symbols', 'dcheck_always_on'],
    },

    'static': {
      'gn_args': 'is_component_build=false',
    },

    'static_angle': {
      'gn_args': 'use_static_angle=true',
    },

    'strip_debug_info': {
      'gn_args': 'strip_debug_info=true',
    },

    'system_gbm_libdrm': {
      'gn_args': 'use_system_libdrm=true use_system_minigbm=true',
    },

    'thin_lto': {
      'gn_args': 'use_thin_lto=true',
    },

    'thin_lto_opt': {
      'gn_args': 'use_thin_lto=true thin_lto_enable_optimizations=true',
    },

    'win_linker_timing': {
      'gn_args': 'win_linker_timing=true',
    },

    'resource_whitelisting': {
      'gn_args': 'enable_resource_whitelist_generation=true',
    },

    'stable_channel': {
      'gn_args': 'android_channel="stable"',
    },

    'tsan': {
      'gn_args': 'is_tsan=true',
    },

    'ubsan': {
      'gn_args': 'is_ubsan=true',
    },

    'ubsan_no_recover_hack': {
      # TODO(krasin): Remove when https://llvm.org/bugs/show_bug.cgi?id=25569
      # is fixed and just use ubsan_vptr instead.
      'mixins': ['ubsan_vptr'],
      'gn_args': 'is_ubsan_no_recover=true',
    },

    'ubsan_security': { 'gn_args': 'is_ubsan_security=true' },

    'ubsan_vptr': {
      'gn_args': 'is_ubsan_vptr=true',
    },

    # TODO(crbug.com/869348): Remove this if we set this by default or don't use
    # this feature.
    'use_dummy_lastchange': {
      'gn_args': 'use_dummy_lastchange=true',
    },

    'v8_simulate_arm': {
      'gn_args': 'target_cpu="x86" v8_target_cpu="arm"',
    },

    'v8_simulate_arm64': {
      'gn_args': 'target_cpu="x64" v8_target_cpu="arm64"',
    },

    'v8_enable_debugging_features': {
      'gn_args': 'v8_enable_debugging_features=true',
    },

    'v8_future': {
      'gn_args': 'v8_enable_future=true',
    },

    'v8_heap': {
      'gn_args': 'v8_enable_verify_heap=true',
    },

    'v8_pointer_compression': {
      'gn_args': 'v8_enable_pointer_compression=true',
    },

    'vr': {
      'gn_args': 'enable_vr=true',
    },

    'vulkan': {
      'gn_args': 'android32_ndk_api_level=26 android64_ndk_api_level=26',
    },

    'webview_google': {
      'gn_args': 'system_webview_package_name="com.google.android.webview"',
    },

    'win_cross': {
      'gn_args': 'target_os="win"',
    },

    'x64': {
      'gn_args': 'target_cpu="x64"',
    },

    'x86': {
      'gn_args': 'target_cpu="x86"',
    },

    'x86_host': {
      'gn_args': 'host_cpu="x86"',
    },
  },
}
