# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("standalone_service") {
  sources = [
    "standalone_service.cc",
    "standalone_service.h",
    "switches.cc",
    "switches.h",
  ]

  deps = [
    "//mojo/core/embedder",
    "//mojo/public/cpp/platform",
    "//mojo/public/cpp/system",
    "//services/service_manager/public/cpp",
    "//services/service_manager/runner:init",
    "//services/service_manager/runner/common",
    "//services/service_manager/sandbox",
  ]

  public_deps = [
    "//base",
    "//services/service_manager/public/mojom",
  ]

  if (is_linux) {
    deps += [
      "//sandbox/linux:sandbox",
      "//sandbox/linux:sandbox_services",
      "//sandbox/linux:seccomp_bpf",
    ]
  }
}

# Service executable targets should link against this to get a boilerplate entry
# point which accepts canonical command-line arguments to establish a connection
# to the Service Manager. In order to link properly, dependents must ensure that
# they define a ServiceMain() symbol which matches the signature in
# //services/service_manager/public/c/main.h.
#
# NOTE: This target should be considered deprecated, as there is no longer a
# need for service entry points to use C linkage. service() targets
# automatically link against this, but can set |use_cpp_main| to |true| to link
# against the "main_cpp" target below instead.
source_set("main") {
  sources = [
    "main.cc",
  ]

  deps = [
    ":standalone_service",
    "//base",
    "//base:i18n",
    "//services/service_manager/runner:init",
  ]
}

# Same as above but uses a nicer signature for |ServiceMain()|, with a type-safe
# ServiceRequest handle instead of a raw C MojoHandle.
source_set("main_cpp") {
  public = [
    "service_main.h",
  ]

  sources = [
    "main_cpp.cc",
  ]

  deps = [
    ":standalone_service",
    "//base",
    "//base:i18n",
    "//services/service_manager/runner:init",
  ]
}
