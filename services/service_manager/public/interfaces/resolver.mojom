// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module service_manager.mojom;

import "mojo/common/file_path.mojom";
import "services/service_manager/public/interfaces/interface_provider_spec.mojom";

// The result of a Resolve operation via Resolver.
struct ResolveResult {
  // The name that was requested to be resolved.
  string name;

  // Contains the contents of the interface_provider_specs section in |name|'s
  // service manifest. If a manifest could be loaded, this map will contain at
  // least one key: |kServiceManager_ConnectorSpec| as defined in
  // interface_provider_spec.mojom. If a manifest could not be loaded, this map
  // will be empty.
  map<string, InterfaceProviderSpec> interface_provider_specs;

  // A path to the package file specified by |name|.
  mojo.common.mojom.FilePath package_path;
};

// Implemented exclusively for the Service Manager's use in resolving service
// names and reading static manifest information.
interface Resolver {
  // Resolves |service_name| and returns a ResolveResult containing metadata
  // from the catalog that the Service Manager uses to run an instance of it.
  //
  // If no entry for |service_name| is found in the catalog, |result| is null.
  //
  // If the service is provided by another service, the parent service's name
  // is given by |parent_name|; otherwise |parent_name| is null.
  ResolveServiceName(string service_name)
      => (ResolveResult? result, string? parent_name);
};
