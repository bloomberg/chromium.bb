// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_TRACING_PUBLIC_CPP_PERFETTO_JAVA_HEAP_PROFILER_HPROF_PARSER_ANDROID_H_
#define SERVICES_TRACING_PUBLIC_CPP_PERFETTO_JAVA_HEAP_PROFILER_HPROF_PARSER_ANDROID_H_

#include <string>

#include "base/component_export.h"

namespace tracing {

// This class takes in a temporary file_path where Java API endpoint
// Debug.dumpHprofData() dumps hprof data to. This file is then parsed for
// references between different instances. The format is defined by said method.
// Refer to:
// https://docs.google.com/document/d/1frGMt8Ro7C6fjbDscImdxHVsFAbSH1mjdETWisZjzVE
// for more information on the file format and
// https://developer.android.com/reference/android/os/Debug#dumpHprofData(java.lang.String)
// for more information on the endpoint.
class COMPONENT_EXPORT(TRACING_CPP) HprofParser {
 public:
  enum ParseResult {
    PARSE_SUCCESS,
    PARSE_FAILED,
    FAILED_TO_OPEN_FILE,
  };

  struct ParseStats {
    ParseStats();
    ParseStats(const ParseStats&) = delete;
    ParseStats& operator=(const ParseStats&) = delete;

    // Returns the result of the parser
    ParseResult result = PARSE_FAILED;
  };

  HprofParser(const std::string& file_path);
  HprofParser(const HprofParser&) = delete;
  HprofParser& operator=(const HprofParser&) = delete;

  // This method should only be called after Parse() has been called.
  const ParseStats& parse_stats() { return parse_stats_; }

  // First opens the file at |file_path_| then passes the data to ParseFileData
  // to parse and record metrics. The hprof file is generated by
  // Debug.dumpHprofData().
  // This method should only ever be run once.
  ParseResult Parse();

 private:
  // Parses hprof data file_data and records metrics in parse_stats_.
  void ParseFileData(const unsigned char* file_data, size_t file_size);

  const std::string file_path_;
  ParseStats parse_stats_;
};

}  // namespace tracing

#endif  // SERVICES_TRACING_PUBLIC_CPP_PERFETTO_JAVA_HEAP_PROFILER_HPROF_PARSER_ANDROID_H_
