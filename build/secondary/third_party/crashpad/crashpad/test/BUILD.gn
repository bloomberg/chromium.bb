# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//testing/test.gni")

static_library("test") {
  testonly = true

  sources = [
    "errors.cc",
    "errors.h",
    "file.cc",
    "file.h",
    "filesystem.cc",
    "filesystem.h",
    "gtest_death_check.h",
    "gtest_disabled.cc",
    "gtest_disabled.h",
    "hex_string.cc",
    "hex_string.h",
    "mac/dyld.cc",
    "mac/dyld.h",
    "mac/mach_errors.cc",
    "mac/mach_errors.h",
    "mac/mach_multiprocess.cc",
    "mac/mach_multiprocess.h",
    "main_arguments.cc",
    "main_arguments.h",
    "multiprocess.h",
    "multiprocess_exec.h",
    "multiprocess_exec_posix.cc",
    "multiprocess_exec_win.cc",
    "multiprocess_posix.cc",
    "scoped_module_handle.cc",
    "scoped_module_handle.h",
    "scoped_temp_dir.cc",
    "scoped_temp_dir.h",
    "scoped_temp_dir_posix.cc",
    "scoped_temp_dir_win.cc",
    "test_paths.cc",
    "test_paths.h",
    "win/child_launcher.cc",
    "win/child_launcher.h",
    "win/win_child_process.cc",
    "win/win_child_process.h",
    "win/win_multiprocess.cc",
    "win/win_multiprocess.h",
    "win/win_multiprocess_with_temp_dir.cc",
    "win/win_multiprocess_with_temp_dir.h",
  ]

  public_configs = [ "//third_party/crashpad/crashpad:crashpad_config" ]

  defines = [ "CRASHPAD_IN_CHROMIUM" ]

  data = [
    "test_paths_test_data_root.txt",
  ]

  deps = [
    "//base",
    "//testing/gtest",
    "//third_party/crashpad/crashpad/compat",
    "//third_party/crashpad/crashpad/snapshot",
    "//third_party/crashpad/crashpad/util",
  ]

  if (is_mac) {
    libs = [ "bsm" ]
  }
}

source_set("test_test") {
  testonly = true

  sources = [
    "hex_string_test.cc",
    "mac/mach_multiprocess_test.cc",
    "main_arguments_test.cc",
    "multiprocess_exec_test.cc",
    "scoped_temp_dir_test.cc",
    "test_paths_test.cc",
    "win/win_child_process_test.cc",
    "win/win_multiprocess_test.cc",
  ]

  if (!is_win) {
    sources += [ "multiprocess_posix_test.cc" ]
  }

  deps = [
    ":test",
    "//base",
    "//testing/gmock",
    "//testing/gtest",
    "//third_party/crashpad/crashpad/compat",
    "//third_party/crashpad/crashpad/util",
  ]

  data_deps = [
    ":crashpad_test_test_multiprocess_exec_test_child",
  ]
}

executable("crashpad_test_test_multiprocess_exec_test_child") {
  sources = [
    "multiprocess_exec_test_child.cc",
  ]
}

static_library("gmock_main") {
  testonly = true
  sources = [
    "gtest_main.cc",
  ]
  defines = [
    "CRASHPAD_IN_CHROMIUM",
    "CRASHPAD_TEST_LAUNCHER_GMOCK",
  ]
  deps = [
    ":test",
    "//base",
    "//base/test:test_support",
    "//testing/gmock",
    "//testing/gtest",
  ]
}

static_library("gtest_main") {
  testonly = true
  sources = [
    "gtest_main.cc",
  ]
  defines = [
    "CRASHPAD_IN_CHROMIUM",
    "CRASHPAD_TEST_LAUNCHER_GTEST",
  ]
  deps = [
    ":test",
    "//base",
    "//base/test:test_support",
    "//testing/gtest",
  ]
}
