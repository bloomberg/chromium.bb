#!/usr/bin/env python
# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.


import argparse
import os
import string
import sys


SCRIPT_TEMPLATE = string.Template("""\
#!/usr/bin/env python
#
# This file was generated by build/android/gyp/create_apk_operations_script.py

import os
import sys

def main(args):
  script_directory = os.path.dirname(__file__)
  resolve = lambda p: os.path.abspath(os.path.join(script_directory, p))
  apk_operations_path = resolve(${APK_OPERATIONS_PATH})
  apk_operations_args = []
  path_args = ${PATH_ARGS}
  other_args = ${OTHER_ARGS}
  for arg, path in path_args:
    apk_operations_args.extend([arg, resolve(path)])
  apk_operations_args.extend(other_args)
  apk_operations_cmd = [apk_operations_path] + apk_operations_args + args
  os.execv(apk_operations_path, apk_operations_cmd)

if __name__ == '__main__':
  sys.exit(main(sys.argv[1:]))
""")


def main(args):
  parser = argparse.ArgumentParser()
  parser.add_argument('--script-output-path',
                      help='Output path for executable script.')
  parser.add_argument('--apk-path')
  parser.add_argument('--incremental-apk-path')
  parser.add_argument('--incremental-install-script')
  parser.add_argument('--command-line-flags-file')
  args = parser.parse_args(args)

  def relativize(path):
    """Returns the path relative to the output script directory."""
    return os.path.relpath(path, os.path.dirname(args.script_output_path))

  apk_operations_path = os.path.join(
      os.path.dirname(__file__), os.path.pardir, 'apk_operations.py')
  apk_operations_path = relativize(apk_operations_path)
  path_args = [('--output-directory', '.')]
  if args.apk_path:
    path_args.append(('--apk-path', relativize(args.apk_path)))
  if args.incremental_apk_path:
    path_args.append(
        ('--inc-apk-path', relativize(args.incremental_apk_path)))
    path_args.append(
        ('--inc-install-script', relativize(
            args.incremental_install_script)))
  other_args = ['--command-line-flags-file', args.command_line_flags_file]
  with open(args.script_output_path, 'w') as script:
    script_dict = {
        'APK_OPERATIONS_PATH': repr(apk_operations_path),
        'PATH_ARGS': repr(path_args),
        'OTHER_ARGS': repr(other_args),
    }
    script.write(SCRIPT_TEMPLATE.substitute(script_dict))
  os.chmod(args.script_output_path, 0750)
  return 0


if __name__ == '__main__':
  sys.exit(main(sys.argv[1:]))
