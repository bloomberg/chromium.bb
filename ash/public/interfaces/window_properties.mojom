// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ash.mojom;

// A bool to indicate whether this window should be replaced by a black
// rectangle in assistant screenshot for privacy purpose.
const string kBlockedForAssistantSnapshot_Property =
  "ash:blocked-for-assistant-snapshot";

// V1 apps can intercept system keys. This will let the app handle F-keys instead
// of the window manager.
const string kCanConsumeSystemKeys_Property =
  "ash:can-consume-system-keys";

// The bounds of the window control buttons (minimize, maximize, restore)
// relative to the frame.
const string kCaptionButtonBounds_Property = "ash:caption-button-bounds";

// An UnguessableToken used to tell Mash the frame image to use for a custom
// Browser theme, for both a window's active state and its inactive state.
// The token to image mapping is stored in ash::ClientImageRegistry.
const string kFrameImageActive_Property = "ash:frame-image-active";
const string kFrameImageInactive_Property = "ash:frame-image-inactive";

// More frame image tokens. These map to "theme_frame_overlay[_inactive]" in
// custom browser themes. See browser_theme_pack.cc
const string kFrameImageOverlayActive_Property =
    "ash:frame-image-overlay-active";
const string kFrameImageOverlayInactive_Property =
    "ash:frame-image-overlay-inactive";

// A property that controls where a themed window's image is painted.
const string kFrameImageYInset_Property = "ash:frame-image-y-inset";

// A boolean that tells Ash whether the frame's colors come from a PWA manifest.
const string kFrameIsThemedByHostedApp_Property =
    "ash:frame-is-themed-by-hosted-app";

// The color of the text drawn on the frame (i.e. the window title). Only used
// for tabless browser windows.
const string kFrameTextColor_Property = "ash:frame-text-color";

// True if the shelf should be hidden when this window is put into fullscreen.
// Exposed because some windows want to explicitly opt-out of this.
const string kHideShelfWhenFullscreen_Property =
  "ash:hide-shelf-when-fullscreen";

// This is put on windows to indicate that ash should perform auto management of
// window positions; when you open a second browser, ash will move the two to
// minimize overlap.
const string kWindowPositionManaged_Property =
  "ash:window-position-managed";

// A property key which stores the bounds to restore a window to. These take
// preference over the current bounds. This is used by e.g. the tablet mode
// window manager.
const string kRestoreBoundsOverride_Property =
  "ash:restore-bounds-override";

// A property key which stores the window state to restore a window to. These
// take preference over the current state if
// |kRestoreWindowStateTypeOverrideKey| is set. This is used by e.g. the tablet
// mode window manager.
const string kRestoreWindowStateTypeOverride_Property  =
  "ash:restore-window-state-type-override";
