{
    "use_snake_file_names": true,
    "use_title_case_methods": true,

    "protocol": {
        "package": "content/browser/devtools/protocol",
        "output": "protocol",
        "namespace": ["content", "protocol"],
        "export_macro": "CONTENT_EXPORT",
        "export_header": "content/common/content_export.h",
        "options": [
            {
                "domain": "DOM",
                "include": ["setFileInputFiles"],
                "include_events": [],
                "include_types": ["NodeId", "BackendNodeId", "RGBA"]
            },
            {
                "domain": "Emulation",
                "include": ["setGeolocationOverride", "clearGeolocationOverride", "setTouchEmulationEnabled", "canEmulate", "setDeviceMetricsOverride", "clearDeviceMetricsOverride", "setVisibleSize"]
            },
            {
                "domain": "Input",
                "exclude": ["dispatchTouchEvent"],
                "async": ["dispatchKeyEvent", "dispatchMouseEvent", "synthesizePinchGesture", "synthesizeScrollGesture", "synthesizeTapGesture"]
            },
            {
                "domain": "Inspector"
            },
            {
                "domain": "IO",
                "async": ["read"]
            },
            {
                "domain": "Memory",
                "include": ["setPressureNotificationsSuppressed", "simulatePressureNotification"]
            },
            {
                "domain": "Network",
                "include": ["enable", "disable", "clearBrowserCache", "clearBrowserCookies", "getCookies", "getAllCookies", "deleteCookie", "setCookie", "setUserAgentOverride", "canEmulateNetworkConditions", "setRequestInterceptionEnabled", "continueInterceptedRequest"],
                "include_types": ["CookieSameSite", "Cookie", "Response", "Headers", "Request", "ResourceTiming", "SecurityDetails", "SignedCertificateTimestamp", "Initiator", "ResourcePriority", "RequestWillBeSentNotification", "ResponseReceivedNotification", "LoadingFinishedNotification", "LoadingFailedNotification", "RequestWillBeSentNotification", 
                                  "ErrorReason", "RequestInterceptedNotification", "AuthChallenge", "AuthChallengeResponse"],
                "include_events": ["requestWillBeSent", "responseReceived", "loadingFinished", "loadingFailed", "requestIntercepted"],
                "async": ["clearBrowserCookies", "getCookies", "getAllCookies", "deleteCookie", "setCookie", "continueInterceptedRequest"]
            },
            {
                "domain": "Page",
                "include": ["enable", "disable", "reload", "navigate", "stopLoading", "getNavigationHistory", "navigateToHistoryEntry", "captureScreenshot",
                    "startScreencast", "stopScreencast", "screencastFrameAck", "handleJavaScriptDialog", "setColorPickerEnabled", "requestAppBanner",
                    "setControlNavigations", "processNavigation", "printToPDF"],
                "include_events": ["interstitialShown", "interstitialHidden", "navigationRequested", "screencastVisibilityChanged", "screencastFrame", "colorPicked"],
                "async": ["captureScreenshot", "printToPDF"]
            },
            {
                "domain": "Runtime",
                "include_types": ["StackTrace", "CallFrame"],
                "include_events": [],
                "include": []
            },
            {
                "domain": "Schema"
            },
            {
                "domain": "Security"
            },
            {
                "domain": "ServiceWorker"
            },
            {
                "domain": "Storage",
                "async": ["getUsageAndQuota"]
            },
            {
                "domain": "SystemInfo",
                "async": ["getInfo"]
            },
            {
                "domain": "Target"
            },
            {
                "domain": "Tethering",
                "async": ["bind", "unbind"]
            },
            {
                "domain": "Tracing",
                "async": ["start", "end", "getCategories", "requestMemoryDump"]
            }
        ]
    },

    "lib": {
        "package": "content/browser/devtools/protocol",
        "output": "protocol",
        "string_header": "content/browser/devtools/protocol_string.h",
        "export_macro": "CONTENT_EXPORT",
        "export_header": "content/common/content_export.h"
    }
}
