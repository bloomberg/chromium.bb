// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module content.mojom;

import "content/common/service_worker/service_worker_provider.mojom";
import "content/public/common/url_loader_factory.mojom";

// Per-process browser-side interface.
// The renderer uses this interface to tell the browser when potential service
// worker clients are created and when service workers are starting up.
interface ServiceWorkerDispatcherHost {
  // Creates a content::ServiceWorkerProviderHost on the browser
  // process. |provider_info| has Mojo endpoints to connect the provider host
  // and the provider on the renderer together. The lifetime of
  // ServiceWorkerProviderHost will be tied to the
  // mojom::ServiceWorkerProviderHost interface.
  OnProviderCreated(ServiceWorkerProviderHostInfo provider_info);

  // Informs the browser that a service worker is starting up. |provider_id|
  // identifies the ServiceWorkerProviderHost hosting the service
  // worker. |version_id| identifies the ServiceWorkerVersion and
  // |embedded_worker_id| identifies the EmbeddedWorkerInstance.
  // If ServiceWorkerUtils::IsServicificationEnabled() is true, this also
  // populates |script_loader_factory| for script loading for the service
  // worker.
  OnSetHostedVersionId(int32 provider_id,
                       int64 version_id,
                       int32 embedded_worker_id,
                       associated URLLoaderFactory& script_loader_factory);
};
