# These tests fail when running browser_tests --mash
# http://crbug.com/678687

# Unknown failure.
-BrowserTabRestoreTest.*

# Extensive use of ash::WindowState.
-AcceleratorCommandsBrowserTest.*
-InitiallyMaximized/AcceleratorCommandsFullscreenBrowserTest.*
-InitiallyMaximized/AcceleratorCommandsPlatformAppFullscreenBrowserTest.*
-InitiallyRestored/AcceleratorCommandsFullscreenBrowserTest.*
-InitiallyRestored/AcceleratorCommandsPlatformAppFullscreenBrowserTest.*

# ChromeVoxPanel directly calls into ash to set panel height.
-AccessibilityFeatureaApiTestInstantiatePermission/AccessibilityFeaturesApiTest.*
-AccessibilityManagerTest.*
-ChromeOSInfoPrivateTest.*
-PolicyPrefsTest.*
-PolicyProvidedTrustRootsPublicSessionTest.*
-PolicyTest.*
-UserTypeInstantiation/AccessibilityManagerUserTypeTest.*
-VolumeControllerSoundsTest.*
-WizardControllerTest.*

# Login constructs ash::FocusRingController and KeyboardDrivenOobeKeyHandler,
# both of which use ash::Shell.
-WizardControllerKioskFlowTest.*

# Uses ash::Shell::GetRootWindowForNewWindows to choose a display for the app list.
# More generally, app list needs to move into ash.
-AppListControllerGuestModeBrowserTest.*
-AppListControllerSearchResultsBrowserTest.*
-AppListServiceImplBrowserTest.*
-AppListTest.*
-ArcAppUninstallDialogViewBrowserTest.*

# Accesses ash::Shelf to make assertions about the shelf view.
-ArcAppDeferredLauncherBrowserTest.*
-ArcAppDeferredLauncherWithParamsBrowserTestInstance/ArcAppDeferredLauncherWithParamsBrowserTest.*

# AutomationManagerAura::Enable() uses ash to get active window. More generally,
# chrome a11y code directly accesses ash system UI widgets and views.
-AutomationApiTest.*
-AutomationApiTestWithDeviceScaleFactor.*
-AutomationManagerAuraBrowserTest.*

# Uses Shell::GetPrimaryRootWindow to create an EventGenerator
-LoginWebDialogTest.CloseDialogByAccelerator

# Direct access to ash window frames, tablet mode, overview mode, etc.
-BrowserNonClientFrameViewAshBackButtonTest.*
-BrowserNonClientFrameViewAshTest.*
-HostedAppNonClientFrameViewAshTest.*
-ImmersiveModeControllerAshHostedAppBrowserTest.*

# Incorrect window bounds. Probably WindowSizerAsh problem.
-BrowserTestTabbedOrApp/BrowserTestParam.*
-TabRestoreTest.*

# Timeout waiting for notification.
-CaptivePortalAuthenticationIgnoresProxy/NetworkPortalDetectorImplBrowserTestIgnoreProxy.*

# ash::Shell access from ChromeViewsDelegate::CreateDefaultNonClientFrameView()
# e.g. from chromeos::CaptivePortalWindowProxy::Show().
-CaptivePortalWindowCtorDtorTest.*
-CaptivePortalWindowTest.*
-SimpleWebViewDialogTest.*

# Need pixel copy support. http://crbug.com/754864
-CastStreamingApiTestWithPixelOutput.*
-TabCaptureApiPixelTest.*

# RefCounted check failed: CalledOnValidSequence() from SchedulerWorkerDelegate::OnMainExit
-CheckSystemTokenAvailability/EnterprisePlatformKeysTest.*

# aura::CrashInFlightChange::ChangeFailed() when searching PDF.
-ChromeFindRequestManagerTest.*
-PDFExtensionTest.*

# Need screenshot support. http://crbug.com/754899
-ChromeScreenshotGrabberBrowserTest.*

# ChromeBrowserMainExtraPartsAsh: Check failed: views::MusClient::Exists().
-ChromeMainTest.*
-ProfilingBrowserTest.*

# Null immersive_fullscreen_controller_.
-ChromeNativeAppWindowViewsAuraAshBrowserTest.*

# Flaky. SessionRestoreStatsCollector::Observe failure. crbug.com/785298
# session_restore_stats_collector.cc(210) Check failed: 0u < loading_tab_count_ (0 vs. 0)
-ContinueWhereILeftOffTest.*
-DeviceIDTest.*
-SessionRestoreTest.*
-SessionRestoreTestChromeOS.*
-SAMLPolicyTest.TransferCookiesAffiliated
-SmartSessionRestoreTest.*

# ash::Shell access in test for wallpaper images.
-CustomizationWallpaperDownloaderBrowserTest.*
-WallpaperManagerPolicyTest.*

# Flaky: private_api_file_system.cc(811) Check failed: external_backend->CanHandleType(file_system_url.type()).
-DefaultTaskDialog/FileManagerBrowserTest.*
-QuickView/FileManagerBrowserTest.*

# ash::Shell access for LogoutConfirmationController
-DeviceLocalAccountTest.*

# TODO: Very slow (>25 seconds) and occasional timeouts.
-ExecuteScriptApiTest/DestructiveScriptTest.*

# Fails: immersive_controller->IsRevealed() returns false.
# http://crbug.com/791148
-ZoomBubbleBrowserTest.*

# ozone_platform.cc(61) Check failed: instance_. OzonePlatform is not initialized
-ExtensionWebstoreGetWebGLStatusTest.*

# SystemLogsFetcher -> TouchLogSource -> ash::TouchHudDebug -> ash::Shell
-FeedbackTest.*

# FirstRunController -> ash::Shell
-FirstRunUIBrowserTest.*

# ash::Shell::display_manager() to update displays.
-ForceMaximizeOnFirstRunTest.*
-ForceMaximizePolicyFalseTest.*
-PolicyDisplayRotationDefault/DisplayRotationBootTest.*
-PolicyDisplayRotationDefault/DisplayRotationDefaultTest.*

# Failures JS-side.
-GalleryBrowserTest.*
-GalleryBrowserTestInGuestMode.*

# IME accesses ash::Shell for root window.
-InputMethodEngineBrowserTest/InputMethodEngineBrowserTest.*
-InputMethodEngineComponentExtensionBrowserTest/InputMethodEngineBrowserTest.*
-InputMethodEngineIncognitoBrowserTest/InputMethodEngineBrowserTest.*

# KeyboardOverlayUI uses ash::Shell.
-KeyboardOverlayUIBrowserTest.*

# Kiosk mode has a variety of failures:
# termination_observer_->terminated() is false.
# Value of: login_display_host == NULL || login_display_host->GetNativeWindow()->layer()->GetTargetOpacity() == 0.0f
# Check failed: !browser_client || browser_client->IsShuttingDown() || did_respond() || ignore_all_did_respond_for_testing_do_not_use. app.window.create
# chromeos::KioskExternalUpdateNotification::CreateAndShowNotificationView() uses ash::Shell.
-KioskAppManagerTest.*
-KioskAppSettingsWebUITest.*
-KioskCrashRestoreTest.*
-KioskEnterpriseTest.*
-KioskHiddenWebUITest.*
-KioskTest.*
-KioskUpdateTest.*

# Panel state lookup failures for window active, item running, etc.
-LauncherPlatformAppBrowserTest.PanelAttentionStatus
-LauncherPlatformAppBrowserTest.PanelItemClickBehavior

# JS failure: hasAccessToCurrentWindow: FAIL (no message)
-LockScreenNoteTakingTest.*

# desktop_window_tree_host_mus.cc(796) Check failed: !window->GetRootWindow() || this->window() == window->GetRootWindow().
-LoginFeedbackTest.*

# Missing magnification manager and ChromeVoxPanel crashes.
-LoginScreenDefaultPolicyInSessionBrowsertest.*
-LoginScreenDefaultPolicyLoginScreenBrowsertest.*

# Crashes in pre-login phase, probably MagnificationManager not created.
-MagnificationManagerTest.*

# OutputProtection problems:
# interface_endpoint_client.cc(32) Check failed: !is_valid. The callback passed to OutputProtection::QueryStatus() was never run.
# binder_registry.h(89) Failed to locate a binder for interface: display::mojom::OutputProtection
-Mojo/ECKEncryptedMediaTest.*
-OutOfProcessPPAPITest.*
-Pepper/ECKEncryptedMediaTest.*

# ash::FocusRingController::SetVisible() from LoginDisplayHostWebUI.
-MultiAuthEnrollmentScreenTest.*
-ProvisionedEnrollmentScreenTest.*

# VPN item not in system tray.
-NetworkingConfigDelegateChromeosTest.*

# Timeout device_event_log_impl.cc(156) Network: network_portal_detector_impl.cc:486 Portal detection timeout:  name= id=
-NetworkingConfigTest.*
-NetworkPortalDetectorImplBrowserTest.*

# Crash in autofill::SaveCardBubbleViews::ShouldShowCloseButton().
-SaveCardBubbleControllerImplTest.*

# WindowSizerAsh does not compute correct show state.
-ShelfAppBrowserTest.AppWindowRestoreBehaviorTest

# ash::Shell access in test for display configuration.
-ShelfAppBrowserTest.LaunchAppFromDisplayWithoutFocus*

# ash::Shell access in test.
-ShutdownPolicyInSessionTest.*

# Function under test uses ash::Shell for window list.
-SortWindowsByZIndexBrowserTest.*

# Timeout.
-StartupMetricsTest.*

# ash::Shell access in test for StatusAreaWidget.
-SupervisedUserCreationTest.*

# Crash. Database is locked.
-SyncAwareCounterTest.*

# ash::Shell access in test.
-SystemTrayTrayCastMediaRouterChromeOSTest.*

# ash::Shell access in test.
-SystemUse24HourClockPolicyTest.*

# Flaky shutdown crashes in ~MusClient http://crbug.com/786234 and AtExit
# crashes in ~WebContentsTaskProvider http://crbug.com/786230
-AppBackgroundPageApiTest.*
-DefaultIsolation/TaskManagerOOPIFBrowserTest.*
-PrerenderBrowserTest.*
-SitePerProcess/TaskManagerOOPIFBrowserTest.*
-TaskManagerBrowserTest.*
-TaskManagerMemoryCoordinatorBrowserTest.*
-TaskManagerUtilityProcessBrowserTest.*

# ash::Shell access in test.
-TrayAccessibilityLoginScreenTest.*
-TrayAccessibilityTestInstance/TrayAccessibilityTest.*

# chromeos::UserAddingScreenImpl::Cancel() uses ash::Shell to enable system tray.
-UserAddingScreenTest.*

# Virtual keyboard not supported.
-DefaultKeyboardExtensionBrowserTest.*
-KeyboardEndToEndTest.*
-KioskVirtualKeyboardTest.*
-VirtualKeyboardAppWindowTest.*
-VirtualKeyboardStateTest.*
-VirtualKeyboardWebContentTest.*

# Also fails in --mus. http://crbug.com/755318.
-WebViewScrollBubbling/WebViewGuestScrollTouchTest.*

# Also fails in --mus. http://crbug.com/755328
-WebViewTests/WebViewFocusTest.*
-WebViewTests/WebViewSizeTest.*
-WebViewTests/WebViewTest.*

# crbug.com/792641 - Disable tests on mash during Wallpaper re-factoring
-WallPaperPrivateApiTest.*

# Sending invalid FrameSinkIds crbug.com/796999
-WebviewLoginTest.AllowNewUser
-EnterpriseEnrollmentTest.TestAuthCodeGetsProperlyReceivedFromGaia
-PowerPolicyLoginScreenBrowserTest.SetDevicePolicy
-EnterpriseEnrollmentTest.TestActiveDirectoryEnrollment_Success
