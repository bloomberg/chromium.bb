# Copyright 2019 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("storage") {
  sources = [
    "dom_storage/async_dom_storage_database.cc",
    "dom_storage/async_dom_storage_database.h",
    "dom_storage/dom_storage_database.cc",
    "dom_storage/dom_storage_database.h",
    "indexed_db/leveldb/leveldb_factory.cc",
    "indexed_db/leveldb/leveldb_factory.h",
    "indexed_db/leveldb/leveldb_state.cc",
    "indexed_db/leveldb/leveldb_state.h",
    "indexed_db/scopes/disjoint_range_lock_manager.cc",
    "indexed_db/scopes/disjoint_range_lock_manager.h",
    "indexed_db/scopes/leveldb_scope.cc",
    "indexed_db/scopes/leveldb_scope.h",
    "indexed_db/scopes/leveldb_scope_deletion_mode.h",
    "indexed_db/scopes/leveldb_scopes.cc",
    "indexed_db/scopes/leveldb_scopes.h",
    "indexed_db/scopes/leveldb_scopes_coding.cc",
    "indexed_db/scopes/leveldb_scopes_coding.h",
    "indexed_db/scopes/leveldb_scopes_factory.cc",
    "indexed_db/scopes/leveldb_scopes_factory.h",
    "indexed_db/scopes/leveldb_scopes_tasks.cc",
    "indexed_db/scopes/leveldb_scopes_tasks.h",
    "indexed_db/scopes/scope_lock.cc",
    "indexed_db/scopes/scope_lock.h",
    "indexed_db/scopes/scope_lock_range.cc",
    "indexed_db/scopes/scope_lock_range.h",
    "indexed_db/scopes/scopes_lock_manager.cc",
    "indexed_db/scopes/scopes_lock_manager.h",
    "indexed_db/scopes/varint_coding.cc",
    "indexed_db/scopes/varint_coding.h",
    "indexed_db/transactional_leveldb/leveldb_write_batch.cc",
    "indexed_db/transactional_leveldb/leveldb_write_batch.h",
    "indexed_db/transactional_leveldb/transactional_leveldb_database.cc",
    "indexed_db/transactional_leveldb/transactional_leveldb_database.h",
    "indexed_db/transactional_leveldb/transactional_leveldb_factory.cc",
    "indexed_db/transactional_leveldb/transactional_leveldb_factory.h",
    "indexed_db/transactional_leveldb/transactional_leveldb_iterator.cc",
    "indexed_db/transactional_leveldb/transactional_leveldb_iterator.h",
    "indexed_db/transactional_leveldb/transactional_leveldb_transaction.cc",
    "indexed_db/transactional_leveldb/transactional_leveldb_transaction.h",
    "origin_context_impl.cc",
    "origin_context_impl.h",
    "partition_impl.cc",
    "partition_impl.h",
    "storage_service_impl.cc",
    "storage_service_impl.h",
  ]

  public_deps = [
    "//base",
    "//components/services/storage/indexed_db/scopes:scopes_metadata_proto",
    "//components/services/storage/public/mojom",
    "//mojo/public/cpp/bindings",
    "//third_party/leveldatabase",
    "//url",
  ]
}

source_set("tests") {
  testonly = true

  sources = [
    "dom_storage/dom_storage_database_unittest.cc",
    "indexed_db/scopes/disjoint_range_lock_manager_unittest.cc",
    "indexed_db/scopes/leveldb_scope_unittest.cc",
    "indexed_db/scopes/leveldb_scopes_coding_unittest.cc",
    "indexed_db/scopes/leveldb_scopes_tasks_unittest.cc",
    "indexed_db/scopes/leveldb_scopes_unittest.cc",
    "indexed_db/scopes/scopes_lock_manager_unittest.cc",
    "indexed_db/scopes/varint_coding_unittest.cc",
    "indexed_db/transactional_leveldb/transactional_leveldb_transaction_unittest.cc",
    "indexed_db/transactional_leveldb/transactional_leveldb_unittest.cc",
    "partition_impl_unittest.cc",
    "storage_service_impl_unittest.cc",
  ]

  deps = [
    ":storage",
    ":test_support",
    "//base",
    "//base/test:test_support",
    "//testing/gmock",
    "//testing/gtest",
  ]
}

source_set("test_support") {
  testonly = true

  sources = [
    "indexed_db/leveldb/fake_leveldb_factory.cc",
    "indexed_db/leveldb/fake_leveldb_factory.h",
    "indexed_db/leveldb/mock_level_db.cc",
    "indexed_db/leveldb/mock_level_db.h",
    "indexed_db/scopes/leveldb_scopes_test_utils.cc",
    "indexed_db/scopes/leveldb_scopes_test_utils.h",
  ]

  deps = [
    ":storage",
    "//base",
    "//base/test:test_support",
    "//testing/gmock",
    "//testing/gtest",
    "//third_party/leveldatabase",
  ]
}
