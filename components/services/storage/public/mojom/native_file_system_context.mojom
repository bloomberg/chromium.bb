// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module storage.mojom;

import "third_party/blink/public/mojom/native_file_system/native_file_system_transfer_token.mojom";
import "url/mojom/origin.mojom";


// This interface is the primary access point to Chrome's Native File System API
// implementation. This interface lives in the browser process and is used by
// IndexedDB in the storage service to serialize and deserialize Native File
// System handles.
//
// This interface has capabilities that should NOT be accessible to a renderer.
// For example, DeserializeHandle can give access to arbitrary paths on disk.
interface NativeFileSystemContext {
  // Serializes a handle represented by |token|. If token is not valid this
  // returns an empty array, otherwise this returns a serialization that can
  // be stored to disk by for example IndexedDB, and then later read back and
  // passed to DeserializeHandle to turn it back into a token.
  SerializeHandle(
      pending_remote<blink.mojom.NativeFileSystemTransferToken> token)
      => (array<uint8> bits);

  // Deserializes a handle. |bits| should be what was returned by
  // SerializeHandle earlier. The resulting |token| can be used by renderers for
  // |origin| to get access to the underlying file or directory.
  // If deserialization fails, |token| is not bound, and attempts to use it will
  // fail.
  DeserializeHandle(
      url.mojom.Origin origin,
      array<uint8> bits,
      pending_receiver<blink.mojom.NativeFileSystemTransferToken> token);
};
