// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module printing.mojom;

const string kServiceName = "pdf_compositor";

// TODO(weili): Add support for printing frames from different processes.
interface PdfCompositor {
  // The status of CompositePdf execution.
  enum Status {
    SUCCESS,
    HANDLE_MAP_ERROR,
    CONTENT_FORMAT_ERROR,
    COMPOSTING_FAILURE,
  };

  // Currently directly convert passed in page data to a PDF file.
  // |sk_handle| points to a buffer of a Skia MultiPictureDocument.
  // |status| records the function execution status.
  // |pdf_handle| points to the generated PDF file buffer upon success.
  CompositePdf(handle<shared_buffer> sk_handle)
      => (Status status, handle<shared_buffer>? pdf_handle);
};
