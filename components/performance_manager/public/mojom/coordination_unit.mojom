// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module performance_manager.mojom;

import "mojo/public/mojom/base/process_id.mojom";
import "mojo/public/mojom/base/time.mojom";
import "components/performance_manager/public/mojom/lifecycle.mojom";

// Any new type here needs to be mirrored between coordination_unit_types.h and
// coordination_unit.mojom, and have mappings between the two defined in
// coordination_unit_mojom_traits.h/.cc (see comment in coordination_unit_id.h).
enum CoordinationUnitType {
  kFrame,
  kPage,
  kProcess,
  kSystem,
};

// Intervention policy status.
enum InterventionPolicy {
  // The frame/page has explicitly opted-in to an intervention.
  kOptIn,
  // The frame/page has explicitly opted-out from an intervention.
  kOptOut,
  // The frame/page has neither opted-in or opted-out. The intervention will be
  // applied using its own heuristics. This is the default state for a
  // frame/page.
  kDefault,
};

// Interface used by a blink::Document to communicate state associated with
// resource management to the embedder.
interface DocumentCoordinationUnit {
  // Property signals.
  SetNetworkAlmostIdle();
  SetLifecycleState(LifecycleState state);
  SetHasNonEmptyBeforeUnload(bool has_nonempty_beforeunload);
  // Called the first time a form in this document is interacted with.
  SetHadFormInteraction();

  // Sets the freeze policy set via origin trial for the document. Invoked once
  // after finishing to parse the document. The freeze policies of all frames on
  // a page are aggregated to determine whether the page as a whole can be
  // frozen.
  SetOriginTrialFreezePolicy(InterventionPolicy policy);

  SetIsAdFrame();

  // Event signals.

  // Called when the associated frame has caused a non-persistent notification
  // to be created.
  OnNonPersistentNotificationCreated();

  // Invoked when the frame associated with this document has had a first
  // contentful paint, as defined here:
  // https://developers.google.com/web/tools/lighthouse/audits/first-contentful-paint
  // This may not fire for all frames, depending on if the load is interrupted
  // or if the content is even visible. It will fire at most once for a given
  // frame. It will only fire for main-frame nodes.
  OnFirstContentfulPaint(mojo_base.mojom.TimeDelta time_since_navigation_start);
};

interface ProcessCoordinationUnit {
  // Property signals.
  SetExpectedTaskQueueingDuration(mojo_base.mojom.TimeDelta duration);
  SetMainThreadTaskLoadIsLow(bool main_thread_task_load_is_low);
};
