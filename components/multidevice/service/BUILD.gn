# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

if (!is_ios && !is_android) {
  import("//mojo/public/tools/bindings/mojom.gni")
  import("//services/service_manager/public/service_manifest.gni")

  static_library("device_sync") {
    sources = [
      "cryptauth_client_factory_impl.cc",
      "cryptauth_client_factory_impl.h",
      "cryptauth_enroller_factory_impl.cc",
      "cryptauth_enroller_factory_impl.h",
      "cryptauth_token_fetcher_impl.cc",
      "cryptauth_token_fetcher_impl.h",
      "device_sync_impl.cc",
      "device_sync_impl.h",
      "device_sync_service.cc",
      "device_sync_service.h",
    ]

    deps = [
      "//base",
      "//net",
      "//services/identity/public/cpp",
    ]

    public_deps = [
      "//components/cryptauth",
      "//components/multidevice/service/public/interfaces",
      "//components/proximity_auth/logging",
      "//services/identity/public/mojom",
      "//services/service_manager/public/cpp",
    ]
  }

  service_manifest("manifest") {
    name = "device_sync"
    source = "manifest.json"
  }

  static_library("test_support") {
    testonly = true

    sources = [
      "fake_device_sync_observer.cc",
      "fake_device_sync_observer.h",
    ]

    public_deps = [
      ":device_sync",
    ]

    deps = [
      "//base",
      "//components/multidevice/service/public/interfaces",
      "//testing/gtest",
    ]
  }

  source_set("unit_tests") {
    testonly = true

    sources = [
      "cryptauth_token_fetcher_impl_unittest.cc",
      "device_sync_service_unittest.cc",
    ]

    deps = [
      ":device_sync",
      ":test_support",
      "//base",
      "//base/test:test_support",
      "//components/cryptauth",
      "//components/cryptauth:test_support",
      "//components/multidevice/service/public/interfaces",
      "//mojo/common",
      "//services/identity/public/cpp:test_support",
      "//services/service_manager/public/cpp:service_test_support",
      "//services/service_manager/public/cpp/test:test_support",
      "//testing/gmock",
      "//testing/gtest",
    ]
  }
}
