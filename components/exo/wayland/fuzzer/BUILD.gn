# Copyright 2019 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//components/exo/wayland/fuzzer/wayland_templater.gni")
import("//testing/libfuzzer/fuzzer_test.gni")
import("//third_party/libprotobuf-mutator/fuzzable_proto_library.gni")
import("//third_party/protobuf/proto_library.gni")

# This is the canonical list of protocols which the generators should use
# (though they don't have to)
kDefaultWaylandProtocols = [
  "//third_party/wayland/src/protocol/wayland.xml",
  "//third_party/wayland-protocols/src/unstable/xdg-shell/xdg-shell-unstable-v6.xml",
]

wayland_templater("protocol_dump") {
  sources = [
    "misc/dump.tmpl",
  ]
  protocols = kDefaultWaylandProtocols
}

wayland_templater("protocol_graph") {
  sources = [
    "misc/graph.dot.tmpl",
  ]
  protocols = kDefaultWaylandProtocols
}

wayland_templater("actions_tmpl") {
  sources = [
    "actions.proto.tmpl",
  ]
  protocols = kDefaultWaylandProtocols
}

wayland_templater("harness_h_tmpl") {
  sources = [
    "harness.h.tmpl",
  ]
  protocols = kDefaultWaylandProtocols
}

wayland_templater("harness_cc_tmpl") {
  sources = [
    "harness.cc.tmpl",
  ]
  protocols = kDefaultWaylandProtocols
}

if (use_libfuzzer) {
  fuzzer_test("wayland_fuzzer") {
    sources = [
      "fuzzer.cc",
    ]

    deps = [
      ":actions",
      ":harness",
      ":server_environment",
      "//base",
      "//third_party/libprotobuf-mutator",
    ]

    libfuzzer_options = [ "len_control=0" ]
  }
}

source_set("unit_tests") {
  testonly = true

  sources = [
    "harness_unittest.cc",
  ]

  deps = [
    ":actions",
    ":harness",
    "//base",
    "//components/exo",
    "//components/exo:test_support",
    "//components/exo/wayland",
    "//skia",
  ]
}

source_set("server_environment") {
  testonly = true

  sources = [
    "server_environment.cc",
    "server_environment.h",
  ]

  deps = [
    "//base",
    "//base/test:test_support",
    "//components/exo",
    "//components/exo/wayland:wayland",
    "//components/exo/wayland:wayland_client_test_helper",
    "//mojo/core/embedder",
    "//ui/aura",
    "//ui/base",
    "//ui/gl:test_support",
  ]
}

source_set("harness") {
  sources = get_target_outputs(":harness_h_tmpl") +
            get_target_outputs(":harness_cc_tmpl")

  deps = [
    ":actions",
    ":harness_cc_tmpl",
    ":harness_h_tmpl",
    "//base",
    "//third_party/wayland:wayland_client",
    "//third_party/wayland-protocols:xdg_shell_protocol",
  ]
}

fuzzable_proto_library("actions") {
  sources = get_target_outputs(":actions_tmpl")

  # Since the .proto file is under gen/ we need to manually tell the
  # output directory to rebase under the source root.
  proto_out_dir = rebase_path(".", "//")

  deps = [
    ":actions_tmpl",
  ]
}
